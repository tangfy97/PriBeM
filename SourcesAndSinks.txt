<org.apache.lucene.search.PhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.PhraseQuery)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.String findJarServiceProviderName(java.lang.String)> -> _SINK_
<org.glassfish.jersey.server.model.Parameter$7: java.lang.String getValueOf(java.lang.'annotation'.Annotation)> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: boolean access$200(org.apache.lucene.search.function.CustomScoreQuery)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanPayloadCheckQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveNfa_2(int,int)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: void <init>()> -> _SINK_
<org.apache.lucene.search.Query: java.lang.Object clone()> -> _SINK_
<org.glassfish.jersey.internal.LocalizationMessages: java.lang.String QUERY_PARAM_NULL()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: float sumOfSquaredWeights()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void <init>(de.lessvoid.nifty.loaderv2.types.EffectsType)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight: void <init>(org.apache.lucene.search.function.ValueSourceQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.Weight: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.search.IndexSearcher: void search(org.apache.lucene.search.Query,org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: boolean jj_3R_2()> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void registerOutputParameters(java.sql.CallableStatement)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPoolManager: void removePool(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newWildcardQuery(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: java.lang.String name()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$12$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term access$000(org.apache.lucene.search.TermQuery)> -> _SINK_
<org.apache.lucene.search.Query: java.lang.String toString()> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)> -> _SINK_
<com.mxgraph.examples.swing.editor.scxml.search.SCXMLSearch: org.apache.lucene.search.Query getQueryForGettingDocumentOfCell(com.mxgraph.model.mxCell)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.PhraseQuery: int[] getPositions()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.Object clone()> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: java.net.URI _buildFromMap(boolean,boolean,java.util.Map)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String showPrompt(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addParameterFromElement(org.w3c.dom.Element)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$15$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: boolean supportExtension(java.lang.String)> -> _SINK_
<java.sql.SQLException: java.sql.SQLException getNextException()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer: boolean setFreqCurrentDoc()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$SpanQueue: void <init>(org.apache.lucene.search.spans.SpanOrQuery,int)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean next()> -> _SINK_
<org.apache.lucene.search.Query: void <init>()> -> _SINK_
<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term,int)> -> _SINK_
<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: char[] zzUnpackCMap(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: int hashCode()> -> _SINK_
<org.glassfish.jersey.servlet.WebComponent: java.util.List filterQueryParams(java.lang.String,java.util.List,java.util.Collection)> -> _SINK_
<org.apache.lucene.search.spans.NearSpansUnordered: java.lang.String toString()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionRangeQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: void <init>(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void ReInit(org.apache.lucene.queryParser.CharStream)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int addElementWithData(java.lang.Object,int,int,int,int)> -> _SINK_
<org.apache.lucene.search.TopTermsRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<java.sql.Connection: void close()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$23$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: int getBeginColumn()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadSpanUtil: java.util.Collection getPayloadsForQuery(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$17$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: void <init>(org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight,org.apache.lucene.search.spans.TermSpans,org.apache.lucene.search.Weight,org.apache.lucene.search.Similarity,byte[])> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term access$100(org.apache.lucene.search.payloads.PayloadTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa1_2(long)> -> _SINK_
<java.sql.ResultSetMetaData: boolean isWritable(int)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: javax.ws.rs.core.MultivaluedMap decodeQuery(java.lang.String,boolean)> -> _SINK_
<org.apache.lucene.search.WildcardQuery: org.apache.lucene.index.Term getTerm()> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: void main(java.lang.String[])> -> _SINK_
<org.apache.xalan.lib.sql.PooledConnection: boolean inUse()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: java.lang.String toString()> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: java.util.Collection getPayload()> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPool: java.sql.Connection getConnection()> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: org.apache.xalan.lib.sql.SQLQueryParser parse(org.apache.xalan.lib.sql.XConnection,java.lang.String,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: void <init>(org.apache.lucene.search.spans.SpanQuery,org.apache.lucene.search.spans.SpanQuery)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: boolean isPayloadAvailable()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: java.util.List access$000(org.apache.lucene.search.spans.SpanOrQuery)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus: void <init>(java.lang.String,int)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: boolean includesMax()> -> _SINK_
<org.apache.lucene.search.spans.SpanTermQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: boolean scoresDocsOutOfOrder()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getDefaultFontFamily()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: void <init>()> -> _SINK_
<java.sql.SQLException: java.lang.String getSQLState()> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: void setAt(int,java.lang.Object)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$1: void normalize(float)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: void <init>(org.apache.xalan.lib.sql.ObjectArray,int)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: void setTransform(java.awt.geom.AffineTransform)> -> _SINK_
<org.apache.lucene.search.spans.SpanPayloadCheckQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.SloppyPhraseScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.PhraseQuery$PostingsAndFreq[],org.apache.lucene.search.Similarity,int,byte[])> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.BooleanScorer2: void visitSubScorers(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur,org.apache.lucene.search.Scorer$ScorerVisitor)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: org.w3c.dom.Node getNode(int)> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Similarity getSimilarity(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: java.lang.String getField()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _level(int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$4: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<java.sql.ResultSet: java.lang.Object getObject(int)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.function.ValueSourceQuery)> -> _SINK_
<org.glassfish.jersey.server.model.Parameter$7: java.lang.String getValueOf(javax.ws.rs.QueryParam)> -> _SINK_
<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: java.lang.String getName()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa0_3()> -> _SINK_
<org.apache.lucene.queryParser.FastCharStream: void refill()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.Query: float getBoost()> -> _SINK_
<org.glassfish.jersey.client.JerseyWebTarget: org.glassfish.jersey.client.JerseyWebTarget queryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1: void <init>()> -> _SINK_
<java.sql.ResultSetMetaData: int isNullable(int)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: int termArraysHashCode()> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: void <init>(org.apache.lucene.search.DisjunctionMaxQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$7$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$2: void <init>()> -> _SINK_
<org.apache.lucene.search.PrefixFilter: org.apache.lucene.index.Term getPrefix()> -> _SINK_
<org.apache.lucene.search.FilteredQuery$2: int nextDoc()> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: org.apache.lucene.search.spans.SpanQuery access$100(org.apache.lucene.search.spans.SpanNotQuery)> -> _SINK_
<org.apache.lucene.queryParser.Token: void <init>()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus: void <clinit>()> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: org.apache.xalan.extensions.ExpressionContext getExpressionContext()> -> _SINK_
<org.apache.lucene.search.PrefixQuery: int hashCode()> -> _SINK_
<org.apache.xalan.lib.sql.SQLErrorDocument: void <init>(org.apache.xml.dtm.DTMManager,int,java.sql.SQLException)> -> _SINK_
<java.sql.ResultSetMetaData: int getColumnType(int)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Element)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$6$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: boolean skipTo(int)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight: void <init>(org.apache.lucene.search.payloads.PayloadNearQuery,org.apache.lucene.search.spans.SpanQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void ReInit(org.apache.lucene.queryParser.CharStream,int)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: org.glassfish.jersey.uri.internal.JerseyUriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: int Modifiers()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearPayloadCheckQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$26$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.w3c.dom.Element,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.QueryTermVector: void <init>(java.lang.String,org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$TooManyClauses: void <init>()> -> _SINK_
<org.apache.lucene.search.PhraseQuery: void <init>()> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: void <init>(org.apache.lucene.index.TermPositions,int,int,org.apache.lucene.index.Term[])> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query,int,org.apache.lucene.search.Sort)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.function.ValueSourceQuery[])> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: java.lang.String getLowerTerm()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: void processPayload(org.apache.lucene.search.Similarity)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanQuery newBooleanQuery(boolean)> -> _SINK_
<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int zzUnpackRowMap(java.lang.String,int,int[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void main(java.lang.String[])> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int compareTo(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void setFeature(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getFuzzyQuery(java.lang.String,java.lang.String,float)> -> _SINK_
<org.apache.lucene.index.BufferedDeletes: void addQuery(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: int getEndLine()> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$3: void <init>(org.apache.lucene.search.ScoringRewrite,org.apache.lucene.search.Query,org.apache.lucene.search.MultiTermQuery,int[])> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: void <clinit>()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: void clearTotalNumberOfTerms()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: float getMediumFontSize()> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.QueryTermVector: void processTerms(java.lang.String[])> -> _SINK_
<java.sql.Statement: boolean execute(java.lang.String)> -> _SINK_
<org.apache.lucene.search.BooleanClause: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)> -> _SINK_
<org.mozilla.javascript.IRFactory: org.mozilla.javascript.Node createDotQuery(org.mozilla.javascript.Node,org.mozilla.javascript.Node,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanQuery: void <init>()> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newIntRange(java.lang.String,int,java.lang.Integer,java.lang.Integer,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2: void addRange(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: void <init>(org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String,int)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight: void <init>(org.apache.lucene.search.payloads.PayloadTermQuery,org.apache.lucene.search.payloads.PayloadTermQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: int getSlop()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$7: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.io.File)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _exptype(int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void setParameters(java.util.Vector)> -> _SINK_
<org.apache.lucene.search.PrefixFilter: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void jj_add_error_token(int,int)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: int access$200(org.apache.lucene.search.PhraseQuery)> -> _SINK_
<java.sql.Statement: int getUpdateCount()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$18$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: void <init>(java.util.Collection,float)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: java.util.Iterator iterator()> -> _SINK_
<java.sql.PreparedStatement: boolean execute()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: boolean includesMax()> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SINK_
<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.IndexReader)> -> _SINK_
<java.sql.ResultSetMetaData: boolean isDefinitelyWritable(int)> -> _SINK_
<org.apache.lucene.search.NGramPhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.FastCharStream: void <init>(java.io.Reader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newPrefixQuery(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: boolean showConfirm(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void SwitchTo(int)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.xalan.lib.sql.SQLErrorDocument: void createExpandedNameTable()> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$1: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.lucene.search.function.FieldScoreQuery: void <init>(java.lang.String,org.apache.lucene.search.function.FieldScoreQuery$Type)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: void incTotalNumberOfTerms(int)> -> _SINK_
<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PhraseWeight: void <init>(org.apache.lucene.search.PhraseQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,float,int)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.index.FrozenBufferedDeletes$2$1: org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit next()> -> _SINK_
<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus acceptPosition(org.apache.lucene.search.spans.Spans)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStopStringLiteralDfa_2(int,long)> -> _SINK_
<de.lessvoid.nifty.builder.ElementBuilder: void <init>(de.lessvoid.nifty.controls.dynamic.attributes.ControlAttributes)> -> _SINK_
<org.apache.lucene.index.CoalescedDeletes$2$1: org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit next()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: int _nextsib(int)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void yypushback(int)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void jjAddStates(int,int)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query parse(org.apache.lucene.util.Version,java.lang.String,java.lang.String[],org.apache.lucene.search.BooleanClause$Occur[],org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.apache.lucene.search.Searchable: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String,boolean)> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getColumnTypeName(int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token jjFillToken()> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: org.glassfish.jersey.uri.internal.JerseyUriBuilder queryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.document.DateTools$Resolution getDateResolution(java.lang.String)> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight: void <init>(org.apache.lucene.search.MatchAllDocsQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void addToken(char[],int,int,int,int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$2: void <init>(org.apache.xalan.lib.sql.SecuritySupport12)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPoolManager: void <init>()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$3: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.lang.ClassLoader)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.MultiPhraseQuery)> -> _SINK_
<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)> -> _SINK_
<org.apache.lucene.search.PrefixQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$RewriteMethod: org.apache.lucene.search.FilteredTermEnum getTermsEnum(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: boolean includesMin()> -> _SINK_
<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.awt.geom.Dimension2D getViewportSize()> -> _SINK_
<org.apache.xml.utils.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<javax.servlet.http.HttpUtils: java.util.Hashtable parseQueryString(java.lang.String)> -> _SINK_
<org.glassfish.jersey.server.wadl.internal.WadlBuilder: void addHint(com.sun.research.ws.wadl.Application)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearPayloadCheckQuery: void <init>(org.apache.lucene.search.spans.SpanNearQuery,java.util.Collection)> -> _SINK_
<org.apache.lucene.search.PhraseScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.PhraseQuery$PostingsAndFreq[],org.apache.lucene.search.Similarity,byte[])> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: java.text.Collator getCollator()> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,float,int,int)> -> _SINK_
<org.glassfish.jersey.servlet.ServletContainer: void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomScorer: void <init>(org.apache.lucene.search.function.CustomScoreQuery,org.apache.lucene.search.Similarity,org.apache.lucene.index.IndexReader,org.apache.lucene.search.function.CustomScoreQuery$CustomWeight,org.apache.lucene.search.Scorer,org.apache.lucene.search.Scorer[])> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPool: void releaseConnectionOnError(java.sql.Connection)> -> _SINK_
<org.apache.lucene.index.BufferedDeletesStream: long applyQueryDeletes(java.lang.Iterable,org.apache.lucene.index.SegmentReader)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term access$300(org.apache.lucene.search.payloads.PayloadTermQuery)> -> _SINK_
<org.glassfish.jersey.internal.LocalizationMessages: org.glassfish.jersey.internal.l10n.Localizable localizableQUERY_PARAM_NULL()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStopStringLiteralDfa_1(int,long)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: void <init>(org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: java.lang.Number getMin()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: void normalize(float)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: org.apache.lucene.search.spans.SpanQuery access$000(org.apache.lucene.search.spans.SpanNotQuery)> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Query,int)> -> _SINK_
<java.sql.ResultSet: void close()> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PhraseWeight: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.lucene.index.DocumentsWriter: boolean deleteQuery(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantWeight: void <init>(org.apache.lucene.search.ConstantScoreQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus: org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus[] values()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: boolean jj_scan_token(int)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: void <init>(org.apache.lucene.search.spans.SpanOrQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: char BeginToken()> -> _SINK_
<de.lessvoid.nifty.tools.EnumStorage: void <init>(java.lang.Class,de.lessvoid.nifty.tools.Factory)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1$1: void <init>(org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1)> -> _SINK_
<org.apache.lucene.search.Scorer: void visitScorers(org.apache.lucene.search.Scorer$ScorerVisitor)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: org.apache.batik.bridge.ExternalResourceSecurity getExternalResourceSecurity(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.index.CheckIndex: org.apache.lucene.index.CheckIndex$Status$TermIndexStatus testTermIndex(org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,org.apache.lucene.index.SegmentReader)> -> _SINK_
<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query[])> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[])> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: java.util.List getTermArrays()> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Filter)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: void backup(int)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: boolean addRowToDTMFromResultSet()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: void <init>()> -> _SINK_
<org.glassfish.jersey.server.wadl.internal.WadlUtils: boolean isDetailedWadlRequested(javax.ws.rs.core.UriInfo)> -> _SINK_
<java.sql.Connection: java.sql.Statement createStatement()> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: void <init>(org.apache.lucene.util.Version,java.lang.String[],org.apache.lucene.analysis.Analyzer,java.util.Map)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$RewriteMethod: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addParameters(org.w3c.dom.Element)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: void <clinit>()> -> _SINK_
<org.apache.lucene.search.PhraseQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.FilteredQuery: int hashCode()> -> _SINK_
<org.apache.lucene.queryParser.ParseException: java.lang.String initialise(org.apache.lucene.queryParser.Token,int[][],java.lang.String[])> -> _SINK_
<org.apache.xalan.lib.sql.PooledConnection: void setInUse(boolean)> -> _SINK_
<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionRangeQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PhraseWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1: void addRange(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFuzzyQuery(java.lang.String,java.lang.String,float)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void <init>()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer: void <init>(org.apache.lucene.search.payloads.PayloadNearQuery,org.apache.lucene.search.spans.Spans,org.apache.lucene.search.Weight,org.apache.lucene.search.Similarity,byte[])> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.lucene.search.BooleanQuery: java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPool: boolean hasActiveConnections()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc,org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfaWithStates_1(int,int,int)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum,org.apache.lucene.search.NumericRangeQuery)> -> _SINK_
<java.net.URI: java.lang.String getQuery()> -> _SINK_
<org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: java.lang.String getLowerTerm()> -> _SINK_
<org.apache.xalan.lib.sql.SQLErrorDocument: void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception,java.sql.SQLWarning,boolean)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: int getPrecisionStep()> -> _SINK_
<org.glassfish.jersey.uri.UriTemplate: java.net.URI normalize(java.net.URI)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$1: void <init>(org.apache.xalan.lib.sql.SecuritySupport12)> -> _SINK_
<org.apache.lucene.search.FilteredQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: int start()> -> _SINK_
<org.apache.xml.utils.URI: void initialize(org.apache.xml.utils.URI)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>()> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void parse(org.apache.xalan.lib.sql.XConnection,int)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$22$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<java.net.URI: java.lang.String getRawQuery()> -> _SINK_
<org.apache.lucene.search.QueryTermVector: int[] indexesOf(java.lang.String[],int,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: int doc()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomScorer: void <init>(org.apache.lucene.search.function.CustomScoreQuery,org.apache.lucene.search.Similarity,org.apache.lucene.index.IndexReader,org.apache.lucene.search.function.CustomScoreQuery$CustomWeight,org.apache.lucene.search.Scorer,org.apache.lucene.search.Scorer[],org.apache.lucene.search.function.CustomScoreQuery$1)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: org.apache.xalan.lib.sql.SQLDocument getNewDocument(org.apache.xalan.extensions.ExpressionContext)> -> _SINK_
<org.apache.lucene.search.spans.SpanFirstQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$100(org.apache.lucene.search.MultiPhraseQuery)> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: javax.ws.rs.core.MultivaluedMap decodeQuery(java.net.URI,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void jjCheckNAdd(int)> -> _SINK_
<org.apache.lucene.search.Scorer$ScorerVisitor: void visitRequired(org.apache.lucene.search.Query,org.apache.lucene.search.Query,org.apache.lucene.search.Scorer)> -> _SINK_
<org.apache.lucene.search.Scorer$ScorerVisitor: void visitProhibited(org.apache.lucene.search.Query,org.apache.lucene.search.Query,org.apache.lucene.search.Scorer)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod: org.apache.lucene.search.spans.SpanQuery rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: int hashCode()> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: java.lang.String decodeQueryParam(java.lang.String,int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser$JJCalls: void <init>()> -> _SINK_
<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<java.sql.ResultSetMetaData: int getColumnCount()> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int,org.apache.lucene.search.Sort)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void getNodeData(int,org.apache.xml.utils.FastStringBuffer)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite: void addClause(org.apache.lucene.search.BooleanQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: void <init>(java.lang.String)> -> _SINK_
<org.apache.lucene.search.PrefixQuery: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: void <init>(int)> -> _SINK_
<org.apache.lucene.index.FrozenBufferedDeletes$2$1: java.lang.Object next()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: java.lang.String toString()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int[] zzUnpackTrans()> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void close()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void <clinit>()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SINK_
<java.sql.SQLException: int getErrorCode()> -> _SINK_
<java.sql.Statement: boolean getMoreResults()> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: boolean hasErrors()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void apply(de.lessvoid.nifty.loaderv2.types.EffectsType,java.lang.String)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: int hashCode()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.BooleanQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.PrefixQuery: org.apache.lucene.index.Term getPrefix()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<javax.management.MBeanServer: java.util.Set queryNames(javax.management.ObjectName,javax.management.QueryExp)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: int append(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa0_0()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: org.apache.lucene.search.function.ValueSourceQuery[] access$100(org.apache.lucene.search.function.CustomScoreQuery)> -> _SINK_
<org.apache.lucene.queryParser.ParseException: void <init>()> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: void <init>(org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite,int)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int[] zzUnpackAttribute()> -> _SINK_
<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void inlineParser()> -> _SINK_
<org.apache.lucene.search.PhraseQuery: org.apache.lucene.index.Term[] getTerms()> -> _SINK_
<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.BooleanClause)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newDoubleRange(java.lang.String,int,java.lang.Double,java.lang.Double,boolean,boolean)> -> _SINK_
<java.sql.ResultSetMetaData: int getScale(int)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: float getValue()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$1: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: boolean hasParameters()> -> _SINK_
<org.apache.xml.utils.URI: void initialize(org.apache.xml.utils.URI,java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: void <init>()> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Query mergeBooleanQueries(org.apache.lucene.search.BooleanQuery[])> -> _SINK_
<java.sql.SQLWarning: void setNextWarning(java.sql.SQLWarning)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.WildcardQuery: org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addParameter(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void setExpressionContext(org.apache.xalan.extensions.ExpressionContext)> -> _SINK_
<java.sql.ResultSetMetaData: int getPrecision(int)> -> _SINK_
<org.apache.lucene.search.function.FieldScoreQuery$Type: void <init>(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: void applySlop(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.lucene.search.spans.NearSpansOrdered: java.lang.String toString()> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void <init>(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newTermQuery(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean,org.apache.lucene.search.payloads.PayloadFunction)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> -> _SINK_
<org.glassfish.jersey.server.ParamException$QueryParamException: void <init>(java.lang.Throwable,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: float getValue()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getPrefix(int)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: float sumOfSquaredWeights()> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: void decodeQueryParam(javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void <init>(org.apache.xml.dtm.DTMManager,int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void populateStatement(java.sql.PreparedStatement,org.apache.xalan.extensions.ExpressionContext)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$SpanQueue: boolean lessThan(java.lang.Object,java.lang.Object)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: void <init>(org.apache.lucene.search.NumericRangeQuery)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa0_1()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void yybegin(int)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void freeUnused()> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: boolean includesLower()> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1$1: void addClause(org.apache.lucene.search.spans.SpanOrQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.FilteredQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$2: int advance(int)> -> _SINK_
<org.apache.lucene.search.Query: void setBoost(float)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _nextsib(int)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$16$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.awt.geom.AffineTransform)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight$1: void <init>(org.apache.lucene.search.TermQuery$TermWeight,org.apache.lucene.index.IndexReader,org.apache.lucene.search.TermQuery,int[])> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newFuzzyQuery(org.apache.lucene.index.Term,float,int)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: boolean hasEffectTypes(de.lessvoid.nifty.effects.EffectEventId)> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: java.lang.String getUpperTerm()> -> _SINK_
<org.glassfish.jersey.server.internal.monitoring.jmx.MBeanExposer: void unregisterJerseyMBeans(boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: int end()> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.NGramPhraseQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void jjCheckNAddStates(int,int)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: void <init>(float)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Query(java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$19$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<java.sql.CallableStatement: void registerOutParameter(int,int)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: org.apache.lucene.search.spans.Spans top()> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)> -> _SINK_
<java.sql.Driver: java.sql.Connection connect(java.lang.String,java.util.Properties)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: int access$000()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$14$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery$1: boolean next()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$20$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void addEventEffect(de.lessvoid.nifty.effects.EffectEventId,de.lessvoid.nifty.loaderv2.types.EffectType)> -> _SINK_
<java.sql.PreparedStatement: void setObject(int,java.lang.Object,int,int)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: java.util.List clauses()> -> _SINK_
<org.apache.lucene.search.NGramPhraseQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: int getMaxSize()> -> _SINK_
<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)> -> _SINK_
<java.sql.ResultSetMetaData: boolean isSigned(int)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void mergeEffects(de.lessvoid.nifty.loaderv2.types.EffectsType)> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: java.lang.String toString()> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: java.lang.String toTemplate()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query TopLevelQuery(java.lang.String)> -> _SINK_
<org.glassfish.jersey.server.internal.routing.UriRoutingContext: javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int,org.apache.lucene.search.Sort)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: java.lang.String getTypeName()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: java.lang.Number getMax()> -> _SINK_
<org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory: void <init>(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor,boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: org.apache.lucene.search.Collector wrapCollector(org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$21$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int[] zzUnpackRowMap()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.QueryWrapperFilter: int hashCode()> -> _SINK_
<org.glassfish.jersey.servlet.ServletContainer: void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<java.sql.Statement: java.sql.SQLWarning getWarnings()> -> _SINK_
<org.apache.lucene.search.SpanQueryFilter: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void <clinit>()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.awt.geom.AffineTransform getTransform()> -> _SINK_
<org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Scorer getFilteredScorer(org.apache.lucene.index.IndexReader,org.apache.lucene.search.Similarity,org.apache.lucene.search.Weight,org.apache.lucene.search.Weight,org.apache.lucene.search.Filter)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: boolean initSpanQueue(int)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newIntRange(java.lang.String,int,java.lang.Integer,java.lang.Integer,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: float getSpanScore()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getNodeName(int)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _prevsib(int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: boolean isCallable()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanPayloadCheckQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Query)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: java.net.URI _build(boolean,boolean,java.lang.Object[])> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void releaseConnectionOnError(java.sql.Connection)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: java.util.Iterator iterator()> -> _SINK_
<org.apache.xerces.util.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: java.util.ArrayList access$000(org.apache.lucene.search.DisjunctionMaxQuery)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: java.lang.String getUpperTerm()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveNfa_0(int,int)> -> _SINK_
<org.apache.lucene.index.DocumentsWriter: boolean deleteQueries(org.apache.lucene.search.Query[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfaWithStates_2(int,int,int)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.SpanQueryFilter: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$2: void <init>(org.apache.lucene.search.Similarity,org.apache.lucene.search.Weight,org.apache.lucene.search.DocIdSetIterator,org.apache.lucene.search.Scorer)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getLocalNameFromExpandedNameID(int)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: void <init>(org.apache.lucene.search.function.CustomScoreQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void copyEffects(de.lessvoid.nifty.loaderv2.types.EffectsType)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xalan.lib.sql.SQLErrorDocument buildErrorDocument()> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xml.utils.URI: void setQueryString(java.lang.String)> -> _SINK_
<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()> -> _SINK_
<org.apache.xerces.util.URI: void setQueryString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer: void getPayloads(org.apache.lucene.search.spans.Spans[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: boolean jj_3_1()> -> _SINK_
<java.sql.SQLWarning: java.sql.SQLWarning getNextWarning()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: int getSlop()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void enableDefaultConnectionPool()> -> _SINK_
<org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor: java.lang.String getCallbackName(org.glassfish.jersey.server.JSONP)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser$LookaheadSuccess: void <init>()> -> _SINK_
<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult applyDeletes(org.apache.lucene.index.IndexWriter$ReaderPool,java.util.List)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void <init>(java.lang.String,java.lang.String)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: java.lang.String getCollectionString(de.lessvoid.nifty.effects.EffectEventId,int)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: boolean isOutput()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.PhraseQuery newPhraseQuery()> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: java.util.Set access$100(org.apache.lucene.search.TermQuery$TermWeight)> -> _SINK_
<org.apache.xml.utils.URI: java.lang.String getQueryString()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query newMatchAllDocsQuery()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: void <init>(int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$5: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.io.File)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token getNextToken()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getNodeNameX(int)> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$3: boolean collect(org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: boolean getFileExists(java.io.File)> -> _SINK_
<org.mozilla.javascript.xmlimpl.XMLObjectImpl: org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: java.lang.Object clone()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getXMLParserClassName()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: int getPrecisionStep()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: org.apache.xml.utils.XMLString getStringValue(int)> -> _SINK_
<org.apache.lucene.search.spans.SpanWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: int jj_ntk()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfaWithStates_3(int,int,int)> -> _SINK_
<org.apache.lucene.search.ConstantScoreAutoRewrite: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: void <init>(org.apache.lucene.search.NumericRangeQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.FilteredQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionRangeQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$1: org.apache.lucene.search.BooleanQuery getTopLevelQuery()> -> _SINK_
<org.glassfish.jersey.server.filter.HttpMethodOverrideFilter: void filter(javax.ws.rs.container.ContainerRequestContext)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int[] zzUnpackAction()> -> _SINK_
<org.apache.lucene.search.SpanQueryFilter: org.apache.lucene.search.SpanFilterResult bitSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void ReInit(org.apache.lucene.queryParser.CharStream)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: void setSlop(int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: void normalize(float)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: org.apache.lucene.search.Explanation doExplain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPoolManager: org.apache.xalan.lib.sql.ConnectionPool getPool(java.lang.String)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: boolean includesMin()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.BooleanClause newBooleanClause(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)> -> _SINK_
<org.apache.lucene.search.Similarity: float queryNorm(float)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: int access$200(org.apache.lucene.search.MultiPhraseQuery)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: java.util.ArrayList access$100(org.apache.lucene.search.PhraseQuery)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int allocateNodeObject(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: void <init>(java.lang.String,int,org.apache.lucene.document.NumericField$DataType,java.lang.Number,java.lang.Number,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.BooleanClause: java.lang.String toString()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionRangeQuery: void <init>(org.apache.lucene.search.spans.SpanQuery,int,int)> -> _SINK_
<javax.ws.rs.QueryParam: java.lang.String value()> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Class class$(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.String lookUpFactoryClassName(java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod: void <init>()> -> _SINK_
<org.apache.lucene.queryParser.TokenMgrError: java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void finalize()> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: java.lang.String getField()> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void execute(org.apache.xalan.lib.sql.XConnection,org.apache.xalan.lib.sql.SQLQueryParser)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: org.apache.lucene.search.MultiTermQuery$RewriteMethod getRewriteMethod()> -> _SINK_
<org.apache.lucene.search.TermCollectingRewrite: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$3$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite: int getMaxSize()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: void checkLoadScript(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.lucene.search.spans.SpanWeight: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.apache.lucene.search.QueryWrapperFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanQuery: java.lang.String getField()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void translateSpecialValues(de.lessvoid.nifty.Nifty,de.lessvoid.nifty.screen.Screen)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: void score(org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: java.lang.String getFeature(java.lang.String)> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: java.lang.String decode(java.lang.String,org.glassfish.jersey.uri.UriComponent$Type)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$24$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.glassfish.jersey.client.JerseyWebTarget: javax.ws.rs.client.WebTarget queryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.queryParser.TokenMgrError: void <init>(java.lang.String,int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void executeSQLStatement()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: boolean jjCanMove_0(int,int,int,long,long)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: float getPayloadScore()> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PhraseWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearPayloadCheckQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery$DisjunctionMaxWeight: void normalize(float)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: char readChar()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void addClause(java.util.List,int,int,org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newFloatRange(java.lang.String,java.lang.Float,java.lang.Float,boolean,boolean)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: java.lang.String discardEscapeChar(java.lang.String)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPool: void setPoolEnabled(boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: boolean next()> -> _SINK_
<org.apache.lucene.queryParser.TokenMgrError: void <init>(boolean,int,int,int,java.lang.String,char,int)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList access$000(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: java.lang.String access$300(org.apache.lucene.search.PhraseQuery)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1$1: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<de.lessvoid.nifty.builder.ElementBuilder: void onEffect(de.lessvoid.nifty.effects.EffectEventId,de.lessvoid.nifty.builder.EffectBuilder)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.text.Collator)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.WildcardQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: boolean isCoordDisabled()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newLongRange(java.lang.String,int,java.lang.Long,java.lang.Long,boolean,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void initializePool()> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: java.lang.Number getMax()> -> _SINK_
<org.apache.lucene.search.TermQuery: org.apache.lucene.index.Term getTerm()> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: java.lang.String getValue()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void jj_la1_init_0()> -> _SINK_
<org.apache.lucene.search.spans.NearSpansOrdered: void <init>(org.apache.lucene.search.spans.SpanNearQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser$Operator: void <clinit>()> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: boolean includesUpper()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: float access$100(org.apache.lucene.search.DisjunctionMaxQuery)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int zzUnpackAttribute(java.lang.String,int,int[])> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query parse(org.apache.lucene.util.Version,java.lang.String[],java.lang.String[],org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: void <init>(org.apache.lucene.search.spans.SpanQuery,java.lang.String)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newLongRange(java.lang.String,java.lang.Long,java.lang.Long,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.TermCollectingRewrite: void <init>()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void <init>(org.apache.lucene.queryParser.CharStream)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: void <init>(org.apache.lucene.search.TermQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$2: int advanceToNextCommonDoc()> -> _SINK_
<org.apache.lucene.search.NGramPhraseQuery: void <init>(int)> -> _SINK_
<org.apache.lucene.queryParser.TokenMgrError: java.lang.String addEscapes(java.lang.String)> -> _SINK_
<org.apache.lucene.search.TermQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.SQLErrorDocument: void buildBasicStructure(java.lang.Exception)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadSpanUtil: void getPayloads(java.util.Collection,org.apache.lucene.search.spans.SpanQuery)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer$1: void <init>(org.apache.lucene.search.ConstantScoreQuery$ConstantScorer,org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: void init(int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> -> _SINK_
<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc,org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Clause(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: org.apache.lucene.search.spans.SpanQuery[] getClauses()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query parse(java.lang.String)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: org.apache.lucene.search.function.CustomScoreProvider getCustomScoreProvider(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.NRTManager$TrackingIndexWriter: long deleteDocuments(org.apache.lucene.search.Query)> -> _SINK_
<org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable enterDotQuery(java.lang.Object,org.mozilla.javascript.Scriptable)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.spans.SpanWeight: void <init>(org.apache.lucene.search.spans.SpanQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: boolean jjCanMove_1(int,int,int,long,long)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: void <init>(org.apache.lucene.search.spans.SpanPositionCheckQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$1: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: java.lang.String getField()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: void addClause(org.apache.lucene.search.spans.SpanQuery)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanScorer: void processPayloads(java.util.Collection,int,int)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: int hashCode()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void addToken(int)> -> _SINK_
<java.sql.ResultSetMetaData: boolean isSearchable(int)> -> _SINK_
<org.apache.lucene.search.TermCollectingRewrite: void collectTerms(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery,org.apache.lucene.search.TermCollectingRewrite$TermCollector)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: void encodeQuery()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$2: void <init>()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanWeight: float sumOfSquaredWeights()> -> _SINK_
<org.mozilla.javascript.NativeWith: java.lang.Object updateDotQuery(boolean)> -> _SINK_
<de.lessvoid.nifty.controls.dynamic.attributes.ControlEffectsAttributes: void <init>(de.lessvoid.nifty.loaderv2.types.EffectsType)> -> _SINK_
<org.apache.lucene.search.spans.SpanWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$RewriteMethod: void <init>()> -> _SINK_
<java.sql.CallableStatement: java.lang.Object getObject(int)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String getField()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$1$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: boolean setFreqCurrentDoc()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: boolean nextNode()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String,boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery$1: boolean skipTo(int)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight$1: void add(int,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PhraseWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$1: void addClause(org.apache.lucene.search.BooleanQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void setPoolEnabled(boolean)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<java.sql.Statement: java.sql.ResultSet getResultSet()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getAlternateStyleSheet()> -> _SINK_
<org.apache.lucene.search.ConstantScoreAutoRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<java.net.URL: java.lang.String getQuery()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: float getBolderFontWeight(float)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: java.lang.Object clone()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void dumpDTM()> -> _SINK_
<de.lessvoid.nifty.controls.dynamic.attributes.ControlEffectsAttributes: void <init>()> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$8$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum,org.apache.lucene.search.NumericRangeQuery)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfa_3(int,long)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.spans.SpanFirstQuery: void <init>(org.apache.lucene.search.spans.SpanQuery,int)> -> _SINK_
<org.glassfish.jersey.server.internal.routing.UriRoutingContext: javax.ws.rs.core.MultivaluedMap getQueryParameters()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$1: void <init>(org.apache.lucene.search.FilteredQuery,org.apache.lucene.search.Weight,org.apache.lucene.search.Similarity)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1: org.apache.lucene.search.spans.SpanQuery rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token newToken(int)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: boolean includesLower()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int zzUnpackTrans(java.lang.String,int,int[])> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void init(java.lang.String,java.lang.String,java.util.Properties)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Class lookUpFactoryClass(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token getToken(int)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean termCompare(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfa_2(int,long)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: float score()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getPrefixQuery(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: boolean jj_2_1(int)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: void <init>(org.apache.lucene.util.Version,java.lang.String[],org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void setDriver(java.lang.String)> -> _SINK_
<org.apache.lucene.search.FilteredQuery$1: float sumOfSquaredWeights()> -> _SINK_
<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$6: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.lang.ClassLoader,java.lang.String)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight$PayloadTermSpanScorer: org.apache.lucene.search.Explanation explain(int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: void addClause(org.apache.lucene.search.spans.SpanOrQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: java.lang.Number getMin()> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: void <clinit>()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void ReInitRounds()> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: int getTotalNumberOfTerms()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<de.lessvoid.nifty.builder.ElementBuilder: void connectAttributes()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$13$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void jj_save(int,int)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer: float score()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void <init>(java.io.Reader)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer$1: void setScorer(org.apache.lucene.search.Scorer)> -> _SINK_
<org.apache.lucene.queryParser.Token: org.apache.lucene.queryParser.Token newToken(int,java.lang.String)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: void search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStopStringLiteralDfa_3(int,long)> -> _SINK_
<org.apache.lucene.search.spans.SpanFirstQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.glassfish.jersey.server.ContainerRequest: java.net.URI getAbsolutePath()> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: void add(java.util.Collection)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPoolManager: void init()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getUserStyleSheetURI()> -> _SINK_
<org.apache.lucene.search.BooleanClause: int hashCode()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newIntRange(java.lang.String,java.lang.Integer,java.lang.Integer,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$1: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<java.sql.Statement: void close()> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Query combine(org.apache.lucene.search.Query[])> -> _SINK_
<org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider: org.glassfish.hk2.api.Factory createValueFactory(org.glassfish.jersey.server.model.Parameter)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearPayloadCheckQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: void <init>(org.apache.lucene.search.spans.SpanQuery)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: float getLighterFontWeight(float)> -> _SINK_
<org.apache.lucene.search.QueryWrapperFilter: void <init>(org.apache.lucene.search.Query)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void convertCopy(de.lessvoid.nifty.effects.EffectEventId,java.util.Collection)> -> _SINK_
<org.apache.lucene.search.TermQuery$TermWeight: org.apache.lucene.search.Query getQuery()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void yyreset(java.io.Reader)> -> _SINK_
<java.sql.ResultSetMetaData: int getColumnDisplaySize(int)> -> _SINK_
<org.apache.lucene.search.BooleanClause: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.ScoringRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.Token: void <init>(int,java.lang.String)> -> _SINK_
<org.apache.lucene.search.Query: int hashCode()> -> _SINK_
<org.apache.lucene.search.FilteredQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<java.sql.ResultSetMetaData: boolean isCaseSensitive(int)> -> _SINK_
<org.apache.lucene.queryParser.Token: void <init>(int)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getWildcardQuery(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.Query: org.apache.lucene.search.Weight weight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveNfa_3(int,int)> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: int hashCode()> -> _SINK_
<org.mozilla.javascript.Parser: org.mozilla.javascript.Node memberExprTail(boolean,org.mozilla.javascript.Node)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void addConnection(org.apache.xalan.lib.sql.PooledConnection)> -> _SINK_
<org.apache.lucene.search.QueryWrapperFilter$1: void <init>(org.apache.lucene.search.QueryWrapperFilter,org.apache.lucene.search.Weight,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: boolean getFileExists(java.io.File)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int yylength()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument$CharacterNodeHandler: void characters(org.w3c.dom.Node)> -> _SINK_
<org.apache.lucene.search.QueryTermVector: int indexOf(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xalan.lib.sql.ConnectionPool getConnectionPool()> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: org.apache.lucene.search.BooleanQuery getTopLevelQuery()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void removeWithTag(java.lang.String)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: java.lang.Object clone()> -> _SINK_
<org.apache.lucene.search.MultiSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void jjCheckNAddTwoStates(int,int)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: void <init>()> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<de.lessvoid.nifty.controls.dynamic.attributes.ControlEffectsAttributes: de.lessvoid.nifty.loaderv2.types.EffectsType create()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getLocalName(int)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String showPrompt(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.ParseException generateParseException()> -> _SINK_
<org.apache.lucene.queryParser.CharStream: java.lang.String GetImage()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getNamespaceURI(int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getWildcardQuery(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanClause[] getClauses()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: boolean zzRefill()> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void <init>(org.apache.xml.dtm.DTMManager,int)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void setIsOutput(boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: void setRewriteMethod(org.apache.lucene.search.MultiTermQuery$RewriteMethod)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer: void <init>(org.apache.lucene.search.function.ValueSourceQuery,org.apache.lucene.search.Similarity,org.apache.lucene.index.IndexReader,org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: java.lang.String getField()> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getSchemaName(int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: void setRewriteMethod(org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod)> -> _SINK_
<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery$PayloadNearSpanWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.lwjgl.opengl.EXTFramebufferObject: void glRenderbufferStorageEXT(int,int,int,int)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadSpanUtil: void queryToSpanQuery(org.apache.lucene.search.Query,java.util.Collection)> -> _SINK_
<org.apache.lucene.search.Scorer$ScorerVisitor: void visitOptional(org.apache.lucene.search.Query,org.apache.lucene.search.Query,org.apache.lucene.search.Scorer)> -> _SINK_
<org.mozilla.javascript.ScriptRuntime: java.lang.Object updateDotQuery(boolean,org.mozilla.javascript.Scriptable)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: int getMaxClauseCount()> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getTableName(int)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: void <init>()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$1: void <clinit>()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveNfa_1(int,int)> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getColumnName(int)> -> _SINK_
<java.sql.ResultSet: boolean next()> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.TermQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: java.text.Collator getCollator()> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer: int docID()> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$SpanQueue: boolean lessThan(org.apache.lucene.search.spans.Spans,org.apache.lucene.search.spans.Spans)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void releaseConnection(java.sql.Connection)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newFloatRange(java.lang.String,int,java.lang.Float,java.lang.Float,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: void <init>()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: boolean access$000(org.apache.lucene.search.payloads.PayloadTermQuery)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: org.glassfish.jersey.uri.internal.JerseyUriBuilder replaceQuery(java.lang.String)> -> _SINK_
<org.apache.lucene.search.IndexSearcher: void search(org.apache.lucene.search.Weight,org.apache.lucene.search.Filter,org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: org.apache.lucene.queryParser.Token getNextToken()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getLanguages()> -> _SINK_
<org.apache.lucene.search.WildcardQuery: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: void <init>(org.apache.lucene.search.BooleanQuery,org.apache.lucene.search.Searcher,boolean)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getPrefixQuery(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.PooledConnection: void <init>(java.sql.Connection)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: java.sql.SQLWarning checkWarnings()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void resolveParameters(de.lessvoid.xml.xpp3.Attributes)> -> _SINK_
<javax.servlet.http.HttpUtils: java.util.Hashtable parsePostData(int,javax.servlet.ServletInputStream)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)> -> _SINK_
<org.apache.lucene.queryParser.TokenMgrError: java.lang.String getMessage()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: boolean hasFeature(java.lang.String)> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getCatalogName(int)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean)> -> _SINK_
<org.apache.xerces.util.URI: java.lang.String getQueryString()> -> _SINK_
<org.apache.lucene.search.Query: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query Term(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection getConnection()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void jj_rescan_token()> -> _SINK_
<org.apache.lucene.search.FilteredQuery: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void createExpandedNameTable()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.queryParser.Token jj_consume_token(int)> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: javax.ws.rs.core.MultivaluedMap decodeQuery(java.lang.String,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceScorer: void <init>(org.apache.lucene.search.function.ValueSourceQuery,org.apache.lucene.search.Similarity,org.apache.lucene.index.IndexReader,org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight,org.apache.lucene.search.function.ValueSourceQuery$1)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: java.lang.String access$300(org.apache.lucene.search.MultiPhraseQuery)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void finalize()> -> _SINK_
<org.glassfish.jersey.servlet.WebComponent: java.util.List getDecodedQueryParamList(java.lang.String)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: org.glassfish.jersey.uri.internal.JerseyUriBuilder uri(java.net.URI)> -> _SINK_
<org.apache.lucene.search.TermQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: void <init>(org.apache.lucene.search.MultiPhraseQuery,org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.ConstantScoreAutoRewrite: void addClause(org.apache.lucene.search.Query,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.TermCollectingRewrite: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: java.util.Collection getEventEffectTypes(de.lessvoid.nifty.effects.EffectEventId)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void initFromElement(org.w3c.dom.Element)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$25$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void setProtocol(java.util.Properties)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery$CustomWeight: float getValue()> -> _SINK_
<org.apache.lucene.search.BooleanQuery: java.lang.Object clone()> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: void schemeSpecificPart(org.glassfish.jersey.uri.internal.UriParser)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: org.apache.lucene.search.Query access$000(org.apache.lucene.search.function.CustomScoreQuery)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void <init>(org.apache.lucene.queryParser.CharStream,int)> -> _SINK_
<org.glassfish.jersey.uri.internal.JerseyUriBuilder: javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStopAtPos(int,int)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.awt.Point getClientAreaLocationOnScreen()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: boolean jjCanMove_2(int,int,int,long,long)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.IndexReader,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery$ValueSourceWeight: float getValue()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: java.lang.String getField()> -> _SINK_
<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: int compareTo(org.apache.lucene.search.PhraseQuery$PostingsAndFreq)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: float getPixelUnitToMillimeter()> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: void <init>(org.apache.lucene.search.function.ValueSource)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1$1: org.apache.lucene.search.spans.SpanOrQuery getTopLevelQuery()> -> _SINK_
<org.mozilla.javascript.xmlimpl.XMLWithScope: void initAsDotQuery()> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.ClassLoader findClassLoader()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newDoubleRange(java.lang.String,int,java.lang.Double,java.lang.Double,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.search.payloads.PayloadFunction)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: int[] getPositions()> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllScorer: void <init>(org.apache.lucene.search.MatchAllDocsQuery,org.apache.lucene.index.IndexReader,org.apache.lucene.search.Similarity,org.apache.lucene.search.Weight,byte[])> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[])> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$11$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.spans.NearSpansOrdered: void <init>(org.apache.lucene.search.spans.SpanNearQuery,org.apache.lucene.index.IndexReader,boolean)> -> _SINK_
<org.mozilla.javascript.optimizer.BodyCodegen: void generateExpression(org.mozilla.javascript.Node,org.mozilla.javascript.Node)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: void <init>(org.apache.lucene.search.ConstantScoreQuery,org.apache.lucene.search.Similarity,org.apache.lucene.search.DocIdSetIterator,org.apache.lucene.search.Weight)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _parent(int)> -> _SINK_
<org.apache.lucene.queryParser.FastCharStream: char BeginToken()> -> _SINK_
<org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit: void <init>(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: boolean isEnabled()> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newDoubleRange(java.lang.String,java.lang.Double,java.lang.Double,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term[],int)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void ReInit(org.apache.lucene.queryParser.QueryParserTokenManager)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: boolean termArraysEquals(java.util.List,java.util.List)> -> _SINK_
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void setTypeName(java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getBooleanQuery(java.util.List,boolean)> -> _SINK_
<org.apache.lucene.search.Scorer: void visitSubScorers(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur,org.apache.lucene.search.Scorer$ScorerVisitor)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: java.util.Vector getParameters()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addTypeToData(java.lang.String)> -> _SINK_
<org.apache.lucene.search.NumericRangeFilter: org.apache.lucene.search.NumericRangeFilter newLongRange(java.lang.String,int,java.lang.Long,java.lang.Long,boolean,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: void debugPrintln(java.lang.String)> -> _SINK_
<java.sql.Statement: void clearWarnings()> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPool: void releaseConnection(java.sql.Connection)> -> _SINK_
<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: org.fife.ui.rsyntaxtextarea.Token yylex()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.QueryTermVector: void <init>(java.lang.String[])> -> _SINK_
<org.apache.lucene.search.TermQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: void add(org.apache.lucene.index.Term)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: boolean skipTo(int)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsScoringBooleanQueryRewrite: void addClause(org.apache.lucene.search.BooleanQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int addAttributeToNode(java.lang.Object,int,int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void createExpandedNameTable()> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void <init>()> -> _SINK_
<org.glassfish.jersey.servlet.ServletContainer: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void <init>(org.apache.lucene.queryParser.QueryParserTokenManager)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanFirstQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite: void <init>()> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: java.sql.Connection getConnection()> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa0_2()> -> _SINK_
<org.apache.lucene.search.WildcardQuery: int hashCode()> -> _SINK_
<org.glassfish.jersey.servlet.WebComponent: void filterFormParameters(javax.servlet.http.HttpServletRequest,org.glassfish.jersey.server.ContainerRequest)> -> _SINK_
<org.glassfish.jersey.uri.UriComponent: java.lang.String fullRelativeUri(java.net.URI)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void error(java.lang.String)> -> _SINK_
<org.apache.lucene.search.ConstantScoreAutoRewrite: org.apache.lucene.search.BooleanQuery getTopLevelQuery()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery$1: java.lang.String toString()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionRangeQuery: int hashCode()> -> _SINK_
<java.sql.DriverManager: void registerDriver(java.sql.Driver)> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.WildcardQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void setAutoGeneratePhraseQueries(boolean)> -> _SINK_
<java.sql.SQLException: void <init>(java.lang.String)> -> _SINK_
<org.apache.lucene.search.Searcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query,int,org.apache.lucene.search.Sort)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.function.FieldScoreQuery: org.apache.lucene.search.function.ValueSource getValueSource(java.lang.String,org.apache.lucene.search.function.FieldScoreQuery$Type)> -> _SINK_
<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$10$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,float)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: java.lang.String getMedia()> -> _SINK_
<java.sql.SQLWarning: void <init>(java.lang.String,java.lang.String,int)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery$MatchAllDocsWeight: float getValue()> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: boolean doNext()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void close(org.apache.xalan.lib.sql.SQLDocument)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: org.apache.lucene.search.spans.SpanOrQuery getTopLevelQuery()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void <init>(java.io.InputStream)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addParameterFromElement(org.w3c.dom.NodeList)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int _firstch(int)> -> _SINK_
<org.mozilla.javascript.optimizer.BodyCodegen: void visitDotQuery(org.mozilla.javascript.Node,org.mozilla.javascript.Node)> -> _SINK_
<org.apache.xalan.lib.sql.ConnectionPoolManager: void registerPool(java.lang.String,org.apache.xalan.lib.sql.ConnectionPool)> -> _SINK_
<org.apache.lucene.search.ConstantScoreQuery$ConstantScorer: boolean score(org.apache.lucene.search.Collector,int,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: boolean includesUpper()> -> _SINK_
<com.mxgraph.examples.swing.editor.scxml.search.SCXMLSearch: void updateIndex(java.util.Collection,boolean)> -> _SINK_
<org.apache.lucene.search.Query: void extractTerms(java.util.Set)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void <init>(org.apache.lucene.util.Version,java.lang.String,org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.glassfish.jersey.server.JSONP: java.lang.String queryParam()> -> _SINK_
<org.apache.lucene.search.Searcher: void search(org.apache.lucene.search.Query,org.apache.lucene.search.Collector)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: void <init>(org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.spans.NearSpansUnordered: void <init>(org.apache.lucene.search.spans.SpanNearQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: int getBeginLine()> -> _SINK_
<org.apache.lucene.search.spans.SpanTermQuery: void <init>(org.apache.lucene.index.Term)> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void <init>(de.lessvoid.xml.xpp3.Attributes)> -> _SINK_
<javax.microedition.io.Connector$URLConnection: java.lang.String getQuery()> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: int getType()> -> _SINK_
<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.search.NumericRangeQuery newFloatRange(java.lang.String,int,java.lang.Float,java.lang.Float,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.spans.SpanNotQuery$1: void <init>(org.apache.lucene.search.spans.SpanNotQuery,org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$1: void <init>()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void disableDefaultConnectionPool()> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: java.sql.Connection createConnection()> -> _SINK_
<org.apache.lucene.search.spans.SpanPayloadCheckQuery: void <init>(org.apache.lucene.search.spans.SpanQuery,java.util.Collection)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: int hashCode()> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> -> _SINK_
<org.apache.lucene.search.PrefixQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.ConstantScoreAutoRewrite: void addClause(org.apache.lucene.search.BooleanQuery,org.apache.lucene.index.Term,float)> -> _SINK_
<org.apache.lucene.search.spans.SpanTermQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery: int getTotalNumberOfTerms()> -> _SINK_
<de.lessvoid.nifty.controls.dynamic.attributes.ControlEffectsAttributes: void addEffectAttribute(de.lessvoid.nifty.effects.EffectEventId,de.lessvoid.nifty.controls.dynamic.attributes.ControlEffectAttributes)> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.index.Term getTerm()> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.NRTManager$TrackingIndexWriter: long deleteDocuments(org.apache.lucene.search.Query[])> -> _SINK_
<org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable leaveDotQuery(org.mozilla.javascript.Scriptable)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void addToken(int,int,int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: int Conjunction()> -> _SINK_
<org.apache.lucene.search.spans.SpanNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: java.lang.String getSQLQuery()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12$8: void <init>(org.apache.xalan.lib.sql.SecuritySupport12,java.io.File)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: int hexToInt(char)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: org.w3c.dom.svg.SVGDocument getBrokenLinkDocument(org.w3c.dom.Element,java.lang.String,java.lang.String)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: void zzScanError(int)> -> _SINK_
<org.apache.lucene.search.MultiPhraseQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod getRewriteMethod()> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void setName(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: boolean testConnection()> -> _SINK_
<org.apache.lucene.search.DisjunctionMaxScorer: void visitSubScorers(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur,org.apache.lucene.search.Scorer$ScorerVisitor)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.MultiPhraseQuery newMultiPhraseQuery()> -> _SINK_
<java.sql.Statement: java.sql.Connection getConnection()> -> _SINK_
<org.apache.lucene.index.CoalescedDeletes$2$1: java.lang.Object next()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$9$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,float)> -> _SINK_
<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: void <init>(org.apache.lucene.queryParser.CharStream)> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.search.spans.SpanPayloadCheckQuery: int hashCode()> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: int zzUnpackAction(java.lang.String,int,int[])> -> _SINK_
<org.glassfish.jersey.server.internal.scanning.PackageNamesScanner: java.lang.String toExternalForm(java.net.URL)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: void cloneAttributeFromNode(int,int)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$5$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery getMaskedQuery()> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void setURL(java.lang.String)> -> _SINK_
<com.mxgraph.examples.swing.editor.scxml.search.SCXMLSearch: java.util.ArrayList find(java.lang.String)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.search.payloads.PayloadFunction,boolean)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query parse(org.apache.lucene.util.Version,java.lang.String[],java.lang.String[],org.apache.lucene.search.BooleanClause$Occur[],org.apache.lucene.analysis.Analyzer)> -> _SINK_
<org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider: org.glassfish.jersey.server.internal.inject.AbstractContainerRequestValueFactory createValueFactory(org.glassfish.jersey.server.model.Parameter)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: int hashCode()> -> _SINK_
<org.mozilla.javascript.Interpreter: java.lang.Object interpretLoop(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object)> -> _SINK_
<org.apache.lucene.search.BooleanQuery: void <init>(boolean)> -> _SINK_
<org.apache.lucene.search.MultiTermQuery$TopTermsBoostOnlyBooleanQueryRewrite: org.apache.lucene.search.BooleanQuery getTopLevelQuery()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: org.apache.batik.gvt.event.EventDispatcher getEventDispatcher()> -> _SINK_
<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term access$200(org.apache.lucene.search.payloads.PayloadTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.CharStream: int getEndColumn()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void close()> -> _SINK_
<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$4$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper,java.lang.String,java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: int map_type(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.DefaultConnectionPool: void <init>()> -> _SINK_
<org.apache.lucene.search.BooleanQuery$BooleanWeight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.IndexReader,int)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjMoveStringLiteralDfa1_1(long)> -> _SINK_
<org.apache.xalan.lib.sql.PooledConnection: void close()> -> _SINK_
<org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory: java.lang.Object provide()> -> _SINK_
<org.apache.lucene.search.Searcher: void search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,org.apache.lucene.search.Collector)> -> _SINK_
<org.glassfish.jersey.uri.internal.UriParser: java.lang.String getQuery()> -> _SINK_
<org.apache.lucene.search.spans.SpanFirstQuery: java.lang.Object clone()> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: boolean isXMLParserValidating()> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.spans.SpanQuery rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.lucene.queryParser.FastCharStream: char readChar()> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: java.lang.String getNodeValue(int)> -> _SINK_
<org.apache.lucene.search.MatchAllDocsQuery: java.lang.String access$000(org.apache.lucene.search.MatchAllDocsQuery)> -> _SINK_
<org.apache.lucene.search.payloads.PayloadNearQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.lucene.queryParser.ParseException: void <init>(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanTermQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.text.Collator)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: void setSlop(int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLDocument: void extractSQLMetaData(java.sql.ResultSetMetaData)> -> _SINK_
<de.lessvoid.nifty.tools.EnumStorage: java.lang.Object get(java.lang.Enum)> -> _SINK_
<org.apache.lucene.queryParser.MultiFieldQueryParser: org.apache.lucene.search.Query getFieldQuery(java.lang.String,java.lang.String,int)> -> _SINK_
<org.apache.lucene.search.PhraseQuery: int getSlop()> -> _SINK_
<org.apache.lucene.queryParser.ParseException: java.lang.String add_escapes(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int getExpandedTypeID(int)> -> _SINK_
<org.apache.lucene.search.TermRangeFilter: java.lang.String getField()> -> _SINK_
<com.piss.probe.test.render.OGLTest: void initGL()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser$LookaheadSuccess: void <init>(org.apache.lucene.queryParser.QueryParser$1)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: boolean jj_3R_3()> -> _SINK_
<de.lessvoid.nifty.loaderv2.types.EffectsType: void initEffect(de.lessvoid.nifty.effects.EffectEventId,de.lessvoid.nifty.elements.Element,de.lessvoid.nifty.Nifty,java.util.List)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: int addElement(int,int,int,int)> -> _SINK_
<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$1$1: org.apache.lucene.search.Query getTopLevelQuery()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xml.dtm.DTM getError()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser$Operator: void <init>(java.lang.String,int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: org.apache.xalan.lib.sql.SecuritySupport getInstance()> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: org.apache.lucene.search.Query getRangeQuery(java.lang.String,java.lang.String,java.lang.String,boolean)> -> _SINK_
<org.apache.lucene.search.function.ValueSourceQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper: org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)> -> _SINK_
<org.apache.lucene.search.spans.SpanOrQuery$1: boolean next()> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> -> _SINK_
<org.apache.lucene.queryParser.ParseException: void <init>(org.apache.lucene.queryParser.Token,int[][],java.lang.String[])> -> _SINK_
<org.glassfish.jersey.client.JerseyWebTarget: javax.ws.rs.core.UriBuilder setQueryParam(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object[])> -> _SINK_
<java.sql.PreparedStatement: void setNull(int,int)> -> _SINK_
<org.apache.xalan.lib.sql.ObjectArray: void <init>(int)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport: long getLastModified(java.io.File)> -> _SINK_
<org.apache.lucene.search.function.FieldScoreQuery$Type: void <clinit>()> -> _SINK_
<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.xalan.lib.sql.SecuritySupport12: long getLastModified(java.io.File)> -> _SINK_
<org.apache.lucene.search.ScoringRewrite$2: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: void addParameterWithType(java.lang.String,java.lang.String)> -> _SINK_
<org.apache.lucene.search.TermRangeQuery: boolean equals(java.lang.Object)> -> _SINK_
<org.apache.lucene.search.MultiTermQueryWrapperFilter: void clearTotalNumberOfTerms()> -> _SINK_
<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,int)> -> _SINK_
<org.apache.lucene.search.ExactPhraseScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.PhraseQuery$PostingsAndFreq[],org.apache.lucene.search.Similarity,byte[])> -> _SINK_
<org.apache.lucene.search.QueryWrapperFilter: boolean equals(java.lang.Object)> -> _SINK_
<org.fife.ui.rsyntaxtextarea.modes.SQLTokenMaker: org.fife.ui.rsyntaxtextarea.Token getTokenList(javax.swing.text.Segment,int,int)> -> _SINK_
<org.apache.xalan.lib.sql.SQLQueryParser: void init()> -> _SINK_
<de.lessvoid.nifty.tools.EnumStorage: boolean isSet(java.lang.Enum)> -> _SINK_
<org.apache.lucene.search.SimilarityDelegator: float queryNorm(float)> -> _SINK_
<org.apache.lucene.queryParser.QueryParser: void jj_la1_init_1()> -> _SINK_
<org.apache.lucene.search.function.CustomScoreQuery: java.lang.String toString(java.lang.String)> -> _SINK_
<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)> -> _SINK_
<org.apache.lucene.search.FuzzyQuery: org.apache.lucene.search.FilteredTermEnum getEnum(org.apache.lucene.index.IndexReader)> -> _SINK_
<org.apache.batik.swing.svg.AbstractJSVGComponent$2$Query: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgentWrapper)> -> _SINK_
<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)> -> _SINK_
<org.apache.lucene.search.spans.SpanNearPayloadCheckQuery: int hashCode()> -> _SINK_
<org.apache.xalan.lib.sql.XConnection: org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext,java.lang.String)> -> _SINK_
<org.apache.lucene.queryParser.QueryParserTokenManager: int jjStartNfa_1(int,long)> -> _SINK_
<org.apache.lucene.search.TermQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.Searcher)> -> _SINK_
<org.apache.xalan.lib.sql.SQLErrorDocument: void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception)> -> _SINK_
<org.apache.xalan.lib.sql.DTMDocument: short getNodeType(int)> -> _SINK_
<org.apache.xalan.lib.sql.QueryParameter: void <init>()> -> _SINK_
<org.apache.lucene.search.BooleanScorer: void visitSubScorers(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur,org.apache.lucene.search.Scorer$ScorerVisitor)> -> _SINK_
<java.io.File: java.lang.String getParent()> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<java.io.DataInputStream: int readUnsignedShort()> -> _SOURCE_
<java.util.Scanner: float nextFloat()> -> _SOURCE_
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)> -> _SOURCE_
<java.io.RandomAccessFile: int read()> -> _SOURCE_
<java.io.File: java.lang.String getName()> -> _SOURCE_
<java.net.URL: java.lang.Object getContent()> -> _SOURCE_
<java.io.InputStream: int read(byte[],int,int)> -> _SOURCE_
<java.io.File: java.lang.String getAbsolutePath()> -> _SOURCE_
<java.io.ObjectInputStream: byte readByte()> -> _SOURCE_
<java.io.FileInputStream: int read(byte[],int,int)> -> _SOURCE_
<java.io.ObjectInputStream: double readDouble()> -> _SOURCE_
<java.io.RandomAccessFile: long readLong()> -> _SOURCE_
<com.google.common.io.ByteStreams: int read(java.io.InputStream,byte[],int,int)> -> _SOURCE_
<java.io.File: java.lang.String getPath()> -> _SOURCE_
<java.net.URL: java.io.InputStream openStream()> -> _SOURCE_
<java.io.InputStream: int read(byte[])> -> _SOURCE_
<java.util.Scanner: long nextLong()> -> _SOURCE_
<com.google.common.io.ByteStreams: java.lang.Object readBytes(java.io.InputStream,com.google.common.io.ByteProcessor)> -> _SOURCE_
<java.io.FileInputStream: int read(byte[])> -> _SOURCE_
<java.io.BufferedReader: java.lang.String readLine()> -> _SOURCE_
<java.io.RandomAccessFile: int read(byte[],int,int)> -> _SOURCE_
<java.io.DataInputStream: double readDouble()> -> _SOURCE_
<java.io.RandomAccessFile: int readInt()> -> _SOURCE_
<java.io.ObjectInputStream: long readLong()> -> _SOURCE_
<java.io.FileInputStream: int available()> -> _SOURCE_
<java.io.InputStreamReader: java.lang.String getEncoding()> -> _SOURCE_
<java.io.DataInputStream: long readLong()> -> _SOURCE_
<java.io.Reader: int read(char[],int,int)> -> _SOURCE_
<com.google.common.io.LineReader: java.lang.String readLine()> -> _SOURCE_
<java.io.DataInputStream: short readShort()> -> _SOURCE_
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)> -> _SOURCE_
<java.io.FilterInputStream: int read()> -> _SOURCE_
<java.util.Scanner: java.lang.String nextLine()> -> _SOURCE_
<com.google.common.io.MultiReader: int read(char[],int,int)> -> _SOURCE_
<com.google.common.io.CharSource: boolean isEmpty()> -> _SOURCE_
<java.io.RandomAccessFile: byte readByte()> -> _SOURCE_
<java.io.DataInputStream: byte readByte()> -> _SOURCE_
<java.io.Reader: int read(char[])> -> _SOURCE_
<java.io.ByteArrayInputStream: int available()> -> _SOURCE_
<java.io.ObjectInputStream: int readInt()> -> _SOURCE_
<java.io.FilterInputStream: int read(byte[])> -> _SOURCE_
<java.io.InputStreamReader: int read()> -> _SOURCE_
<java.io.Reader: int read()> -> _SOURCE_
<java.io.PushbackInputStream: int read(byte[],int,int)> -> _SOURCE_
<java.io.InputStreamReader: int read(char[],int,int)> -> _SOURCE_
<com.google.common.io.MultiInputStream: int read(byte[],int,int)> -> _SOURCE_
<java.io.InputStream: int available()> -> _SOURCE_
<java.io.File: java.lang.String[] list()> -> _SOURCE_
<java.io.ByteArrayInputStream: int read()> -> _SOURCE_
<java.io.RandomAccessFile: char readChar()> -> _SOURCE_
<java.io.DataInputStream: int readUnsignedByte()> -> _SOURCE_
<java.io.ObjectInputStream: short readShort()> -> _SOURCE_
<java.io.RandomAccessFile: short readShort()> -> _SOURCE_
<java.io.File: java.lang.String getCanonicalPath()> -> _SOURCE_
<java.io.ObjectInputStream: java.lang.String readUTF()> -> _SOURCE_
<java.io.DataInputStream: java.lang.String readUTF()> -> _SOURCE_
<java.util.Scanner: java.lang.String next()> -> _SOURCE_
<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)> -> _SOURCE_
<com.google.common.io.CharSource: java.lang.String readFirstLine()> -> _SOURCE_
