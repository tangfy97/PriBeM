<android.app.Notification$Builder: android.app.Notification getNotification()> -> _SOURCE_
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> -> _SOURCE_
<android.text.Layout: java.lang.CharSequence getText()> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> -> _SOURCE_
<android.view.View: int getMeasuredWidth()> -> _SOURCE_
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)> -> _SOURCE_
<android.content.res.Resources: android.content.res.AssetManager getAssets()> -> _SOURCE_
<java.lang.Number: short shortValue()> -> _SOURCE_
<android.text.Layout: int getLineBottom(int)> -> _SOURCE_
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> -> _SOURCE_
<android.widget.Scroller: int getFinalX()> -> _SOURCE_
<java.util.Vector: java.lang.Object get(int)> -> _SOURCE_
<java.util.zip.ZipEntry: long getTime()> -> _SOURCE_
<org.json.JSONObject: java.lang.String getString(java.lang.String)> -> _SOURCE_
<java.util.Currency: java.lang.String getCurrencyCode()> -> _SOURCE_
<java.lang.Thread: java.lang.String getName()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()> -> _SOURCE_
<java.lang.Enum: java.lang.String name()> -> _SOURCE_
<android.widget.CursorAdapter: android.database.Cursor getCursor()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getString(int)> -> _SOURCE_
<android.content.res.Resources: float getDimension(int)> -> _SOURCE_
<android.content.Intent: java.lang.String getAction()> -> _SOURCE_
<android.widget.TextView: android.text.Editable getEditableText()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()> -> _SOURCE_
<java.net.URL: java.lang.String getProtocol()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollY()> -> _SOURCE_
<java.lang.reflect.Constructor: int getModifiers()> -> _SOURCE_
<android.content.res.Resources: int getInteger(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> -> _SOURCE_
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)> -> _SOURCE_
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(int)> -> _SOURCE_
<android.widget.PopupWindow: int getHeight()> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> -> _SOURCE_
<android.widget.HeaderViewListAdapter: int getHeadersCount()> -> _SOURCE_
<java.net.URLConnection: java.lang.Object getContent()> -> _SOURCE_
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.MotionEvent: int getPointerCount()> -> _SOURCE_
<java.lang.String: byte[] getBytes()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.String getName()> -> _SOURCE_
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getFocusX()> -> _SOURCE_
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> -> _SOURCE_
<android.location.LocationManager: java.util.List getProviders(boolean)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getUrl()> -> _SOURCE_
<android.view.MotionEvent: int getActionMasked()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()> -> _SOURCE_
<java.lang.Class: int getModifiers()> -> _SOURCE_
<android.location.GpsStatus: int getTimeToFirstFix()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<android.media.AudioManager: int getStreamMaxVolume(int)> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance()> -> _SOURCE_
<android.animation.Animator: android.animation.Animator clone()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()> -> _SOURCE_
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)> -> _SOURCE_
<java.io.File: java.io.File getParentFile()> -> _SOURCE_
<android.os.Environment: java.lang.String getExternalStorageState()> -> _SOURCE_
<java.security.MessageDigest: byte[] digest()> -> _SOURCE_
<java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()> -> _SOURCE_
<android.content.res.ColorStateList: int getDefaultColor()> -> _SOURCE_
<android.net.NetworkInfo: int getType()> -> _SOURCE_
<android.view.View: int getLeft()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getId(int)> -> _SOURCE_
<android.view.View: int getMeasuredHeight()> -> _SOURCE_
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()> -> _SOURCE_
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.net.URLConnection: int getContentLength()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)> -> _SOURCE_
<java.net.URL: java.lang.String getHost()> -> _SOURCE_
<android.widget.Scroller: int getStartX()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> -> _SOURCE_
<android.app.Activity: java.lang.CharSequence getTitle()> -> _SOURCE_
<java.lang.Number: byte byteValue()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()> -> _SOURCE_
<android.widget.TextView: int getMinLines()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getMethodName()> -> _SOURCE_
<android.widget.TextView: float getLineSpacingMultiplier()> -> _SOURCE_
<android.view.MotionEvent: float getX()> -> _SOURCE_
<android.content.Intent: android.content.ClipData getClipData()> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: int getButtonState()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> -> _SOURCE_
<java.lang.Class: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.os.Looper: android.os.Looper getMainLooper()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getMessage()> -> _SOURCE_
<android.widget.TextView: int getBaseline()> -> _SOURCE_
<android.location.Location: float getBearing()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()> -> _SOURCE_
<java.text.NumberFormat: java.lang.String format(double)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object getFirst()> -> _SOURCE_
<android.os.ParcelFileDescriptor: int getFd()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> -> _SOURCE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()> -> _SOURCE_
<android.app.Fragment: android.app.Fragment getParentFragment()> -> _SOURCE_
<android.widget.Spinner: int getDropDownVerticalOffset()> -> _SOURCE_
<android.app.ActivityManager: int getMemoryClass()> -> _SOURCE_
<android.widget.ListView: int getDividerHeight()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getPositionDescription()> -> _SOURCE_
<android.animation.ValueAnimator: float getAnimatedFraction()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> -> _SOURCE_
<java.net.InetAddress: java.lang.String getHostAddress()> -> _SOURCE_
<java.math.BigInteger: byte[] toByteArray()> -> _SOURCE_
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()> -> _SOURCE_
<android.content.res.TypedArray: int getInteger(int,int)> -> _SOURCE_
<android.view.View: float getTranslationX()> -> _SOURCE_
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicLong: long get()> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()> -> _SOURCE_
<android.text.Layout: float getPrimaryHorizontal(int)> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> -> _SOURCE_
<android.content.res.TypedArray: float getFloat(int,float)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.Display: int getHeight()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestPath()> -> _SOURCE_
<android.view.View: int getSuggestedMinimumHeight()> -> _SOURCE_
<android.os.Messenger: android.os.IBinder getBinder()> -> _SOURCE_
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)> -> _SOURCE_
<java.util.Calendar: long getTimeInMillis()> -> _SOURCE_
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> -> _SOURCE_
<android.os.Bundle: int[] getIntArray(java.lang.String)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<java.text.NumberFormat: java.lang.String format(long)> -> _SOURCE_
<android.view.View: float getCameraDistance()> -> _SOURCE_
<android.view.ViewConfiguration: float getScrollFriction()> -> _SOURCE_
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> -> _SOURCE_
<android.view.KeyEvent: int getAction()> -> _SOURCE_
<android.view.MotionEvent: float getY(int)> -> _SOURCE_
<android.widget.TextView: boolean getIncludeFontPadding()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()> -> _SOURCE_
<java.security.Signature: byte[] sign()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceLanguageId()> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatMode()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getUserAgentString()> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getClassName()> -> _SOURCE_
<java.text.ParsePosition: int getIndex()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)> -> _SOURCE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<java.net.InetSocketAddress: java.lang.String getHostName()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
<java.security.KeyPair: java.security.PublicKey getPublic()> -> _SOURCE_
<java.lang.Character: byte getDirectionality(int)> -> _SOURCE_
<java.io.File: java.lang.String getCanonicalPath()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()> -> _SOURCE_
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> -> _SOURCE_
<java.text.DecimalFormatSymbols: char getDecimalSeparator()> -> _SOURCE_
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()> -> _SOURCE_
<android.widget.OverScroller: int getFinalX()> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,int)> -> _SOURCE_
<java.text.DateFormat: java.lang.Object clone()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context getBaseContext()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledTouchSlop()> -> _SOURCE_
<android.view.ViewGroup: int getDescendantFocusability()> -> _SOURCE_
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> -> _SOURCE_
<android.content.res.Configuration: int getLayoutDirection()> -> _SOURCE_
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> -> _SOURCE_
<android.app.UiModeManager: int getCurrentModeType()> -> _SOURCE_
<android.text.Layout: float getSecondaryHorizontal(int)> -> _SOURCE_
<android.view.View: java.lang.Object getTag(int)> -> _SOURCE_
<java.util.AbstractMap: java.lang.String toString()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<android.view.ScaleGestureDetector: float getCurrentSpanY()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getLength()> -> _SOURCE_
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()> -> _SOURCE_
<android.location.Location: java.lang.String getProvider()> -> _SOURCE_
<android.view.MotionEvent: float getRawY()> -> _SOURCE_
<android.content.Context: java.lang.String getString(int)> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getStartOffset()> -> _SOURCE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)> -> _SOURCE_
<android.view.View: int getPaddingBottom()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.view.MotionEvent: long getEventTime()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int,int)> -> _SOURCE_
<java.lang.Class: java.lang.String getCanonicalName()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> -> _SOURCE_
<javax.crypto.Cipher: int getBlockSize()> -> _SOURCE_
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)> -> _SOURCE_
<android.widget.TabHost: java.lang.String getCurrentTabTag()> -> _SOURCE_
<android.view.ViewConfiguration: int getEdgeSlop()> -> _SOURCE_
<android.view.View: int getPaddingTop()> -> _SOURCE_
<android.view.MotionEvent: int getPointerId(int)> -> _SOURCE_
<android.widget.TextView: float getLineSpacingExtra()> -> _SOURCE_
<java.util.ServiceLoader: java.util.Iterator iterator()> -> _SOURCE_
<android.widget.TextView: int getMaxLines()> -> _SOURCE_
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getAction()> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getCallingActivity()> -> _SOURCE_
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<android.view.View: float getScaleY()> -> _SOURCE_
<android.os.HandlerThread: android.os.Looper getLooper()> -> _SOURCE_
<android.view.View: android.view.ViewParent getParent()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingBottom()> -> _SOURCE_
<android.content.res.TypedArray: int getColor(int,int)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getThreshold()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<java.util.Currency: java.lang.String getSymbol()> -> _SOURCE_
<android.os.Bundle: byte[] getByteArray(java.lang.String)> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getComponentName()> -> _SOURCE_
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)> -> _SOURCE_
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)> -> _SOURCE_
<android.view.View: int getBaseline()> -> _SOURCE_
<java.util.TimeZone: java.lang.String getID()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> -> _SOURCE_
<android.view.View: int getSuggestedMinimumWidth()> -> _SOURCE_
<android.view.View: int getPaddingEnd()> -> _SOURCE_
<android.widget.TextView: float getTextScaleX()> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)> -> _SOURCE_
<javax.crypto.Mac: byte[] doFinal()> -> _SOURCE_
<android.content.Intent: long getLongExtra(java.lang.String,long)> -> _SOURCE_
<android.view.FocusFinder: android.view.FocusFinder getInstance()> -> _SOURCE_
<android.view.MotionEvent: float getX(int)> -> _SOURCE_
<java.util.Locale: java.lang.String getLanguage()> -> _SOURCE_
<android.util.LongSparseArray: java.lang.Object get(long)> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()> -> _SOURCE_
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> -> _SOURCE_
<android.view.View: int[] getDrawableState()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceLanguageModeId()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> -> _SOURCE_
<java.io.File: java.lang.String getName()> -> _SOURCE_
<android.app.Activity: android.view.View getCurrentFocus()> -> _SOURCE_
<android.view.DragEvent: android.content.ClipData getClipData()> -> _SOURCE_
<android.view.ViewConfiguration: int getTouchSlop()> -> _SOURCE_
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> -> _SOURCE_
<android.net.Uri: java.util.Set getQueryParameterNames()> -> _SOURCE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)> -> _SOURCE_
<java.util.ArrayList: java.lang.Object get(int)> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getClassName()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.Resources getResources()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getType()> -> _SOURCE_
<java.io.ByteArrayOutputStream: byte[] toByteArray()> -> _SOURCE_
<android.content.res.TypedArray: float getDimension(int,float)> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String,int)> -> _SOURCE_
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> -> _SOURCE_
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.view.MotionEvent: int getAction()> -> _SOURCE_
<android.view.Window: android.content.Context getContext()> -> _SOURCE_
<android.widget.Spinner: int getDropDownHorizontalOffset()> -> _SOURCE_
<android.view.MotionEvent: int getMetaState()> -> _SOURCE_
<android.view.View: int getImportantForAccessibility()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getLayoutDirection()> -> _SOURCE_
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> -> _SOURCE_
<android.database.CursorWindow: int getNumRows()> -> _SOURCE_
<android.widget.ArrayAdapter: android.content.Context getContext()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()> -> _SOURCE_
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int)> -> _SOURCE_
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> -> _SOURCE_
<android.view.View: android.view.ViewParent getParentForAccessibility()> -> _SOURCE_
<android.view.ViewConfiguration: int getScrollDefaultDelay()> -> _SOURCE_
<android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> -> _SOURCE_
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])> -> _SOURCE_
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> -> _SOURCE_
<android.view.Choreographer: android.view.Choreographer getInstance()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> -> _SOURCE_
<android.animation.ValueAnimator: long getFrameDelay()> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> -> _SOURCE_
<android.widget.ArrayAdapter: java.lang.Object getItem(int)> -> _SOURCE_
<android.view.Display: int getWidth()> -> _SOURCE_
<android.os.Bundle: java.lang.Object get(java.lang.String)> -> _SOURCE_
<java.lang.Class: java.lang.String getName()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumWidth()> -> _SOURCE_
<android.view.VelocityTracker: float getXVelocity(int)> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> -> _SOURCE_
<android.content.Intent: android.net.Uri getData()> -> _SOURCE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<android.view.View: float getY()> -> _SOURCE_
<android.view.View: float getRotationX()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<android.view.View$MeasureSpec: int getSize(int)> -> _SOURCE_
<android.net.TrafficStats: int getThreadStatsTag()> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()> -> _SOURCE_
<android.view.DragEvent: java.lang.Object getLocalState()> -> _SOURCE_
<java.text.NumberFormat: java.lang.Number parse(java.lang.String)> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getListSelection()> -> _SOURCE_
<android.view.View: float getPivotY()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)> -> _SOURCE_
<android.widget.Scroller: int getCurrY()> -> _SOURCE_
<java.security.MessageDigest: byte[] digest(byte[])> -> _SOURCE_
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> -> _SOURCE_
<android.view.KeyCharacterMap: int getKeyboardType()> -> _SOURCE_
<android.view.LayoutInflater: android.content.Context getContext()> -> _SOURCE_
<android.view.View: long getDrawingTime()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> -> _SOURCE_
<android.content.Context: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.util.SparseIntArray: int get(int)> -> _SOURCE_
<android.location.GpsSatellite: int getPrn()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageDirectory()> -> _SOURCE_
<android.util.SparseLongArray: long get(int,long)> -> _SOURCE_
<android.animation.Keyframe: java.lang.Class getType()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<java.util.concurrent.FutureTask: java.lang.Object get()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> -> _SOURCE_
<android.view.View: int getMeasuredWidthAndState()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.String getName()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(int)> -> _SOURCE_
<java.net.URLConnection: java.util.Map getRequestProperties()> -> _SOURCE_
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> -> _SOURCE_
<android.os.Bundle: float[] getFloatArray(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> -> _SOURCE_
<android.util.Property: java.lang.String getName()> -> _SOURCE_
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)> -> _SOURCE_
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> -> _SOURCE_
<android.content.ClipData: int getItemCount()> -> _SOURCE_
<android.widget.Spinner: java.lang.CharSequence getPrompt()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getToIndex()> -> _SOURCE_
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()> -> _SOURCE_
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> -> _SOURCE_
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> -> _SOURCE_
<android.view.ViewGroup: int getLayoutMode()> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getTargetPackage()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> -> _SOURCE_
<android.util.TypedValue: float getFraction(float,float)> -> _SOURCE_
<android.view.ScaleGestureDetector: float getCurrentSpan()> -> _SOURCE_
<android.widget.OverScroller: float getCurrVelocity()> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getStartDelay()> -> _SOURCE_
<android.animation.ObjectAnimator: java.lang.String getPropertyName()> -> _SOURCE_
<android.view.ViewGroup: android.view.View getFocusedChild()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)> -> _SOURCE_
<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)> -> _SOURCE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> -> _SOURCE_
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> -> _SOURCE_
<android.app.Activity: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.app.Fragment: android.app.Activity getActivity()> -> _SOURCE_
<android.content.Intent: int getIntExtra(java.lang.String,int)> -> _SOURCE_
<android.view.View: int getMeasuredHeightAndState()> -> _SOURCE_
<android.app.Activity: android.content.Intent getIntent()> -> _SOURCE_
<android.widget.PopupWindow: int getAnimationStyle()> -> _SOURCE_
<android.app.SearchableInfo: int getVoicePromptTextId()> -> _SOURCE_
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)> -> _SOURCE_
<java.io.File: java.io.File getAbsoluteFile()> -> _SOURCE_
<android.app.Activity: android.view.WindowManager getWindowManager()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault()> -> _SOURCE_
<java.lang.System: java.lang.SecurityManager getSecurityManager()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.text.Layout: int getLineEnd(int)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Typeface getTypeface()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> -> _SOURCE_
<android.animation.Keyframe: float getFraction()> -> _SOURCE_
<android.view.View: int getWidth()> -> _SOURCE_
<android.widget.TimePicker: java.lang.Integer getCurrentHour()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()> -> _SOURCE_
<java.net.HttpURLConnection: java.lang.String getResponseMessage()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.String getName()> -> _SOURCE_
<android.content.res.TypedArray: int getIndex(int)> -> _SOURCE_
<java.text.DateFormat: java.lang.String format(java.util.Date)> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String)> -> _SOURCE_
<android.view.View: int getLabelFor()> -> _SOURCE_
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<java.util.LinkedList: java.lang.Object getFirst()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getSupportedTypes()> -> _SOURCE_
<java.util.TreeMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.view.View: int getPaddingRight()> -> _SOURCE_
<android.view.View$MeasureSpec: int getMode(int)> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)> -> _SOURCE_
<java.lang.System: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<android.view.KeyEvent: int getRepeatCount()> -> _SOURCE_
<android.app.Activity: android.app.ActionBar getActionBar()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentType()> -> _SOURCE_
<android.view.MotionEvent: int getToolType(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: int getVersion()> -> _SOURCE_
<android.app.SearchableInfo: int getVoiceMaxResults()> -> _SOURCE_
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.content.res.TypedArray: int getIndexCount()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Shader getShader()> -> _SOURCE_
<android.app.Activity: android.app.FragmentManager getFragmentManager()> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources getResources()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> -> _SOURCE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceName(int)> -> _SOURCE_
<android.view.View: float getRotationY()> -> _SOURCE_
<android.content.ClipDescription: java.lang.CharSequence getLabel()> -> _SOURCE_
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> -> _SOURCE_
<android.view.View: int getWindowVisibility()> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingRight()> -> _SOURCE_
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.content.ClipData$Item: android.content.Intent getIntent()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> -> _SOURCE_
<android.app.Activity: android.content.Intent getParentActivityIntent()> -> _SOURCE_
<java.util.Date: long getTime()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> -> _SOURCE_
<org.json.JSONObject: int getInt(java.lang.String)> -> _SOURCE_
<android.content.Intent: android.content.ComponentName getComponent()> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)> -> _SOURCE_
<android.widget.PopupWindow: int getSoftInputMode()> -> _SOURCE_
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<android.util.TypedValue: float getFloat()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.view.Display: int getDisplayId()> -> _SOURCE_
<java.text.Format: java.lang.String format(java.lang.Object)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<android.view.KeyEvent: int getMetaState()> -> _SOURCE_
<java.net.HttpURLConnection: boolean getFollowRedirects()> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)> -> _SOURCE_
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> -> _SOURCE_
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()> -> _SOURCE_
<android.view.Window: android.view.Window$Callback getCallback()> -> _SOURCE_
<android.app.UiModeManager: int getNightMode()> -> _SOURCE_
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> _SOURCE_
<java.text.NumberFormat: int getMinimumFractionDigits()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()> -> _SOURCE_
<android.content.Intent: java.lang.String getScheme()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> -> _SOURCE_
<android.content.ContentProvider: android.content.Context getContext()> -> _SOURCE_
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)> -> _SOURCE_
<android.app.Dialog: android.content.Context getContext()> -> _SOURCE_
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<android.graphics.Bitmap: int getPixel(int,int)> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)> -> _SOURCE_
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> -> _SOURCE_
<android.view.View: float getTranslationY()> -> _SOURCE_
<android.util.AtomicFile: byte[] readFully()> -> _SOURCE_
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> -> _SOURCE_
<android.view.View: int getBottom()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()> -> _SOURCE_
<java.nio.charset.Charset: java.lang.String name()> -> _SOURCE_
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)> -> _SOURCE_
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> -> _SOURCE_
<android.graphics.Bitmap: int getByteCount()> -> _SOURCE_
<android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.content.Intent: java.util.Set getCategories()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelOffset(int)> -> _SOURCE_
<android.text.Layout: int getLineForVertical(int)> -> _SOURCE_
<android.os.Handler: android.os.Looper getLooper()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getAction(int)> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String,long)> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()> -> _SOURCE_
<android.view.MotionEvent: float getRawX()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> -> _SOURCE_
<android.location.GpsSatellite: float getSnr()> -> _SOURCE_
<java.util.AbstractCollection: java.lang.String toString()> -> _SOURCE_
<android.view.VelocityTracker: float getYVelocity()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> -> _SOURCE_
<java.text.ParsePosition: int getErrorIndex()> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getDuration()> -> _SOURCE_
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)> -> _SOURCE_
<android.app.SearchableInfo: int getImeOptions()> -> _SOURCE_
<android.widget.Scroller: int getFinalY()> -> _SOURCE_
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> -> _SOURCE_
<android.media.AudioManager: int getStreamVolume(int)> -> _SOURCE_
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelSize(int)> -> _SOURCE_
<javax.crypto.Mac: int getMacLength()> -> _SOURCE_
<android.app.Dialog: android.view.Window getWindow()> -> _SOURCE_
<android.graphics.Region: android.graphics.Rect getBounds()> -> _SOURCE_
<android.graphics.Bitmap: int getHeight()> -> _SOURCE_
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<java.util.LinkedList: java.lang.Object get(int)> -> _SOURCE_
<android.view.View: int getHeight()> -> _SOURCE_
<java.lang.Character: byte getDirectionality(char)> -> _SOURCE_
<android.content.Intent: java.lang.String getType()> -> _SOURCE_
<java.util.Currency: java.util.Currency getInstance(java.lang.String)> -> _SOURCE_
<android.content.ClipData$Item: java.lang.CharSequence getText()> -> _SOURCE_
<android.view.View: android.view.View getRootView()> -> _SOURCE_
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> _SOURCE_
<android.content.Intent: java.lang.String getDataString()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> -> _SOURCE_
<java.util.UUID: long getMostSignificantBits()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> -> _SOURCE_
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> -> _SOURCE_
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> -> _SOURCE_
<android.widget.PopupWindow: int getWindowLayoutType()> -> _SOURCE_
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<java.util.GregorianCalendar: int getActualMaximum(int)> -> _SOURCE_
<android.view.View: int getLayerType()> -> _SOURCE_
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<android.view.View: float getPivotX()> -> _SOURCE_
<java.io.FileInputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.os.Looper: java.lang.Thread getThread()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<java.net.DatagramSocket: int getLocalPort()> -> _SOURCE_
<java.lang.reflect.Method: int getModifiers()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getFocusY()> -> _SOURCE_
<android.os.Parcel: java.io.Serializable readSerializable()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollX()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])> -> _SOURCE_
<android.net.http.SslError: int getPrimaryError()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> -> _SOURCE_
<android.graphics.Bitmap: int getWidth()> -> _SOURCE_
<android.widget.ProgressBar: int getProgress()> -> _SOURCE_
<java.util.zip.ZipEntry: java.lang.String getName()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> -> _SOURCE_
<android.view.MotionEvent: float getY()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> -> _SOURCE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> -> _SOURCE_
<android.media.AudioTrack: float getMaxVolume()> -> _SOURCE_
<android.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<java.lang.Enum: java.lang.String toString()> -> _SOURCE_
<android.view.View: int getMinimumWidth()> -> _SOURCE_
<org.json.JSONArray: int getInt(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getItemCount()> -> _SOURCE_
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)> -> _SOURCE_
<android.text.Layout: int getHeight()> -> _SOURCE_
<java.io.File: java.io.File getCanonicalFile()> -> _SOURCE_
<android.view.View: float getX()> -> _SOURCE_
<android.view.ViewConfiguration: int getScrollBarSize()> -> _SOURCE_
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()> -> _SOURCE_
<android.graphics.Canvas: int getDensity()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getPageSize()> -> _SOURCE_
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)> -> _SOURCE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)> -> _SOURCE_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> -> _SOURCE_
<java.lang.Class: java.lang.Package getPackage()> -> _SOURCE_
<java.lang.Class: java.lang.Object[] getEnumConstants()> -> _SOURCE_
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()> -> _SOURCE_
<java.lang.ThreadLocal: java.lang.Object get()> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> -> _SOURCE_
<android.view.MotionEvent: int getSource()> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> -> _SOURCE_
<android.view.View: android.content.res.Resources getResources()> -> _SOURCE_
<android.widget.LinearLayout: int getOrientation()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumHeight()> -> _SOURCE_
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.lang.String)> -> _SOURCE_
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)> -> _SOURCE_
<android.view.View: int getId()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> -> _SOURCE_
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)> -> _SOURCE_
<java.net.URI: java.lang.String getScheme()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> -> _SOURCE_
<android.view.View: android.os.Handler getHandler()> -> _SOURCE_
<android.view.MotionEvent: int getEdgeFlags()> -> _SOURCE_
<android.content.Intent: int getFlags()> -> _SOURCE_
<android.webkit.WebView$HitTestResult: int getType()> -> _SOURCE_
<org.json.JSONArray: double getDouble(int)> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()> -> _SOURCE_
<android.view.View: int getMeasuredState()> -> _SOURCE_
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()> -> _SOURCE_
<java.lang.Thread: long getId()> -> _SOURCE_
<android.view.ViewConfiguration: int getLongPressTimeout()> -> _SOURCE_
<android.util.SparseIntArray: int get(int,int)> -> _SOURCE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)> -> _SOURCE_
<android.content.res.Resources: android.graphics.Movie getMovie(int)> -> _SOURCE_
<java.security.KeyPair: java.security.PrivateKey getPrivate()> -> _SOURCE_
<java.lang.Runtime: java.lang.Runtime getRuntime()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()> -> _SOURCE_
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getText()> -> _SOURCE_
<java.util.Properties: java.lang.String getProperty(java.lang.String)> -> _SOURCE_
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<android.widget.TextView: android.text.TextPaint getPaint()> -> _SOURCE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> -> _SOURCE_
<android.view.VelocityTracker: float getXVelocity()> -> _SOURCE_
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()> -> _SOURCE_
<java.util.AbstractSequentialList: java.util.Iterator iterator()> -> _SOURCE_
<android.view.View: int getMinimumHeight()> -> _SOURCE_
<android.content.res.Resources: int getColor(int)> -> _SOURCE_
<java.net.InetSocketAddress: int getPort()> -> _SOURCE_
<android.location.Location: double getAltitude()> -> _SOURCE_
<android.view.Display: float getRefreshRate()> -> _SOURCE_
<android.content.res.Resources: int[] getIntArray(int)> -> _SOURCE_
<android.view.View: int getOverScrollMode()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingTop()> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)> -> _SOURCE_
<android.widget.ProgressBar: int getMax()> -> _SOURCE_
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)> -> _SOURCE_
<android.os.StatFs: int getBlockSize()> -> _SOURCE_
<android.graphics.drawable.ColorDrawable: int getColor()> -> _SOURCE_
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> -> _SOURCE_
<android.view.View: int getSystemUiVisibility()> -> _SOURCE_
<java.security.MessageDigest: int getDigestLength()> -> _SOURCE_
<android.content.ContentValues: java.lang.Object get(java.lang.String)> -> _SOURCE_
<android.app.SearchableInfo: int getHintId()> -> _SOURCE_
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> -> _SOURCE_
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getReturnType()> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int)> -> _SOURCE_
<android.location.GpsSatellite: float getElevation()> -> _SOURCE_
<android.view.View: int getLayoutDirection()> -> _SOURCE_
<android.widget.PopupWindow: int getWidth()> -> _SOURCE_
<android.view.View: float getAlpha()> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)> -> _SOURCE_
<java.io.File: java.lang.String getAbsolutePath()> -> _SOURCE_
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> -> _SOURCE_
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> -> _SOURCE_
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> -> _SOURCE_
<java.lang.reflect.Field: int getModifiers()> -> _SOURCE_
<java.util.HashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.view.KeyEvent: int getFlags()> -> _SOURCE_
<android.view.DragEvent: int getAction()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingLeft()> -> _SOURCE_
<android.location.GpsStatus: java.lang.Iterable getSatellites()> -> _SOURCE_
<android.animation.Animator: java.util.ArrayList getListeners()> -> _SOURCE_
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> -> _SOURCE_
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> -> _SOURCE_
<android.os.Bundle: long[] getLongArray(java.lang.String)> -> _SOURCE_
<java.util.zip.CRC32: long getValue()> -> _SOURCE_
<java.net.HttpURLConnection: int getResponseCode()> -> _SOURCE_
<android.view.KeyEvent: int getDeviceId()> -> _SOURCE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()> -> _SOURCE_
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()> -> _SOURCE_
<android.view.View: float getRotation()> -> _SOURCE_
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> -> _SOURCE_
<android.widget.OverScroller: int getCurrX()> -> _SOURCE_
<android.view.ViewConfiguration: int getTapTimeout()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> -> _SOURCE_
<java.text.DateFormat: java.util.Date parse(java.lang.String)> -> _SOURCE_
<android.view.View: int getWindowSystemUiVisibility()> -> _SOURCE_
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)> -> _SOURCE_
<java.util.ArrayDeque: java.lang.Object getLast()> -> _SOURCE_
<android.text.Layout: int getLineVisibleEnd(int)> -> _SOURCE_
<android.widget.CompoundButton: int[] onCreateDrawableState(int)> -> _SOURCE_
<android.app.SearchableInfo: int getInputType()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> -> _SOURCE_
<org.json.JSONArray: java.lang.Object get(int)> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> -> _SOURCE_
<java.util.Locale: java.lang.String getVariant()> -> _SOURCE_
<java.util.Calendar: int get(int)> -> _SOURCE_
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getDropDownAnchor()> -> _SOURCE_
<android.media.MediaRouter$RouteInfo: int getVolume()> -> _SOURCE_
<android.view.View: int getPaddingStart()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)> -> _SOURCE_
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()> -> _SOURCE_
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()> -> _SOURCE_
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> -> _SOURCE_
<android.widget.Spinner: int getDropDownWidth()> -> _SOURCE_
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getEventType()> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatCount()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> -> _SOURCE_
<java.lang.Class: java.lang.String getSimpleName()> -> _SOURCE_
<android.view.ScaleGestureDetector: float getScaleFactor()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> -> _SOURCE_
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getWindowId()> -> _SOURCE_
<java.lang.Package: java.lang.String getName()> -> _SOURCE_
<java.net.URLConnection: long getLastModified()> -> _SOURCE_
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)> -> _SOURCE_
<android.view.View: android.view.animation.Animation getAnimation()> -> _SOURCE_
<android.app.ActivityManager: int getLauncherLargeIconSize()> -> _SOURCE_
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> -> _SOURCE_
<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getFileName()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.view.ViewGroup: android.view.View getChildAt(int)> -> _SOURCE_
<android.content.ComponentName: java.lang.String getPackageName()> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)> -> _SOURCE_
<java.net.InetSocketAddress: java.net.InetAddress getAddress()> -> _SOURCE_
<android.view.Gravity: int getAbsoluteGravity(int,int)> -> _SOURCE_
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)> -> _SOURCE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.content.res.Resources: java.lang.String[] getStringArray(int)> -> _SOURCE_
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable getCause()> -> _SOURCE_
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()> -> _SOURCE_
<android.widget.PopupWindow: int getInputMethodMode()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> -> _SOURCE_
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)> -> _SOURCE_
<android.webkit.WebView$HitTestResult: java.lang.String getExtra()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> -> _SOURCE_
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)> -> _SOURCE_
<java.lang.reflect.Array: int getLength(java.lang.Object)> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> -> _SOURCE_
<java.io.File: java.lang.String getPath()> -> _SOURCE_
<android.view.View: android.view.Display getDisplay()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> -> _SOURCE_
<java.util.TimeZone: int getOffset(long)> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> -> _SOURCE_
<android.view.KeyEvent: int getKeyCode()> -> _SOURCE_
<android.view.View: int getScrollX()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> -> _SOURCE_
<android.widget.CompoundButton: int getCompoundPaddingRight()> -> _SOURCE_
<java.net.URL: java.lang.String getPath()> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()> -> _SOURCE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)> -> _SOURCE_
<android.view.VelocityTracker: float getYVelocity(int)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()> -> _SOURCE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> -> _SOURCE_
<android.view.View: int getRight()> -> _SOURCE_
<android.text.Layout: int getOffsetForHorizontal(int,float)> -> _SOURCE_
<android.location.Location: long getTime()> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> -> _SOURCE_
<android.view.KeyEvent: int getModifiers()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> -> _SOURCE_
<android.content.res.Resources: android.content.res.Resources getSystem()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<java.net.URLConnection: java.util.Map getHeaderFields()> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<java.lang.StackTraceElement: int getLineNumber()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.app.Activity: android.app.Application getApplication()> -> _SOURCE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> -> _SOURCE_
<android.widget.TextView: java.util.Locale getTextLocale()> -> _SOURCE_
<java.lang.reflect.Field: int getInt(java.lang.Object)> -> _SOURCE_
<android.widget.PopupWindow: android.view.View getContentView()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.text.Layout: int getWidth()> -> _SOURCE_
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()> -> _SOURCE_
<android.view.MotionEvent: long getDownTime()> -> _SOURCE_
<android.widget.Scroller: int getCurrX()> -> _SOURCE_
<android.app.Fragment: android.view.View getView()> -> _SOURCE_
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)> -> _SOURCE_
<android.view.View: android.os.IBinder getWindowToken()> -> _SOURCE_
<android.widget.OverScroller: int getFinalY()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getLocalizedMessage()> -> _SOURCE_
<android.view.View: android.content.Context getContext()> -> _SOURCE_
<android.renderscript.Allocation: android.renderscript.Type getType()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> -> _SOURCE_
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()> -> _SOURCE_
<android.widget.CompoundButton: int getCompoundPaddingLeft()> -> _SOURCE_
<android.view.ViewConfiguration: int getDoubleTapTimeout()> -> _SOURCE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.ClipData: android.content.ClipDescription getDescription()> -> _SOURCE_
<android.os.StatFs: int getBlockCount()> -> _SOURCE_
<javax.crypto.Cipher: byte[] doFinal(byte[])> -> _SOURCE_
<android.widget.TextView: android.text.Layout getLayout()> -> _SOURCE_
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<java.text.DateFormat: java.util.TimeZone getTimeZone()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> -> _SOURCE_
<android.content.res.Resources: float getFraction(int,int,int)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getFields()> -> _SOURCE_
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<java.io.ObjectStreamClass: java.lang.String getName()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.content.pm.Signature: byte[] toByteArray()> -> _SOURCE_
<android.text.StaticLayout: int getLineCount()> -> _SOURCE_
<android.text.Layout: float getLineRight(int)> -> _SOURCE_
<android.view.View: int getVisibility()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getCreatorPackage()> -> _SOURCE_
<android.widget.TextView: float getTextSize()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> -> _SOURCE_
<android.net.Uri: android.net.Uri normalizeScheme()> -> _SOURCE_
<android.view.DragEvent: float getY()> -> _SOURCE_
<android.app.Activity: java.lang.String getCallingPackage()> -> _SOURCE_
<android.app.SearchableInfo: java.lang.String getSuggestSelection()> -> _SOURCE_
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()> -> _SOURCE_
<android.view.Display: int getRotation()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> -> _SOURCE_
<android.view.View: float getScaleX()> -> _SOURCE_
<android.view.View: int getScrollY()> -> _SOURCE_
<android.location.Location: float getAccuracy()> -> _SOURCE_
<android.view.View: java.lang.Object getTag()> -> _SOURCE_
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)> -> _SOURCE_
<org.json.JSONArray: java.lang.String getString(int)> -> _SOURCE_
<android.location.Location: android.os.Bundle getExtras()> -> _SOURCE_
<android.view.DragEvent: float getX()> -> _SOURCE_
<java.util.Calendar: java.lang.Object clone()> -> _SOURCE_
<org.json.JSONObject: long getLong(java.lang.String)> -> _SOURCE_
<java.util.concurrent.atomic.AtomicInteger: int get()> -> _SOURCE_
<android.view.ViewGroup: android.view.View findFocus()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> -> _SOURCE_
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()> -> _SOURCE_
<android.os.Parcel: byte[] createByteArray()> -> _SOURCE_
<android.widget.TabHost$TabSpec: java.lang.String getTag()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> -> _SOURCE_
<android.os.Message: android.os.Bundle getData()> -> _SOURCE_
<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()> -> _SOURCE_
<android.graphics.drawable.AnimationDrawable: int getDuration(int)> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> -> _SOURCE_
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)> -> _SOURCE_
<android.view.View: android.os.IBinder getApplicationWindowToken()> -> _SOURCE_
<java.util.Calendar: java.util.Date getTime()> -> _SOURCE_
<android.location.Location: float getSpeed()> -> _SOURCE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()> -> _SOURCE_
<android.widget.TextView: int getInputType()> -> _SOURCE_
<android.text.Layout: int getLineBaseline(int)> -> _SOURCE_
<android.view.View: android.graphics.Matrix getMatrix()> -> _SOURCE_
<android.app.ActionBar: android.content.Context getThemedContext()> -> _SOURCE_
<android.app.SearchableInfo: int getSuggestThreshold()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentEncoding()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getChangingConfigurations()> -> _SOURCE_
<android.content.Intent: java.lang.String getPackage()> -> _SOURCE_
<android.content.res.TypedArray: float getFraction(int,int,int,float)> -> _SOURCE_
<android.view.ViewConfiguration: int getFadingEdgeLength()> -> _SOURCE_
<android.content.res.TypedArray: int getResourceId(int,int)> -> _SOURCE_
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> _SOURCE_
<android.content.ClipData$Item: android.net.Uri getUri()> -> _SOURCE_
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> -> _SOURCE_
<android.content.res.TypedArray: int getInt(int,int)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> -> _SOURCE_
<android.view.View: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getLevel()> -> _SOURCE_
<android.graphics.drawable.Drawable: int[] getState()> -> _SOURCE_
<android.text.Layout: float getLineLeft(int)> -> _SOURCE_
<android.widget.OverScroller: int getCurrY()> -> _SOURCE_
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()> -> _SOURCE_
<android.view.ViewGroup: int getChildCount()> -> _SOURCE_
<android.app.Activity: android.view.Window getWindow()> -> _SOURCE_
<android.content.res.ColorStateList: int getColorForState(int[],int)> -> _SOURCE_
<android.graphics.Bitmap: int getRowBytes()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebSettings getSettings()> -> _SOURCE_
<android.view.View: int getPaddingLeft()> -> _SOURCE_
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()> -> _SOURCE_
<java.lang.reflect.Field: long getLong(java.lang.Object)> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> -> _SOURCE_
<java.lang.ref.Reference: java.lang.Object get()> -> _SOURCE_
<android.app.ActivityManager: int getLargeMemoryClass()> -> _SOURCE_
<java.io.FileOutputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.graphics.Typeface: int getStyle()> -> _SOURCE_
<android.view.MotionEvent: int getActionIndex()> -> _SOURCE_
<android.view.View: int getTop()> -> _SOURCE_
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> -> _SOURCE_
<android.widget.TextView: int getPaintFlags()> -> _SOURCE_
<android.location.Location: long getElapsedRealtimeNanos()> -> _SOURCE_
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<android.text.Layout: int getLineForOffset(int)> -> _SOURCE_
<java.lang.Enum: java.lang.Class getDeclaringClass()> -> _SOURCE_
<org.json.JSONObject: double getDouble(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> -> _SOURCE_
<android.location.GpsSatellite: float getAzimuth()> -> _SOURCE_
