strict digraph G {
  1 [ label="<java.io.File: java.io.File getCanonicalFile()>" ];
  2 [ label="<jdk.internal.loader.URLClassPath: java.net.URL toFileURL(java.lang.String)>" ];
  3 [ label="<sun.security.provider.FileInputStreamPool: java.io.InputStream getInputStream(java.io.File)>" ];
  4 [ label="<fitnesse.responders.files.FileResponder: boolean isInFilesDirectory(java.io.File,java.io.File)>" ];
  5 [ label="<fitnesse.responders.files.FileResponder: fitnesse.http.Response makeResponse(fitnesse.FitNesseContext,fitnesse.http.Request)>" ];
  6 [ label="<fitnesse.responders.FilteringResponder: fitnesse.http.Response makeResponse(fitnesse.FitNesseContext,fitnesse.http.Request)>" ];
  7 [ label="<fitnesse.FitNesseExpediter: fitnesse.http.Response createGoodResponse(fitnesse.http.Request)>" ];
  8 [ label="<fitnesse.FitNesseExpediter: fitnesse.http.Response makeResponse(fitnesse.http.Request)>" ];
  9 [ label="<fitnesse.FitNesseExpediter: void run()>" ];
  10 [ label="<java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
}

