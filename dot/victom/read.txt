strict digraph G {
  1 [ label="<java.io.ByteArrayInputStream: int read()>" ];
  2 [ label="<sun.security.util.DerInputStream: int getLength(int,java.io.InputStream)>" ];
  3 [ label="<sun.security.util.DerInputStream: sun.security.util.BitArray getUnalignedBitString()>" ];
  4 [ label="<sun.security.util.HexDumpEncoder: int readFully(java.io.InputStream,byte[])>" ];
  5 [ label="<jdk.internal.util.xml.impl.Parser: java.io.Reader utf16(java.io.InputStream)>" ];
  6 [ label="<jdk.internal.util.xml.impl.Parser: java.io.Reader bom(java.io.InputStream,char)>" ];
  7 [ label="<sun.security.util.Password: char[] readPassword(java.io.InputStream,boolean)>" ];
  8 [ label="<org.apache.bcel.util.CodeHTML: java.lang.String codeToHTML(org.apache.bcel.util.ByteSequence,int)>" ];
  9 [ label="<org.apache.bcel.util.CodeHTML: void findGotos(org.apache.bcel.util.ByteSequence,org.apache.bcel.classfile.Method,org.apache.bcel.classfile.Code)>" ];
  10 [ label="<org.apache.bcel.classfile.Utility: java.lang.String codeToString(org.apache.bcel.util.ByteSequence,org.apache.bcel.classfile.ConstantPool,boolean)>" ];
  11 [ label="<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>" ];
  12 [ label="<com.redhat.victims.fingerprint.ClassFile: java.lang.String formatBytecode(org.apache.bcel.util.ByteSequence,org.apache.bcel.classfile.ConstantPool)>" ];
  13 [ label="<com.redhat.victims.fingerprint.ClassFile: byte[] normalize(byte[],java.lang.String)>" ];
  14 [ label="<sun.net.www.MeteredStream: int read()>" ];
  15 [ label="<sun.security.util.DerIndefLenConverter: byte[] convertStream(java.io.InputStream,byte,byte)>" ];
  16 [ label="<sun.security.util.DerInputStream: java.util.Date getGeneralizedTime()>" ];
  17 [ label="<sun.security.util.DerInputStream: byte[] getOctetString()>" ];
  18 [ label="<sun.security.util.DerInputStream: int getByte()>" ];
  19 [ label="<sun.security.util.DerInputStream: java.util.Date getUTCTime()>" ];
  20 [ label="<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>" ];
  21 [ label="<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSequence(int)>" ];
  22 [ label="<sun.security.util.DerValue: boolean getBoolean()>" ];
  23 [ label="<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int)>" ];
  24 [ label="<sun.security.util.DerInputStream: java.math.BigInteger getBigInteger()>" ];
  25 [ label="<sun.security.util.DerInputStream: sun.security.util.DerValue[] getSet(int,boolean)>" ];
  26 [ label="<sun.security.util.DerInputStream: int getInteger()>" ];
  27 [ label="<jdk.internal.util.xml.impl.ReaderUTF16: int read(char[],int,int)>" ];
  28 [ label="<jdk.internal.util.xml.impl.ReaderUTF16: int read()>" ];
  29 [ label="<jdk.internal.util.xml.impl.ReaderUTF8: int read(char[],int,int)>" ];
  30 [ label="<jdk.internal.util.xml.impl.ReaderUTF8: int read()>" ];
  31 [ label="<org.apache.commons.io.input.BOMInputStream: org.apache.commons.io.ByteOrderMark getBOM()>" ];
  32 [ label="<org.apache.commons.io.input.BOMInputStream: int read()>" ];
  33 [ label="<jdk.internal.icu.impl.ICUBinary: java.nio.ByteBuffer getRequiredData(java.lang.String)>" ];
  34 [ label="<sun.security.util.DerInputStream: int getLength(java.io.InputStream)>" ];
  35 [ label="<sun.security.util.DerInputStream: int getDefiniteLength(java.io.InputStream)>" ];
  36 [ label="<sun.security.util.DerValue: sun.security.util.DerInputStream init(boolean,java.io.InputStream,boolean)>" ];
  37 [ label="<sun.security.util.DerValue: void <init>(sun.security.util.DerInputBuffer)>" ];
  38 [ label="<sun.security.util.DerInputStream: sun.security.util.DerValue getDerValue()>" ];
  39 [ label="<sun.security.x509.AlgorithmId: sun.security.x509.AlgorithmId parse(sun.security.util.DerValue)>" ];
  40 [ label="<sun.security.x509.X509CertImpl: void parse(sun.security.util.DerValue)>" ];
  41 [ label="<sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>" ];
  42 [ label="<sun.security.x509.CertificateValidity: void <init>(sun.security.util.DerInputStream)>" ];
  43 [ label="<sun.security.x509.Extension: void <init>(sun.security.util.DerValue)>" ];
  44 [ label="<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>" ];
  45 [ label="<sun.security.x509.CertificateVersion: void construct(sun.security.util.DerValue)>" ];
  46 [ label="<sun.security.x509.CertificateAlgorithmId: void <init>(sun.security.util.DerInputStream)>" ];
  47 [ label="<sun.security.x509.CertificateX509Key: void <init>(sun.security.util.DerInputStream)>" ];
  48 [ label="<sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>" ];
  49 [ label="<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>" ];
  50 [ label="<sun.security.x509.X509CRLEntryImpl: void parse(sun.security.util.DerValue)>" ];
  51 [ label="<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>" ];
  52 [ label="<sun.security.x509.KeyIdentifier: void <init>(java.security.PublicKey)>" ];
  53 [ label="<sun.security.x509.AuthorityKeyIdentifierExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  54 [ label="<sun.security.x509.BasicConstraintsExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  55 [ label="<sun.security.x509.CertificatePoliciesExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  56 [ label="<sun.security.x509.ExtendedKeyUsageExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  57 [ label="<sun.security.x509.NameConstraintsExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  58 [ label="<sun.security.x509.PolicyConstraintsExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  59 [ label="<sun.security.x509.PolicyMappingsExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  60 [ label="<sun.security.x509.CRLDistributionPointsExtension: void <init>(sun.security.util.ObjectIdentifier,java.lang.Boolean,java.lang.Object,java.lang.String)>" ];
  61 [ label="<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>" ];
  62 [ label="<sun.security.x509.AuthorityInfoAccessExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  63 [ label="<sun.security.x509.DistributionPoint: void <init>(sun.security.util.DerValue)>" ];
  64 [ label="<sun.security.x509.AVA: void <init>(sun.security.util.DerValue)>" ];
  65 [ label="<sun.security.x509.GeneralSubtrees: void <init>(sun.security.util.DerValue)>" ];
  66 [ label="<sun.security.x509.GeneralSubtree: void <init>(sun.security.util.DerValue)>" ];
  67 [ label="<sun.security.x509.AccessDescription: void <init>(sun.security.util.DerValue)>" ];
  68 [ label="<sun.security.x509.CertificatePolicyMap: void <init>(sun.security.util.DerValue)>" ];
  69 [ label="<sun.security.x509.OtherName: void <init>(sun.security.util.DerValue)>" ];
  70 [ label="<sun.security.x509.EDIPartyName: void <init>(sun.security.util.DerValue)>" ];
  71 [ label="<sun.security.x509.PolicyInformation: void <init>(sun.security.util.DerValue)>" ];
  72 [ label="<sun.security.x509.IssuingDistributionPointExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  73 [ label="<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" ];
  74 [ label="<sun.security.pkcs.ESSCertId: void <init>(sun.security.util.DerValue)>" ];
  75 [ label="<sun.security.timestamp.TimestampToken: void parse(byte[])>" ];
  76 [ label="<sun.security.x509.X509Key: java.security.PublicKey parse(sun.security.util.DerValue)>" ];
  77 [ label="<sun.security.util.DerInputStream: int getDefiniteLength()>" ];
  78 [ label="<sun.security.util.ObjectIdentifier: void <init>(sun.security.util.DerInputStream)>" ];
  79 [ label="<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>" ];
  80 [ label="<sun.security.pkcs.ContentInfo: void <init>(sun.security.util.DerInputStream,boolean)>" ];
  81 [ label="<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>" ];
  82 [ label="<sun.security.x509.PrivateKeyUsageExtension: void <init>(java.lang.Boolean,java.lang.Object)>" ];
  83 [ label="<sun.security.pkcs.PKCS9Attribute: void <init>(sun.security.util.DerValue)>" ];
  84 [ label="<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>" ];
  85 [ label="<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>" ];
  86 [ label="<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>" ];
  87 [ label="<sun.security.x509.X500Name: void parseDER(sun.security.util.DerInputStream)>" ];
  88 [ label="<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>" ];
  89 [ label="<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>" ];
  90 [ label="<sun.security.pkcs.SigningCertificateInfo: void parse(byte[])>" ];
  91 [ label="<sun.security.provider.certpath.X509CertPath: java.util.List parsePKIPATH(java.io.InputStream)>" ];
  92 [ label="<sun.security.pkcs.ContentInfo: byte[] getContentBytes()>" ];
  93 [ label="<sun.security.util.DerValue: byte[] getOctetString()>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 20;
  20 -> 21;
  21 -> 22;
  22 -> 23;
  23 -> 24;
  24 -> 25;
  25 -> 26;
  26 -> 27;
  27 -> 28;
  28 -> 29;
  29 -> 30;
  30 -> 31;
  31 -> 32;
  32 -> 33;
  33 -> 34;
  34 -> 35;
  35 -> 36;
  36 -> 37;
  37 -> 38;
  38 -> 39;
  39 -> 40;
  40 -> 41;
  41 -> 42;
  42 -> 43;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  46 -> 47;
  47 -> 48;
  48 -> 49;
  49 -> 50;
  50 -> 51;
  51 -> 52;
  52 -> 53;
  53 -> 54;
  54 -> 55;
  55 -> 56;
  56 -> 57;
  57 -> 58;
  58 -> 59;
  59 -> 60;
  60 -> 61;
  61 -> 62;
  62 -> 63;
  63 -> 64;
  64 -> 65;
  65 -> 66;
  66 -> 67;
  67 -> 68;
  68 -> 69;
  69 -> 70;
  70 -> 71;
  71 -> 72;
  72 -> 73;
  73 -> 74;
  74 -> 75;
  75 -> 76;
  76 -> 77;
  77 -> 78;
  78 -> 79;
  79 -> 80;
  80 -> 16;
  16 -> 81;
  81 -> 82;
  82 -> 19;
  19 -> 83;
  83 -> 20;
  20 -> 25;
  25 -> 84;
  84 -> 23;
  23 -> 85;
  85 -> 86;
  86 -> 21;
  21 -> 87;
  87 -> 88;
  88 -> 89;
  89 -> 90;
  90 -> 91;
  91 -> 17;
  17 -> 92;
  92 -> 93;
  93 -> 3;
  3 -> 24;
  24 -> 26;
}

