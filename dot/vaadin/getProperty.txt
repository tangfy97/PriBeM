strict digraph G {
  1 [ label="<java.lang.System: java.lang.String getProperty(java.lang.String)>" ];
  2 [ label="<sun.security.action.GetPropertyAction: java.lang.String privilegedGetProperty(java.lang.String)>" ];
  3 [ label="<java.io.FileSystem: boolean getBooleanProperty(java.lang.String,boolean)>" ];
  4 [ label="<sun.security.util.SecurityProperties: java.lang.String getOverridableProperty(java.lang.String)>" ];
  5 [ label="<java.util.concurrent.ForkJoinPool: java.lang.Object newInstanceFromSystemProperty(java.lang.String)>" ];
  6 [ label="<sun.awt.OSInfo: sun.awt.OSInfo$WindowsVersion getWindowsVersion()>" ];
  7 [ label="<javax.xml.stream.FactoryFinder: java.lang.Object find(java.lang.Class,java.lang.String,java.lang.ClassLoader,java.lang.String)>" ];
  8 [ label="<java.lang.Boolean: boolean getBoolean(java.lang.String)>" ];
  9 [ label="<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>" ];
  10 [ label="<java.awt.GraphicsEnvironment: java.lang.Void lambda$getHeadlessProperty$0()>" ];
  11 [ label="<java.lang.ProcessHandleImpl: java.util.concurrent.Executor lambda$static$1()>" ];
  12 [ label="<jdk.xml.internal.SecuritySupport: java.lang.String lambda$getSystemProperty$0(java.lang.String)>" ];
  13 [ label="<sun.security.action.GetPropertyAction: java.lang.String run()>" ];
  14 [ label="<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.spi.FileSystemProvider getDefaultProvider()>" ];
  15 [ label="<sun.net.InetAddressCachePolicy$2: java.lang.Integer run()>" ];
  16 [ label="<sun.net.InetAddressCachePolicy$1: java.lang.Integer run()>" ];
  17 [ label="<java.awt.color.ICC_Profile: java.io.File getProfileFile(java.lang.String)>" ];
  18 [ label="<javax.swing.UIManager: void checkProperty(java.util.Properties,java.lang.String)>" ];
  19 [ label="<javax.swing.UIManager: java.lang.String makeSwingPropertiesFilename()>" ];
  20 [ label="<sun.java2d.windows.WindowsFlags$1: java.lang.Object run()>" ];
  21 [ label="<sun.java2d.windows.WindowsFlags: boolean getBooleanProp(java.lang.String,boolean)>" ];
  22 [ label="<sun.java2d.windows.WindowsFlags: boolean isBooleanPropTrueVerbose(java.lang.String)>" ];
  23 [ label="<sun.java2d.windows.WindowsFlags: boolean getPropertySet(java.lang.String)>" ];
  24 [ label="<jdk.internal.logger.BootstrapLogger$DetectBackend$1: jdk.internal.logger.BootstrapLogger$LoggingBackend run()>" ];
  25 [ label="<java.awt.Toolkit$1: java.lang.String run()>" ];
  26 [ label="<sun.awt.OSInfo: sun.awt.OSInfo$OSType getOSType()>" ];
  27 [ label="<sun.net.www.MimeTable$1: java.lang.Void run()>" ];
  28 [ label="<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>" ];
  29 [ label="<java.awt.EventQueue$3: java.lang.Object run()>" ];
  30 [ label="<java.awt.SequencedEvent$2: java.lang.Object run()>" ];
  31 [ label="<java.awt.DefaultKeyboardFocusManager$2: java.lang.Object run()>" ];
  32 [ label="<sun.font.FontUtilities$1: java.lang.Object run()>" ];
  33 [ label="<sun.font.StrikeCache$1: java.lang.Object run()>" ];
  34 [ label="<sun.font.SunFontManager$1: java.lang.Void run()>" ];
  35 [ label="<sun.font.FontManagerNativeLibrary$1: java.lang.Object run()>" ];
  36 [ label="<sun.awt.AppContext$3: sun.awt.AppContext run()>" ];
  37 [ label="<java.nio.channels.spi.SelectorProvider$Holder: java.nio.channels.spi.SelectorProvider loadProviderFromProperty()>" ];
  38 [ label="<sun.net.www.MimeTable: void load()>" ];
  39 [ label="<sun.net.www.MimeEntry: void setImageFileName(java.lang.String)>" ];
  40 [ label="<sun.security.jca.ProviderConfig$1: java.lang.Boolean run()>" ];
  41 [ label="<sun.font.SunFontManager$3: java.lang.Boolean run()>" ];
  42 [ label="<sun.font.SunFontManager$2: java.lang.Void run()>" ];
  43 [ label="<java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory1()>" ];
  44 [ label="<java.util.prefs.Preferences$1: java.lang.String run()>" ];
  45 [ label="<javax.swing.text.AbstractDocument$1: java.lang.String run()>" ];
  46 [ label="<sun.security.provider.PolicyFile$1: java.lang.String run()>" ];
  47 [ label="<sun.security.provider.PolicyFile$4: java.lang.Boolean run()>" ];
  48 [ label="<com.sun.imageio.plugins.bmp.BMPImageReader$5: java.lang.Boolean run()>" ];
  49 [ label="<sun.security.util.DomainName$Rules$1: java.io.InputStream run()>" ];
  50 [ label="<java.time.zone.ZoneRulesProvider$1: java.lang.Object run()>" ];
  51 [ label="<java.util.logging.Logger$SystemLoggerHelper$1: java.lang.String run()>" ];
  52 [ label="<java.util.logging.LogManager$1: java.util.logging.LogManager run()>" ];
  53 [ label="<java.util.logging.LogManager: void readConfiguration()>" ];
  54 [ label="<java.util.logging.LogManager: java.lang.String getConfigurationFileName()>" ];
  55 [ label="<sun.font.FileFont$1: java.lang.Boolean run()>" ];
  56 [ label="<com.vaadin.server.widgetsetutils.ClassPathExplorer: java.util.List getRawClasspathEntries()>" ];
  57 [ label="<java.util.logging.LogManager: void readPrimordialConfiguration()>" ];
  58 [ label="<java.util.logging.LogManager$2: java.lang.Object run()>" ];
  59 [ label="<java.util.logging.LogManager: void ensureLogManagerInitialized()>" ];
  60 [ label="<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>" ];
  61 [ label="<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)>" ];
  62 [ label="<java.util.logging.Logger: void checkPermission()>" ];
  63 [ label="<java.util.logging.Logger: void setParent(java.util.logging.Logger)>" ];
  64 [ label="<java.util.logging.LogManager: void doSetParent(java.util.logging.Logger,java.util.logging.Logger)>" ];
  65 [ label="<java.util.logging.LogManager$LogNode: void walkAndSetParent(java.util.logging.Logger)>" ];
  66 [ label="<java.util.logging.LogManager$LoggerContext: boolean addLocalLogger(java.util.logging.Logger,boolean)>" ];
  67 [ label="<java.util.logging.Logger: java.util.logging.Logger demandLogger(java.lang.String,java.lang.String,java.lang.Class)>" ];
  68 [ label="<java.util.logging.LogManager$LoggerContext: boolean requiresDefaultLoggers()>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 20;
  20 -> 21;
  21 -> 22;
  22 -> 23;
  23 -> 24;
  24 -> 25;
  25 -> 26;
  26 -> 27;
  27 -> 28;
  28 -> 29;
  29 -> 30;
  30 -> 31;
  31 -> 32;
  32 -> 33;
  33 -> 34;
  34 -> 35;
  35 -> 36;
  36 -> 37;
  37 -> 38;
  38 -> 39;
  39 -> 40;
  40 -> 41;
  41 -> 42;
  42 -> 43;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  46 -> 47;
  47 -> 48;
  48 -> 49;
  49 -> 50;
  50 -> 51;
  51 -> 52;
  52 -> 53;
  53 -> 54;
  54 -> 55;
  55 -> 56;
  53 -> 57;
  57 -> 58;
  58 -> 59;
  59 -> 60;
  60 -> 61;
  61 -> 62;
  62 -> 63;
  63 -> 64;
  64 -> 65;
  65 -> 66;
  66 -> 67;
  67 -> 68;
}

