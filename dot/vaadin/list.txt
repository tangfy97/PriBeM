strict digraph G {
  1 [ label="<java.io.File: java.lang.String[] list()>" ];
  2 [ label="<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>" ];
  3 [ label="<com.vaadin.server.widgetsetutils.ClassPathExplorer: void include(java.lang.String,java.io.File,java.util.Map)>" ];
  4 [ label="<com.vaadin.server.widgetsetutils.ClassPathExplorer: java.util.Map getClasspathLocations(java.util.List)>" ];
  5 [ label="<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>" ];
  6 [ label="<sun.net.www.protocol.file.FileURLConnection: void connect()>" ];
  7 [ label="<com.vaadin.server.widgetsetutils.ClassPathExplorer: void searchForWidgetSetsAndAddonStyles(java.lang.String,java.util.Map,java.util.Map)>" ];
  8 [ label="<com.vaadin.server.widgetsetutils.ClassPathExplorer: com.vaadin.server.widgetsetutils.ClassPathExplorer$LocationInfo getAvailableWidgetSetsAndStylesheets()>" ];
  9 [ label="<com.vaadin.server.themeutils.SASSAddonImportFileCreator: void updateTheme(java.lang.String)>" ];
  10 [ label="<sun.net.www.protocol.file.FileURLConnection: java.io.InputStream getInputStream()>" ];
  11 [ label="<java.util.ResourceBundle$Control$2: java.io.InputStream run()>" ];
  12 [ label="<java.util.ServiceLoader$LazyClassPathLookupIterator: java.util.Iterator parse(java.net.URL)>" ];
  13 [ label="<jdk.internal.loader.URLClassPath$Loader: jdk.internal.loader.Resource getResource(java.lang.String,boolean)>" ];
  14 [ label="<jdk.internal.loader.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>" ];
  15 [ label="<jdk.internal.loader.URLClassPath$Loader$1: java.io.InputStream getInputStream()>" ];
  16 [ label="<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>" ];
  17 [ label="<java.net.URL: java.io.InputStream openStream()>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  6 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
}

