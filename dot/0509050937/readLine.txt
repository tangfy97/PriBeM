strict digraph G {
  1 [ label="<java.io.BufferedReader: java.lang.String readLine()>" ];
  2 [ label="<java.util.ServiceLoader$LazyClassPathLookupIterator: int parseLine(java.net.URL,java.io.BufferedReader,int,java.util.Set)>" ];
  3 [ label="<jdk.internal.util.jar.JarIndex: void read(java.io.InputStream)>" ];
  4 [ label="<lombok.launch.ShadowClassLoader: boolean sclFileContainsSuffix(java.io.InputStream,java.lang.String)>" ];
  5 [ label="<lombok.launch.ShadowClassLoader: boolean isPartOfShadowSuffixJarBased(java.lang.String,java.lang.String)>" ];
  6 [ label="<lombok.launch.ShadowClassLoader: boolean isPartOfShadowSuffix(java.lang.String,java.lang.String,java.lang.String)>" ];
  7 [ label="<lombok.launch.ShadowClassLoader: java.util.Enumeration getResources(java.lang.String)>" ];
  8 [ label="<java.util.ServiceLoader$LazyClassPathLookupIterator: java.lang.Class nextProviderClass()>" ];
  9 [ label="<lombok.launch.ShadowClassLoader: boolean partOfShadow(java.lang.String,java.lang.String)>" ];
  10 [ label="<lombok.launch.ShadowClassLoader: java.net.URL getResourceSkippingSelf(java.lang.String)>" ];
  11 [ label="<lombok.launch.ShadowClassLoader: java.net.URL getResource_(java.lang.String,boolean)>" ];
  12 [ label="<lombok.launch.ShadowClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>" ];
  13 [ label="<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" ];
  14 [ label="<lombok.launch.ShadowClassLoader: java.net.URL getResource(java.lang.String)>" ];
  15 [ label="<java.util.ResourceBundle$Control$2: java.io.InputStream run()>" ];
  16 [ label="<java.util.ResourceBundle$Control: boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)>" ];
  17 [ label="<lombok.launch.ShadowClassLoader: boolean isPartOfShadowSuffixFileBased(java.lang.String,java.lang.String)>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
}

