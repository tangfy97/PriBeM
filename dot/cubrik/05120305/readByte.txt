strict digraph G {
  1 [ label="<java.io.DataInputStream: byte readByte()>" ];
  2 [ label="<sun.util.calendar.ZoneInfoFile: int readOffset(java.io.DataInput)>" ];
  3 [ label="<sun.util.calendar.ZoneInfoFile: long readEpochSec(java.io.DataInput)>" ];
  4 [ label="<sun.util.calendar.ZoneInfoFile: void load(java.io.DataInputStream)>" ];
  5 [ label="<jdk.internal.icu.impl.ICUBinary: byte[] readHeader(java.io.InputStream,byte[],jdk.internal.icu.impl.ICUBinary$Authenticate)>" ];
  6 [ label="<jdk.internal.jimage.decompressor.CompressIndexes: int readInt(java.io.DataInputStream)>" ];
  7 [ label="<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.io.DataInput,java.lang.String)>" ];
  8 [ label="<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo0(java.lang.String)>" ];
  9 [ label="<sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.lang.String)>" ];
  10 [ label="<sun.util.calendar.ZoneInfo: java.util.TimeZone getTimeZone(java.lang.String)>" ];
  11 [ label="<java.util.TimeZone: java.util.TimeZone parseCustomTimeZone(java.lang.String)>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
}

