strict digraph G {
  1 [ label="<java.lang.System: java.lang.String getProperty(java.lang.String)>" ];
  2 [ label="<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>" ];
  3 [ label="<sun.awt.OSInfo: sun.awt.OSInfo$WindowsVersion getWindowsVersion()>" ];
  4 [ label="<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>" ];
  5 [ label="<org.jvnet.mimepull.PropUtil: boolean getBooleanSystemProperty(java.lang.String,boolean)>" ];
  6 [ label="<org.jvnet.mimepull.FactoryFinder: java.lang.Object find(java.lang.String)>" ];
  7 [ label="<sun.security.util.SecurityProperties: java.lang.String getOverridableProperty(java.lang.String)>" ];
  8 [ label="<sun.security.action.GetPropertyAction: java.lang.String run()>" ];
  9 [ label="<jdk.xml.internal.SecuritySupport: java.lang.String lambda$getSystemProperty$0(java.lang.String)>" ];
  10 [ label="<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>" ];
  11 [ label="<com.sun.jmx.mbeanserver.GetPropertyAction: java.lang.String run()>" ];
  12 [ label="<sun.awt.OSInfo: sun.awt.OSInfo$OSType getOSType()>" ];
  13 [ label="<org.apache.log4j.lf5.viewer.configure.ConfigurationManager: java.lang.String getFilename()>" ];
  14 [ label="<sun.net.www.MimeTable: void load()>" ];
  15 [ label="<sun.net.www.MimeEntry: void setImageFileName(java.lang.String)>" ];
  16 [ label="<org.apache.log4j.lf5.viewer.configure.MRUFileManager: void createConfigurationDirectory()>" ];
  17 [ label="<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String getFilename()>" ];
  18 [ label="<com.sun.naming.internal.VersionHelper: java.io.InputStream lambda$getJavaHomeConfStream$4(java.lang.String)>" ];
  19 [ label="<com.sun.naming.internal.VersionHelper: java.lang.String lambda$getJndiProperty$1(int)>" ];
  20 [ label="<sun.security.action.GetPropertyAction: java.lang.String privilegedGetProperty(java.lang.String)>" ];
  21 [ label="<sun.security.util.SecurityConstants: void <clinit>()>" ];
  22 [ label="<sun.security.provider.SunEntries: void <clinit>()>" ];
  23 [ label="<sun.util.locale.provider.LocaleProviderAdapter: void <clinit>()>" ];
  24 [ label="<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>" ];
  25 [ label="<java.net.InetAddress: void <clinit>()>" ];
  26 [ label="<java.lang.invoke.InnerClassLambdaMetafactory: void <clinit>()>" ];
  27 [ label="<sun.nio.ch.Net: void <clinit>()>" ];
  28 [ label="<sun.security.util.SecurityProviderConstants: void <clinit>()>" ];
  29 [ label="<sun.net.ResourceManager: void <clinit>()>" ];
  30 [ label="<java.util.jar.JarFile: void <clinit>()>" ];
  31 [ label="<java.lang.invoke.MemoryAccessVarHandleGenerator: void <clinit>()>" ];
  32 [ label="<java.io.FilePermission: void <clinit>()>" ];
  33 [ label="<sun.security.util.Debug: void <clinit>()>" ];
  34 [ label="<sun.nio.ch.Util: long getMaxCachedBufferSize()>" ];
  35 [ label="<java.net.InetAddress: java.net.InetAddress$NameService createNameService()>" ];
  36 [ label="<java.nio.file.TempFileHelper: void <clinit>()>" ];
  37 [ label="<java.net.URL: java.net.URLStreamHandler lookupViaProperty(java.lang.String)>" ];
  38 [ label="<java.net.InetAddress$HostsFileNameService: void <clinit>()>" ];
  39 [ label="<java.net.AbstractPlainDatagramSocketImpl: void <clinit>()>" ];
  40 [ label="<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>" ];
  41 [ label="<java.io.File$TempDirectory: void <clinit>()>" ];
  42 [ label="<jdk.internal.logger.LoggerFinderLoader: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy configurationErrorPolicy()>" ];
  43 [ label="<jdk.internal.logger.LoggerFinderLoader: boolean ensureSingletonProvider()>" ];
  44 [ label="<jdk.internal.logger.SimpleConsoleLogger$Formatting: void <clinit>()>" ];
  45 [ label="<jdk.internal.logger.SimpleConsoleLogger$Formatting: java.lang.String getSimpleFormat(java.lang.String,java.util.function.Function)>" ];
  46 [ label="<sun.nio.fs.Util: void <clinit>()>" ];
  47 [ label="<sun.security.ssl.SSLLogger: void <clinit>()>" ];
  48 [ label="<java.lang.StackStreamFactory: void <clinit>()>" ];
  49 [ label="<jdk.internal.util.jar.JarIndex: void <clinit>()>" ];
  50 [ label="<java.lang.reflect.AccessibleObject: boolean printStackTraceWhenAccessFails()>" ];
  51 [ label="<java.security.ProtectionDomain: void <clinit>()>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 20;
  20 -> 21;
  21 -> 22;
  22 -> 23;
  23 -> 24;
  24 -> 25;
  25 -> 26;
  26 -> 27;
  27 -> 28;
  28 -> 29;
  29 -> 30;
  30 -> 31;
  31 -> 32;
  32 -> 33;
  33 -> 34;
  34 -> 35;
  35 -> 36;
  36 -> 37;
  37 -> 38;
  38 -> 39;
  39 -> 40;
  40 -> 41;
  41 -> 42;
  42 -> 43;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  46 -> 47;
  47 -> 48;
  48 -> 49;
  49 -> 50;
  50 -> 51;
}

