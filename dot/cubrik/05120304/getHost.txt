strict digraph G {
  1 [ label="<java.net.URL: java.lang.String getHost()>" ];
  2 [ label="<sun.net.util.IPAddressUtil: java.lang.String checkExternalForm(java.net.URL)>" ];
  3 [ label="<sun.security.provider.PolicyFile: java.security.CodeSource canonicalizeCodebase(java.security.CodeSource,boolean)>" ];
  4 [ label="<sun.net.util.URLUtil: java.lang.String urlNoFragString(java.net.URL)>" ];
  5 [ label="<sun.net.util.IPAddressUtil: java.lang.String checkAuthority(java.net.URL)>" ];
  6 [ label="<sun.awt.SunToolkit: void checkPermissions(java.net.URL)>" ];
  7 [ label="<jdk.internal.loader.URLClassPath: void check(java.net.URL)>" ];
  8 [ label="<jdk.internal.loader.FileURLMapper: java.lang.String getPath()>" ];
  9 [ label="<sun.net.www.protocol.file.Handler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>" ];
  10 [ label="<org.eclipse.core.runtime.internal.adaptor.LocationHelper: java.net.URL adjustTrailingSlash(java.net.URL,boolean)>" ];
  11 [ label="<org.eclipse.osgi.framework.debug.FrameworkDebugOptions: java.net.URL adjustTrailingSlash(java.net.URL,boolean)>" ];
  12 [ label="<org.eclipse.osgi.framework.debug.FrameworkDebugOptions: java.net.URL buildURL(java.lang.String,boolean)>" ];
  13 [ label="<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>" ];
  14 [ label="<org.glassfish.jersey.server.wadl.config.WadlGeneratorConfigLoader: org.glassfish.jersey.server.wadl.config.WadlGeneratorConfig loadWadlGeneratorsFromConfig(java.util.Map)>" ];
  15 [ label="<sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter forType(sun.util.locale.provider.LocaleProviderAdapter$Type)>" ];
  16 [ label="<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>" ];
  17 [ label="<sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>" ];
  18 [ label="<org.glassfish.jersey.internal.util.PropertiesHelper: java.lang.Object getValue(java.util.Map,javax.ws.rs.RuntimeType,java.lang.String,java.lang.Class)>" ];
  19 [ label="<org.eclipse.osgi.internal.profile.Profile: org.eclipse.osgi.internal.profile.ProfileLogger createProfileLogger()>" ];
  20 [ label="<org.apache.log4j.net.ZeroConfSupport: java.lang.Object createJmDNSVersion1()>" ];
  21 [ label="<org.apache.log4j.pattern.PatternParser: org.apache.log4j.pattern.PatternConverter createConverter(java.lang.String,java.lang.StringBuffer,java.util.Map,java.util.Map,java.util.List)>" ];
  22 [ label="<com.sun.org.apache.xerces.internal.utils.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>" ];
  23 [ label="<org.jvnet.mimepull.FactoryFinder: java.lang.Object newInstance(java.lang.String)>" ];
  24 [ label="<org.eclipse.osgi.framework.debug.FrameworkDebugOptions: org.eclipse.osgi.framework.debug.FrameworkDebugOptions getDefault()>" ];
  25 [ label="<org.eclipse.core.runtime.internal.stats.StatsManager: void setDebugOptions()>" ];
  26 [ label="<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)>" ];
  27 [ label="<sun.nio.cs.StandardCharsets: java.nio.charset.Charset lookup(java.lang.String)>" ];
  28 [ label="<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>" ];
  29 [ label="<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>" ];
  30 [ label="<sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>" ];
  31 [ label="<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>" ];
  32 [ label="<sun.security.x509.X500Name: javax.security.auth.x500.X500Principal asX500Principal()>" ];
  33 [ label="<sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>" ];
  34 [ label="<sun.security.x509.CRLExtensions: void parseExtension(sun.security.x509.Extension)>" ];
  35 [ label="<com.sun.naming.internal.ResourceManager: java.lang.Object getFactory(java.lang.String,java.util.Hashtable,javax.naming.Context,java.lang.String,java.lang.String)>" ];
  36 [ label="<org.eclipse.osgi.baseadaptor.HookRegistry: void loadConfigurators(java.util.List,java.util.List)>" ];
  37 [ label="<org.glassfish.jersey.server.wadl.config.WadlGeneratorLoader: org.glassfish.jersey.server.wadl.config.WadlGeneratorLoader$Callback setProperty(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>" ];
  38 [ label="<org.glassfish.hk2.utilities.reflection.ReflectionHelper: java.lang.Object makeMe(java.lang.reflect.Constructor,java.lang.Object[])>" ];
  39 [ label="<org.eclipse.osgi.internal.permadmin.PermissionInfoCollection: void addPermissions(java.security.PermissionCollection,java.lang.Class)>" ];
  40 [ label="<sun.nio.ch.Util: java.nio.MappedByteBuffer newMappedByteBuffer(int,long,java.io.FileDescriptor,java.lang.Runnable,boolean)>" ];
  41 [ label="<sun.nio.ch.Util: java.nio.MappedByteBuffer newMappedByteBufferR(int,long,java.io.FileDescriptor,java.lang.Runnable,boolean)>" ];
  42 [ label="<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object)>" ];
  43 [ label="<org.apache.log4j.PropertyConfigurator: void configureLoggerFactory(java.util.Properties)>" ];
  44 [ label="<org.apache.log4j.or.RendererMap: void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String)>" ];
  45 [ label="<org.apache.log4j.config.PropertySetter: java.lang.Object convertArg(java.lang.String,java.lang.Class)>" ];
  46 [ label="<org.apache.log4j.PropertyConfigurator: void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender)>" ];
  47 [ label="<org.apache.log4j.helpers.OptionConverter: void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository)>" ];
  48 [ label="<org.apache.log4j.LogManager: void <clinit>()>" ];
  49 [ label="<org.apache.log4j.helpers.OptionConverter: java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object)>" ];
  50 [ label="<org.apache.log4j.config.PropertySetter: void setProperties(java.util.Properties,java.lang.String)>" ];
  51 [ label="<org.apache.log4j.PropertyConfigurator: org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String)>" ];
  52 [ label="<org.apache.log4j.PropertyConfigurator: void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository)>" ];
  1 -> 2;
  2 -> 3;
  3 -> 4;
  4 -> 5;
  5 -> 6;
  6 -> 7;
  7 -> 8;
  8 -> 9;
  9 -> 10;
  10 -> 11;
  11 -> 12;
  12 -> 13;
  13 -> 14;
  14 -> 15;
  15 -> 16;
  16 -> 17;
  17 -> 18;
  18 -> 19;
  19 -> 20;
  20 -> 21;
  21 -> 22;
  22 -> 23;
  23 -> 24;
  24 -> 25;
  25 -> 26;
  26 -> 27;
  27 -> 28;
  28 -> 29;
  29 -> 30;
  30 -> 31;
  31 -> 32;
  32 -> 33;
  33 -> 34;
  34 -> 35;
  35 -> 36;
  36 -> 37;
  37 -> 38;
  38 -> 39;
  39 -> 40;
  40 -> 41;
  41 -> 42;
  42 -> 43;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  46 -> 47;
  47 -> 48;
  48 -> 49;
  49 -> 50;
  50 -> 51;
  51 -> 52;
}

