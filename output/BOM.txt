<java.io.BufferedInputStream: int available()>
<java.io.BufferedInputStream: int read()>
<java.io.BufferedInputStream: int read(byte[] b, int off, int len)>

<java.io.BufferedReader: int available()>
<java.io.BufferedReader: int read()>
<java.io.BufferedReader: int read(char[] cbuf, int off, int len)>
<java.io.BufferedReader: String	readLine()>

<java.io.ByteArrayInputStream: int available()>
<java.io.ByteArrayInputStream: int read()>
<java.io.ByteArrayInputStream: int read(byte[] b, int off, int len)>

<java.io.CharArrayReader: int available()>
<java.io.CharArrayReader: int read()>
<java.io.CharArrayReader: int read(char[] b, int off, int len)>

<java.io.DataInputStream: int read(byte[] b)>
<java.io.DataInputStream: int read(byte[] b, int off, int len)>
<java.io.DataInputStream: byte readByte()>
<java.io.DataInputStream: char readChar()>
<java.io.DataInputStream: double readDouble()>
<java.io.DataInputStream: float	readFloat()>
<java.io.DataInputStream: String readLine()>
<java.io.DataInputStream: long readLong()>
<java.io.DataInputStream: short readShort()>
<java.io.DataInputStream: int readUnsignedByte()>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: String readUTF()>

<java.io.File: File createTempFile(String prefix, String suffix)>
<java.io.File: File createTempFile(String prefix, String suffix, File directory)>
<java.io.File: File getAbsoluteFile()>
<java.io.File: String getAbsolutePath()>
<java.io.File: File getCanonicalFile()>
<java.io.File: String getCanonicalPath()>
<java.io.File: String getName()>
<java.io.File: String getParent()>
<java.io.File: File getParentFile()>
<java.io.File: String getPath()>
<java.io.File: int hashCode()>
<java.io.File: String[]	list()>
<java.io.File: String[]	list(FilenameFilter filter)>
<java.io.File: File[] listFiles()>
<java.io.File: File[] listFiles(FileFilter filter)>
<java.io.File: File[] listFiles(FilenameFilter filter)>
<java.io.File: File[] listRoots()>
<java.io.File: Path toPath()>
<java.io.File: String toString()>
<java.io.File: URI toURI()>

<java.io.FileInputStream: int available()>
<java.io.FileInputStream: FileChannel getChannel()>
<java.io.FileInputStream: FileDescriptor getFD()>
<java.io.FileInputStream: int read()>
<java.io.FileInputStream: int read(byte[] b)>
<java.io.FileInputStream: int read(byte[] b, int off, int len)>

<java.io.FilterInputStream: int available()>
<java.io.FilterInputStream: int read()>
<java.io.FilterInputStream: int read(byte[] b)>
<java.io.FilterInputStream: int read(byte[] b, int off, int len)>

<java.io.FilterReader: int read()>
<java.io.FilterReader: int read(char[] cbuf, int off, int len)>

<java.io.InputStream: int available()>
<java.io.InputStream: int read(byte[] b)>
<java.io.InputStream: int read(byte[] b, int off, int len)>

<java.io.InputStreamReader: String getEncoding()>
<java.io.InputStreamReader: int read()>
<java.io.InputStreamReader: int read(char[] cbuf, int offset, int length)>

<java.io.LineNumberReader: int read()>
<java.io.LineNumberReader: int read(char[] cbuf, int off, int len)>
<java.io.LineNumberReader: String readLine()>

<java.io.ObjectInputStream: int available()>
<java.io.ObjectInputStream: int read()>
<java.io.ObjectInputStream: int read(byte[] buf, int off, int len)>
<java.io.ObjectInputStream: byte readByte()>
<java.io.ObjectInputStream: char readChar()>
<java.io.ObjectInputStream: double readDouble()>
<java.io.ObjectInputStream: float readFloat()>
<java.io.ObjectInputStream: String readLine()>
<java.io.ObjectInputStream: long readLong()>
<java.io.ObjectInputStream: short readShort()>
<java.io.ObjectInputStream: ObjectInputStream.GetField readFields()>
<java.io.ObjectInputStream: int readInt()>
<java.io.ObjectInputStream: Object readObject()>
<java.io.ObjectInputStream: int available()>

<java.io.PipedInputStream: int available()>
<java.io.PipedInputStream: int read()>
<java.io.PipedInputStream: int read(byte[] b, int off, int len)>

<java.io.PipedReader: int read()>
<java.io.PipedReader: int read(char[] cbuf, int off, int len)>

<java.io.PushbackInputStream: int available()>
<java.io.PushbackInputStream: int read()>
<java.io.PushbackInputStream: int read(byte[] b, int off, int len)>

<java.io.RandomAccessFile: int read()>
<java.io.RandomAccessFile: int read(byte[] b)>
<java.io.RandomAccessFile: int read(byte[] b, int off, int len)>
<java.io.RandomAccessFile: byte readByte()>
<java.io.RandomAccessFile: char readChar()>
<java.io.RandomAccessFile: double readDouble()>
<java.io.RandomAccessFile: float readFloat()>
<java.io.RandomAccessFile: String readLine()>
<java.io.RandomAccessFile: long readLong()>
<java.io.RandomAccessFile: short readShort()>
<java.io.RandomAccessFile: int readInt()>

<java.io.Reader: int read()>
<java.io.Reader: int read(char[] cbuf)>
<java.io.Reader: int read(char[] cbuf, int off, int len)>
<java.io.Reader: int read(CharBuffer target)>

<java.io.SequenceInputStream: int available()>
<java.io.SequenceInputStream: int read()>
<java.io.SequenceInputStream: int read(byte[] b, int off, int len)>

<java.io.StringReader: int read()>
<java.io.StringReader: int read(char[] cbuf, int off, int len)>

<java.util.Scanner: String next()>
<java.util.Scanner: String next(Pattern pattern)>
<java.util.Scanner: String next(String pattern)>
<java.util.Scanner: boolean nextBoolean()>
<java.util.Scanner: byte nextByte()>
<java.util.Scanner: double nextDouble()>
<java.util.Scanner: float nextFloat()>
<java.util.Scanner: int	nextInt()>
<java.util.Scanner: int	nextInt(int radix)>
<java.util.Scanner: String nextLine()>
<java.util.Scanner: long nextLong()>
<java.util.Scanner: long nextLong(int radix)>
<java.util.Scanner: short nextShort()>
<java.util.Scanner: short nextShort(int radix)>
<java.util.Scanner: String toString()>
















