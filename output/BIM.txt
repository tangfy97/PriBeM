<java.util.logging.Logger: void	log(Level level, String msg)>
<java.util.logging.Logger: void	log(Level level, String msg, Object param1)>
<java.util.logging.Logger: void	log(Level level, String msg, Object[] params)>
<java.util.logging.Logger: void	log(Level level, String msg, Throwable thrown)>
<java.util.logging.Logger: void	log(LogRecord record)>
<java.util.logging.Logger: void	logp(Level level, String sourceClass, String sourceMethod, String msg)>
<java.util.logging.Logger: void	logp(Level level, String sourceClass, String sourceMethod, String msg, Object param1)>
<java.util.logging.Logger: void	logp(Level level, String sourceClass, String sourceMethod, String msg, Object[] params)>
<java.util.logging.Logger: void	logp(Level level, String sourceClass, String sourceMethod, String msg, Throwable thrown)>
<java.util.logging.Logger: void	logrb(Level level, String sourceClass, String sourceMethod, String bundleName, String msg)>
<java.util.logging.Logger: void	logrb(Level level, String sourceClass, String sourceMethod, String bundleName, String msg, Object param1)>
<java.util.logging.Logger: void	logrb(Level level, String sourceClass, String sourceMethod, String bundleName, String msg, Object[] params)>
<java.util.logging.Logger: void	logrb(Level level, String sourceClass, String sourceMethod, String bundleName, String msg, Throwable thrown)>
<java.util.logging.Logger: void	severe(String msg)>
<java.util.logging.Logger: void	warning(String msg)>

<java.io.BufferedOutputStream: void write(byte[] b, int off, int len)>
<java.io.BufferedOutputStream: void write(int b)>

<java.io.BufferedWriter: void write(char[] cbuf, int off, int len)>
<java.io.BufferedWriter: void write(int c)>
<java.io.BufferedWriter: write(String s, int off, int len)>

<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.io.ByteArrayOutputStream: String toString()>
<java.io.ByteArrayOutputStream: String toString(String charsetName)>
<java.io.ByteArrayOutputStream: void write(byte[] b, int off, int len)>
<java.io.ByteArrayOutputStream: void writeTo(OutputStream out)>

<java.io.CharArrayWriter: char[] toCharArray()>
<java.io.CharArrayWriter: String toString()>
<java.io.CharArrayWriter: void write(char[] c, int off, int len)>
<java.io.CharArrayWriter: void write(int c)>
<java.io.CharArrayWriter: void write(String str, int off, int len)>
<java.io.CharArrayWriter: void writeTo(Writer out)>

<java.io.DataOutputStream: void	write(byte[] b, int off, int len)>
<java.io.DataOutputStream: void	write(int b)>
<java.io.DataOutputStream: void	writeBoolean(boolean v)>
<java.io.DataOutputStream: void	writeByte(int v)>
<java.io.DataOutputStream: void	writeBytes(String s)>
<java.io.DataOutputStream: void	writeChar(int v)>
<java.io.DataOutputStream: void	writeChars(String s)>
<java.io.DataOutputStream: void	writeDouble(double v)>
<java.io.DataOutputStream: void	writeFloat(float v)>
<java.io.DataOutputStream: void	writeInt(int v)>
<java.io.DataOutputStream: void	writeLong(long v)>
<java.io.DataOutputStream: void	writeShort(int v)>
<java.io.DataOutputStream: void	writeUTF(String str)>

<java.io.File: boolean delete()> -> _SINK_

<java.io.FileOutputStream: void	write(byte[] b)>
<java.io.FileOutputStream: void	write(byte[] b, int off, int len)>
<java.io.FileOutputStream: void	write(int b)>

<java.io.FilterOutputStream: void write(byte[] b)>
<java.io.FilterOutputStream: void write(byte[] b, int off, int len)>
<java.io.FilterOutputStream: void write(int b)>

<java.io.FilterWriter: void write(char[] cbuf, int off, int len)>
<java.io.FilterWriter: void write(int c)>
<java.io.FilterWriter: void write(String str, int off, int len)>

<java.io.ObjectOutputStream: void write(byte[] buf)>
<java.io.ObjectOutputStream: void write(byte[] buf, int off, int len)>
<java.io.ObjectOutputStream: void write(int val)>
<java.io.ObjectOutputStream: void writeBoolean(boolean val)>
<java.io.ObjectOutputStream: void writeByte(int val)>
<java.io.ObjectOutputStream: void writeBytes(String str)>
<java.io.ObjectOutputStream: void writeChar(int val)>
<java.io.ObjectOutputStream: void writeChars(String str)>
<java.io.ObjectOutputStream: void writeFields()>
<java.io.ObjectOutputStream: void writeFloat(float val)>
<java.io.ObjectOutputStream: void writeInt(int val)>
<java.io.ObjectOutputStream: void writeLong(long val)>
<java.io.ObjectOutputStream: void writeObject(Object obj)>
<java.io.ObjectOutputStream: void writeShort(int val)>
<java.io.ObjectOutputStream: void writeUTF(String str)>

<java.io.OutputStreamWriter: void write(char[] cbuf, int off, int len)>
<java.io.OutputStreamWriter: void write(int c)>
<java.io.OutputStreamWriter: void write(String str, int off, int len)>

<java.io.PipedOutputStream: void write(byte[] b, int off, int len)>
<java.io.PipedOutputStream: void write(int b)>

<java.io.PipedWriter: void write(char[] cbuf, int off, int len)>
<java.io.PipedWriter: void write(int c)>

<java.io.PrintStream: PrintStream append(char c)>
<java.io.PrintStream: PrintStream append(CharSequence csq)>
<java.io.PrintStream: PrintStream append(CharSequence csq, int start, int end)>
<java.io.PrintStream: PrintStream format(Locale l, String format, Object... args)>
<java.io.PrintStream: PrintStream format(String format, Object... args)>
<java.io.PrintStream: void print(boolean b)>
<java.io.PrintStream: void print(char c)>
<java.io.PrintStream: void print(char[] s)>
<java.io.PrintStream: void print(double d)>
<java.io.PrintStream: void print(float f)>
<java.io.PrintStream: void print(int i)>
<java.io.PrintStream: void print(long l)>
<java.io.PrintStream: void print(Object obj)>
<java.io.PrintStream: void print(String s)>
<java.io.PrintStream: PrintStream printf(Locale l, String format, Object... args)>
<java.io.PrintStream: PrintStream printf(String format, Object... args)>
<java.io.PrintStream: void println()>
<java.io.PrintStream: void println(boolean x)>
<java.io.PrintStream: void println(char x)>
<java.io.PrintStream: void println(char[] x)>
<java.io.PrintStream: void println(double x)>
<java.io.PrintStream: void println(float x)>
<java.io.PrintStream: void println(int x)>
<java.io.PrintStream: void println(long x)>
<java.io.PrintStream: void println(Object x)>
<java.io.PrintStream: void println(String x)>
<java.io.PrintStream: void write(byte[] buf, int off, int len)>
<java.io.PrintStream: void write(int b)>

<java.io.PrintWriter: PrintWriter append(char c)>
<java.io.PrintWriter: PrintWriter append(CharSequence csq)>
<java.io.PrintWriter: PrintWriter append(CharSequence csq, int start, int end)>
<java.io.PrintWriter: PrintWriter format(Locale l, String format, Object... args)>
<java.io.PrintWriter: PrintWriter format(String format, Object... args)>
<java.io.PrintWriter: void print(boolean b)>
<java.io.PrintWriter: void print(char c)>
<java.io.PrintWriter: void print(char[] s)>
<java.io.PrintWriter: void print(double d)>
<java.io.PrintWriter: void print(float f)>
<java.io.PrintWriter: void print(int i)>
<java.io.PrintWriter: void print(long l)>
<java.io.PrintWriter: void print(Object obj)>
<java.io.PrintWriter: void print(String s)>
<java.io.PrintWriter: PrintWriter printf(Locale l, String format, Object... args)>
<java.io.PrintWriter: PrintWriter printf(String format, Object... args)>
<java.io.PrintWriter: void println()>
<java.io.PrintWriter: void println(boolean x)>
<java.io.PrintWriter: void println(char x)>
<java.io.PrintWriter: void println(char[] x)>
<java.io.PrintWriter: void println(double x)>
<java.io.PrintWriter: void println(float x)>
<java.io.PrintWriter: void println(int x)>
<java.io.PrintWriter: void println(long x)>
<java.io.PrintWriter: void println(Object x)>
<java.io.PrintWriter: void println(String x)>
<java.io.PrintWriter: void write(char[] buf)>
<java.io.PrintWriter: void write(char[] buf, int off, int len)>
<java.io.PrintWriter: void write(int c)>
<java.io.PrintWriter: void write(String s)>
<java.io.PrintWriter: void write(String s, int off, int len)>

<java.io.PushbackReader: int read()>
<java.io.PushbackReader: int read(char[] cbuf, int off, int len)>

<java.io.StringWriter: StringWriter append(char c)>
<java.io.StringWriter: StringWriter append(CharSequence csq)>
<java.io.StringWriter: StringWriter append(CharSequence csq, int start, int end)>
<java.io.StringWriter: StringBuffer getBuffer()>
<java.io.StringWriter: String toString()>
<java.io.StringWriter: void write(char[] cbuf, int off, int len)>
<java.io.StringWriter: void write(int c)>
<java.io.StringWriter: void write(String str)>
<java.io.StringWriter: void write(String str, int off, int len)>

<java.io.Writer: Writer	append(char c)>
<java.io.Writer: Writer	append(CharSequence csq)>
<java.io.Writer: Writer	append(CharSequence csq, int start, int end)>
<java.io.Writer: void	write(char[] cbuf)>
<java.io.Writer: void	write(int c)>
<java.io.Writer: void	write(String str)>
<java.io.Writer: void	write(String str, int off, int len)>

<javax.persistence.EntityManager: javax.persistence.TypedQuery createQuery(java.lang.String,java.lang.Class)> -> _SINK_
<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)> -> _SINK_
<com.mysql.jdbc.Statement: java.sql.ResultSet executeQuery(java.lang.String)> -> _SINK_
<org.apache.xmlrpc.webserver.ConnectionServer: void writeResponse(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,java.io.OutputStream,java.lang.Object)> -> _SINK_
<org.apache.xmlrpc.webserver.Connection: void writeResponseHeader(org.apache.xmlrpc.webserver.RequestData,int)> -> _SINK_
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: void sendMessage(org.springframework.web.socket.WebSocketMessage)> -> _SINK_

<java.net.URLConnection: void connect()> -> _SINK_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SINK_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SINK_

<java.net.URL: java.io.InputStream openStream()> -> _SINK_
<java.net.URL: java.lang.Object getContent()> -> _SINK_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _SINK_

<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> -> _SINK_
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_

<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_

<java.lang.ProcessBuilder: java.lang.Process start()> -> _SINK_

<android.bluetooth.BluetoothSocket: InputStream	getInputStream()>
<android.bluetooth.BluetoothSocket: OutputStream getOutputStream()>

































