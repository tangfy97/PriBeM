<org.apache.commons.io.input.Tailer: void run()> -> _DEFECT_
<com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)> -> _DEFECT_
<org.apache.commons.io.IOUtils: java.lang.String toString(java.net.URL,java.lang.String)> -> _DEFECT_
<org.apache.hc.core5.ssl.SSLContextBuilder: org.apache.hc.core5.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL,char[])> -> _DEFECT_
<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)> -> _DEFECT_
<com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)> -> _DEFECT_
<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)> -> _DEFECT_
<org.apache.commons.io.IOUtils: java.lang.String toString(java.net.URL)> -> _DEFECT_
<org.apache.hc.core5.ssl.SSLContextBuilder: org.apache.hc.core5.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL,char[],char[])> -> _DEFECT_
<org.apache.hc.client5.http.psl.PublicSuffixMatcherLoader: org.apache.hc.client5.http.psl.PublicSuffixMatcher getDefault()> -> _DEFECT_
<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: long skip(long)> -> _DEFECT_
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)> -> _DEFECT_
<org.apache.commons.io.IOUtils: byte[] toByteArray(java.net.URL)> -> _DEFECT_
<com.bumptech.glide.load.model.StreamEncoder: boolean encode(java.lang.Object,java.io.OutputStream)> -> _DEFECT_
<org.apache.commons.io.IOUtils: long copy(java.net.URL,java.io.File)> -> _DEFECT_
<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int read(byte[],int,int)> -> _DEFECT_
<org.apache.commons.io.IOUtils: java.lang.String toString(java.net.URI,java.nio.charset.Charset)> -> _DEFECT_
<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int read()> -> _DEFECT_
