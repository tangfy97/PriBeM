<org.bouncycastle.asn1.DERApplicationSpecific: void <init>(int,org.bouncycastle.asn1.ASN1EncodableVector)>
<com.sun.java.help.search.BtreeDictParameters: void write()>
<es.gob.afirma.signers.tsp.pkcs7.CMSTimestamper: byte[] getTSAResponseHttp(byte[])>
<com.sun.java.help.search.DefaultIndexBuilder: void removeExistingFiles(java.lang.String)>
<net.java.xades.util.Base64: void encodeToFile(byte[],java.lang.String)>
<com.sun.java.help.search.DefaultIndexBuilder: void close()>
<com.lowagie.text.pdf.RandomAccessFileOrArray: byte[] InputStreamToArray(java.io.InputStream)>
<com.lowagie.text.xml.xmp.XmpReader: byte[] serializeDoc()>
<com.lowagie.text.xml.XmlDomWriter: void normalizeAndPrint(char,boolean)>
<net.sf.jmimemagic.MagicParser: java.nio.ByteBuffer convertOctals(java.lang.String)>
<org.bouncycastle.asn1.ASN1Object: byte[] getEncoded()>
<com.lowagie.text.pdf.PdfPKCS7: byte[] getEncodedPKCS1()>
<es.gob.afirma.signers.ooxml.be.fedict.eid.applet.service.signer.AbstractXmlSignatureService: byte[] getSignedXML(java.lang.String,java.util.List,java.util.List,java.security.PrivateKey)>
<org.bouncycastle.util.io.Streams: byte[] readAllLimited(java.io.InputStream,int)>
<net.java.xades.util.Base64: void decodeToFile(java.lang.String,java.lang.String)>
<com.lowagie.text.pdf.PdfReader: byte[] getPageContent(int,com.lowagie.text.pdf.RandomAccessFileOrArray)>
<es.gob.afirma.signers.pades.PdfDocumentSecurityStore: byte[] getContentBytesFromContentObject(com.lowagie.text.pdf.PdfObject)>
<com.sun.java.help.search.MemoryRAFFile: void <init>(java.net.URLConnection)>
<com.lowagie.text.pdf.Pfm2afm: void outchar(int,int,java.lang.String)>
<org.bouncycastle.asn1.ASN1Object: byte[] getEncoded(java.lang.String)>
<org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>
<net.java.xades.util.Base64: java.lang.String encodeObject(java.io.Serializable,int)>
<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.cms.CMSEnvelopedData doGenerate(org.bouncycastle.cms.CMSTypedData,org.bouncycastle.operator.OutputEncryptor)>
<org.bouncycastle.asn1.BERConstructedOctetString: byte[] toBytes(java.util.Vector)>
<com.lowagie.text.pdf.PdfReader: byte[] ASCII85Decode(byte[])>
<org.bouncycastle.ocsp.OCSPReq: boolean verify(java.security.PublicKey,java.lang.String)>
<es.gob.afirma.signers.ooxml.be.fedict.eid.applet.service.signer.AbstractXmlSignatureService: byte[] postSign(byte[],java.util.List,java.lang.String,byte[])>
<javax.help.FlatMap$FlatMapResourceBundle: void <init>(javax.help.FlatMap,java.net.URL)>
<com.lowagie.text.pdf.PdfSignatureAppearance: void close(com.lowagie.text.pdf.PdfDictionary)>
<com.lowagie.text.pdf.Pfm2afm: void putkerntab()>
<net.java.xades.util.XMLUtils: void printChildElements(org.w3c.dom.Element,java.io.PrintStream,boolean,java.lang.String)>
<org.bouncycastle.ocsp.OCSPReq: java.util.List getCertList(java.lang.String)>
<com.lowagie.text.pdf.codec.PngImage: com.lowagie.text.Image getImage()>
<com.lowagie.text.pdf.XfaForm: void <init>(com.lowagie.text.pdf.PdfReader)>
<com.lowagie.text.xml.simpleparser.SimpleXMLParser: void parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)>
<com.lowagie.text.pdf.SimpleBookmark: void exportToXMLNode(java.util.List,java.io.Writer,int,boolean)>
<com.lowagie.text.pdf.codec.TiffImage: com.lowagie.text.Image getTiffImageColor(com.lowagie.text.pdf.codec.TIFFDirectory,com.lowagie.text.pdf.RandomAccessFileOrArray)>
<es.gob.afirma.signers.odf.AOODFSigner: es.gob.afirma.core.util.tree.AOTreeModel getSignersStructure(byte[],boolean)>
<com.lowagie.text.pdf.codec.PngImage: void readPng()>
<com.lowagie.text.pdf.codec.JBIG2SegmentReader$JBIG2Page: byte[] getData(boolean)>
<javax.help.plaf.gtk.GTKCursorFactory: java.awt.Cursor createCursor(java.lang.String)>
<com.lowagie.text.xml.xmp.XmpWriter: void <init>(java.io.OutputStream,java.lang.String,int)>
<com.lowagie.text.pdf.Type1Font: void <init>(java.lang.String,java.lang.String,boolean,byte[],byte[],boolean)>
<com.lowagie.text.pdf.Pfm2afm: void putheader()>
<org.bouncycastle.tsp.TimeStampToken: void <init>(org.bouncycastle.cms.CMSSignedData)>
<org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void writeObject(java.io.ObjectOutputStream)>
<javax.help.plaf.basic.BasicCursorFactory: java.awt.Cursor createCursor(java.lang.String)>
<com.lowagie.text.pdf.PdfReader: byte[] FlateDecode(byte[],boolean)>
<net.java.xades.util.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>
<org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)>
<javax.help.HelpUtilities: java.net.URL getLocalizedResource(java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.Locale,boolean)>
<com.lowagie.text.pdf.PdfEFStream: void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream)>
<com.lowagie.text.pdf.Pfm2afm: void outval(int)>
<net.java.xades.util.Base64: byte[] decode(java.lang.String,int)>
<es.gob.afirma.signers.cms.CoSigner: byte[] coSigner(es.gob.afirma.signers.pkcs7.P7ContentSignerParameters,byte[],boolean,java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],java.util.Map,java.util.Map,byte[])>
<es.gob.afirma.signers.multi.cades.CAdESTriPhaseCoSigner: org.bouncycastle.asn1.cms.ContentInfo getContentInfoFromContent(byte[])>
<javax.help.FavoritesView: javax.help.FavoritesNode parse(javax.help.HelpSet,java.util.Locale,javax.help.TreeItemFactory)>
<com.lowagie.text.pdf.PdfStream: void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream)>
<es.gob.afirma.signers.xades.AOXAdESSigner: byte[] getData(byte[])>
<com.lowagie.text.pdf.PdfStream: void flateCompress(int)>
<com.lowagie.text.pdf.Pfm2afm: void putchartab()>
<com.sun.java.help.search.Schema: void read()>
<org.bouncycastle.ocsp.OCSPReq: byte[] getEncoded()>
<org.bouncycastle.asn1.ASN1Set: byte[] getEncoded(org.bouncycastle.asn1.ASN1Encodable)>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getShort(java.lang.String)>
<org.bouncycastle.asn1.DERObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,java.math.BigInteger)>
<es.gob.afirma.signers.ooxml.be.fedict.eid.applet.service.signer.ooxml.AbstractOOXMLSignatureService: byte[] outputSignedOfficeOpenXMLDocument(byte[])>
<com.sun.java.help.search.IntegerArray: void print(java.io.PrintStream)>
<com.lowagie.text.pdf.PdfPublicKeySecurityHandler: byte[] getEncodedRecipient(int)>
<org.bouncycastle.util.encoders.Base64: byte[] decode(byte[])>
<org.bouncycastle.util.encoders.Base64: byte[] decode(java.lang.String)>
<com.lowagie.text.pdf.GlyphList: void <clinit>()>
<javax.help.FavoritesNode: void exportNode(java.io.OutputStreamWriter)>
<com.lowagie.text.xml.xmp.XmpWriter: void close()>
<org.bouncycastle.util.encoders.Hex: byte[] decode(byte[])>
<com.sun.java.help.search.SearchEnvironment: void readFromDB()>
<es.gob.afirma.envelopers.cms.BinaryUtils: byte[] compress(byte[])>
<com.sun.java.help.search.Schema: void save()>
<com.sun.java.help.search.DocumentCompressor: void <init>(java.net.URL)>
<net.java.xades.security.xml.XAdES.SignaturePolicyIdentifierImpl: void setIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<es.gob.afirma.signers.ooxml.be.fedict.eid.applet.service.signer.ooxml.RelationshipTransformService: javax.xml.crypto.OctetStreamData toOctetStreamData(org.w3c.dom.Node)>
<com.sun.java.help.search.RAFFileFactory: com.sun.java.help.search.RAFFile createLocalRAFFile(java.net.URL)>
<es.gob.afirma.envelopers.cms.CMSAuthenticatedData: byte[] genAuthenticatedData(es.gob.afirma.signers.pkcs7.P7ContentSignerParameters,java.security.cert.X509Certificate[],java.lang.String,es.gob.afirma.core.ciphers.AOCipherConfig,java.security.cert.X509Certificate[],java.lang.String,boolean,java.util.Map,java.util.Map,java.lang.Integer)>
<javax.help.FavoritesNode: java.io.OutputStreamWriter exportHeader(java.io.OutputStream)>
<com.lowagie.text.pdf.SimpleBookmark: void exportToXML(java.util.List,java.io.Writer,java.lang.String,boolean)>
<com.lowagie.text.pdf.codec.Base64: byte[] decode(java.lang.String,int)>
<es.gob.afirma.ui.core.jse.CertificateUtils: void openCert(java.awt.Component,java.security.cert.X509Certificate)>
<org.bouncycastle.util.Strings: byte[] toUTF8ByteArray(char[])>
<com.lowagie.text.pdf.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.lowagie.text.pdf.TSAClient,byte[])>
<org.bouncycastle.ocsp.BasicOCSPResp: java.util.List getCertList(java.lang.String)>
<javax.help.IndexView: javax.swing.tree.DefaultMutableTreeNode parse(java.net.URL,javax.help.HelpSet,java.util.Locale,javax.help.TreeItemFactory)>
<javax.help.SwingHelpUtilities: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>
<com.lowagie.text.pdf.Pfm2afm: void puttrailer()>
<com.lowagie.text.pdf.PdfWriter: byte[] createXmpMetadataBytes()>
<com.lowagie.text.pdf.PRStream: void <init>(com.lowagie.text.pdf.PdfReader,byte[],int)>
<es.gob.afirma.signers.tsp.pkcs7.CMSTimestamper: byte[] getTSAResponseExternalSocket(byte[],java.net.Socket)>
<com.lowagie.text.pdf.codec.Base64: java.lang.String encodeBytes(byte[],int,int,int)>
<org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>
<net.java.xades.util.SystemUtils: byte[] toByteArray(java.io.InputStream)>
<es.gob.afirma.ciphers.AOCipherKeyStoreHelper: boolean removeStore()>
<net.java.xades.security.xml.XAdES.SignaturePolicyIdentifierImpl: byte[] inputStreamToByteArray(java.io.InputStream)>
<com.lowagie.text.pdf.PdfReader: byte[] ASCIIHexDecode(byte[])>
<com.lowagie.text.pdf.SimpleNamedDestination: void exportToXML(java.util.HashMap,java.io.Writer,java.lang.String,boolean)>
<com.lowagie.text.pdf.PdfReader: byte[] decodePredictor(byte[],com.lowagie.text.pdf.PdfObject)>
<org.bouncycastle.asn1.BEROctetString: byte[] toBytes(org.bouncycastle.asn1.ASN1OctetString[])>
<com.lowagie.text.pdf.PRStream: void setData(byte[],boolean,int)>
<org.bouncycastle.asn1.DERUniversalString: java.lang.String getString()>
<es.gob.afirma.signers.multi.cades.CAdESCoSigner: byte[] coSigner(es.gob.afirma.signers.pkcs7.P7ContentSignerParameters,byte[],boolean,es.gob.afirma.core.signers.AdESPolicy,boolean,java.security.PrivateKey,java.security.cert.Certificate[],byte[],java.lang.String,java.lang.String)>
<es.gob.afirma.signers.cades.CAdESTriPhaseSigner: byte[] postSign(java.lang.String,byte[],java.security.cert.X509Certificate[],byte[],byte[])>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getSystemNSSLibDirWindows()>
<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)>
<javax.help.HelpSet: void parseInto(java.net.URL,javax.help.HelpSetFactory)>
<org.bouncycastle.asn1.DERObjectIdentifier: void writeField(java.io.ByteArrayOutputStream,long)>
<com.sun.java.help.search.BtreeDictParameters: com.sun.java.help.search.BtreeDictParameters read(java.lang.String,java.net.URL)>
<es.gob.afirma.signers.xml.Utils: byte[] writeXML(org.w3c.dom.Node,java.util.Map,java.lang.String,java.lang.String)>
<com.lowagie.text.pdf.PdfStream: void writeContent(java.io.OutputStream)>
<es.gob.afirma.signers.cms.GenSignedData: byte[] generateSignedData(es.gob.afirma.signers.pkcs7.P7ContentSignerParameters,boolean,boolean,java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],java.util.Map,java.util.Map,byte[])>
<org.bouncycastle.util.encoders.Base64: byte[] encode(byte[])>
<org.bouncycastle.asn1.DERExternal: void encode(org.bouncycastle.asn1.ASN1OutputStream)>
<es.gob.afirma.signers.xmldsig.AOXMLDSigSigner: byte[] getData(byte[])>
<com.lowagie.text.pdf.PdfSignatureAppearance: void preClose(java.util.HashMap,java.util.Calendar)>
<org.bouncycastle.jce.provider.X509CertificateObject: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<com.lowagie.text.pdf.XfaForm: byte[] serializeDoc(org.w3c.dom.Node)>
<es.gob.afirma.signers.pades.AOPDFSigner: byte[] signPDF(java.security.PrivateKey,java.security.cert.Certificate[],byte[],java.util.Properties,java.lang.String)>
<com.lowagie.text.pdf.codec.JBIG2SegmentReader: byte[] getGlobal(boolean)>
<com.lowagie.text.pdf.PdfSigGenericPKCS: void setSignInfo(java.security.PrivateKey,java.security.cert.Certificate[],java.security.cert.CRL[])>
<org.bouncycastle.cms.CMSSignedDataGenerator: org.bouncycastle.cms.CMSSignedData generate(org.bouncycastle.cms.CMSTypedData,boolean)>
<es.gob.afirma.core.misc.AOUtil: byte[] getDataFromInputStream(java.io.InputStream)>
<es.gob.afirma.signers.odf.AOODFSigner: byte[] sign(byte[],java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],java.util.Properties)>
<com.lowagie.text.pdf.PdfEncryption: byte[] encryptByteArray(byte[])>
<net.java.xades.util.ResourceHelper: java.util.Enumeration resourceEntries()>
<org.bouncycastle.asn1.DERBitString: java.lang.String getString()>
<org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>
<javax.help.FavoritesNode: void export(java.io.OutputStream)>
<com.lowagie.text.ExceptionConverter: void printStackTrace(java.io.PrintWriter)>
<javax.help.plaf.basic.BasicContentViewerUI$PageLoader: java.lang.String findTitle(java.net.URL)>
<com.sun.java.help.search.SearchEnvironment: void readChildrenData()>
<javax.help.TOCView: javax.swing.tree.DefaultMutableTreeNode parse(java.net.URL,javax.help.HelpSet,java.util.Locale,javax.help.TreeItemFactory,javax.help.TOCView)>
<com.lowagie.text.pdf.PdfEncryption: byte[] decryptByteArray(byte[])>
<es.gob.afirma.signers.xmldsig.AOXMLDSigSigner: byte[] cosign(byte[],java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],java.util.Properties)>
<com.lowagie.text.xml.XmlDomWriter: void write(org.w3c.dom.Node)>
<com.lowagie.text.ExceptionConverter: void printStackTrace(java.io.PrintStream)>
<com.lowagie.text.pdf.PdfReader: byte[] LZWDecode(byte[])>
<org.bouncycastle.jce.provider.X509CertificateObject: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<com.lowagie.text.xml.xmp.XmpWriter: void addRdfDescription(com.lowagie.text.xml.xmp.XmpSchema)>
<com.sun.java.help.search.Indexer: void compile(java.lang.String[])>
<org.bouncycastle.asn1.DERObjectIdentifier: byte[] getBody()>
<es.gob.afirma.envelopers.cms.BinaryUtils: byte[] uncompress(byte[])>
<es.gob.afirma.core.misc.UrlHttpManagerImpl: byte[] readUrlByPost(java.lang.String)>
