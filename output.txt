***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[spark] Done!
Now we build call graphs for class: org.apache.http.impl.conn.LoggingInputStream
Now we build call graphs for class: org.apache.http.client.entity.DeflateInputStream
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.PushbackInputStream: void unread(byte[],int,int)> via: virtualinvoke $r15.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r1, 0, $i1)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.PushbackInputStream: void unread(byte[],int,int)> via: virtualinvoke $r15.<java.io.PushbackInputStream: void unread(byte[],int,int)>(r1, 0, $i1)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.FilterInputStream: int read(byte[])> via: $i1 = virtualinvoke $r15.<java.io.PushbackInputStream: int read(byte[])>(r1)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.PushbackInputStream: void <init>(java.io.InputStream,int)> via: specialinvoke $r15.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r3, $i0)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.IOException: void <init>(java.lang.String)> via: specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response")
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void end()> via: virtualinvoke $r17.<java.util.zip.Inflater: void end()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void end()> via: virtualinvoke $r17.<java.util.zip.Inflater: void end()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void end()> via: virtualinvoke $r17.<java.util.zip.Inflater: void end()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void setInput(byte[])> via: virtualinvoke $r17.<java.util.zip.Inflater: void setInput(byte[])>(r1)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: boolean needsInput()> via: $z2 = virtualinvoke $r17.<java.util.zip.Inflater: boolean needsInput()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: boolean needsDictionary()> via: $z1 = virtualinvoke $r17.<java.util.zip.Inflater: boolean needsDictionary()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: boolean finished()> via: $z0 = virtualinvoke $r17.<java.util.zip.Inflater: boolean finished()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: int inflate(byte[])> via: $i2 = virtualinvoke $r17.<java.util.zip.Inflater: int inflate(byte[])>(r4)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void <init>()> via: specialinvoke $r17.<java.util.zip.Inflater: void <init>()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.IOException: void <init>(java.lang.String)> via: specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response")
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.io.IOException: void <init>(java.lang.String)> via: specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Unable to read the response")
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <org.apache.http.client.entity.DeflateInputStream$DeflateStream: void <init>(java.io.InputStream,java.util.zip.Inflater)> via: specialinvoke $r21.<org.apache.http.client.entity.DeflateInputStream$DeflateStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>($r15, $r20)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void <init>()> via: specialinvoke $r20.<java.util.zip.Inflater: void <init>()>()
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <org.apache.http.client.entity.DeflateInputStream$DeflateStream: void <init>(java.io.InputStream,java.util.zip.Inflater)> via: specialinvoke $r23.<org.apache.http.client.entity.DeflateInputStream$DeflateStream: void <init>(java.io.InputStream,java.util.zip.Inflater)>($r15, $r22)
<org.apache.http.client.entity.DeflateInputStream: void <init>(java.io.InputStream)> calls: <java.util.zip.Inflater: void <init>(boolean)> via: specialinvoke $r22.<java.util.zip.Inflater: void <init>(boolean)>(1)
Found source being called: <java.io.FilterInputStream: int read(byte[])>
Now we build call graphs for class: org.apache.http.impl.client.SystemDefaultCredentialsProvider
<org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: specialinvoke $r1.<org.apache.http.impl.client.BasicCredentialsProvider: void <init>()>()
Now we build call graphs for class: org.apache.commons.codec.language.bm.Languages
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)> calls: <java.util.EnumMap: java.lang.Object get(java.lang.Object)> via: $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.String: int length()> via: $i0 = virtualinvoke $r9.<java.lang.String: int length()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("/*")
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.String: boolean endsWith(java.lang.String)> via: $z2 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("*/")
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.String: java.lang.String trim()> via: $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.HashSet: boolean add(java.lang.Object)> via: interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r9)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.HashSet: void <init>()> via: specialinvoke $r0.<java.util.HashSet: void <init>()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.Class: java.lang.ClassLoader getClassLoader()> via: $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve required resource: ")
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.Scanner: java.lang.String nextLine()> via: $r8 = virtualinvoke $r5.<java.util.Scanner: java.lang.String nextLine()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.Scanner: boolean hasNextLine()> via: $z0 = virtualinvoke $r5.<java.util.Scanner: boolean hasNextLine()>()
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)> via: specialinvoke $r5.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>($r4, "UTF-8")
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <org.apache.commons.codec.language.bm.Languages: void <init>(java.util.Set)> via: specialinvoke $r6.<org.apache.commons.codec.language.bm.Languages: void <init>(java.util.Set)>($r7)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.Collections: void <clinit>()> via: $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0)
<org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> calls: <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)> via: $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0)
<org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)> calls: <org.apache.commons.codec.language.bm.NameType: java.lang.String getName()> via: $r2 = virtualinvoke r1.<org.apache.commons.codec.language.bm.NameType: java.lang.String getName()>()
<org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)> calls: <java.lang.String: void <clinit>()> via: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("org/apache/commons/codec/language/bm/%s_languages.txt", $r0)
<org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("org/apache/commons/codec/language/bm/%s_languages.txt", $r0)
<org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)> calls: <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> via: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("org/apache/commons/codec/language/bm/%s_languages.txt", $r0)
<org.apache.commons.codec.language.bm.Languages: void <init>(java.util.Set)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <java.util.EnumMap: void <init>(java.lang.Class)> via: specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/commons/codec/language/bm/NameType;")
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7)
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: specialinvoke $r2.<org.apache.commons.codec.language.bm.Languages$1: void <init>()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: specialinvoke $r3.<org.apache.commons.codec.language.bm.Languages$2: void <init>()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.NameType: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r6 = staticinvoke <org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)>(r4)
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)>($r6)
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)> via: $r6 = staticinvoke <org.apache.commons.codec.language.bm.Languages: java.lang.String langResourceName(org.apache.commons.codec.language.bm.NameType)>(r4)
<org.apache.commons.codec.language.bm.Languages: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)> via: $r7 = staticinvoke <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)>($r6)
Found source being called: <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(java.lang.String)>
Now we build call graphs for class: org.apache.http.impl.client.HttpClientBuilder
Now we build call graphs for class: org.apache.commons.logging.LogFactory$5
<org.apache.commons.logging.LogFactory$5: void <init>(java.net.URL)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.util.Properties: void load(java.io.InputStream)> via: virtualinvoke $r4.<java.util.Properties: void load(java.io.InputStream)>($r3)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.util.Properties: void <init>()> via: specialinvoke $r4.<java.util.Properties: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r33)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to close stream for URL ")
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r31.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to close stream for URL ")
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r25.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to read URL ")
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r19.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to close stream for URL ")
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to close stream for URL ")
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r6.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r35)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r35)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r23)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r23)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r17)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r17)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r35)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r23)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r17)
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory$5: java.lang.Object run()> calls: <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r10)
Now we build call graphs for class: org.apache.commons.logging.LogFactory$6
<org.apache.commons.logging.LogFactory$6: void <init>(java.lang.String,java.lang.String)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.commons.logging.LogFactory$6: java.lang.Object run()> calls: <java.lang.System: void <clinit>()> via: $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>($r2, $r1)
<org.apache.commons.logging.LogFactory$6: java.lang.Object run()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>($r2, $r1)
<org.apache.commons.logging.LogFactory$6: java.lang.Object run()> calls: <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)> via: $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>($r2, $r1)
Now we build call graphs for class: org.apache.commons.codec.language.bm.Lang
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang instance(org.apache.commons.codec.language.bm.NameType)> calls: <java.util.EnumMap: java.lang.Object get(java.lang.Object)> via: $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: java.lang.String[] split(java.lang.String)> via: $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\+")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("true")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: java.lang.String[] split(java.lang.String)> via: $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: int length()> via: $i1 = virtualinvoke $r9.<java.lang.String: int length()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: java.lang.String trim()> via: $r9 = virtualinvoke r26.<java.lang.String: java.lang.String trim()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: java.lang.String substring(int,int)> via: r26 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: int indexOf(java.lang.String)> via: $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("//")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("/*")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.String: boolean endsWith(java.lang.String)> via: $z2 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>("*/")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.ArrayList: void <init>()> via: specialinvoke $r0.<java.util.ArrayList: void <init>()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.Class: java.lang.ClassLoader getClassLoader()> via: $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.IllegalStateException: void <init>(java.lang.String)> via: specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to resolve required resource:org/apache/commons/codec/language/bm/lang.txt")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Scanner: java.lang.String nextLine()> via: $r8 = virtualinvoke $r5.<java.util.Scanner: java.lang.String nextLine()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Scanner: boolean hasNextLine()> via: $z4 = virtualinvoke $r5.<java.util.Scanner: boolean hasNextLine()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)> via: specialinvoke $r5.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>($r4, "UTF-8")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: malformed line \'")
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <org.apache.commons.codec.language.bm.Lang$LangRule: void <init>(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)> via: specialinvoke $r16.<org.apache.commons.codec.language.bm.Lang$LangRule: void <init>(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)>($r12, $r17, $z1, null)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.HashSet: void <init>(java.util.Collection)> via: specialinvoke $r17.<java.util.HashSet: void <init>(java.util.Collection)>($r18)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)> via: specialinvoke $r6.<org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)>($r0, r7)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.regex.Pattern: void <clinit>()> via: $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.Object: void <clinit>()> via: $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Arrays: void <clinit>()> via: $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.Object: void <clinit>()> via: $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)> via: $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11)
<org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Arrays: java.util.List asList(java.lang.Object[])> via: $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
<org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Collections: void <clinit>()> via: $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1)
<org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1)
<org.apache.commons.codec.language.bm.Lang: void <init>(java.util.List,org.apache.commons.codec.language.bm.Languages)> calls: <java.util.Collections: java.util.List unmodifiableList(java.util.List)> via: $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <java.util.EnumMap: void <init>(java.lang.Class)> via: specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/commons/codec/language/bm/NameType;")
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <org.apache.commons.codec.language.bm.NameType: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages: void <clinit>()> via: $r4 = staticinvoke <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)>(r2)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r4 = staticinvoke <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)>(r2)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r5 = staticinvoke <org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)>("org/apache/commons/codec/language/bm/lang.txt", $r4)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()> via: $r1 = staticinvoke <org.apache.commons.codec.language.bm.NameType: org.apache.commons.codec.language.bm.NameType[] values()>()
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)> via: $r4 = staticinvoke <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)>(r2)
<org.apache.commons.codec.language.bm.Lang: void <clinit>()> calls: <org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)> via: $r5 = staticinvoke <org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)>("org/apache/commons/codec/language/bm/lang.txt", $r4)
Found source being called: <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages getInstance(org.apache.commons.codec.language.bm.NameType)>
Found source being called: <org.apache.commons.codec.language.bm.Lang: org.apache.commons.codec.language.bm.Lang loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)>
Now we build call graphs for class: org.apache.http.impl.io.SessionInputBufferImpl
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "HTTP transport metrcis")
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <org.apache.http.util.ByteArrayBuffer: void <init>(int)> via: specialinvoke $r4.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>(i0)
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: int positive(int,java.lang.String)>(i0, "Buffer size")
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "HTTP transport metrcis")
<org.apache.http.impl.io.SessionInputBufferImpl: void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder)> calls: <org.apache.http.util.Args: int positive(int,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: int positive(int,java.lang.String)>(i0, "Buffer size")
Now we build call graphs for class: org.joda.time.DateTimeZone
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.System: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.timezone")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.timezone")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.Object: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.util.TimeZone: void <clinit>()> via: $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.Object: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.timezone")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <java.util.TimeZone: java.util.TimeZone getDefault()> via: $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.tz.UTCProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: $r1 = interfaceinvoke $r0.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: $r1 = interfaceinvoke $r0.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z2 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("-")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z1 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("+")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("UTC")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not recognised")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The datetime zone id \'")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r3 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r2, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r2, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>(r13)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: java.lang.String printOffset(int)> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> via: $r3 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r2, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> via: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Millis out of range: ")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>(i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.Object: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>(i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r5, i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <java.lang.Object: void <clinit>()> via: $r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r5, i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <org.joda.time.DateTimeZone: java.lang.String printOffset(int)> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>(i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forOffsetMillis(int)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> via: $r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r5, i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r17 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("UTC")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.String: java.lang.String substring(int)> via: $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(3)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("GMT-")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z1 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("GMT+")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.util.TimeZone: java.lang.String getID()> via: $r9 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getID()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.util.TimeZone: java.lang.String getID()> via: $r1 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getID()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.tz.UTCProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: r18 = interfaceinvoke $r15.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>($r2)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: r18 = interfaceinvoke $r15.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>($r2)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.tz.UTCProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: r18 = interfaceinvoke $r14.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: r18 = interfaceinvoke $r14.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not recognised")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The datetime zone id \'")
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r17 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>($r10)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.Object: void <clinit>()> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>($r10)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r11 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r11 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r11, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r11, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> via: $r17 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> via: $r2 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)>($r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> via: $i0 = staticinvoke <org.joda.time.DateTimeZone: int parseOffset(java.lang.String)>($r10)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String printOffset(int)> via: $r11 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> via: $r12 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)>($r11, $i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.lang.ref.SoftReference: java.lang.Object get()> via: $r7 = virtualinvoke $r9.<java.lang.ref.Reference: java.lang.Object get()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.lang.ref.Reference: java.lang.Object get()> via: $r7 = virtualinvoke $r9.<java.lang.ref.Reference: java.lang.Object get()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.util.HashMap: void <init>()> via: specialinvoke $r8.<java.util.HashMap: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.util.HashMap: java.lang.Object get(java.lang.Object)> via: $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <org.joda.time.tz.FixedDateTimeZone: void <init>(java.lang.String,java.lang.String,int,int)> via: specialinvoke $r4.<org.joda.time.tz.FixedDateTimeZone: void <init>(java.lang.String,java.lang.String,int,int)>(r1, null, i0, i0)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5)
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String,int)> calls: <java.lang.ref.SoftReference: void <init>(java.lang.Object)> via: specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r4)
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.util.Collections$SingletonSet: boolean contains(java.lang.Object)> via: $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>("UTC")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.util.Collections$SingletonSet: int size()> via: $i0 = interfaceinvoke $r0.<java.util.Set: int size()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.util.TreeSet: boolean contains(java.lang.Object)> via: $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>("UTC")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.util.TreeSet: int size()> via: $i0 = interfaceinvoke $r0.<java.util.Set: int size()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.tz.UTCProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: $r3 = interfaceinvoke r6.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>("UTC")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.tz.UTCProvider: java.util.Set getAvailableIDs()> via: $r0 = interfaceinvoke r6.<org.joda.time.tz.Provider: java.util.Set getAvailableIDs()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> via: $r3 = interfaceinvoke r6.<org.joda.time.tz.Provider: org.joda.time.DateTimeZone getZone(java.lang.String)>("UTC")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.tz.ZoneInfoProvider: java.util.Set getAvailableIDs()> via: $r0 = interfaceinvoke r6.<org.joda.time.tz.Provider: java.util.Set getAvailableIDs()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The provider doesn\'t have any available ids")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The provider doesn\'t support UTC")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r2.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r3)
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid UTC zone provided")
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <java.lang.Object: void <clinit>()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>()
<org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> calls: <org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> via: r6 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.System: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider")
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.URLConnection: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpURLConnection: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.HttpURLConnection: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Currency: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Properties: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Provider: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.SunProvider: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.DigestBase: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.MD4: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.SelectorProvider: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)> via: virtualinvoke $r11.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r10, $r9)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)> via: virtualinvoke $r7.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r6, $r5)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.ZoneInfoProvider: void <init>(java.lang.String)> via: specialinvoke $r2.<org.joda.time.tz.ZoneInfoProvider: void <init>(java.lang.String)>("org/joda/time/tz/data")
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: specialinvoke $r1.<org.joda.time.tz.UTCProvider: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> via: $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> via: $r11 = virtualinvoke $r10.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider")
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Class: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Throwable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Object: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.IOException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassNotFoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.String: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Throwable$PrintStreamOrWriter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectOutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalStateException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.System: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.AssertionError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NullPointerException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArrayList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.IdentityHashMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Throwable$SentinelHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalArgumentException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Objects: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StringBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CloneNotSupportedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.InterruptedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.RuntimeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.InputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.SecurityManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Console: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Properties: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.System$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ThreadGroup: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.Reflection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Terminator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.SelectorProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.SharedSecrets: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessEnvironment: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Runtime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Exception: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.VM: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Version: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassLoader: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.AccessController: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.UnsupportedEncodingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.OutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.FileDescriptor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.SecurityException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.NotActiveException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.StreamCorruptedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.HashMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$ValidationList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$GetField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IndexOutOfBoundsException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ObjectInputFilter$Config: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.InternalError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Void: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.misc.ReflectUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ThreadDeath: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Proxy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassCastException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.ReferenceQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$Logging: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NegativeArraySizeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Array: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalAccessError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$Caches: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Error: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Arrays: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Math: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.BitSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ConcurrentModificationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.OutOfMemoryError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.SecurityConstants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread$Caches: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ThreadLocal: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalThreadStateException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.UnsupportedOperationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NoSuchMethodError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectOutputStream$DebugTraceInfoStack: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectOutputStream$PutField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectOutputStream$Caches: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.NotSerializableException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StringBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.AbstractStringBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Formatter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Matcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StringCoding: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StringIndexOutOfBoundsException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ConditionalSpecialCasing: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.String$CaseInsensitiveComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.FileNotFoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.InterruptedIOException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Writer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.InstantiationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalAccessException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NoSuchFieldException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NoSuchMethodException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ReflectionFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Executable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ConstantPool: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Class$MethodArray: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Class$Atomic: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.TypeAnnotationParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.InvocationTargetException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Unsafe: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.LinkedHashMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.AnnotationSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Class$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Modifier: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.AnnotationParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.AllPermission: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.HashSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Permissions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.PermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ReflectiveOperationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Random: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptyMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$ReverseComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptyListIterator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptyIterator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptySet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptyEnumeration: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$EmptyList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Number: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NumberFormatException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Integer$IntegerCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Shutdown: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.PropertyPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Terminator$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.Pipe: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.SelectorProvider$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessEnvironment$NameComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessEnvironment$EntryComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.TreeMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Process: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ApplicationShutdownHooks: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.UnsatisfiedLinkError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.OSEnvironment: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassFormatError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ConcurrentHashMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Vector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Stack: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.AssertionStatusDirectives: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassLoaderHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassLoader$ParallelLoaders: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Launcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NoClassDefFoundError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Hashtable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Resource: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.Debug: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Reader: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Console$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Console$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Date: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Properties$XmlSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.FileChannel: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddress: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.SecurityConstants$AWT: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.FileDescriptor$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.FloatingDecimal: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Security: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterName: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Character$CharacterCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Long$LongCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.VirtualMachineError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandles: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MemberName: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleStatics: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.VerifyAccess: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleNatives$Constants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MemberName$Factory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleNatives: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.EOFException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Proxy$ProxyClassFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.Proxy$KeyFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.ReferenceQueue$Lock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.ReferenceQueue$Null: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.logging.PlatformLogger$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.logging.LoggingSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.Bits: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.AccessibleObject: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ArrayIndexOutOfBoundsException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$HandleTable$HandleList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Short$ShortCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Byte$ByteCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.UTFDataFormatException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IncompatibleClassChangeError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$Caches: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.NoSuchAlgorithmException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ByteArrayOutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$6: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectStreamClass$EntryFuture: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJFloat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJByte: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.CountedCompleter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJShort: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJObject: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJChar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Arrays$NaturalOrder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.DualPivotQuicksort: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Arrays$LegacyMergeSort: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.StreamSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers$FJInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinPool: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Math$RandomNumberGeneratorHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ArithmeticException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StrictMath: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.NoSuchElementException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Policy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.atomic.AtomicInteger: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.Reference$Lock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.Reference$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DecimalFormatSymbols: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Formatter$Conversion: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Formatter$DateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.FormatterClosedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$Node: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.ASCII: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Locale$Cache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.LocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.ParseStatus: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Locale$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.InternalLocaleBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.LanguageTag: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Locale$LocaleNameGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.LocaleUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.IllformedLocaleException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.LocaleMatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.CharacterCodingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.MessageUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$BitClass: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$BmpCharProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$Caret: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$VertWS: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$BranchConn: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$All: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$UnixCaret: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$TreeInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$End: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$Dot: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$Begin: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$UnixDot: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.Normalizer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$LastNode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$HorizWS: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$LastMatch: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$LineEnding: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.Normalizer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.spi.CharsetProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.Charset$ExtendedProviderHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.Charset$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.Charset$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.StandardCharsets: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.ThreadLocalCoders: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.BreakIterator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.MalformedURLException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.FileSystem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.URI: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.File$TempDirectory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.DeleteOnExitHook: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.DefaultFileSystem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystems: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$EmptySpliterator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfRef: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Collectors: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.parser.SignatureParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.AbstractMethodError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.MalformedParametersException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.TypeAnnotation$LocationInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.AnnotatedTypeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.BufferUnderflowException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.ProtectionDomain$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.X509Certificate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.IOUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateEncodingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.URLStreamHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.Proxy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketAddress: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.ExceptionProxy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ConstructorAccessorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.MethodAccessorGenerator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.UnsafeFieldAccessorFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.MethodAccessorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.SerializationConstructorAccessorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ReflectionFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.scope.DummyScope: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.ReflectAccess: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.WeakHashMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassValue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassValue$Identity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.AllPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.LinkedHashSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.PermissionsHash: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.UnresolvedPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.jar.Manifest: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.jar.Attributes: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.atomic.AtomicLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ArrayStoreException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Shutdown$Lock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DatagramSocket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.Selector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.SelectionKey: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.AbstractSelectionKey: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.SelectableChannel: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.Socket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.DefaultSelectorProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ServerSocket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.BadPaddingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.IllegalBlockSizeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ApplicationShutdownHooks$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessBuilder$Redirect: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessBuilder$NullOutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessBuilder$NullInputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.LinkageError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Launcher$ExtClassLoader$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Paths: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.io.Win32ErrorMode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.BufferOverflowException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.Bits: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.ReadOnlyBufferException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Perf: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Perf$GetPerfAction: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.PerfCounter$CoreCounters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.PerfCounter$WindowsClientCounters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ThreadLocalRandom: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ConcurrentHashMap$ReservationNode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.atomic.AtomicReference: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.InvalidKeyException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.NoSuchProviderException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SignatureException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.X509CertImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.Subject: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.util.URLUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.LinkedList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.ParseUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Launcher$Factory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Launcher$BootClassPathHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.EmptyStackException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Dictionary: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.BaseCalendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.BaseCalendar$Date: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.CalendarDate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.CalendarSystem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DateFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.GregorianCalendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.TimeZone: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.CalendarUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.Gregorian: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.ZoneInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.spi.XmlPropertiesProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Properties$XmlSupport$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileDispatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileLockTable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.FileLockInterruptionException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileChannelImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.NonWritableChannelException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.NonReadableChannelException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ClosedByInterruptException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.IOStatus: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.NativeDispatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ClosedChannelException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileDispatcherImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.IOUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.spi.FileSystemProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.UnknownHostException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddress$InetAddressHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.NetworkInterface: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddress$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddress$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddressImplFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.Inet4Address: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.Inet6Address: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.util.IPAddressUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.FilePermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.RegisteredDomain: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketPermission$EphemeralRange: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.FloatingDecimal$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.FloatingDecimal$HexFloatPattern: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.InvalidAlgorithmParameterException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Security$ProviderProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.Providers: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.GetInstance: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.PropertyExpander: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.InvalidParameterException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.ProviderList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Security$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Optional: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterName$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterData00: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterDataLatin1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterData0E: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterDataPrivateUse: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterData01: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterData02: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.CharacterDataUndefined: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BitSieve: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.MutableBigInteger: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BigInteger$UnsafeHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.ValueConversions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.WrongMethodTypeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.empty.Empty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.VerifyType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$Lazy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.BoundMethodHandle$Factory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.NoSuchFieldError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.BytecodeDescriptor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.DirectMethodHandle$EnsureInitialized: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.DirectMethodHandle$Lazy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodType$ConcurrentWeakInternSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.logging.LoggingSupport$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.logging.LoggingSupport$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.StringWriter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.GeneralSecurityException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.MessageDigestSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.DigestException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinTask: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArraysParallelSortHelpers: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Tripwire: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArrayPrefixHelpers: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.OptionalDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.DoubleSummaryStatistics: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams$DoubleStreamBuilderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams$StreamBuilderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.OptionalInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.IntSummaryStatistics: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams$IntStreamBuilderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.OptionalLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.LongSummaryStatistics: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams$LongStreamBuilderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.AbstractExecutorService: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinPool$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.RejectedExecutionException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StrictMath$RandomNumberGeneratorHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.InvalidMarkException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Comparators: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Policy$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.Policy$UnsupportedEmptyCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.PolicyFile: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.PolicySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.DecimalFormatSymbolsProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.IllegalFormatException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Calendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.temporal.TemporalQueries: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.ZoneId: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.NumberFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DecimalFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DateFormatSymbols: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.LocaleServiceProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.BreakIteratorProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.CollatorProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.DateFormatProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.DateFormatSymbolsProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.spi.NumberFormatProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.CurrencyNameProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.LocaleNameProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.TimeZoneNameProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.CalendarDataProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.spi.CalendarNameProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.spi.CalendarProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle$Control: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.JRELocaleConstants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.TreeSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.LocaleObjectCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.Format: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.SimpleDateFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.resources.ParallelListResourceBundle: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.CalendarDataUtility: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.resources.OpenListResourceBundle: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.resources.TimeZoneNamesBundle: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.BaseLocale$Cache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.LocaleEquivalentMaps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.CoderResult$Cache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.CoderResult$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.CoderResult$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$8: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$9: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$6: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$7: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$20: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$21: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$22: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$23: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$17: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$18: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$19: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$13: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$14: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$15: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$16: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$10: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$11: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$12: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.Charset$ExtendedProviderHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ASCIICaseInsensitiveComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.StandardCharsets$Cache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.StandardCharsets$Classes: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.StandardCharsets$Aliases: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SecureRandom: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.attribute.UserPrincipalLookupService: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.DeleteOnExitHook$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.WinNTFileSystem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.ProviderNotFoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.BooleanSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.GenericSignatureFormatError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.IntSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.BottomSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.LongSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.VoidDescriptor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.CharSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.DoubleSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.ByteSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.ShortSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.generics.tree.FloatSignature: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateExpiredException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateNotYetValidException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateParsingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CRLException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertificateFactorySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.UnknownServiceException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.MessageHeader: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ContentHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.UnknownContentHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.MimeTable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.URLConnection$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.MagicAccessorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.AccessorGenerator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ClassFileAssembler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.Label: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ByteVectorFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.reflect.MalformedParameterizedTypeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.ZipEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.IllegalBlockingModeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.MembershipKey: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DatagramSocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.MulticastSocket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.AbstractPlainDatagramSocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DefaultDatagramSocketImplFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.AsynchronousCloseException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.PlainSocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocksSocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.WindowsSelectorProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.NoSuchPaddingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.ShortBufferException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.spec.InvalidParameterSpecException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CipherSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.ExemptionMechanismException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.NullCipher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.JceSecurity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.ProviderException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.JceSecurityManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoAllPermission: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SecureClassLoader: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.URLClassLoader$7: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.jar.JavaUtilJarAccessImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.jar.JarException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$9: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$8: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$7: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$6: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$10: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$11: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpCookie$12: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.ZipException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.Inflater: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.ZipFile$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.charset.StandardCharsets: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ArrayDeque: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessBuilder$Redirect$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessBuilder$Redirect$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ProcessImpl$LazyPattern: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystemNotFoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.Bits$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantLock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.LockSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.X509CertInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.AlgorithmId: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.IssuerAlternativeNameExtension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.PolicyMappingsExtension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.SubjectAlternativeNameExtension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.Extension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.GeneralNames: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.X509Factory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.OIDMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.DerOutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.CertificateValidity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.PKIXExtensions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.CertificateExtensions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.HexDumpEncoder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.Pem: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.AttributeNameEnumeration: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.KeyUsageExtension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.Subject$AuthPermissionHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ResourcesMgr: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.JarIndex: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ExtensionDependency: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.InvalidJarIndexException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.AbstractSequentialList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.Launcher$BootClassPathHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.Gregorian$Date: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DontCareFieldPosition: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.JulianCalendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.JulianCalendar$Date: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.TimeZoneNameUtility: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.ZoneInfoFile: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.Clock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.Ser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.AbstractCalendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.AsynchronousFileChannel: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.OverlappingFileLockException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Net: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.NativeThread: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Util$BufferCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileDispatcherImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.IOUtil$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileStore: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.spi.FileSystemProvider$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Files: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.Channels: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.InetAddressCachePolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InterfaceAddress: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.NetworkInterface$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DefaultInterface: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.PortConfig: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.InheritableThreadLocal: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.ProviderList$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.DataFormatException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.SignedMutableBigInteger: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ExceptionInInitializerError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.Wrapper$Format: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.Invokers$Lazy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.invoke.util.ValueConversions$WrapperCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Label: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$T: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.BoundMethodHandle$SpeciesData$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.BoundMethodHandle$Factory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.BootstrapMethodError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ProxyGenerator$ConstantPool: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.JCAUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ExecutionException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.TimeoutException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.CancellationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Streams$AbstractStreamBuilderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SpinedBuffer$OfDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.StreamSpliterators: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SpinedBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SpinedBuffer$OfInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SpinedBuffer$OfLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.PolicyParser$GrantEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.PolicyParser$PermissionEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyStoreException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.PolicyUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.PolicyParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Currency$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Currency$CurrencyNameGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BigDecimal$UnsafeHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BigDecimal$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BigDecimal$StringBuilderHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.math.BigDecimal$LongOverflow: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.DateTimeFormatterBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.zone.ZoneRulesProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Calendar$AvailableCalendarTypes: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.BuddhistCalendar: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Calendar$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Calendar$CalendarAccessControlContext: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.zone.Ser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DigitList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DecimalFormat$FastPathData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.DecimalFormat$DigitArrays: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.CharacterIteratorFieldDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.FormattedFloatingDecimal$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle$Control$CandidateListCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.Collator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.LocaleDataMetaInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.text.CalendarBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle$RBClassLoader: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UnicodeSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.ICUData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UTF16: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UCharacterIterator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UCharacterProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.RangeValueIterator$Element: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.Utility: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.US_ASCII: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SecureRandomSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SecureRandom$StrongPatternHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SecureRandom$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SecureRandom: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ExpiringCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.DefaultFileSystemProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.MimeTable$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.FieldAccessorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ClassDefiner: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.UTF8: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.ByteVectorImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.reflect.'annotation'.AnnotationInvocationHandler$UnsafeAccessor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.CRC32: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.ZipUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.Base64: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.StandardSocketOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.AbstractPlainDatagramSocketImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.ResourceManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DatagramPacket$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.DefaultDatagramSocketImplFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.HttpConnectSocketImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.AbstractPlainSocketImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.PlainSocketImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ProxySelector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SocketTimeoutException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.SelectorProviderImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.ExemptionMechanismSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.NullCipherSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoPermissions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.JceSecurity$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.JceSecurityManager$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoAllPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.AlgorithmParametersSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.ProgressMonitor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ManifestDigester$Entry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantLock$Sync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantLock$FairSync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.Cache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.X509CRLImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.X509CRL: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.pkcs.ParsingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.certpath.X509CertificatePair: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.X500Name$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.DerIndefLenConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.SignatureSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ByteArrayLexOrder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ByteArrayTagOrder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.CertificateVersion: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.GeneralSubtrees: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.CharacterEncoder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ResourcesMgr$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ExtensionInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.JarFilter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ProtocolException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.LocalGregorianCalendar$Date: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.ZoneInfoFile$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.calendar.ZoneInfoFile$Checksum: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.Duration$DurationUnits: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.IsoChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.temporal.IsoFields: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.Parsed: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.PropertiesDefaultHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.FileKey: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Net$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.net.SocketFlow: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.NotYetBoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.AlreadyBoundException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.NotYetConnectedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.UnsupportedAddressTypeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.UnresolvedAddressException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.SocketOptionRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.ExtendedOptionsImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Net$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Net$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.IllegalSelectorException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ClosedSelectorException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.NetHooks: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.SocketDispatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.AlreadyConnectedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ConnectionPendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.NoConnectionPendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.CancelledKeyException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Files$AcceptAllFilter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.spi.FileTypeDetector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.CopyMoveHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Files$FileTypeDetectors: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.TempFileHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.InetAddressCachePolicy$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.InetAddressCachePolicy$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.PortConfig$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.ByteVector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Item: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Frame: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Edge: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jca.JCAUtil$CachedSecureRandomHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SpinedBuffer$OfPrimitive: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Tripwire: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.AbstractSpinedBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.PipelineHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.DistinctOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SortedOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.MatchOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.ReduceOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.ForEachOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.SliceOps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.EnumMap$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.FutureTask$WaitNode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.Executors: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.LinkedBlockingQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.UnrecoverableKeyException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.UnrecoverableEntryException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyStoreSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyStore$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyStore$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.Password: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.StreamTokenizer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.AbstractChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.DateTimeFormatterBuilder$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.DateTimeTextProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.CopyOnWriteArrayList: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.temporal.TemporalAdjusters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.ResourceBundle$RBClassLoader$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.ICUBinary: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UCharacter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SecureRandom$SeederHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SeedGenerator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsFileSystemProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.ManifestDigester$Position: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.InetAddressContainer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.ConnectionResetException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.AbstractPlainSocketImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.Authenticator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.WindowsSelectorImpl$FdMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoPolicyParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.JarVerifier$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.DefaultProgressMeteringPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathValidatorException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.KeyUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.pkcs.PKCS7$SecureRandomHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.AlgorithmDecomposer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraint: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.IllegalMonitorStateException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.X509CRLEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.CRLExtensions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.NullCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.AVAComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.DestroyFailedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.X509Key: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.SubjectDomainCombiner$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.Policy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.ChronoLocalDateImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.xml.sax.SAXException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.xml.sax.InputSource: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.SAXParserImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.SAXParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.XMLStreamException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.SocketOptionRegistry$LazyInitialization: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.ExtendedSocketOption: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.net.ExtendedSocketOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.CopyMoveHelper$CopyOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Files$FileTypeDetectors$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.Files$FileTypeDetectors$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.TempFileHelper$PosixPermissions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Handler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.objectweb.asm.Context: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps$FindSink$OfDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps$FindSink: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps$FindSink$OfInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps$FindSink$OfRef: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.FindOps$FindSink$OfLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.ReduceOps$Box: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$EmptyNode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfInt: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfRef: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$SpinedNodeBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfLong: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.Executors$DefaultThreadFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.Executors$PrivilegedThreadFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.Ser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.ThaiBuddhistChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.MinguoChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.chrono.JapaneseChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.ZoneName: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.format.DateTimeTextProvider$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.time.zone.TzdbZoneRulesProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.normalizer.UBiDiProps: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.Surrogate$Parser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SunEntries: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractFileSystemProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsSecurity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsUriSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.FileSystemAlreadyExistsException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsSecurityDescriptor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsChannelFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsFileCopy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.ProviderMismatchException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsLinkSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsFileAttributeViews: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.Util: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.MembershipRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.PortUnreachableException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.DatagramDispatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.validator.KeyStores: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.HttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.spec.InvalidKeySpecException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.Policy$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.Policy$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.ParserSAX: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.ExtendedSocketOption$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.DefaultFileTypeDetector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.attribute.PosixFilePermissions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$Transferer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$WaitQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$LifoWaitQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$TransferStack: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$FifoWaitQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.UCompactIntArray: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.IntHashtable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.CollatorUtilities: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.Surrogate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.NativePRNG: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.NativePRNG$Blocking: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.NativePRNG$NonBlocking: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.SunEntries$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.ThreadPool$DefaultThreadPoolHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractAclFileAttributeView: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsUserPrincipals: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.NativeBuffers: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstFile: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$VolumeInformation: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$DiskFreeSpace: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$AclInformation: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$Account: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$CompletionStatus: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$BackupResult: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsChannelFactory$Flags: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsChannelFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.Cancellable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractUserDefinedFileAttributeView: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsFileSystem$LookupService: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsPathParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.Globs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractPath: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractBasicFileAttributeView: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.DatagramSocketAdaptor$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.x509.NetscapeCertTypeExtension: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.certpath.UntrustedChecker: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.X509CertSelector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.PKIXCertPathChecker: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CollectionCertStoreParameters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.NetworkClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.PosterOutputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.KeepAliveCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.CacheRequest: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.CookieHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.HeaderParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.spec.ECPoint: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyFactorySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.Parser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.Pair: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.Attrs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.util.xml.impl.Input: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.xml.sax.SAXNotRecognizedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <jdk.internal.org.xml.sax.SAXNotSupportedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.RegistryFileTypeDetector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.text.ComposedCharIter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.cs.Surrogate$Generator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.PendingIoCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Invoker: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractWatchService: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.WindowsFileSystem$LookupService$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.certpath.PKIX: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.AnchorCertificates: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.UntrustedCertificates: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathBuilderException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathBuilderSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathBuilder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathHelperImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathValidatorSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertPathValidator$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertStoreException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.CertStore$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.Handler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ResponseCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.CacheResponse: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.SecureCacheResponse: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.NetProperties: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.EmptyInputStream: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.KeepAliveStream$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.HttpCapture$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractFileTypeDetector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.RegistryFileTypeDetector$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.ConcurrentLinkedQueue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Invoker$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ShutdownChannelGroupException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.Iocp$CompletionStatus: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.concurrent.LinkedBlockingDeque: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.ClosedWatchServiceException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.fs.AbstractPoller: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.file.StandardWatchEventKinds: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.certpath.PKIX$CertStoreComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.AnchorCertificates$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.UntrustedCertificates$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.certpath.CertPathHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.cert.X509CRLSelector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.DigestAuthentication$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.AuthCacheValue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.NetProperties$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.Negotiator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.www.protocol.http.AuthCacheImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.DefaultAsynchronousChannelProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.WindowsAsynchronousChannelProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.IllegalChannelGroupException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.AcceptPendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.ReadPendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.WritePendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.nio.channels.InterruptedByTimeoutException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.StackOverflowError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.LambdaMetafactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.invoke.LambdaConversionException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.VerifyError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.UnknownError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ClassCircularityError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.Finalizer$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.ref.Finalizer$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.InstantiationError: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractDateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractInstant: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.DateTimeFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.Chronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTimeField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.Instant: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.MutableDateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.ISODateTimeFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTimeUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.field.FieldUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.LocalDateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.FormatUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.LocalDate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.LocalTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DurationField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.ISODateTimeFormat$Constants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTimeUtils$SystemMillisProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.BaseDateTime: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateMidnight: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.YearMonthDay: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.TimeOfDay: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ConverterManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.chrono.AssembledChronology$Fields: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.chrono.ISOYearOfEraDateTimeField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.chrono.BaseChronology: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.BaseLocal: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.Period: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.MutablePeriod: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.MutableInterval: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.BasePartial: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.field.AbstractReadableInstantFieldProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.DateConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ReadableInstantConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.StringConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ReadablePartialConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ReadablePeriodConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.LongConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ReadableIntervalConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.NullConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.CalendarConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.ReadableDurationConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.field.MillisDurationField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.DateTimeZoneBuilder$RuleSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractPartial: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.ISOPeriodFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractInterval: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.field.AbstractPartialFieldProperty: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.convert.AbstractConverter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractPeriod: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.BasePeriod$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.PeriodFormatterBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.base.AbstractDuration: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.chrono.BasicChronology$HalfdayField: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.DateTimeConstants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.format.PeriodFormat: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.MonthDay: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.Partial: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.joda.time.YearMonth: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.ParseException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.Args: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.TextUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.HttpException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.UnsupportedHttpVersionException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.ProtocolException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.MalformedChunkCodingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.entity.AbstractHttpEntity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.BasicHeaderValueParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.BasicLineFormatter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HTTP: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.LangUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.Consts: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.EntityUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.BasicHeaderValueFormatter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.entity.BasicHttpEntity: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.Asserts: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.SyncBasicHttpParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.BasicHttpParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.AbstractHttpParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.HttpProtocolParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.HttpConnectionParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.params.HttpParamConfig: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.config.ConnectionConfig$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.config.MessageConstraints$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.config.SocketConfig$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.HttpHeaders: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultBHttpServerConnectionFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.ConnSupport: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.DefaultHttpResponseWriterFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.DefaultHttpRequestParserFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.NetUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.BasicLineParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultHttpRequestFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.AbstractHttpMessage: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.message.HeaderGroup: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.SocketHttpServerConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.AbstractHttpServerConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.DefaultHttpRequestWriterFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.io.DefaultHttpResponseParserFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultHttpResponseFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultHttpServerConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultHttpClientConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.SocketHttpClientConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.AbstractHttpClientConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.NoConnectionReuseStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultBHttpClientConnectionFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.pool.BasicConnPool: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.pool.BasicConnFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.SocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.DefaultSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.security.KeyManagementException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLContextSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLServerSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLEngine: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLParameters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.SSLSocket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ServerSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.X509Certificate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.DefaultServerSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.Certificate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.CertificateException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.CertificateExpiredException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.CertificateNotYetValidException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.X509Certificate$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.cert.CertificateEncodingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.config.RegistryBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestExpectContinue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.EncodingUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestContent: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.UriHttpRequestHandlerMapper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.UriPatternMatcher: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.ChainBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.ResponseDate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HttpDateGenerator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.ResponseContent: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HttpRequestExecutor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HttpCoreContext: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.BasicHttpContext: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.SyncBasicHttpContext: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestDate: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestConnControl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.BasicHttpProcessor: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestUserAgent: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.RequestTargetHost: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.ResponseServer: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.ResponseConnControl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.protocol.HttpProcessorBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.ExceptionUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.util.CharsetUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.TypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.Gson: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.JsonElement: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.JsonTreeWriter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.Excluder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.reflect.TypeToken: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.DateTypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TimeTypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.Gson$FutureTypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.Streams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.Primitives: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.JsonNull: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.stream.JsonReader$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.JsonReaderInternalAccess: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.JsonObject: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.JsonArray: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.JsonTreeReader$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.$Gson$Types: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.$Gson$Preconditions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.LinkedTreeMap: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$23: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$24: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$25: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$26: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$20: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$21: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$22: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$12: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$13: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$14: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$15: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$10: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$11: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$16: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$17: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$18: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$19: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$8: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$7: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$9: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$6: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.LinkedTreeMap$Node: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.LinkedTreeMap$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.UnsafeAllocator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.UUID$Holder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.internal.UnsafeAllocator$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.JsonParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.DefaultDateTypeAdapter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.GsonBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.google.gson.stream.JsonScope: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.AUTH: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.AuthenticationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.MalformedChallengeException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.AuthSchemeRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.AuthState: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.InvalidCredentialsException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.auth.params.AuthParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.CircularRedirectException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.RedirectException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.ClientProtocolException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.config.AuthSchemes: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.config.CookieSpecs: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.config.RequestConfig$Builder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.entity.EntityBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.URLEncodedUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.zip.Deflater: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.InputMismatchException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.scheme.SchemeRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ConnectTimeoutException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.AbstractExecutionAwareRequest: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.CloneUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpDelete: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpRequestBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpGet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpHead: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpPatch: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpPost: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpPut: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.HttpTrace: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.methods.RequestBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.URIBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.util.InetAddressUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.NonRepeatableRequestException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.params.AuthPolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.params.CookiePolicy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.params.HttpClientParamConfig: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.params.HttpClientParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.cookie.CookieSpecRegistry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.cookie.MalformedCookieException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.HttpClientContext: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestAcceptEncoding: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestAddCookies: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.LogFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestAuthCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestClientConnControl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestExpectContinue: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.ResponseAuthCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.BasicAuthCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.DefaultSchemePortResolver: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.ResponseContentEncoding: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.protocol.ResponseProcessCookies: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.DateUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.HttpClientUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.JdkIdn: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.Punycode: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.Rfc3492Idn: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.client.utils.URIUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.net.ConnectException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.MultihomePlainSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.params.ConnPerRouteBean: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.params.ConnManagerParams$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.params.ConnManagerParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.params.ConnRouteParams: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.routing.BasicRouteDirector: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.socket.PlainConnectionSocketFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.SSLContexts: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.SSLContextBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.TrustManagerFactorySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.TrustManagerFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.KeyManagerFactorySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.net.ssl.KeyManagerFactory$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.conn.ssl.TrustSelfSignedStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.cookie.CookieIdentityComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.cookie.CookiePathComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.cookie.CookieRestrictionViolationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.AuthSchemeBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.BasicScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.RFC2617Scheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.binary.Base64: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.binary.StringUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.EncoderException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.DecoderException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.BasicSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.DigestScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.DigestSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.GGSSchemeBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.ietf.jgss.GSSManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.GSSManagerImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.GSSManagerImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.GSSUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.login.LoginException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.login.Configuration: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.security.auth.callback.TextCallbackHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.wrapper.SunNativeProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.login.Configuration$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.login.ConfigurationSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.RefreshFailedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.Config: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.util.PendingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.wrapper.SunNativeProvider$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.wrapper.GSSNameElement: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.SunProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.Krb5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.kerberos.KrbServicePermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.Ticket: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.TicketFlags: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.HostAddresses: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.AuthorizationData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ccache.CredentialsCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.KDCOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.Credentials$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.EType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.CredentialsUtil: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.EncryptedData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.Confounder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Aes128: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.ArcFourHmac: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Aes256: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Des: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Des3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.KrbServiceLocator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.ResolverConfiguration: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.SCDynamicStoreConfig: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.krb5.Krb5Util: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.wrapper.Krb5Util: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.krb5.ServiceCreds: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.PAData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.APOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.HostAddress: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Nonce: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.LoginOptions: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.KDCRep: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.EncKDCRepPart: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.AuthorizationDataEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Aes256CtsHmacSha1EType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Des3CbcHmacSha1KdEType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcCrcEType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcMd5EType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.NullEType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Aes128CtsHmacSha1EType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.ArcFourHmacEType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.dk.Des3DkCrypto: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.NamingException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.spi.NamingManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.ResolverConfiguration$Options: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.ResolverConfigurationImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.CksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.SCDynamicStoreConfig$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.KdcComm$KdcAccessibility: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.KdcComm$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.KerberosSecrets: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.krb5.SubjectComber: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.krb5.InitialToken: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.kerberos.KrbDelegationPermissionCollection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.GSSToken: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ETypeInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ETypeInfo2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.KrbKdcRep: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.KDCReq: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ReplayCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.LocalSeqNumber: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcEType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.crc32: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.dk.DkCrypto: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.KeyUsage: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.MD4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.SecretKeyFactorySpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.CompositeName: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.naming.internal.VersionHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.CannotProceedException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.NoInitialContextException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.naming.internal.ResourceManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.directory.SearchControls: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.ResolverConfigurationImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.OptionsImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.net.dns.ResolverConfigurationImpl$AddressChangeListener: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.RsaMd5CksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.DesMacKCksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.Crc32CksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.DesMacCksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.NetClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.jgss.krb5.Krb5Token: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.ReplayCache$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.rcache.MemoryCache: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.LastReqEntry: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.crypto.MacSpi: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.MD4$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.provider.ByteArrayAccess: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.InvalidNameException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.spi.ResolveResult: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.naming.internal.VersionHelper12: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <javax.naming.ConfigurationException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.naming.internal.ResourceManager$AppletParameter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.rcache.DflCache$Storage: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.sun.naming.internal.VersionHelper12$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.security.krb5.internal.KrbCredInfo: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.HttpAuthenticator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.KerberosScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NegotiateScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NegotiateSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMEngineException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.SPNegoScheme: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.CloseableHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.BasicClientConnectionManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.SchemeRegistryFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.IgnoreSpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.BasicCookieStore: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultRedirectStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965Spec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.IgnoreSpec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.HttpAuthenticator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.ConnectionShutdownException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2109Spec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.RedirectLocations: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BestMatchSpec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.CookieSpecBase: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BasicCommentHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BasicSecureHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BasicPathHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.SystemDefaultDnsResolver: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.DefaultClientConnection: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.BasicDomainHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.SystemClock: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.AutoRetryHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.HttpClientBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.NoopUserTokenHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.execchain.Proxies: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.ManagedHttpClientConnectionFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.DefaultHttpResponseParserFactory: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.BasicResponseHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.ContentEncodingHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DecompressingHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.DefaultBackoffStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.HttpClients: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.LaxRedirectStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.NullBackoffStrategy: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.ProxyClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.BasicHttpClientConnectionManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.IdleConnectionHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.InMemoryDnsResolver: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.DateParseException: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.http.impl.cookie.DateUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.Log4JLogger: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.WeakHashtable: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.Handler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.LogManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.Logger$SystemLoggerHelper: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.Formatter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.LogManager$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.LogManager$Beans: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.Logging: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.util.logging.ErrorManager: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.ServletContextCleaner: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.NoOpLog: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.LogFactoryImpl: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.impl.LogFactoryImpl$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.logging.LogSource: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.binary.Base32: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.binary.BinaryCodec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.binary.Hex: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.CharEncoding: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.digest.DigestUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.AbstractCaverphone: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.BeiderMorseEncoder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Rule$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Rule$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.bm.ResourceConstants: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.Caverphone: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.Caverphone2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.Caverphone1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.ColognePhonetic: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.DoubleMetaphone: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.Metaphone: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.RefinedSoundex: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.SoundexUtils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.language.Soundex: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.BCodec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.RFC1522Codec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.QCodec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.QuotedPrintableCodec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.Utils: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.net.URLCodec: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.codec.StringEncoderComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.OptionGroup: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.OptionValidator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.BasicParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.Parser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.Options: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.CommandLine: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.Util: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.TypeHandler: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.PatternOptionBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.OptionBuilder: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.GnuParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.HelpFormatter: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.HelpFormatter$OptionComparator: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <org.apache.commons.cli.PosixParser: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred$2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred$3: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred$1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred$4: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <com.dosarrest.alfred.Alfred$5: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <sun.misc.ObjectInputFilter$Config$lambda_static_0__1: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.io.ObjectInputStream$setValidator__2: void <init>()> via: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: void <clinit>()> via: $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Object: void <clinit>()> via: $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: void <clinit>()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Object: void <clinit>()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.Provider")
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>()
<org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)> calls: <java.lang.Object: void <clinit>()> via: r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>()
<org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)> calls: <org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> via: r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.System: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.NameProvider")
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.URLConnection: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpURLConnection: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.HttpURLConnection: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Currency: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Properties: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Provider: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.SunProvider: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.DigestBase: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.MD4: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.SelectorProvider: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)> via: virtualinvoke $r7.<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r6, $r5)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: specialinvoke $r1.<org.joda.time.tz.DefaultNameProvider: void <init>()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> via: $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.NameProvider")
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Class: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Throwable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Object: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.IOException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.String: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Throwable$PrintStreamOrWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.System: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.AssertionError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NullPointerException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArrayList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Thread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.IdentityHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Throwable$SentinelHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalArgumentException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Objects: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StringBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CloneNotSupportedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.InterruptedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.RuntimeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.InputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.SecurityManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Console: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Properties: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.System$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ThreadGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.Reflection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Terminator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.SelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.SharedSecrets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessEnvironment: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Runtime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Exception: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.VM: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Version: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.AccessController: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.UnsupportedEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.OutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.FileDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.SecurityException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.NotActiveException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.StreamCorruptedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.HashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$ValidationList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$GetField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ObjectInputFilter$Config: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.InternalError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Void: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.misc.ReflectUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ThreadDeath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Proxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassCastException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.ReferenceQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$Logging: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NegativeArraySizeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Array: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalAccessError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Error: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Arrays: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Math: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.BitSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ConcurrentModificationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.OutOfMemoryError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.SecurityConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Thread$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ThreadLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalThreadStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.UnsupportedOperationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NoSuchMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectOutputStream$DebugTraceInfoStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectOutputStream$PutField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectOutputStream$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.NotSerializableException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StringBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.AbstractStringBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Formatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Matcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StringCoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StringIndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ConditionalSpecialCasing: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.String$CaseInsensitiveComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.FileNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.InterruptedIOException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Writer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.InstantiationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalAccessException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NoSuchFieldException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NoSuchMethodException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ReflectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Executable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ConstantPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Class$MethodArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Class$Atomic: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.TypeAnnotationParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.InvocationTargetException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Unsafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.LinkedHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.AnnotationSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Class$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Modifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.AnnotationParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.AllPermission: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.HashSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Permissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.PermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ReflectiveOperationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Random: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptyMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$ReverseComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptyListIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptyIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptySet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptyEnumeration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$EmptyList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Number: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NumberFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Integer$IntegerCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Shutdown: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.PropertyPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Terminator$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.Pipe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.SelectorProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessEnvironment$NameComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessEnvironment$EntryComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.TreeMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Process: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ApplicationShutdownHooks: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.UnsatisfiedLinkError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.OSEnvironment: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassFormatError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ConcurrentHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Vector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Stack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.AssertionStatusDirectives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassLoaderHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassLoader$ParallelLoaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Launcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NoClassDefFoundError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Hashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Resource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.Debug: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Reader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Console$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Console$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Properties$XmlSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.FileChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.SecurityConstants$AWT: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.FileDescriptor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.FloatingDecimal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Security: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Character$CharacterCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Long$LongCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.VirtualMachineError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandles: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MemberName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleStatics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.VerifyAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleNatives$Constants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MemberName$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleNatives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.EOFException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Proxy$ProxyClassFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.Proxy$KeyFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.ReferenceQueue$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.ReferenceQueue$Null: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.logging.PlatformLogger$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.logging.LoggingSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.Bits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.AccessibleObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ArrayIndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$HandleTable$HandleList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Short$ShortCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Byte$ByteCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.UTFDataFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IncompatibleClassChangeError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.NoSuchAlgorithmException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ByteArrayOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectStreamClass$EntryFuture: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJFloat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJByte: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.CountedCompleter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJShort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJChar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Arrays$NaturalOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.DualPivotQuicksort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Arrays$LegacyMergeSort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.StreamSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers$FJInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Math$RandomNumberGeneratorHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ArithmeticException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StrictMath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.NoSuchElementException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Policy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.atomic.AtomicInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.Reference$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.Reference$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DecimalFormatSymbols: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Formatter$Conversion: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Formatter$DateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.FormatterClosedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.ASCII: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Locale$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.LocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.ParseStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Locale$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.InternalLocaleBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.LanguageTag: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Locale$LocaleNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.LocaleUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.IllformedLocaleException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.LocaleMatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.CharacterCodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.MessageUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$BitClass: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$BmpCharProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$Caret: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$VertWS: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$BranchConn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$All: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$UnixCaret: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$TreeInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$End: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$Dot: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$Begin: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$UnixDot: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.Normalizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$LastNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$HorizWS: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$LastMatch: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$LineEnding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.Normalizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.spi.CharsetProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.Charset$ExtendedProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.Charset$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.Charset$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.StandardCharsets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.ThreadLocalCoders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.BreakIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.MalformedURLException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.FileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.URI: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.File$TempDirectory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.DeleteOnExitHook: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.DefaultFileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystems: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$EmptySpliterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$EmptySpliterator$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Collectors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.parser.SignatureParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.AbstractMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.MalformedParametersException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.TypeAnnotation$LocationInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.AnnotatedTypeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.BufferUnderflowException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.ProtectionDomain$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.X509Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.IOUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.URLStreamHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.Proxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.ExceptionProxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ConstructorAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.MethodAccessorGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.UnsafeFieldAccessorFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.MethodAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.SerializationConstructorAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ReflectionFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.scope.DummyScope: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.ReflectAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.WeakHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassValue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassValue$Identity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.AllPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.LinkedHashSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.PermissionsHash: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.UnresolvedPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.jar.Manifest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.jar.Attributes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.atomic.AtomicLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ArrayStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Shutdown$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DatagramSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.Selector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.SelectionKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.AbstractSelectionKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.SelectableChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.Socket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.DefaultSelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ServerSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.BadPaddingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.IllegalBlockSizeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ApplicationShutdownHooks$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessBuilder$Redirect: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessBuilder$NullOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessBuilder$NullInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.LinkageError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Launcher$ExtClassLoader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Paths: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.io.Win32ErrorMode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.BufferOverflowException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.Bits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.ReadOnlyBufferException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Perf: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Perf$GetPerfAction: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.PerfCounter$CoreCounters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.PerfCounter$WindowsClientCounters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ThreadLocalRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ConcurrentHashMap$ReservationNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.atomic.AtomicReference: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.InvalidKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.NoSuchProviderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SignatureException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.X509CertImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.Subject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.util.URLUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.LinkedList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.ParseUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Launcher$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Launcher$BootClassPathHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.EmptyStackException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Dictionary: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.BaseCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.BaseCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.CalendarDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.CalendarSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DateFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.GregorianCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.TimeZone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.CalendarUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.Gregorian: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.ZoneInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.spi.XmlPropertiesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Properties$XmlSupport$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileLockTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.FileLockInterruptionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileChannelImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.NonWritableChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.NonReadableChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ClosedByInterruptException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.IOStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.NativeDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ClosedChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileDispatcherImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.IOUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.spi.FileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.UnknownHostException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddress$InetAddressHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.NetworkInterface: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddress$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddress$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddressImplFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.Inet4Address: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.Inet6Address: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.util.IPAddressUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.FilePermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.RegisteredDomain: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketPermission$EphemeralRange: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.FloatingDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.FloatingDecimal$HexFloatPattern: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.InvalidAlgorithmParameterException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Security$ProviderProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.Providers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.GetInstance: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.PropertyExpander: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.InvalidParameterException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.ProviderList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Security$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Optional: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterName$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterData00: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterDataLatin1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterData0E: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterDataPrivateUse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterData01: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterData02: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.CharacterDataUndefined: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BitSieve: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.MutableBigInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BigInteger$UnsafeHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.ValueConversions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.WrongMethodTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.empty.Empty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.VerifyType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.BoundMethodHandle$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.NoSuchFieldError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.BytecodeDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.DirectMethodHandle$EnsureInitialized: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.DirectMethodHandle$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodType$ConcurrentWeakInternSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.logging.LoggingSupport$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.logging.LoggingSupport$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.StringWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.GeneralSecurityException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.MessageDigestSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.DigestException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinTask: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArraysParallelSortHelpers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Tripwire: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArrayPrefixHelpers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.OptionalDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.DoubleSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams$DoubleStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams$StreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.OptionalInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.IntSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams$IntStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.OptionalLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.LongSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams$LongStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.AbstractExecutorService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinPool$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.RejectedExecutionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StrictMath$RandomNumberGeneratorHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.InvalidMarkException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Comparators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Policy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.Policy$UnsupportedEmptyCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.PolicyFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.PolicySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.DecimalFormatSymbolsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.IllegalFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Calendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.temporal.TemporalQueries: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.ZoneId: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.NumberFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DecimalFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DateFormatSymbols: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.LocaleServiceProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.BreakIteratorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.CollatorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.DateFormatProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.DateFormatSymbolsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.spi.NumberFormatProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.CurrencyNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.LocaleNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.TimeZoneNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.CalendarDataProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.spi.CalendarNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.spi.CalendarProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle$Control: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.JRELocaleConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.TreeSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.LocaleObjectCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.Format: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.SimpleDateFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.resources.ParallelListResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.CalendarDataUtility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.resources.OpenListResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.resources.TimeZoneNamesBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.BaseLocale$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.LocaleEquivalentMaps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.CoderResult$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.CoderResult$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.CoderResult$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$20: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$21: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$22: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$23: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$17: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$18: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$19: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$13: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$14: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$15: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.regex.Pattern$CharPropertyNames$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.Charset$ExtendedProviderHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ASCIICaseInsensitiveComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.StandardCharsets$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.StandardCharsets$Classes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.StandardCharsets$Aliases: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SecureRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.attribute.UserPrincipalLookupService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.DeleteOnExitHook$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.WinNTFileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.ProviderNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.BooleanSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.GenericSignatureFormatError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.IntSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.BottomSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.LongSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.VoidDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.CharSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.DoubleSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.ByteSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.ShortSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.generics.tree.FloatSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateExpiredException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateNotYetValidException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateParsingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CRLException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertificateFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.UnknownServiceException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.MessageHeader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ContentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.UnknownContentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.MimeTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.URLConnection$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.MagicAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.AccessorGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ClassFileAssembler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.Label: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ByteVectorFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.reflect.MalformedParameterizedTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.ZipEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.IllegalBlockingModeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.MembershipKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DatagramSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.MulticastSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.AbstractPlainDatagramSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DefaultDatagramSocketImplFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.AsynchronousCloseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.PlainSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocksSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.WindowsSelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.NoSuchPaddingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.ShortBufferException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.spec.InvalidParameterSpecException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CipherSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.ExemptionMechanismException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.NullCipher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.JceSecurity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.ProviderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.JceSecurityManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoAllPermission: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SecureClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.URLClassLoader$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.jar.JavaUtilJarAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.jar.JarException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpCookie$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.ZipException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.Inflater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.ZipFile$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.charset.StandardCharsets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ArrayDeque: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessBuilder$Redirect$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessBuilder$Redirect$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ProcessImpl$LazyPattern: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystemNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.Bits$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantLock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.LockSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.X509CertInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.AlgorithmId: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.IssuerAlternativeNameExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.PolicyMappingsExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.SubjectAlternativeNameExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.Extension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.GeneralNames: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.X509Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.OIDMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.DerOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.CertificateValidity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.PKIXExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.CertificateExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.HexDumpEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.Pem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.AttributeNameEnumeration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.KeyUsageExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.Subject$AuthPermissionHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ResourcesMgr: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.JarIndex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ExtensionDependency: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.InvalidJarIndexException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.AbstractSequentialList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.Launcher$BootClassPathHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.Gregorian$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DontCareFieldPosition: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.JulianCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.JulianCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.TimeZoneNameUtility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.ZoneInfoFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.Clock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.AbstractCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.AsynchronousFileChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.OverlappingFileLockException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Net: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.NativeThread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Util$BufferCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileDispatcherImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.IOUtil$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileStore: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.spi.FileSystemProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Files: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.Channels: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.InetAddressCachePolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InterfaceAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.NetworkInterface$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DefaultInterface: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.PortConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.InheritableThreadLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.ProviderList$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.DataFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.SignedMutableBigInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ExceptionInInitializerError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.Wrapper$Format: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.Invokers$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.invoke.util.ValueConversions$WrapperCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Label: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$T: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.BoundMethodHandle$SpeciesData$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.BoundMethodHandle$Factory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.BootstrapMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ProxyGenerator$ConstantPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.JCAUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ExecutionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.TimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.CancellationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Streams$AbstractStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SpinedBuffer$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.StreamSpliterators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SpinedBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SpinedBuffer$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SpinedBuffer$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.PolicyParser$GrantEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.PolicyParser$PermissionEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.PolicyUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.PolicyParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Currency$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Currency$CurrencyNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BigDecimal$UnsafeHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BigDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BigDecimal$StringBuilderHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.math.BigDecimal$LongOverflow: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.DateTimeFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.zone.ZoneRulesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Calendar$AvailableCalendarTypes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.BuddhistCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Calendar$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Calendar$CalendarAccessControlContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.zone.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DigitList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DecimalFormat$FastPathData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.DecimalFormat$DigitArrays: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.CharacterIteratorFieldDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.FormattedFloatingDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle$Control$CandidateListCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.Collator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.LocaleDataMetaInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.text.CalendarBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle$RBClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UnicodeSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.ICUData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UTF16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UCharacterIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UCharacterProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.RangeValueIterator$Element: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.Utility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.US_ASCII: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SecureRandomSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SecureRandom$StrongPatternHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SecureRandom$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SecureRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ExpiringCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.DefaultFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.MimeTable$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.FieldAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ClassDefiner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.UTF8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.ByteVectorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.reflect.'annotation'.AnnotationInvocationHandler$UnsafeAccessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.CRC32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.ZipUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.Base64: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.StandardSocketOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.AbstractPlainDatagramSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.ResourceManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DatagramPacket$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.DefaultDatagramSocketImplFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.HttpConnectSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.AbstractPlainSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.PlainSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ProxySelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SocketTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.SelectorProviderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.ExemptionMechanismSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.NullCipherSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoPermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.JceSecurity$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.JceSecurityManager$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoAllPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.AlgorithmParametersSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.ProgressMonitor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ManifestDigester$Entry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantLock$Sync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantLock$FairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.X509CRLImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.X509CRL: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.pkcs.ParsingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.certpath.X509CertificatePair: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.X500Name$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.DerIndefLenConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.SignatureSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ByteArrayLexOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ByteArrayTagOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.CertificateVersion: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.GeneralSubtrees: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.CharacterEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ResourcesMgr$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ExtensionInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.JarFilter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.LocalGregorianCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.ZoneInfoFile$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.calendar.ZoneInfoFile$Checksum: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.Duration$DurationUnits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.IsoChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.temporal.IsoFields: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.Parsed: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.PropertiesDefaultHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.FileKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Net$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.net.SocketFlow: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.NotYetBoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.AlreadyBoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.NotYetConnectedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.UnsupportedAddressTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.UnresolvedAddressException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.SocketOptionRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.ExtendedOptionsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Net$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Net$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.IllegalSelectorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ClosedSelectorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.NetHooks: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.SocketDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.AlreadyConnectedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ConnectionPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.NoConnectionPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.CancelledKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Files$AcceptAllFilter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.spi.FileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.CopyMoveHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Files$FileTypeDetectors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.TempFileHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.InetAddressCachePolicy$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.InetAddressCachePolicy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.PortConfig$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.ByteVector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Item: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Frame: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Edge: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jca.JCAUtil$CachedSecureRandomHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SpinedBuffer$OfPrimitive: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Tripwire: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.AbstractSpinedBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.PipelineHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.DistinctOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SortedOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.MatchOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.ReduceOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.ForEachOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.SliceOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.EnumMap$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.FutureTask$WaitNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.Executors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.LinkedBlockingQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.UnrecoverableKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.UnrecoverableEntryException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyStoreSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyStore$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyStore$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.Password: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.StreamTokenizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.AbstractChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.DateTimeFormatterBuilder$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.DateTimeTextProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.CopyOnWriteArrayList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.temporal.TemporalAdjusters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.ResourceBundle$RBClassLoader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.ICUBinary: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UCharacter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SecureRandom$SeederHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SeedGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.ManifestDigester$Position: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.InetAddressContainer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.ConnectionResetException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.AbstractPlainSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.Authenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.WindowsSelectorImpl$FdMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoPolicyParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.JarVerifier$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.DefaultProgressMeteringPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathValidatorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.KeyUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.pkcs.PKCS7$SecureRandomHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.AlgorithmDecomposer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraint: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.IllegalMonitorStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.X509CRLEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.CRLExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.NullCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.AVAComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.DestroyFailedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.X509Key: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.SubjectDomainCombiner$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.Policy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.ChronoLocalDateImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.xml.sax.SAXException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.xml.sax.InputSource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.SAXParserImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.SAXParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.XMLStreamException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.SocketOptionRegistry$LazyInitialization: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.ExtendedSocketOption: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.net.ExtendedSocketOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.CopyMoveHelper$CopyOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Files$FileTypeDetectors$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.Files$FileTypeDetectors$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.TempFileHelper$PosixPermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.objectweb.asm.Context: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps$FindSink$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps$FindSink: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps$FindSink$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps$FindSink$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.FindOps$FindSink$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.ReduceOps$Box: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$EmptyNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$SpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.stream.Nodes$EmptyNode$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.Executors$DefaultThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.Executors$PrivilegedThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.ThaiBuddhistChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.MinguoChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.chrono.JapaneseChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.ZoneName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.format.DateTimeTextProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.time.zone.TzdbZoneRulesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.normalizer.UBiDiProps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.Surrogate$Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SunEntries: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsSecurity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsUriSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.FileSystemAlreadyExistsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsSecurityDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsChannelFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsFileCopy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.ProviderMismatchException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsLinkSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsFileAttributeViews: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.MembershipRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.PortUnreachableException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.DatagramDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.validator.KeyStores: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.HttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.spec.InvalidKeySpecException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.Policy$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.Policy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.ParserSAX: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.ExtendedSocketOption$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.DefaultFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.attribute.PosixFilePermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$Transferer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$WaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$LifoWaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$TransferStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$FifoWaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.UCompactIntArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.IntHashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.CollatorUtilities: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.Surrogate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.NativePRNG: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.NativePRNG$Blocking: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.NativePRNG$NonBlocking: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.SunEntries$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.ThreadPool$DefaultThreadPoolHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractAclFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsUserPrincipals: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.NativeBuffers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$VolumeInformation: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$DiskFreeSpace: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$AclInformation: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$Account: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$CompletionStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$BackupResult: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsNativeDispatcher$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsChannelFactory$Flags: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsChannelFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.Cancellable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractUserDefinedFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsFileSystem$LookupService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsPathParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.Globs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractPath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractBasicFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.DatagramSocketAdaptor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.x509.NetscapeCertTypeExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.certpath.UntrustedChecker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.X509CertSelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.PKIXCertPathChecker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CollectionCertStoreParameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.NetworkClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.PosterOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.KeepAliveCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.CacheRequest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.CookieHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.HeaderParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.spec.ECPoint: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.Pair: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.Attrs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.util.xml.impl.Input: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.xml.sax.SAXNotRecognizedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <jdk.internal.org.xml.sax.SAXNotSupportedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.RegistryFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.text.ComposedCharIter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.cs.Surrogate$Generator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.PendingIoCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Invoker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractWatchService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.WindowsFileSystem$LookupService$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.certpath.PKIX: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.AnchorCertificates: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.UntrustedCertificates: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathBuilderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathBuilderSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathBuilder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathHelperImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathValidatorSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertPathValidator$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.CertStore$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ResponseCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.CacheResponse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.SecureCacheResponse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.NetProperties: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.EmptyInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.KeepAliveStream$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.HttpCapture$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.RegistryFileTypeDetector$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.ConcurrentLinkedQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Invoker$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ShutdownChannelGroupException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.Iocp$CompletionStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.concurrent.LinkedBlockingDeque: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.ClosedWatchServiceException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.fs.AbstractPoller: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.file.StandardWatchEventKinds: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.certpath.PKIX$CertStoreComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.AnchorCertificates$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.UntrustedCertificates$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.certpath.CertPathHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.cert.X509CRLSelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.DigestAuthentication$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.AuthCacheValue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.NetProperties$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.Negotiator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.http.KeepAliveStreamCleaner$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.www.protocol.http.AuthCacheImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.DefaultAsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.WindowsAsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.IllegalChannelGroupException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.AcceptPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.ReadPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.WritePendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.nio.channels.InterruptedByTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.StackOverflowError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.LambdaMetafactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.invoke.LambdaConversionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.VerifyError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.UnknownError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ClassCircularityError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.Finalizer$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.ref.Finalizer$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.InstantiationError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractInstant: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.DateTimeFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.Chronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTimeField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.Instant: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.MutableDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.ISODateTimeFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTimeUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.field.FieldUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.LocalDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.FormatUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.LocalDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.LocalTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DurationField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.ISODateTimeFormat$Constants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTimeUtils$SystemMillisProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.BaseDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateMidnight: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.YearMonthDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.TimeOfDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ConverterManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.chrono.AssembledChronology$Fields: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.chrono.ISOYearOfEraDateTimeField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.chrono.BaseChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.BaseLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.Period: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.MutablePeriod: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.MutableInterval: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.BasePartial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.field.AbstractReadableInstantFieldProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.DateConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ReadableInstantConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.StringConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ReadablePartialConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ReadablePeriodConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.LongConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ReadableIntervalConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.NullConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.CalendarConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.ReadableDurationConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.field.MillisDurationField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.DateTimeZoneBuilder$RuleSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractPartial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.ISOPeriodFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractInterval: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.field.AbstractPartialFieldProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.convert.AbstractConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractPeriod: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.BasePeriod$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.PeriodFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.base.AbstractDuration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.chrono.BasicChronology$HalfdayField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.DateTimeConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.format.PeriodFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.MonthDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.Partial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.joda.time.YearMonth: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.ParseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.Args: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.TextUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.HttpException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.UnsupportedHttpVersionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.ProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.MalformedChunkCodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.entity.AbstractHttpEntity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.BasicHeaderValueParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.BasicLineFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HTTP: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.LangUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.Consts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.EntityUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.BasicHeaderValueFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.entity.BasicHttpEntity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.Asserts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.SyncBasicHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.BasicHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.AbstractHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.HttpProtocolParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.HttpConnectionParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.params.HttpParamConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.config.ConnectionConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.config.MessageConstraints$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.config.SocketConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.HttpHeaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultBHttpServerConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.ConnSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.DefaultHttpResponseWriterFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.DefaultHttpRequestParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.NetUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.BasicLineParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultHttpRequestFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.AbstractHttpMessage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.message.HeaderGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.SocketHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.AbstractHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.DefaultHttpRequestWriterFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.io.DefaultHttpResponseParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultHttpResponseFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.SocketHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.AbstractHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.NoConnectionReuseStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultBHttpClientConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.pool.BasicConnPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.pool.BasicConnFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.SocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.DefaultSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.security.KeyManagementException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLContextSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLEngine: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLParameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.SSLSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.X509Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.DefaultServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.CertificateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.CertificateExpiredException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.CertificateNotYetValidException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.X509Certificate$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.cert.CertificateEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.config.RegistryBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestExpectContinue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.EncodingUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestContent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.UriHttpRequestHandlerMapper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.UriPatternMatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.ChainBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.ResponseDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HttpDateGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.ResponseContent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HttpRequestExecutor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HttpCoreContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.BasicHttpContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.SyncBasicHttpContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.BasicHttpProcessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestUserAgent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.RequestTargetHost: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.ResponseServer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.ResponseConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.protocol.HttpProcessorBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.ExceptionUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.util.CharsetUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.TypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.Gson: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.JsonElement: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.JsonTreeWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.Excluder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.reflect.TypeToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.DateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TimeTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.Gson$FutureTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.Streams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.Primitives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.JsonNull: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.stream.JsonReader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.JsonReaderInternalAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.JsonObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.JsonArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.JsonTreeReader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.$Gson$Types: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.$Gson$Preconditions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.LinkedTreeMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$23: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$24: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$25: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$26: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$20: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$21: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$22: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$13: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$14: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$15: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$17: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$18: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$19: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.TypeAdapters$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.LinkedTreeMap$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.LinkedTreeMap$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.UnsafeAllocator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.UUID$Holder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.internal.UnsafeAllocator$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.JsonParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.DefaultDateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.GsonBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.google.gson.stream.JsonScope: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.AUTH: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.AuthenticationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.MalformedChallengeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.AuthSchemeRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.AuthState: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.InvalidCredentialsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.auth.params.AuthParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.CircularRedirectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.RedirectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.ClientProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.config.AuthSchemes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.config.CookieSpecs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.config.RequestConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.entity.EntityBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.URLEncodedUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.zip.Deflater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.InputMismatchException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.scheme.SchemeRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ConnectTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.AbstractExecutionAwareRequest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.CloneUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpDelete: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpRequestBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpGet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpHead: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpPatch: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpPost: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpPut: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.HttpTrace: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.methods.RequestBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.URIBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.util.InetAddressUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.NonRepeatableRequestException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.params.AuthPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.params.CookiePolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.params.HttpClientParamConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.params.HttpClientParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.cookie.CookieSpecRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.cookie.MalformedCookieException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.HttpClientContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestAcceptEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestAddCookies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.LogFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestClientConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestExpectContinue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.ResponseAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.BasicAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.DefaultSchemePortResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.ResponseContentEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.protocol.ResponseProcessCookies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.DateUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.HttpClientUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.JdkIdn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.Punycode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.Rfc3492Idn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.client.utils.URIUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.net.ConnectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.MultihomePlainSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.params.ConnPerRouteBean: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.params.ConnManagerParams$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.params.ConnManagerParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.params.ConnRouteParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.routing.BasicRouteDirector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.socket.PlainConnectionSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.SSLContexts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.SSLContextBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.TrustManagerFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.TrustManagerFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.KeyManagerFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.net.ssl.KeyManagerFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.conn.ssl.TrustSelfSignedStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.cookie.CookieIdentityComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.cookie.CookiePathComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.cookie.CookieRestrictionViolationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.AuthSchemeBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.BasicScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.RFC2617Scheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.binary.Base64: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.binary.StringUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.EncoderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.DecoderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.BasicSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.DigestScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.DigestSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.GGSSchemeBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.ietf.jgss.GSSManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.GSSManagerImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.GSSManagerImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.GSSUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.login.LoginException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.login.Configuration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.security.auth.callback.TextCallbackHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.wrapper.SunNativeProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.login.Configuration$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.login.ConfigurationSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.RefreshFailedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.Config: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.util.PendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.wrapper.SunNativeProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.wrapper.GSSNameElement: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.SunProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.Krb5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.kerberos.KrbServicePermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.Ticket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.TicketFlags: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.HostAddresses: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.AuthorizationData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ccache.CredentialsCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.KDCOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.Credentials$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.CredentialsUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.EncryptedData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.Confounder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Aes128: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.ArcFourHmac: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Aes256: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Des: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Des3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.KrbServiceLocator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.ResolverConfiguration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.SCDynamicStoreConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.krb5.Krb5Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.wrapper.Krb5Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.krb5.ServiceCreds: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.PAData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.APOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.HostAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Nonce: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.LoginOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.KDCRep: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.EncKDCRepPart: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.AuthorizationDataEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Aes256CtsHmacSha1EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Des3CbcHmacSha1KdEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcCrcEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcMd5EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.NullEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Aes128CtsHmacSha1EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.ArcFourHmacEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.dk.Des3DkCrypto: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.NamingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.spi.NamingManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.ResolverConfiguration$Options: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.ResolverConfigurationImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.SCDynamicStoreConfig$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.KdcComm$KdcAccessibility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.KdcComm$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.KerberosSecrets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.krb5.SubjectComber: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.krb5.InitialToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.kerberos.KrbDelegationPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.GSSToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ETypeInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ETypeInfo2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.KrbKdcRep: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.KDCReq: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ReplayCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.LocalSeqNumber: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.DesCbcEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.crc32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.dk.DkCrypto: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.KeyUsage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.MD4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.SecretKeyFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.CompositeName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.naming.internal.VersionHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.CannotProceedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.NoInitialContextException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.naming.internal.ResourceManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.directory.SearchControls: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.ResolverConfigurationImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.OptionsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.net.dns.ResolverConfigurationImpl$AddressChangeListener: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.RsaMd5CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.DesMacKCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.Crc32CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.DesMacCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.NetClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.jgss.krb5.Krb5Token: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.ReplayCache$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.rcache.MemoryCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.LastReqEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.crypto.MacSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.MD4$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.provider.ByteArrayAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.InvalidNameException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.spi.ResolveResult: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.naming.internal.VersionHelper12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <javax.naming.ConfigurationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.naming.internal.ResourceManager$AppletParameter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.rcache.DflCache$Storage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.sun.naming.internal.VersionHelper12$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.security.krb5.internal.KrbCredInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.HttpAuthenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.KerberosScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NegotiateScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NegotiateSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMEngineException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.SPNegoScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.CloseableHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.BasicClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.SchemeRegistryFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.IgnoreSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.BasicCookieStore: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultRedirectStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965Spec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.IgnoreSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.HttpAuthenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.ConnectionShutdownException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2109Spec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.RedirectLocations: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BestMatchSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.CookieSpecBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BasicCommentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BasicSecureHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BasicPathHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.SystemDefaultDnsResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.DefaultClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.BasicDomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.SystemClock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.AutoRetryHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.HttpClientBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.NoopUserTokenHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.execchain.Proxies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.ManagedHttpClientConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.DefaultHttpResponseParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.BasicResponseHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.ContentEncodingHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DecompressingHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.DefaultBackoffStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.HttpClients: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.LaxRedirectStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.NullBackoffStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.ProxyClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.BasicHttpClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.IdleConnectionHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.InMemoryDnsResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.DateParseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.http.impl.cookie.DateUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.Log4JLogger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.WeakHashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.LogManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.Logger$SystemLoggerHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.Formatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.LogManager$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.LogManager$Beans: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.Logging: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.util.logging.ErrorManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.ServletContextCleaner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.NoOpLog: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.LogFactoryImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.impl.LogFactoryImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.logging.LogSource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.binary.Base32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.binary.BinaryCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.binary.Hex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.CharEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.digest.DigestUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.AbstractCaverphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.BeiderMorseEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Rule$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Rule$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.bm.ResourceConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.Caverphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.Caverphone2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.Caverphone1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.ColognePhonetic: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.DoubleMetaphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.Metaphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.RefinedSoundex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.SoundexUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.language.Soundex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.BCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.RFC1522Codec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.QCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.QuotedPrintableCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.Utils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.net.URLCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.codec.StringEncoderComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.OptionGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.OptionValidator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.BasicParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.Options: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.CommandLine: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.TypeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.PatternOptionBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.OptionBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.GnuParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.HelpFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.HelpFormatter$OptionComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <org.apache.commons.cli.PosixParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <com.dosarrest.alfred.Alfred$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <sun.misc.ObjectInputFilter$Config$lambda_static_0__1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.io.ObjectInputStream$setValidator__2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Thread: void <clinit>()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Object: void <clinit>()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.joda.time.DateTimeZone.NameProvider")
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0)
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object get(java.lang.Object)> via: $r1 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NST", "Pacific/Auckland")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SST", "Pacific/Guadalcanal")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AET", "Australia/Sydney")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACT", "Australia/Darwin")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("JST", "Asia/Tokyo")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CTT", "Asia/Shanghai")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("VST", "Asia/Ho_Chi_Minh")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BST", "Asia/Dhaka")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("IST", "Asia/Kolkata")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PLT", "Asia/Karachi")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NET", "Asia/Yerevan")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("EAT", "Africa/Addis_Ababa")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CAT", "Africa/Harare")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ART", "Africa/Cairo")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BET", "America/Sao_Paulo")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AGT", "America/Argentina/Buenos_Aires")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CNT", "America/St_Johns")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PRT", "America/Puerto_Rico")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("IET", "America/Indiana/Indianapolis")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("EST", "America/New_York")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CST", "America/Chicago")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PNT", "America/Phoenix")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MST", "America/Denver")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PST", "America/Los_Angeles")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AST", "America/Anchorage")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HST", "Pacific/Honolulu")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MIT", "Pacific/Apia")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("EET", "EET")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ECT", "CET")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MET", "CET")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CET", "CET")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("WET", "WET")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("GMT", "UTC")
<org.joda.time.DateTimeZone: java.lang.String getConvertedId(java.lang.String)> calls: <java.util.HashMap: void <init>()> via: specialinvoke $r3.<java.util.HashMap: void <init>()>()
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: specialinvoke $r0.<org.joda.time.DateTimeZone$1: void <init>()>()
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <org.joda.time.format.DateTimeFormatter: long parseMillis(java.lang.String)> via: $l0 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: long parseMillis(java.lang.String)>(r3)
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)> via: $r2 = virtualinvoke $r1.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r0)
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()>()
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()>()
<org.joda.time.DateTimeZone: int parseOffset(java.lang.String)> calls: <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()> via: $r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()>()
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>()
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>()
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>()
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r4.<java.lang.StringBuffer: void <init>()>()
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i4, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i4, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i6, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i6, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i2, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i2, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i9, 3)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i9, 3)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i4, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, $i6, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i2, 2)
<org.joda.time.DateTimeZone: java.lang.String printOffset(int)> calls: <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)> via: staticinvoke <org.joda.time.format.FormatUtils: void appendPaddedInteger(java.lang.StringBuffer,int,int)>($r4, i9, 3)
<org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()> calls: <org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()> via: $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>()
<org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()> calls: <org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)> via: $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>(null, 1, 2, 4)
<org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter offsetFormatter()> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: specialinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>()
<org.joda.time.DateTimeZone: void <init>(java.lang.String)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.joda.time.DateTimeZone: void <init>(java.lang.String)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id must not be null")
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <java.util.Locale: void <clinit>()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.CachedDateTimeZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.FixedDateTimeZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.tz.DefaultNameProvider: java.lang.String getShortName(java.util.Locale,java.lang.String,java.lang.String)> via: $r4 = interfaceinvoke $r3.<org.joda.time.tz.NameProvider: java.lang.String getShortName(java.util.Locale,java.lang.String,java.lang.String)>(r7, $r2, $r1)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <java.lang.Object: void <clinit>()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <java.lang.Object: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <java.util.Locale: java.util.Locale getDefault()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getShortName(long,java.util.Locale)> calls: <org.joda.time.DateTimeZone: java.lang.String printOffset(int)> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <java.util.Locale: void <clinit>()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.CachedDateTimeZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.FixedDateTimeZone: java.lang.String getNameKey(long)> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>(l0)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.tz.DefaultNameProvider: java.lang.String getName(java.util.Locale,java.lang.String,java.lang.String)> via: $r4 = interfaceinvoke $r3.<org.joda.time.tz.NameProvider: java.lang.String getName(java.util.Locale,java.lang.String,java.lang.String)>(r7, $r2, $r1)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <java.lang.Object: void <clinit>()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <java.lang.Object: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <java.util.Locale: java.util.Locale getDefault()> via: r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()
<org.joda.time.DateTimeZone: java.lang.String getName(long,java.util.Locale)> calls: <org.joda.time.DateTimeZone: java.lang.String printOffset(int)> via: $r5 = staticinvoke <org.joda.time.DateTimeZone: java.lang.String printOffset(int)>($i1)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i7 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l5)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long previousTransition(long)> via: $l5 = virtualinvoke r0.<org.joda.time.DateTimeZone: long previousTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long nextTransition(long)> via: $l13 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i7 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l5)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: long previousTransition(long)> via: $l5 = virtualinvoke r0.<org.joda.time.DateTimeZone: long previousTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: long nextTransition(long)> via: $l13 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i7 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l5)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long previousTransition(long)> via: $l5 = virtualinvoke r0.<org.joda.time.DateTimeZone: long previousTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long nextTransition(long)> via: $l13 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i7 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l5)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: long previousTransition(long)> via: $l5 = virtualinvoke r0.<org.joda.time.DateTimeZone: long previousTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: long nextTransition(long)> via: $l13 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>(l3)
<org.joda.time.DateTimeZone: int getOffsetFromLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l3)
<org.joda.time.DateTimeZone: long convertUTCToLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertUTCToLocal(long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertUTCToLocal(long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertUTCToLocal(long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertUTCToLocal(long)> calls: <java.lang.ArithmeticException: void <init>(java.lang.String)> via: specialinvoke $r2.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Adding time zone offset caused overflow")
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i5 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l4)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i5 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l4)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i5 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l4)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> via: $l6 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)>(l2, z0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i5 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l4)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long nextTransition(long)> via: $l10 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l9)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l3)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.CachedDateTimeZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.CachedDateTimeZone: long nextTransition(long)> via: $l10 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l9)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l3)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long nextTransition(long)> via: $l10 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l9)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l3)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r3 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.FixedDateTimeZone: long nextTransition(long)> via: $l16 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l15)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.FixedDateTimeZone: long nextTransition(long)> via: $l10 = virtualinvoke r0.<org.joda.time.DateTimeZone: long nextTransition(long)>($l9)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i4 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l3)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <org.joda.time.IllegalInstantException: void <init>(long,java.lang.String)> via: specialinvoke $r4.<org.joda.time.IllegalInstantException: void <init>(long,java.lang.String)>(l0, $r3)
<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)> calls: <java.lang.ArithmeticException: void <init>(java.lang.String)> via: specialinvoke $r5.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Subtracting time zone offset caused overflow")
<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)> calls: <org.joda.time.DateTimeZone: void <clinit>()> via: r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)> calls: <org.joda.time.DateTimeZone: long convertUTCToLocal(long)> via: $l1 = virtualinvoke r0.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0)
<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)> calls: <org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)> via: $l2 = virtualinvoke r1.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean,long)>($l1, 0, l0)
<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)> calls: <java.lang.Object: void <clinit>()> via: r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: long getMillisKeepLocal(org.joda.time.DateTimeZone,long)> calls: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()> via: r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
<org.joda.time.DateTimeZone: int hashCode()> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.DateTimeZone: int hashCode()> calls: <java.lang.String: int hashCode()> via: $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
<org.joda.time.DateTimeZone: java.lang.String toString()> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r1 = virtualinvoke r0.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.DateTimeZone: void <clinit>()> calls: <org.joda.time.tz.FixedDateTimeZone: void <init>(java.lang.String,java.lang.String,int,int)> via: specialinvoke $r0.<org.joda.time.tz.FixedDateTimeZone: void <init>(java.lang.String,java.lang.String,int,int)>("UTC", "UTC", 0, 0)
<org.joda.time.DateTimeZone: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)>(null)
<org.joda.time.DateTimeZone: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)>(null)
<org.joda.time.DateTimeZone: void <clinit>()> calls: <org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)> via: staticinvoke <org.joda.time.DateTimeZone: void setProvider0(org.joda.time.tz.Provider)>(null)
<org.joda.time.DateTimeZone: void <clinit>()> calls: <org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)> via: staticinvoke <org.joda.time.DateTimeZone: void setNameProvider0(org.joda.time.tz.NameProvider)>(null)
Found source being called: <java.util.TimeZone: java.util.TimeZone getDefault()>
Found source being called: <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>
Found source being called: <org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>
Found source being called: <org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>
Found source being called: <java.util.Locale: java.util.Locale getDefault()>
Now we build call graphs for class: org.apache.commons.logging.impl.SimpleLog
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> calls: <java.lang.System: void <clinit>()> via: r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> calls: <java.util.Properties: java.lang.String getProperty(java.lang.String)> via: $r4 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1)
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r2 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.commons.logging.simplelog.log.")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r23.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r17 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.commons.logging.simplelog.log.")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r24.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z4 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z5 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z6 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z7 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r22)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: int lastIndexOf(java.lang.String)> via: i0 = virtualinvoke $r20.<java.lang.String: int lastIndexOf(java.lang.String)>(".")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: int lastIndexOf(java.lang.String)> via: i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(java.lang.String)>(".")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r5)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r5)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: void <clinit>()> via: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r19)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r19)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: void <clinit>()> via: $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>("org.apache.commons.logging.simplelog.defaultlog")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>("org.apache.commons.logging.simplelog.defaultlog")
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r5)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: java.lang.String valueOf(java.lang.Object)> via: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r19)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <java.lang.String: java.lang.String valueOf(java.lang.Object)> via: $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15)
<org.apache.commons.logging.impl.SimpleLog: void <init>(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> via: r22 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>("org.apache.commons.logging.simplelog.defaultlog")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)> via: specialinvoke $r10.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected InvocationTargetException", $r11)
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r14 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r14 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <java.lang.Thread: void <clinit>()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r15 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.impl.SimpleLog")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r15 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.impl.SimpleLog")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> via: $r14 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> via: $r15 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.impl.SimpleLog")
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog$1: java.lang.Object run()> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog$1: void <init>(java.lang.String)> via: specialinvoke $r0.<org.apache.commons.logging.impl.SimpleLog$1: void <init>(java.lang.String)>(r1)
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.Class: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.Thread: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.NoClassDefFoundError: void <init>(java.lang.String)> via: specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.Class class$(java.lang.String)> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader access$000()> calls: <org.apache.commons.logging.impl.SimpleLog: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader access$000()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader access$000()> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> via: $r0 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.util.Properties: void <init>()> via: specialinvoke $r0.<java.util.Properties: void <init>()>()
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.util.Properties: void load(java.io.InputStream)> via: virtualinvoke $r6.<java.util.Properties: void load(java.io.InputStream)>($r1)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.text.SimpleDateFormat: void <init>(java.lang.String)> via: specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r5)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.text.SimpleDateFormat: void <init>(java.lang.String)> via: specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r9)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)>("simplelog.properties")
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showlogname", $z0)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showShortLogname", $z2)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showdatetime", $z4)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.simplelog.dateTimeFormat", $r2)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> via: $r1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)>("simplelog.properties")
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> via: $z1 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showlogname", $z0)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> via: $z3 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showShortLogname", $z2)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> via: $z5 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.commons.logging.simplelog.showdatetime", $z4)
<org.apache.commons.logging.impl.SimpleLog: void <clinit>()> calls: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> via: $r3 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.simplelog.dateTimeFormat", $r2)
Found source being called: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>
Found source being called: <org.apache.commons.logging.impl.SimpleLog$1: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
Now we build call graphs for class: org.apache.http.impl.io.AbstractSessionInputBuffer
Now we build call graphs for class: org.apache.commons.codec.binary.BaseNCodecInputStream
Now we build call graphs for class: org.apache.http.conn.ssl.SSLSocketFactory
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> calls: <org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> via: specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r1, $r2)
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> calls: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)> via: $r10 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r9)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])> via: $r8 = virtualinvoke $r5.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r6, $r13)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)> via: $r5 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r4)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)> via: $r11 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(r9, r10)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])> via: $r8 = virtualinvoke $r5.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r6, $r14)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)> via: $r5 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r4)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)> via: $r10 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r9)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])> via: $r8 = virtualinvoke $r5.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r6, $r13)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)> via: $r5 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r4)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r7 = virtualinvoke $r6.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)> via: $r6 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r5)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])> via: $r4 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r9)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])> via: $r4 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r7)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()> via: $r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)> via: $r3 = virtualinvoke $r1.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r2)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(org.apache.http.conn.ssl.TrustStrategy)> calls: <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> via: specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, null, null, r5)
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> via: $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> via: $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL socket factory")
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL socket factory")
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: specialinvoke $r0.<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: specialinvoke $r1.<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>()
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: specialinvoke $r2.<org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>()
Found source being called: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
Now we build call graphs for class: org.apache.http.client.utils.URLEncodedUtils
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: int length()> via: $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,char,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,java.nio.charset.Charset)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> via: $r2 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)>(r0, 38, r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: int length()> via: $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.Object: void <clinit>()> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <java.lang.Object: void <clinit>()> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)> via: $r8 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r6, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)> via: $r10 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)>($r9, r7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.nio.HeapByteBuffer: byte get()> via: $b0 = virtualinvoke $r3.<java.nio.ByteBuffer: byte get()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.nio.Buffer: boolean hasRemaining()> via: $z0 = virtualinvoke $r3.<java.nio.ByteBuffer: boolean hasRemaining()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)> via: $r3 = virtualinvoke r2.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>(r0)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.util.BitSet: boolean get(int)> via: $z1 = virtualinvoke r5.<java.util.BitSet: boolean get(int)>($i11)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%")
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> via: virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: void <clinit>()> via: $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i3, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Object: void <clinit>()> via: $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i3, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: void <clinit>()> via: $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Object: void <clinit>()> via: $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: void <clinit>()> via: $c7 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i14, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Object: void <clinit>()> via: $c7 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i14, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: void <clinit>()> via: $c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Object: void <clinit>()> via: $c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: char forDigit(int,int)> via: $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i3, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: char toUpperCase(char)> via: $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: char forDigit(int,int)> via: $c7 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i14, 16)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> calls: <java.lang.Character: char toUpperCase(char)> via: $c8 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c7)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <java.nio.charset.Charset: void <clinit>()> via: $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)> via: $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.lang.String)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset)> calls: <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)> via: $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean)>(r0, $r4, $r2, 1)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[")
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.lang.String: void <init>(char[])> via: specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r8.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r9.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r10.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r11.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r12.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r13.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void <init>(int)> via: specialinvoke $r14.<java.util.BitSet: void <init>(int)>(256)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r66.<java.util.BitSet: void set(int)>(i0)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r65.<java.util.BitSet: void set(int)>(i1)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r64.<java.util.BitSet: void set(int)>(i2)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r15.<java.util.BitSet: void set(int)>(95)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r16.<java.util.BitSet: void set(int)>(45)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r17.<java.util.BitSet: void set(int)>(46)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r18.<java.util.BitSet: void set(int)>(42)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r20.<java.util.BitSet: void or(java.util.BitSet)>($r19)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r21.<java.util.BitSet: void set(int)>(33)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r22.<java.util.BitSet: void set(int)>(126)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r23.<java.util.BitSet: void set(int)>(39)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r24.<java.util.BitSet: void set(int)>(40)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r25.<java.util.BitSet: void set(int)>(41)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r26.<java.util.BitSet: void set(int)>(44)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r27.<java.util.BitSet: void set(int)>(59)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r28.<java.util.BitSet: void set(int)>(58)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r29.<java.util.BitSet: void set(int)>(36)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r30.<java.util.BitSet: void set(int)>(38)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r31.<java.util.BitSet: void set(int)>(43)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r32.<java.util.BitSet: void set(int)>(61)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r34.<java.util.BitSet: void or(java.util.BitSet)>($r33)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r36.<java.util.BitSet: void or(java.util.BitSet)>($r35)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r38.<java.util.BitSet: void or(java.util.BitSet)>($r37)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r39.<java.util.BitSet: void set(int)>(47)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r40.<java.util.BitSet: void set(int)>(59)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r41.<java.util.BitSet: void set(int)>(58)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r42.<java.util.BitSet: void set(int)>(64)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r43.<java.util.BitSet: void set(int)>(38)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r44.<java.util.BitSet: void set(int)>(61)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r45.<java.util.BitSet: void set(int)>(43)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r46.<java.util.BitSet: void set(int)>(36)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r47.<java.util.BitSet: void set(int)>(44)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r48.<java.util.BitSet: void set(int)>(59)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r49.<java.util.BitSet: void set(int)>(47)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r50.<java.util.BitSet: void set(int)>(63)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r51.<java.util.BitSet: void set(int)>(58)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r52.<java.util.BitSet: void set(int)>(64)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r53.<java.util.BitSet: void set(int)>(38)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r54.<java.util.BitSet: void set(int)>(61)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r55.<java.util.BitSet: void set(int)>(43)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r56.<java.util.BitSet: void set(int)>(36)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r57.<java.util.BitSet: void set(int)>(44)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r58.<java.util.BitSet: void set(int)>(91)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void set(int)> via: virtualinvoke $r59.<java.util.BitSet: void set(int)>(93)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r61.<java.util.BitSet: void or(java.util.BitSet)>($r60)
<org.apache.http.client.utils.URLEncodedUtils: void <clinit>()> calls: <java.util.BitSet: void or(java.util.BitSet)> via: virtualinvoke $r63.<java.util.BitSet: void or(java.util.BitSet)>($r62)
Now we build call graphs for class: org.apache.http.util.VersionInfo
<org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Package identifier")
<org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Package identifier")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Package identifier")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.String: java.lang.String replace(char,char)> via: $r5 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version.properties")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties: void load(java.io.InputStream)> via: virtualinvoke $r11.<java.util.Properties: void load(java.io.InputStream)>($r10)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties: void <init>()> via: specialinvoke $r11.<java.util.Properties: void <init>()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> via: $r14 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: java.lang.ClassLoader getContextClassLoader()> via: $r14 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.InnocuousThread: java.lang.ClassLoader getContextClassLoader()> via: $r14 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread: void <clinit>()> via: $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: r16 = staticinvoke <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)>(r0, r15, r3)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Package identifier")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> via: r16 = staticinvoke <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)>(r0, r15, r3)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Package identifier")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.String: int length()> via: $i2 = virtualinvoke r5.<java.lang.String: int length()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("${pom.version}")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.String: int length()> via: $i1 = virtualinvoke $r9.<java.lang.String: int length()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("${mvn.timestamp}")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.lang.String: int length()> via: $i0 = virtualinvoke $r11.<java.lang.String: int length()>()
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.util.Hashtable: java.lang.Object get(java.lang.Object)> via: $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("info.timestamp")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.util.Hashtable: java.lang.Object get(java.lang.Object)> via: $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("info.release")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <java.util.Hashtable: java.lang.Object get(java.lang.Object)> via: $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("info.module")
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> via: specialinvoke $r3.<org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r5, r6, r7, r12)
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Package identifier")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>(r0, $r2)
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.Class: java.lang.ClassLoader getClassLoader()> via: $r2 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Java 1.5 minimum; Java/")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <org.apache.http.util.VersionInfo: java.lang.String getRelease()> via: $r14 = virtualinvoke $r3.<org.apache.http.util.VersionInfo: java.lang.String getRelease()>()
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.System: void <clinit>()> via: $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version")
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> via: $r3 = staticinvoke <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>(r0, $r2)
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version")
Now we build call graphs for class: org.joda.time.tz.ZoneInfoCompiler
<org.joda.time.tz.ZoneInfoCompiler: boolean verbose()> calls: <java.lang.Boolean: boolean booleanValue()> via: $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean verbose()> calls: <java.lang.ThreadLocal: java.lang.Object get()> via: $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.io.File: void <init>(java.lang.String)> via: specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.io.File: void <init>(java.lang.String)> via: specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r15)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.io.File: void <init>(java.io.File,java.lang.String)> via: specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>(r19, $r4)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.io.File: void <init>(java.lang.String)> via: specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r5)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.ThreadLocal: void set(java.lang.Object)> via: virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> via: virtualinvoke $r3.<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>(r20, r21)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: specialinvoke $r3.<org.joda.time.tz.ZoneInfoCompiler: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Boolean: void <clinit>()> via: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4)
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void printUsage()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void printUsage()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void printUsage()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void printUsage()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void printUsage()>()
<org.joda.time.tz.ZoneInfoCompiler: void main(java.lang.String[])> calls: <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> via: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4)
<org.joda.time.tz.ZoneInfoCompiler: void printUsage()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Usage: java org.joda.time.tz.ZoneInfoCompiler <options> <source files>")
<org.joda.time.tz.ZoneInfoCompiler: void printUsage()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("where possible options include:")
<org.joda.time.tz.ZoneInfoCompiler: void printUsage()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("  -src <directory>    Specify where to read source files")
<org.joda.time.tz.ZoneInfoCompiler: void printUsage()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("  -dst <directory>    Specify where to write generated files")
<org.joda.time.tz.ZoneInfoCompiler: void printUsage()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("  -verbose            Output verbosely (default false)")
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear getStartOfYear()> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: specialinvoke $r2.<org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)>($r2)
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> calls: <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)> via: $r3 = staticinvoke <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)>($r2)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: short shortValue()> via: $s3 = virtualinvoke $r13.<java.lang.Short: short shortValue()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: short shortValue()> via: $s4 = virtualinvoke $r18.<java.lang.Short: short shortValue()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r24 = virtualinvoke $r23.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$Entry: java.lang.Object getValue()> via: $r22 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$Entry: java.lang.Object getKey()> via: $r21 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r16 = virtualinvoke $r15.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$Entry: java.lang.Object getValue()> via: $r14 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$Entry: java.lang.Object getKey()> via: $r11 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.io.DataOutputStream: void writeShort(int)> via: virtualinvoke r5.<java.io.DataOutputStream: void writeShort(int)>($i9)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.io.DataOutputStream: void writeShort(int)> via: virtualinvoke r5.<java.io.DataOutputStream: void writeShort(int)>($i8)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.io.DataOutputStream: void writeShort(int)> via: virtualinvoke r5.<java.io.DataOutputStream: void writeShort(int)>($i2)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.io.DataOutputStream: void writeUTF(java.lang.String)> via: virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r31)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.io.DataOutputStream: void writeShort(int)> via: virtualinvoke r5.<java.io.DataOutputStream: void writeShort(int)>($i1)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$EntryIterator: java.util.Map$Entry next()> via: $r20 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$PrivateEntryIterator: boolean hasNext()> via: $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$EntrySet: java.util.Iterator iterator()> via: $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$EntryIterator: java.util.Map$Entry next()> via: $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$PrivateEntryIterator: boolean hasNext()> via: $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$EntrySet: java.util.Iterator iterator()> via: $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: java.util.Set entrySet()> via: $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: int size()> via: $i2 = interfaceinvoke r1.<java.util.Map: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: java.util.Set entrySet()> via: $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: int size()> via: $i0 = interfaceinvoke r1.<java.util.Map: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: java.lang.Object get(java.lang.Object)> via: $r17 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: java.lang.Object get(java.lang.Object)> via: $r12 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r33)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: boolean containsKey(java.lang.Object)> via: $z4 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>($r24)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r27)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: boolean containsKey(java.lang.Object)> via: $z3 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>(r30)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.HashMap: void <init>(int)> via: specialinvoke $r34.<java.util.HashMap: void <init>(int)>($i0)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$ValueIterator: java.lang.Object next()> via: $r19 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$PrivateEntryIterator: boolean hasNext()> via: $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap$Values: java.util.Iterator iterator()> via: $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: java.util.Collection values()> via: $r6 = virtualinvoke $r35.<java.util.TreeMap: java.util.Collection values()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: int size()> via: $i1 = virtualinvoke $r35.<java.util.TreeMap: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: virtualinvoke $r35.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r24)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: virtualinvoke $r35.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r30)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.util.TreeMap: void <init>()> via: specialinvoke $r35.<java.util.TreeMap: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.InternalError: void <init>(java.lang.String)> via: specialinvoke $r36.<java.lang.InternalError: void <init>(java.lang.String)>("Too many time zone ids")
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.InternalError: void <init>(java.lang.String)> via: specialinvoke $r37.<java.lang.InternalError: void <init>(java.lang.String)>("Too many time zone ids")
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: void <clinit>()> via: $r27 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Object: void <clinit>()> via: $r27 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: void <clinit>()> via: $r25 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Object: void <clinit>()> via: $r25 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: java.lang.Short valueOf(short)> via: $r27 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> calls: <java.lang.Short: java.lang.Short valueOf(short)> via: $r25 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(s7)
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.Integer: void <clinit>()> via: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0)
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z4 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("only")
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z3 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("max")
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z2 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("maximum")
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("min")
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("minimum")
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.String: java.lang.String toLowerCase()> via: $r0 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.Object: void <clinit>()> via: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0)
<org.joda.time.tz.ZoneInfoCompiler: int parseYear(java.lang.String,int)> calls: <java.lang.Integer: int parseInt(java.lang.String)> via: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0)
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <org.joda.time.field.UnsupportedDateTimeField: int get(long)> via: $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,java.lang.String,java.util.Locale)> via: $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long set(long,java.lang.String,java.util.Locale)>(0L, r2, $r3)
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField monthOfYear()> via: $r1 = virtualinvoke $r0.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField monthOfYear()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseMonth(java.lang.String)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <org.joda.time.field.UnsupportedDateTimeField: int get(long)> via: $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,java.lang.String,java.util.Locale)> via: $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long set(long,java.lang.String,java.util.Locale)>(0L, r2, $r3)
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField dayOfWeek()> via: $r1 = virtualinvoke $r0.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField dayOfWeek()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseDayOfWeek(java.lang.String)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: java.lang.String parseOptional(java.lang.String)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-")
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <java.lang.String: boolean startsWith(java.lang.String)> via: $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("-")
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.base.BaseDateTime: long getMillis()> via: $l2 = virtualinvoke $r5.<org.joda.time.MutableDateTime: long getMillis()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)> via: specialinvoke $r5.<org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)>(0L, $r2)
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> via: specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3)
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)> via: $i0 = virtualinvoke $r0.<org.joda.time.format.DateTimeFormatter: int parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)>($r5, r3, b4)
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()> via: $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()>()
<org.joda.time.tz.ZoneInfoCompiler: int parseTime(java.lang.String)> calls: <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()> via: $r2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: org.joda.time.Chronology getLenientISOChronology()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z2 = virtualinvoke r53.<java.lang.String: boolean equals(java.lang.Object)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.String: int length()> via: $i14 = virtualinvoke $r28.<java.lang.String: int length()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long previousTransition(long)> via: $l5 = virtualinvoke r1.<org.joda.time.DateTimeZone: long previousTransition(long)>(l17)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)> via: $r28 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: $i13 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: long nextTransition(long)> via: $l2 = virtualinvoke r1.<org.joda.time.DateTimeZone: long nextTransition(long)>(l15)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: java.lang.String getNameKey(long)> via: r53 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: int getOffset(long)> via: i16 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: long previousTransition(long)> via: $l5 = virtualinvoke r1.<org.joda.time.DateTimeZone: long previousTransition(long)>(l17)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: java.lang.String getNameKey(long)> via: $r28 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: $i13 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: long nextTransition(long)> via: $l2 = virtualinvoke r1.<org.joda.time.DateTimeZone: long nextTransition(long)>(l15)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: java.lang.String getNameKey(long)> via: r53 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.FixedDateTimeZone: int getOffset(long)> via: i16 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: long previousTransition(long)> via: $l5 = virtualinvoke r1.<org.joda.time.DateTimeZone: long previousTransition(long)>(l17)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: java.lang.String getNameKey(long)> via: $r28 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: $i13 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: long nextTransition(long)> via: $l2 = virtualinvoke r1.<org.joda.time.DateTimeZone: long nextTransition(long)>(l15)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: java.lang.String getNameKey(long)> via: r53 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.CachedDateTimeZone: int getOffset(long)> via: i16 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r17 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long previousTransition(long)> via: $l5 = virtualinvoke r1.<org.joda.time.DateTimeZone: long previousTransition(long)>(l17)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r32 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r46 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String getNameKey(long)> via: $r28 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: $i13 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: long nextTransition(long)> via: $l2 = virtualinvoke r1.<org.joda.time.DateTimeZone: long nextTransition(long)>(l15)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: java.lang.String getNameKey(long)> via: r53 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getNameKey(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: int getOffset(long)> via: i16 = virtualinvoke r1.<org.joda.time.DateTimeZone: int getOffset(long)>($l0)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r2 = virtualinvoke r1.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Long: long longValue()> via: $l8 = virtualinvoke $r13.<java.lang.Long: long longValue()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.util.ArrayList: java.lang.Object get(int)> via: $r12 = interfaceinvoke $r54.<java.util.List: java.lang.Object get(int)>(i18)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.util.ArrayList: int size()> via: i18 = interfaceinvoke $r54.<java.util.List: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r54.<java.util.List: boolean add(java.lang.Object)>($r41)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.util.ArrayList: void <init>()> via: specialinvoke $r54.<java.util.ArrayList: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r52)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r45 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*d* Error in ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)> via: specialinvoke $r56.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l2, $r50)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z1 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r40)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nameKey=")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r31 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*s* Error in ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)> via: specialinvoke $r58.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l2, $r36)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r27)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r16 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*r* Error in ")
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r59.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)> via: specialinvoke $r60.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l5, $r21)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)> via: specialinvoke $r61.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l11, $r25)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,int)> via: $l4 = virtualinvoke $r11.<org.joda.time.DateTimeField: long set(long,int)>(0L, 1850)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField year()> via: $r11 = virtualinvoke $r10.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField year()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,int)> via: l17 = virtualinvoke $r9.<org.joda.time.DateTimeField: long set(long,int)>(0L, 2050)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField year()> via: $r9 = virtualinvoke $r8.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField year()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,int)> via: $l1 = virtualinvoke $r6.<org.joda.time.DateTimeField: long set(long,int)>(0L, 2050)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField year()> via: $r6 = virtualinvoke $r5.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField year()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.field.UnsupportedDateTimeField: long set(long,int)> via: $l0 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,int)>(0L, 1850)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.AssembledChronology: org.joda.time.DateTimeField year()> via: $r4 = virtualinvoke $r3.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeField year()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r5 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r50 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r50 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r36 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r36 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Long: void <clinit>()> via: $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r8 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r8 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r10 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r10 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r21 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r21 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: void <clinit>()> via: $r25 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Object: void <clinit>()> via: $r25 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r5 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r50 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r36 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <java.lang.Long: java.lang.Long valueOf(long)> via: $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r8 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r10 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r21 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> calls: <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()> via: $r25 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>()
<org.joda.time.tz.ZoneInfoCompiler: void <init>()> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void <init>()> calls: <java.util.HashMap: void <init>()> via: specialinvoke $r1.<java.util.HashMap: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void <init>()> calls: <java.util.ArrayList: void <init>()> via: specialinvoke $r2.<java.util.ArrayList: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void <init>()> calls: <java.util.ArrayList: void <init>()> via: specialinvoke $r3.<java.util.ArrayList: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)> via: virtualinvoke r73.<org.joda.time.tz.ZoneInfoCompiler$Zone: void addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)>($r29, $r30)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.ArrayList: int size()> via: $i5 = interfaceinvoke $r72.<java.util.List: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.ArrayList: java.lang.Object get(int)> via: $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i4)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.ArrayList: int size()> via: $i0 = interfaceinvoke $r13.<java.util.List: int size()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.ArrayList: java.lang.Object get(int)> via: $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i7)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.ArrayList: java.lang.Object get(int)> via: $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i1)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean isDirectory()> via: $z6 = virtualinvoke r1.<java.io.File: boolean isDirectory()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean mkdirs()> via: $z7 = virtualinvoke r1.<java.io.File: boolean mkdirs()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean exists()> via: $z5 = virtualinvoke r1.<java.io.File: boolean exists()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> via: virtualinvoke r4.<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)>($r67)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.BufferedReader: void close()> via: virtualinvoke $r67.<java.io.BufferedReader: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.BufferedReader: void <init>(java.io.Reader)> via: specialinvoke $r67.<java.io.BufferedReader: void <init>(java.io.Reader)>($r68)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileReader: void <init>(java.io.File)> via: specialinvoke $r68.<java.io.FileReader: void <init>(java.io.File)>($r69)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.IOException: void <init>(java.lang.String)> via: specialinvoke $r62.<java.io.IOException: void <init>(java.lang.String)>($r66)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destination directory doesn\'t exist and cannot be created: ")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r63.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.IOException: void <init>(java.lang.String)> via: specialinvoke $r57.<java.io.IOException: void <init>(java.lang.String)>($r61)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> via: $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Destination is not a directory: ")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r75, r76)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: java.lang.Object get(java.lang.Object)> via: $r18 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r74)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r32)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: void <init>()> via: specialinvoke $r2.<java.util.TreeMap: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Writing zoneinfo files")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder$DSTZone: boolean equals(java.lang.Object)> via: $z4 = virtualinvoke $r32.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r42)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)> via: $z4 = virtualinvoke $r32.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r42)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)> via: $z4 = virtualinvoke $r32.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r42)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r46 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)> via: $z4 = virtualinvoke $r32.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r42)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r41 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r36 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r54 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r34 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.DateTimeZone: java.lang.String getID()> via: $r33 = virtualinvoke $r32.<org.joda.time.DateTimeZone: java.lang.String getID()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)> via: virtualinvoke $r29.<org.joda.time.tz.DateTimeZoneBuilder: void writeTo(java.lang.String,java.io.OutputStream)>($r39, $r38)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)> via: $r32 = virtualinvoke $r29.<org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone toDateTimeZone(java.lang.String,boolean)>($r31, 1)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: specialinvoke $r29.<org.joda.time.tz.DateTimeZoneBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r56)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing ")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r51.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean exists()> via: $z3 = virtualinvoke $r37.<java.io.File: boolean exists()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean mkdirs()> via: virtualinvoke $r50.<java.io.File: boolean mkdirs()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: java.io.File getParentFile()> via: $r50 = virtualinvoke $r35.<java.io.File: java.io.File getParentFile()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: java.io.File getParentFile()> via: $r37 = virtualinvoke $r35.<java.io.File: java.io.File getParentFile()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: void <init>(java.io.File,java.lang.String)> via: specialinvoke $r35.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r36)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileOutputStream: void close()> via: virtualinvoke $r38.<java.io.OutputStream: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileOutputStream: void close()> via: virtualinvoke $r38.<java.io.OutputStream: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileOutputStream: void <init>(java.io.File)> via: specialinvoke $r38.<java.io.FileOutputStream: void <init>(java.io.File)>($r35)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileInputStream: void close()> via: virtualinvoke $r40.<java.io.InputStream: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileInputStream: void <init>(java.io.File)> via: specialinvoke $r40.<java.io.FileInputStream: void <init>(java.io.File)>($r35)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r49)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Didn\'t read properly from file")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*e* Error in ")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r26)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to link alias \'")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find time zone \'")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Writing ZoneInfoMap")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean exists()> via: $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: boolean mkdirs()> via: virtualinvoke $r12.<java.io.File: boolean mkdirs()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: java.io.File getParentFile()> via: $r12 = virtualinvoke $r6.<java.io.File: java.io.File getParentFile()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: java.io.File getParentFile()> via: $r7 = virtualinvoke $r6.<java.io.File: java.io.File getParentFile()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.File: void <init>(java.io.File,java.lang.String)> via: specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "ZoneInfoMap")
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FileOutputStream: void <init>(java.io.File)> via: specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r6)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FilterOutputStream: void close()> via: virtualinvoke $r9.<java.io.DataOutputStream: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.FilterOutputStream: void close()> via: virtualinvoke $r9.<java.io.DataOutputStream: void close()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.io.DataOutputStream: void <init>(java.io.OutputStream)> via: specialinvoke $r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r8)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: void putAll(java.util.Map)> via: interfaceinvoke $r10.<java.util.Map: void putAll(java.util.Map)>($r2)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.util.TreeMap: void <init>(java.util.Comparator)> via: specialinvoke $r10.<java.util.TreeMap: void <init>(java.util.Comparator)>($r11)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: $z1 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r33, $r32)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r33, $r32)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: $z2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean verbose()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.Object: void <clinit>()> via: $z2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean verbose()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.Object: void <clinit>()> via: $r42 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>($r40, $r41)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>($r9, $r10)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>($r9, $r10)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)> via: $z1 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean test(java.lang.String,org.joda.time.DateTimeZone)>($r33, $r32)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: boolean verbose()> via: $z2 = staticinvoke <org.joda.time.tz.ZoneInfoCompiler: boolean verbose()>()
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)> via: $r42 = staticinvoke <org.joda.time.tz.DateTimeZoneBuilder: org.joda.time.DateTimeZone readFrom(java.io.InputStream,java.lang.String)>($r40, $r41)
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])> calls: <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)> via: staticinvoke <org.joda.time.tz.ZoneInfoCompiler: void writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)>($r9, $r10)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <org.joda.time.tz.ZoneInfoCompiler$RuleSet: void addRule(org.joda.time.tz.ZoneInfoCompiler$Rule)> via: virtualinvoke r27.<org.joda.time.tz.ZoneInfoCompiler$RuleSet: void addRule(org.joda.time.tz.ZoneInfoCompiler$Rule)>($r29)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r24)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.HashMap: java.lang.Object get(java.lang.Object)> via: $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> via: interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r30)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.ArrayList: boolean add(java.lang.Object)> via: interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r24)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: char charAt(int)> via: $c3 = virtualinvoke r26.<java.lang.String: char charAt(int)>(0)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: char charAt(int)> via: $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: int length()> via: $i0 = virtualinvoke $r3.<java.lang.String: int length()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: java.lang.String substring(int,int)> via: r26 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i2)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: int indexOf(int)> via: $i2 = virtualinvoke $r25.<java.lang.String: int indexOf(int)>(35)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: java.lang.String trim()> via: $r3 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.io.BufferedReader: java.lang.String readLine()> via: $r25 = virtualinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <org.joda.time.tz.ZoneInfoCompiler$Zone: void chain(java.util.StringTokenizer)> via: virtualinvoke r24.<org.joda.time.tz.ZoneInfoCompiler$Zone: void chain(java.util.StringTokenizer)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z4 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Link")
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Zone")
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> via: $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Rule")
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: java.lang.String nextToken()> via: $r14 = virtualinvoke $r28.<java.util.StringTokenizer: java.lang.String nextToken()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: java.lang.String nextToken()> via: $r12 = virtualinvoke $r28.<java.util.StringTokenizer: java.lang.String nextToken()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: java.lang.String nextToken()> via: $r5 = virtualinvoke $r28.<java.util.StringTokenizer: java.lang.String nextToken()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: boolean hasMoreTokens()> via: $z1 = virtualinvoke $r28.<java.util.StringTokenizer: boolean hasMoreTokens()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: boolean hasMoreTokens()> via: $z5 = virtualinvoke $r28.<java.util.StringTokenizer: boolean hasMoreTokens()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)> via: specialinvoke $r28.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r26, " \t")
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <org.joda.time.tz.ZoneInfoCompiler$Rule: void <init>(java.util.StringTokenizer)> via: specialinvoke $r29.<org.joda.time.tz.ZoneInfoCompiler$Rule: void <init>(java.util.StringTokenizer)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <org.joda.time.tz.ZoneInfoCompiler$RuleSet: void <init>(org.joda.time.tz.ZoneInfoCompiler$Rule)> via: specialinvoke $r30.<org.joda.time.tz.ZoneInfoCompiler$RuleSet: void <init>(org.joda.time.tz.ZoneInfoCompiler$Rule)>($r29)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <org.joda.time.tz.ZoneInfoCompiler$Zone: void <init>(java.util.StringTokenizer)> via: specialinvoke $r31.<org.joda.time.tz.ZoneInfoCompiler$Zone: void <init>(java.util.StringTokenizer)>($r28)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.StringBuilder: java.lang.String toString()> via: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> via: $r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown line: ")
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.StringBuilder: void <init>()> via: specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.Character: void <clinit>()> via: $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3)
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)> calls: <java.lang.Character: boolean isWhitespace(char)> via: $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3)
<org.joda.time.tz.ZoneInfoCompiler: void <clinit>()> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: specialinvoke $r0.<org.joda.time.tz.ZoneInfoCompiler$1: void <init>()>()
Found source being called: <org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
Found source being called: <org.joda.time.chrono.LenientChronology: org.joda.time.chrono.LenientChronology getInstance(org.joda.time.Chronology)>
Now we build call graphs for class: org.apache.commons.logging.impl.LogFactoryImpl$2
Now we build call graphs for class: org.apache.http.impl.client.SystemDefaultHttpClient
Now we build call graphs for class: org.apache.http.util.EntityUtils
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Entity")
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()> via: $r3 = virtualinvoke $r6.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>()
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)> via: virtualinvoke $r6.<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>($r4, 0, $i5)
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <org.apache.http.util.ByteArrayBuffer: void <init>(int)> via: specialinvoke $r6.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>(i4)
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: void check(boolean,java.lang.String)>($z0, "HTTP entity too large to be buffered in memory")
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r0, "Entity")
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> calls: <org.apache.http.util.Args: void check(boolean,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: void check(boolean,java.lang.String)>($z0, "HTTP entity too large to be buffered in memory")
Found source being called: <org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>
Now we build call graphs for class: org.apache.http.conn.EofSensorInputStream
<org.apache.http.conn.EofSensorInputStream: void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Wrapped stream")
<org.apache.http.conn.EofSensorInputStream: void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Wrapped stream")
Now we build call graphs for class: org.apache.commons.logging.LogFactory
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory.HashtableImpl", null)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("[ERROR] LogFactory: Load of custom hashtable failed")
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r8)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Hashtable: void <init>()> via: specialinvoke $r2.<java.util.Hashtable: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <clinit>()> via: r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory.HashtableImpl", null)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Class: void <clinit>()> via: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r8)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r8)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Throwable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.IOException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassNotFoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.String: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Throwable$PrintStreamOrWriter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectOutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalStateException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.System: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.AssertionError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NullPointerException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArrayList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Thread: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.IdentityHashMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Throwable$SentinelHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalArgumentException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Objects: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StringBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CloneNotSupportedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.InterruptedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.RuntimeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.InputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.SecurityManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Console: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Properties: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.System$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ThreadGroup: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.Reflection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Terminator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.SelectorProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.SharedSecrets: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessEnvironment: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Runtime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Exception: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.VM: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Version: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassLoader: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.AccessController: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.UnsupportedEncodingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.OutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.FileDescriptor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.SecurityException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.NotActiveException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.StreamCorruptedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.HashMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$ValidationList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$GetField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IndexOutOfBoundsException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ObjectInputFilter$Config: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.InternalError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Void: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.misc.ReflectUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ThreadDeath: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Proxy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassCastException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.ReferenceQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$Logging: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NegativeArraySizeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Array: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalAccessError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$Caches: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Error: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Arrays: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Math: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.BitSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ConcurrentModificationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.OutOfMemoryError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.SecurityConstants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Thread$Caches: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ThreadLocal: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalThreadStateException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.UnsupportedOperationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NoSuchMethodError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectOutputStream$DebugTraceInfoStack: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectOutputStream$PutField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectOutputStream$Caches: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.NotSerializableException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StringBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.AbstractStringBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Formatter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Matcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StringCoding: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StringIndexOutOfBoundsException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ConditionalSpecialCasing: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.String$CaseInsensitiveComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.FileNotFoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.InterruptedIOException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Writer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.InstantiationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalAccessException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NoSuchFieldException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NoSuchMethodException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ReflectionFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Executable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ConstantPool: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Class$MethodArray: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Class$Atomic: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.TypeAnnotationParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.InvocationTargetException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Unsafe: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.LinkedHashMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.AnnotationSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Class$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Modifier: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.AnnotationParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.AllPermission: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.HashSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Permissions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.PermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ReflectiveOperationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Random: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptyMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$ReverseComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptyListIterator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptyIterator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptySet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptyEnumeration: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$EmptyList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Number: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NumberFormatException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Integer$IntegerCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Shutdown: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.PropertyPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Terminator$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.Pipe: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.SelectorProvider$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessEnvironment$NameComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessEnvironment$EntryComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.TreeMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Process: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ApplicationShutdownHooks: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.UnsatisfiedLinkError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.OSEnvironment: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassFormatError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ConcurrentHashMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Vector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Stack: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.AssertionStatusDirectives: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassLoaderHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassLoader$ParallelLoaders: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Launcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NoClassDefFoundError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Hashtable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Resource: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.Debug: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Reader: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Console$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Console$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Date: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Properties$XmlSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.FileChannel: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddress: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.SecurityConstants$AWT: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.FileDescriptor$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.FloatingDecimal: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Security: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterName: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Character$CharacterCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Long$LongCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.VirtualMachineError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandles: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MemberName: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleStatics: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.VerifyAccess: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleNatives$Constants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MemberName$Factory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleNatives: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.EOFException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Proxy$ProxyClassFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.Proxy$KeyFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.ReferenceQueue$Lock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.ReferenceQueue$Null: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.logging.PlatformLogger$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.logging.LoggingSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.Bits: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.AccessibleObject: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ArrayIndexOutOfBoundsException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$HandleTable$HandleList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Short$ShortCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Byte$ByteCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.UTFDataFormatException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IncompatibleClassChangeError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$Caches: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.NoSuchAlgorithmException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ByteArrayOutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$6: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectStreamClass$EntryFuture: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJFloat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJByte: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.CountedCompleter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJShort: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJObject: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJChar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Arrays$NaturalOrder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.DualPivotQuicksort: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Arrays$LegacyMergeSort: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.StreamSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers$FJInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinPool: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Math$RandomNumberGeneratorHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ArithmeticException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StrictMath: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.NoSuchElementException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Policy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.atomic.AtomicInteger: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.Reference$Lock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.Reference$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DecimalFormatSymbols: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Formatter$Conversion: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Formatter$DateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.FormatterClosedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$Node: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.ASCII: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Locale$Cache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.LocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.ParseStatus: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Locale$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.InternalLocaleBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.LanguageTag: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Locale$LocaleNameGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.LocaleUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.IllformedLocaleException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.LocaleMatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.CharacterCodingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.MessageUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$BitClass: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$BmpCharProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$Caret: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$VertWS: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$BranchConn: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$All: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$UnixCaret: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$TreeInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$End: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$Dot: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$Begin: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$UnixDot: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.Normalizer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$LastNode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$HorizWS: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$LastMatch: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$LineEnding: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.Normalizer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.spi.CharsetProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.Charset$ExtendedProviderHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.Charset$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.Charset$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.StandardCharsets: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.ThreadLocalCoders: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.BreakIterator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.MalformedURLException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.FileSystem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.URI: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.File$TempDirectory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.DeleteOnExitHook: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.DefaultFileSystem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystems: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$EmptySpliterator$OfLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$EmptySpliterator$OfInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$EmptySpliterator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$EmptySpliterator$OfRef: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Collectors: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.parser.SignatureParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.AbstractMethodError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.MalformedParametersException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.TypeAnnotation$LocationInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.AnnotatedTypeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.BufferUnderflowException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.ProtectionDomain$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.X509Certificate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.IOUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateEncodingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.URLStreamHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.Proxy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketAddress: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.ExceptionProxy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ConstructorAccessorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.MethodAccessorGenerator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.UnsafeFieldAccessorFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.MethodAccessorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.SerializationConstructorAccessorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ReflectionFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.scope.DummyScope: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.ReflectAccess: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.WeakHashMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassValue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassValue$Identity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.AllPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.LinkedHashSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.PermissionsHash: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.UnresolvedPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.jar.Manifest: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.jar.Attributes: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.atomic.AtomicLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ArrayStoreException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Shutdown$Lock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DatagramSocket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.Selector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.SelectionKey: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.AbstractSelectionKey: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.SelectableChannel: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.Socket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.DefaultSelectorProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ServerSocket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.BadPaddingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.IllegalBlockSizeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ApplicationShutdownHooks$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessBuilder$Redirect: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessBuilder$NullOutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessBuilder$NullInputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.LinkageError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Launcher$ExtClassLoader$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Paths: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.io.Win32ErrorMode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.BufferOverflowException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.Bits: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.ReadOnlyBufferException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Perf: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Perf$GetPerfAction: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.PerfCounter$CoreCounters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.PerfCounter$WindowsClientCounters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ThreadLocalRandom: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ConcurrentHashMap$ReservationNode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.atomic.AtomicReference: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.InvalidKeyException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.NoSuchProviderException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SignatureException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.X509CertImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.Subject: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.util.URLUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.LinkedList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.ParseUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Launcher$Factory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Launcher$BootClassPathHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.EmptyStackException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Dictionary: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.BaseCalendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.BaseCalendar$Date: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.CalendarDate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.CalendarSystem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DateFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.GregorianCalendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.TimeZone: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.CalendarUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.Gregorian: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.ZoneInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.spi.XmlPropertiesProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Properties$XmlSupport$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileDispatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileLockTable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.FileLockInterruptionException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileChannelImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.NonWritableChannelException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.NonReadableChannelException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ClosedByInterruptException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.IOStatus: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.NativeDispatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ClosedChannelException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileDispatcherImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.IOUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.spi.FileSystemProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.UnknownHostException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddress$InetAddressHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.NetworkInterface: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddress$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddress$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddressImplFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.Inet4Address: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.Inet6Address: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.util.IPAddressUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.FilePermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.RegisteredDomain: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketPermission$EphemeralRange: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.FloatingDecimal$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.FloatingDecimal$HexFloatPattern: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.InvalidAlgorithmParameterException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Security$ProviderProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.Providers: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.GetInstance: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.PropertyExpander: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.InvalidParameterException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.ProviderList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Security$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Optional: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterName$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterData00: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterDataLatin1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterData0E: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterDataPrivateUse: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterData01: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterData02: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.CharacterDataUndefined: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BitSieve: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.MutableBigInteger: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BigInteger$UnsafeHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.ValueConversions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.WrongMethodTypeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.empty.Empty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.VerifyType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$Lazy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.BoundMethodHandle$Factory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.NoSuchFieldError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.BytecodeDescriptor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.DirectMethodHandle$EnsureInitialized: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.DirectMethodHandle$Lazy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodType$ConcurrentWeakInternSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.logging.LoggingSupport$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.logging.LoggingSupport$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.StringWriter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.GeneralSecurityException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.MessageDigestSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.DigestException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinTask: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArraysParallelSortHelpers: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Tripwire: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArrayPrefixHelpers: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.OptionalDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.DoubleSummaryStatistics: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams$DoubleStreamBuilderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams$StreamBuilderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.OptionalInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.IntSummaryStatistics: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams$IntStreamBuilderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.OptionalLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.LongSummaryStatistics: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams$LongStreamBuilderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.AbstractExecutorService: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinPool$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.RejectedExecutionException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StrictMath$RandomNumberGeneratorHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.InvalidMarkException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Comparators: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Policy$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.Policy$UnsupportedEmptyCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.PolicyFile: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.PolicySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.DecimalFormatSymbolsProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.IllegalFormatException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Calendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.temporal.TemporalQueries: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.ZoneId: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.NumberFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DecimalFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DateFormatSymbols: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.LocaleServiceProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.BreakIteratorProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.CollatorProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.DateFormatProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.DateFormatSymbolsProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.spi.NumberFormatProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.CurrencyNameProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.LocaleNameProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.TimeZoneNameProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.CalendarDataProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.spi.CalendarNameProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.spi.CalendarProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle$Control: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.JRELocaleConstants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.TreeSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.LocaleObjectCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.Format: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.SimpleDateFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.resources.ParallelListResourceBundle: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.CalendarDataUtility: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.resources.OpenListResourceBundle: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.resources.TimeZoneNamesBundle: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.BaseLocale$Cache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.LocaleEquivalentMaps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.CoderResult$Cache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.CoderResult$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.CoderResult$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$8: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$9: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$6: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$7: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$20: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$21: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$22: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$23: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$17: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$18: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$19: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$13: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$14: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$15: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$16: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$10: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$11: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.regex.Pattern$CharPropertyNames$12: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.Charset$ExtendedProviderHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ASCIICaseInsensitiveComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.StandardCharsets$Cache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.StandardCharsets$Classes: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.StandardCharsets$Aliases: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SecureRandom: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.attribute.UserPrincipalLookupService: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.DeleteOnExitHook$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.WinNTFileSystem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.ProviderNotFoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.BooleanSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.GenericSignatureFormatError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.IntSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.BottomSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.LongSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.VoidDescriptor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.CharSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.DoubleSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.ByteSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.ShortSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.generics.tree.FloatSignature: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateExpiredException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateNotYetValidException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateParsingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CRLException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertificateFactorySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.UnknownServiceException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.MessageHeader: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ContentHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.UnknownContentHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.MimeTable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.URLConnection$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.MagicAccessorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.AccessorGenerator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ClassFileAssembler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.Label: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ByteVectorFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.reflect.MalformedParameterizedTypeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.ZipEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.IllegalBlockingModeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.MembershipKey: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DatagramSocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.MulticastSocket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.AbstractPlainDatagramSocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DefaultDatagramSocketImplFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.AsynchronousCloseException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.PlainSocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocksSocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.WindowsSelectorProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.NoSuchPaddingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.ShortBufferException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.spec.InvalidParameterSpecException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CipherSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.ExemptionMechanismException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.NullCipher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.JceSecurity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.ProviderException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.JceSecurityManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoAllPermission: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SecureClassLoader: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.URLClassLoader$7: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.jar.JavaUtilJarAccessImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.jar.JarException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$9: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$8: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$7: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$6: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$10: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$11: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpCookie$12: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.ZipException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.Inflater: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.ZipFile$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.charset.StandardCharsets: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ArrayDeque: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessBuilder$Redirect$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessBuilder$Redirect$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ProcessImpl$LazyPattern: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystemNotFoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.Bits$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantLock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.LockSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.X509CertInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.AlgorithmId: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.IssuerAlternativeNameExtension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.PolicyMappingsExtension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.SubjectAlternativeNameExtension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.Extension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.GeneralNames: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.X509Factory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.OIDMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.DerOutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.CertificateValidity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.PKIXExtensions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.CertificateExtensions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.HexDumpEncoder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.Pem: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.AttributeNameEnumeration: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.KeyUsageExtension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.Subject$AuthPermissionHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ResourcesMgr: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.JarIndex: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ExtensionDependency: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.InvalidJarIndexException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.AbstractSequentialList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.Launcher$BootClassPathHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.Gregorian$Date: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DontCareFieldPosition: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.JulianCalendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.JulianCalendar$Date: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.TimeZoneNameUtility: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.ZoneInfoFile: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.Clock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.Ser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.AbstractCalendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.AsynchronousFileChannel: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.OverlappingFileLockException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Net: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.NativeThread: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Util$BufferCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileDispatcherImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.IOUtil$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileStore: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.spi.FileSystemProvider$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Files: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.Channels: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.InetAddressCachePolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InterfaceAddress: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.NetworkInterface$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DefaultInterface: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.PortConfig: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.InheritableThreadLocal: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.ProviderList$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.DataFormatException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.SignedMutableBigInteger: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ExceptionInInitializerError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.Wrapper$Format: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.Invokers$Lazy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.invoke.util.ValueConversions$WrapperCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Label: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$T: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.BoundMethodHandle$SpeciesData$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.BoundMethodHandle$Factory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.BootstrapMethodError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ProxyGenerator$ConstantPool: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.JCAUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ExecutionException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.TimeoutException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.CancellationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Streams$AbstractStreamBuilderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SpinedBuffer$OfDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.StreamSpliterators: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SpinedBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SpinedBuffer$OfInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SpinedBuffer$OfLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.PolicyParser$GrantEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.PolicyParser$PermissionEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyStoreException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.PolicyUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.PolicyParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Currency$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Currency$CurrencyNameGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BigDecimal$UnsafeHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BigDecimal$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BigDecimal$StringBuilderHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.math.BigDecimal$LongOverflow: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.DateTimeFormatterBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.zone.ZoneRulesProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Calendar$AvailableCalendarTypes: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.BuddhistCalendar: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Calendar$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Calendar$CalendarAccessControlContext: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.zone.Ser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DigitList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DecimalFormat$FastPathData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.DecimalFormat$DigitArrays: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.CharacterIteratorFieldDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.FormattedFloatingDecimal$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle$Control$CandidateListCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.Collator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.LocaleDataMetaInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.text.CalendarBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle$RBClassLoader: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UnicodeSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.ICUData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UTF16: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UCharacterIterator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UCharacterProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.RangeValueIterator$Element: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.Utility: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.US_ASCII: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SecureRandomSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SecureRandom$StrongPatternHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SecureRandom$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SecureRandom: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ExpiringCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.DefaultFileSystemProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.MimeTable$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.FieldAccessorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ClassDefiner: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.UTF8: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.ByteVectorImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.reflect.'annotation'.AnnotationInvocationHandler$UnsafeAccessor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.CRC32: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.ZipUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.Base64: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.StandardSocketOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.AbstractPlainDatagramSocketImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.ResourceManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DatagramPacket$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.DefaultDatagramSocketImplFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.HttpConnectSocketImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.AbstractPlainSocketImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.PlainSocketImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ProxySelector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SocketTimeoutException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.SelectorProviderImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.ExemptionMechanismSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.NullCipherSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoPermissions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.JceSecurity$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.JceSecurityManager$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoAllPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.AlgorithmParametersSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.ProgressMonitor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ManifestDigester$Entry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantLock$Sync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantLock$FairSync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.Cache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.X509CRLImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.X509CRL: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.pkcs.ParsingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.certpath.X509CertificatePair: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.X500Name$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.DerIndefLenConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.SignatureSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ByteArrayLexOrder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ByteArrayTagOrder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.CertificateVersion: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.GeneralSubtrees: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.CharacterEncoder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ResourcesMgr$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ExtensionInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.JarFilter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ProtocolException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.LocalGregorianCalendar$Date: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.ZoneInfoFile$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.calendar.ZoneInfoFile$Checksum: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.Duration$DurationUnits: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.IsoChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.temporal.IsoFields: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.Parsed: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.PropertiesDefaultHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.FileKey: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Net$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.net.SocketFlow: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.NotYetBoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.AlreadyBoundException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.NotYetConnectedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.UnsupportedAddressTypeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.UnresolvedAddressException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.SocketOptionRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.ExtendedOptionsImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Net$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Net$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.IllegalSelectorException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ClosedSelectorException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.NetHooks: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.SocketDispatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.AlreadyConnectedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ConnectionPendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.NoConnectionPendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.CancelledKeyException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Files$AcceptAllFilter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.spi.FileTypeDetector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.CopyMoveHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Files$FileTypeDetectors: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.TempFileHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.InetAddressCachePolicy$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.InetAddressCachePolicy$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.PortConfig$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.ByteVector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Item: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Frame: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Edge: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jca.JCAUtil$CachedSecureRandomHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SpinedBuffer$OfPrimitive: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Tripwire: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.AbstractSpinedBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.PipelineHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.DistinctOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SortedOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.MatchOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.ReduceOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.ForEachOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.SliceOps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.EnumMap$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.FutureTask$WaitNode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.Executors: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.LinkedBlockingQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.UnrecoverableKeyException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.UnrecoverableEntryException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyStoreSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyStore$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyStore$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.Password: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.StreamTokenizer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.AbstractChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.DateTimeFormatterBuilder$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.DateTimeTextProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.CopyOnWriteArrayList: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.temporal.TemporalAdjusters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.ResourceBundle$RBClassLoader$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.ICUBinary: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UCharacter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SecureRandom$SeederHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SeedGenerator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsFileSystemProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.MimeTable$DefaultInstanceHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.ManifestDigester$Position: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.InetAddressContainer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.ConnectionResetException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.AbstractPlainSocketImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.Authenticator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.WindowsSelectorImpl$FdMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoPolicyParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.JarVerifier$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.DefaultProgressMeteringPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathValidatorException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.KeyUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.pkcs.PKCS7$SecureRandomHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.AlgorithmDecomposer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraint: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.IllegalMonitorStateException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.X509CRLEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.CRLExtensions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.NullCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.AVAComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.DestroyFailedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.X509Key: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.SubjectDomainCombiner$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.Policy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.ChronoLocalDateImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.xml.sax.SAXException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.xml.sax.InputSource: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.SAXParserImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.SAXParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.XMLStreamException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.SocketOptionRegistry$LazyInitialization: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.ExtendedSocketOption: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.net.ExtendedSocketOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.CopyMoveHelper$CopyOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Files$FileTypeDetectors$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.Files$FileTypeDetectors$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.TempFileHelper$PosixPermissions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Handler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.objectweb.asm.Context: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps$FindSink$OfDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps$FindSink: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps$FindSink$OfInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps$FindSink$OfRef: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.FindOps$FindSink$OfLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.ReduceOps$Box: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$EmptyNode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$EmptyNode$OfInt: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$EmptyNode$OfRef: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$SpinedNodeBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.stream.Nodes$EmptyNode$OfLong: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.Executors$DefaultThreadFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.Executors$PrivilegedThreadFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.Ser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.ThaiBuddhistChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.MinguoChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.chrono.JapaneseChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.ZoneName: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.format.DateTimeTextProvider$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.time.zone.TzdbZoneRulesProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.normalizer.UBiDiProps: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.Surrogate$Parser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SunEntries: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractFileSystemProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsSecurity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsUriSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.FileSystemAlreadyExistsException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsSecurityDescriptor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsChannelFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsFileCopy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.ProviderMismatchException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsLinkSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsFileAttributeViews: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.Util: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.MembershipRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.PortUnreachableException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.DatagramDispatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.validator.KeyStores: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.HttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.spec.InvalidKeySpecException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.Policy$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.Policy$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.ParserSAX: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.ExtendedSocketOption$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.DefaultFileTypeDetector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.attribute.PosixFilePermissions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$Transferer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$WaitQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$LifoWaitQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$TransferStack: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$FifoWaitQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.UCompactIntArray: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.IntHashtable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.CollatorUtilities: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.Surrogate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.NativePRNG: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.NativePRNG$Blocking: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.NativePRNG$NonBlocking: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.SunEntries$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.ThreadPool$DefaultThreadPoolHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractAclFileAttributeView: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsUserPrincipals: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.NativeBuffers: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstFile: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$VolumeInformation: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$DiskFreeSpace: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$AclInformation: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$Account: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$CompletionStatus: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$BackupResult: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsNativeDispatcher$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsChannelFactory$Flags: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsChannelFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.Cancellable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractUserDefinedFileAttributeView: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsFileSystem$LookupService: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsPathParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.Globs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractPath: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractBasicFileAttributeView: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.DatagramSocketAdaptor$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.x509.NetscapeCertTypeExtension: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.certpath.UntrustedChecker: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.X509CertSelector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.PKIXCertPathChecker: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CollectionCertStoreParameters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.NetworkClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.PosterOutputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.KeepAliveCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.CacheRequest: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.CookieHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.HeaderParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.spec.ECPoint: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyFactorySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.Parser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.Pair: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.Attrs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.util.xml.impl.Input: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.xml.sax.SAXNotRecognizedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <jdk.internal.org.xml.sax.SAXNotSupportedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.RegistryFileTypeDetector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.text.ComposedCharIter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.cs.Surrogate$Generator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.PendingIoCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.AsynchronousChannelProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Invoker: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractWatchService: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.WindowsFileSystem$LookupService$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.certpath.PKIX: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.AnchorCertificates: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.UntrustedCertificates: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathBuilderException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathBuilderSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathBuilder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathHelperImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathValidatorSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertPathValidator$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertStoreException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.CertStore$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.Handler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ResponseCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.CacheResponse: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.SecureCacheResponse: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.NetProperties: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.EmptyInputStream: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.KeepAliveStreamCleaner: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.KeepAliveStream$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.HttpCapture$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractFileTypeDetector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.RegistryFileTypeDetector$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.ConcurrentLinkedQueue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Invoker$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ShutdownChannelGroupException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.Iocp$CompletionStatus: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.concurrent.LinkedBlockingDeque: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.ClosedWatchServiceException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.fs.AbstractPoller: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.file.StandardWatchEventKinds: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.certpath.PKIX$CertStoreComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.AnchorCertificates$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.UntrustedCertificates$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.certpath.CertPathHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.cert.X509CRLSelector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.DigestAuthentication$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.AuthCacheValue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.NetProperties$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.Negotiator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.KeepAliveStreamCleaner$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.http.KeepAliveStreamCleaner$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.www.protocol.http.AuthCacheImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.DefaultAsynchronousChannelProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.WindowsAsynchronousChannelProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.IllegalChannelGroupException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.AcceptPendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.ReadPendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.WritePendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.nio.channels.InterruptedByTimeoutException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.StackOverflowError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.LambdaMetafactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.invoke.LambdaConversionException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.VerifyError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.UnknownError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ClassCircularityError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.Finalizer$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.ref.Finalizer$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.InstantiationError: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractDateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractInstant: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.DateTimeFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.Chronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTimeField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.Instant: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.MutableDateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.ISODateTimeFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTimeUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.field.FieldUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.LocalDateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.FormatUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.LocalDate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.LocalTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DurationField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.ISODateTimeFormat$Constants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTimeUtils$SystemMillisProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.BaseDateTime: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateMidnight: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.YearMonthDay: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.TimeOfDay: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ConverterManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.chrono.AssembledChronology$Fields: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.chrono.ISOYearOfEraDateTimeField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.chrono.BaseChronology: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.BaseLocal: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.Period: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.MutablePeriod: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.MutableInterval: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.BasePartial: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.field.AbstractReadableInstantFieldProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.DateConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ReadableInstantConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.StringConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ReadablePartialConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ReadablePeriodConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.LongConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ReadableIntervalConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.NullConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.CalendarConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.ReadableDurationConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.field.MillisDurationField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.DateTimeZoneBuilder$RuleSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractPartial: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.ISOPeriodFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractInterval: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.field.AbstractPartialFieldProperty: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.convert.AbstractConverter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractPeriod: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.BasePeriod$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.PeriodFormatterBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.base.AbstractDuration: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.chrono.BasicChronology$HalfdayField: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.DateTimeConstants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.format.PeriodFormat: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.MonthDay: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.Partial: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.joda.time.YearMonth: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.ParseException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.Args: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.TextUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.HttpException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.UnsupportedHttpVersionException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.ProtocolException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.MalformedChunkCodingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.entity.AbstractHttpEntity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.BasicHeaderValueParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.BasicLineFormatter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HTTP: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.LangUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.Consts: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.EntityUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.BasicHeaderValueFormatter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.entity.BasicHttpEntity: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.Asserts: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.SyncBasicHttpParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.BasicHttpParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.AbstractHttpParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.HttpProtocolParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.HttpConnectionParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.params.HttpParamConfig: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.config.ConnectionConfig$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.config.MessageConstraints$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.config.SocketConfig$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.HttpHeaders: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultBHttpServerConnectionFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.ConnSupport: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.DefaultHttpResponseWriterFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.DefaultHttpRequestParserFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.NetUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.BasicLineParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultHttpRequestFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.AbstractHttpMessage: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.message.HeaderGroup: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.SocketHttpServerConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.AbstractHttpServerConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.DefaultHttpRequestWriterFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.io.DefaultHttpResponseParserFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultHttpResponseFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultHttpServerConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultHttpClientConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.SocketHttpClientConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.AbstractHttpClientConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.NoConnectionReuseStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultBHttpClientConnectionFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.pool.BasicConnPool: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.pool.BasicConnFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.SocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.DefaultSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.security.KeyManagementException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLContextSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLServerSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLEngine: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLParameters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.SSLSocket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ServerSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.X509Certificate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.DefaultServerSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.Certificate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.CertificateException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.CertificateExpiredException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.CertificateNotYetValidException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.X509Certificate$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.cert.CertificateEncodingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.config.RegistryBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestExpectContinue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.EncodingUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestContent: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.UriHttpRequestHandlerMapper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.UriPatternMatcher: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.ChainBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.ResponseDate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HttpDateGenerator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.ResponseContent: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HttpRequestExecutor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HttpCoreContext: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.BasicHttpContext: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.SyncBasicHttpContext: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestDate: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestConnControl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.BasicHttpProcessor: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestUserAgent: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.RequestTargetHost: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.ResponseServer: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.ResponseConnControl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.protocol.HttpProcessorBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.ExceptionUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.util.CharsetUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.TypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.Gson: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.JsonElement: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.JsonTreeWriter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.Excluder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.reflect.TypeToken: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.DateTypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TimeTypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.Gson$FutureTypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.Streams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.Primitives: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.JsonNull: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.stream.JsonReader$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.JsonReaderInternalAccess: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.JsonObject: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.JsonArray: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.JsonTreeReader$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.$Gson$Types: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.$Gson$Preconditions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.LinkedTreeMap: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$23: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$24: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$25: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$26: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$20: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$21: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$22: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$12: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$13: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$14: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$15: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$10: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$11: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$16: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$17: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$18: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$19: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$8: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$7: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$9: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$6: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.TypeAdapters$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.LinkedTreeMap$Node: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.LinkedTreeMap$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.UnsafeAllocator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.UUID$Holder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.internal.UnsafeAllocator$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.JsonParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.DefaultDateTypeAdapter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.GsonBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.google.gson.stream.JsonScope: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.AUTH: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.AuthenticationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.MalformedChallengeException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.AuthSchemeRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.AuthState: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.InvalidCredentialsException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.auth.params.AuthParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.CircularRedirectException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.RedirectException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.ClientProtocolException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.config.AuthSchemes: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.config.CookieSpecs: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.config.RequestConfig$Builder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.entity.EntityBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.URLEncodedUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.zip.Deflater: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.InputMismatchException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.scheme.SchemeRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ConnectTimeoutException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.AbstractExecutionAwareRequest: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.CloneUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpDelete: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpRequestBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpGet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpHead: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpPatch: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpPost: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpPut: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.HttpTrace: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.methods.RequestBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.URIBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.util.InetAddressUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.NonRepeatableRequestException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.params.AuthPolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.params.CookiePolicy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.params.HttpClientParamConfig: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.params.HttpClientParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.cookie.CookieSpecRegistry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.cookie.MalformedCookieException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.HttpClientContext: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestAcceptEncoding: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestAddCookies: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestAuthCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestClientConnControl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestExpectContinue: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.ResponseAuthCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.BasicAuthCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.DefaultSchemePortResolver: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.ResponseContentEncoding: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.protocol.ResponseProcessCookies: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.DateUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.HttpClientUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.JdkIdn: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.Punycode: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.Rfc3492Idn: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.client.utils.URIUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.net.ConnectException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.MultihomePlainSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.params.ConnPerRouteBean: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.params.ConnManagerParams$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.params.ConnManagerParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.params.ConnRouteParams: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.routing.BasicRouteDirector: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.socket.PlainConnectionSocketFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.SSLContexts: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.SSLContextBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.TrustManagerFactorySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.TrustManagerFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.KeyManagerFactorySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.net.ssl.KeyManagerFactory$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.conn.ssl.TrustSelfSignedStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.cookie.CookieIdentityComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.cookie.CookiePathComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.cookie.CookieRestrictionViolationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.AuthSchemeBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.BasicScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.RFC2617Scheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.binary.Base64: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.binary.StringUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.EncoderException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.DecoderException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.BasicSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.DigestScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.DigestSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.GGSSchemeBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.ietf.jgss.GSSManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.GSSManagerImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.GSSManagerImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.GSSUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.login.LoginException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.login.Configuration: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.security.auth.callback.TextCallbackHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.wrapper.SunNativeProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.login.Configuration$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.login.ConfigurationSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.RefreshFailedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.Config: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.util.PendingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.wrapper.SunNativeProvider$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.wrapper.GSSNameElement: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.SunProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.Krb5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.kerberos.KrbServicePermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.Ticket: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.TicketFlags: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.HostAddresses: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.AuthorizationData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ccache.CredentialsCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.KDCOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.Credentials$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.EType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.CredentialsUtil: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.EncryptedData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.Confounder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Aes128: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.ArcFourHmac: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Aes256: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Des: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Des3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.KrbServiceLocator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.ResolverConfiguration: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.SCDynamicStoreConfig: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.krb5.Krb5Util: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.wrapper.Krb5Util: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.krb5.ServiceCreds: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.PAData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.APOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.HostAddress: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Nonce: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.LoginOptions: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.KDCRep: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.EncKDCRepPart: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.AuthorizationDataEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Aes256CtsHmacSha1EType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Des3CbcHmacSha1KdEType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.DesCbcCrcEType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.DesCbcMd5EType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.NullEType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Aes128CtsHmacSha1EType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.ArcFourHmacEType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.dk.Des3DkCrypto: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.NamingException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.spi.NamingManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.ResolverConfiguration$Options: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.ResolverConfigurationImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.CksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.SCDynamicStoreConfig$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.KdcComm$KdcAccessibility: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.KdcComm$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.KerberosSecrets: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.krb5.SubjectComber: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.krb5.InitialToken: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.kerberos.KrbDelegationPermissionCollection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.GSSToken: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ETypeInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ETypeInfo2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.KrbKdcRep: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.KDCReq: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ReplayCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.LocalSeqNumber: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.DesCbcEType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.crc32: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.dk.DkCrypto: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.KeyUsage: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.MD4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.SecretKeyFactorySpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.CompositeName: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.naming.internal.VersionHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.CannotProceedException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.NoInitialContextException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.naming.internal.ResourceManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.directory.SearchControls: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.ResolverConfigurationImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.OptionsImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.net.dns.ResolverConfigurationImpl$AddressChangeListener: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.RsaMd5CksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.DesMacKCksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.Crc32CksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.DesMacCksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.NetClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.jgss.krb5.Krb5Token: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.ReplayCache$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.rcache.MemoryCache: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.LastReqEntry: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.crypto.MacSpi: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.MD4$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.provider.ByteArrayAccess: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.InvalidNameException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.spi.ResolveResult: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.naming.internal.VersionHelper12: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <javax.naming.ConfigurationException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.naming.internal.ResourceManager$AppletParameter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.rcache.DflCache$Storage: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.sun.naming.internal.VersionHelper12$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.security.krb5.internal.KrbCredInfo: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.HttpAuthenticator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.KerberosScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NegotiateScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NegotiateSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMEngineException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMEngineImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.SPNegoScheme: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.CloseableHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.BasicClientConnectionManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.SchemeRegistryFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.IgnoreSpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.BasicCookieStore: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultRedirectStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965Spec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.IgnoreSpec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.HttpAuthenticator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.ConnectionShutdownException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2109Spec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.RedirectLocations: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BestMatchSpec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.CookieSpecBase: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BasicCommentHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BasicSecureHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BasicPathHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.SystemDefaultDnsResolver: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.DefaultClientConnection: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.BasicDomainHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.SystemClock: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.AutoRetryHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.HttpClientBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.NoopUserTokenHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.execchain.Proxies: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.ManagedHttpClientConnectionFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.DefaultHttpResponseParserFactory: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.BasicResponseHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.ContentEncodingHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DecompressingHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.DefaultBackoffStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.HttpClients: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.LaxRedirectStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.NullBackoffStrategy: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.ProxyClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.BasicHttpClientConnectionManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.IdleConnectionHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.InMemoryDnsResolver: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.DateParseException: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.http.impl.cookie.DateUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.Log4JLogger: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.WeakHashtable: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.Handler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.LogManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.Logger$SystemLoggerHelper: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.Formatter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.LogManager$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.LogManager$Beans: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.Logging: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.util.logging.ErrorManager: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.ServletContextCleaner: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.NoOpLog: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.LogFactoryImpl: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.impl.LogFactoryImpl$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogSource: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.binary.Base32: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.binary.BinaryCodec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.binary.Hex: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.CharEncoding: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.digest.DigestUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.AbstractCaverphone: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.BeiderMorseEncoder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Rule$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Rule$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.bm.ResourceConstants: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.Caverphone: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.Caverphone2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.Caverphone1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.ColognePhonetic: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.DoubleMetaphone: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.Metaphone: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.RefinedSoundex: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.SoundexUtils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.language.Soundex: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.BCodec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.RFC1522Codec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.QCodec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.QuotedPrintableCodec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.Utils: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.net.URLCodec: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.codec.StringEncoderComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.OptionGroup: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.OptionValidator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.BasicParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.Parser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.Options: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.CommandLine: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.Util: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.TypeHandler: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.PatternOptionBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.OptionBuilder: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.GnuParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.HelpFormatter: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.HelpFormatter$OptionComparator: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.cli.PosixParser: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred$2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred$3: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred$1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred$4: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <com.dosarrest.alfred.Alfred$5: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <sun.misc.ObjectInputFilter$Config$lambda_static_0__1: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.io.ObjectInputStream$setValidator__2: void <init>()> via: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void handleThrowable(java.lang.Throwable)>($r3)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void handleThrowable(java.lang.Throwable)>($r3)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ERROR] LogFactory: Load of custom hashtable failed")
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ERROR] LogFactory: Load of custom hashtable failed")
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> via: r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory.HashtableImpl", null)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r8)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void handleThrowable(java.lang.Throwable)> via: staticinvoke <org.apache.commons.logging.LogFactory: void handleThrowable(java.lang.Throwable)>($r3)
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ERROR] LogFactory: Load of custom hashtable failed")
<org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)> calls: <java.lang.String: java.lang.String trim()> via: $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatConversionException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatCodePointException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatConversionException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatCodePointException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r60 = virtualinvoke $r57.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.joda.time.IllegalFieldValueException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.UnknownFormatFlagsException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.DuplicateFormatFlagsException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatFlagsException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.MissingFormatWidthException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatPrecisionException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatWidthException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.MissingFormatArgumentException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.nio.file.InvalidPathException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.UnknownFormatConversionException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.regex.PatternSyntaxException: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.nio.charset.MalformedInputException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.joda.time.IllegalFieldValueException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.UnknownFormatFlagsException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.DuplicateFormatFlagsException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatFlagsException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.MissingFormatWidthException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatPrecisionException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.IllegalFormatWidthException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.MissingFormatArgumentException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.InvalidClassException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.nio.file.InvalidPathException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.net.URISyntaxException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.UnknownFormatConversionException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.nio.file.FileSystemException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <sun.security.jgss.GSSExceptionImpl: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.ietf.jgss.GSSException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.util.regex.PatternSyntaxException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Boolean: boolean booleanValue()> via: $z13 = virtualinvoke $r32.<java.lang.Boolean: boolean booleanValue()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] LogFactory implementation requested for the first time for context classloader ")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r33.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' as specified by system property ")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Creating an instance of LogFactory class \'")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r25.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]. Trying alternative implementations...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r62 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: [")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r58.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r52 = virtualinvoke $r49.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] as specified by a system property.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r54 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] An exception occurred while trying to create an instance of the custom factory class: [")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r50.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.BufferedReader: void <init>(java.io.Reader)> via: specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r15)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)> via: specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r13, "UTF-8")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.BufferedReader: void close()> via: virtualinvoke r68.<java.io.BufferedReader: void close()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.BufferedReader: java.lang.String readLine()> via: $r16 = virtualinvoke r68.<java.io.BufferedReader: java.lang.String readLine()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.BufferedReader: void <init>(java.io.Reader)> via: specialinvoke $r47.<java.io.BufferedReader: void <init>(java.io.Reader)>($r48)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.io.InputStreamReader: void <init>(java.io.InputStream)> via: specialinvoke $r48.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r13)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.String: boolean equals(java.lang.Object)> via: $z10 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' which was present in the path of the context classloader.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("META-INF/services/org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" as specified by file \'")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP]  Creating an instance of LogFactory class ")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r18.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <sun.security.krb5.KrbException: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r41 = virtualinvoke $r38.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]. Trying alternative implementations...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r43 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: [")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r39.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Properties file specifies LogFactory subclass \'")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r8.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z14 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z14 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Context classloader is null.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Context classloader is null.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r65 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r65 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r35 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r35 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r37)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r37)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[LOOKUP] ", $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[LOOKUP] ", $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)>($r0, "commons-logging.properties")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)>($r0, "commons-logging.properties")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Boolean: void <clinit>()> via: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r31)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r31)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z18 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z18 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for system property [org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for system property [org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory", null)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory", null)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z12 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z12 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r2, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r2, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No system property [org.apache.commons.logging.LogFactory] defined.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No system property [org.apache.commons.logging.LogFactory] defined.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z17 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z17 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r61 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r60)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r61 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r60)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r64)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r64)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z16 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z16 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r53 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r52)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r53 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r52)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r56)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r56)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for a resource file of name [META-INF/services/org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for a resource file of name [META-INF/services/org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r0, "META-INF/services/org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r0, "META-INF/services/org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z11 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z11 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r16, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r16, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No resource file with name \'META-INF/services/org.apache.commons.logging.LogFactory\' found.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No resource file with name \'META-INF/services/org.apache.commons.logging.LogFactory\' found.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z15 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z15 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r42 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r41)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $r42 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r41)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r45)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r45)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking in properties file for entry with key \'org.apache.commons.logging.LogFactory\' to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking in properties file for entry with key \'org.apache.commons.logging.LogFactory\' to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r7, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r7, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Properties file has no entry specifying LogFactory subclass.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Properties file has no entry specifying LogFactory subclass.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No properties file available to determine LogFactory subclass from..")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No properties file available to determine LogFactory subclass from..")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Loading the default LogFactory implementation \'org.apache.commons.logging.impl.LogFactoryImpl\' via the same classloader that loaded this LogFactory class (ie not looking in the context classloader).")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Loading the default LogFactory implementation \'org.apache.commons.logging.impl.LogFactoryImpl\' via the same classloader that loaded this LogFactory class (ie not looking in the context classloader).")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>("org.apache.commons.logging.impl.LogFactoryImpl", $r6, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>("org.apache.commons.logging.impl.LogFactoryImpl", $r6, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory)>($r0, r66)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory)>($r0, r66)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z14 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Context classloader is null.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader)> via: $r65 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r35 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r37)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[LOOKUP] ", $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> via: $r1 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)>($r0, "commons-logging.properties")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)> via: $r32 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r31)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z18 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for system property [org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.LogFactory", null)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z12 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r2, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No system property [org.apache.commons.logging.LogFactory] defined.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z17 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)> via: $r61 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r60)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r64)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z16 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)> via: $r53 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r52)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r56)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking for a resource file of name [META-INF/services/org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r0, "META-INF/services/org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z11 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r16, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No resource file with name \'META-INF/services/org.apache.commons.logging.LogFactory\' found.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z15 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)> via: $r42 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String trim(java.lang.String)>($r41)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r45)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Looking in properties file for entry with key \'org.apache.commons.logging.LogFactory\' to define the LogFactory subclass to use...")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>($r7, r67, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Properties file has no entry specifying LogFactory subclass.")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] No properties file available to determine LogFactory subclass from..")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[LOOKUP] Loading the default LogFactory implementation \'org.apache.commons.logging.impl.LogFactoryImpl\' via the same classloader that loaded this LogFactory class (ie not looking in the context classloader).")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> via: r66 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>("org.apache.commons.logging.impl.LogFactoryImpl", $r6, $r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> calls: <org.apache.commons.logging.LogFactory: void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory)> via: staticinvoke <org.apache.commons.logging.LogFactory: void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory)>($r0, r66)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> calls: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r7 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' due to security restrictions - ")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to get classloader for class \'")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()> calls: <org.apache.commons.logging.LogFactory$1: java.lang.Object run()> via: $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$1: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoaderInternal()> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)> via: specialinvoke $r13.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected IllegalAccessException", $r12)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)> via: specialinvoke $r10.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected InvocationTargetException", $r11)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Thread: void <clinit>()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r16 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: $r16 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: r14 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r16)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Object: void <clinit>()> via: r14 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r16)
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("java.lang.Thread")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <java.lang.Thread: java.lang.Thread currentThread()> via: $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r16 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> calls: <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> via: r14 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r16)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader)> calls: <java.util.Hashtable: java.lang.Object get(java.lang.Object)> via: $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory)> calls: <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)> via: virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory$2: java.lang.Object run()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory$2: void <init>(java.lang.String,java.lang.ClassLoader)> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$2: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, r2)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("An error occurred while loading the factory class:")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r15.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to manage classloader ")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Created object ")
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r5.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r3)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r3)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r11 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r10)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r11 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r10)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r13)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r13)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r3)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r11 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r10)
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r13)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" from classloader ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Loaded class ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r27.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' as loaded by this classloader.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not extend \'")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" loaded from classloader ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Factory class ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r66 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r65 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r64)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' via classloader ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to locate any class called \'")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r60.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - it depends on some other class that cannot be found.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r55 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" via classloader ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' cannot be loaded")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Class \'")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r49.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r45 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r46 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Help can be found @http://commons.apache.org/logging/troubleshooting.html.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Please check the custom implementation. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("specifying the standard LogFactory from the command line. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("In this case, consider using the commons-logging-adapters.jar file or ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("that the container has set one without your knowledge. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("If you have not explicitly specified a custom LogFactory then it is likely ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Background can be found in http://commons.apache.org/logging/tech.html. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("in incompatible classloaders. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The conflict is caused by the presence of multiple LogFactory classes ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'. ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' cannot be converted to \'")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("should be used but Class \'")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The application has specified that a custom LogFactory implementation ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r41.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassCastException: void <init>(java.lang.String)> via: specialinvoke $r44.<java.lang.ClassCastException: void <init>(java.lang.String)>($r45)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - trying the classloader associated with this LogFactory.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to load factory class via classloader ")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r5.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)> via: specialinvoke $r38.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>("The chosen LogFactory implementation does not extend LogFactory. Please check your configuration.", $r35)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)> via: specialinvoke $r36.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>($r35)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r68 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r68 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r32 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r32 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r34)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r34)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r19 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r18)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r19 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r18)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r69 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r69 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r26)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r26)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[BAD CL TREE] ", r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[BAD CL TREE] ", r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.IOException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassNotFoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.String: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable$PrintStreamOrWriter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalStateException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.System: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AssertionError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NullPointerException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IdentityHashMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable$SentinelHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalArgumentException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Objects: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CloneNotSupportedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InterruptedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.RuntimeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.InputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.SecurityManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.System$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadGroup: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.Reflection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Terminator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.SelectorProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.SharedSecrets: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Runtime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Exception: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.VM: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Version: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AccessController: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.UnsupportedEncodingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.OutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileDescriptor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.SecurityException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.NotActiveException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StreamCorruptedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.HashMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$ValidationList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$GetField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IndexOutOfBoundsException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ObjectInputFilter$Config: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InternalError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Void: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.misc.ReflectUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadDeath: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassCastException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$Logging: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NegativeArraySizeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Array: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalAccessError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$Caches: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Error: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Math: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.BitSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ConcurrentModificationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.OutOfMemoryError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.SecurityConstants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread$Caches: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadLocal: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalThreadStateException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnsupportedOperationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchMethodError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$DebugTraceInfoStack: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$PutField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$Caches: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.NotSerializableException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AbstractStringBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Matcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringCoding: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringIndexOutOfBoundsException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ConditionalSpecialCasing: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.String$CaseInsensitiveComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileNotFoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.InterruptedIOException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Writer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InstantiationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalAccessException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchFieldException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchMethodException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Executable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ConstantPool: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$MethodArray: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$Atomic: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.TypeAnnotationParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.InvocationTargetException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Unsafe: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedHashMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Modifier: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AllPermission: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.HashSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Permissions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ReflectiveOperationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Random: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$ReverseComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyListIterator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyIterator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptySet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyEnumeration: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Number: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NumberFormatException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Integer$IntegerCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Shutdown: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.PropertyPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Terminator$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Pipe: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.SelectorProvider$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment$NameComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment$EntryComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TreeMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Process: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ApplicationShutdownHooks: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnsatisfiedLinkError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.OSEnvironment: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassFormatError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Vector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Stack: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AssertionStatusDirectives: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoaderHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader$ParallelLoaders: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoClassDefFoundError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Hashtable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Resource: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Debug: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Reader: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Date: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties$XmlSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.FileChannel: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.SecurityConstants$AWT: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileDescriptor$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterName: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Character$CharacterCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Long$LongCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.VirtualMachineError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandles: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MemberName: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleStatics: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.VerifyAccess: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleNatives$Constants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MemberName$Factory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleNatives: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.EOFException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy$ProxyClassFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy$KeyFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue$Lock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue$Null: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.PlatformLogger$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Bits: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.AccessibleObject: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArrayIndexOutOfBoundsException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$HandleTable$HandleList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Short$ShortCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Byte$ByteCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.UTFDataFormatException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IncompatibleClassChangeError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$Caches: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.NoSuchAlgorithmException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ByteArrayOutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$6: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$EntryFuture: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJFloat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJByte: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CountedCompleter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJShort: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJObject: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJChar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays$NaturalOrder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.DualPivotQuicksort: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays$LegacyMergeSort: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Math$RandomNumberGeneratorHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArithmeticException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StrictMath: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.NoSuchElementException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicInteger: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Reference$Lock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Reference$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormatSymbols: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter$Conversion: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter$DateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.FormatterClosedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Node: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.ASCII: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$Cache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.ParseStatus: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.InternalLocaleBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LanguageTag: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$LocaleNameGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IllformedLocaleException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleMatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CharacterCodingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.MessageUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BitClass: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BmpCharProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Caret: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$VertWS: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BranchConn: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$All: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$UnixCaret: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$TreeInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$End: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Dot: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Begin: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$UnixDot: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.Normalizer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LastNode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$HorizWS: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LastMatch: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LineEnding: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Normalizer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.spi.CharsetProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$ExtendedProviderHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.ThreadLocalCoders: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.BreakIterator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.MalformedURLException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileSystem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URI: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.File$TempDirectory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DeleteOnExitHook: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DefaultFileSystem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfRef: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Collectors: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.parser.SignatureParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AbstractMethodError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.MalformedParametersException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.TypeAnnotation$LocationInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotatedTypeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.BufferUnderflowException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProtectionDomain$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509Certificate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.IOUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateEncodingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLStreamHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Proxy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketAddress: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.ExceptionProxy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ConstructorAccessorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MethodAccessorGenerator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.UnsafeFieldAccessorFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MethodAccessorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.SerializationConstructorAccessorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.scope.DummyScope: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.ReflectAccess: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.WeakHashMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassValue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassValue$Identity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AllPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedHashSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PermissionsHash: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnresolvedPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.Manifest: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.Attributes: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArrayStoreException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Shutdown$Lock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramSocket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Selector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.SelectionKey: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AbstractSelectionKey: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.SelectableChannel: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Socket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DefaultSelectorProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ServerSocket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.BadPaddingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.IllegalBlockSizeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ApplicationShutdownHooks$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$NullOutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$NullInputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.LinkageError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$ExtClassLoader$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Paths: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.io.Win32ErrorMode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.BufferOverflowException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.Bits: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.ReadOnlyBufferException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Perf: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Perf$GetPerfAction: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.PerfCounter$CoreCounters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.PerfCounter$WindowsClientCounters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadLocalRandom: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap$ReservationNode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicReference: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidKeyException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.NoSuchProviderException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SignatureException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CertImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Subject: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.util.URLUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.ParseUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$Factory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$BootClassPathHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.EmptyStackException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Dictionary: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.BaseCalendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.BaseCalendar$Date: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarDate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarSystem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DateFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.GregorianCalendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TimeZone: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.Gregorian: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.spi.XmlPropertiesProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties$XmlSupport$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileLockTable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.FileLockInterruptionException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileChannelImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NonWritableChannelException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NonReadableChannelException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedByInterruptException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOStatus: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.NativeDispatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedChannelException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcherImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileSystemProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownHostException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$InetAddressHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.NetworkInterface: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddressImplFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Inet4Address: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Inet6Address: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.util.IPAddressUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FilePermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.RegisteredDomain: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketPermission$EphemeralRange: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$HexFloatPattern: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidAlgorithmParameterException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security$ProviderProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.Providers: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.GetInstance: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PropertyExpander: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidParameterException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.ProviderList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Optional: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterName$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData00: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataLatin1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData0E: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataPrivateUse: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData01: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData02: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataUndefined: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BitSieve: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.MutableBigInteger: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigInteger$UnsafeHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.ValueConversions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.WrongMethodTypeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.empty.Empty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.VerifyType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$Lazy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$Factory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchFieldError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.BytecodeDescriptor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.DirectMethodHandle$EnsureInitialized: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.DirectMethodHandle$Lazy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodType$ConcurrentWeakInternSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StringWriter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.GeneralSecurityException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.MessageDigestSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.DigestException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinTask: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Tripwire: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayPrefixHelpers: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.DoubleSummaryStatistics: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$DoubleStreamBuilderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$StreamBuilderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IntSummaryStatistics: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$IntStreamBuilderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LongSummaryStatistics: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$LongStreamBuilderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.AbstractExecutorService: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.RejectedExecutionException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StrictMath$RandomNumberGeneratorHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.InvalidMarkException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Comparators: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy$UnsupportedEmptyCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyFile: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PolicySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DecimalFormatSymbolsProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IllegalFormatException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.TemporalQueries: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.ZoneId: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.NumberFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DateFormatSymbols: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.LocaleServiceProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.BreakIteratorProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.CollatorProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DateFormatProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DateFormatSymbolsProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.NumberFormatProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CurrencyNameProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.LocaleNameProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.TimeZoneNameProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CalendarDataProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CalendarNameProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.spi.CalendarProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$Control: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleConstants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TreeSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleObjectCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Format: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.SimpleDateFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.ParallelListResourceBundle: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.OpenListResourceBundle: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.TimeZoneNamesBundle: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.BaseLocale$Cache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleEquivalentMaps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$Cache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$8: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$9: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$6: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$7: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$20: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$21: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$22: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$23: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$17: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$18: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$19: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$13: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$14: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$15: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$16: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$10: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$11: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$12: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$ExtendedProviderHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ASCIICaseInsensitiveComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Cache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Classes: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Aliases: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.attribute.UserPrincipalLookupService: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DeleteOnExitHook$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.WinNTFileSystem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ProviderNotFoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.BooleanSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.GenericSignatureFormatError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.IntSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.BottomSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.LongSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.VoidDescriptor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.CharSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.DoubleSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.ByteSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.ShortSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.FloatSignature: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateExpiredException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateNotYetValidException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateParsingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CRLException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateFactorySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownServiceException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MessageHeader: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ContentHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownContentHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLConnection$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MagicAccessorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.AccessorGenerator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ClassFileAssembler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.Label: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ByteVectorFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.MalformedParameterizedTypeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalBlockingModeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.MembershipKey: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramSocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.MulticastSocket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainDatagramSocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultDatagramSocketImplFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AsynchronousCloseException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PlainSocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocksSocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsSelectorProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NoSuchPaddingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ShortBufferException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.InvalidParameterSpecException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CipherSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ExemptionMechanismException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NullCipher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProviderException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurityManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoAllPermission: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureClassLoader: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLClassLoader$7: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.JavaUtilJarAccessImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.JarException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$9: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$8: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$7: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$6: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$10: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$11: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$12: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.Inflater: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipFile$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.StandardCharsets: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayDeque: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessImpl$LazyPattern: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystemNotFoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.Bits$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.LockSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CertInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AlgorithmId: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.IssuerAlternativeNameExtension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.PolicyMappingsExtension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.SubjectAlternativeNameExtension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.Extension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.GeneralNames: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.X509Factory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.OIDMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DerOutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateValidity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.PKIXExtensions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateExtensions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.HexDumpEncoder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Pem: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AttributeNameEnumeration: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.KeyUsageExtension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Subject$AuthPermissionHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ResourcesMgr: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.JarIndex: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ExtensionDependency: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.InvalidJarIndexException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractSequentialList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$BootClassPathHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.Gregorian$Date: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DontCareFieldPosition: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.JulianCalendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.JulianCalendar$Date: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.TimeZoneNameUtility: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Clock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Ser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.AbstractCalendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AsynchronousFileChannel: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.OverlappingFileLockException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.NativeThread: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$BufferCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcherImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOUtil$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileStore: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileSystemProvider$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Channels: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InterfaceAddress: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.NetworkInterface$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultInterface: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.PortConfig: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InheritableThreadLocal: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.ProviderList$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.DataFormatException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.SignedMutableBigInteger: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ExceptionInInitializerError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.Wrapper$Format: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.Invokers$Lazy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.ValueConversions$WrapperCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Label: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$T: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$SpeciesData$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$Factory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.BootstrapMethodError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ProxyGenerator$ConstantPool: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.JCAUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ExecutionException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.TimeoutException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CancellationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$AbstractStreamBuilderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser$GrantEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser$PermissionEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStoreException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PolicyUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Currency$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Currency$CurrencyNameGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$UnsafeHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$StringBuilderHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$LongOverflow: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeFormatterBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.ZoneRulesProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$AvailableCalendarTypes: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.BuddhistCalendar: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$CalendarAccessControlContext: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.Ser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DigitList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat$FastPathData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat$DigitArrays: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.CharacterIteratorFieldDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FormattedFloatingDecimal$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$Control$CandidateListCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Collator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleDataMetaInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.CalendarBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$RBClassLoader: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UnicodeSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.ICUData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UTF16: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacterIterator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacterProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.RangeValueIterator$Element: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.Utility: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.US_ASCII: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandomSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom$StrongPatternHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SecureRandom: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ExpiringCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.DefaultFileSystemProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$DefaultInstanceHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.FieldAccessorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ClassDefiner: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.UTF8: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ByteVectorImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationInvocationHandler$UnsafeAccessor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.CRC32: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Base64: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.StandardSocketOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainDatagramSocketImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ResourceManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramPacket$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultDatagramSocketImplFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpConnectSocketImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainSocketImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PlainSocketImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ProxySelector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketTimeoutException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SelectorProviderImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ExemptionMechanismSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NullCipherSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPermissions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurity$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurityManager$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoAllPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AlgorithmParametersSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ProgressMonitor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestDigester$Entry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$Sync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$FairSync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Cache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CRLImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRL: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.pkcs.ParsingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.X509CertificatePair: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X500Name$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DerIndefLenConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SignatureSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ByteArrayLexOrder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ByteArrayTagOrder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateVersion: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.GeneralSubtrees: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.CharacterEncoder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ResourcesMgr$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ExtensionInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.JarFilter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ProtocolException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.LocalGregorianCalendar$Date: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile$Checksum: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Duration$DurationUnits: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.IsoChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.IsoFields: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.Parsed: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.PropertiesDefaultHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileKey: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.net.SocketFlow: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NotYetBoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AlreadyBoundException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NotYetConnectedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.UnsupportedAddressTypeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.UnresolvedAddressException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketOptionRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ExtendedOptionsImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalSelectorException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedSelectorException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetHooks: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketDispatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AlreadyConnectedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ConnectionPendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NoConnectionPendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.CancelledKeyException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$AcceptAllFilter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileTypeDetector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.CopyMoveHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.TempFileHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.PortConfig$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.ByteVector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Item: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Frame: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Edge: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.JCAUtil$CachedSecureRandomHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfPrimitive: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Tripwire: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.AbstractSpinedBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.PipelineHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.DistinctOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SortedOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.MatchOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ReduceOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ForEachOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SliceOps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.EnumMap$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.FutureTask$WaitNode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.LinkedBlockingQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnrecoverableKeyException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnrecoverableEntryException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStoreSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStore$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStore$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Password: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StreamTokenizer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeFormatterBuilder$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeTextProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CopyOnWriteArrayList: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.TemporalAdjusters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$RBClassLoader$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.ICUBinary: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SecureRandom$SeederHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystemProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$DefaultInstanceHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestDigester$Position: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddressContainer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ConnectionResetException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainSocketImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Authenticator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsSelectorImpl$FdMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JarVerifier$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.DefaultProgressMeteringPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidatorException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.KeyUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.pkcs.PKCS7$SecureRandomHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AlgorithmDecomposer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraint: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalMonitorStateException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRLEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CRLExtensions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.NullCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AVAComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.DestroyFailedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509Key: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.SubjectDomainCombiner$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.ChronoLocalDateImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.InputSource: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.SAXParserImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.SAXParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.XMLStreamException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketOptionRegistry$LazyInitialization: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ExtendedSocketOption: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.net.ExtendedSocketOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.CopyMoveHelper$CopyOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.TempFileHelper$PosixPermissions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Handler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Context: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfRef: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ReduceOps$Box: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfInt: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfRef: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$SpinedNodeBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfLong: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors$DefaultThreadFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors$PrivilegedThreadFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.Ser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.ThaiBuddhistChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.MinguoChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.JapaneseChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.ZoneName: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeTextProvider$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.TzdbZoneRulesProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UBiDiProps: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate$Parser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SunEntries: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractFileSystemProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsSecurity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsUriSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystemAlreadyExistsException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsSecurityDescriptor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileCopy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ProviderMismatchException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsLinkSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileAttributeViews: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Util: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.MembershipRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PortUnreachableException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramDispatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.validator.KeyStores: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.HttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.InvalidKeySpecException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.ParserSAX: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ExtendedSocketOption$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.DefaultFileTypeDetector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.attribute.PosixFilePermissions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$Transferer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$WaitQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$LifoWaitQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$TransferStack: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$FifoWaitQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.UCompactIntArray: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.IntHashtable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.CollatorUtilities: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG$Blocking: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG$NonBlocking: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SunEntries$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ThreadPool$DefaultThreadPoolHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractAclFileAttributeView: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsUserPrincipals: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.NativeBuffers: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstFile: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$VolumeInformation: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$DiskFreeSpace: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$AclInformation: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$Account: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$CompletionStatus: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$BackupResult: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory$Flags: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Cancellable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractUserDefinedFileAttributeView: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystem$LookupService: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsPathParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Globs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractPath: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractBasicFileAttributeView: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramSocketAdaptor$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.NetscapeCertTypeExtension: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.UntrustedChecker: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CertSelector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.PKIXCertPathChecker: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CollectionCertStoreParameters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetworkClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.PosterOutputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CacheRequest: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CookieHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.HeaderParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.ECPoint: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyFactorySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Parser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Pair: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Attrs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Input: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXNotRecognizedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXNotSupportedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.RegistryFileTypeDetector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.ComposedCharIter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate$Generator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.PendingIoCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Invoker: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractWatchService: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystem$LookupService$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.PKIX: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AnchorCertificates: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.UntrustedCertificates: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilderException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilderSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathHelperImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidatorSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidator$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertStoreException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertStore$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.Handler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ResponseCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CacheResponse: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SecureCacheResponse: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetProperties: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.EmptyInputStream: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStream$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.HttpCapture$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractFileTypeDetector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.RegistryFileTypeDetector$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentLinkedQueue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Invoker$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ShutdownChannelGroupException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Iocp$CompletionStatus: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.LinkedBlockingDeque: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ClosedWatchServiceException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractPoller: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.StandardWatchEventKinds: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.PKIX$CertStoreComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AnchorCertificates$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.UntrustedCertificates$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.CertPathHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRLSelector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.DigestAuthentication$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.AuthCacheValue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetProperties$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.Negotiator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.AuthCacheImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DefaultAsynchronousChannelProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsAsynchronousChannelProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalChannelGroupException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AcceptPendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ReadPendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.WritePendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.InterruptedByTimeoutException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StackOverflowError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.LambdaMetafactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.LambdaConversionException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.VerifyError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnknownError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassCircularityError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Finalizer$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Finalizer$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InstantiationError: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractDateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractInstant: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.DateTimeFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Chronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Instant: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutableDateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISODateTimeFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.FieldUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalDateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.FormatUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalDate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DurationField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISODateTimeFormat$Constants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeUtils$SystemMillisProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BaseDateTime: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateMidnight: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.YearMonthDay: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.TimeOfDay: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ConverterManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.AssembledChronology$Fields: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.ISOYearOfEraDateTimeField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.BaseChronology: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BaseLocal: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Period: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutablePeriod: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutableInterval: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BasePartial: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.AbstractReadableInstantFieldProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.DateConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableInstantConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.StringConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadablePartialConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadablePeriodConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.LongConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableIntervalConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.NullConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.CalendarConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableDurationConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.MillisDurationField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DateTimeZoneBuilder$RuleSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractPartial: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISOPeriodFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractInterval: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.AbstractPartialFieldProperty: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.AbstractConverter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractPeriod: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BasePeriod$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.PeriodFormatterBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractDuration: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.BasicChronology$HalfdayField: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeConstants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.PeriodFormat: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MonthDay: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Partial: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.YearMonth: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.ParseException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.Args: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.TextUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.HttpException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.UnsupportedHttpVersionException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.ProtocolException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.MalformedChunkCodingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.entity.AbstractHttpEntity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicHeaderValueParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicLineFormatter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HTTP: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.LangUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.Consts: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.EntityUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicHeaderValueFormatter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.entity.BasicHttpEntity: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.Asserts: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.SyncBasicHttpParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.BasicHttpParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.AbstractHttpParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpProtocolParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpConnectionParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpParamConfig: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.ConnectionConfig$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.MessageConstraints$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.SocketConfig$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.HttpHeaders: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultBHttpServerConnectionFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.ConnSupport: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpResponseWriterFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpRequestParserFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.NetUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicLineParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpRequestFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.AbstractHttpMessage: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.HeaderGroup: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.SocketHttpServerConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.AbstractHttpServerConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpRequestWriterFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpResponseParserFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpResponseFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpServerConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpClientConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.SocketHttpClientConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.AbstractHttpClientConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.NoConnectionReuseStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultBHttpClientConnectionFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.pool.BasicConnPool: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.pool.BasicConnFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.SocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.DefaultSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyManagementException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLContextSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLServerSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLEngine: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLParameters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLSocket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ServerSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.X509Certificate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.DefaultServerSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.Certificate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateExpiredException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateNotYetValidException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.X509Certificate$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateEncodingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.RegistryBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestExpectContinue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.EncodingUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestContent: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.UriHttpRequestHandlerMapper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.UriPatternMatcher: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ChainBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseDate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpDateGenerator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseContent: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpRequestExecutor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpCoreContext: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.BasicHttpContext: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.SyncBasicHttpContext: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestDate: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestConnControl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.BasicHttpProcessor: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestUserAgent: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestTargetHost: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseServer: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseConnControl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpProcessorBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.ExceptionUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.CharsetUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.TypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.Gson: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonElement: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeWriter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Excluder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.reflect.TypeToken: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.DateTypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TimeTypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.Gson$FutureTypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Streams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Primitives: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonNull: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.stream.JsonReader$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.JsonReaderInternalAccess: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonObject: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonArray: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeReader$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.$Gson$Types: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.$Gson$Preconditions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$23: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$24: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$25: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$26: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$20: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$21: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$22: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$12: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$13: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$14: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$15: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$10: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$11: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$16: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$17: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$18: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$19: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$8: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$7: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$9: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$6: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap$Node: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.UnsafeAllocator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.UUID$Holder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.UnsafeAllocator$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.DefaultDateTypeAdapter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.GsonBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.stream.JsonScope: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AUTH: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthenticationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.MalformedChallengeException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthSchemeRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthState: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.InvalidCredentialsException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.params.AuthParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.CircularRedirectException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.RedirectException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.ClientProtocolException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.AuthSchemes: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.CookieSpecs: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.RequestConfig$Builder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.entity.EntityBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.Deflater: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.InputMismatchException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.scheme.SchemeRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ConnectTimeoutException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.AbstractExecutionAwareRequest: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.CloneUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpDelete: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpRequestBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpGet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpHead: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPatch: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPost: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPut: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpTrace: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.RequestBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URIBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.util.InetAddressUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.NonRepeatableRequestException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.AuthPolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.CookiePolicy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.HttpClientParamConfig: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.HttpClientParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieSpecRegistry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.MalformedCookieException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.HttpClientContext: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAcceptEncoding: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAddCookies: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogConfigurationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAuthCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestClientConnControl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestExpectContinue: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseAuthCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicAuthCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultSchemePortResolver: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseContentEncoding: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseProcessCookies: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.HttpClientUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.JdkIdn: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.Punycode: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.Rfc3492Idn: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URIUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ConnectException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.MultihomePlainSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnPerRouteBean: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnManagerParams$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnManagerParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnRouteParams: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.routing.BasicRouteDirector: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.socket.PlainConnectionSocketFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.SSLContexts: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.TrustManagerFactorySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.TrustManagerFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.KeyManagerFactorySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.KeyManagerFactory$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.TrustSelfSignedStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieIdentityComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookiePathComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieRestrictionViolationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.AuthSchemeBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.BasicScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.RFC2617Scheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Base64: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.StringUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.EncoderException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.DecoderException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.BasicSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.DigestScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.DigestSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.GGSSchemeBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.ietf.jgss.GSSManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSManagerImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSManagerImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.LoginException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.Configuration: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.security.auth.callback.TextCallbackHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.SunNativeProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.Configuration$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.ConfigurationSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.RefreshFailedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Config: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PendingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.SunNativeProvider$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.GSSNameElement: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.SunProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.Krb5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.KrbServicePermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.Ticket: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.TicketFlags: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.HostAddresses: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.AuthorizationData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.CredentialsCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Credentials$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.EType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.CredentialsUtil: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.EncryptedData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Confounder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes128: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.ArcFourHmac: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes256: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KrbServiceLocator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfiguration: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.SCDynamicStoreConfig: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.Krb5Util: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.Krb5Util: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.ServiceCreds: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.PAData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.APOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.HostAddress: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Nonce: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LoginOptions: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCRep: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.EncKDCRepPart: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.AuthorizationDataEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes256CtsHmacSha1EType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des3CbcHmacSha1KdEType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcCrcEType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcMd5EType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.NullEType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes128CtsHmacSha1EType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.ArcFourHmacEType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.dk.Des3DkCrypto: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.NamingException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.spi.NamingManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfiguration$Options: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.CksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.SCDynamicStoreConfig$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KdcComm$KdcAccessibility: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KdcComm$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KerberosSecrets: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.SubjectComber: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.InitialToken: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.KrbDelegationPermissionCollection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSToken: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ETypeInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ETypeInfo2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KrbKdcRep: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCReq: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ReplayCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LocalSeqNumber: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcEType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.crc32: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.dk.DkCrypto: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.KeyUsage: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.MD4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.SecretKeyFactorySpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.CompositeName: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.CannotProceedException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.NoInitialContextException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.ResourceManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.directory.SearchControls: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.OptionsImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl$AddressChangeListener: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.RsaMd5CksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesMacKCksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Crc32CksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesMacCksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.NetClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.Krb5Token: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ReplayCache$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.rcache.MemoryCache: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LastReqEntry: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.MacSpi: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.MD4$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.ByteArrayAccess: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.InvalidNameException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.spi.ResolveResult: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper12: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.ConfigurationException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.ResourceManager$AppletParameter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.rcache.DflCache$Storage: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper12$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KrbCredInfo: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.HttpAuthenticator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.KerberosScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NegotiateScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NegotiateSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.SPNegoScheme: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.CloseableHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.BasicClientConnectionManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SchemeRegistryFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.IgnoreSpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicCookieStore: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultRedirectStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965Spec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.IgnoreSpec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpAuthenticator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.ConnectionShutdownException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109Spec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.RedirectLocations: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BestMatchSpec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.CookieSpecBase: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicCommentHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicSecureHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicPathHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SystemDefaultDnsResolver: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultClientConnection: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicDomainHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemClock: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.AutoRetryHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpClientBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.NoopUserTokenHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.execchain.Proxies: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.ManagedHttpClientConnectionFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultHttpResponseParserFactory: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicResponseHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ContentEncodingHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DecompressingHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultBackoffStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpClients: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.LaxRedirectStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.NullBackoffStrategy: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ProxyClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.BasicHttpClientConnectionManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.IdleConnectionHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.InMemoryDnsResolver: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.DateParseException: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.DateUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.Log4JLogger: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.WeakHashtable: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Handler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Logger$SystemLoggerHelper: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Formatter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager$Beans: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Logging: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.ErrorManager: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.ServletContextCleaner: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.NoOpLog: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.LogFactoryImpl: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.LogFactoryImpl$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogSource: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Base32: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.BinaryCodec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Hex: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.CharEncoding: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.digest.DigestUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.AbstractCaverphone: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.BeiderMorseEncoder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.ResourceConstants: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.ColognePhonetic: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.DoubleMetaphone: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Metaphone: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.RefinedSoundex: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.SoundexUtils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Soundex: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.BCodec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.RFC1522Codec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.QCodec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.QuotedPrintableCodec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.Utils: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.URLCodec: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.StringEncoderComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionGroup: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionValidator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.BasicParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Parser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Options: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.CommandLine: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Util: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.TypeHandler: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.PatternOptionBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionBuilder: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.GnuParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.HelpFormatter: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.HelpFormatter$OptionComparator: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.PosixParser: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ObjectInputFilter$Config$lambda_static_0__1: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$setValidator__2: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_7f2d2d5b_1__3: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_b5a61975_1__4: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_2241c452_1__5: void <init>()> via: $r70 = virtualinvoke $r11.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r64 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r64 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r66)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r66)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r54 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r54 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r57)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r57)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)>(r67)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)>(r67)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r72 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r72 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r46)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r46)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.IOException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.String: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable$PrintStreamOrWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.System: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AssertionError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NullPointerException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IdentityHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Throwable$SentinelHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalArgumentException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Objects: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CloneNotSupportedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InterruptedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.RuntimeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.InputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.SecurityManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.System$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.Reflection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Terminator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.SelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.SharedSecrets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Runtime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Exception: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.VM: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Version: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AccessController: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.UnsupportedEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.OutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.SecurityException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.NotActiveException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StreamCorruptedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.HashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$ValidationList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$GetField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ObjectInputFilter$Config: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InternalError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Void: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.misc.ReflectUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadDeath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassCastException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$Logging: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NegativeArraySizeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Array: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalAccessError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Error: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Math: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.BitSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ConcurrentModificationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.OutOfMemoryError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.SecurityConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Thread$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ThreadLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalThreadStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnsupportedOperationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$DebugTraceInfoStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$PutField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectOutputStream$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.NotSerializableException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AbstractStringBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Matcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringCoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringIndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ConditionalSpecialCasing: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.String$CaseInsensitiveComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.InterruptedIOException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Writer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InstantiationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalAccessException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchFieldException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchMethodException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Executable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ConstantPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$MethodArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$Atomic: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.TypeAnnotationParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.InvocationTargetException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Unsafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Modifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AllPermission: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.HashSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Permissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory$GetReflectionFactoryAction: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ReflectiveOperationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Random: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$ReverseComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyListIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptySet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyEnumeration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$EmptyList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Number: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NumberFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Integer$IntegerCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Shutdown: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.PropertyPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Terminator$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Pipe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.SelectorProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment$NameComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessEnvironment$EntryComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TreeMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Process: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ApplicationShutdownHooks: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnsatisfiedLinkError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.OSEnvironment: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassFormatError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Vector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Stack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AssertionStatusDirectives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoaderHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader$ParallelLoaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoClassDefFoundError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Hashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Resource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Debug: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Reader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Console$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties$XmlSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.FileChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.SecurityConstants$AWT: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileDescriptor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Character$CharacterCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Long$LongCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.VirtualMachineError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandles: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MemberName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleStatics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.VerifyAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleNatives$Constants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MemberName$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleNatives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.EOFException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy$ProxyClassFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.Proxy$KeyFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.ReferenceQueue$Null: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.PlatformLogger$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.Bits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.AccessibleObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArrayIndexOutOfBoundsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$HandleTable$HandleList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Short$ShortCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Byte$ByteCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.UTFDataFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IncompatibleClassChangeError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$Caches: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.NoSuchAlgorithmException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ByteArrayOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectStreamClass$EntryFuture: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJFloat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJByte: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CountedCompleter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJShort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJChar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays$NaturalOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.DualPivotQuicksort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Arrays$LegacyMergeSort: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers$FJInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Math$RandomNumberGeneratorHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArithmeticException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StrictMath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.NoSuchElementException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Reference$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Reference$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormatSymbols: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter$Conversion: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Formatter$DateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.FormatterClosedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.ASCII: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.ParseStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.InternalLocaleBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LanguageTag: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Locale$LocaleNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IllformedLocaleException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleMatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CharacterCodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.MessageUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BitClass: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BmpCharProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Caret: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$VertWS: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$BranchConn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$All: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$UnixCaret: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$TreeInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$End: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Dot: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$Begin: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$UnixDot: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.Normalizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LastNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$HorizWS: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LastMatch: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$LineEnding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Normalizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.spi.CharsetProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$ExtendedProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.ThreadLocalCoders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.BreakIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.MalformedURLException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URI: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.File$TempDirectory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DeleteOnExitHook: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DefaultFileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$EmptySpliterator$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Collectors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.parser.SignatureParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.AbstractMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.MalformedParametersException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.TypeAnnotation$LocationInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotatedTypeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.BufferUnderflowException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProtectionDomain$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProtectionDomain$JavaSecurityAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.IOUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLStreamHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Proxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.ExceptionProxy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ConstructorAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MethodAccessorGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.UnsafeFieldAccessorFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MethodAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.SerializationConstructorAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ReflectionFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.scope.DummyScope: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.ReflectAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.WeakHashMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassValue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassValue$Identity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AllPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedHashSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PermissionsHash: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnresolvedPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.Manifest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.Attributes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ArrayStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Shutdown$Lock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Selector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.SelectionKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AbstractSelectionKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.SelectableChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Socket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DefaultSelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ServerSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.BadPaddingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.IllegalBlockSizeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ApplicationShutdownHooks$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$NullOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$NullInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.LinkageError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$ExtClassLoader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Paths: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.io.Win32ErrorMode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.BufferOverflowException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.Bits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.ReadOnlyBufferException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Perf: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Perf$GetPerfAction: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.PerfCounter$CoreCounters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.PerfCounter$WindowsClientCounters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadLocalRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap$ReservationNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.atomic.AtomicReference: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentHashMap$TableStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.NoSuchProviderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SignatureException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CertImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Subject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.util.URLUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LinkedList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.ParseUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$BootClassPathHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.EmptyStackException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Dictionary: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.BaseCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.BaseCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DateFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.GregorianCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TimeZone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.CalendarUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.Gregorian: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.spi.XmlPropertiesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Properties$XmlSupport$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileLockTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.FileLockInterruptionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileChannelImpl$SimpleFileLockTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileChannelImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NonWritableChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NonReadableChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedByInterruptException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.NativeDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedChannelException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcherImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownHostException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$InetAddressHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.NetworkInterface: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddress$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddressImplFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Inet4Address: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Inet6Address: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.util.IPAddressUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.FilePermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.RegisteredDomain: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketPermission$EphemeralRange: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$BinaryToASCIIBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FloatingDecimal$HexFloatPattern: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidAlgorithmParameterException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security$ProviderProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.Providers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.GetInstance: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PropertyExpander: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.InvalidParameterException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.ProviderList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Security$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Optional: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterName$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData00: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataLatin1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData0E: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataPrivateUse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData01: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterData02: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.CharacterDataUndefined: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BitSieve: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.MutableBigInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigInteger$UnsafeHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.ValueConversions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.WrongMethodTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.empty.Empty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.VerifyType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.NoSuchFieldError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.BytecodeDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.DirectMethodHandle$EnsureInitialized: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.DirectMethodHandle$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodType$ConcurrentWeakInternSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.logging.LoggingSupport$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StringWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.GeneralSecurityException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.MessageDigestSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.DigestException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinTask: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArraysParallelSortHelpers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Tripwire: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayPrefixHelpers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.DoubleSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$DoubleStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$StreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IntSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$IntStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.OptionalLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.LongSummaryStatistics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$LongStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.AbstractExecutorService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.RejectedExecutionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$InnocuousForkJoinWorkerThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ForkJoinPool$EmptyTask: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StrictMath$RandomNumberGeneratorHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.InvalidMarkException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Comparators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.Policy$UnsupportedEmptyCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.PolicySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DecimalFormatSymbolsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.IllegalFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.TemporalQueries: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.ZoneId: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.NumberFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DateFormatSymbols: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.LocaleServiceProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.BreakIteratorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.CollatorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DateFormatProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.DateFormatSymbolsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.spi.NumberFormatProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CurrencyNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.LocaleNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.TimeZoneNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CalendarDataProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.spi.CalendarNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.spi.CalendarProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.cldr.CLDRLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$Control: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.HostLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.FallbackLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.TreeSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleObjectCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Format: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.SimpleDateFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.ParallelListResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.OpenListResourceBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.TimeZoneNamesBundle: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.BaseLocale$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.LocaleEquivalentMaps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.CoderResult$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$20: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$21: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$22: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$23: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$17: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$18: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$19: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$13: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$14: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$15: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.regex.Pattern$CharPropertyNames$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.Charset$ExtendedProviderHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ASCIICaseInsensitiveComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Classes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.StandardCharsets$Aliases: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.attribute.UserPrincipalLookupService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.DeleteOnExitHook$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.WinNTFileSystem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ProviderNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractSpliterator$HoldingConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.BooleanSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.GenericSignatureFormatError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.IntSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.BottomSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.LongSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.VoidDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.CharSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.DoubleSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.ByteSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.ShortSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.generics.tree.FloatSignature: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateExpiredException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateNotYetValidException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateParsingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CRLException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertificateFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownServiceException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MessageHeader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ContentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.UnknownContentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLConnection$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.MagicAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.AccessorGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ClassFileAssembler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.Label: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ByteVectorFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.reflect.MalformedParameterizedTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalBlockingModeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.MembershipKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.MulticastSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainDatagramSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultDatagramSocketImplFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AsynchronousCloseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PlainSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocksSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsSelectorProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NoSuchPaddingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ShortBufferException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.InvalidParameterSpecException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CipherSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ExemptionMechanismException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NullCipher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.ProviderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurityManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoAllPermission: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.URLClassLoader$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.JavaUtilJarAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.jar.JarException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpCookie$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.Inflater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipFile$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.charset.StandardCharsets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ArrayDeque: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessBuilder$Redirect$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ProcessImpl$LazyPattern: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystemNotFoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.Bits$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.LockSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CertInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AlgorithmId: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.IssuerAlternativeNameExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.PolicyMappingsExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.SubjectAlternativeNameExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.Extension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.GeneralNames: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.X509Factory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.OIDMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DerOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateValidity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.PKIXExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.HexDumpEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Pem: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AttributeNameEnumeration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.KeyUsageExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Subject$AuthPermissionHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ResourcesMgr: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.JarIndex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ExtensionDependency: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.InvalidJarIndexException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.AbstractSequentialList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.Launcher$BootClassPathHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.Gregorian$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DontCareFieldPosition: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.JulianCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.JulianCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.TimeZoneNameUtility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Clock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.AbstractCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.BasicXmlPropertiesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AsynchronousFileChannel: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.OverlappingFileLockException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.NativeThread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Util$BufferCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileDispatcherImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.IOUtil$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileStore: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileSystemProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.Channels: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InterfaceAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.NetworkInterface$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultInterface: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.PortConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InheritableThreadLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.ProviderList$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.DataFormatException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.SignedMutableBigInteger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ExceptionInInitializerError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.Wrapper$Format: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.Invokers$Lazy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.invoke.util.ValueConversions$WrapperCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Label: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$T: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$BindCaller$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$SpeciesData$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.MethodHandleImpl$ArrayAccessor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.BoundMethodHandle$Factory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.BootstrapMethodError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ProxyGenerator$ConstantPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.JCAUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ExecutionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.TimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CancellationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Streams$AbstractStreamBuilderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser$GrantEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser$PermissionEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PolicyUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.PolicyParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Currency$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Currency$CurrencyNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$UnsafeHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$StringBuilderHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.math.BigDecimal$LongOverflow: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.ZoneRulesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$AvailableCalendarTypes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.BuddhistCalendar: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Calendar$CalendarAccessControlContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DigitList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat$FastPathData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.DecimalFormat$DigitArrays: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.CharacterIteratorFieldDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.FormattedFloatingDecimal$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$Control$CandidateListCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.Collator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.LocaleDataMetaInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.text.CalendarBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$RBClassLoader: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.resources.LocaleData$SupplementaryResourceBundleControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$FCDTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NormTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$AuxTrieImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UnicodeSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$DecomposeArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NextCCArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$PrevArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$NextCombiningArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$RecomposeArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerImpl$ComposePartArgs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.ICUData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UTF16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacterIterator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacterProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.RangeValueIterator$Element: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsNextTrueStarter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsNextNFDSafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsPrevNFDSafe: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.Utility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.NormalizerBase$IsPrevTrueStarter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.US_ASCII: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandomSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom$StrongPatternHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SecureRandom$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SecureRandom: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ExpiringCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.DefaultFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystems$DefaultFileSystemHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$DefaultInstanceHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.FieldAccessorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ClassDefiner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.UTF8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.ByteVectorImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.reflect.'annotation'.AnnotationInvocationHandler$UnsafeAccessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.CRC32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.ZipUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.Base64: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestEntryVerifier$SunProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.StandardSocketOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainDatagramSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ResourceManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DatagramPacket$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.DefaultDatagramSocketImplFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.HttpConnectSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainSocketImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PlainSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ProxySelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SocketTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SelectorProviderImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.ExemptionMechanismSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.NullCipherSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurity$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JceSecurityManager$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoAllPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.AlgorithmParametersSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ProgressMonitor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestDigester$Entry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$Sync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$FairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantLock$NonfairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Cache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509CRLImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRL: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.pkcs.ParsingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.X509CertificatePair: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X500Name$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DerIndefLenConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.SignatureSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ByteArrayLexOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ByteArrayTagOrder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CertificateVersion: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.GeneralSubtrees: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.CharacterEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ResourcesMgr$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ExtensionInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.JarFilter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.LocalGregorianCalendar$Date: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.calendar.ZoneInfoFile$Checksum: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.Duration$DurationUnits: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.IsoChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.IsoFields: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.Parsed: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.PropertiesDefaultHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.FileKey: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.net.SocketFlow: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NotYetBoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AlreadyBoundException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NotYetConnectedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.UnsupportedAddressTypeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.UnresolvedAddressException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketOptionRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ExtendedOptionsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Net$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalSelectorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ClosedSelectorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetHooks: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AlreadyConnectedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ConnectionPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.NoConnectionPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.CancelledKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$AcceptAllFilter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.spi.FileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.CopyMoveHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.TempFileHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.InetAddressCachePolicy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.PortConfig$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.ByteVector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Item: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Frame: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Edge: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ProxyGenerator$ConstantPool$Entry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jca.JCAUtil$CachedSecureRandomHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SpinedBuffer$OfPrimitive: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Tripwire: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators$ArrayBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.AbstractSpinedBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.PipelineHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.DistinctOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SortedOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.MatchOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ReduceOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ForEachOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.SliceOps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.EnumMap$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.FutureTask$WaitNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.LinkedBlockingQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnrecoverableKeyException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.UnrecoverableEntryException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStoreSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStore$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyStore$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.Password: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.StreamTokenizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeFormatterBuilder$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeTextProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.CopyOnWriteArrayList: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.temporal.TemporalAdjusters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.ResourceBundle$RBClassLoader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.Trie$DefaultGetFoldingOffset: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.ICUBinary: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UCharacter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SecureRandom$SeederHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.MimeTable$DefaultInstanceHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.ManifestDigester$Position: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.InetAddressContainer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.ConnectionResetException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.AbstractPlainSocketImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.Authenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsSelectorImpl$FdMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.JarVerifier$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.DefaultProgressMeteringPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidatorException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.KeyUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.pkcs.PKCS7$SecureRandomHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AlgorithmDecomposer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraint: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.IllegalMonitorStateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRLEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.CRLExtensions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.NullCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.AVAComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.DestroyFailedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.X509Key: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.SubjectDomainCombiner$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.ChronoLocalDateImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.helpers.DefaultHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.InputSource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.SAXParserImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.SAXParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.XMLStreamException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$FairSync: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.SocketOptionRegistry$LazyInitialization: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ExtendedSocketOption: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.net.ExtendedSocketOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.CopyMoveHelper$CopyOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.Files$FileTypeDetectors$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.TempFileHelper$PosixPermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.objectweb.asm.Context: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.FindOps$FindSink$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.ReduceOps$Box: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$IntSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfInt: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$DoubleSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfRef: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfDouble: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$LongSpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$SpinedNodeBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.stream.Nodes$EmptyNode$OfLong: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors$DefaultThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.Executors$PrivilegedThreadFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.Ser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.ThaiBuddhistChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.MinguoChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.JapaneseChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.ZoneName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.format.DateTimeTextProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.zone.TzdbZoneRulesProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.normalizer.UBiDiProps: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate$Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SunEntries: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractFileSystemProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsSecurity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsUriSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.FileSystemAlreadyExistsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsSecurityDescriptor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileCopy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ProviderMismatchException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsLinkSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileAttributeViews: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.MembershipRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.PortUnreachableException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramDispatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser$GrantEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.validator.KeyStores: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.HttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.AbstractOwnableSynchronizer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.InvalidKeySpecException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.Policy$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.ParserSAX: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ExtendedSocketOption$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.DefaultFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.attribute.PosixFilePermissions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ThreadPoolExecutor$AbortPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$Transferer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$WaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$LifoWaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$TransferStack: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$FifoWaitQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.SynchronousQueue$TransferQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.UCompactIntArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.IntHashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.CollatorUtilities: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG$Blocking: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.NativePRNG$NonBlocking: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.SunEntries$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.ThreadPool$DefaultThreadPoolHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractAclFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsUserPrincipals: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.NativeBuffers: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstFile: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$FirstStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$VolumeInformation: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$DiskFreeSpace: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$AclInformation: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$Account: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$CompletionStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$BackupResult: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsNativeDispatcher$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory$Flags: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsChannelFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Cancellable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractUserDefinedFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystem$LookupService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsPathParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.Globs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractPath: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractBasicFileAttributeView: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DatagramSocketAdaptor$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.x509.NetscapeCertTypeExtension: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.UntrustedChecker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CertSelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.PKIXCertPathChecker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CollectionCertStoreParameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetworkClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.PosterOutputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CacheRequest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CookieHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.HeaderParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.spec.ECPoint: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Pair: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Attrs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.util.xml.impl.Input: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXNotRecognizedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <jdk.internal.org.xml.sax.SAXNotSupportedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.RegistryFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.text.ComposedCharIter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.cs.Surrogate$Generator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.PendingIoCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsAsynchronousFileChannelImpl$DefaultIocpHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Invoker: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractWatchService: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.WindowsFileSystem$LookupService$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.PKIX: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AnchorCertificates: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.UntrustedCertificates: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilderSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathBuilder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathHelperImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidatorSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertPathValidator$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertStoreException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.CertStore$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ResponseCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.CacheResponse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.DigestAuthentication$Parameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.SecureCacheResponse: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetProperties: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.EmptyInputStream: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStream$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.HttpCapture$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractFileTypeDetector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.RegistryFileTypeDetector$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.ConcurrentLinkedQueue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Invoker$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ShutdownChannelGroupException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.Iocp$CompletionStatus: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.concurrent.LinkedBlockingDeque: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.ClosedWatchServiceException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.fs.AbstractPoller: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.file.StandardWatchEventKinds: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.PKIX$CertStoreComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.AnchorCertificates$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.UntrustedCertificates$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.certpath.CertPathHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.cert.X509CRLSelector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.DigestAuthentication$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.AuthCacheValue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.NetProperties$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.Negotiator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.NegotiateAuthentication$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.http.KeepAliveStreamCleaner$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.www.protocol.http.AuthCacheImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.DefaultAsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.WindowsAsynchronousChannelProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.IllegalChannelGroupException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.AcceptPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.ReadPendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.WritePendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.nio.channels.InterruptedByTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StackOverflowError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.LambdaMetafactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.invoke.LambdaConversionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.VerifyError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.UnknownError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassCircularityError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Finalizer$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ref.Finalizer$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.InstantiationError: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractInstant: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.DateTimeFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Chronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Instant: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutableDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISODateTimeFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.FieldUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.DateTimeFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.UTCProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DefaultNameProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.FormatUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeZone$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.LocalTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DurationField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISODateTimeFormat$Constants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeUtils$SystemMillisProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BaseDateTime: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateMidnight: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.YearMonthDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.TimeOfDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ConverterManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.AssembledChronology$Fields: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.ISOYearOfEraDateTimeField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DateTimeZoneBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.BaseChronology: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BaseLocal: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Period: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutablePeriod: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MutableInterval: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BasePartial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.AbstractReadableInstantFieldProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.DateConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableInstantConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.StringConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadablePartialConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadablePeriodConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.LongConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableIntervalConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.NullConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.CalendarConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.ReadableDurationConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.MillisDurationField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.DateTimeZoneBuilder$RuleSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractPartial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.ISOPeriodFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractInterval: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.field.AbstractPartialFieldProperty: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.convert.AbstractConverter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractPeriod: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.BasePeriod$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.PeriodFormatterBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.base.AbstractDuration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.chrono.BasicChronology$HalfdayField: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.tz.ZoneInfoCompiler$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.DateTimeConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.format.PeriodFormat: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.MonthDay: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.Partial: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.joda.time.YearMonth: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.ParseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.Args: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.TextUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.HttpException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.UnsupportedHttpVersionException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.ProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.MalformedChunkCodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.entity.AbstractHttpEntity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicHeaderValueParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicLineFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HTTP: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.LangUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.Consts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.EntityUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicHeaderValueFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.entity.BasicHttpEntity: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.Asserts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.SyncBasicHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.BasicHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.AbstractHttpParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpProtocolParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpConnectionParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.params.HttpParamConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.ConnectionConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.MessageConstraints$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.SocketConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.HttpHeaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultBHttpServerConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.ConnSupport: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpResponseWriterFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpRequestParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.NetUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.BasicLineParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpRequestFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.AbstractHttpMessage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.message.HeaderGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.SocketHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.AbstractHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpRequestWriterFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.io.DefaultHttpResponseParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpResponseFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpServerConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.SocketHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.AbstractHttpClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.NoConnectionReuseStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultBHttpClientConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.pool.BasicConnPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.pool.BasicConnFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.SocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.DefaultSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.security.KeyManagementException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLContextSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLEngine: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLParameters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.SSLSocket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.X509Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.DefaultServerSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.Certificate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateExpiredException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateNotYetValidException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.X509Certificate$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.cert.CertificateEncodingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.config.RegistryBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestExpectContinue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.EncodingUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestContent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.UriHttpRequestHandlerMapper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.UriPatternMatcher: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ChainBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpDateGenerator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseContent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpRequestExecutor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpCoreContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.BasicHttpContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.SyncBasicHttpContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestDate: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.BasicHttpProcessor: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestUserAgent: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.RequestTargetHost: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseServer: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.ResponseConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.protocol.HttpProcessorBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.ExceptionUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.util.CharsetUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.TypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.Gson: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonElement: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeWriter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Excluder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.reflect.TypeToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.DateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TimeTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.Gson$FutureTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Streams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Primitives: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonNull: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.stream.JsonReader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.JsonReaderInternalAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonObject: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonArray: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeWriter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.JsonTreeReader$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.$Gson$Types: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.$Gson$Preconditions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$23: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$24: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$25: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$26: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$20: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$21: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$22: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$13: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$14: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$15: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$10: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$11: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$16: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$17: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$18: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$19: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$8: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$7: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$9: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$6: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.TypeAdapters$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap$Node: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.LinkedTreeMap$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.UnsafeAllocator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.UUID$Holder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.internal.UnsafeAllocator$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.JsonParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.DefaultDateTypeAdapter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.GsonBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.google.gson.stream.JsonScope: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AUTH: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthenticationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.MalformedChallengeException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthSchemeRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.AuthState: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.InvalidCredentialsException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.auth.params.AuthParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.CircularRedirectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.RedirectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.ClientProtocolException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.AuthSchemes: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.CookieSpecs: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.config.RequestConfig$Builder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.entity.EntityBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URLEncodedUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.zip.Deflater: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.InputMismatchException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.scheme.SchemeRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ConnectTimeoutException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.AbstractExecutionAwareRequest: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.CloneUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpDelete: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpRequestBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpGet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpHead: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPatch: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPost: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpPut: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.HttpTrace: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.methods.RequestBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URIBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.util.InetAddressUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.NonRepeatableRequestException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.AuthPolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.CookiePolicy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.HttpClientParamConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.params.HttpClientParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieSpecRegistry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.MalformedCookieException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.HttpClientContext: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAcceptEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAddCookies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogConfigurationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestClientConnControl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestExpectContinue: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicAuthCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultSchemePortResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseContentEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.protocol.ResponseProcessCookies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils$DateFormatHolder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.DateUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.HttpClientUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.JdkIdn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.Punycode: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.Rfc3492Idn: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.client.utils.URIUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.net.ConnectException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.MultihomePlainSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnPerRouteBean: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnManagerParams$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnManagerParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.params.ConnRouteParams: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.routing.BasicRouteDirector: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.scheme.PlainSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.socket.PlainConnectionSocketFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.SSLContexts: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.SSLContextBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.TrustManagerFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.TrustManagerFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.KeyManagerFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.net.ssl.KeyManagerFactory$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.conn.ssl.TrustSelfSignedStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieIdentityComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookiePathComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.cookie.CookieRestrictionViolationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.AuthSchemeBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.BasicScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.RFC2617Scheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Base64: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.StringUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.EncoderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.DecoderException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.BasicSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.DigestScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.DigestSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.GGSSchemeBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.ietf.jgss.GSSManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSManagerImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSManagerImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.LoginException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.Configuration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.security.auth.callback.TextCallbackHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.SunNativeProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.Configuration$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.login.ConfigurationSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.RefreshFailedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Config: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.util.PendingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.SunNativeProvider$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.GSSNameElement: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.SunProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.Krb5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.KrbServicePermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.Ticket: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.TicketFlags: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.HostAddresses: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.AuthorizationData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.CredentialsCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Credentials$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.CredentialsUtil: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.EncryptedData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.Confounder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes128: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.ArcFourHmac: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes256: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KrbServiceLocator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfiguration: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.SCDynamicStoreConfig: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.Krb5Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.wrapper.Krb5Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.ServiceCreds: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.PAData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.APOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.HostAddress: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Nonce: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LoginOptions: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCRep: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.EncKDCRepPart: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.AuthorizationDataEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes256CtsHmacSha1EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Des3CbcHmacSha1KdEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcCrcEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcMd5EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.NullEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Aes128CtsHmacSha1EType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.ArcFourHmacEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.dk.Des3DkCrypto: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.NamingException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.spi.NamingManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfiguration$Options: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.SCDynamicStoreConfig$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KdcComm$KdcAccessibility: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KdcComm$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KerberosSecrets: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.SubjectComber: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.InitialToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.KrbDelegationPermissionCollection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.GSSToken: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ETypeInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ETypeInfo2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.KrbKdcRep: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KDCReq: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ReplayCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LocalSeqNumber: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ccache.FileCredentialsCache$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesCbcEType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.crc32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.dk.DkCrypto: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.KeyUsage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.MD4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.SecretKeyFactorySpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.CompositeName: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.CannotProceedException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.NoInitialContextException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.ResourceManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.directory.SearchControls: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.OptionsImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.net.dns.ResolverConfigurationImpl$AddressChangeListener: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.RsaMd5DesCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.RsaMd5CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesMacKCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.Crc32CksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.DesMacCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.NetClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.jgss.krb5.Krb5Token: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.ReplayCache$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.rcache.MemoryCache: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.LastReqEntry: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.crypto.MacSpi: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.MD4$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.provider.ByteArrayAccess: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.InvalidNameException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.spi.ResolveResult: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper12: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <javax.naming.ConfigurationException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.ResourceManager$AppletParameter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.rcache.DflCache$Storage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.sun.naming.internal.VersionHelper12$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.security.krb5.internal.KrbCredInfo: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.HttpAuthenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.KerberosScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.KerberosSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NegotiateScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NegotiateSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.NTLMSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.SPNegoScheme: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.auth.SPNegoSchemeFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.CloseableHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.BasicClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SchemeRegistryFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.IgnoreSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicCookieStore: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ProxyAuthenticationStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicCredentialsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultRedirectStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultRedirectHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965Spec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.IgnoreSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpAuthenticator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.ConnectionShutdownException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109Spec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.RedirectLocations: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BestMatchSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.CookieSpecBase: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicCommentHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicSecureHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicPathHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SystemDefaultDnsResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultClientConnection: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.BasicDomainHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemClock: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.AutoRetryHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpClientBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.NoopUserTokenHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.execchain.Proxies: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.ManagedHttpClientConnectionFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.DefaultHttpResponseParserFactory: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.BasicResponseHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ContentEncodingHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DecompressingHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.DefaultBackoffStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.FutureRequestExecutionMetrics: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.HttpClients: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.LaxRedirectStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.NullBackoffStrategy: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.ProxyClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.StandardHttpRequestRetryHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.client.SystemDefaultHttpClient: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.PoolingClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.BasicHttpClientConnectionManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.IdleConnectionHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.InMemoryDnsResolver: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.DateParseException: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.http.impl.cookie.DateUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.Log4JLogger: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.WeakHashtable: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Handler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Logger$SystemLoggerHelper: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Formatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.LogManager$Beans: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.Logging: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.util.logging.ErrorManager: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.ServletContextCleaner: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.NoOpLog: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.LogFactoryImpl: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.impl.LogFactoryImpl$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogSource: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Base32: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.BinaryCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.binary.Hex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.CharEncoding: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.digest.DigestUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.AbstractCaverphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.BeiderMorseEncoder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.Languages$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.bm.ResourceConstants: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Caverphone1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.ColognePhonetic: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.DoubleMetaphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Metaphone: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.RefinedSoundex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.SoundexUtils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.language.Soundex: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.BCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.RFC1522Codec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.QCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.QuotedPrintableCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.Utils: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.net.URLCodec: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.codec.StringEncoderComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionGroup: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionValidator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.BasicParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Parser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Options: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.CommandLine: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.Util: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.TypeHandler: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.PatternOptionBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.OptionBuilder: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.GnuParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.HelpFormatter: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.HelpFormatter$OptionComparator: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.cli.PosixParser: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <com.dosarrest.alfred.Alfred$5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <sun.misc.ObjectInputFilter$Config$lambda_static_0__1: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.io.ObjectInputStream$setValidator__2: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_7f2d2d5b_1__3: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_b5a61975_1__4: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.time.chrono.AbstractChronology$lambda_static_2241c452_1__5: void <init>()> via: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Unable to create LogFactory instance.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Unable to create LogFactory instance.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r73 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r73 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r68 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r32 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r34)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r19 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r18)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r69 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r26)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[BAD CL TREE] ", r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z8 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r64 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r66)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z7 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r54 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r57)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)>(r67)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r72 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z6 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r46)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z9 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("Unable to create LogFactory instance.")
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r73 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] was loaded by the boot classloader")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements LogFactory but was loaded by an incompatible classloader.")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CUSTOM LOG FACTORY] ")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r9.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not implement LogFactory.")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CUSTOM LOG FACTORY] ")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r25 = virtualinvoke $r22.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CUSTOM LOG FACTORY] SecurityException thrown whilst trying to determine whether the compatibility was caused by a classloader conflict: ")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r23.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r19 = virtualinvoke $r16.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CUSTOM LOG FACTORY] LinkageError thrown whilst trying to determine whether the compatibility was caused by a classloader conflict: ")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r17.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] was loaded by the boot classloader")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[CUSTOM LOG FACTORY] ", $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[CUSTOM LOG FACTORY] ", $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Class: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.apache.commons.logging.LogFactory", 0, $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.apache.commons.logging.LogFactory", 0, $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r8)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r8)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] LogFactory class cannot be loaded by classloader which loaded the custom LogFactory implementation. Is the custom factory in the right classloader?")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] LogFactory class cannot be loaded by classloader which loaded the custom LogFactory implementation. Is the custom factory in the right classloader?")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] was loaded by the boot classloader")
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>("[CUSTOM LOG FACTORY] ", $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> via: $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.apache.commons.logging.LogFactory", 0, $r1)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r8)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21)
<org.apache.commons.logging.LogFactory: boolean implementsLogFactory(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[CUSTOM LOG FACTORY] LogFactory class cannot be loaded by classloader which loaded the custom LogFactory implementation. Is the custom factory in the right classloader?")
<org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$3: java.lang.Object run()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$3: void <init>(java.lang.ClassLoader,java.lang.String)> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$3: void <init>(java.lang.ClassLoader,java.lang.String)>(r1, r2)
<org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$4: java.lang.Object run()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$4: void <init>(java.lang.ClassLoader,java.lang.String)> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$4: void <init>(java.lang.ClassLoader,java.lang.String)>(r1, r2)
<org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)> calls: <org.apache.commons.logging.LogFactory$5: java.lang.Object run()> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)> calls: <org.apache.commons.logging.LogFactory$5: void <init>(java.net.URL)> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$5: void <init>(java.net.URL)>(r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)>(r0, r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(double)> via: $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with priority ")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r45 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Properties file found at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r54.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(double)> via: $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with priority ")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r53)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" overrides file at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(double)> via: $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with priority ")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r32 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Properties file at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r55.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(double)> via: $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with priority ")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r53)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not override file at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(double)> via: $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with priority ")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r20 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Properties file at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r56.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' found.")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r11 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] No properties file of name \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r57.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> via: $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> via: $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r53)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' found at \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LOOKUP] Properties file of name \'")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r58.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)>(r0, r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Double: void <clinit>()> via: d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r50)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r50)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Double: void <clinit>()> via: d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r42)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r42)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("SecurityException thrown while trying to find/read config files.")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("SecurityException thrown while trying to find/read config files.")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)> via: $r2 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String)>(r0, r1)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Properties getProperties(java.net.URL)>(r16)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Double: double parseDouble(java.lang.String)> via: d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r43)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z3 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r50)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <java.lang.Double: double parseDouble(java.lang.String)> via: d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r42)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r30)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z4 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("SecurityException thrown while trying to find/read config files.")
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z5 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r14)
<org.apache.commons.logging.LogFactory: java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$6: java.lang.Object run()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> calls: <org.apache.commons.logging.LogFactory$6: void <init>(java.lang.String,java.lang.String)> via: specialinvoke $r0.<org.apache.commons.logging.LogFactory$6: void <init>(java.lang.String,java.lang.String)>(r1, r2)
<org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> calls: <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)> via: $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0)
<org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.diagnostics.dest", null)
<org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> calls: <java.io.FileOutputStream: void <init>(java.lang.String,boolean)> via: specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r0, 1)
<org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> calls: <java.io.PrintStream: void <init>(java.io.OutputStream)> via: specialinvoke $r2.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r1)
<org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.diagnostics.dest", null)
<org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> calls: <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> via: $r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("org.apache.commons.logging.diagnostics.dest", null)
<org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> calls: <java.io.PrintStream: void print(java.lang.String)> via: virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r1)
<org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> calls: <java.io.PrintStream: void println(java.lang.String)> via: virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r3)
<org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> calls: <java.io.PrintStream: void flush()> via: virtualinvoke $r5.<java.io.PrintStream: void flush()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ENV] Extension directories (java.ext.dir): ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ENV] Application classpath (java.class.path): ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r5.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ENV] Security forbids determining the classloader for ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r26.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" was loaded via classloader ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ENV] Class ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ENV] Ancestry of classloader which loaded ")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r20.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.System: void <clinit>()> via: $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dir")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dir")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r4)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r4)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.System: void <clinit>()> via: $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ENV] Security setting prevent interrogation of system classpaths.")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ENV] Security setting prevent interrogation of system classpaths.")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r12 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r10)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r12 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r10)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r12)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r12)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>($r24, $r12)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>($r24, $r12)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.ext.dir")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r4)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <java.lang.System: java.lang.String getProperty(java.lang.String)> via: $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("[ENV] Security setting prevent interrogation of system classpaths.")
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> via: $r12 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r10)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r29)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r17 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r12)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)
<org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> calls: <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)>($r24, $r12)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" == \'")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r11.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Security forbids determining the system classloader.")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r21.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r9 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BOOT")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" --> ")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" --> SECRET")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (SYSTEM) ")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>(java.lang.String)> via: specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ClassLoader tree:")
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader: void <clinit>()> via: $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r18)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()> via: $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r24)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: $r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r25)
<org.apache.commons.logging.LogFactory: void logHierarchy(java.lang.String,java.lang.ClassLoader)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(int)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0)
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@")
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.System: void <clinit>()> via: $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.Object: void <clinit>()> via: $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> calls: <java.lang.System: int identityHashCode(java.lang.Object)> via: $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.Class: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.Throwable: java.lang.String getMessage()> via: $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>()
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.Thread: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.NoClassDefFoundError: void <init>(java.lang.String)> via: specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> calls: <java.lang.Class: java.lang.Class forName(java.lang.String)> via: $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: void access$000(java.lang.String)> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(r0)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.StringBuffer: java.lang.String toString()> via: $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> via: $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[LogFactory from ")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.StringBuffer: void <init>()> via: specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r13)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: r14 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r11)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>($r15)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <java.lang.Object: void <clinit>()> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("BOOTSTRAP COMPLETED")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r13 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> via: $r1 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>($r13)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)> via: r14 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>($r11)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()> via: $r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)> via: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.Class class$(java.lang.String)>("org.apache.commons.logging.LogFactory")
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>($r15)
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()> via: $r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()> via: $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()
<org.apache.commons.logging.LogFactory: void <clinit>()> calls: <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)> via: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>("BOOTSTRAP COMPLETED")
Found source being called: <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>
Found source being called: <org.apache.commons.logging.LogFactory$1: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.LogFactory$2: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.LogFactory$3: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.LogFactory$4: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.LogFactory$5: java.lang.Object run()>
Found source being called: <org.apache.commons.logging.LogFactory$6: java.lang.Object run()>
Now we build call graphs for class: org.apache.http.client.entity.LazyDecompressingInputStream
Now we build call graphs for class: org.apache.http.conn.ssl.SSLConnectionSocketFactory
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: org.apache.http.conn.ssl.SSLConnectionSocketFactory getSocketFactory()> calls: <org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> via: specialinvoke $r0.<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r1, $r2)
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: org.apache.http.conn.ssl.SSLConnectionSocketFactory getSocketFactory()> calls: <java.lang.Object: void <clinit>()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: org.apache.http.conn.ssl.SSLConnectionSocketFactory getSocketFactory()> calls: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()> via: $r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> via: $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> via: specialinvoke r0.<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, null, null, r5)
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> via: $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL context")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <clinit>()> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL socket factory")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <java.lang.Object: void <init>()> via: specialinvoke r0.<java.lang.Object: void <init>()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)> calls: <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)> via: $r2 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "SSL socket factory")
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()> via: specialinvoke $r0.<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()> via: specialinvoke $r1.<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>()
<org.apache.http.conn.ssl.SSLConnectionSocketFactory: void <clinit>()> calls: <org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()> via: specialinvoke $r2.<org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>()
Loaded 10425 methods from JAR files. 

Found 35 Source Methods.
Found 41 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
