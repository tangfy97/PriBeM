***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[spark] Done!
Value: $r2 flows here: $r2 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>()
Value: $r4 flows here: $r4 = virtualinvoke r1.<java.io.File: java.lang.String getName()>()
Value: $r4 flows here: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
Value: $r2 flows here: specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r7)
Now we build call graphs for class: org.gbif.dwc.text.ArchiveFile
Global flow here: <org.gbif.dwc.text.ArchiveFile: void addField(org.gbif.dwc.text.ArchiveField)> calls: <org.gbif.dwc.text.ArchiveField: org.gbif.dwc.terms.ConceptTerm getTerm()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveField: org.gbif.dwc.terms.ConceptTerm getTerm()>() in <org.gbif.dwc.text.ArchiveFile: void addField(org.gbif.dwc.text.ArchiveField)> ==> <org.gbif.dwc.text.ArchiveField: org.gbif.dwc.terms.ConceptTerm getTerm()>
Global flow here: <org.gbif.dwc.text.ArchiveFile: org.gbif.file.CSVReader getCSVReader()> calls: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> via: STATIC edge: $r1 = staticinvoke <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)>(r0) in <org.gbif.dwc.text.ArchiveFile: org.gbif.file.CSVReader getCSVReader()> ==> <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)>
Global flow here: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> calls: <org.gbif.dwc.text.Archive: java.io.File getLocation()> via: VIRTUAL edge: r13 = virtualinvoke $r12.<org.gbif.dwc.text.Archive: java.io.File getLocation()>() in <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> ==> <org.gbif.dwc.text.Archive: java.io.File getLocation()>
Global flow here: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> calls: <org.gbif.dwc.text.Archive: java.io.File getLocation()> via: VIRTUAL edge: $r8 = virtualinvoke $r7.<org.gbif.dwc.text.Archive: java.io.File getLocation()>() in <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> ==> <org.gbif.dwc.text.Archive: java.io.File getLocation()>
Global flow here: <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)> calls: <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)> via: STATIC edge: $r2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>(r1) in <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)> ==> <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)> calls: <org.apache.commons.lang3.StringUtils: java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)> via: STATIC edge: $r2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)>(r1, null) in <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)> ==> <org.apache.commons.lang3.StringUtils: java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)>
Start traversal for source: <java.io.File: java.lang.String getName()>...
Starting from source: 
0: getName
1: getLocationFileSorted
Flows from source is finished.
Start traversal for source: <java.io.File: java.io.File getParentFile()>...
Starting from source: 
0: getParentFile
1: getLocationFileSorted
Flows from source is finished.
Value: $r2 flows here: $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
Value: $r2 flows here: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>($r2)
Now we build call graphs for class: org.gbif.file.CSVReaderFactory
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()> via: VIRTUAL edge: $r6 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()>() in <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>() in <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()> via: VIRTUAL edge: $r4 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>() in <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>() in <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()> via: VIRTUAL edge: $r26 = virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>() in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()> via: VIRTUAL edge: $r21 = virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>() in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()> via: VIRTUAL edge: $r17 = virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>() in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)>(r33) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)>(r32) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)>($r4) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)>(r3) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>($r2) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.file.CSVReader: void close()> via: VIRTUAL edge: virtualinvoke $r7.<org.gbif.file.CSVReader: void close()>() in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.file.CSVReader: void close()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.file.CSVReader: void close()> via: VIRTUAL edge: virtualinvoke $r13.<org.gbif.file.CSVReader: void close()>() in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.file.CSVReader: void close()>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)> via: STATIC edge: $r7 = staticinvoke <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)>(r1, r3, r32, null, 1) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)>
Global flow here: <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> calls: <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)> via: STATIC edge: $r13 = staticinvoke <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)>(r1, r3, r32, r33, 0) in <org.gbif.file.CSVReaderFactory: org.gbif.dwc.text.ArchiveFile buildArchiveFile(java.io.File,java.lang.String)> ==> <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)>
Global flow here: <org.gbif.file.CSVReaderFactory: int consistentRowSize(org.gbif.file.CSVReader)> calls: <org.gbif.file.CSVReader: boolean hasNext()> via: VIRTUAL edge: $z1 = virtualinvoke r0.<org.gbif.file.CSVReader: boolean hasNext()>() in <org.gbif.file.CSVReaderFactory: int consistentRowSize(org.gbif.file.CSVReader)> ==> <org.gbif.file.CSVReader: boolean hasNext()>
Global flow here: <org.gbif.file.CSVReaderFactory: int consistentRowSize(org.gbif.file.CSVReader)> calls: <org.gbif.file.CSVReader: java.lang.String[] next()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<org.gbif.file.CSVReader: java.lang.String[] next()>() in <org.gbif.file.CSVReaderFactory: int consistentRowSize(org.gbif.file.CSVReader)> ==> <org.gbif.file.CSVReader: java.lang.String[] next()>
Global flow here: <org.gbif.file.CSVReaderFactory: java.lang.String detectEncoding(java.io.File)> calls: <org.gbif.utils.file.CharsetDetection: java.nio.charset.Charset detectEncoding(java.io.File,int)> via: STATIC edge: $r1 = staticinvoke <org.gbif.utils.file.CharsetDetection: java.nio.charset.Charset detectEncoding(java.io.File,int)>(r0, 16384) in <org.gbif.file.CSVReaderFactory: java.lang.String detectEncoding(java.io.File)> ==> <org.gbif.utils.file.CharsetDetection: java.nio.charset.Charset detectEncoding(java.io.File,int)>
Global flow here: <org.gbif.file.CSVReaderFactory: java.lang.Character likelyQuoteChar(org.gbif.file.CSVReader)> calls: <org.gbif.file.CSVReader: boolean hasNext()> via: VIRTUAL edge: $z2 = virtualinvoke r0.<org.gbif.file.CSVReader: boolean hasNext()>() in <org.gbif.file.CSVReaderFactory: java.lang.Character likelyQuoteChar(org.gbif.file.CSVReader)> ==> <org.gbif.file.CSVReader: boolean hasNext()>
Global flow here: <org.gbif.file.CSVReaderFactory: java.lang.Character likelyQuoteChar(org.gbif.file.CSVReader)> calls: <org.gbif.file.CSVReader: java.lang.String[] next()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<org.gbif.file.CSVReader: java.lang.String[] next()>() in <org.gbif.file.CSVReaderFactory: java.lang.Character likelyQuoteChar(org.gbif.file.CSVReader)> ==> <org.gbif.file.CSVReader: java.lang.String[] next()>
Start traversal for source: <java.io.File: java.lang.String getAbsolutePath()>...
Starting from source: 
0: getAbsolutePath
1: buildArchiveFile
2: build
Flows from source is finished.
Value: $r3 flows here: $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getParent()>()
Value: $r6 flows here: $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>()
Value: $r6 flows here: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)
Value: $r3 flows here: specialinvoke $r59.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r9)
Now we build call graphs for class: org.gbif.dwc.tools.CoreIdRenamer
Value: $r13 flows here: $r13 = virtualinvoke $r11.<java.io.File: java.io.File getParentFile()>()
Value: $r13 flows here: staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13)
Now we build call graphs for class: org.gbif.dwc.text.DwcaWriter
Value: $r8 flows here: $r8 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>()
Value: $r8 flows here: interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8)
Now we build call graphs for class: org.gbif.dwc.text.ArchiveFactory$MetaHandler
Value: $r6 flows here: $r6 = virtualinvoke $r4.<java.net.URL: java.io.InputStream openStream()>()
Value: $r6 flows here: $r7 = virtualinvoke $r2.<org.gbif.metadata.MetadataFactory: org.gbif.metadata.BasicMetadataImpl read(java.io.InputStream)>($r6)
Value: $r7 flows here: $r7 = "no archive file"
Value: $r7 flows here: $r7 = virtualinvoke $r4.<java.io.File: java.io.File getAbsoluteFile()>()
Value: $r7 flows here: $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
Now we build call graphs for class: org.gbif.dwc.text.Archive
Global flow here: <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: void setArchive(org.gbif.dwc.text.Archive)> via: VIRTUAL edge: virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: void setArchive(org.gbif.dwc.text.Archive)>(r1) in <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: void setArchive(org.gbif.dwc.text.Archive)>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)>($r23, $r25, $r26, $i2, $r29, $r30, $r31, $i3) in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)>($r3, $r6, $r8, $i0, $r13, $r15, $r17, $i1) in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.utils.file.FileUtils: void sort(java.io.File,java.io.File,java.lang.String,int,java.lang.String,java.lang.Character,java.lang.String,int)>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r3 = virtualinvoke $r2.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r5 = virtualinvoke $r4.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()> via: VIRTUAL edge: $r8 = virtualinvoke $r7.<org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveField: java.lang.Integer getIndex()> via: VIRTUAL edge: $r11 = virtualinvoke $r10.<org.gbif.dwc.text.ArchiveField: java.lang.Integer getIndex()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveField: java.lang.Integer getIndex()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()> via: VIRTUAL edge: $r10 = virtualinvoke $r9.<org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()> via: VIRTUAL edge: $r13 = virtualinvoke $r12.<org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getFieldsTerminatedBy()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()> via: VIRTUAL edge: $r15 = virtualinvoke $r14.<org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Character getFieldsEnclosedBy()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getLinesTerminatedBy()> via: VIRTUAL edge: $r17 = virtualinvoke $r16.<org.gbif.dwc.text.ArchiveFile: java.lang.String getLinesTerminatedBy()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getLinesTerminatedBy()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()> via: VIRTUAL edge: $r19 = virtualinvoke $r18.<org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.Integer getIgnoreHeaderLines()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r65 = virtualinvoke $r64.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r55 = virtualinvoke $r54.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)> via: STATIC edge: $r6 = staticinvoke <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)>($r5) in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)>
Global flow here: <org.gbif.dwc.text.Archive: void sortFiles()> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)> via: STATIC edge: $r25 = staticinvoke <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)>($r24) in <org.gbif.dwc.text.Archive: void sortFiles()> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFileSorted(java.io.File)>
Value: $r5 flows here: $r5 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>()
Value: $r5 flows here: r0.<org.gbif.file.CSVReader: java.lang.String row> = $r5
Value: $r13 flows here: $r13 = virtualinvoke $r12.<java.io.BufferedReader: java.lang.String readLine()>()
Value: $r13 flows here: r0.<org.gbif.file.CSVReader: java.lang.String row> = $r13
Now we build call graphs for class: org.gbif.file.CSVReader
Global flow here: <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> via: STATIC edge: $r1 = staticinvoke <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)>(r0) in <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(org.gbif.dwc.text.ArchiveFile)>
Global flow here: <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)> calls: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,java.lang.Integer)> via: STATIC edge: $r5 = staticinvoke <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,java.lang.Integer)>(r0, r1, r2, r3, $r4) in <org.gbif.file.CSVReader: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,int)> ==> <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File,java.lang.String,java.lang.String,java.lang.Character,java.lang.Integer)>
Start traversal for source: <java.io.BufferedReader: java.lang.String readLine()>...
Starting from source: 
0: readLine
1: next
Flows from source is finished.
Value: $r24 flows here: $r24 = virtualinvoke r1.<java.io.File: java.lang.String getName()>()
Value: $r25 flows here: $r25 = virtualinvoke r1.<java.io.File: java.lang.String getName()>()
Value: $r25 flows here: $i1 = virtualinvoke $r25.<java.lang.String: int lastIndexOf(java.lang.String)>(".")
Value: $r24 flows here: $r26 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>($i1)
Value: $r23 flows here: $r23 = virtualinvoke r27.<java.io.File: java.io.File getParentFile()>()
Value: $r23 flows here: specialinvoke $r47.<java.io.File: void <init>(java.io.File,java.lang.String)>($r23, "eml.xml")
Value: $r16 flows here: $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getName()>()
Value: $r16 flows here: specialinvoke $r51.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r16)
Value: $r30 flows here: $r30 = virtualinvoke $r51.<java.io.File: java.lang.String getName()>()
Value: $r30 flows here: virtualinvoke $r28.<org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>($r30)
Now we build call graphs for class: org.gbif.dwc.text.ArchiveFactory
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.ArchiveFile: java.util.Map getFields()> via: VIRTUAL edge: $r40 = virtualinvoke $r39.<org.gbif.dwc.text.ArchiveFile: java.util.Map getFields()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.ArchiveFile: java.util.Map getFields()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()> via: VIRTUAL edge: $r39 = virtualinvoke $r44.<org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: java.util.Set getExtensions()> via: VIRTUAL edge: $r33 = virtualinvoke $r44.<org.gbif.dwc.text.Archive: java.util.Set getExtensions()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: java.util.Set getExtensions()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)>($r28) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)>("eml.xml") in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()> via: VIRTUAL edge: $r17 = virtualinvoke $r44.<org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setLocation(java.io.File)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setLocation(java.io.File)>(r1) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setLocation(java.io.File)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)>($r19) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setCore(org.gbif.dwc.text.ArchiveFile)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)>("eml.xml") in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setMetadataLocation(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()> via: VIRTUAL edge: $r21 = virtualinvoke $r44.<org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: java.lang.String getMetadataLocation()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.Archive: void setLocation(java.io.File)> via: VIRTUAL edge: virtualinvoke $r44.<org.gbif.dwc.text.Archive: void setLocation(java.io.File)>(r1) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.Archive: void setLocation(java.io.File)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r28.<org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>($r30) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> calls: <org.gbif.dwc.text.ArchiveFile: java.util.List getLocations()> via: VIRTUAL edge: $r29 = virtualinvoke $r28.<org.gbif.dwc.text.ArchiveFile: java.util.List getLocations()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.Archive openArchive(java.io.File,boolean)> ==> <org.gbif.dwc.text.ArchiveFile: java.util.List getLocations()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.terms.TermFactory: org.gbif.dwc.terms.ConceptTerm findTerm(java.lang.String)> via: VIRTUAL edge: $r10 = virtualinvoke $r9.<org.gbif.dwc.terms.TermFactory: org.gbif.dwc.terms.ConceptTerm findTerm(java.lang.String)>(r8) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.terms.TermFactory: org.gbif.dwc.terms.ConceptTerm findTerm(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void addField(org.gbif.dwc.text.ArchiveField)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void addField(org.gbif.dwc.text.ArchiveField)>($r11) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void addField(org.gbif.dwc.text.ArchiveField)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void setId(org.gbif.dwc.text.ArchiveField)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setId(org.gbif.dwc.text.ArchiveField)>($r11) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void setId(org.gbif.dwc.text.ArchiveField)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()> via: VIRTUAL edge: $r14 = virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>() in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)>($r6) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void setFieldsEnclosedBy(java.lang.Character)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)>($r5) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void setFieldsTerminatedBy(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)>($r4) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void setEncoding(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)>($r1) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void setIgnoreHeaderLines(java.lang.Integer)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)> via: VIRTUAL edge: virtualinvoke $r0.<org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>(null) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.dwc.text.ArchiveFile: void addLocation(java.lang.String)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> calls: <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File)> via: STATIC edge: $r3 = staticinvoke <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File)>(r2) in <org.gbif.dwc.text.ArchiveFactory: org.gbif.dwc.text.ArchiveFile readFileHeaders(java.io.File)> ==> <org.gbif.file.CSVReaderFactory: org.gbif.file.CSVReader build(java.io.File)>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> calls: <org.gbif.dwc.text.Archive: java.util.Set getExtensions()> via: VIRTUAL edge: $r3 = virtualinvoke r0.<org.gbif.dwc.text.Archive: java.util.Set getExtensions()>() in <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> ==> <org.gbif.dwc.text.Archive: java.util.Set getExtensions()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> calls: <org.gbif.dwc.text.Archive: java.util.Set getExtensions()> via: VIRTUAL edge: $r2 = virtualinvoke r0.<org.gbif.dwc.text.Archive: java.util.Set getExtensions()>() in <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> ==> <org.gbif.dwc.text.Archive: java.util.Set getExtensions()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> calls: <org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()>() in <org.gbif.dwc.text.ArchiveFactory: void validateArchive(org.gbif.dwc.text.Archive)> ==> <org.gbif.dwc.text.Archive: org.gbif.dwc.text.ArchiveFile getCore()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateCoreFile(org.gbif.dwc.text.ArchiveFile,boolean)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()> via: VIRTUAL edge: $r4 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>() in <org.gbif.dwc.text.ArchiveFactory: void validateCoreFile(org.gbif.dwc.text.ArchiveFile,boolean)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateCoreFile(org.gbif.dwc.text.ArchiveFile,boolean)> calls: <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>() in <org.gbif.dwc.text.ArchiveFactory: void validateCoreFile(org.gbif.dwc.text.ArchiveFile,boolean)> ==> <org.gbif.dwc.text.ArchiveFile: org.gbif.dwc.text.ArchiveField getId()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()> via: VIRTUAL edge: $r5 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>() in <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()> via: VIRTUAL edge: $r2 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>() in <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getEncoding()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()> via: VIRTUAL edge: $r11 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>() in <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.lang.String getTitle()>
Global flow here: <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> calls: <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>() in <org.gbif.dwc.text.ArchiveFactory: void validateFile(org.gbif.dwc.text.ArchiveFile)> ==> <org.gbif.dwc.text.ArchiveFile: java.io.File getLocationFile()>
Start traversal for source: <java.io.File: java.lang.String getName()>...
Starting from source: 
0: getName
1: openArchive
Flows from source is finished.
Start traversal for source: <java.io.File: java.io.File getParentFile()>...
Starting from source: 
0: getParentFile
1: openArchive
Flows from source is finished.
Loaded 1101 methods from JAR files. 

Found 7 Source Methods.
Found 3 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
