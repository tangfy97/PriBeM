***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[spark] Done!
Now we build call graphs for class: toyForTest.data
Source here: <toyForTest.data: int getter()>
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
soot.jimple.toolkits.callgraph.CallGraph$TargetsOfMethodIterator@25fdd9fc
Start traversal for source: <toyForTest.data: int getter()>...
Starting from source: 
0: getter
1: bar
Flows from source is finished.
Start traversal for source: <java.util.Scanner: int nextInt()>...
Starting from source: 
0: nextInt
1: getter
2: bar
Flows from source is finished.
Callgraph for class: toyForTest.data
strict digraph G {
  1 [ label="getter" ];
  2 [ label="addSuppressed" ];
  3 [ label="close" ];
  4 [ label="nextInt" ];
  5 [ label="bar" ];
  2 -> 1;
  3 -> 1;
  4 -> 1;
  1 -> 5;
}

Loaded 8 methods from JAR files. 

Found 2 Source Methods.
Found 1 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
