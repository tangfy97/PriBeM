***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 361 methods.
BIM is loaded with 278 methods.
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/feiyang/eclipse-workspace/tutorialSoot/lib/soot-4.2.1-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/Users/feiyang/eclipse-workspace/tutorialSoot/lib/soot-3.3.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
Local flow analysis: 
Value: $stack141 from BOM gets processed here: virtualinvoke $stack140.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack141) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: read2 from BOM gets processed here: staticinvoke <org.apache.lucene.util.CharacterUtils$CharacterBuffer: int access$212(org.apache.lucene.util.CharacterUtils$CharacterBuffer,int)>(buffer, read2) from: 
<java.io.Reader: int read(char[],int,int)>
Value: ln from BOM gets processed here: staticinvoke <org.glassfish.jersey.internal.LocalizationMessages: java.lang.String ILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)>(ln) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: ln from BOM gets processed here: staticinvoke <org.glassfish.jersey.internal.LocalizationMessages: java.lang.String ILLEGAL_PROVIDER_CLASS_NAME(java.lang.Object)>(ln) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: ln from BOM gets processed here: interfaceinvoke returned.<java.util.Set: boolean contains(java.lang.Object)>(ln) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: ln from BOM gets processed here: interfaceinvoke names.<java.util.List: boolean add(java.lang.Object)>(ln) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: ln from BOM gets processed here: interfaceinvoke returned.<java.util.Set: boolean add(java.lang.Object)>(ln) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: n from BOM gets processed here: specialinvoke this.<javassist.tools.rmi.ObjectImporter: java.lang.Object createProxy(int,java.lang.String)>(n, classname) from: 
<java.io.ObjectInputStream: int readInt()>
Value: classname from BOM gets processed here: specialinvoke this.<javassist.tools.rmi.ObjectImporter: java.lang.Object createProxy(int,java.lang.String)>(n, classname) from: 
<java.io.ObjectInputStream: java.lang.String readUTF()>
Value: is from BOM gets processed here: specialinvoke this.<org.glassfish.hk2.osgiresourcelocator.ServiceLoaderImpl: java.util.List load(java.io.InputStream)>(is) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: $stack3 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: $stack28 from BOM gets processed here: virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack9 from BOM gets processed here: virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) from: 
<java.io.File: java.lang.String getPath()>
Value: objectId from BOM gets processed here: virtualinvoke $stack13.<java.util.Vector: java.lang.Object elementAt(int)>(objectId) from: 
<java.io.ObjectInputStream: int readInt()>
Value: numOfBytesRead from BOM gets processed here: interfaceinvoke $stack7.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>(bytes, off, numOfBytesRead) from: 
<java.io.InputStream: int read(byte[],int,int)>
Value: keyCount from BOM gets processed here: virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(keyCount) from: 
<java.io.ObjectInputStream: int readInt()>
Value: valueCount from BOM gets processed here: virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(valueCount) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack10 from BOM gets processed here: virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) from: 
<java.io.File: java.lang.String getName()>
Value: $stack24 from BOM gets processed here: virtualinvoke $stack22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack24) from: 
<java.io.File: java.lang.String getName()>
Value: $stack29 from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack29) from: 
<java.io.File: java.lang.String getName()>
Value: modelChecksum from BOM gets processed here: virtualinvoke modelDefinition.<com.piss.probe.content.res.models.ModelDefinition: void setJmsChecksum(long)>(modelChecksum) from: 
<com.piss.probe.content.res.models.JmsUtilities: boolean readModelFromJmsFile(com.piss.probe.content.res.models.ModelDefinition,java.io.File)>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack38 from BOM gets processed here: virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($stack38) from: 
<java.io.RandomAccessFile: char readChar()>
Value: i#5 from BOM gets processed here: virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(i#5) from: 
<java.io.RandomAccessFile: char readChar()>
Value: $stack9 from BOM gets processed here: virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: path from BOM gets processed here: virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: path from BOM gets processed here: virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: bytesRead from BOM gets processed here: virtualinvoke out.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(readBuffer, 0, bytesRead) from: 
<de.lessvoid.nifty.render.batch.core.CoreShader: byte[] read(java.io.InputStream)>
Value: read from BOM gets processed here: staticinvoke <org.apache.lucene.util.CharacterUtils$CharacterBuffer: int access$202(org.apache.lucene.util.CharacterUtils$CharacterBuffer,int)>(buffer, read) from: 
<java.io.Reader: int read(char[])>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(distinctKeys) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(this, stream, distinctKeys) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: line from BOM gets processed here: virtualinvoke cl.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: remaining from BOM gets processed here: virtualinvoke in.<java.io.ObjectInputStream: void readFully(byte[],int,int)>(bytes, 0, remaining) from: 
<java.io.ObjectInputStream: int readInt()>
Value: remaining from BOM gets processed here: staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(remaining) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack14 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>($stack14) from: 
<java.io.File: java.lang.String getName()>
Value: $stack59 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>($stack59) from: 
<java.io.File: java.lang.String getName()>
Value: $stack33 from BOM gets processed here: virtualinvoke $stack31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack33) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: val from BOM gets processed here: virtualinvoke this.<com.piss.probe.game.model.GameProperties: void parseProperty(java.lang.String,java.lang.String)>(val, $stack14) from: 
<java.util.Scanner: java.lang.String next()>
Value: l0 from BOM gets processed here: staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader loadClass(java.lang.ClassLoader,java.lang.String)>(l2, l0) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(line) from: 
<org.jdesktop.beansbinding.ext.BeanAdapterFactory: void addProviders(java.net.URL)>
Value: $stack3 from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.tools.resourcebuilder.ImageTask: void setName(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: $stack5 from BOM gets processed here: virtualinvoke this.<org.xmlpull.v1.builder.XmlInfosetBuilder: org.xmlpull.v1.builder.XmlDocument parseInputStream(java.io.InputStream)>($stack5) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: keyCount from BOM gets processed here: virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(keyCount) from: 
<java.io.ObjectInputStream: int readInt()>
Value: valueCount from BOM gets processed here: virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(valueCount) from: 
<java.io.ObjectInputStream: int readInt()>
Value: remaining from BOM gets processed here: virtualinvoke in.<java.io.ObjectInputStream: void readFully(byte[],int,int)>(bytes, 0, remaining) from: 
<java.io.ObjectInputStream: int readInt()>
Value: remaining from BOM gets processed here: staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(remaining) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack19 from BOM gets processed here: virtualinvoke $stack17.<de.lessvoid.nifty.Nifty: void fromXml(java.lang.String,java.io.InputStream,java.lang.String)>($stack18, $stack19, "screen1") from: 
<java.net.URL: java.io.InputStream openStream()>
Value: systemID from BOM gets processed here: virtualinvoke this.<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.Reader,java.lang.String)>($stack4, systemID) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack4 from BOM gets processed here: virtualinvoke this.<org.dom4j.io.XPP3Reader: java.io.Reader createReader(java.io.InputStream)>($stack4) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: s from BOM gets processed here: staticinvoke <javassist.ClassPoolTail: byte[] readStream(java.io.InputStream)>(s) from: 
<java.net.URLConnection: java.io.InputStream getInputStream()>
Value: e1#3 from BOM gets processed here: virtualinvoke returnList.<java.util.ArrayList: boolean add(java.lang.Object)>(e1#3) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: l5 from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: staticinvoke <javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(l5, l3, 0) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: name from BOM gets processed here: virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) from: 
<java.io.File: java.lang.String getName()>
Value: name from BOM gets processed here: virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) from: 
<java.io.File: java.lang.String getName()>
Value: $stack7 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>($stack7) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: l6 from BOM gets processed here: virtualinvoke l3.<java.io.PushbackInputStream: void unread(byte[],int,int)>(l4, $stack21, l6) from: 
<org.fife.io.UnicodeReader: void init(java.io.InputStream,java.lang.String)>
Value: readBytes#3 from BOM gets processed here: virtualinvoke accumulator.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(buffer, 0, readBytes#3) from: 
<javax.wireless.messaging.MessagePart: void <init>(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
Value: l2 from BOM gets processed here: virtualinvoke l0.<org.apache.xerces.xinclude.XIncludeTextReader: java.lang.String getEncodingName(java.io.InputStream)>(l2) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: $stack8 from BOM gets processed here: virtualinvoke $stack7.<com.piss.editor.registry.TypeRegistry: boolean isCorrectFileExtensionForTopLevelType(java.lang.String,java.lang.Class)>($stack8, $stack9) from: 
<java.io.File: java.lang.String getName()>
Value: $stack31 from BOM gets processed here: virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack25 from BOM gets processed here: virtualinvoke $stack20.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack25) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack44 from BOM gets processed here: staticinvoke <java.lang.Math: int min(int,int)>($stack44, 4096) from: 
<java.io.FileInputStream: int available()>
Value: $stack22 from BOM gets processed here: virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) from: 
<java.io.File: java.lang.String getName()>
Value: len from BOM gets processed here: virtualinvoke out.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(buffer, 0, len) from: 
<de.lessvoid.nifty.Nifty: java.lang.String getVersion()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: specialinvoke l0.<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory createInstance(java.lang.String)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack3 from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.tools.resourcebuilder.DataTask: void setName(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: providerClassName from BOM gets processed here: virtualinvoke $stack27.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($stack28, "SPI provider: {0}", providerClassName) from: 
<org.glassfish.jersey.internal.OsgiRegistry$BundleSpiProvidersLoader: java.util.List call()>
Value: providerClassName from BOM gets processed here: staticinvoke <org.glassfish.jersey.internal.OsgiRegistry: java.lang.Class access$200(org.osgi.framework.Bundle,java.lang.String)>($stack23, providerClassName) from: 
<org.glassfish.jersey.internal.OsgiRegistry$BundleSpiProvidersLoader: java.util.List call()>
Value: $stack4 from BOM gets processed here: staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack4) from: 
<java.io.File: java.lang.String[] list()>
Value: read from BOM gets processed here: virtualinvoke $stack14.<com.google.common.io.LineBuffer: void add(char[],int,int)>($stack13, 0, read) from: 
<com.google.common.io.LineReader: java.lang.String readLine()>
Value: distinctElements from BOM gets processed here: staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(distinctElements) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: distinctElements from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int)>(this, stream, distinctElements) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: len from BOM gets processed here: specialinvoke this.<javassist.tools.web.Webserver: boolean letUsersSendClassfile(java.io.OutputStream,java.lang.String,int)>(out, filename, len) from: 
<java.io.InputStream: int read(byte[])>
Value: len from BOM gets processed here: specialinvoke this.<javassist.tools.web.Webserver: void checkFilename(java.lang.String,int)>(filename, len) from: 
<java.io.InputStream: int read(byte[])>
Value: len from BOM gets processed here: virtualinvoke out.<java.io.OutputStream: void write(byte[],int,int)>(filebuffer, 0, len) from: 
<java.io.InputStream: int read(byte[])>
Value: len from BOM gets processed here: virtualinvoke filebuffer.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(filebuffer, 0, len) from: 
<java.io.InputStream: int read(byte[])>
Value: $stack221 from BOM gets processed here: virtualinvoke $stack219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack221) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack214 from BOM gets processed here: virtualinvoke $stack212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack214) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack9 from BOM gets processed here: specialinvoke l0.<org.mozilla.javascript.tools.jsc.Main: void addError(java.lang.String,java.lang.String)>("msg.jsfile.not.found", $stack9) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack14 from BOM gets processed here: specialinvoke l0.<org.mozilla.javascript.tools.jsc.Main: void addError(java.lang.String,java.lang.String)>("msg.couldnt.open", $stack14) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: csm#468 from BOM gets processed here: virtualinvoke $stack488.<java.io.OutputStream: void write(byte[],int,int)>(src#687, 0, csm#468) from: 
<java.io.FileInputStream: int read(byte[])>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void startingEntry(java.lang.String,byte)>(id, magic) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: magic from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void startingEntry(java.lang.String,byte)>(id, magic) from: 
<java.io.DataInputStream: byte readByte()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: java.util.Hashtable loadTheme(java.lang.String,boolean)>(id, $stack43) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -14, $stack41) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack15) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: magic from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack15) from: 
<java.io.DataInputStream: byte readByte()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($stack16, id, 0) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack17) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: magic from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack17) from: 
<java.io.DataInputStream: byte readByte()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack21) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: magic from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack21) from: 
<java.io.DataInputStream: byte readByte()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack22) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: magic from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, magic, $stack22) from: 
<java.io.DataInputStream: byte readByte()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -3, $stack39) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -3, $stack37) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: java.util.Hashtable loadTheme(java.lang.String,boolean)>(id, $stack29) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -14, $stack27) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($stack33, id, 0) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -4, $stack35) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: com.sun.lwuit.Font loadFont(java.io.DataInputStream,java.lang.String,boolean)>($stack18, id, 1) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -4, $stack20) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: id from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: void setResource(java.lang.String,byte,java.lang.Object)>(id, -3, $stack25) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: baseURL from BOM gets processed here: staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createSVG(java.lang.String,boolean,byte[])>(baseURL, animated, s) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: name from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.util.Resources: com.sun.lwuit.Image getImage(java.lang.String)>(name) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: name from BOM gets processed here: staticinvoke <com.sun.lwuit.animations.AnimationObject: com.sun.lwuit.animations.AnimationObject createAnimationImage(java.lang.String,com.sun.lwuit.util.Resources,int,int)>(name, this, x, y) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: iter#10 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(java.lang.String,com.sun.lwuit.Image,int[],int[],java.lang.String)>(id, bitmap, cutOffsets, charWidth, iter#10) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: iter#10 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font create(java.lang.String)>(iter#10) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: iter#3 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(java.lang.String,com.sun.lwuit.Image,int[],int[],java.lang.String)>(id, bitmap, cutOffsets, charWidth, iter#3) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack300) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack296) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack45) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack247) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p2#8) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: p2#9 from BOM gets processed here: virtualinvoke $stack224.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(p2#9) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p2#9) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: p2#9 from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p2#9) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: $stack215 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($stack215, $stack217, $stack219) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack217 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($stack215, $stack217, $stack219) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack219 from BOM gets processed here: staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($stack215, $stack217, $stack219) from: 
<java.io.DataInputStream: byte readByte()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p1#10) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: $stack204 from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack202, $stack204) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: p3#14 from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack189, p3#14) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: p1#17 from BOM gets processed here: virtualinvoke $stack117.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(p1#17) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p1#17) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: p1#17 from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p1#17) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, p2#18) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, "true") from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, "false") from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack56) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack90) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke theme.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack68) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: key from BOM gets processed here: virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: $stack41 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int)>($stack41) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack38 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int,int)>($stack38, $stack39) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack34 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($stack34, $stack35) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack35 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($stack34, $stack35) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack30 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($stack30, $stack31, $stack32) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack31 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($stack30, $stack31, $stack32) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack45 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int)>($stack45) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack42 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createLineBorder(int,int)>($stack42, $stack43) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack38 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($stack38, $stack39) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack39 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int)>($stack38, $stack39) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack34 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($stack34, $stack35, $stack36) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack35 from BOM gets processed here: staticinvoke <com.sun.lwuit.plaf.Border: com.sun.lwuit.plaf.Border createRoundBorder(int,int,int)>($stack34, $stack35, $stack36) from: 
<java.io.DataInputStream: byte readByte()>
Value: lang from BOM gets processed here: virtualinvoke l10n.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(lang, key#4) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: $stack22 from BOM gets processed here: virtualinvoke key#4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack21, $stack22) from: 
<java.io.DataInputStream: java.lang.String readUTF()>
Value: iter#9 from BOM gets processed here: staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createIndexed(int,int,int[],byte[])>(iter#9, height, palette, data) from: 
<java.io.DataInputStream: short readShort()>
Value: height from BOM gets processed here: staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createIndexed(int,int,int[],byte[])>(iter#9, height, palette, data) from: 
<java.io.DataInputStream: short readShort()>
Value: s from BOM gets processed here: staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(s) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l2 from BOM gets processed here: virtualinvoke l0.<org.mozilla.javascript.IdScriptableObject: void activatePrototypeMap(int)>(l2) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack25 from BOM gets processed here: virtualinvoke $stack20.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack25) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack62 from BOM gets processed here: virtualinvoke $stack61.<com.sun.lwuit.util.EditableResources: void setImage(java.lang.String,com.sun.lwuit.Image)>($stack62, $stack64) from: 
<java.io.File: java.lang.String getName()>
Value: factoryClassName from BOM gets processed here: virtualinvoke $stack61.<java.lang.String: boolean equals(java.lang.Object)>(factoryClassName) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: factoryClassName from BOM gets processed here: staticinvoke <javax.ws.rs.client.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(factoryClassName, classLoader) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack2 from BOM gets processed here: virtualinvoke l0.<org.fife.ui.rtextarea.ConfigurableCaret: void setStyle(int)>($stack2) from: 
<java.io.ObjectInputStream: int readInt()>
Value: len from BOM gets processed here: virtualinvoke out.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(buffer, 0, len) from: 
<org.glassfish.jersey.message.internal.OutboundJaxrsResponse: boolean bufferEntity()>
Value: $stack90 from BOM gets processed here: virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack90) from: 
<java.io.File: java.lang.String getName()>
Value: $stack24 from BOM gets processed here: virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) from: 
<java.io.File: java.lang.String getName()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack47 from BOM gets processed here: staticinvoke <jada.ngeditor.guiviews.editors.FileChooserEditor: java.lang.String access$302(jada.ngeditor.guiviews.editors.FileChooserEditor,java.lang.String)>($stack46, $stack47) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack32 from BOM gets processed here: virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack35 from BOM gets processed here: virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) from: 
<java.io.File: java.lang.String getName()>
Value: $stack11 from BOM gets processed here: interfaceinvoke $stack9.<java.util.List: boolean remove(java.lang.Object)>($stack11) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack17 from BOM gets processed here: interfaceinvoke $stack14.<java.util.List: void add(int,java.lang.Object)>(0, $stack17) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack30 from BOM gets processed here: virtualinvoke $stack26.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack30) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack10 from BOM gets processed here: virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) from: 
<java.io.File: java.lang.String getName()>
Value: inputLine from BOM gets processed here: virtualinvoke $stack17.<com.mxgraph.examples.swing.editor.scxml.listener.SCXMLListener: void addEvent(java.lang.String)>(inputLine) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack93 from BOM gets processed here: virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack93) from: 
<java.io.File: java.lang.String getName()>
Value: size from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream,int)>(this, stream, size) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: $stack74 from BOM gets processed here: virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack62 from BOM gets processed here: virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack26.<java.util.HashSet: boolean contains(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack28.<java.util.HashSet: boolean add(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack53.<java.util.HashSet: boolean contains(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack56.<java.util.HashSet: boolean remove(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack37.<java.util.HashSet: boolean contains(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack40.<java.util.HashSet: boolean remove(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack91.<java.util.HashSet: boolean contains(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: canonicalPath from BOM gets processed here: virtualinvoke $stack94.<java.util.HashSet: boolean remove(java.lang.Object)>(canonicalPath) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack25 from BOM gets processed here: virtualinvoke $stack24.<java.util.HashSet: boolean remove(java.lang.Object)>($stack25) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack71 from BOM gets processed here: virtualinvoke $stack70.<java.util.HashSet: boolean remove(java.lang.Object)>($stack71) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack87 from BOM gets processed here: virtualinvoke $stack86.<java.util.HashSet: boolean remove(java.lang.Object)>($stack87) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack64 from BOM gets processed here: virtualinvoke $stack63.<java.util.HashSet: boolean remove(java.lang.Object)>($stack64) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack97 from BOM gets processed here: virtualinvoke $stack96.<java.util.HashSet: boolean remove(java.lang.Object)>($stack97) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack57 from BOM gets processed here: virtualinvoke $stack56.<java.util.HashSet: boolean remove(java.lang.Object)>($stack57) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack79 from BOM gets processed here: virtualinvoke $stack78.<java.util.HashSet: boolean remove(java.lang.Object)>($stack79) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack50 from BOM gets processed here: virtualinvoke $stack49.<java.util.HashSet: boolean remove(java.lang.Object)>($stack50) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: l6 from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(l6) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l6 from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l6) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l6 from BOM gets processed here: staticinvoke <org.apache.xerces.util.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(l6, l4, 0) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(l5, l3) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: filename from BOM gets processed here: virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: filename from BOM gets processed here: staticinvoke <com.mxgraph.util.mxUtils: void writeFile(java.lang.String,java.lang.String)>($stack66, filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: filename from BOM gets processed here: staticinvoke <com.mxgraph.util.mxUtils: java.lang.String readFile(java.lang.String)>(filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: line from BOM gets processed here: virtualinvoke this.<com.mxgraph.examples.swing.editor.scxml.listener.SCXMLListener: void addEvent(java.lang.String)>(line) from: 
<com.mxgraph.examples.swing.editor.scxml.listener.SCXMLListener: void setEventListFromString(java.lang.String)>
Value: len from BOM gets processed here: virtualinvoke pbis.<java.io.PushbackInputStream: void unread(byte[],int,int)>(buf, 0, len) from: 
<java.io.FilterInputStream: int read(byte[])>
Value: len from BOM gets processed here: virtualinvoke pbis.<java.io.PushbackInputStream: void unread(byte[],int,int)>(buf, 0, len) from: 
<java.io.FilterInputStream: int read(byte[])>
Value: $stack8 from BOM gets processed here: virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>($stack8) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack5 from BOM gets processed here: virtualinvoke b.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5) from: 
<java.io.File: java.lang.String getPath()>
Value: nbytes from BOM gets processed here: virtualinvoke $stack27.<java.io.RandomAccessFile: void write(byte[],int,int)>($stack26, 0, nbytes) from: 
<java.io.InputStream: int read(byte[],int,int)>
Value: stream from BOM gets processed here: interfaceinvoke $stack29.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(stream, encoding) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: distinctElements from BOM gets processed here: staticinvoke <com.google.common.collect.Maps: int capacity(int)>(distinctElements) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: distinctElements from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int)>(this, stream, distinctElements) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: fileName from BOM gets processed here: virtualinvoke $stack47.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("LASTFILE_", fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack9.<java.util.ArrayList: boolean contains(java.lang.Object)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack11.<java.util.ArrayList: boolean add(java.lang.Object)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack16 from BOM gets processed here: virtualinvoke $stack15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack16) from: 
<java.io.File: java.lang.String getName()>
Value: $stack12 from BOM gets processed here: virtualinvoke $stack8.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack12) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack19 from BOM gets processed here: virtualinvoke l6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.dir", $stack19) from: 
<java.io.File: java.lang.String getPath()>
Value: line from BOM gets processed here: interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>(line) from: 
<com.google.common.io.CharSource: com.google.common.collect.ImmutableList readLines()>
Value: $stack2 from BOM gets processed here: virtualinvoke this.<com.google.common.util.concurrent.AtomicDouble: void set(double)>($stack2) from: 
<java.io.ObjectInputStream: double readDouble()>
Value: $stack24 from BOM gets processed here: virtualinvoke $stack23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack24) from: 
<java.io.File: java.lang.String getName()>
Value: fileName from BOM gets processed here: interfaceinvoke io.<com.mxgraph.examples.swing.editor.fileimportexport.IImportExport: void read(java.lang.String,com.mxgraph.swing.mxGraphComponent,javax.swing.JFileChooser,com.mxgraph.examples.config.SCXMLConstraints)>(fileName, graphComponent, fc, $stack34) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: interfaceinvoke io.<com.mxgraph.examples.swing.editor.fileimportexport.IImportExport: void read(java.lang.String,com.mxgraph.swing.mxGraphComponent,javax.swing.JFileChooser,com.mxgraph.examples.config.SCXMLConstraints)>(fileName, graphComponent, fc, $stack17) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: filename from BOM gets processed here: virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: filename from BOM gets processed here: interfaceinvoke fie.<com.mxgraph.examples.swing.editor.fileimportexport.IImportExport: void write(com.mxgraph.swing.mxGraphComponent,java.lang.String)>(graphComponent, filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: filename from BOM gets processed here: interfaceinvoke fie.<com.mxgraph.examples.swing.editor.fileimportexport.IImportExport: void write(com.mxgraph.swing.mxGraphComponent,java.lang.String)>(graphComponent, filename) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: tmp from BOM gets processed here: virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tmp) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack19 from BOM gets processed here: virtualinvoke field.<javax.swing.JTextField: void setText(java.lang.String)>($stack19) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack23 from BOM gets processed here: virtualinvoke $stack20.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack23) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack6 from BOM gets processed here: virtualinvoke this.<com.google.common.util.concurrent.AtomicDoubleArray: void set(int,double)>(i, $stack6) from: 
<java.io.ObjectInputStream: double readDouble()>
Value: l5 from BOM gets processed here: specialinvoke l0.<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack33 from BOM gets processed here: specialinvoke this.<com.piss.probe.content.res.physics.ObjectPhysicsDefinition: com.piss.probe.content.res.physics.CollisionParams readShape(java.lang.String,java.io.BufferedReader,java.lang.String)>($stack33, input, $stack34) from: 
<java.io.File: java.lang.String getName()>
Value: $stack20 from BOM gets processed here: virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) from: 
<java.io.File: java.lang.String getName()>
Value: $stack13 from BOM gets processed here: virtualinvoke $stack12.<javax.swing.text.JTextComponent: void setText(java.lang.String)>($stack13) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: systemID from BOM gets processed here: virtualinvoke this.<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader,java.lang.String)>($stack4, systemID) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack4 from BOM gets processed here: virtualinvoke this.<org.dom4j.io.XPPReader: java.io.Reader createReader(java.io.InputStream)>($stack4) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: distinctKeys from BOM gets processed here: staticinvoke <jersey.repackaged.com.google.common.collect.Serialization: void populateMultimap(jersey.repackaged.com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(multimap, stream, distinctKeys) from: 
<java.io.ObjectInputStream: int readInt()>
Value: read from BOM gets processed here: virtualinvoke out.<java.io.OutputStream: void write(byte[],int,int)>(data, 0, read) from: 
<org.glassfish.jersey.message.internal.ReaderWriter: void writeTo(java.io.InputStream,java.io.OutputStream)>
Value: read from BOM gets processed here: virtualinvoke out.<java.io.Writer: void write(char[],int,int)>(data, 0, read) from: 
<org.glassfish.jersey.message.internal.ReaderWriter: void writeTo(java.io.Reader,java.io.Writer)>
Value: l from BOM gets processed here: virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(c, 0, l) from: 
<org.glassfish.jersey.message.internal.ReaderWriter: java.lang.String readFromAsString(java.io.Reader)>
Value: $stack20 from BOM gets processed here: virtualinvoke p.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20) from: 
<java.io.File: java.lang.String getName()>
Value: $stack17 from BOM gets processed here: virtualinvoke $stack15.<javax.swing.text.JTextComponent: void setText(java.lang.String)>($stack17) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack4 from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.tools.resourcebuilder.AnimationTask: void setName(java.lang.String)>($stack4) from: 
<java.io.File: java.lang.String getName()>
Value: $stack3 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: $stack32 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>($stack32) from: 
<java.io.File: java.lang.String getPath()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap getInfoLine(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap splitToInteger(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap getPageLine(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap splitToInteger(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap splitToInteger(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap splitToInteger(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: line from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.java2d.renderer.fonts.AngelCodeFont: java.util.HashMap splitToInteger(java.lang.String)>(line) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: is from BOM gets processed here: virtualinvoke props.<java.util.Properties: void load(java.io.InputStream)>(is) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: l7 from BOM gets processed here: specialinvoke l0.<org.mozilla.javascript.UintMap: int insertNewKey(int)>(l7) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack17 from BOM gets processed here: virtualinvoke $stack16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack17) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(distinctKeys) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(this, stream, distinctKeys) from: 
<com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack23 from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.render.io.TGAImageLoader: short flipEndian(short)>($stack23) from: 
<java.io.DataInputStream: short readShort()>
Value: $stack25 from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.render.io.TGAImageLoader: short flipEndian(short)>($stack25) from: 
<java.io.DataInputStream: short readShort()>
Value: $stack25 from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.render.io.TGAImageLoader: short flipEndian(short)>($stack25) from: 
<java.io.DataInputStream: short readShort()>
Value: $stack27 from BOM gets processed here: specialinvoke this.<de.lessvoid.nifty.render.io.TGAImageLoader: short flipEndian(short)>($stack27) from: 
<java.io.DataInputStream: short readShort()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack49 from BOM gets processed here: virtualinvoke h.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack48, $stack49) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: s from BOM gets processed here: specialinvoke this.<javassist.tools.web.Viewer: byte[] readStream(java.io.InputStream)>(s) from: 
<java.net.URLConnection: java.io.InputStream getInputStream()>
Value: entitySize from BOM gets processed here: staticinvoke <java.lang.Math: int min(int,int)>(entitySize, $stack13) from: 
<java.io.InputStream: int read(byte[])>
Value: $stack28 from BOM gets processed here: virtualinvoke $stack27.<jada.ngeditor.controller.GUIEditor: void saveGui(java.lang.String)>($stack28) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack26 from BOM gets processed here: virtualinvoke $stack25.<jada.ngeditor.controller.GUIEditor: void saveGui(java.lang.String)>($stack26) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack13 from BOM gets processed here: virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack22 from BOM gets processed here: virtualinvoke $stack21.<jada.ngeditor.controller.GUIEditor: void saveGui(java.lang.String)>($stack22) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack20 from BOM gets processed here: virtualinvoke $stack19.<jada.ngeditor.controller.GUIEditor: void saveGui(java.lang.String)>($stack20) from: 
<java.io.File: java.lang.String getPath()>
Value: l5 from BOM gets processed here: virtualinvoke l2.<java.io.OutputStream: void write(byte[],int,int)>(l4, 0, l5) from: 
<java.io.InputStream: int read(byte[],int,int)>
Value: l5 from BOM gets processed here: virtualinvoke l2.<java.io.OutputStream: void write(byte[],int,int)>(l4, 0, l5) from: 
<java.io.InputStream: int read(byte[],int,int)>
Value: path from BOM gets processed here: virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(path) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack5 from BOM gets processed here: staticinvoke <javax.xml.parsers.FilePathToURI: java.lang.String filepath2URI(java.lang.String)>($stack5) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack5 from BOM gets processed here: staticinvoke <javax.xml.parsers.FilePathToURI: java.lang.String filepath2URI(java.lang.String)>($stack5) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: r from BOM gets processed here: virtualinvoke to.<java.io.OutputStream: void write(byte[],int,int)>(buf, 0, r) from: 
<java.io.InputStream: int read(byte[])>
Value: read from BOM gets processed here: virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(read) from: 
<com.google.common.io.ByteStreams: int read(java.io.InputStream,byte[],int,int)>
Value: read from BOM gets processed here: interfaceinvoke processor.<com.google.common.io.ByteProcessor: boolean processBytes(byte[],int,int)>(buf, 0, read) from: 
<java.io.InputStream: int read(byte[])>
Value: $stack3 from BOM gets processed here: virtualinvoke $stack2.<net.tomahawk.XFileDialog: void setDirectory(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: size from BOM gets processed here: virtualinvoke bo.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(buffer, 0, size) from: 
<java.io.InputStream: int read(byte[])>
Value: is from BOM gets processed here: virtualinvoke e#9.<java.util.Properties: void load(java.io.InputStream)>(is) from: 
<java.net.URL: java.io.InputStream openStream()>
Value: $stack6 from BOM gets processed here: staticinvoke <java.lang.Math: int min(int,int)>($stack6, 2147483647) from: 
<java.io.InputStream: int available()>
Value: $stack35 from BOM gets processed here: virtualinvoke $stack32.<java.util.prefs.Preferences: void put(java.lang.String,java.lang.String)>("lastDir", $stack35) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack49 from BOM gets processed here: virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) from: 
<java.io.File: java.lang.String getName()>
Value: name from BOM gets processed here: virtualinvoke cp.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>(name) from: 
<java.io.DataInputStream: int readUnsignedShort()>
Value: $stack21 from BOM gets processed here: virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: $stack11 from BOM gets processed here: virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: token from BOM gets processed here: virtualinvoke $stack8.<com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)>(token) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: $stack11 from BOM gets processed here: virtualinvoke $stack9.<com.piss.editor.EditorCore: java.lang.String getFullFileName(java.lang.Class,java.lang.String)>($stack10, $stack11) from: 
<java.io.File: java.lang.String getPath()>
Value: i from BOM gets processed here: virtualinvoke os.<java.io.OutputStream: void write(byte[],int,int)>(buff, 0, i) from: 
<org.objectweb.asm.xml.Processor: void copyEntry(java.io.InputStream,java.io.OutputStream)>
Value: n from BOM gets processed here: virtualinvoke buff#4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(k#5, 0, n) from: 
<org.objectweb.asm.xml.Processor: byte[] readEntry(java.io.InputStream,java.util.zip.ZipEntry)>
Value: $stack14 from BOM gets processed here: virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack14) from: 
<java.io.File: java.lang.String getName()>
Value: tag from BOM gets processed here: virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(tag) from: 
<java.io.DataInputStream: int readUnsignedByte()>
Value: clipped#38 from BOM gets processed here: virtualinvoke mr#48.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: void addElement(int)>(clipped#38) from: 
<java.io.DataInputStream: byte readByte()>
Value: x1#39 from BOM gets processed here: virtualinvoke mr#48.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: void addElement(int)>(x1#39) from: 
<java.io.DataInputStream: byte readByte()>
Value: y1#40 from BOM gets processed here: virtualinvoke mr#48.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: void addElement(int)>(y1#40) from: 
<java.io.DataInputStream: byte readByte()>
Value: $stack10 from BOM gets processed here: virtualinvoke $stack9.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(key, $stack10) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Maps: int capacity(int)>(distinctKeys) from: 
<java.io.ObjectInputStream: int readInt()>
Value: read from BOM gets processed here: virtualinvoke uee.<java.io.PushbackInputStream: void unread(byte[],int,int)>(buf, 0, read) from: 
<java.io.FilterInputStream: int read(byte[])>
Value: $stack2 from BOM gets processed here: specialinvoke this.<javassist.tools.reflect.ClassMetaobject: java.lang.Class getClassObject(java.lang.String)>($stack2) from: 
<java.io.ObjectInputStream: java.lang.String readUTF()>
Value: fileName from BOM gets processed here: virtualinvoke $stack196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack38.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack172.<java.util.HashMap: boolean containsKey(java.lang.Object)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileName, $stack41) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke fc#17.<com.mxgraph.examples.swing.editor.fileimportexport.SCXMLImportExport: void readInGraph(com.mxgraph.examples.swing.editor.scxml.SCXMLGraph,java.lang.String,boolean,com.mxgraph.examples.config.SCXMLConstraints)>($stack49, fileName, $stack51, $stack52) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(fileName, inputFileName#18) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: fileName from BOM gets processed here: virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: wd from BOM gets processed here: virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(wd) from: 
<com.mxgraph.examples.swing.SCXMLGraphEditor: java.io.File getThisFileInCurrentDirectory(java.lang.String)>
Value: parentDir from BOM gets processed here: staticinvoke <com.mxgraph.util.StringUtils: boolean isEmptyString(java.lang.String)>(parentDir) from: 
<java.io.File: java.lang.String getParent()>
Value: parentDir from BOM gets processed here: virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parentDir) from: 
<java.io.File: java.lang.String getParent()>
Value: $stack37 from BOM gets processed here: virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) from: 
<java.io.File: java.lang.String getName()>
Value: title from BOM gets processed here: virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(title) from: 
<com.mxgraph.examples.swing.SCXMLGraphEditor: void updateTitle()>
Value: title from BOM gets processed here: virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(title) from: 
<com.mxgraph.examples.swing.SCXMLGraphEditor: void updateTitle()>
Value: absAssets from BOM gets processed here: virtualinvoke parentPath.<java.lang.String: boolean contains(java.lang.CharSequence)>(absAssets) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: absAssets from BOM gets processed here: virtualinvoke parentPath.<java.lang.String: boolean contains(java.lang.CharSequence)>(absAssets) from: 
<java.io.File: java.lang.String getCanonicalPath()>
Value: $stack8 from BOM gets processed here: virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack12 from BOM gets processed here: virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) from: 
<java.io.File: java.lang.String getName()>
Value: size from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream,int)>(map, stream, size) from: 
<java.io.ObjectInputStream: int readInt()>
Value: distinctElements from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int)>(multiset, stream, distinctElements) from: 
<java.io.ObjectInputStream: int readInt()>
Value: count from BOM gets processed here: interfaceinvoke multiset.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(element, count) from: 
<java.io.ObjectInputStream: int readInt()>
Value: distinctKeys from BOM gets processed here: staticinvoke <com.google.common.collect.Serialization: void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(multimap, stream, distinctKeys) from: 
<java.io.ObjectInputStream: int readInt()>
Value: $stack11 from BOM gets processed here: staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>($stack11) from: 
<java.io.File: java.lang.String getName()>
Value: $stack3 from BOM gets processed here: virtualinvoke this.<com.sun.lwuit.tools.resourcebuilder.SvgTask: void setName(java.lang.String)>($stack3) from: 
<java.io.File: java.lang.String getName()>
Value: line from BOM gets processed here: interfaceinvoke result.<java.util.List: boolean add(java.lang.Object)>(line) from: 
<com.google.common.io.CharStreams: java.util.List readLines(java.lang.Readable)>
Value: line from BOM gets processed here: interfaceinvoke processor.<com.google.common.io.LineProcessor: boolean processLine(java.lang.String)>(line) from: 
<com.google.common.io.CharStreams: java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor)>
Value: factoryClassName from BOM gets processed here: virtualinvoke $stack61.<java.lang.String: boolean equals(java.lang.Object)>(factoryClassName) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: factoryClassName from BOM gets processed here: staticinvoke <javax.ws.rs.ext.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(factoryClassName, classLoader) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack17 from BOM gets processed here: staticinvoke <org.reflections.util.ClasspathHelper: java.net.URL tryToGetValidUrl(java.lang.String,java.lang.String,java.lang.String)>($stack17, $stack19, part) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack19 from BOM gets processed here: staticinvoke <org.reflections.util.ClasspathHelper: java.net.URL tryToGetValidUrl(java.lang.String,java.lang.String,java.lang.String)>($stack17, $stack19, part) from: 
<java.io.File: java.lang.String getParent()>
Value: $stack26 from BOM gets processed here: staticinvoke <org.reflections.util.ClasspathHelper: java.net.URL tryToGetValidUrl(java.lang.String,java.lang.String,java.lang.String)>($stack26, $stack28, jar) from: 
<java.io.File: java.lang.String getPath()>
Value: $stack28 from BOM gets processed here: staticinvoke <org.reflections.util.ClasspathHelper: java.net.URL tryToGetValidUrl(java.lang.String,java.lang.String,java.lang.String)>($stack26, $stack28, jar) from: 
<java.io.File: java.lang.String getParent()>
Value: $stack2 from BOM gets processed here: staticinvoke <javax.xml.transform.stream.FilePathToURI: java.lang.String filepath2URI(java.lang.String)>($stack2) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: line from BOM gets processed here: virtualinvoke $stack7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(line) from: 
<javax.persistence.Persistence: java.util.Set providerNamesFromReader(java.io.BufferedReader)>
Value: $stack4 from BOM gets processed here: staticinvoke <javax.xml.parsers.FilePathToURI: java.lang.String filepath2URI(java.lang.String)>($stack4) from: 
<java.io.File: java.lang.String getAbsolutePath()>
Value: l5 from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: virtualinvoke $stack30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l5) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l5 from BOM gets processed here: staticinvoke <javax.xml.transform.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(l5, l3, 0) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: $stack17 from BOM gets processed here: virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: command from BOM gets processed here: virtualinvoke this.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)>(command) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: command from BOM gets processed here: virtualinvoke this.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)>(command) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: command from BOM gets processed here: virtualinvoke this.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)>(command) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: command from BOM gets processed here: virtualinvoke this.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)>(command) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: $stack21 from BOM gets processed here: virtualinvoke $stack19.<com.piss.editor.registry.TypeRegistry: java.lang.Class getTopLevelTypeForFileExtension(java.lang.String)>($stack21) from: 
<java.util.Scanner: java.lang.String nextLine()>
Value: l8 from BOM gets processed here: virtualinvoke $stack19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l8) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: l3 from BOM gets processed here: staticinvoke <org.mozilla.javascript.Kit: byte[] readStream(java.io.InputStream,int)>(l3, l4) from: 
<java.net.URLConnection: java.io.InputStream getInputStream()>
Value: expand#25 from BOM gets processed here: virtualinvoke $stack22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(expand#25) from: 
<java.io.Reader: int read(char[],int,int)>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: len from BOM gets processed here: virtualinvoke pbis.<java.io.PushbackInputStream: void unread(byte[],int,int)>(buf, 0, len) from: 
<java.io.FilterInputStream: int read(byte[])>
Value: value from BOM gets processed here: staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(value) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: value from BOM gets processed here: staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(value) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: e from BOM gets processed here: virtualinvoke $stack28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(e) from: 
<java.io.BufferedReader: java.lang.String readLine()>
Value: size from BOM gets processed here: virtualinvoke out.<java.io.FileOutputStream: void write(byte[],int,int)>(buffer, 0, size) from: 
<java.io.InputStream: int read(byte[])>
Loaded 116649 methods from JAR files.
Found 62 Basic Source Methods.
Found 0 Basic Sink Methods.
Found 0 Methods flow to return.
Found 0 Methods flow to a sink.
Found 0 Methods in this Class flow to a field in class.
Found 0 Methods flow to a field in class.
Methods extraction finished.
done
