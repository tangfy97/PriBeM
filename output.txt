***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[spark] Done!
 source: <toyForTest.Main: void main(java.lang.String[])> invocation: staticinvoke <toyForTest.Main: void doStuff()>() to: <java.lang.Object: void <clinit>()>
 source: <toyForTest.Main: void main(java.lang.String[])> invocation: staticinvoke <toyForTest.Main: void doStuff()>() to: <toyForTest.Main: void doStuff()>
 source: <toyForTest.Main: void doStuff()> invocation: virtualinvoke $r0.<toyForTest.A: void foo()>() to: <toyForTest.A: void foo()>
 source: <toyForTest.Main: void doStuff()> invocation: specialinvoke $r0.<toyForTest.A: void <init>()>() to: <toyForTest.A: void <init>()>
 source: <toyForTest.A: void <init>()> invocation: specialinvoke r0.<java.lang.Object: void <init>()>() to: <java.lang.Object: void <init>()>
 source: <toyForTest.A: void foo()> invocation: virtualinvoke r0.<toyForTest.A: void bar()>() to: <toyForTest.A: void bar()>
 source: <toyForTest.A: void bar()> invocation: virtualinvoke $r1.<java.io.PrintStream: void println(int)>($i0) to: <java.io.PrintStream: void println(int)>
 source: <toyForTest.A: void bar()> invocation: $i0 = virtualinvoke $r0.<toyForTest.data: int getter()>() to: <toyForTest.data: int getter()>
 source: <toyForTest.A: void bar()> invocation: specialinvoke $r0.<toyForTest.data: void <init>()>() to: <toyForTest.data: void <init>()>
 source: <toyForTest.data: void <init>()> invocation: specialinvoke r0.<java.lang.Object: void <init>()>() to: <java.lang.Object: void <init>()>
 source: <toyForTest.data: int getter()> invocation: virtualinvoke r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r3) to: <java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
 source: <toyForTest.data: int getter()> invocation: virtualinvoke $r0.<java.util.Scanner: void close()>() to: <java.util.Scanner: void close()>
 source: <toyForTest.data: int getter()> invocation: virtualinvoke $r0.<java.util.Scanner: void close()>() to: <java.util.Scanner: void close()>
 source: <toyForTest.data: int getter()> invocation: $i0 = virtualinvoke $r0.<java.util.Scanner: int nextInt()>() to: <java.util.Scanner: int nextInt()>
 source: <toyForTest.data: int getter()> invocation: specialinvoke $r0.<java.util.Scanner: void <init>(java.io.InputStream)>($r1) to: <java.util.Scanner: void <init>(java.io.InputStream)>
 source: <toyForTest.data: int getter()> invocation: virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Enter an integer: ") to: <java.io.PrintStream: void println(java.lang.String)>
0: <toyForTest.data: int getter()>
1: <toyForTest.A: void bar()>
2: <toyForTest.A: void foo()>
3: <toyForTest.Main: void doStuff()>
4: <toyForTest.Main: void main(java.lang.String[])>
5: null
Value: $i0 from source: <java.util.Scanner: int nextInt()> is called by <toyForTest.data: int getter()> via: $i0 = virtualinvoke $r0.<java.util.Scanner: int nextInt()>() arg: $i0
Loaded 8 methods from JAR files. 

Found 1 Source Methods.
Found 1 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
