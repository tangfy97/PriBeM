***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[spark] Done!


***************************
Now we build call graphs for class: toyForTest.data


Source here: <toyForTest.data: int getter()>
Edges to Source: VIRTUAL edge: $i0 = virtualinvoke $r0.<toyForTest.data: int getter()>() in <toyForTest.A: void bar()> ==> <toyForTest.data: int getter()>
Start traversal for source: <toyForTest.data: int getter()>...
Starting from source: 
0: getter
Flows from source is finished.


Start traversal for source: <java.util.Scanner: int nextInt()>...
Starting from source: 
0: nextInt
1: getter
Flows from source is finished.


strict digraph G {
  1 [ label="getter" ];
  2 [ label="addSuppressed" ];
  3 [ label="close" ];
  4 [ label="nextInt" ];
  2 -> 1;
  3 -> 1;
  4 -> 1;
}

Loaded 8 methods from JAR files. 

Found 2 Source Methods.
Found 1 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
