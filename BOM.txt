<java.io.FileOutputStream: java.io.FileDescriptor getFD()> -> _BOM_
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> -> _BOM_
<java.io.File: boolean isFile()> -> _BOM_
<java.io.File: long lastModified()> -> _BOM_
<java.io.RandomAccessFile: void seek(long)> -> _BOM_
<java.io.ObjectInputStream: int readInt()> -> _BOM_
<java.io.RandomAccessFile: int skipBytes(int)> -> _BOM_
<java.io.File: java.lang.String getCanonicalPath()> -> _BOM_
<java.io.File: java.lang.String getAbsolutePath()> -> _BOM_
<java.io.File: boolean exists()> -> _BOM_
<java.io.File: boolean setReadOnly()> -> _BOM_
<java.io.DataInputStream: void readFully(byte[])> -> _BOM_
<java.io.DataInput: int readUnsignedByte()> -> _BOM_
<java.io.BufferedReader: int read(char[],int,int)> -> _BOM_
<java.io.InputStream: void reset()> -> _BOM_
<java.io.File: java.lang.String getPath()> -> _BOM_
<java.io.FileOutputStream: void write(byte[],int,int)> -> _BOM_
<java.io.FilterInputStream: void mark(int)> -> _BOM_
<java.io.DataInputStream: char readChar()> -> _BOM_
<java.io.BufferedInputStream: void mark(int)> -> _BOM_
<java.io.File: boolean renameTo(java.io.File)> -> _BOM_
<java.io.DataInputStream: double readDouble()> -> _BOM_
<java.io.BufferedReader: void mark(int)> -> _BOM_
<java.io.File: boolean isDirectory()> -> _BOM_
<java.io.File: long length()> -> _BOM_
<java.io.InputStream: int available()> -> _BOM_
<java.io.FileOutputStream: void write(int)> -> _BOM_
<java.io.File: boolean setExecutable(boolean,boolean)> -> _BOM_
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)> -> _BOM_
<java.io.File: boolean setReadable(boolean,boolean)> -> _BOM_
<java.io.File: void deleteOnExit()> -> _BOM_
<java.io.File: boolean mkdir()> -> _BOM_
<java.io.RandomAccessFile: int readInt()> -> _BOM_
<java.io.FileInputStream: java.io.FileDescriptor getFD()> -> _BOM_
<java.io.File: boolean canRead()> -> _BOM_
<java.io.File: java.lang.String getName()> -> _BOM_
<java.io.InputStream: int read(byte[],int,int)> -> _BOM_
<java.io.FileInputStream: int read(byte[],int,int)> -> _BOM_
<java.io.DataInputStream: void readFully(byte[],int,int)> -> _BOM_
<java.io.BufferedReader: long skip(long)> -> _BOM_
<java.io.DataInputStream: int read(byte[])> -> _BOM_
<java.io.RandomAccessFile: long length()> -> _BOM_
<java.io.DataInputStream: byte readByte()> -> _BOM_
<java.io.BufferedReader: int read()> -> _BOM_
<java.io.InputStream: long skip(long)> -> _BOM_
<java.io.InputStreamReader: java.lang.String getEncoding()> -> _BOM_
<java.io.File: java.io.File getCanonicalFile()> -> _BOM_
<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)> -> _BOM_
<java.io.BufferedReader: java.lang.String readLine()> -> _BOM_
<java.io.File: java.io.File getAbsoluteFile()> -> _BOM_
<java.io.Reader: int read(char[],int,int)> -> _BOM_
<java.io.FileInputStream: long skip(long)> -> _BOM_
<java.io.File: boolean createNewFile()> -> _BOM_
<java.io.RandomAccessFile: void write(byte[],int,int)> -> _BOM_
<java.io.InputStream: int read()> -> _BOM_
<java.io.DataInputStream: float readFloat()> -> _BOM_
<java.io.DataInputStream: java.lang.String readUTF()> -> _BOM_
<java.io.DataInputStream: int skipBytes(int)> -> _BOM_
<java.io.FilterInputStream: int read(byte[],int,int)> -> _BOM_
<java.io.InputStream: int read(byte[])> -> _BOM_
<java.io.Reader: int read(char[])> -> _BOM_
<java.io.BufferedReader: void reset()> -> _BOM_
<com.blikoon.qrcodescanner.decode.DecodeManager: void showCouldNotReadQrCodeFromScanner(android.content.Context,com.blikoon.qrcodescanner.decode.DecodeManager$OnRefreshCameraListener)> -> _BOM_
<java.io.FilterInputStream: int available()> -> _BOM_
<java.io.DataInputStream: int readUnsignedShort()> -> _BOM_
<java.io.FilterInputStream: void reset()> -> _BOM_
<java.io.File: java.io.File getParentFile()> -> _BOM_
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> -> _BOM_
<java.io.FilterInputStream: int read()> -> _BOM_
<java.io.DataInputStream: boolean readBoolean()> -> _BOM_
<java.io.Reader: int read()> -> _BOM_
<java.io.InputStream: void mark(int)> -> _BOM_
<java.io.ObjectInputStream: boolean readBoolean()> -> _BOM_
<java.io.RandomAccessFile: void writeInt(int)> -> _BOM_
<java.io.BufferedInputStream: void reset()> -> _BOM_
<java.io.FileDescriptor: void sync()> -> _BOM_
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)> -> _BOM_
<java.io.ObjectStreamClass: java.lang.String getName()> -> _BOM_
<java.io.FileOutputStream: void write(byte[])> -> _BOM_
<java.io.FilterInputStream: int read(byte[])> -> _BOM_
<java.io.DataInputStream: long readLong()> -> _BOM_
<java.io.DataInputStream: int readInt()> -> _BOM_
<java.io.FilterInputStream: long skip(long)> -> _BOM_
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()> -> _BOM_
<java.io.DataInputStream: int readUnsignedByte()> -> _BOM_
<java.io.ObjectInputStream: java.lang.Object readObject()> -> _BOM_
<java.io.File: java.io.File[] listFiles()> -> _BOM_
<java.io.DataInputStream: int read(byte[],int,int)> -> _BOM_
<java.io.ObjectInputStream: java.lang.String readUTF()> -> _BOM_
<java.io.FileInputStream: int available()> -> _BOM_
<java.io.File: boolean delete()> -> _BOM_
<java.io.InputStream: boolean markSupported()> -> _BOM_
<java.io.RandomAccessFile: int read(byte[],int,int)> -> _BOM_
<java.io.File: boolean mkdirs()> -> _BOM_
<java.io.File: boolean canWrite()> -> _BOM_
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)> -> _BOM_
