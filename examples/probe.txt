***** Loading java classes ***** 

Start reading BOM and BIM...
BOM is loaded with 169 methods.
BIM is loaded with 352 methods.
EOM is loaded with 286 methods.
EIM is loaded with 365 methods.
Start looking for sources and sinks: 
[spark] Starting analysis ...
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <java.awt.image.ComponentColorModel: int getRGBComponent(int,int)> at statement opixel#1 = $r0: Is not cast compatible: null_type <-- java.lang.Object
[main] ERROR soot.jimple.toolkits.typing.fast.TypePromotionUseVisitor - Failed Typing in <com.sun.imageio.plugins.tiff.TIFFIFD: int readFieldValue(javax.imageio.stream.ImageInputStream,int,int,java.lang.Object[])> at statement obj#10 = $r0: Is not cast compatible: null_type <-- java.lang.Object
[spark] Done!
Now we build call graphs for class: com.piss.probe.editor.ui.gui.panels.DefinitionEditorPanel
Source here: <com.piss.probe.editor.ui.gui.panels.DefinitionEditorPanel: void actionImportRaw()>
Now we build call graphs for class: com.piss.editor.ui.gui.XFileChooserDialog
Source here: <com.piss.editor.ui.gui.XFileChooserDialog: void setCurrentDirectory(java.io.File)>
Now we build call graphs for class: com.piss.editor.externalization.ExternUtil
Global flow here: <com.piss.editor.externalization.ExternUtil: java.lang.Object readInstanceToFile(java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> calls: <com.piss.editor.registry.TypeRegistry: void verifyRegisteredTopLevelTypeFileExtension(java.lang.String)> via: VIRTUAL edge: virtualinvoke r0.<com.piss.editor.registry.TypeRegistry: void verifyRegisteredTopLevelTypeFileExtension(java.lang.String)>(r1) in <com.piss.editor.externalization.ExternUtil: java.lang.Object readInstanceToFile(java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> ==> <com.piss.editor.registry.TypeRegistry: void verifyRegisteredTopLevelTypeFileExtension(java.lang.String)>
Global flow here: <com.piss.editor.externalization.ExternUtil: java.lang.Object readInstanceToFile(java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> calls: <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)> via: STATIC edge: $r3 = staticinvoke <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>(r1, r2) in <com.piss.editor.externalization.ExternUtil: java.lang.Object readInstanceToFile(java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> ==> <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>
Source here: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)>
Global flow here: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> calls: <com.piss.editor.registry.TypeRegistry: void verifyCorrectFileExtensionForTopLevelType(java.lang.String,java.lang.Class)> via: VIRTUAL edge: virtualinvoke r4.<com.piss.editor.registry.TypeRegistry: void verifyCorrectFileExtensionForTopLevelType(java.lang.String,java.lang.Class)>($r3, $r6) in <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> ==> <com.piss.editor.registry.TypeRegistry: void verifyCorrectFileExtensionForTopLevelType(java.lang.String,java.lang.Class)>
Global flow here: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> calls: <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)> via: STATIC edge: $r2 = staticinvoke <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>(r0, r1) in <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> ==> <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>
Global flow here: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> calls: <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)> via: STATIC edge: $r3 = staticinvoke <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>($r2, r1) in <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)> ==> <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>
Start traversal for source: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)>...
Starting from source: 
0: writeInstanceToFile
Flows from source is finished.
Start traversal for source: <java.io.File: java.io.File getParentFile()>...
Starting from source: 
0: getParentFile
1: writeInstanceToFile
Flows from source is finished.
Now we build call graphs for class: com.piss.probe.game.model.GameProperties
Source here: <com.piss.probe.game.model.GameProperties: void load()>
Now we build call graphs for class: com.piss.editor.ui.ConsoleEditorInterface
Source here: <com.piss.editor.ui.ConsoleEditorInterface: int requestUnsavedInstanceClose(java.lang.Object)>
Source here: <com.piss.editor.ui.ConsoleEditorInterface: java.io.File readFileLine()>
Source here: <com.piss.editor.ui.ConsoleEditorInterface: void run()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean closeEditorAction()>() in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean requestCloseEditorAction()>() in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean setCurrentInstance(java.lang.Object)>($r8) in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)>($r9) in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean saveInstanceAsAction(java.lang.Object)>($r10) in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> via: VIRTUAL edge: z11 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: boolean saveInstanceAction(java.lang.Object)>($r11) in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set requestOpenFilesToInstancesAction()> via: VIRTUAL edge: $r12 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: java.util.Set requestOpenFilesToInstancesAction()>() in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set requestOpenFilesToInstancesAction()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()> via: VIRTUAL edge: $r13 = virtualinvoke r0.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object requestNewInstanceAction()>() in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void run()> calls: <com.piss.editor.ui.ExtendedEditorInterface: void run()> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void run()>() in <com.piss.editor.ui.ConsoleEditorInterface: void run()> ==> <com.piss.editor.ui.ExtendedEditorInterface: void run()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> calls: <com.piss.editor.EditorCore: java.lang.Object getActiveInstanceOfFullName(java.lang.String)> via: VIRTUAL edge: $r3 = virtualinvoke $r2.<com.piss.editor.EditorCore: java.lang.Object getActiveInstanceOfFullName(java.lang.String)>($r0) in <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> ==> <com.piss.editor.EditorCore: java.lang.Object getActiveInstanceOfFullName(java.lang.String)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ConsoleEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> calls: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object getCurrentInstance()> via: VIRTUAL edge: $r4 = virtualinvoke r1.<com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object getCurrentInstance()>() in <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Object parseInstanceName(java.lang.String)> ==> <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object getCurrentInstance()>
Source here: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Class requestType()>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)>(r1) in <com.piss.editor.ui.ConsoleEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceCreated(java.lang.Object)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceCreated(java.lang.Object)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceCreated(java.lang.Object)>(r1) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceCreated(java.lang.Object)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceCreated(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)>(r1, r2) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)>(r1, r2, r3) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)>(r1, r2) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)>(r1, z0, r2) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)>(r1, z0) in <com.piss.editor.ui.ConsoleEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)>
Global flow here: <com.piss.editor.ui.ConsoleEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> calls: <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> via: SPECIAL edge: specialinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>(r1) in <com.piss.editor.ui.ConsoleEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> ==> <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>
Start traversal for source: <com.piss.editor.ui.ConsoleEditorInterface: void run()>...
Starting from source: 
0: run
Flows from source is finished.
Start traversal for source: <java.util.Scanner: java.lang.String nextLine()>...
Starting from source: 
0: nextLine
1: run
Flows from source is finished.
Now we build call graphs for class: com.piss.probe.content.res.models.JmsUtilities
Source here: <com.piss.probe.content.res.models.JmsUtilities: boolean readModelFromJmsFile(com.piss.probe.content.res.models.ModelDefinition,java.io.File)>
Source here: <com.piss.probe.content.res.models.JmsUtilities: void readNodes(java.util.Scanner,int,com.piss.probe.content.res.models.ModelNodeDefinition[])>
Source here: <com.piss.probe.content.res.models.JmsUtilities: void readMaterials(java.util.Scanner,int,com.piss.editor.externalization.ExternalReference[])>
Source here: <com.piss.probe.content.res.models.JmsUtilities: void readLocations(java.util.Scanner,int,com.piss.probe.content.res.models.ModelLocationDefinition[])>
Source here: <com.piss.probe.content.res.models.JmsUtilities: void readVertices(java.util.Scanner,int,com.piss.probe.content.res.models.data.ModelVertex[])>
Now we build call graphs for class: com.piss.util.Workspace
Global flow here: <com.piss.util.Workspace: void validate()> calls: <com.piss.util.FileUtil: void verifyFileAccessible(java.io.File,boolean,boolean,boolean,boolean)> via: STATIC edge: staticinvoke <com.piss.util.FileUtil: void verifyFileAccessible(java.io.File,boolean,boolean,boolean,boolean)>($r2, 1, 1, 1, 0) in <com.piss.util.Workspace: void validate()> ==> <com.piss.util.FileUtil: void verifyFileAccessible(java.io.File,boolean,boolean,boolean,boolean)>
Global flow here: <com.piss.util.Workspace: java.lang.String fileToRelativeNameInWorkspaceDirectory(java.io.File)> calls: <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)> via: STATIC edge: $r3 = staticinvoke <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>(r0, $r2) in <com.piss.util.Workspace: java.lang.String fileToRelativeNameInWorkspaceDirectory(java.io.File)> ==> <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>
Global flow here: <com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)> calls: <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)> via: STATIC edge: $r3 = staticinvoke <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>(r0, $r2) in <com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)> ==> <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)>
Source here: <com.piss.util.Workspace: java.lang.String toString()>
Start traversal for source: <java.io.File: java.lang.String getPath()>...
Starting from source: 
0: getPath
1: toString
2: printString
3: valueOf
Flows from source is finished.
Start traversal for source: <com.piss.util.Workspace: java.lang.String toString()>...
Starting from source: 
0: toString
1: printString
2: valueOf
Flows from source is finished.
Start traversal for source: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)>...
Starting from source: 
0: writeInstanceToFile
Flows from source is finished.
Now we build call graphs for class: com.piss.probe.content.res.physics.ObjectPhysicsDefinition$1
Source here: <com.piss.probe.content.res.physics.ObjectPhysicsDefinition$1: boolean accept(java.io.File)>
Now we build call graphs for class: net.tomahawk.ExtensionsFilter
Source here: <net.tomahawk.ExtensionsFilter: boolean accept(java.io.File)>
Now we build call graphs for class: com.piss.probe.content.res.sfx.SerializableSoundBufferData
Source here: <com.piss.probe.content.res.sfx.SerializableSoundBufferData: void readObject(java.io.ObjectInputStream)>
Now we build call graphs for class: com.piss.probe.game.model.GameSettings
Source here: <com.piss.probe.game.model.GameSettings: void printProperties(java.io.PrintStream)>
Now we build call graphs for class: net.tomahawk.XFileDialog
Source here: <net.tomahawk.XFileDialog: java.lang.String getDirectory()>
Source here: <net.tomahawk.XFileDialog: java.lang.String getSaveFile()>
Source here: <net.tomahawk.XFileDialog: java.lang.String getFile()>
Source here: <net.tomahawk.XFileDialog: java.lang.String getFolder()>
Source here: <net.tomahawk.XFileDialog: java.lang.String[] getFolders()>
Source here: <net.tomahawk.XFileDialog: java.lang.String[] getFiles()>
Now we build call graphs for class: com.piss.probe.content.res.sfx.SoundDefinition
Source here: <com.piss.probe.content.res.sfx.SoundDefinition: org.lwjgl.util.WaveData getWave(java.io.File)>
Now we build call graphs for class: com.piss.editor.ui.ExtendedEditorInterface
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.io.File getIniFile()> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: java.lang.String getEditorName()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: java.lang.String getEditorName()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.io.File getIniFile()> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: java.lang.String getEditorName()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.io.File getIniFile()> calls: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.String getEditorName()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: java.lang.String getEditorName()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.io.File getIniFile()> ==> <com.piss.editor.ui.ConsoleEditorInterface: java.lang.String getEditorName()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceSetCurrent(java.lang.Object)> via: INTERFACE edge: interfaceinvoke r3.<com.piss.editor.ui.EditorInterfaceCurrentInstanceListener: void editingInstanceSetCurrent(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceSetCurrent(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.ContentImportDialog: void editingInstanceSetCurrent(java.lang.Object)> via: INTERFACE edge: interfaceinvoke r3.<com.piss.editor.ui.EditorInterfaceCurrentInstanceListener: void editingInstanceSetCurrent(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.ContentImportDialog: void editingInstanceSetCurrent(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.ContentCompileDialog: void editingInstanceSetCurrent(java.lang.Object)> via: INTERFACE edge: interfaceinvoke r3.<com.piss.editor.ui.EditorInterfaceCurrentInstanceListener: void editingInstanceSetCurrent(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.ContentCompileDialog: void editingInstanceSetCurrent(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.editor.EditorCore: boolean containsActiveEditingInstance(java.lang.Object)> via: VIRTUAL edge: $z1 = virtualinvoke $r4.<com.piss.editor.EditorCore: boolean containsActiveEditingInstance(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.editor.EditorCore: boolean containsActiveEditingInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)> via: VIRTUAL edge: $r7 = virtualinvoke $r6.<com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>($r5) in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r6 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r3 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)> via: VIRTUAL edge: $z0 = virtualinvoke $r5.<com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)>($r4) in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)> via: VIRTUAL edge: $r9 = virtualinvoke $r8.<com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>($r4) in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)> via: VIRTUAL edge: $r7 = virtualinvoke $r6.<com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>($r4) in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r6 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r8 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r5 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseEditorAction()> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Source here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniFile(java.util.Scanner)>
Source here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> calls: <com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)> via: VIRTUAL edge: $r5 = virtualinvoke $r4.<com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)>($r1) in <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> ==> <com.piss.util.Workspace: java.io.File relativeNameToFileInWorkspaceDirectory(java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> calls: <com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()> via: VIRTUAL edge: $r4 = virtualinvoke $r3.<com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()>() in <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> ==> <com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()> calls: <com.piss.editor.ui.gui.TypeChooserDialog: java.lang.Class requestType()> via: INTERFACE edge: $r2 = interfaceinvoke $r1.<com.piss.editor.EditorTypeChooser: java.lang.Class requestType()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()> ==> <com.piss.editor.ui.gui.TypeChooserDialog: java.lang.Class requestType()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.TypeChooserDialog getTypeChooser()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorTypeChooser getTypeChooser()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object requestNewInstanceAction()> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.TypeChooserDialog getTypeChooser()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> calls: <com.piss.editor.EditorCore: java.lang.Object createEditingInstance(java.lang.Class)> via: VIRTUAL edge: $r3 = virtualinvoke $r2.<com.piss.editor.EditorCore: java.lang.Object createEditingInstance(java.lang.Class)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object newInstanceAction(java.lang.Class)> ==> <com.piss.editor.EditorCore: java.lang.Object createEditingInstance(java.lang.Class)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set requestOpenFilesToInstancesAction()> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.FileChooserDialog getFileChooser()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorFileChooser getFileChooser()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set requestOpenFilesToInstancesAction()> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.FileChooserDialog getFileChooser()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> calls: <com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)> via: VIRTUAL edge: $r3 = virtualinvoke $r2.<com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: java.lang.Object openFileToInstanceAction(java.io.File)> ==> <com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r7 = virtualinvoke r3.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r3.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> calls: <com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)> via: VIRTUAL edge: $r5 = virtualinvoke $r4.<com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)>(r2) in <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> ==> <com.piss.editor.EditorCore: java.lang.Object readFileToInstance(java.io.File)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r3.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: java.util.Set openFilesToInstancesAction(java.io.File[])> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r6 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: boolean removeEditingInstance(java.lang.Object,java.lang.String)> via: VIRTUAL edge: virtualinvoke $r2.<com.piss.editor.EditorCore: boolean removeEditingInstance(java.lang.Object,java.lang.String)>(r0, $r4) in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: boolean removeEditingInstance(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)> via: VIRTUAL edge: $r4 = virtualinvoke $r3.<com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean closeInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: boolean instanceHasUnsavedChanges(java.lang.Object)> via: VIRTUAL edge: $z0 = virtualinvoke $r2.<com.piss.editor.EditorCore: boolean instanceHasUnsavedChanges(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean requestCloseInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: boolean instanceHasUnsavedChanges(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void saveAllInstancesAction()> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r1 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: void saveAllInstancesAction()> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void saveAllInstancesAction()> calls: <com.piss.editor.EditorCore: java.util.Set getActiveInstances()> via: VIRTUAL edge: $r2 = virtualinvoke $r1.<com.piss.editor.EditorCore: java.util.Set getActiveInstances()>() in <com.piss.editor.ui.ExtendedEditorInterface: void saveAllInstancesAction()> ==> <com.piss.editor.EditorCore: java.util.Set getActiveInstances()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)> via: VIRTUAL edge: $z0 = virtualinvoke $r2.<com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: boolean instanceIsNewlyCreated(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: void markInstanceNewlyCreated(java.lang.Object,boolean)> via: VIRTUAL edge: virtualinvoke $r5.<com.piss.editor.EditorCore: void markInstanceNewlyCreated(java.lang.Object,boolean)>(r0, 0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: void markInstanceNewlyCreated(java.lang.Object,boolean)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)> via: VIRTUAL edge: $r4 = virtualinvoke $r3.<com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>(r0) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileNameOfActiveInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Source here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r14 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r10 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r6 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r16 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.FileChooserDialog getFileChooser()> via: VIRTUAL edge: $r2 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorFileChooser getFileChooser()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.FileChooserDialog getFileChooser()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: java.lang.String getFullFileName(java.lang.Class,java.lang.String)> via: VIRTUAL edge: $r9 = virtualinvoke $r6.<com.piss.editor.EditorCore: java.lang.String getFullFileName(java.lang.Class,java.lang.String)>($r7, $r8) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: java.lang.String getFullFileName(java.lang.Class,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.util.Workspace: java.lang.String fileToRelativeNameInWorkspaceDirectory(java.io.File)> via: VIRTUAL edge: $r12 = virtualinvoke $r11.<com.piss.util.Workspace: java.lang.String fileToRelativeNameInWorkspaceDirectory(java.io.File)>($r5) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.util.Workspace: java.lang.String fileToRelativeNameInWorkspaceDirectory(java.io.File)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()> via: VIRTUAL edge: $r11 = virtualinvoke $r10.<com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.EditorCore: com.piss.util.Workspace getWorkspace()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r10 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r6 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()> via: VIRTUAL edge: $r6 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorErrorReporter getErrorReporter()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.EditorGUI: com.piss.editor.ui.gui.ErrorReporterDialog getErrorReporter()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r3 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.editor.EditorCore: void writeInstanceToFile(java.lang.Object,java.lang.String)> via: VIRTUAL edge: virtualinvoke $r3.<com.piss.editor.EditorCore: void writeInstanceToFile(java.lang.Object,java.lang.String)>(r0, r1) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.editor.EditorCore: void writeInstanceToFile(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)> via: VIRTUAL edge: virtualinvoke $r4.<com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)>(r0, 0, r2) in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()> via: VIRTUAL edge: $r4 = virtualinvoke r2.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean saveActionInternal(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: com.piss.editor.EditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> calls: <com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)> via: VIRTUAL edge: virtualinvoke $r7.<com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)>($r8, 1, r0) in <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> ==> <com.piss.editor.EditorCore: void markInstanceUnsavedChanges(java.lang.Object,boolean,java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r7 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> calls: <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()> via: VIRTUAL edge: $r6 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: com.piss.editor.EditorCore getEditor()>() in <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> ==> <com.piss.probe.editor.ui.gui.desktop.DefinitionEditorInterface: com.piss.probe.editor.ProbeEditorCore getEditor()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> calls: <com.piss.editor.externalization.InternalizationTask: boolean success()> via: VIRTUAL edge: $z1 = virtualinvoke $r3.<com.piss.editor.externalization.InternalizationTask: boolean success()>() in <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> ==> <com.piss.editor.externalization.InternalizationTask: boolean success()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> calls: <com.piss.editor.externalization.InternalizationTask: void run()> via: VIRTUAL edge: virtualinvoke $r3.<com.piss.editor.externalization.InternalizationTask: void run()>() in <com.piss.editor.ui.ExtendedEditorInterface: void internalizeCurrentInstanceAction()> ==> <com.piss.editor.externalization.InternalizationTask: void run()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void run()> calls: <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)> via: VIRTUAL edge: virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)>($r1) in <com.piss.editor.ui.ExtendedEditorInterface: void run()> ==> <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean allowEditingInstanceRemove(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r6 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean allowEditingInstanceRemove(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: boolean allowEditingInstanceRemove(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r5 = virtualinvoke r0.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: boolean allowEditingInstanceRemove(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> calls: <com.piss.probe.editor.ui.gui.ContentImportDialog: void workspaceUpdated(com.piss.util.Workspace)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorWorkspaceChangeListener: void workspaceUpdated(com.piss.util.Workspace)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> ==> <com.piss.probe.editor.ui.gui.ContentImportDialog: void workspaceUpdated(com.piss.util.Workspace)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> calls: <com.piss.probe.editor.ui.gui.ContentCompileDialog: void workspaceUpdated(com.piss.util.Workspace)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorWorkspaceChangeListener: void workspaceUpdated(com.piss.util.Workspace)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void workspaceUpdated(com.piss.util.Workspace)> ==> <com.piss.probe.editor.ui.gui.ContentCompileDialog: void workspaceUpdated(com.piss.util.Workspace)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> calls: <com.piss.editor.ui.gui.TypeChooserDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorTypeRegistryChangeListener: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> ==> <com.piss.editor.ui.gui.TypeChooserDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorTypeRegistryChangeListener: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> calls: <com.piss.probe.editor.ui.gui.ContentImportDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorTypeRegistryChangeListener: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> ==> <com.piss.probe.editor.ui.gui.ContentImportDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> calls: <com.piss.probe.editor.ui.gui.ContentCompileDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorTypeRegistryChangeListener: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)> ==> <com.piss.probe.editor.ui.gui.ContentCompileDialog: void typeRegistryChanged(com.piss.editor.registry.TypeRegistry)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceCreated(java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceCreated(java.lang.Object)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorInstanceSetListener: void editingInstanceCreated(java.lang.Object)>(r3) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceCreated(java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceCreated(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceAdded(java.lang.Object,java.lang.String)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorInstanceSetListener: void editingInstanceAdded(java.lang.Object,java.lang.String)>(r3, r4) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceAdded(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceAdded(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorInstanceSetListener: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)>(r3, r4, r5) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceRenamed(java.lang.Object,java.lang.String,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceRemoved(java.lang.Object,java.lang.String)> via: INTERFACE edge: interfaceinvoke r3.<com.piss.editor.EditorInstanceSetListener: void editingInstanceRemoved(java.lang.Object,java.lang.String)>(r0, r4) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceRemoved(java.lang.Object,java.lang.String)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)> via: VIRTUAL edge: virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)>(null) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)> via: VIRTUAL edge: $z1 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)>($r8) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r6 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)> via: VIRTUAL edge: virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: boolean setCurrentInstance(java.lang.Object)>(null) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.ui.gui.desktop.DesktopEditorGUI: boolean setCurrentInstance(java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> calls: <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()> via: VIRTUAL edge: $r5 = virtualinvoke r1.<com.piss.editor.ui.ExtendedEditorInterface: java.util.Set getActiveInstancesLocal()>() in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceRemoved(java.lang.Object,java.lang.String)> ==> <com.piss.editor.AbstractEditorInterface: java.util.Set getActiveInstancesLocal()>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorInstanceStateListener: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)>(r3, z0, r4) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceSaveStateUpdated(java.lang.Object,boolean,java.lang.Object)>
Global flow here: <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> calls: <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> via: INTERFACE edge: interfaceinvoke r2.<com.piss.editor.EditorInstanceStateListener: void editingInstanceNewStateUpdated(java.lang.Object,boolean)>(r3, z0) in <com.piss.editor.ui.ExtendedEditorInterface: void editingInstanceNewStateUpdated(java.lang.Object,boolean)> ==> <com.piss.editor.ui.gui.EditorGUIMenuBar: void editingInstanceNewStateUpdated(java.lang.Object,boolean)>
Start traversal for source: <java.util.Scanner: java.lang.String next()>...
Starting from source: 
0: next
1: editingInstanceRemoved
2: allowEditingInstanceRemove
3: removeEditingInstance
4: closeInstanceAction
5: requestCloseInstanceAction
6: internalFrameClosing
7: run
8: guiBegin
9: internalizeCurrentInstanceAction
10: actionPerformed
11: requestCloseCurrentInstanceAction
12: requestCloseEditorAction
13: closeEditorAction
14: clearEditor
15: saveAllInstancesAction
Flows from source is finished.
Start traversal for source: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)>...
Starting from source: 
0: writeInstanceToFile
1: saveActionInternal
2: saveInstanceAsAction
3: run
4: guiBegin
5: internalizeCurrentInstanceAction
6: actionPerformed
7: saveInstanceAction
8: saveAllInstancesAction
9: saveCurrentInstanceAction
10: requestCloseInstanceAction
11: internalFrameClosing
12: requestCloseCurrentInstanceAction
13: requestCloseEditorAction
14: saveCurrentInstanceAsAction
Flows from source is finished.
Start traversal for source: <com.piss.editor.ui.ConsoleEditorInterface: void run()>...
Starting from source: 
0: run
1: guiBegin
2: internalizeCurrentInstanceAction
3: actionPerformed
Flows from source is finished.
Start traversal for source: <com.piss.editor.ui.ExtendedEditorInterface: boolean saveInstanceAsAction(java.lang.Object)>...
Starting from source: 
0: saveInstanceAsAction
1: run
2: guiBegin
3: internalizeCurrentInstanceAction
4: actionPerformed
5: saveInstanceAction
6: saveAllInstancesAction
7: saveCurrentInstanceAction
8: requestCloseInstanceAction
9: internalFrameClosing
10: requestCloseCurrentInstanceAction
11: requestCloseEditorAction
12: saveCurrentInstanceAsAction
Flows from source is finished.
Start traversal for source: <com.piss.editor.ui.ConsoleEditorInterface: java.lang.Class requestType()>...
Starting from source: 
0: requestType
1: requestNewInstanceAction
2: actionPerformed
3: run
4: guiBegin
5: internalizeCurrentInstanceAction
Flows from source is finished.
Start traversal for source: <com.piss.editor.ui.ExtendedEditorInterface: void readIniInstances(java.util.Scanner)>...
Starting from source: 
0: readIniInstances
1: readIniFile
2: run
3: guiBegin
4: internalizeCurrentInstanceAction
5: actionPerformed
Flows from source is finished.
Start traversal for source: <com.piss.editor.ui.ExtendedEditorInterface: void readIniFile(java.util.Scanner)>...
Starting from source: 
0: readIniFile
1: run
2: guiBegin
3: internalizeCurrentInstanceAction
4: actionPerformed
Flows from source is finished.
Start traversal for source: <java.util.Scanner: java.lang.String nextLine()>...
Starting from source: 
0: nextLine
1: readIniInstances
2: readIniFile
3: run
4: guiBegin
5: internalizeCurrentInstanceAction
6: actionPerformed
Flows from source is finished.
Now we build call graphs for class: net.tomahawk.helloworld
Source here: <net.tomahawk.helloworld: void actionPerformed(java.awt.event.ActionEvent)>
Now we build call graphs for class: com.bulletphysics.demos.opengl.FontRender$GLFont
Source here: <com.bulletphysics.demos.opengl.FontRender$GLFont: void load(java.io.InputStream)>
Now we build call graphs for class: com.piss.probe.content.res.physics.ObjectPhysicsDefinition
Source here: <com.piss.probe.content.res.physics.ObjectPhysicsDefinition: void importOppa(java.io.File)>
Source here: <com.piss.probe.content.res.physics.ObjectPhysicsDefinition: com.piss.probe.content.res.physics.CollisionParams readShape(java.lang.String,java.io.BufferedReader,java.lang.String)>
Now we build call graphs for class: com.piss.probe.test.render.LwjglTexr
Source here: <com.piss.probe.test.render.LwjglTexr: int loadShader(java.lang.String,int)>
Now we build call graphs for class: com.piss.probe.content.res.graphics2d.TextureAtlasDefinition
Source here: <com.piss.probe.content.res.graphics2d.TextureAtlasDefinition: void readObject(java.io.ObjectInputStream)>
Source here: <com.piss.probe.content.res.graphics2d.TextureAtlasDefinition: boolean importRawFromFolder(java.io.File)>
Now we build call graphs for class: com.piss.editor.ui.gui.FileChooserDialog$TopLevelFileFilter
Source here: <com.piss.editor.ui.gui.FileChooserDialog$TopLevelFileFilter: boolean accept(java.io.File)>
Now we build call graphs for class: com.piss.probe.content.res.models.ModelDefinition
Source here: <com.piss.probe.content.res.models.ModelDefinition: boolean importRawFromFolder(java.io.File)>
Now we build call graphs for class: com.piss.probe.content.res.sfx.SoundIntroOutroDefinition$1
Source here: <com.piss.probe.content.res.sfx.SoundIntroOutroDefinition$1: boolean accept(java.io.File)>
Now we build call graphs for class: com.piss.probe.content.res.materials.ShaderDefinition
Source here: <com.piss.probe.content.res.materials.ShaderDefinition: boolean importRawFromFolder(java.io.File)>
Now we build call graphs for class: com.piss.probe.content.res.sfx.SoundIntroOutroDefinition
Source here: <com.piss.probe.content.res.sfx.SoundIntroOutroDefinition: void importWaves(java.io.File[])>
Now we build call graphs for class: com.piss.probe.content.res.sfx.SoundDefinition$1
Source here: <com.piss.probe.content.res.sfx.SoundDefinition$1: boolean accept(java.io.File)>
Now we build call graphs for class: com.piss.util.FileUtil
Global flow here: <com.piss.util.FileUtil: java.lang.String applyFileExtension(java.lang.String,java.lang.String)> calls: <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)> via: STATIC edge: $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r4) in <com.piss.util.FileUtil: java.lang.String applyFileExtension(java.lang.String,java.lang.String)> ==> <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>
Source here: <com.piss.util.FileUtil: void verifyFileAccessible(java.io.File,boolean,boolean,boolean,boolean)>
Source here: <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>
Global flow here: <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)> calls: <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)> via: STATIC edge: $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>($r2) in <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)> ==> <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>
Global flow here: <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)> calls: <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)> via: STATIC edge: $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>(r9) in <com.piss.util.FileUtil: java.io.File relativeNameToFileInDirectory(java.lang.String,java.io.File)> ==> <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>
Source here: <com.piss.util.FileUtil: java.lang.String readFileAsString(java.io.File)>
Start traversal for source: <java.io.File: java.lang.String getAbsolutePath()>...
Starting from source: 
0: getAbsolutePath
1: fileToRelativeNameInDirectory
2: writeInstanceToFile
3: fileToRelativeNameInWorkspaceDirectory
4: verifyFileAccessible
5: validate
Flows from source is finished.
Start traversal for source: <com.piss.editor.externalization.ExternUtil: java.lang.String writeInstanceToFile(java.lang.Object,java.lang.String,java.io.File,com.piss.editor.registry.TypeRegistry)>...
Starting from source: 
0: writeInstanceToFile
Flows from source is finished.
Start traversal for source: <com.piss.util.FileUtil: void verifyFileAccessible(java.io.File,boolean,boolean,boolean,boolean)>...
Starting from source: 
0: verifyFileAccessible
1: validate
Flows from source is finished.
Start traversal for source: <java.io.File: java.io.File getParentFile()>...
Starting from source: 
0: getParentFile
1: fileToRelativeNameInDirectory
2: writeInstanceToFile
3: fileToRelativeNameInWorkspaceDirectory
Flows from source is finished.
Start traversal for source: <com.piss.util.FileUtil: java.lang.String fileToRelativeNameInDirectory(java.io.File,java.io.File)>...
Starting from source: 
0: fileToRelativeNameInDirectory
1: writeInstanceToFile
2: fileToRelativeNameInWorkspaceDirectory
Flows from source is finished.
Start traversal for source: <java.io.File: java.io.File getAbsoluteFile()>...
Starting from source: 
0: getAbsoluteFile
1: fileToRelativeNameInDirectory
2: writeInstanceToFile
3: fileToRelativeNameInWorkspaceDirectory
Flows from source is finished.
Start traversal for source: <com.piss.util.Workspace: java.lang.String toString()>...
Starting from source: 
0: toString
1: relativeNameToFileInDirectory
2: readInstanceToFile
3: relativeNameToFileInWorkspaceDirectory
4: writeInstanceToFile
5: applyFileExtension
6: getFullFileName
Flows from source is finished.
Now we build call graphs for class: com.bulletphysics.demos.bsp.BspConverter
Source here: <com.bulletphysics.demos.bsp.BspConverter: void convertBsp(java.io.InputStream)>
Loaded 4533 methods from JAR files. 

Found 59 Source Methods.
Found 10 Sink Methods.
Sources and Sinks collected. 

Methods extraction finished.
All finished.
