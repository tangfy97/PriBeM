public class nu.xom.NodeFactory extends java.lang.Object
{

    public void <init>()
    {
        nu.xom.NodeFactory r0;

        r0 := @this: nu.xom.NodeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public nu.xom.Element makeRootElement(java.lang.String, java.lang.String)
    {
        nu.xom.NodeFactory r0;
        nu.xom.Element $r3;
        java.lang.String r1, r2;

        r0 := @this: nu.xom.NodeFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Element startMakingElement(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public nu.xom.Element startMakingElement(java.lang.String, java.lang.String)
    {
        nu.xom.NodeFactory r3;
        nu.xom.Element $r0;
        java.lang.String r1, r2;

        r3 := @this: nu.xom.NodeFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new nu.xom.Element;

        specialinvoke $r0.<nu.xom.Element: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public nu.xom.Nodes finishMakingElement(nu.xom.Element)
    {
        nu.xom.Nodes $r0;
        nu.xom.NodeFactory r2;
        nu.xom.Element r1;

        r2 := @this: nu.xom.NodeFactory;

        r1 := @parameter0: nu.xom.Element;

        $r0 = new nu.xom.Nodes;

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>(r1);

        return $r0;
    }

    public nu.xom.Document startMakingDocument()
    {
        nu.xom.NodeFactory r2;
        nu.xom.Document $r0;
        nu.xom.Element $r1;

        r2 := @this: nu.xom.NodeFactory;

        $r0 = new nu.xom.Document;

        $r1 = staticinvoke <nu.xom.Element: nu.xom.Element build(java.lang.String,java.lang.String,java.lang.String)>("root", "http://www.xom.nu/fakeRoot", "root");

        specialinvoke $r0.<nu.xom.Document: void <init>(nu.xom.Element)>($r1);

        return $r0;
    }

    public void finishMakingDocument(nu.xom.Document)
    {
        nu.xom.NodeFactory r0;
        nu.xom.Document r1;

        r0 := @this: nu.xom.NodeFactory;

        r1 := @parameter0: nu.xom.Document;

        return;
    }

    public nu.xom.Nodes makeAttribute(java.lang.String, java.lang.String, java.lang.String, nu.xom.Attribute$Type)
    {
        nu.xom.Attribute $r1;
        nu.xom.Attribute$Type r5;
        nu.xom.NodeFactory r6;
        nu.xom.Nodes $r0;
        java.lang.String r2, r3, r4;

        r6 := @this: nu.xom.NodeFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: nu.xom.Attribute$Type;

        $r0 = new nu.xom.Nodes;

        $r1 = new nu.xom.Attribute;

        specialinvoke $r1.<nu.xom.Attribute: void <init>(java.lang.String,java.lang.String,java.lang.String,nu.xom.Attribute$Type)>(r2, r3, r4, r5);

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>($r1);

        return $r0;
    }

    public nu.xom.Nodes makeComment(java.lang.String)
    {
        nu.xom.NodeFactory r3;
        nu.xom.Nodes $r0;
        java.lang.String r2;
        nu.xom.Comment $r1;

        r3 := @this: nu.xom.NodeFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = new nu.xom.Nodes;

        $r1 = new nu.xom.Comment;

        specialinvoke $r1.<nu.xom.Comment: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>($r1);

        return $r0;
    }

    public nu.xom.Nodes makeDocType(java.lang.String, java.lang.String, java.lang.String)
    {
        nu.xom.NodeFactory r5;
        nu.xom.Nodes $r0;
        java.lang.String r2, r3, r4;
        nu.xom.DocType $r1;

        r5 := @this: nu.xom.NodeFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new nu.xom.Nodes;

        $r1 = new nu.xom.DocType;

        specialinvoke $r1.<nu.xom.DocType: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>($r1);

        return $r0;
    }

    public nu.xom.Nodes makeText(java.lang.String)
    {
        nu.xom.NodeFactory r3;
        nu.xom.Nodes $r0;
        java.lang.String r2;
        nu.xom.Text $r1;

        r3 := @this: nu.xom.NodeFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = new nu.xom.Nodes;

        $r1 = new nu.xom.Text;

        specialinvoke $r1.<nu.xom.Text: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>($r1);

        return $r0;
    }

    nu.xom.Nodes makeCDATASection(java.lang.String)
    {
        nu.xom.Nodes $r2;
        java.lang.String r1;
        nu.xom.NodeFactory r0;

        r0 := @this: nu.xom.NodeFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<nu.xom.NodeFactory: nu.xom.Nodes makeText(java.lang.String)>(r1);

        return $r2;
    }

    public nu.xom.Nodes makeProcessingInstruction(java.lang.String, java.lang.String)
    {
        nu.xom.NodeFactory r4;
        nu.xom.Nodes $r0;
        nu.xom.ProcessingInstruction $r1;
        java.lang.String r2, r3;

        r4 := @this: nu.xom.NodeFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new nu.xom.Nodes;

        $r1 = new nu.xom.ProcessingInstruction;

        specialinvoke $r1.<nu.xom.ProcessingInstruction: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        specialinvoke $r0.<nu.xom.Nodes: void <init>(nu.xom.Node)>($r1);

        return $r0;
    }

    void addAttribute(nu.xom.Element, nu.xom.Attribute)
    {
        nu.xom.Attribute r1;
        nu.xom.NodeFactory r2;
        nu.xom.Element r0;

        r2 := @this: nu.xom.NodeFactory;

        r0 := @parameter0: nu.xom.Element;

        r1 := @parameter1: nu.xom.Attribute;

        virtualinvoke r0.<nu.xom.Element: void addAttribute(nu.xom.Attribute)>(r1);

        return;
    }

    void insertChild(nu.xom.Element, nu.xom.Node, int)
    {
        nu.xom.NodeFactory r2;
        nu.xom.Element r0;
        int i0;
        nu.xom.Node r1;

        r2 := @this: nu.xom.NodeFactory;

        r0 := @parameter0: nu.xom.Element;

        r1 := @parameter1: nu.xom.Node;

        i0 := @parameter2: int;

        virtualinvoke r0.<nu.xom.Element: void insertChild(nu.xom.Node,int)>(r1, i0);

        return;
    }
}
