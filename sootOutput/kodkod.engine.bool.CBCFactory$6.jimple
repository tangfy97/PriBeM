final class kodkod.engine.bool.CBCFactory$6 extends kodkod.engine.bool.CBCFactory$Assembler
{
    final kodkod.engine.bool.CBCFactory this$0;

    void <init>(kodkod.engine.bool.CBCFactory)
    {
        kodkod.engine.bool.CBCFactory$6 r0;
        kodkod.engine.bool.CBCFactory r1;

        r0 := @this: kodkod.engine.bool.CBCFactory$6;

        r1 := @parameter0: kodkod.engine.bool.CBCFactory;

        r0.<kodkod.engine.bool.CBCFactory$6: kodkod.engine.bool.CBCFactory this$0> = r1;

        specialinvoke r0.<kodkod.engine.bool.CBCFactory$Assembler: void <init>(kodkod.engine.bool.CBCFactory$Assembler)>(null);

        return;
    }

    kodkod.engine.bool.BooleanValue assemble(kodkod.engine.bool.Operator$Nary, kodkod.engine.bool.BooleanFormula, kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.Operator$Nary r1;
        kodkod.engine.bool.BooleanFormula r2, r3, $r5;
        java.lang.AssertionError $r8;
        kodkod.engine.bool.Operator $r6, $r9, $r10;
        kodkod.engine.bool.Operator$Ternary $r7;
        kodkod.engine.bool.CBCFactory$6 r0;
        kodkod.engine.bool.CBCFactory $r4;
        boolean $z0;

        r0 := @this: kodkod.engine.bool.CBCFactory$6;

        r1 := @parameter0: kodkod.engine.bool.Operator$Nary;

        r2 := @parameter1: kodkod.engine.bool.BooleanFormula;

        r3 := @parameter2: kodkod.engine.bool.BooleanFormula;

        $z0 = <kodkod.engine.bool.CBCFactory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke r2.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        $r7 = <kodkod.engine.bool.Operator: kodkod.engine.bool.Operator$Ternary ITE>;

        if $r6 != $r7 goto label1;

        $r9 = virtualinvoke r3.<kodkod.engine.bool.BooleanFormula: kodkod.engine.bool.Operator op()>();

        $r10 = <kodkod.engine.bool.Operator: kodkod.engine.bool.Operator VAR>;

        if $r9 == $r10 goto label2;

     label1:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $r4 = r0.<kodkod.engine.bool.CBCFactory$6: kodkod.engine.bool.CBCFactory this$0>;

        $r5 = staticinvoke <kodkod.engine.bool.CBCFactory: kodkod.engine.bool.BooleanFormula access$1(kodkod.engine.bool.CBCFactory,kodkod.engine.bool.Operator$Nary,kodkod.engine.bool.BooleanFormula,kodkod.engine.bool.BooleanFormula)>($r4, r1, r2, r3);

        return $r5;
    }
}
