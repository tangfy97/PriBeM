class org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator extends java.lang.Object implements java.util.Iterator
{

    private void <init>()
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator r0;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator r0;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator;

        return 0;
    }

    public java.lang.Object next()
    {
        org.xmlpull.v1.builder.XmlBuilderException $r0;
        org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator r1;

        r1 := @this: org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator;

        $r0 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r0.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>("this iterator has no content and next() is not allowed");

        throw $r0;
    }

    public void remove()
    {
        org.xmlpull.v1.builder.XmlBuilderException $r0;
        org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator r1;

        r1 := @this: org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator;

        $r0 = new org.xmlpull.v1.builder.XmlBuilderException;

        specialinvoke $r0.<org.xmlpull.v1.builder.XmlBuilderException: void <init>(java.lang.String)>("this iterator has no content and remove() is not allowed");

        throw $r0;
    }

    void <init>(org.xmlpull.v1.builder.impl.XmlElementImpl$1)
    {
        org.xmlpull.v1.builder.impl.XmlElementImpl$1 r1;
        org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator r0;

        r0 := @this: org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator;

        r1 := @parameter0: org.xmlpull.v1.builder.impl.XmlElementImpl$1;

        specialinvoke r0.<org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator: void <init>()>();

        return;
    }
}
