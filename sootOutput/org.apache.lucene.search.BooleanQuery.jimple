public class org.apache.lucene.search.BooleanQuery extends org.apache.lucene.search.Query implements java.lang.Iterable
{
    private static int maxClauseCount;
    private java.util.ArrayList clauses;
    private final boolean disableCoord;
    protected int minNrShouldMatch;

    public static int getMaxClauseCount()
    {
        int $i0;

        $i0 = <org.apache.lucene.search.BooleanQuery: int maxClauseCount>;

        return $i0;
    }

    public static void setMaxClauseCount(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxClauseCount must be >= 1");

        throw $r0;

     label1:
        <org.apache.lucene.search.BooleanQuery: int maxClauseCount> = i0;

        return;
    }

    public void <init>()
    {
        org.apache.lucene.search.BooleanQuery r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        specialinvoke r0.<org.apache.lucene.search.Query: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses> = $r1;

        r0.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch> = 0;

        r0.<org.apache.lucene.search.BooleanQuery: boolean disableCoord> = 0;

        return;
    }

    public void <init>(boolean)
    {
        org.apache.lucene.search.BooleanQuery r0;
        java.util.ArrayList $r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.lucene.search.Query: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses> = $r1;

        r0.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch> = 0;

        r0.<org.apache.lucene.search.BooleanQuery: boolean disableCoord> = z0;

        return;
    }

    public boolean isCoordDisabled()
    {
        org.apache.lucene.search.BooleanQuery r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $z0 = r0.<org.apache.lucene.search.BooleanQuery: boolean disableCoord>;

        return $z0;
    }

    public void setMinimumNumberShouldMatch(int)
    {
        int i0;
        org.apache.lucene.search.BooleanQuery r0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch> = i0;

        return;
    }

    public int getMinimumNumberShouldMatch()
    {
        int $i0;
        org.apache.lucene.search.BooleanQuery r0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $i0 = r0.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        return $i0;
    }

    public void add(org.apache.lucene.search.Query, org.apache.lucene.search.BooleanClause$Occur)
    {
        org.apache.lucene.search.Query r2;
        org.apache.lucene.search.BooleanQuery r0;
        org.apache.lucene.search.BooleanClause$Occur r3;
        org.apache.lucene.search.BooleanClause $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        r2 := @parameter0: org.apache.lucene.search.Query;

        r3 := @parameter1: org.apache.lucene.search.BooleanClause$Occur;

        $r1 = new org.apache.lucene.search.BooleanClause;

        specialinvoke $r1.<org.apache.lucene.search.BooleanClause: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>(r2, r3);

        virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.BooleanClause)>($r1);

        return;
    }

    public void add(org.apache.lucene.search.BooleanClause)
    {
        org.apache.lucene.search.BooleanQuery r0;
        int $i0, $i1;
        org.apache.lucene.search.BooleanQuery$TooManyClauses $r4;
        java.util.ArrayList $r1, $r3;
        org.apache.lucene.search.BooleanClause r2;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        r2 := @parameter0: org.apache.lucene.search.BooleanClause;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = <org.apache.lucene.search.BooleanQuery: int maxClauseCount>;

        if $i0 < $i1 goto label1;

        $r4 = new org.apache.lucene.search.BooleanQuery$TooManyClauses;

        specialinvoke $r4.<org.apache.lucene.search.BooleanQuery$TooManyClauses: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public org.apache.lucene.search.BooleanClause[] getClauses()
    {
        java.lang.Object[] $r4;
        org.apache.lucene.search.BooleanQuery r0;
        int $i0;
        org.apache.lucene.search.BooleanClause[] $r3, $r5;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r2 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (org.apache.lucene.search.BooleanClause)[$i0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.lucene.search.BooleanClause[]) $r4;

        return $r5;
    }

    public java.util.List clauses()
    {
        org.apache.lucene.search.BooleanQuery r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        return $r1;
    }

    public final java.util.Iterator iterator()
    {
        java.util.List $r1;
        org.apache.lucene.search.BooleanQuery r0;
        java.util.Iterator $r2;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: java.util.List clauses()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.BooleanQuery$BooleanWeight $r0;
        org.apache.lucene.search.BooleanQuery r1;
        org.apache.lucene.search.IndexSearcher r2;
        boolean $z0;

        r1 := @this: org.apache.lucene.search.BooleanQuery;

        r2 := @parameter0: org.apache.lucene.search.IndexSearcher;

        $r0 = new org.apache.lucene.search.BooleanQuery$BooleanWeight;

        $z0 = r1.<org.apache.lucene.search.BooleanQuery: boolean disableCoord>;

        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery$BooleanWeight: void <init>(org.apache.lucene.search.BooleanQuery,org.apache.lucene.search.IndexSearcher,boolean)>(r1, r2, $z0);

        return $r0;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r4, $r6, $r7, $r14, $r15, $r16, r18;
        java.util.ArrayList $r1, $r9, $r11, $r12, $r20;
        byte $b2;
        int $i0, $i1, i3, $i4;
        org.apache.lucene.search.BooleanClause$Occur $r10;
        boolean $z0;
        org.apache.lucene.search.BooleanClause r3, $r8, r17;
        org.apache.lucene.search.BooleanQuery r0, r19;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r2, $r13;
        org.apache.lucene.index.IndexReader r5;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        r5 := @parameter0: org.apache.lucene.index.IndexReader;

        $i0 = r0.<org.apache.lucene.search.BooleanQuery: int minNrShouldMatch>;

        if $i0 != 0 goto label3;

        $r11 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i1 != 1 goto label3;

        $r12 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r17 = (org.apache.lucene.search.BooleanClause) $r13;

        $z0 = virtualinvoke r17.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z0 != 0 goto label3;

        $r14 = virtualinvoke r17.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r15 = virtualinvoke $r14.<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r5);

        r18 = $r15;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $b2 = $f0 cmpl 1.0F;

        if $b2 == 0 goto label2;

        $r16 = virtualinvoke r17.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        if $r15 != $r16 goto label1;

        r18 = virtualinvoke $r15.<org.apache.lucene.search.Query: org.apache.lucene.search.Query clone()>();

     label1:
        $f1 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $f2 = virtualinvoke r18.<org.apache.lucene.search.Query: float getBoost()>();

        $f3 = $f1 * $f2;

        virtualinvoke r18.<org.apache.lucene.search.Query: void setBoost(float)>($f3);

     label2:
        return r18;

     label3:
        r19 = null;

        i3 = 0;

     label4:
        $r20 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i4 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        if i3 >= $i4 goto label7;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (org.apache.lucene.search.BooleanClause) $r2;

        $r4 = virtualinvoke r3.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r6 = virtualinvoke $r4.<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r5);

        $r7 = virtualinvoke r3.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        if $r6 == $r7 goto label6;

        if r19 != null goto label5;

        r19 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanQuery clone()>();

     label5:
        $r9 = r19.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r8 = new org.apache.lucene.search.BooleanClause;

        $r10 = virtualinvoke r3.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.BooleanClause$Occur getOccur()>();

        specialinvoke $r8.<org.apache.lucene.search.BooleanClause: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r6, $r10);

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i3, $r8);

     label6:
        i3 = i3 + 1;

        goto label4;

     label7:
        if r19 == null goto label8;

        return r19;

     label8:
        return r0;
    }

    public void extractTerms(java.util.Set)
    {
        org.apache.lucene.search.Query $r7;
        java.util.Iterator $r2;
        java.util.Set r8;
        java.util.ArrayList $r1;
        org.apache.lucene.search.BooleanClause r4;
        org.apache.lucene.search.BooleanQuery r0;
        java.lang.Object $r3;
        org.apache.lucene.search.BooleanClause$Occur $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        r8 := @parameter0: java.util.Set;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.search.BooleanClause) $r3;

        $r5 = virtualinvoke r4.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.BooleanClause$Occur getOccur()>();

        $r6 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        if $r5 == $r6 goto label2;

        $r7 = virtualinvoke r4.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        virtualinvoke $r7.<org.apache.lucene.search.Query: void extractTerms(java.util.Set)>(r8);

     label2:
        goto label1;

     label3:
        return;
    }

    public org.apache.lucene.search.BooleanQuery clone()
    {
        org.apache.lucene.search.Query $r1;
        org.apache.lucene.search.BooleanQuery r0, r2;
        java.lang.Object $r4;
        java.util.ArrayList $r3, $r5;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r1 = specialinvoke r0.<org.apache.lucene.search.Query: org.apache.lucene.search.Query clone()>();

        r2 = (org.apache.lucene.search.BooleanQuery) $r1;

        $r3 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r5 = (java.util.ArrayList) $r4;

        r2.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses> = $r5;

        return r2;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.search.Query $r11;
        byte $b0, $b2;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r0;
        java.util.ArrayList $r4, $r10, $r12;
        int $i1, $i3, $i4, i5, $i6, $i7, $i8;
        java.lang.String $r2, $r3, r7, $r8, $r9;
        double $d0;
        org.apache.lucene.search.BooleanClause r6;
        org.apache.lucene.search.BooleanQuery r1;
        java.lang.Object $r5;

        r1 := @this: org.apache.lucene.search.BooleanQuery;

        r7 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $f0 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $d0 = (double) $f0;

        $b0 = $d0 cmpl 1.0;

        if $b0 != 0 goto label01;

        $i4 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        if $i4 <= 0 goto label02;

     label01:
        $z6 = 1;

        $z5 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

     label03:
        z0 = $z6;

        if $z5 == 0 goto label04;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

     label04:
        i5 = 0;

     label05:
        $r10 = r1.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i6 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label12;

        $r4 = r1.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r6 = (org.apache.lucene.search.BooleanClause) $r5;

        $z1 = virtualinvoke r6.<org.apache.lucene.search.BooleanClause: boolean isProhibited()>();

        if $z1 == 0 goto label06;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        goto label07;

     label06:
        $z2 = virtualinvoke r6.<org.apache.lucene.search.BooleanClause: boolean isRequired()>();

        if $z2 == 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

     label07:
        $r11 = virtualinvoke r6.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        if $r11 == null goto label09;

        $z3 = $r11 instanceof org.apache.lucene.search.BooleanQuery;

        if $z3 == 0 goto label08;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r9 = virtualinvoke $r11.<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)>(r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        goto label10;

     label08:
        $r8 = virtualinvoke $r11.<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)>(r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label10;

     label09:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

     label10:
        $r12 = r1.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i7 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i8 = $i7 - 1;

        if i5 == $i8 goto label11;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label11:
        i5 = i5 + 1;

        goto label05;

     label12:
        if z0 == 0 goto label13;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label13:
        $i1 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        if $i1 <= 0 goto label14;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $i3 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label14:
        $f1 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $b2 = $f1 cmpl 1.0F;

        if $b2 == 0 goto label15;

        $f2 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $r3 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label15:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.ArrayList $r3, $r4;
        org.apache.lucene.search.BooleanQuery r1, r2;
        byte $b0;
        int $i1, $i2;
        float $f0, $f1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: org.apache.lucene.search.BooleanQuery;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.BooleanQuery;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.lucene.search.BooleanQuery) r0;

        $f0 = virtualinvoke r2.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $f1 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label2;

        $r4 = r2.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $r3 = r1.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r2.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        $i2 = virtualinvoke r1.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        if $i1 != $i2 goto label2;

        $z3 = r2.<org.apache.lucene.search.BooleanQuery: boolean disableCoord>;

        $z2 = r1.<org.apache.lucene.search.BooleanQuery: boolean disableCoord>;

        if $z3 != $z2 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int hashCode()
    {
        java.util.ArrayList $r1;
        org.apache.lucene.search.BooleanQuery r0;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: float getBoost()>();

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int hashCode()>();

        $i2 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: int getMinimumNumberShouldMatch()>();

        $i3 = $i1 + $i2;

        $z0 = r0.<org.apache.lucene.search.BooleanQuery: boolean disableCoord>;

        if $z0 == 0 goto label1;

        $b6 = 17;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        $i4 = $i3 + $b6;

        $i5 = $i0 ^ $i4;

        return $i5;
    }

    public volatile org.apache.lucene.search.Query clone()
    {
        org.apache.lucene.search.BooleanQuery r0, $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanQuery clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.search.BooleanQuery r0, $r1;

        r0 := @this: org.apache.lucene.search.BooleanQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.BooleanQuery: org.apache.lucene.search.BooleanQuery clone()>();

        return $r1;
    }

    static int access$000()
    {
        int $i0;

        $i0 = <org.apache.lucene.search.BooleanQuery: int maxClauseCount>;

        return $i0;
    }

    static java.util.ArrayList access$100(org.apache.lucene.search.BooleanQuery)
    {
        org.apache.lucene.search.BooleanQuery r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.apache.lucene.search.BooleanQuery;

        $r1 = r0.<org.apache.lucene.search.BooleanQuery: java.util.ArrayList clauses>;

        return $r1;
    }

    static void <clinit>()
    {
        <org.apache.lucene.search.BooleanQuery: int maxClauseCount> = 1024;

        return;
    }
}
