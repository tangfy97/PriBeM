class ucar.atd.dorade.DoradeCSFD extends ucar.atd.dorade.DoradeCELV
{
    protected int nSegments;
    protected float rangeToFirstCell;
    protected float[] segCellSpacing;
    protected short[] segNCells;

    public void <init>(java.io.RandomAccessFile, boolean) throws ucar.atd.dorade.DoradeDescriptor$DescriptorException
    {
        java.io.RandomAccessFile r1;
        byte[] $r2;
        boolean z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, f10;
        short[] $r4, $r7, $r14, $r15;
        float[] $r3, $r5, $r8, $r9, $r10, $r11, $r12, $r13;
        short $s6, $s13, $s14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, i17, i18, i19, i20, $i21, $i22;
        java.io.PrintStream $r6;
        ucar.atd.dorade.DoradeCSFD r0;

        r0 := @this: ucar.atd.dorade.DoradeCSFD;

        r1 := @parameter0: java.io.RandomAccessFile;

        z0 := @parameter1: boolean;

        specialinvoke r0.<ucar.atd.dorade.DoradeCELV: void <init>()>();

        $r2 = virtualinvoke r0.<ucar.atd.dorade.DoradeCSFD: byte[] readDescriptor(java.io.RandomAccessFile,boolean,java.lang.String)>(r1, z0, "CSFD");

        $i0 = virtualinvoke r0.<ucar.atd.dorade.DoradeCSFD: int grabInt(byte[],int)>($r2, 8);

        r0.<ucar.atd.dorade.DoradeCSFD: int nSegments> = $i0;

        $f0 = virtualinvoke r0.<ucar.atd.dorade.DoradeCSFD: float grabFloat(byte[],int)>($r2, 12);

        r0.<ucar.atd.dorade.DoradeCSFD: float rangeToFirstCell> = $f0;

        $i1 = r0.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        $r3 = newarray (float)[$i1];

        r0.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing> = $r3;

        $i2 = r0.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        $r4 = newarray (short)[$i2];

        r0.<ucar.atd.dorade.DoradeCSFD: short[] segNCells> = $r4;

        r0.<ucar.atd.dorade.DoradeCSFD: int nCells> = 0;

        i17 = 0;

     label1:
        $i3 = r0.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        if i17 >= $i3 goto label2;

        $r13 = r0.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing>;

        $i9 = 4 * i17;

        $i10 = 16 + $i9;

        $f9 = virtualinvoke r0.<ucar.atd.dorade.DoradeCSFD: float grabFloat(byte[],int)>($r2, $i10);

        $r13[i17] = $f9;

        $r14 = r0.<ucar.atd.dorade.DoradeCSFD: short[] segNCells>;

        $i11 = 2 * i17;

        $i12 = 48 + $i11;

        $s13 = virtualinvoke r0.<ucar.atd.dorade.DoradeCSFD: short grabShort(byte[],int)>($r2, $i12);

        $r14[i17] = $s13;

        $i15 = r0.<ucar.atd.dorade.DoradeCSFD: int nCells>;

        $r15 = r0.<ucar.atd.dorade.DoradeCSFD: short[] segNCells>;

        $s14 = $r15[i17];

        $i21 = (int) $s14;

        $i16 = $i15 + $i21;

        r0.<ucar.atd.dorade.DoradeCSFD: int nCells> = $i16;

        i17 = i17 + 1;

        goto label1;

     label2:
        $i4 = r0.<ucar.atd.dorade.DoradeCSFD: int nCells>;

        $r5 = newarray (float)[$i4];

        r0.<ucar.atd.dorade.DoradeCSFD: float[] ranges> = $r5;

        i18 = 0;

        f10 = 0.0F;

        i19 = 0;

     label3:
        $i5 = r0.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        if i19 >= $i5 goto label8;

        i20 = 0;

     label4:
        $r7 = r0.<ucar.atd.dorade.DoradeCSFD: short[] segNCells>;

        $s6 = $r7[i19];

        $i22 = (int) $s6;

        if i20 >= $i22 goto label7;

        if i18 != 0 goto label5;

        $r11 = r0.<ucar.atd.dorade.DoradeCSFD: float[] ranges>;

        $i8 = i18;

        i18 = i18 + 1;

        $f5 = r0.<ucar.atd.dorade.DoradeCSFD: float rangeToFirstCell>;

        $r11[$i8] = $f5;

        $f8 = r0.<ucar.atd.dorade.DoradeCSFD: float rangeToFirstCell>;

        $r12 = r0.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing>;

        $f6 = $r12[i19];

        $f7 = $f6 / 2.0F;

        f10 = $f8 + $f7;

        goto label6;

     label5:
        $r9 = r0.<ucar.atd.dorade.DoradeCSFD: float[] ranges>;

        $i7 = i18;

        i18 = i18 + 1;

        $r8 = r0.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing>;

        $f1 = $r8[i19];

        $f2 = $f1 / 2.0F;

        $f3 = f10 + $f2;

        $r9[$i7] = $f3;

        $r10 = r0.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing>;

        $f4 = $r10[i19];

        f10 = f10 + $f4;

     label6:
        i20 = i20 + 1;

        goto label4;

     label7:
        i19 = i19 + 1;

        goto label3;

     label8:
        $z1 = r0.<ucar.atd.dorade.DoradeCSFD: boolean verbose>;

        if $z1 == 0 goto label9;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>(r0);

     label9:
        return;
    }

    public java.lang.String toString()
    {
        float $f0;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33;
        short[] $r18;
        float[] $r25;
        short $s2;
        int $i0, $i1, i3, $i4;
        java.lang.String $r8, $r14, $r21, r28;
        ucar.atd.dorade.DoradeCSFD r3;

        r3 := @this: ucar.atd.dorade.DoradeCSFD;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSFD\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  number of segments: ");

        $i0 = r3.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r28 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = 0;

     label1:
        $i1 = r3.<ucar.atd.dorade.DoradeCSFD: int nSegments>;

        if i3 >= $i1 goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  segment ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    # of cells: ");

        $r18 = r3.<ucar.atd.dorade.DoradeCSFD: short[] segNCells>;

        $s2 = $r18[i3];

        $i4 = (int) $s2;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    cell spacing: ");

        $r25 = r3.<ucar.atd.dorade.DoradeCSFD: float[] segCellSpacing>;

        $f0 = $r25[i3];

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m");

        r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        i3 = i3 + 1;

        goto label1;

     label2:
        return r28;
    }
}
