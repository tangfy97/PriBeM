public class org.eclipse.jdt.internal.compiler.ast.WhileStatement extends org.eclipse.jdt.internal.compiler.ast.Statement
{
    public org.eclipse.jdt.internal.compiler.ast.Expression condition;
    public org.eclipse.jdt.internal.compiler.ast.Statement action;
    private org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel;
    private org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel;
    int preCondInitStateIndex;
    int condIfTrueInitStateIndex;
    int mergedInitStateIndex;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Statement, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r0;
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        int i0, i1, $i2, $i3, $i5, $i7, $i9;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Statement;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        $i5 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int preCondInitStateIndex> = $i5;

        $i7 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int condIfTrueInitStateIndex> = $i7;

        $i9 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex> = $i9;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action> = r2;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.EmptyStatement;

        if $z0 == 0 goto label1;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits>;

        $i3 = $i2 | 1;

        r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int bits> = $i3;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int sourceStart> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int sourceEnd> = i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r12, $r39, $r46, $r51;
        byte $b8;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r7;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4, r33, $r34, $r36, $r37, $r38;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r32;
        org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext $r54, $r55;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r6, $r9, $r10, $r11, $r18, $r19, $r20, $r26, $r27, $r30, $r43, r45, $r47, $r49;
        long $l7;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r8, $r13, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r40, $r50;
        org.eclipse.jdt.internal.compiler.ast.Statement $r14, $r31, $r44, $r48;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r35, $r41;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r16, $r17, $r52, $r53;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r52 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r52.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel> = $r52;

        $r53 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r53.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel> = $r53;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        r33 = $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r33 == $r4 goto label01;

        $z8 = virtualinvoke r33.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z8 == 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z0 = $z9;

        $r34 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r33 == $r34 goto label03;

        $z7 = virtualinvoke r33.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z7 != 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z1 = $z10;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r36 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r37 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r36 == $r37 goto label05;

        $z6 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z6 == 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        z2 = $z11;

        $r38 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r36 == $r38 goto label07;

        $z5 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z5 != 0 goto label07;

        $z12 = 1;

        goto label08;

     label07:
        $z12 = 0;

     label08:
        z3 = $z12;

        $r39 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i9 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6);

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int preCondInitStateIndex> = $i9;

        $r40 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo nullInfoLessUnconditionalCopy()>();

        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r54 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        specialinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r7, r6, r0, null, null, r5);

        $r43 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r54, $r40);

        $r44 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r44 == null goto label09;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $z4 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z4 == 0 goto label12;

        $r32 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l7 = $r32.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b8 = $l7 cmp 3080192L;

        $i12 = (int) $b8;

        if $i12 > 0 goto label12;

     label09:
        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r43);

        $r8 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r8);

        if z0 == 0 goto label10;

        $r13 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        return $r13;

     label10:
        $r9 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $r10 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        $r11 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r10);

        if z2 == 0 goto label11;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label11:
        $r12 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i0 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r11);

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex> = $i0;

        return $r11;

     label12:
        $r55 = new org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        specialinvoke $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r7, r6, r0, $r17, $r16, r5);

        if z1 == 0 goto label13;

        r45 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        goto label14;

     label13:
        $r18 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()>();

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        r45 = $r19;

        if z3 == 0 goto label14;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label14:
        $r46 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $r47 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()>();

        $i10 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r47);

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int condIfTrueInitStateIndex> = $i10;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $z13 = virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean complainIfUnreachable(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r45, r5, 0);

        if $z13 != 0 goto label15;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        r45 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.Statement: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r55, r45);

     label15:
        $r20 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $i2 = r45.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $r21 = $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnContinue>;

        $i1 = $r21.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: int tagBits>;

        $i3 = $i2 & $i1;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label16;

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel> = null;

        $r30 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r30);

        goto label17;

     label16:
        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r43);

        $r22 = $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnContinue>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r24 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedWith(org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>($r23);

        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r24);

        virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredFinalChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r24);

        virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: void complainOnDeferredNullChecks(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r5, $r24);

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r26 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addPotentialInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r25);

        $r27 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r27);

     label17:
        $r28 = $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        $i5 = $r28.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: int tagBits>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label18;

        $r49 = $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        goto label19;

     label18:
        $r29 = $r55.<org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initsOnBreak>;

        $r49 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r29);

     label19:
        if z0 == 0 goto label20;

        $z14 = 0;

        goto label21;

     label20:
        $z14 = 1;

     label21:
        $r50 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo mergedOptimizedBranches(org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean,boolean)>($r49, z2, $r20, z3, $z14);

        $r51 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i11 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r50);

        r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex> = $i11;

        return $r50;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement $r11, $r16, $r17, $r29;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r8, $r15, $r19, $r20, $r22, $r26, $r27;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4, $r9, $r10, $r21, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r13;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r5, $r6, $r7, $r12, $r14, $r18, $r25, $r30, $r31;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i20, $i22, $i24, $i26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label01;

        return;

     label01:
        i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r4 goto label02;

        $z2 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z2 != 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        if $z3 == 0 goto label05;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r13, r1, 0);

        $i14 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        $i20 = (int) -1;

        if $i14 == $i20 goto label04;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i16);

        $i17 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i17);

     label04:
        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i15);

        return;

     label05:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void initialize(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        if $r6 != null goto label06;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r24 = $r22.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r23 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r24 != $r23 goto label08;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r13, r1, null, $r25, 1);

        goto label08;

     label06:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void initialize(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r10 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r9 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r10 == $r9 goto label07;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r21 = $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z1 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z1 != 0 goto label08;

     label07:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r11 == null goto label08;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $z0 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Statement: boolean isEmptyBlock()>();

        if $z0 != 0 goto label08;

        i18 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r18);

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $i13 = $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i18, $i13);

     label08:
        $r31 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r31.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r29 == null goto label10;

        $i7 = $r31.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits>;

        $i8 = $i7 | 2;

        $r31.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits> = $i8;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int condIfTrueInitStateIndex>;

        $i22 = (int) -1;

        if $i9 == $i22 goto label09;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int condIfTrueInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i12);

     label09:
        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Statement: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r13, r1);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int preCondInitStateIndex>;

        $i24 = (int) -1;

        if $i10 == $i24 goto label11;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int preCondInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i11);

        goto label11;

     label10:
        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label11:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        if $r30 == null goto label12;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel continueLabel>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r13, r1, $r31, null, 1);

     label12:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        $i26 = (int) -1;

        if $i3 == $i26 goto label13;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i5);

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int mergedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r13, $i6);

     label13:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.codegen.BranchLabel breakLabel>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i4);

        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r0;
        org.eclipse.jdt.internal.compiler.ast.Statement $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeExpecting(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, $r2);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, $r4, $r4);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r6 == null goto label1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

     label1:
        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r2;
        org.eclipse.jdt.internal.compiler.ast.Statement $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        java.lang.StringBuffer r0, $r1, $r4;
        int i0, $i1;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.WhileStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("while (");

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r5 != null goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label2;

     label1:
        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        $i1 = i0 + 1;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Statement: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>($i1, r0);

     label2:
        return r0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Statement $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        org.eclipse.jdt.internal.compiler.ast.WhileStatement r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.WhileStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.WhileStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Expression condition>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        if $r4 == null goto label1;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.WhileStatement: org.eclipse.jdt.internal.compiler.ast.Statement action>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.WhileStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
