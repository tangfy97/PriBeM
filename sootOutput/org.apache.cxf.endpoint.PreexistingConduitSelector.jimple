public class org.apache.cxf.endpoint.PreexistingConduitSelector extends java.lang.Object implements org.apache.cxf.endpoint.ConduitSelector, java.io.Closeable
{
    private org.apache.cxf.transport.Conduit selectedConduit;
    private org.apache.cxf.endpoint.Endpoint endpoint;

    public void <init>(org.apache.cxf.transport.Conduit)
    {
        org.apache.cxf.transport.Conduit r1;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r1 := @parameter0: org.apache.cxf.transport.Conduit;

        specialinvoke r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: void <init>(org.apache.cxf.transport.Conduit,org.apache.cxf.endpoint.Endpoint)>(r1, null);

        return;
    }

    public void <init>(org.apache.cxf.transport.Conduit, org.apache.cxf.endpoint.Endpoint)
    {
        org.apache.cxf.endpoint.Endpoint r2;
        org.apache.cxf.transport.Conduit r1;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r1 := @parameter0: org.apache.cxf.transport.Conduit;

        r2 := @parameter1: org.apache.cxf.endpoint.Endpoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.transport.Conduit selectedConduit> = r1;

        r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.endpoint.Endpoint endpoint> = r2;

        return;
    }

    public void prepare(org.apache.cxf.message.Message)
    {
        org.apache.cxf.transport.Conduit $r5;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.endpoint.PreexistingConduitSelector r4;
        org.apache.cxf.transport.MessageObserver r3;
        java.lang.Object $r2;
        org.apache.cxf.message.Exchange $r1;

        r4 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/transport/MessageObserver;");

        r3 = (org.apache.cxf.transport.MessageObserver) $r2;

        if r3 == null goto label1;

        $r5 = r4.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.transport.Conduit selectedConduit>;

        interfaceinvoke $r5.<org.apache.cxf.transport.Conduit: void setMessageObserver(org.apache.cxf.transport.MessageObserver)>(r3);

     label1:
        return;
    }

    public org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)
    {
        org.apache.cxf.transport.Conduit $r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.transport.Conduit selectedConduit>;

        return $r1;
    }

    public void complete(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.transport.Conduit $r3;
        org.apache.cxf.message.Message $r1, $r4;
        org.apache.cxf.endpoint.PreexistingConduitSelector r2;
        java.io.IOException $r5;
        org.apache.cxf.message.Exchange r0;

        r2 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r1 == null goto label2;

        $r3 = r2.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.transport.Conduit selectedConduit>;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        interfaceinvoke $r3.<org.apache.cxf.transport.Conduit: void close(org.apache.cxf.message.Message)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.apache.cxf.endpoint.Endpoint getEndpoint()
    {
        org.apache.cxf.endpoint.Endpoint $r1;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        $r1 = r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.endpoint.Endpoint endpoint>;

        return $r1;
    }

    public void setEndpoint(org.apache.cxf.endpoint.Endpoint)
    {
        org.apache.cxf.endpoint.Endpoint r1;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        r1 := @parameter0: org.apache.cxf.endpoint.Endpoint;

        r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.endpoint.Endpoint endpoint> = r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.cxf.transport.Conduit $r1;
        org.apache.cxf.endpoint.PreexistingConduitSelector r0;

        r0 := @this: org.apache.cxf.endpoint.PreexistingConduitSelector;

        $r1 = r0.<org.apache.cxf.endpoint.PreexistingConduitSelector: org.apache.cxf.transport.Conduit selectedConduit>;

        interfaceinvoke $r1.<org.apache.cxf.transport.Conduit: void close()>();

        return;
    }
}
