public class org.eclipse.jetty.server.ResourceCache$Content extends java.lang.Object implements org.eclipse.jetty.http.HttpContent
{
    final org.eclipse.jetty.util.resource.Resource _resource;
    final int _length;
    final java.lang.String _key;
    final long _lastModified;
    final org.eclipse.jetty.io.Buffer _lastModifiedBytes;
    final org.eclipse.jetty.io.Buffer _contentType;
    final org.eclipse.jetty.io.Buffer _etagBuffer;
    volatile long _lastAccessed;
    java.util.concurrent.atomic.AtomicReference _indirectBuffer;
    java.util.concurrent.atomic.AtomicReference _directBuffer;
    final org.eclipse.jetty.server.ResourceCache this$0;

    void <init>(org.eclipse.jetty.server.ResourceCache, java.lang.String, org.eclipse.jetty.util.resource.Resource)
    {
        long $l0, $l2, $l4, $l5, $l6;
        java.util.concurrent.atomic.AtomicReference $r16, $r17;
        org.eclipse.jetty.io.ByteArrayBuffer $r14, $r15, $r18, $r19;
        byte $b1;
        java.util.concurrent.atomic.AtomicInteger $r11, $r12;
        int $i3, $i7, $i8;
        java.lang.String r4, $r8, $r10, $r13;
        org.eclipse.jetty.io.Buffer $r9;
        boolean $z0, $z1;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.util.resource.Resource r5, $r7;
        org.eclipse.jetty.server.ResourceCache r1;
        org.eclipse.jetty.http.MimeTypes $r6;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        r1 := @parameter0: org.eclipse.jetty.server.ResourceCache;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.eclipse.jetty.util.resource.Resource;

        r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r16 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r16.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _indirectBuffer> = $r16;

        $r17 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r17.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _directBuffer> = $r17;

        r0.<org.eclipse.jetty.server.ResourceCache$Content: java.lang.String _key> = r4;

        r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource> = r5;

        $r6 = staticinvoke <org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.http.MimeTypes access$000(org.eclipse.jetty.server.ResourceCache)>(r1);

        $r7 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r8);

        r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _contentType> = $r9;

        $z0 = virtualinvoke r5.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z0 == 0 goto label1;

        $l6 = virtualinvoke r5.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        goto label2;

     label1:
        $l6 = -1L;

     label2:
        r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastModified> = $l6;

        $l0 = r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastModified>;

        $b1 = $l0 cmp 0L;

        $i8 = (int) $b1;

        if $i8 >= 0 goto label3;

        $r14 = null;

        goto label4;

     label3:
        $r18 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r14 = $r18;

        $l2 = r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastModified>;

        $r10 = staticinvoke <org.eclipse.jetty.http.HttpFields: java.lang.String formatDate(long)>($l2);

        specialinvoke $r18.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r10);

     label4:
        r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _lastModifiedBytes> = $r14;

        if $z0 == 0 goto label5;

        $l5 = virtualinvoke r5.<org.eclipse.jetty.util.resource.Resource: long length()>();

        $i7 = (int) $l5;

        goto label6;

     label5:
        $i7 = 0;

     label6:
        r0.<org.eclipse.jetty.server.ResourceCache$Content: int _length> = $i7;

        $r11 = staticinvoke <org.eclipse.jetty.server.ResourceCache: java.util.concurrent.atomic.AtomicInteger access$100(org.eclipse.jetty.server.ResourceCache)>(r1);

        $i3 = r0.<org.eclipse.jetty.server.ResourceCache$Content: int _length>;

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i3);

        $r12 = staticinvoke <org.eclipse.jetty.server.ResourceCache: java.util.concurrent.atomic.AtomicInteger access$200(org.eclipse.jetty.server.ResourceCache)>(r1);

        virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastAccessed> = $l4;

        $z1 = staticinvoke <org.eclipse.jetty.server.ResourceCache: boolean access$300(org.eclipse.jetty.server.ResourceCache)>(r1);

        if $z1 == 0 goto label7;

        $r19 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r15 = $r19;

        $r13 = virtualinvoke r5.<org.eclipse.jetty.util.resource.Resource: java.lang.String getWeakETag()>();

        specialinvoke $r19.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>($r13);

        goto label8;

     label7:
        $r15 = null;

     label8:
        r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _etagBuffer> = $r15;

        return;
    }

    public java.lang.String getKey()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.ResourceCache$Content r0;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.lang.String _key>;

        return $r1;
    }

    public boolean isCached()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.lang.String _key>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMiss()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        return 0;
    }

    public org.eclipse.jetty.util.resource.Resource getResource()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.util.resource.Resource $r1;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer getETag()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _etagBuffer>;

        return $r1;
    }

    boolean isValid()
    {
        long $l0, $l1, $l4, $l5, $l7;
        java.util.concurrent.ConcurrentMap $r3;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        byte $b2, $b6;
        org.eclipse.jetty.util.resource.Resource $r1, $r6;
        int $i3;
        java.lang.Object $r5;
        java.lang.String $r4;
        org.eclipse.jetty.server.ResourceCache $r2;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $l0 = r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastModified>;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $l1 = virtualinvoke $r1.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        $i3 = r0.<org.eclipse.jetty.server.ResourceCache$Content: int _length>;

        $l4 = (long) $i3;

        $r6 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $l5 = virtualinvoke $r6.<org.eclipse.jetty.util.resource.Resource: long length()>();

        $b6 = $l4 cmp $l5;

        if $b6 != 0 goto label1;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.ResourceCache$Content: long _lastAccessed> = $l7;

        return 1;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0>;

        $r3 = staticinvoke <org.eclipse.jetty.server.ResourceCache: java.util.concurrent.ConcurrentMap access$400(org.eclipse.jetty.server.ResourceCache)>($r2);

        $r4 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.lang.String _key>;

        $r5 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>($r4);

        if r0 != $r5 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.server.ResourceCache$Content: void invalidate()>();

     label2:
        return 0;
    }

    protected void invalidate()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;
        java.util.concurrent.atomic.AtomicInteger $r2, $r4;
        org.eclipse.jetty.util.resource.Resource $r5;
        int $i0, $i1;
        org.eclipse.jetty.server.ResourceCache $r1, $r3;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.server.ResourceCache: java.util.concurrent.atomic.AtomicInteger access$100(org.eclipse.jetty.server.ResourceCache)>($r1);

        $i0 = r0.<org.eclipse.jetty.server.ResourceCache$Content: int _length>;

        $i1 = neg $i0;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i1);

        $r3 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0>;

        $r4 = staticinvoke <org.eclipse.jetty.server.ResourceCache: java.util.concurrent.atomic.AtomicInteger access$200(org.eclipse.jetty.server.ResourceCache)>($r3);

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        $r5 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: void release()>();

        return;
    }

    public org.eclipse.jetty.io.Buffer getLastModified()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _lastModifiedBytes>;

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer getContentType()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _contentType>;

        return $r1;
    }

    public void release()
    {
        org.eclipse.jetty.server.ResourceCache$Content r0;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        return;
    }

    public org.eclipse.jetty.io.Buffer getIndirectBuffer()
    {
        java.lang.Object[] $r15;
        java.util.concurrent.atomic.AtomicReference $r1, $r7, $r8;
        org.eclipse.jetty.io.View $r3;
        java.lang.String $r14;
        org.eclipse.jetty.io.Buffer $r6, r16;
        boolean $z0;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.util.resource.Resource $r4;
        java.lang.Object $r2, $r9;
        java.lang.StringBuilder $r11, $r12, $r13;
        org.eclipse.jetty.util.log.Logger $r10;
        org.eclipse.jetty.server.ResourceCache $r5;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _indirectBuffer>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r16 = (org.eclipse.jetty.io.Buffer) $r2;

        if r16 != null goto label3;

        $r5 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0>;

        $r4 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.io.Buffer getIndirectBuffer(org.eclipse.jetty.util.resource.Resource)>($r4);

        if $r6 != null goto label1;

        $r10 = staticinvoke <org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.util.log.Logger access$500()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r14, $r15);

        goto label3;

     label1:
        $r7 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _indirectBuffer>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r6);

        if $z0 == 0 goto label2;

        r16 = $r6;

        goto label3;

     label2:
        $r8 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _indirectBuffer>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r16 = (org.eclipse.jetty.io.Buffer) $r9;

     label3:
        if r16 != null goto label4;

        return null;

     label4:
        $r3 = new org.eclipse.jetty.io.View;

        specialinvoke $r3.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer)>(r16);

        return $r3;
    }

    public org.eclipse.jetty.io.Buffer getDirectBuffer()
    {
        java.lang.Object[] $r15;
        java.util.concurrent.atomic.AtomicReference $r1, $r7, $r8;
        org.eclipse.jetty.io.View $r3;
        java.lang.String $r14;
        org.eclipse.jetty.io.Buffer $r6, r16;
        boolean $z0;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        org.eclipse.jetty.util.resource.Resource $r4;
        java.lang.Object $r2, $r9;
        java.lang.StringBuilder $r11, $r12, $r13;
        org.eclipse.jetty.util.log.Logger $r10;
        org.eclipse.jetty.server.ResourceCache $r5;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _directBuffer>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r16 = (org.eclipse.jetty.io.Buffer) $r2;

        if r16 != null goto label3;

        $r5 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.server.ResourceCache this$0>;

        $r4 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.io.Buffer getDirectBuffer(org.eclipse.jetty.util.resource.Resource)>($r4);

        if $r6 != null goto label1;

        $r10 = staticinvoke <org.eclipse.jetty.server.ResourceCache: org.eclipse.jetty.util.log.Logger access$500()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not load ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r14, $r15);

        goto label3;

     label1:
        $r7 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _directBuffer>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r6);

        if $z0 == 0 goto label2;

        r16 = $r6;

        goto label3;

     label2:
        $r8 = r0.<org.eclipse.jetty.server.ResourceCache$Content: java.util.concurrent.atomic.AtomicReference _directBuffer>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r16 = (org.eclipse.jetty.io.Buffer) $r9;

     label3:
        if r16 != null goto label4;

        return null;

     label4:
        $r3 = new org.eclipse.jetty.io.View;

        specialinvoke $r3.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer)>(r16);

        return $r3;
    }

    public long getContentLength()
    {
        int $i0;
        long $l1;
        org.eclipse.jetty.server.ResourceCache$Content r0;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $i0 = r0.<org.eclipse.jetty.server.ResourceCache$Content: int _length>;

        $l1 = (long) $i0;

        return $l1;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        byte[] $r4, $r6;
        org.eclipse.jetty.server.ResourceCache$Content r0;
        java.io.ByteArrayInputStream $r5;
        org.eclipse.jetty.util.resource.Resource $r2;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer $r1;
        java.io.InputStream $r3;

        r0 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer getIndirectBuffer()>();

        if $r1 == null goto label1;

        $r4 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        if $r4 == null goto label1;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        $i0 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i1 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: int length()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r6, $i0, $i1);

        return $r5;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        long $l0;
        org.eclipse.jetty.server.ResourceCache$Content r1;
        org.eclipse.jetty.util.resource.Resource $r2, $r3, $r5;
        java.lang.Long $r6;
        java.lang.Boolean $r4;
        java.lang.String $r9;
        org.eclipse.jetty.io.Buffer $r7, $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.server.ResourceCache$Content;

        $r0 = newarray (java.lang.Object)[5];

        $r2 = r1.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $r0[0] = $r2;

        $r3 = r1.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0[1] = $r4;

        $r5 = r1.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.util.resource.Resource _resource>;

        $l0 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r0[2] = $r6;

        $r7 = r1.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _contentType>;

        $r0[3] = $r7;

        $r8 = r1.<org.eclipse.jetty.server.ResourceCache$Content: org.eclipse.jetty.io.Buffer _lastModifiedBytes>;

        $r0[4] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s %d %s %s", $r0);

        return $r9;
    }
}
