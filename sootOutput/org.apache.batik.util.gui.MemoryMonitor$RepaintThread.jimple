public class org.apache.batik.util.gui.MemoryMonitor$RepaintThread extends java.lang.Thread
{
    protected long timeout;
    protected java.util.List components;
    protected java.lang.Runtime runtime;
    protected boolean suspended;
    protected org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable;

    public void <init>(long, java.util.List)
    {
        java.util.List r2;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r0;
        java.lang.Runtime $r1;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable $r3;
        long l0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: java.lang.Runtime runtime> = $r1;

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: long timeout> = l0;

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: java.util.List components> = r2;

        $r3 = virtualinvoke r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable createUpdateRunnable()>();

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable> = $r3;

        virtualinvoke r0.<java.lang.Thread: void setPriority(int)>(1);

        return;
    }

    public void run()
    {
        java.lang.Throwable $r6, $r7;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable $r1, $r2, $r3, $r4;
        long $l0;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r0;
        java.lang.InterruptedException $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        goto label01;

     label01:
        $r3 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable>;

        entermonitor $r3;

     label02:
        $r1 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable>;

        $z0 = $r1.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: boolean inEventQueue>;

        if $z0 != 0 goto label03;

        $r4 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable>;

        staticinvoke <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>($r4);

     label03:
        $r2 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable updateRunnable>;

        $r2.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: boolean inEventQueue> = 1;

        exitmonitor $r3;

        goto label05;

     label04:
        $r7 := @caughtexception;

        exitmonitor $r3;

        throw $r7;

     label05:
        $l0 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: long timeout>;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        entermonitor r0;

     label06:
        goto label08;

     label07:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label08:
        $z1 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: boolean suspended>;

        if $z1 != 0 goto label07;

        exitmonitor r0;

        goto label10;

     label09:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        goto label01;

        catch java.lang.Throwable from label02 to label04 with label04;
        catch java.lang.Throwable from label06 to label09 with label09;
        catch java.lang.InterruptedException from label01 to label10 with label11;
    }

    protected org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable createUpdateRunnable()
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable $r0;
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r1;

        r1 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        $r0 = new org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable;

        specialinvoke $r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread$UpdateRunnable: void <init>(org.apache.batik.util.gui.MemoryMonitor$RepaintThread)>(r1);

        return $r0;
    }

    public synchronized void safeSuspend()
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r0;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        $z0 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: boolean suspended>;

        if $z0 != 0 goto label1;

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: boolean suspended> = 1;

     label1:
        return;
    }

    public synchronized void safeResume()
    {
        org.apache.batik.util.gui.MemoryMonitor$RepaintThread r0;
        boolean $z0;

        r0 := @this: org.apache.batik.util.gui.MemoryMonitor$RepaintThread;

        $z0 = r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: boolean suspended>;

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.util.gui.MemoryMonitor$RepaintThread: boolean suspended> = 0;

        virtualinvoke r0.<java.lang.Object: void notify()>();

     label1:
        return;
    }
}
