public class org.mortbay.util.ajax.JSONObjectConvertor extends java.lang.Object implements org.mortbay.util.ajax.JSON$Convertor
{
    private boolean _fromJSON;
    private java.util.Set _excluded;
    static java.lang.Class class$java$lang$Object;

    public void <init>()
    {
        org.mortbay.util.ajax.JSONObjectConvertor r0;

        r0 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded> = null;

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: boolean _fromJSON> = 0;

        return;
    }

    public void <init>(boolean)
    {
        org.mortbay.util.ajax.JSONObjectConvertor r0;
        boolean z0;

        r0 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded> = null;

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: boolean _fromJSON> = z0;

        return;
    }

    public void <init>(boolean, java.lang.String[])
    {
        java.util.HashSet $r2;
        java.util.List $r3;
        org.mortbay.util.ajax.JSONObjectConvertor r0;
        java.lang.String[] r1;
        boolean z0;

        r0 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded> = null;

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: boolean _fromJSON> = z0;

        if r1 == null goto label1;

        $r2 = new java.util.HashSet;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded> = $r2;

     label1:
        return;
    }

    public java.lang.Object fromJSON(java.util.Map)
    {
        java.lang.UnsupportedOperationException $r2;
        java.util.Map r1;
        org.mortbay.util.ajax.JSONObjectConvertor r0;
        boolean $z0;

        r0 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        r1 := @parameter0: java.util.Map;

        $z0 = r0.<org.mortbay.util.ajax.JSONObjectConvertor: boolean _fromJSON>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;

     label1:
        return r1;
    }

    public void toJSON(java.lang.Object, org.mortbay.util.ajax.JSON$Output)
    {
        java.lang.reflect.Method[] $r3;
        org.mortbay.util.ajax.JSON$Output r16;
        java.lang.reflect.Method r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r26;
        java.lang.Object[] $r17;
        java.lang.StringBuffer $r10, $r13, $r15, $r19, $r22, $r24;
        int $i0, $i1, i2, $i3;
        java.lang.String $r9, $r11, $r12, $r14, $r20, $r21, $r23, r29;
        java.lang.Class[] $r5;
        java.lang.RuntimeException $r27;
        org.mortbay.util.ajax.JSONObjectConvertor r1;
        java.lang.Object r0, $r18;
        java.lang.Class $r2, $r6, $r7, $r8, $r25, $r28;

        r1 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        r0 := @parameter0: java.lang.Object;

        r16 := @parameter1: org.mortbay.util.ajax.JSON$Output;

     label01:
        virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = r1.<org.mortbay.util.ajax.JSONObjectConvertor: boolean _fromJSON>;

        if $z0 == 0 goto label02;

        $r25 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r16.<org.mortbay.util.ajax.JSON$Output: void addClass(java.lang.Class)>($r25);

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i2 = 0;

     label03:
        $i3 = lengthof $r3;

        if i2 >= $i3 goto label09;

        r4 = $r3[i2];

        $i0 = virtualinvoke r4.<java.lang.reflect.Method: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z1 != 0 goto label08;

        $r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i1 != 0 goto label08;

        $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r6 == null goto label08;

        $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r8 = <org.mortbay.util.ajax.JSONObjectConvertor: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label04;

        $r28 = staticinvoke <org.mortbay.util.ajax.JSONObjectConvertor: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.mortbay.util.ajax.JSONObjectConvertor: java.lang.Class class$java$lang$Object> = $r28;

        goto label05;

     label04:
        $r28 = <org.mortbay.util.ajax.JSONObjectConvertor: java.lang.Class class$java$lang$Object>;

     label05:
        if $r7 == $r28 goto label08;

        $r9 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z2 == 0 goto label06;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(2, 3);

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(3);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        r29 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label07;

     label06:
        $z3 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z3 == 0 goto label08;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(3, 4);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        r29 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        $z4 = virtualinvoke r1.<org.mortbay.util.ajax.JSONObjectConvertor: boolean includeField(java.lang.String,java.lang.Object,java.lang.reflect.Method)>(r29, r0, r4);

        if $z4 == 0 goto label08;

        $r17 = (java.lang.Object[]) null;

        $r18 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r17);

        interfaceinvoke r16.<org.mortbay.util.ajax.JSON$Output: void add(java.lang.String,java.lang.Object)>(r29, $r18);

     label08:
        i2 = i2 + 1;

        goto label03;

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Illegal argument", $r26);

        throw $r27;

     label11:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
    }

    protected boolean includeField(java.lang.String, java.lang.Object, java.lang.reflect.Method)
    {
        java.util.Set $r1, $r3;
        org.mortbay.util.ajax.JSONObjectConvertor r0;
        java.lang.Object r4;
        java.lang.String r2;
        java.lang.reflect.Method r5;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.util.ajax.JSONObjectConvertor;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.reflect.Method;

        $r1 = r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded>;

        if $r1 == null goto label1;

        $r3 = r0.<org.mortbay.util.ajax.JSONObjectConvertor: java.util.Set _excluded>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
