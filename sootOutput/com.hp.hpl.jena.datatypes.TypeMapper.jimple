public class com.hp.hpl.jena.datatypes.TypeMapper extends java.lang.Object
{
    private static com.hp.hpl.jena.datatypes.TypeMapper theTypeMap;
    private final java.util.HashMap uriToDT;
    private final java.util.HashMap classToDT;

    public static com.hp.hpl.jena.datatypes.TypeMapper getInstance()
    {
        com.hp.hpl.jena.datatypes.TypeMapper $r0;

        $r0 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        return $r0;
    }

    public static void setInstance(com.hp.hpl.jena.datatypes.TypeMapper)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;

        r0 := @parameter0: com.hp.hpl.jena.datatypes.TypeMapper;

        <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap> = r0;

        return;
    }

    public static void reset()
    {
        com.hp.hpl.jena.datatypes.TypeMapper $r0, $r2, $r3, $r4, $r5, $r10, $r11, $r16, $r17, $r22, $r23, $r28, $r29, $r34, $r35, $r40, $r41, $r46, $r47, $r52, $r53, $r57, $r58;
        java.util.HashMap $r6, $r7, $r12, $r13, $r18, $r19, $r24, $r25, $r30, $r31, $r36, $r37, $r42, $r43, $r48, $r49, $r54, $r55, $r59, $r60;
        com.hp.hpl.jena.datatypes.RDFDatatype $r1;
        java.lang.Class $r8, $r14, $r20, $r26, $r32, $r38, $r44, $r50;
        java.lang.Object $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51, $r56, $r61;

        $r0 = new com.hp.hpl.jena.datatypes.TypeMapper;

        specialinvoke $r0.<com.hp.hpl.jena.datatypes.TypeMapper: void <init>()>();

        <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap> = $r0;

        $r2 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r1 = <com.hp.hpl.jena.datatypes.xsd.impl.XMLLiteralType: com.hp.hpl.jena.datatypes.RDFDatatype theXMLLiteralType>;

        virtualinvoke $r2.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r1);

        $r3 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        staticinvoke <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: void loadXSDSimpleTypes(com.hp.hpl.jena.datatypes.TypeMapper)>($r3);

        $r4 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r7 = $r4.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r5 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r6 = $r5.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r9 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Float;");

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r13 = $r10.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r14 = <java.lang.Double: java.lang.Class TYPE>;

        $r11 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r12 = $r11.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r15 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Double;");

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r16 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r19 = $r16.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r20 = <java.lang.Integer: java.lang.Class TYPE>;

        $r17 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r18 = $r17.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r21 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Integer;");

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r22 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r25 = $r22.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r26 = <java.lang.Long: java.lang.Class TYPE>;

        $r23 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r24 = $r23.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r27 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Long;");

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r31 = $r28.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r32 = <java.lang.Short: java.lang.Class TYPE>;

        $r29 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r30 = $r29.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r33 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Short;");

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        $r34 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r37 = $r34.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r38 = <java.lang.Byte: java.lang.Class TYPE>;

        $r35 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r36 = $r35.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r39 = virtualinvoke $r36.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Byte;");

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r39);

        $r40 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r43 = $r40.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r44 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r41 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r42 = $r41.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r45 = virtualinvoke $r42.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Boolean;");

        virtualinvoke $r43.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r45);

        $r46 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r49 = $r46.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r50 = <java.lang.Character: java.lang.Class TYPE>;

        $r47 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r48 = $r47.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r51 = virtualinvoke $r48.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/String;");

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, $r51);

        $r52 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r55 = $r52.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r53 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r54 = $r53.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r56 = virtualinvoke $r54.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/String;");

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", $r56);

        $r57 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r60 = $r57.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r58 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r59 = $r58.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r61 = virtualinvoke $r59.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(class "Ljava/net/URI;");

        virtualinvoke $r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URL;", $r61);

        return;
    }

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        com.hp.hpl.jena.datatypes.TypeMapper r0;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap uriToDT> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT> = $r2;

        return;
    }

    public com.hp.hpl.jena.datatypes.RDFDatatype getSafeTypeByName(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        java.util.HashMap $r2;
        com.hp.hpl.jena.datatypes.DatatypeFormatException $r4;
        com.hp.hpl.jena.datatypes.BaseDatatype $r9;
        com.hp.hpl.jena.datatypes.RDFDatatype r10;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r1, $r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap uriToDT>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.hp.hpl.jena.datatypes.RDFDatatype) $r3;

        if r10 != null goto label3;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = <com.hp.hpl.jena.shared.impl.JenaParameters: boolean enableSilentAcceptanceOfUnknownDatatypes>;

        if $z0 == 0 goto label2;

        $r9 = new com.hp.hpl.jena.datatypes.BaseDatatype;

        specialinvoke $r9.<com.hp.hpl.jena.datatypes.BaseDatatype: void <init>(java.lang.String)>(r1);

        r10 = $r9;

        virtualinvoke r0.<com.hp.hpl.jena.datatypes.TypeMapper: void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)>($r9);

        goto label3;

     label2:
        $r4 = new com.hp.hpl.jena.datatypes.DatatypeFormatException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to created typed literal using an unknown datatype - ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.datatypes.DatatypeFormatException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        return r10;
    }

    public com.hp.hpl.jena.datatypes.RDFDatatype getTypeByName(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap uriToDT>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.datatypes.RDFDatatype) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.datatypes.RDFDatatype getTypeByValue(java.lang.Object)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r5;
        java.lang.Object r1, $r4;
        java.util.HashMap $r2;
        java.lang.Class $r3;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.hp.hpl.jena.datatypes.RDFDatatype) $r4;

        return $r5;
    }

    public java.util.Iterator listTypes()
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.HashMap $r1;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        $r1 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap uriToDT>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public com.hp.hpl.jena.datatypes.RDFDatatype getTypeByClass(java.lang.Class)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r4;
        java.lang.Class r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.datatypes.RDFDatatype) $r3;

        return $r4;
    }

    public void registerDatatype(com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.TypeMapper r0;
        com.hp.hpl.jena.datatypes.RDFDatatype r1;
        java.util.HashMap $r2, $r5;
        java.lang.Class $r4;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.jena.datatypes.TypeMapper;

        r1 := @parameter0: com.hp.hpl.jena.datatypes.RDFDatatype;

        $r2 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap uriToDT>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.datatypes.RDFDatatype: java.lang.String getURI()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.datatypes.RDFDatatype: java.lang.Class getJavaClass()>();

        if $r4 == null goto label1;

        $r5 = r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.HashMap classToDT>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

     label1:
        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r5;
        com.hp.hpl.jena.datatypes.TypeMapper $r0;
        java.util.Iterator $r1;
        java.lang.String[] r9;
        com.hp.hpl.jena.datatypes.RDFDatatype r3;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r9 := @parameter0: java.lang.String[];

        $r0 = <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper theTypeMap>;

        $r1 = virtualinvoke $r0.<com.hp.hpl.jena.datatypes.TypeMapper: java.util.Iterator listTypes()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.datatypes.RDFDatatype) $r2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        staticinvoke <com.hp.hpl.jena.datatypes.TypeMapper: void reset()>();

        return;
    }
}
