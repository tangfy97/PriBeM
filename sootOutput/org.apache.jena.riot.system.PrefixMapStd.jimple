public class org.apache.jena.riot.system.PrefixMapStd extends org.apache.jena.riot.system.PrefixMapBase
{
    final java.util.Map prefixes;
    private final java.util.Map prefixes2;
    final java.util.Map uriToPrefix;

    public void <init>()
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r2, $r3;
        java.util.HashMap $r1, $r4;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        specialinvoke r0.<org.apache.jena.riot.system.PrefixMapBase: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes> = $r1;

        $r2 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes2> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map uriToPrefix> = $r4;

        return;
    }

    public void <init>(org.apache.jena.riot.system.PrefixMap)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.HashMap $r1, $r4;
        org.apache.jena.riot.system.PrefixMap r5;
        java.util.Map $r2, $r3, $r6, $r7;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r5 := @parameter0: org.apache.jena.riot.system.PrefixMap;

        specialinvoke r0.<org.apache.jena.riot.system.PrefixMapBase: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes> = $r1;

        $r2 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes2> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map uriToPrefix> = $r4;

        $r6 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $r7 = interfaceinvoke r5.<org.apache.jena.riot.system.PrefixMap: java.util.Map getMapping()>();

        interfaceinvoke $r6.<java.util.Map: void putAll(java.util.Map)>($r7);

        return;
    }

    public java.util.Map getMapping()
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        $r1 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes2>;

        return $r1;
    }

    public void add(java.lang.String, java.lang.String)
    {
        org.apache.jena.iri.IRIFactory $r2;
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r5, $r6;
        java.lang.String $r1, r3, r7;
        org.apache.jena.iri.IRI $r4;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r7 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: java.lang.String canonicalPrefix(java.lang.String)>(r7);

        $r2 = staticinvoke <org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRIFactory iriImplementation()>();

        $r4 = virtualinvoke $r2.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r3);

        $r5 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        $r6 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map uriToPrefix>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r1);

        return;
    }

    public void add(java.lang.String, org.apache.jena.iri.IRI)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r3, $r4;
        java.lang.String $r1, $r5, r6;
        org.apache.jena.iri.IRI r2;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.jena.iri.IRI;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: java.lang.String canonicalPrefix(java.lang.String)>(r6);

        $r3 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r2);

        $r4 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map uriToPrefix>;

        $r5 = virtualinvoke r2.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

        return;
    }

    public void delete(java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r2;
        java.lang.String $r1, r3;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: java.lang.String canonicalPrefix(java.lang.String)>(r3);

        $r2 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public boolean contains(java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r2;
        java.lang.String $r1, r3;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: java.lang.String canonicalPrefix(java.lang.String)>(r3);

        $r2 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.String abbreviate(java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        org.apache.jena.atlas.lib.Pair $r2;
        java.lang.StringBuilder $r3, $r6, $r7, $r10;
        java.lang.Object $r4, $r8;
        java.lang.String r1, $r5, $r9, $r11;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: org.apache.jena.atlas.lib.Pair abbrev(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r8 = virtualinvoke $r2.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public org.apache.jena.atlas.lib.Pair abbrev(java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMapStd r2;
        java.util.Map $r3, $r6;
        int $i0;
        org.apache.jena.atlas.lib.Pair $r7, $r9;
        java.lang.Object $r4;
        java.lang.String r0, $r1, r5, $r8;
        boolean $z0;

        r2 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.riot.system.PrefixMapStd: java.lang.String getPossibleKey(java.lang.String)>(r0);

        $r3 = r2.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map uriToPrefix>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke r2.<org.apache.jena.riot.system.PrefixMapStd: boolean isSafeLocalPart(java.lang.String)>($r8);

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <org.apache.jena.atlas.lib.Pair: org.apache.jena.atlas.lib.Pair create(java.lang.Object,java.lang.Object)>(r5, $r8);

        return $r9;

     label1:
        $r6 = r2.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $r7 = virtualinvoke r2.<org.apache.jena.riot.system.PrefixMapStd: org.apache.jena.atlas.lib.Pair abbrev(java.util.Map,java.lang.String,boolean)>($r6, r0, 1);

        return $r7;
    }

    protected static java.lang.String getPossibleKey(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(35);

        $i5 = (int) -1;

        if $i0 <= $i5 goto label1;

        $i3 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        return $r2;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i7 = (int) -1;

        if $i1 <= $i7 goto label2;

        $i2 = $i1 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        return $r1;

     label2:
        return null;
    }

    public java.lang.String expand(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r1, $r6, r8, $r10, r11;
        org.apache.jena.iri.IRI r4;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        r11 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.system.PrefixMapStd: java.lang.String canonicalPrefix(java.lang.String)>(r11);

        $r2 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (org.apache.jena.iri.IRI) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean isEmpty()
    {
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        $r1 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public int size()
    {
        int $i0;
        org.apache.jena.riot.system.PrefixMapStd r0;
        java.util.Map $r1;

        r0 := @this: org.apache.jena.riot.system.PrefixMapStd;

        $r1 = r0.<org.apache.jena.riot.system.PrefixMapStd: java.util.Map prefixes>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }
}
