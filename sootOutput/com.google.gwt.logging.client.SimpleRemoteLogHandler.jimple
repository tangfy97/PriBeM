public final class com.google.gwt.logging.client.SimpleRemoteLogHandler extends com.google.gwt.logging.client.RemoteLogHandlerBase
{
    private com.google.gwt.user.client.rpc.AsyncCallback callback;
    private com.google.gwt.logging.shared.RemoteLoggingServiceAsync service;

    public void <init>()
    {
        com.google.gwt.logging.shared.RemoteLoggingServiceAsync $r2;
        com.google.gwt.logging.client.SimpleRemoteLogHandler$DefaultCallback $r3;
        java.lang.Object $r1;
        com.google.gwt.logging.client.SimpleRemoteLogHandler r0;

        r0 := @this: com.google.gwt.logging.client.SimpleRemoteLogHandler;

        specialinvoke r0.<com.google.gwt.logging.client.RemoteLogHandlerBase: void <init>()>();

        $r1 = staticinvoke <com.google.gwt.core.client.GWT: java.lang.Object create(java.lang.Class)>(class "Lcom/google/gwt/logging/shared/RemoteLoggingService;");

        $r2 = (com.google.gwt.logging.shared.RemoteLoggingServiceAsync) $r1;

        r0.<com.google.gwt.logging.client.SimpleRemoteLogHandler: com.google.gwt.logging.shared.RemoteLoggingServiceAsync service> = $r2;

        $r3 = new com.google.gwt.logging.client.SimpleRemoteLogHandler$DefaultCallback;

        specialinvoke $r3.<com.google.gwt.logging.client.SimpleRemoteLogHandler$DefaultCallback: void <init>(com.google.gwt.logging.client.SimpleRemoteLogHandler)>(r0);

        r0.<com.google.gwt.logging.client.SimpleRemoteLogHandler: com.google.gwt.user.client.rpc.AsyncCallback callback> = $r3;

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        com.google.gwt.user.client.rpc.AsyncCallback $r2;
        com.google.gwt.logging.shared.RemoteLoggingServiceAsync $r3;
        java.util.logging.LogRecord r1;
        com.google.gwt.logging.client.SimpleRemoteLogHandler r0;
        boolean $z0;

        r0 := @this: com.google.gwt.logging.client.SimpleRemoteLogHandler;

        r1 := @parameter0: java.util.logging.LogRecord;

        $z0 = virtualinvoke r0.<com.google.gwt.logging.client.SimpleRemoteLogHandler: boolean isLoggable(java.util.logging.LogRecord)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.gwt.logging.client.SimpleRemoteLogHandler: com.google.gwt.logging.shared.RemoteLoggingServiceAsync service>;

        $r2 = r0.<com.google.gwt.logging.client.SimpleRemoteLogHandler: com.google.gwt.user.client.rpc.AsyncCallback callback>;

        interfaceinvoke $r3.<com.google.gwt.logging.shared.RemoteLoggingServiceAsync: void logOnServer(java.util.logging.LogRecord,com.google.gwt.user.client.rpc.AsyncCallback)>(r1, $r2);

     label1:
        return;
    }
}
