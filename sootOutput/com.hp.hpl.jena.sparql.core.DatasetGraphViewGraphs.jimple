public class com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs extends com.hp.hpl.jena.sparql.core.DatasetGraphWrapper
{

    public void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        return;
    }

    public com.hp.hpl.jena.graph.Graph getDefaultGraph()
    {
        com.hp.hpl.jena.sparql.core.GraphView $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.GraphView: com.hp.hpl.jena.sparql.core.GraphView createDefaultGraph(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.GraphView $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphViewGraphs: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.core.GraphView: com.hp.hpl.jena.sparql.core.GraphView createNamedGraph(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.graph.Node)>($r1, r2);

        return $r3;
    }
}
