public class com.spatial4j.core.distance.CartesianDistCalc extends com.spatial4j.core.distance.AbstractDistanceCalculator
{
    private final boolean squared;

    public void <init>()
    {
        com.spatial4j.core.distance.CartesianDistCalc r0;

        r0 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        specialinvoke r0.<com.spatial4j.core.distance.AbstractDistanceCalculator: void <init>()>();

        r0.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared> = 0;

        return;
    }

    public void <init>(boolean)
    {
        com.spatial4j.core.distance.CartesianDistCalc r0;
        boolean z0;

        r0 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.spatial4j.core.distance.AbstractDistanceCalculator: void <init>()>();

        r0.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared> = z0;

        return;
    }

    public double distance(com.spatial4j.core.shape.Point, double, double)
    {
        com.spatial4j.core.shape.Point r0;
        com.spatial4j.core.distance.CartesianDistCalc r1;
        double $d0, d1, $d2, $d3, d4, $d5, $d6, d7, d8, d9, d10;
        boolean $z0;

        r1 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        d1 := @parameter1: double;

        d4 := @parameter2: double;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        d7 = $d0 - d1;

        $d2 = d7 * d7;

        d8 = 0.0 + $d2;

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        d9 = $d3 - d4;

        $d5 = d9 * d9;

        d10 = d8 + $d5;

        $z0 = r1.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared>;

        if $z0 == 0 goto label1;

        return d10;

     label1:
        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>(d10);

        return $d6;
    }

    public com.spatial4j.core.shape.Point pointOnBearing(com.spatial4j.core.shape.Point, double, double, com.spatial4j.core.context.SpatialContext, com.spatial4j.core.shape.Point)
    {
        byte $b0;
        com.spatial4j.core.shape.Point r0, r1, $r3;
        double d0, d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, d10, $d11, $d12;
        com.spatial4j.core.context.SpatialContext r2;
        com.spatial4j.core.distance.CartesianDistCalc r4;

        r4 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: com.spatial4j.core.context.SpatialContext;

        r1 := @parameter4: com.spatial4j.core.shape.Point;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label2;

        if r1 != null goto label1;

        return r0;

     label1:
        $d11 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $d12 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        interfaceinvoke r1.<com.spatial4j.core.shape.Point: void reset(double,double)>($d11, $d12);

        return r1;

     label2:
        $d2 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double toRadians(double)>(d1);

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d5 = $d4 * d0;

        d6 = $d3 + $d5;

        $d7 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        $d8 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d9 = $d8 * d0;

        d10 = $d7 + $d9;

        if r1 != null goto label3;

        $r3 = virtualinvoke r2.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>(d6, d10);

        return $r3;

     label3:
        interfaceinvoke r1.<com.spatial4j.core.shape.Point: void reset(double,double)>(d6, d10);

        return r1;
    }

    public com.spatial4j.core.shape.Rectangle calcBoxByDistFromPt(com.spatial4j.core.shape.Point, double, com.spatial4j.core.context.SpatialContext, com.spatial4j.core.shape.Rectangle)
    {
        com.spatial4j.core.shape.Rectangle r1, $r3;
        com.spatial4j.core.context.SpatialContext r2;
        com.spatial4j.core.shape.Point r0;
        com.spatial4j.core.distance.CartesianDistCalc r4;
        double $d0, d1, d2, $d3, d4, $d5, d6, $d7, d8;

        r4 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        d1 := @parameter1: double;

        r2 := @parameter2: com.spatial4j.core.context.SpatialContext;

        r1 := @parameter3: com.spatial4j.core.shape.Rectangle;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        d2 = $d0 - d1;

        $d3 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getX()>();

        d4 = $d3 + d1;

        $d5 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        d6 = $d5 - d1;

        $d7 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        d8 = $d7 + d1;

        if r1 != null goto label1;

        $r3 = virtualinvoke r2.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>(d2, d4, d6, d8);

        return $r3;

     label1:
        interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: void reset(double,double,double,double)>(d2, d4, d6, d8);

        return r1;
    }

    public double calcBoxByDistFromPt_yHorizAxisDEG(com.spatial4j.core.shape.Point, double, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.shape.Point r0;
        com.spatial4j.core.distance.CartesianDistCalc r1;
        com.spatial4j.core.context.SpatialContext r2;
        double $d0, d1;

        r1 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Point;

        d1 := @parameter1: double;

        r2 := @parameter2: com.spatial4j.core.context.SpatialContext;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Point: double getY()>();

        return $d0;
    }

    public double area(com.spatial4j.core.shape.Rectangle)
    {
        com.spatial4j.core.distance.CartesianDistCalc r1;
        com.spatial4j.core.shape.Rectangle r0;
        double $d0;

        r1 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Rectangle;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getArea(com.spatial4j.core.context.SpatialContext)>(null);

        return $d0;
    }

    public double area(com.spatial4j.core.shape.Circle)
    {
        com.spatial4j.core.distance.CartesianDistCalc r1;
        com.spatial4j.core.shape.Circle r0;
        double $d0;

        r1 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r0 := @parameter0: com.spatial4j.core.shape.Circle;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Circle: double getArea(com.spatial4j.core.context.SpatialContext)>(null);

        return $d0;
    }

    public boolean equals(java.lang.Object)
    {
        com.spatial4j.core.distance.CartesianDistCalc r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.spatial4j.core.distance.CartesianDistCalc) r1;

        $z1 = r0.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared>;

        $z0 = r4.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared>;

        if $z1 == $z0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        com.spatial4j.core.distance.CartesianDistCalc r0;
        byte $b0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.distance.CartesianDistCalc;

        $z0 = r0.<com.spatial4j.core.distance.CartesianDistCalc: boolean squared>;

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }
}
