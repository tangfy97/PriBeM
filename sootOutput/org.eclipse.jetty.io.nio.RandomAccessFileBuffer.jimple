public class org.eclipse.jetty.io.nio.RandomAccessFileBuffer extends org.eclipse.jetty.io.AbstractBuffer implements org.eclipse.jetty.io.Buffer
{
    final java.io.RandomAccessFile _file;
    final java.nio.channels.FileChannel _channel;
    final int _capacity;
    static final boolean $assertionsDisabled;

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.RandomAccessFile $r3, $r7;
        long $l0, $l2;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.AssertionError $r6;
        java.io.File r2;
        byte $b3;
        int $i1, $i4;
        java.nio.channels.FileChannel $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        r2 := @parameter0: java.io.File;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, 1);

        $z0 = <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l2 = virtualinvoke r2.<java.io.File: long length()>();

        $b3 = $l2 cmp 2147483647L;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r7 = new java.io.RandomAccessFile;

        specialinvoke $r7.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, "rw");

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file> = $r7;

        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $r4 = virtualinvoke $r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.nio.channels.FileChannel _channel> = $r4;

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _capacity> = 2147483647;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setGetIndex(int)>(0);

        $l0 = virtualinvoke r2.<java.io.File: long length()>();

        $i1 = (int) $l0;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setPutIndex(int)>($i1);

        return;
    }

    public void <init>(java.io.File, int) throws java.io.FileNotFoundException
    {
        java.io.RandomAccessFile $r3, $r9;
        long $l1, $l3, $l5, $l6;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.AssertionError $r7, $r8;
        byte $b4, $b7;
        int i0, $i2, $i8, $i9;
        boolean $z0, $z1;
        java.io.File r2;
        java.nio.channels.FileChannel $r4;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        r2 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, 1);

        $z0 = <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l5 = (long) i0;

        $l6 = virtualinvoke r2.<java.io.File: long length()>();

        $b7 = $l5 cmp $l6;

        $i8 = (int) $b7;

        if $i8 >= 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $z1 = <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $l3 = virtualinvoke r2.<java.io.File: long length()>();

        $b4 = $l3 cmp 2147483647L;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _capacity> = i0;

        $r9 = new java.io.RandomAccessFile;

        specialinvoke $r9.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, "rw");

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file> = $r9;

        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $r4 = virtualinvoke $r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.nio.channels.FileChannel _channel> = $r4;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setGetIndex(int)>(0);

        $l1 = virtualinvoke r2.<java.io.File: long length()>();

        $i2 = (int) $l1;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setPutIndex(int)>($i2);

        return;
    }

    public void <init>(java.io.File, int, int) throws java.io.FileNotFoundException
    {
        java.io.RandomAccessFile $r3, $r10;
        long $l2, $l4, $l6, $l7;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.AssertionError $r8, $r9;
        byte $b5, $b8;
        int i0, i1, $i3, $i9, $i10;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.io.File r2;
        java.nio.channels.FileChannel $r4;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        r2 := @parameter0: java.io.File;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(i0, 1);

        $z0 = <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l6 = (long) i1;

        $l7 = virtualinvoke r2.<java.io.File: long length()>();

        $b8 = $l6 cmp $l7;

        $i9 = (int) $b8;

        if $i9 >= 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $z1 = <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $l4 = virtualinvoke r2.<java.io.File: long length()>();

        $b5 = $l4 cmp 2147483647L;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _capacity> = i1;

        $r10 = new java.io.RandomAccessFile;

        if i0 != 2 goto label3;

        $r7 = "rw";

        goto label4;

     label3:
        $r7 = "r";

     label4:
        specialinvoke $r10.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, $r7);

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file> = $r10;

        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $r4 = virtualinvoke $r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.nio.channels.FileChannel _channel> = $r4;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setGetIndex(int)>(0);

        $l2 = virtualinvoke r2.<java.io.File: long length()>();

        $i3 = (int) $l2;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: void setPutIndex(int)>($i3);

        return;
    }

    public byte[] array()
    {
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        return null;
    }

    public int capacity()
    {
        int $i0;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        $i0 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _capacity>;

        return $i0;
    }

    public void clear()
    {
        java.lang.Throwable $r5;
        java.io.RandomAccessFile $r1, $r2;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r4;
        java.lang.Exception $r3;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

     label1:
        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label2:
        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void clear()>();

        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void setLength(long)>(0L);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label6 with label7;
    }

    public byte peek()
    {
        java.lang.Throwable $r5;
        java.io.RandomAccessFile $r1, $r2, $r3, $r4;
        long $l1, $l2, $l6;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r6;
        byte $b3, $b4;
        int $i0, $i5;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _get>;

        $l1 = (long) $i0;

        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $l2 = virtualinvoke $r2.<java.io.RandomAccessFile: long getFilePointer()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label2;

        $r4 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $i5 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int _get>;

        $l6 = (long) $i5;

        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l6);

     label2:
        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $b4 = virtualinvoke $r3.<java.io.RandomAccessFile: byte readByte()>();

     label3:
        exitmonitor $r1;

     label4:
        return $b4;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r5;

        catch java.lang.Exception from label1 to label3 with label5;
        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public byte peek(int)
    {
        java.lang.Throwable $r4;
        java.io.RandomAccessFile $r1, $r2, $r3;
        long $l1;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r5;
        byte $b2;
        int i0;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $l1 = (long) i0;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $b2 = virtualinvoke $r3.<java.io.RandomAccessFile: byte readByte()>();

     label2:
        exitmonitor $r1;

     label3:
        return $b2;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public int peek(int, byte[], int, int)
    {
        java.lang.Throwable $r5;
        java.io.RandomAccessFile $r1, $r2, $r4;
        byte[] r3;
        long $l1;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r6;
        int i0, i2, i3, $i4;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        i0 := @parameter0: int;

        r3 := @parameter1: byte[];

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $l1 = (long) i0;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r4 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $i4 = virtualinvoke $r4.<java.io.RandomAccessFile: int read(byte[],int,int)>(r3, i2, i3);

     label2:
        exitmonitor $r1;

     label3:
        return $i4;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void poke(int, byte)
    {
        java.lang.Throwable $r4;
        java.io.RandomAccessFile $r1, $r2, $r3;
        long $l1;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r5;
        byte b2;
        int i0, $i3;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        i0 := @parameter0: int;

        b2 := @parameter1: byte;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $l1 = (long) i0;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $i3 = (int) b2;

        virtualinvoke $r3.<java.io.RandomAccessFile: void writeByte(int)>($i3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r7;

     label4:
        exitmonitor $r1;

     label5:
        goto label8;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r4;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int poke(int, byte[], int, int)
    {
        java.lang.Throwable $r5;
        java.io.RandomAccessFile $r1, $r2, $r4;
        byte[] r3;
        long $l1;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        java.lang.RuntimeException $r7;
        java.lang.Exception $r6;
        int i0, i2, i3;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        i0 := @parameter0: int;

        r3 := @parameter1: byte[];

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        $l1 = (long) i0;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>($l1);

        $r4 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        virtualinvoke $r4.<java.io.RandomAccessFile: void write(byte[],int,int)>(r3, i2, i3);

     label2:
        exitmonitor $r1;

     label3:
        return i3;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public int writeTo(java.nio.channels.WritableByteChannel, int, int) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        java.io.RandomAccessFile $r1;
        long $l2, $l3, $l4;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer r0;
        int i0, i1, $i5;
        java.nio.channels.WritableByteChannel r2;
        java.nio.channels.FileChannel $r3;

        r0 := @this: org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        r2 := @parameter0: java.nio.channels.WritableByteChannel;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.io.RandomAccessFile _file>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: java.nio.channels.FileChannel _channel>;

        $l3 = (long) i0;

        $l2 = (long) i1;

        $l4 = virtualinvoke $r3.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>($l3, $l2, r2);

        $i5 = (int) $l4;

        exitmonitor $r1;

     label2:
        return $i5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/eclipse/jetty/io/nio/RandomAccessFileBuffer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.eclipse.jetty.io.nio.RandomAccessFileBuffer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
