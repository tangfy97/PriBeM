final class org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache extends org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$RangeCache
{
    private java.lang.String characters;
    final org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0;

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget, java.lang.String)
    {
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget r1;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$RangeCache: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$1)>(null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: java.lang.String characters> = r2;

        return;
    }

    void resolve(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache r0;
        org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget $r1;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        int i0;
        java.lang.String $r2, $r4, $r5, $r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget this$0>;

        $r3 = $r1.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor targetDocument>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: java.lang.String characters>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteCharacters(java.lang.String)>($r4);

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: java.lang.String characters>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(i0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.InsertionNoninsertionTransformer$NoninsertionTarget$DeleteCharactersCache: java.lang.String characters> = $r6;

        return;
    }
}
