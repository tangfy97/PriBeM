public class org.apache.log4j.or.ThreadGroupRenderer extends java.lang.Object implements org.apache.log4j.or.ObjectRenderer
{

    public void <init>()
    {
        org.apache.log4j.or.ThreadGroupRenderer r0;

        r0 := @this: org.apache.log4j.or.ThreadGroupRenderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String doRender(java.lang.Object)
    {
        java.lang.ThreadGroup r3;
        java.lang.StringBuffer $r2;
        java.lang.Thread $r8, $r10, $r11;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r1, $r4, $r6, $r7, $r9, $r13;
        boolean $z0, $z1;
        java.lang.Thread[] r5;
        org.apache.log4j.or.ThreadGroupRenderer r14;
        java.lang.Exception $r12;
        java.lang.Object r0;

        r14 := @this: org.apache.log4j.or.ThreadGroupRenderer;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.ThreadGroup;

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r3 = (java.lang.ThreadGroup) r0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java.lang.ThreadGroup[name=");

        $r4 = virtualinvoke r3.<java.lang.ThreadGroup: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", maxpri=");

        $i0 = virtualinvoke r3.<java.lang.ThreadGroup: int getMaxPriority()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $i1 = virtualinvoke r3.<java.lang.ThreadGroup: int activeCount()>();

        r5 = newarray (java.lang.Thread)[$i1];

        virtualinvoke r3.<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])>(r5);

        i4 = 0;

     label1:
        $i2 = lengthof r5;

        if i4 >= $i2 goto label2;

        $r7 = <org.apache.log4j.Layout: java.lang.String LINE_SEP>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   Thread=[");

        $r8 = r5[i4];

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r10 = r5[i4];

        $i3 = virtualinvoke $r10.<java.lang.Thread: int getPriority()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r11 = r5[i4];

        $z1 = virtualinvoke $r11.<java.lang.Thread: boolean isDaemon()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        i4 = i4 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label3:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label4:
        return $r1;

     label5:
        $r12 := @caughtexception;

        $r13 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String toString()>();

        return $r13;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
