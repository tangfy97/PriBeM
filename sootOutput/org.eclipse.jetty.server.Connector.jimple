public interface  org.eclipse.jetty.server.Connector extends java.lang.Object implements org.eclipse.jetty.util.component.LifeCycle
{

    public abstract java.lang.String getName();

    public abstract void open() throws java.io.IOException;

    public abstract void close() throws java.io.IOException;

    public abstract void setServer(org.eclipse.jetty.server.Server);

    public abstract org.eclipse.jetty.server.Server getServer();

    public abstract int getRequestHeaderSize();

    public abstract void setRequestHeaderSize(int);

    public abstract int getResponseHeaderSize();

    public abstract void setResponseHeaderSize(int);

    public abstract org.eclipse.jetty.io.Buffers getRequestBuffers();

    public abstract org.eclipse.jetty.io.Buffers getResponseBuffers();

    public abstract int getRequestBufferSize();

    public abstract void setRequestBufferSize(int);

    public abstract int getResponseBufferSize();

    public abstract void setResponseBufferSize(int);

    public abstract int getIntegralPort();

    public abstract java.lang.String getIntegralScheme();

    public abstract boolean isIntegral(org.eclipse.jetty.server.Request);

    public abstract int getConfidentialPort();

    public abstract java.lang.String getConfidentialScheme();

    public abstract boolean isConfidential(org.eclipse.jetty.server.Request);

    public abstract void customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request) throws java.io.IOException;

    public abstract void persist(org.eclipse.jetty.io.EndPoint) throws java.io.IOException;

    public abstract java.lang.String getHost();

    public abstract void setHost(java.lang.String);

    public abstract void setPort(int);

    public abstract int getPort();

    public abstract int getLocalPort();

    public abstract int getMaxIdleTime();

    public abstract void setMaxIdleTime(int);

    public abstract int getLowResourceMaxIdleTime();

    public abstract void setLowResourceMaxIdleTime(int);

    public abstract java.lang.Object getConnection();

    public abstract boolean getResolveNames();

    public abstract int getRequests();

    public abstract long getConnectionsDurationTotal();

    public abstract int getConnections();

    public abstract int getConnectionsOpen();

    public abstract int getConnectionsOpenMax();

    public abstract long getConnectionsDurationMax();

    public abstract double getConnectionsDurationMean();

    public abstract double getConnectionsDurationStdDev();

    public abstract double getConnectionsRequestsMean();

    public abstract double getConnectionsRequestsStdDev();

    public abstract int getConnectionsRequestsMax();

    public abstract void statsReset();

    public abstract void setStatsOn(boolean);

    public abstract boolean getStatsOn();

    public abstract long getStatsOnMs();

    public abstract boolean isLowResources();
}
