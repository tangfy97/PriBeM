final class minalloy.MinSimpleReporter$FindConsistentFactsTask extends java.lang.Object implements edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerTask
{
    private static final long serialVersionUID;
    public java.lang.String filename;
    public transient edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback out;
    public final java.util.Map dictionary;

    public void <init>(java.util.Map)
    {
        minalloy.MinSimpleReporter$FindConsistentFactsTask r0;
        java.util.Map r1;

        r0 := @this: minalloy.MinSimpleReporter$FindConsistentFactsTask;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: java.lang.String filename> = "";

        r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback out> = null;

        r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: java.util.Map dictionary> = r1;

        return;
    }

    private transient void cb(java.lang.Object[]) throws java.lang.Exception
    {
        edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback $r2;
        java.lang.Object[] r1;
        minalloy.MinSimpleReporter$FindConsistentFactsTask r0;

        r0 := @this: minalloy.MinSimpleReporter$FindConsistentFactsTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback out>;

        interfaceinvoke $r2.<edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback: void callback(java.lang.Object)>(r1);

        return;
    }

    public void run(edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback) throws java.lang.Exception
    {
        edu.mit.csail.sdg.alloy4.ConstMap $r10;
        java.util.Map $r12;
        boolean $z0, $z1, $z2, $z3;
        minalloy.translator.MinA4Solution $r8, $r11;
        java.lang.StringBuilder $r23, $r25;
        edu.mit.csail.sdg.alloy4compiler.ast.Module $r9;
        java.lang.Throwable $r19;
        java.lang.Object[] $r2, $r5, $r14, $r15, $r18, $r20, $r22, $r27;
        minalloy.MinSimpleReporter$FindConsistentFactsTask r0;
        edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback r1;
        int $i0;
        java.lang.String $r3, $r4, $r6, $r7, $r13, $r16, $r17, r21, $r24, $r26;

        r0 := @this: minalloy.MinSimpleReporter$FindConsistentFactsTask;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback;

        r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback out> = r1;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "S2";

        $r2[1] = "Finding consistent facts...\n";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r2);

        entermonitor class "Lminalloy/MinSimpleReporter;";

     label01:
        $r3 = staticinvoke <minalloy.MinSimpleReporter: java.lang.String access$0()>();

        if $r3 == null goto label03;

        $r16 = staticinvoke <minalloy.MinSimpleReporter: java.lang.String access$0()>();

        $r17 = r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: java.lang.String filename>;

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label03;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = "pop";

        $r18[1] = "You cannot enumerate a metamodel.\n";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r18);

        exitmonitor class "Lminalloy/MinSimpleReporter;";

     label02:
        return;

     label03:
        $r4 = staticinvoke <minalloy.MinSimpleReporter: java.lang.String access$1()>();

        if $r4 == null goto label04;

        $r6 = staticinvoke <minalloy.MinSimpleReporter: java.lang.String access$1()>();

        $r7 = r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: java.lang.String filename>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label06;

     label04:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "pop";

        $r5[1] = "You can only enumerate the solutions of the most-recently-solved command.";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r5);

        exitmonitor class "Lminalloy/MinSimpleReporter;";

     label05:
        return;

     label06:
        $r8 = staticinvoke <minalloy.MinSimpleReporter: minalloy.translator.MinA4Solution access$2()>();

        if $r8 == null goto label07;

        $r9 = staticinvoke <minalloy.MinSimpleReporter: edu.mit.csail.sdg.alloy4compiler.ast.Module access$3()>();

        if $r9 == null goto label07;

        $r10 = staticinvoke <minalloy.MinSimpleReporter: edu.mit.csail.sdg.alloy4.ConstMap access$4()>();

        if $r10 != null goto label09;

     label07:
        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = "pop";

        $r20[1] = "Error: the SAT solver that generated the instance has exited,\nso we cannot enumerate unless you re-solve that command.\n";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r20);

        exitmonitor class "Lminalloy/MinSimpleReporter;";

     label08:
        return;

     label09:
        $r11 = staticinvoke <minalloy.MinSimpleReporter: minalloy.translator.MinA4Solution access$2()>();

        exitmonitor class "Lminalloy/MinSimpleReporter;";

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        exitmonitor class "Lminalloy/MinSimpleReporter;";

     label12:
        throw $r19;

     label13:
        $z1 = virtualinvoke $r11.<minalloy.translator.MinA4Solution: boolean satisfiable()>();

        if $z1 != 0 goto label14;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "pop";

        $r15[1] = "Error: This command is unsatisfiable,\nso there are no solutions to enumerate.";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r15);

        return;

     label14:
        $z2 = virtualinvoke $r11.<minalloy.translator.MinA4Solution: boolean isIncremental()>();

        if $z2 != 0 goto label15;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "pop";

        $r14[1] = "Error: This solution was not generated by an incremental SAT solver.\nCurrently only MiniSat and SAT4J are supported.";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r14);

        return;

     label15:
        $r12 = r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: java.util.Map dictionary>;

        $r13 = virtualinvoke $r11.<minalloy.translator.MinA4Solution: java.lang.String listConsistentFacts(java.util.Map)>($r12);

        r21 = $r13;

        if $r13 == null goto label16;

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 != 0 goto label17;

     label16:
        r21 = "No consistent facts found!";

     label17:
        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "S2";

        $r23 = new java.lang.StringBuilder;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21);

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nDone\n");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22[1] = $r26;

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r22);

        $r27 = newarray (java.lang.Object)[2];

        $r27[0] = "S2";

        $r27[1] = "\n";

        specialinvoke r0.<minalloy.MinSimpleReporter$FindConsistentFactsTask: void cb(java.lang.Object[])>($r27);

        interfaceinvoke r1.<edu.mit.csail.sdg.alloy4.WorkerEngine$WorkerCallback: void done()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void <clinit>()
    {
        <minalloy.MinSimpleReporter$FindConsistentFactsTask: long serialVersionUID> = 0L;

        return;
    }
}
