public class org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.WaveletDataListener
{

    public void <init>()
    {
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onBlipDataAdded(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        return;
    }

    public void onBlipDataSubmitted(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        return;
    }

    public void onBlipDataTimestampModified(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData, long, long)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        long l0, l1;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        return;
    }

    public void onBlipDataVersionModified(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData, long, long)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        long l0, l1;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        return;
    }

    public void onBlipDataContributorAdded(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onBlipDataContributorRemoved(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onParticipantAdded(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onParticipantRemoved(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        return;
    }

    public void onLastModifiedTimeChanged(org.waveprotocol.wave.model.wave.data.WaveletData, long, long)
    {
        long l0, l1;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        return;
    }

    public void onVersionChanged(org.waveprotocol.wave.model.wave.data.WaveletData, long, long)
    {
        long l0, l1;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        return;
    }

    public void onHashedVersionChanged(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.version.HashedVersion, org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.version.HashedVersion r2, r3;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        r3 := @parameter2: org.waveprotocol.wave.model.version.HashedVersion;

        return;
    }

    public void onRemoteBlipDataContentModified(org.waveprotocol.wave.model.wave.data.WaveletData, org.waveprotocol.wave.model.wave.data.BlipData)
    {
        org.waveprotocol.wave.model.wave.data.BlipData r2;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.WaveletDataListenerImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.BlipData;

        return;
    }
}
