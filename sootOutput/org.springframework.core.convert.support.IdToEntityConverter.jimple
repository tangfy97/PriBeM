final class org.springframework.core.convert.support.IdToEntityConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.support.GenericConversionService conversionService;

    public void <init>(org.springframework.core.convert.support.GenericConversionService)
    {
        org.springframework.core.convert.support.GenericConversionService r1;
        org.springframework.core.convert.support.IdToEntityConverter r0;

        r0 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        r1 := @parameter0: org.springframework.core.convert.support.GenericConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.IdToEntityConverter: org.springframework.core.convert.support.GenericConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.IdToEntityConverter r2;

        r2 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "Ljava/lang/Object;", class "Ljava/lang/Object;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        java.lang.Class[] $r6;
        org.springframework.core.convert.support.GenericConversionService $r5;
        org.springframework.core.convert.support.IdToEntityConverter r0;
        org.springframework.core.convert.TypeDescriptor r1, r4, $r8;
        java.lang.Class $r2, $r7;
        java.lang.reflect.Method $r3;
        boolean $z0;

        r0 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        r4 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r1 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r2 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $r3 = specialinvoke r0.<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)>($r2);

        if $r3 == null goto label1;

        $r5 = r0.<org.springframework.core.convert.support.IdToEntityConverter: org.springframework.core.convert.support.GenericConversionService conversionService>;

        $r6 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r7 = $r6[0];

        $r8 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>($r7);

        $z0 = virtualinvoke $r5.<org.springframework.core.convert.support.GenericConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r4, $r8);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        java.lang.Object[] $r11;
        java.lang.Class[] $r7;
        org.springframework.core.convert.support.GenericConversionService $r6, $r13;
        org.springframework.core.convert.support.IdToEntityConverter r1;
        org.springframework.core.convert.TypeDescriptor r2, r5, $r9;
        java.lang.Object r0, $r10, $r12, $r14;
        java.lang.Class $r3, $r8;
        java.lang.reflect.Method $r4;

        r1 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        r0 := @parameter0: java.lang.Object;

        r5 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        $r13 = r1.<org.springframework.core.convert.support.IdToEntityConverter: org.springframework.core.convert.support.GenericConversionService conversionService>;

        $r14 = virtualinvoke $r13.<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r5, r2);

        return $r14;

     label1:
        $r3 = virtualinvoke r2.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $r4 = specialinvoke r1.<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)>($r3);

        $r6 = r1.<org.springframework.core.convert.support.IdToEntityConverter: org.springframework.core.convert.support.GenericConversionService conversionService>;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r8 = $r7[0];

        $r9 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class)>($r8);

        $r10 = virtualinvoke $r6.<org.springframework.core.convert.support.GenericConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r0, r5, $r9);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r10;

        $r12 = staticinvoke <org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r4, r0, $r11);

        return $r12;
    }

    private java.lang.reflect.Method getFinder(java.lang.Class)
    {
        java.lang.reflect.Method[] $r6;
        int i0, $i1, $i2, i3;
        java.lang.String $r3, $r5, $r10;
        java.lang.reflect.Method r7;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r8;
        org.springframework.core.convert.support.IdToEntityConverter r1;
        java.lang.StringBuilder $r0, $r4;
        java.lang.Class r2, $r9;

        r1 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("find");

        $r3 = specialinvoke r1.<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)>(r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof $r6;

        i3 = 0;

        goto label3;

     label1:
        r7 = $r6[i3];

        $i1 = virtualinvoke r7.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r8;

        if $i2 != 1 goto label2;

        $r9 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r7.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        return r7;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        return null;
    }

    private java.lang.String getEntityName(java.lang.Class)
    {
        org.springframework.core.convert.support.IdToEntityConverter r3;
        int $i0, $i1, $i3;
        java.lang.Class r0;
        java.lang.String $r1, $r2;

        r3 := @this: org.springframework.core.convert.support.IdToEntityConverter;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i1 = $i0 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r2;

     label1:
        return $r1;
    }
}
