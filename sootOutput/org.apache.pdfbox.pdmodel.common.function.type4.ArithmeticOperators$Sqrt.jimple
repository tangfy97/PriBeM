class org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.function.type4.Operator
{

    void <init>()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)
    {
        java.lang.Float $r2;
        org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext r0;
        java.lang.IllegalArgumentException $r5;
        java.util.Stack $r1;
        byte $b0;
        org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt r4;
        int $i1;
        float $f0, $f1;
        double $d0, $d1;

        r4 := @this: org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext;

        $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: float popReal()>();

        $b0 = $f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("argument must be nonnegative");

        throw $r5;

     label1:
        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>();

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f1 = (float) $d1;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r2);

        return;
    }
}
