public class ucar.nc2.iosp.grid.GridCoordSys extends java.lang.Object
{
    private ucar.nc2.iosp.grid.GridHorizCoordSys hcs;
    private ucar.grid.GridRecord record;
    private java.lang.String verticalName;
    private ucar.grid.GridTableLookup lookup;
    private java.util.List levels;
    boolean dontUseVertical;
    java.lang.String positive;
    java.lang.String units;

    void <init>(ucar.nc2.iosp.grid.GridHorizCoordSys, ucar.grid.GridRecord, java.lang.String, ucar.grid.GridTableLookup)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r1;
        ucar.grid.GridTableLookup r4;
        java.util.ArrayList $r5;
        ucar.nc2.iosp.grid.GridCoordSys r0;
        java.lang.String r3, $r6, $r10, $r15, $r18, $r20, $r21;
        ucar.grid.GridRecord r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r8;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r1 := @parameter0: ucar.nc2.iosp.grid.GridHorizCoordSys;

        r2 := @parameter1: ucar.grid.GridRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: ucar.grid.GridTableLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical> = 0;

        r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive> = "up";

        r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.nc2.iosp.grid.GridHorizCoordSys hcs> = r1;

        r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record> = r2;

        r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName> = r3;

        r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridTableLookup lookup> = r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels> = $r5;

        $z0 = interfaceinvoke r4.<ucar.grid.GridTableLookup: boolean isVerticalCoordinate(ucar.grid.GridRecord)>(r2);

        if $z0 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical> = $z4;

        $z1 = interfaceinvoke r4.<ucar.grid.GridTableLookup: boolean isPositiveUp(ucar.grid.GridRecord)>(r2);

        if $z1 == 0 goto label3;

        $r21 = "up";

        goto label4;

     label3:
        $r21 = "down";

     label4:
        r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive> = $r21;

        $r6 = interfaceinvoke r4.<ucar.grid.GridTableLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>(r2);

        r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String units> = $r6;

        $z2 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugVert>;

        if $z2 == 0 goto label7;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridCoordSys: ");

        $r10 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String getVerticalDesc()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" useVertical= ");

        $z3 = r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z3 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" positive=");

        $r15 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" units=");

        $r18 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String units>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label7:
        return;
    }

    java.lang.String getCoordSysName()
    {
        ucar.nc2.iosp.grid.GridCoordSys r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_CoordSys");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    java.lang.String getVerticalName()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.grid.GridCoordSys r0;

        r0 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        $r1 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        return $r1;
    }

    java.lang.String getVerticalDesc()
    {
        ucar.nc2.iosp.grid.GridCoordSys r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;
        ucar.grid.GridRecord $r5;

        r1 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r1.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $i0 = interfaceinvoke $r5.<ucar.grid.GridRecord: int getLevelType1()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    int getNLevels()
    {
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridCoordSys r0;
        int $i0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        $z0 = r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z0 == 0 goto label1;

        $i0 = 1;

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label2:
        return $i0;
    }

    void addLevels(java.util.List)
    {
        ucar.nc2.iosp.grid.GridCoordSys r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List r0, $r3, $r5, $r9, $r10, $r19, $r22;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r18, $r20;
        java.lang.Double $r8;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r14, $r21;
        ucar.grid.GridRecord r7;
        double $d0;
        java.io.PrintStream $r12;
        java.util.Iterator $r1;
        java.lang.Object $r6;

        r2 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.grid.GridRecord) $r6;

        $r8 = new java.lang.Double;

        $d0 = interfaceinvoke r7.<ucar.grid.GridRecord: double getLevel1()>();

        specialinvoke $r8.<java.lang.Double: void <init>(double)>($d0);

        $r9 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $z2 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z2 != 0 goto label2;

        $r22 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        $z3 = r2.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z3 == 0 goto label3;

        $r10 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 <= 1 goto label3;

        $z4 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugVert>;

        if $z4 == 0 goto label3;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GribCoordSys: unused level coordinate has > 1 levels = ");

        $r14 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = interfaceinvoke r7.<ucar.grid.GridRecord: int getLevelType1()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i2 = interfaceinvoke $r19.<java.util.List: int size()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label3:
        goto label1;

     label4:
        $r3 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        $r4 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("down");

        if $z1 == 0 goto label5;

        $r5 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r5);

     label5:
        return;
    }

    boolean matchLevels(java.util.List)
    {
        java.util.Iterator $r2;
        java.lang.Double $r8;
        java.util.ArrayList $r0;
        java.util.List r1, $r5;
        ucar.nc2.iosp.grid.GridCoordSys r3;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r4;
        boolean $z0, $z1, $z2, $z3;
        ucar.grid.GridRecord r7;
        double $d0;

        r3 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.grid.GridRecord) $r6;

        $r8 = new java.lang.Double;

        $d0 = interfaceinvoke r7.<ucar.grid.GridRecord: double getLevel1()>();

        specialinvoke $r8.<java.lang.Double: void <init>(double)>($d0);

        $z3 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z3 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r4 = r3.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("down");

        if $z1 == 0 goto label4;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

     label4:
        $r5 = r3.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $z2 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z2;
    }

    void addDimensionsToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        ucar.nc2.Group r3;
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridCoordSys r0;
        int $i0;
        ucar.nc2.Dimension $r4;
        ucar.nc2.NetcdfFile r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r2 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: ucar.nc2.Group;

        $z0 = r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r4 = new ucar.nc2.Dimension;

        $r5 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        specialinvoke $r4.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r5, $i0, 1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(r3, $r4);

        return;
    }

    void addToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        ucar.nc2.constants.AxisType r47;
        ucar.nc2.Group r44;
        ucar.nc2.Attribute $r10, $r14, $r31, $r34, $r48, $r51, $r53;
        java.lang.StringBuilder $r2, $r3, $r4, $r36, $r37, $r38, $r39, $r40, $r41, $r43;
        ucar.nc2.iosp.grid.GridHorizCoordSys $r1, $r32, $r54;
        java.lang.Double r28;
        double[] $r55;
        java.lang.String $r8, $r13, $r17, $r18, $r19, $r23, $r29, $r30, $r33, $r35, $r42, r45, r46, $r50, $r52;
        ucar.grid.GridRecord $r11, $r15, $r24, $r25, $r49;
        ucar.ma2.Array $r22;
        ucar.nc2.iosp.grid.GridCoordSys r0;
        int[] $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.DataType $r9, $r21;
        java.util.List $r5, $r26, $r56;
        ucar.nc2.NetcdfFile r7;
        ucar.grid.GridTableLookup $r12, $r16;
        int $i0, $i1, $i2, $i3, i4, $i5;
        ucar.nc2.Variable $r6;
        double $d0;
        java.lang.Object $r27;

        r0 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r7 := @parameter0: ucar.nc2.NetcdfFile;

        r44 := @parameter1: ucar.nc2.Group;

        $z0 = r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z0 == 0 goto label01;

        return;

     label01:
        if r44 != null goto label02;

        r44 = virtualinvoke r7.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

     label02:
        r45 = "time";

        $z1 = r0.<ucar.nc2.iosp.grid.GridCoordSys: boolean dontUseVertical>;

        if $z1 != 0 goto label03;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r42 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r1 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $z2 = virtualinvoke $r1.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon()>();

        if $z2 == 0 goto label04;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lat lon");

        r46 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y x");

        r46 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r5 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = new ucar.nc2.Variable;

        $r8 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        specialinvoke $r6.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r7, r44, null, $r8);

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r6.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r9);

        $r10 = new ucar.nc2.Attribute;

        $r12 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridTableLookup lookup>;

        $r11 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $r13 = interfaceinvoke $r12.<ucar.grid.GridTableLookup: java.lang.String getLevelDescription(ucar.grid.GridRecord)>($r11);

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r13);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        $r14 = new ucar.nc2.Attribute;

        $r16 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridTableLookup lookup>;

        $r15 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $r17 = interfaceinvoke $r16.<ucar.grid.GridTableLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>($r15);

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r17);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r18 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive>;

        if $r18 == null goto label06;

        $r34 = new ucar.nc2.Attribute;

        $r35 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String positive>;

        specialinvoke $r34.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", $r35);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r34);

     label06:
        $r19 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String units>;

        if $r19 == null goto label10;

        $r29 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String units>;

        $z3 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r29);

        if $z3 == 0 goto label07;

        r47 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        goto label09;

     label07:
        $r30 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String units>;

        $z4 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r30);

        if $z4 == 0 goto label08;

        r47 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        goto label09;

     label08:
        r47 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

     label09:
        $r48 = new ucar.nc2.Attribute;

        $r49 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $i3 = interfaceinvoke $r49.<ucar.grid.GridRecord: int getLevelType1()>();

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        specialinvoke $r48.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("grid_level_type", $r50);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r48);

        $r51 = new ucar.nc2.Attribute;

        $r52 = virtualinvoke r47.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r51.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r52);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r51);

        $r53 = new ucar.nc2.Attribute;

        specialinvoke $r53.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", r46);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r53);

        $r54 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $z5 = virtualinvoke $r54.<ucar.nc2.iosp.grid.GridHorizCoordSys: boolean isLatLon()>();

        if $z5 != 0 goto label10;

        $r31 = new ucar.nc2.Attribute;

        $r32 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.nc2.iosp.grid.GridHorizCoordSys hcs>;

        $r33 = virtualinvoke $r32.<ucar.nc2.iosp.grid.GridHorizCoordSys: java.lang.String getGridName()>();

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransforms", $r33);

        virtualinvoke $r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r31);

     label10:
        $r55 = newarray (double)[$i0];

        i4 = 0;

     label11:
        $r56 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i5 = interfaceinvoke $r56.<java.util.List: int size()>();

        if i4 >= $i5 goto label12;

        $r26 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(i4);

        r28 = (java.lang.Double) $r27;

        $d0 = virtualinvoke r28.<java.lang.Double: double doubleValue()>();

        $r55[i4] = $d0;

        i4 = i4 + 1;

        goto label11;

     label12:
        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r20 = newarray (int)[1];

        $r20[0] = $i0;

        $r22 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r21, $r20, $r55);

        $r23 = r0.<ucar.nc2.iosp.grid.GridCoordSys: java.lang.String verticalName>;

        virtualinvoke $r6.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r23);

        virtualinvoke $r6.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r22, 0);

        virtualinvoke r7.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r44, $r6);

        $r24 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $i1 = interfaceinvoke $r24.<ucar.grid.GridRecord: int getLevelType1()>();

        if $i1 != 109 goto label13;

        $r25 = r0.<ucar.nc2.iosp.grid.GridCoordSys: ucar.grid.GridRecord record>;

        $i2 = interfaceinvoke $r25.<ucar.grid.GridRecord: int getLevelType1()>();

        virtualinvoke r0.<ucar.nc2.iosp.grid.GridCoordSys: void findCoordinateTransform(ucar.nc2.Group,java.lang.String,int)>(r44, "Pressure", $i2);

     label13:
        return;
    }

    void findCoordinateTransform(ucar.nc2.Group, java.lang.String, int)
    {
        ucar.nc2.iosp.grid.GridCoordSys r11;
        int $i0, i1;
        ucar.nc2.Variable r4;
        java.lang.String $r5, r6;
        java.lang.Number $r8;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        ucar.nc2.Group r0;
        java.util.List $r1;
        ucar.nc2.Attribute $r7, $r9, $r10;
        java.lang.Object $r3;

        r11 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r0 := @parameter0: ucar.nc2.Group;

        r6 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r4.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("grid_level_type");

        if $r7 == null goto label1;

        $r8 = virtualinvoke $r7.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        if $i0 == i1 goto label2;

        goto label1;

     label2:
        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateTransformType", "Vertical");

        virtualinvoke r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("transform_name", "Existing3DField");

        virtualinvoke r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

     label3:
        goto label1;

     label4:
        return;
    }

    int getIndex(ucar.grid.GridRecord)
    {
        java.util.List $r3;
        ucar.nc2.iosp.grid.GridCoordSys r2;
        java.lang.Double $r0;
        int $i0;
        ucar.grid.GridRecord r1;
        double $d0;

        r2 := @this: ucar.nc2.iosp.grid.GridCoordSys;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r0 = new java.lang.Double;

        $d0 = interfaceinvoke r1.<ucar.grid.GridRecord: double getLevel1()>();

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0);

        $r3 = r2.<ucar.nc2.iosp.grid.GridCoordSys: java.util.List levels>;

        $i0 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>($r0);

        return $i0;
    }
}
