final class org.waveprotocol.wave.federation.xmpp.RemoteDisco$1 extends java.lang.Object implements com.google.common.base.Function
{

    void <init>()
    {
        org.waveprotocol.wave.federation.xmpp.RemoteDisco$1 r0;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.RemoteDisco$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.concurrent.atomic.AtomicLong apply(java.lang.String)
    {
        java.util.concurrent.atomic.AtomicLong $r0;
        java.lang.String r2;
        org.waveprotocol.wave.federation.xmpp.RemoteDisco$1 r1;

        r1 := @this: org.waveprotocol.wave.federation.xmpp.RemoteDisco$1;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        return $r0;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        java.util.concurrent.atomic.AtomicLong $r3;
        java.lang.Object r1;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.xmpp.RemoteDisco$1 r0;

        r0 := @this: org.waveprotocol.wave.federation.xmpp.RemoteDisco$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.federation.xmpp.RemoteDisco$1: java.util.concurrent.atomic.AtomicLong apply(java.lang.String)>($r2);

        return $r3;
    }
}
