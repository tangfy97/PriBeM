public class org.springframework.util.comparator.CompoundComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private final java.util.List comparators;

    public void <init>()
    {
        org.springframework.util.comparator.CompoundComparator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators> = $r1;

        return;
    }

    public void <init>(java.util.Comparator[])
    {
        org.springframework.util.comparator.CompoundComparator r0;
        int $i0, i1, i2;
        java.util.Comparator r3;
        java.util.ArrayList $r1;
        java.util.Comparator[] r2;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        r2 := @parameter0: java.util.Comparator[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        $i0 = lengthof r2;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators> = $r1;

        i1 = lengthof r2;

        i2 = 0;

        goto label2;

     label1:
        r3 = r2[i2];

        virtualinvoke r0.<org.springframework.util.comparator.CompoundComparator: void addComparator(java.util.Comparator)>(r3);

        i2 = i2 + 1;

     label2:
        if i2 < i1 goto label1;

        return;
    }

    public void addComparator(java.util.Comparator)
    {
        java.util.List $r3, $r5;
        org.springframework.util.comparator.CompoundComparator r1;
        org.springframework.util.comparator.InvertibleComparator $r2, $r4;
        java.util.Comparator r0;
        boolean $z0;

        r1 := @this: org.springframework.util.comparator.CompoundComparator;

        r0 := @parameter0: java.util.Comparator;

        $z0 = r0 instanceof org.springframework.util.comparator.InvertibleComparator;

        if $z0 == 0 goto label1;

        $r5 = r1.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r4 = (org.springframework.util.comparator.InvertibleComparator) r0;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label2;

     label1:
        $r3 = r1.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = new org.springframework.util.comparator.InvertibleComparator;

        specialinvoke $r2.<org.springframework.util.comparator.InvertibleComparator: void <init>(java.util.Comparator)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public void addComparator(java.util.Comparator, boolean)
    {
        java.util.List $r3;
        org.springframework.util.comparator.CompoundComparator r0;
        org.springframework.util.comparator.InvertibleComparator $r1;
        java.util.Comparator r2;
        boolean z0;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        r2 := @parameter0: java.util.Comparator;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r1 = new org.springframework.util.comparator.InvertibleComparator;

        specialinvoke $r1.<org.springframework.util.comparator.InvertibleComparator: void <init>(java.util.Comparator,boolean)>(r2, z0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void setComparator(int, java.util.Comparator)
    {
        org.springframework.util.comparator.InvertibleComparator $r2, $r4;
        java.util.List $r3, $r5;
        org.springframework.util.comparator.CompoundComparator r1;
        int i0;
        java.util.Comparator r0;
        boolean $z0;

        r1 := @this: org.springframework.util.comparator.CompoundComparator;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Comparator;

        $z0 = r0 instanceof org.springframework.util.comparator.InvertibleComparator;

        if $z0 == 0 goto label1;

        $r5 = r1.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r4 = (org.springframework.util.comparator.InvertibleComparator) r0;

        interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r4);

        goto label2;

     label1:
        $r3 = r1.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = new org.springframework.util.comparator.InvertibleComparator;

        specialinvoke $r2.<org.springframework.util.comparator.InvertibleComparator: void <init>(java.util.Comparator)>(r0);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r2);

     label2:
        return;
    }

    public void setComparator(int, java.util.Comparator, boolean)
    {
        java.util.List $r3;
        org.springframework.util.comparator.CompoundComparator r0;
        org.springframework.util.comparator.InvertibleComparator $r1;
        int i0;
        java.util.Comparator r2;
        boolean z0;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Comparator;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r1 = new org.springframework.util.comparator.InvertibleComparator;

        specialinvoke $r1.<org.springframework.util.comparator.InvertibleComparator: void <init>(java.util.Comparator,boolean)>(r2, z0);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r1);

        return;
    }

    public void invertOrder()
    {
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;
        java.util.Iterator $r2;
        org.springframework.util.comparator.InvertibleComparator r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.util.comparator.InvertibleComparator) $r3;

        virtualinvoke r4.<org.springframework.util.comparator.InvertibleComparator: void invertOrder()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public void invertOrder(int)
    {
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;
        org.springframework.util.comparator.InvertibleComparator $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.springframework.util.comparator.InvertibleComparator) $r2;

        virtualinvoke $r3.<org.springframework.util.comparator.InvertibleComparator: void invertOrder()>();

        return;
    }

    public void setAscendingOrder(int)
    {
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;
        org.springframework.util.comparator.InvertibleComparator $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.springframework.util.comparator.InvertibleComparator) $r2;

        virtualinvoke $r3.<org.springframework.util.comparator.InvertibleComparator: void setAscending(boolean)>(1);

        return;
    }

    public void setDescendingOrder(int)
    {
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;
        org.springframework.util.comparator.InvertibleComparator $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.springframework.util.comparator.InvertibleComparator) $r2;

        virtualinvoke $r3.<org.springframework.util.comparator.InvertibleComparator: void setAscending(boolean)>(0);

        return;
    }

    public int getComparatorCount()
    {
        int $i0;
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.util.Iterator $r3;
        org.springframework.util.comparator.InvertibleComparator r5;
        java.util.List $r1, $r2;
        org.springframework.util.comparator.CompoundComparator r0;
        int $i0, $i1;
        java.lang.Object $r4, r6, r7;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.Object;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z1, "No sort definitions have been added to this CompoundComparator to compare");

        $r2 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.util.comparator.InvertibleComparator) $r4;

        $i1 = virtualinvoke r5.<org.springframework.util.comparator.InvertibleComparator: int compare(java.lang.Object,java.lang.Object)>(r6, r7);

        if $i1 == 0 goto label4;

        return $i1;

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        org.springframework.util.comparator.CompoundComparator r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.util.comparator.CompoundComparator;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.util.comparator.CompoundComparator) r1;

        $r4 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r3 = r2.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        org.springframework.util.comparator.CompoundComparator r0;

        r0 := @this: org.springframework.util.comparator.CompoundComparator;

        $r1 = r0.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.List $r2;
        org.springframework.util.comparator.CompoundComparator r1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r4;

        r1 := @this: org.springframework.util.comparator.CompoundComparator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("CompoundComparator: ");

        $r2 = r1.<org.springframework.util.comparator.CompoundComparator: java.util.List comparators>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
