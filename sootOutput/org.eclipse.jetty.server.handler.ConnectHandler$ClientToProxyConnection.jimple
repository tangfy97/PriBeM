public class org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection extends java.lang.Object implements org.eclipse.jetty.io.nio.AsyncConnection
{
    private final org.eclipse.jetty.io.Buffer _buffer;
    private final java.util.concurrent.ConcurrentMap _context;
    private final java.nio.channels.SocketChannel _channel;
    private final org.eclipse.jetty.io.EndPoint _endPoint;
    private final long _timestamp;
    private volatile org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer;
    private boolean _firstTime;
    final org.eclipse.jetty.server.handler.ConnectHandler this$0;

    public void <init>(org.eclipse.jetty.server.handler.ConnectHandler, java.util.concurrent.ConcurrentMap, java.nio.channels.SocketChannel, org.eclipse.jetty.io.EndPoint, long)
    {
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r2;
        java.nio.channels.SocketChannel r4;
        org.eclipse.jetty.io.EndPoint r5;
        org.eclipse.jetty.server.handler.ConnectHandler r1;
        long l0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;
        java.util.concurrent.ConcurrentMap r3;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler;

        r3 := @parameter1: java.util.concurrent.ConcurrentMap;

        r4 := @parameter2: java.nio.channels.SocketChannel;

        r5 := @parameter3: org.eclipse.jetty.io.EndPoint;

        l0 := @parameter4: long;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r2.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(4096);

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.Buffer _buffer> = $r2;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: boolean _firstTime> = 1;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.util.concurrent.ConcurrentMap _context> = r3;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.nio.channels.SocketChannel _channel> = r4;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint> = r5;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: long _timestamp> = l0;

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.io.EndPoint $r3, $r5;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r2;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r4, $r6;
        java.lang.String $r7;

        r2 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ClientToProxy");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(:");

        $r3 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $i0 = interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: int getLocalPort()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=>:");

        $r5 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $i1 = interfaceinvoke $r5.<org.eclipse.jetty.io.EndPoint: int getRemotePort()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public org.eclipse.jetty.io.Connection handle() throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r6, $r18, $r19, $r20, $r47;
        java.lang.Integer $r5, $r15;
        java.nio.channels.SocketChannel $r23, $r27;
        org.eclipse.jetty.io.Buffer $r11, $r48;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection $r7, $r14, $r21, $r22, $r28;
        java.lang.StringBuilder $r35, $r36, $r41, $r42, $r52, $r53;
        java.lang.Throwable $r29;
        java.lang.Object[] $r1, $r4, $r13, $r17, $r26, $r31, $r51;
        org.eclipse.jetty.server.handler.ConnectHandler $r8, $r24, $r46;
        java.util.concurrent.ConcurrentMap $r10, $r49;
        int $i0, $i1, $i3;
        java.lang.String $r37, $r43;
        java.nio.channels.ClosedChannelException $r44;
        java.io.IOException $r38;
        java.lang.RuntimeException $r32;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r2;
        org.eclipse.jetty.io.AsyncEndPoint $r9;
        org.eclipse.jetty.util.log.Logger $r0, $r3, $r12, $r16, $r25, $r30, $r33, $r39, $r45, $r50;

        r2 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r0 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: begin reading from client", $r1);

     label01:
        $z0 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: boolean _firstTime>;

        if $z0 == 0 goto label02;

        r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: boolean _firstTime> = 0;

        $r24 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r23 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.nio.channels.SocketChannel _channel>;

        $r22 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: void access$500(org.eclipse.jetty.server.handler.ConnectHandler,java.nio.channels.SocketChannel,org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)>($r24, $r23, $r22);

        $r25 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r26 = newarray (java.lang.Object)[3];

        $r26[0] = r2;

        $r27 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.nio.channels.SocketChannel _channel>;

        $r26[1] = $r27;

        $r28 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        $r26[2] = $r28;

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: registered channel {} with connection {}", $r26);

     label02:
        $r46 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r47 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $r48 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.Buffer _buffer>;

        $r49 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.util.concurrent.ConcurrentMap _context>;

        $i1 = virtualinvoke $r46.<org.eclipse.jetty.server.handler.ConnectHandler: int read(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap)>($r47, $r48, $r49);

        $i3 = (int) -1;

        if $i1 != $i3 goto label05;

        $r16 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r2;

        $r18 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $r17[1] = $r18;

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: client closed connection {}", $r17);

        $r19 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $z1 = interfaceinvoke $r19.<org.eclipse.jetty.io.EndPoint: boolean isOutputShutdown()>();

        if $z1 != 0 goto label03;

        $r20 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $z2 = interfaceinvoke $r20.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z2 != 0 goto label04;

     label03:
        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void closeServer()>();

        goto label07;

     label04:
        $r21 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        virtualinvoke $r21.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void shutdownOutput()>();

        goto label07;

     label05:
        if $i1 != 0 goto label06;

        goto label07;

     label06:
        $r3 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r5;

        $r6 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        $r4[2] = $r6;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: read from client {} bytes {}", $r4);

        $r8 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler this$0>;

        $r7 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        $r9 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: org.eclipse.jetty.io.AsyncEndPoint access$600(org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)>($r7);

        $r11 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.Buffer _buffer>;

        $r10 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: java.util.concurrent.ConcurrentMap _context>;

        $i0 = virtualinvoke $r8.<org.eclipse.jetty.server.handler.ConnectHandler: int write(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap)>($r9, $r11, $r10);

        $r12 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = r2;

        $r14 = r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        $r13[1] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[2] = $r15;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: written to {} {} bytes", $r13);

        goto label02;

     label07:
        $r50 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = r2;

        interfaceinvoke $r50.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: end reading from client", $r51);

        return r2;

     label08:
        $r44 := @caughtexception;

        $r45 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        interfaceinvoke $r45.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r44);

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void closeServer()>();

        throw $r44;

     label09:
        $r38 := @caughtexception;

        $r39 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r43, $r38);

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void close()>();

        throw $r38;

     label10:
        $r32 := @caughtexception;

        $r33 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r37, $r32);

        virtualinvoke r2.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void close()>();

        throw $r32;

     label11:
        $r29 := @caughtexception;

     label12:
        $r30 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = r2;

        interfaceinvoke $r30.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: end reading from client", $r31);

        throw $r29;

        catch java.nio.channels.ClosedChannelException from label01 to label07 with label08;
        catch java.io.IOException from label01 to label07 with label09;
        catch java.lang.RuntimeException from label01 to label07 with label10;
        catch java.lang.Throwable from label01 to label07 with label11;
        catch java.lang.Throwable from label08 to label12 with label11;
    }

    public void onInputShutdown() throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        return;
    }

    public long getTimeStamp()
    {
        long $l0;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $l0 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: long _timestamp>;

        return $l0;
    }

    public boolean isIdle()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        return 0;
    }

    public boolean isSuspended()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        return 0;
    }

    public void onClose()
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        return;
    }

    public void setConnection(org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection)
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        r1 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection;

        r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer> = r1;

        return;
    }

    public void closeClient() throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: void close()>();

        return;
    }

    public void closeServer() throws java.io.IOException
    {
        org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection _toServer>;

        virtualinvoke $r1.<org.eclipse.jetty.server.handler.ConnectHandler$ProxyToServerConnection: void closeServer()>();

        return;
    }

    public void close()
    {
        java.io.IOException $r1, $r7;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r10, $r11;
        org.eclipse.jetty.util.log.Logger $r2, $r8;
        java.lang.String $r6, $r12;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void closeClient()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception closing the client");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r12, $r7);

     label4:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void closeServer()>();

     label5:
        goto label7;

     label6:
        $r1 := @caughtexception;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected exception closing the server");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r6, $r1);

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void shutdownOutput() throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: void shutdownOutput()>();

        return;
    }

    public void onIdleExpired(long)
    {
        long l0;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;
        java.lang.Exception $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        l0 := @parameter0: long;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void shutdownOutput()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = staticinvoke <org.eclipse.jetty.server.handler.ConnectHandler: org.eclipse.jetty.util.log.Logger access$300()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r1);

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: void close()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static org.eclipse.jetty.io.EndPoint access$400(org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection)
    {
        org.eclipse.jetty.io.EndPoint $r1;
        org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection;

        $r1 = r0.<org.eclipse.jetty.server.handler.ConnectHandler$ClientToProxyConnection: org.eclipse.jetty.io.EndPoint _endPoint>;

        return $r1;
    }
}
