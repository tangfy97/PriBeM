class org.springframework.util.AntPathMatcher$AntPatternComparator extends java.lang.Object implements java.util.Comparator
{
    private final java.lang.String path;

    private void <init>(java.lang.String)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator r0;
        java.lang.String r1;

        r0 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.AntPathMatcher$AntPatternComparator: java.lang.String path> = r1;

        return;
    }

    public int compare(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15, $i17;
        java.lang.String r0, r1, $r3, $r4;
        boolean $z0, $z1;
        org.springframework.util.AntPathMatcher$AntPatternComparator r2;

        r2 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 0;

     label01:
        if r0 != null goto label02;

        return 1;

     label02:
        if r1 != null goto label03;

        $i11 = (int) -1;

        return $i11;

     label03:
        $r3 = r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: java.lang.String path>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        $r4 = r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: java.lang.String path>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label04;

        if $z1 == 0 goto label04;

        return 0;

     label04:
        if $z0 == 0 goto label05;

        $i13 = (int) -1;

        return $i13;

     label05:
        if $z1 == 0 goto label06;

        return 1;

     label06:
        $i0 = specialinvoke r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: int getWildCardCount(java.lang.String)>(r0);

        $i1 = specialinvoke r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: int getWildCardCount(java.lang.String)>(r1);

        $i2 = staticinvoke <org.springframework.util.StringUtils: int countOccurrencesOf(java.lang.String,java.lang.String)>(r0, "{");

        $i3 = staticinvoke <org.springframework.util.StringUtils: int countOccurrencesOf(java.lang.String,java.lang.String)>(r1, "{");

        i4 = $i0 + $i2;

        i5 = $i1 + $i3;

        if i4 == i5 goto label07;

        $i9 = i4 - i5;

        return $i9;

     label07:
        $i6 = specialinvoke r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: int getPatternLength(java.lang.String)>(r0);

        $i7 = specialinvoke r2.<org.springframework.util.AntPathMatcher$AntPatternComparator: int getPatternLength(java.lang.String)>(r1);

        if $i6 == $i7 goto label08;

        $i8 = $i7 - $i6;

        return $i8;

     label08:
        if $i0 >= $i1 goto label09;

        $i15 = (int) -1;

        return $i15;

     label09:
        if $i1 >= $i0 goto label10;

        return 1;

     label10:
        if $i2 >= $i3 goto label11;

        $i17 = (int) -1;

        return $i17;

     label11:
        if $i3 >= $i2 goto label12;

        return 1;

     label12:
        return 0;
    }

    private int getWildCardCount(java.lang.String)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator r0;
        int $i0, $i1, $i2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".*");

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label1:
        $i0 = staticinvoke <org.springframework.util.StringUtils: int countOccurrencesOf(java.lang.String,java.lang.String)>(r1, "*");

        return $i0;
    }

    private int getPatternLength(java.lang.String)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator r4;
        java.util.regex.Matcher $r2;
        int $i0;
        java.util.regex.Pattern $r0;
        java.lang.String r1, $r3;

        r4 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.springframework.util.AntPathMatcher: java.util.regex.Pattern access$0()>();

        $r2 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("#");

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<org.springframework.util.AntPathMatcher$AntPatternComparator: int compare(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }

    void <init>(java.lang.String, org.springframework.util.AntPathMatcher$AntPatternComparator)
    {
        org.springframework.util.AntPathMatcher$AntPatternComparator r0, r2;
        java.lang.String r1;

        r0 := @this: org.springframework.util.AntPathMatcher$AntPatternComparator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.util.AntPathMatcher$AntPatternComparator;

        specialinvoke r0.<org.springframework.util.AntPathMatcher$AntPatternComparator: void <init>(java.lang.String)>(r1);

        return;
    }
}
