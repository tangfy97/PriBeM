public class org.apache.pdfbox.filter.RunLengthDecodeFilter extends java.lang.Object implements org.apache.pdfbox.filter.Filter
{
    private static final org.apache.commons.logging.Log log;
    private static final int RUN_LENGTH_EOD;

    public void <init>()
    {
        org.apache.pdfbox.filter.RunLengthDecodeFilter r0;

        r0 := @this: org.apache.pdfbox.filter.RunLengthDecodeFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void decode(java.io.InputStream, java.io.OutputStream, org.apache.pdfbox.cos.COSDictionary, int) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        org.apache.pdfbox.cos.COSDictionary r4;
        org.apache.pdfbox.filter.RunLengthDecodeFilter r3;
        int $i0, $i1, $i2, i3, $i4, i5, i6, $i8;
        java.io.InputStream r1;

        r3 := @this: org.apache.pdfbox.filter.RunLengthDecodeFilter;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r4 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        i3 := @parameter3: int;

        r0 = newarray (byte)[128];

     label1:
        $i4 = virtualinvoke r1.<java.io.InputStream: int read()>();

        $i8 = (int) -1;

        if $i4 == $i8 goto label7;

        if $i4 == 128 goto label7;

        if $i4 > 127 goto label4;

        i5 = $i4 + 1;

     label2:
        if i5 <= 0 goto label3;

        $i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, 0, i5);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i2);

        i5 = i5 - $i2;

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        i6 = 0;

     label5:
        $i1 = 257 - $i4;

        if i6 >= $i1 goto label6;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i0);

        i6 = i6 + 1;

        goto label5;

     label6:
        goto label1;

     label7:
        return;
    }

    public void encode(java.io.InputStream, java.io.OutputStream, org.apache.pdfbox.cos.COSDictionary, int) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.apache.pdfbox.cos.COSDictionary r4;
        org.apache.pdfbox.filter.RunLengthDecodeFilter r1;
        int i0;
        org.apache.commons.logging.Log $r0;
        java.io.InputStream r2;

        r1 := @this: org.apache.pdfbox.filter.RunLengthDecodeFilter;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.io.OutputStream;

        r4 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        i0 := @parameter3: int;

        $r0 = <org.apache.pdfbox.filter.RunLengthDecodeFilter: org.apache.commons.logging.Log log>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("RunLengthDecodeFilter.encode is not implemented yet, skipping this stream.");

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.filter.RunLengthDecodeFilter: int RUN_LENGTH_EOD> = 128;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/filter/RunLengthDecodeFilter;");

        <org.apache.pdfbox.filter.RunLengthDecodeFilter: org.apache.commons.logging.Log log> = $r0;

        return;
    }
}
