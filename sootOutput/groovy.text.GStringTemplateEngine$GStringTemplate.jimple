class groovy.text.GStringTemplateEngine$GStringTemplate extends java.lang.Object implements groovy.text.Template
{
    final groovy.lang.Closure template;

    void <init>(java.io.Reader, java.lang.ClassLoader) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException
    {
        groovy.lang.Closure $r16;
        groovy.text.GStringTemplateEngine$GStringTemplate$1 $r33;
        java.lang.InstantiationException $r21;
        boolean z0, z1, z2, z3, z4, z5, z6, z7;
        java.lang.IllegalAccessException $r18;
        groovy.lang.GroovyRuntimeException $r37;
        java.io.Reader r2;
        java.lang.Exception $r24;
        java.lang.ClassLoader r4;
        groovy.lang.GroovyClassLoader $r17;
        groovy.lang.GroovyCodeSource $r35;
        groovy.lang.GroovyObject r31;
        java.lang.StringBuffer $r9, $r10, $r11, $r27, $r29, $r32, $r34, $r36;
        int $i0, $i1, $i2, $i3, $i4, i5, $i8;
        java.lang.String $r7, $r12, $r20, $r23, $r28, $r30;
        char $c6;
        java.lang.Object $r5, $r14, $r15;
        java.lang.Class $r13;
        java.lang.ClassNotFoundException $r38, $r39;
        groovy.text.GStringTemplateEngine$GStringTemplate r0;

        r0 := @this: groovy.text.GStringTemplateEngine$GStringTemplate;

        r2 := @parameter0: java.io.Reader;

        r4 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>(java.lang.String)>("package groovy.tmp.templates\n def getTemplate() { return { out -> delegate = new Binding(delegate); out << \"\"\"");

        z0 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

     label01:
        $i4 = virtualinvoke r2.<java.io.Reader: int read()>();

        i5 = $i4;

        $i8 = (int) -1;

        if $i4 != $i8 goto label02;

        goto label08;

     label02:
        if $i4 != 60 goto label05;

        $i1 = virtualinvoke r2.<java.io.Reader: int read()>();

        i5 = $i1;

        if $i1 != 37 goto label04;

        $i2 = virtualinvoke r2.<java.io.Reader: int read()>();

        if $i2 != 61 goto label03;

        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void parseExpression(java.io.Reader,boolean,java.lang.StringBuffer)>(r2, z6, $r32);

        z0 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        goto label01;

     label03:
        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void parseSection(int,java.io.Reader,boolean,java.lang.StringBuffer)>($i2, r2, z2, $r32);

        z0 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        goto label01;

     label04:
        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void appendCharacter(char,java.lang.StringBuffer,boolean)>(60, $r32, z7);

        z0 = 1;

        z5 = 1;

        goto label07;

     label05:
        if $i4 != 34 goto label06;

        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void appendCharacter(char,java.lang.StringBuffer,boolean)>(92, $r32, z4);

        z0 = 1;

        z5 = 1;

        goto label07;

     label06:
        if $i4 != 36 goto label07;

        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void appendCharacter(char,java.lang.StringBuffer,boolean)>(36, $r32, z1);

        z0 = 1;

        z5 = 1;

        $i0 = virtualinvoke r2.<java.io.Reader: int read()>();

        i5 = $i0;

        if $i0 != 123 goto label07;

        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void appendCharacter(char,java.lang.StringBuffer,boolean)>(123, $r32, 1);

        specialinvoke r0.<groovy.text.GStringTemplateEngine$GStringTemplate: void parseGSstring(java.io.Reader,boolean,java.lang.StringBuffer)>(r2, 1, $r32);

        z0 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        goto label01;

     label07:
        $c6 = (char) i5;

        staticinvoke <groovy.text.GStringTemplateEngine$GStringTemplate: void appendCharacter(char,java.lang.StringBuffer,boolean)>($c6, $r32, z5);

        z0 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        goto label01;

     label08:
        if z3 == 0 goto label09;

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"\"\"");

     label09:
        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}.asWritable()}");

        $r33 = new groovy.text.GStringTemplateEngine$GStringTemplate$1;

        specialinvoke $r33.<groovy.text.GStringTemplateEngine$GStringTemplate$1: void <init>(groovy.text.GStringTemplateEngine$GStringTemplate,java.lang.ClassLoader)>(r0, r4);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r33);

        $r17 = (groovy.lang.GroovyClassLoader) $r5;

     label10:
        $r35 = new groovy.lang.GroovyCodeSource;

        $r7 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GStringTemplateScript");

        $i3 = staticinvoke <groovy.text.GStringTemplateEngine: int access$008()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r35.<groovy.lang.GroovyCodeSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r12, "x");

        $r13 = virtualinvoke $r17.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(groovy.lang.GroovyCodeSource)>($r35);

     label11:
        goto label13;

     label12:
        $r24 := @caughtexception;

        $r37 = new groovy.lang.GroovyRuntimeException;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): ");

        $r28 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r37.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r30);

        throw $r37;

     label13:
        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.Object newInstance()>();

        r31 = (groovy.lang.GroovyObject) $r14;

        $r15 = interfaceinvoke r31.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>("getTemplate", null);

        $r16 = (groovy.lang.Closure) $r15;

        r0.<groovy.text.GStringTemplateEngine$GStringTemplate: groovy.lang.Closure template> = $r16;

     label14:
        goto label17;

     label15:
        $r21 := @caughtexception;

        $r38 = new java.lang.ClassNotFoundException;

        $r23 = virtualinvoke $r21.<java.lang.InstantiationException: java.lang.String getMessage()>();

        specialinvoke $r38.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r23);

        throw $r38;

     label16:
        $r18 := @caughtexception;

        $r39 = new java.lang.ClassNotFoundException;

        $r20 = virtualinvoke $r18.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r39.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>($r20);

        throw $r39;

     label17:
        return;

        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.InstantiationException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }

    private static void appendCharacter(char, java.lang.StringBuffer, boolean)
    {
        char c0;
        java.lang.StringBuffer r0;
        boolean z0;

        c0 := @parameter0: char;

        r0 := @parameter1: java.lang.StringBuffer;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("out << \"\"\"");

     label1:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        return;
    }

    private void parseGSstring(java.io.Reader, boolean, java.lang.StringBuffer) throws java.io.IOException
    {
        java.lang.StringBuffer r1;
        int $i1, $i3;
        char $c0;
        java.io.Reader r0;
        boolean z0;
        groovy.text.GStringTemplateEngine$GStringTemplate r2;

        r2 := @this: groovy.text.GStringTemplateEngine$GStringTemplate;

        r0 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.StringBuffer;

        if z0 != 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"\"\"; ");

     label1:
        $i1 = virtualinvoke r0.<java.io.Reader: int read()>();

        $i3 = (int) -1;

        if $i1 != $i3 goto label2;

        goto label4;

     label2:
        $c0 = (char) $i1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        if $i1 != 125 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    private static void parseSection(int, java.io.Reader, boolean, java.lang.StringBuffer) throws java.io.IOException
    {
        char $c1, $c2;
        java.io.Reader r1;
        java.lang.StringBuffer r0;
        int i0, $i3, $i4, i5, $i7;
        boolean z0;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.Reader;

        z0 := @parameter2: boolean;

        r0 := @parameter3: java.lang.StringBuffer;

        if z0 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"\"\"; ");

     label1:
        $c1 = (char) i0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label2:
        $i4 = virtualinvoke r1.<java.io.Reader: int read()>();

        i5 = $i4;

        $i7 = (int) -1;

        if $i4 != $i7 goto label3;

        goto label6;

     label3:
        if $i4 != 37 goto label5;

        $i3 = virtualinvoke r1.<java.io.Reader: int read()>();

        i5 = $i3;

        if $i3 != 62 goto label4;

        goto label6;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

     label5:
        $c2 = (char) i5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label2;

     label6:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n ");

        return;
    }

    private static void parseExpression(java.io.Reader, boolean, java.lang.StringBuffer) throws java.io.IOException
    {
        char $c0;
        java.io.Reader r1;
        java.lang.StringBuffer r0;
        int $i1, $i2, i3, $i5;
        boolean z0;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.StringBuffer;

        if z0 != 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("out << \"\"\"");

     label1:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("${");

     label2:
        $i2 = virtualinvoke r1.<java.io.Reader: int read()>();

        i3 = $i2;

        $i5 = (int) -1;

        if $i2 != $i5 goto label3;

        goto label6;

     label3:
        if $i2 != 37 goto label5;

        $i1 = virtualinvoke r1.<java.io.Reader: int read()>();

        i3 = $i1;

        if $i1 != 62 goto label4;

        goto label6;

     label4:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

     label5:
        $c0 = (char) i3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label2;

     label6:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return;
    }

    public groovy.lang.Writable make()
    {
        groovy.lang.Writable $r1;
        groovy.text.GStringTemplateEngine$GStringTemplate r0;

        r0 := @this: groovy.text.GStringTemplateEngine$GStringTemplate;

        $r1 = virtualinvoke r0.<groovy.text.GStringTemplateEngine$GStringTemplate: groovy.lang.Writable make(java.util.Map)>(null);

        return $r1;
    }

    public groovy.lang.Writable make(java.util.Map)
    {
        java.util.Map r4;
        groovy.lang.Closure $r1, r3;
        java.lang.Object $r2;
        groovy.lang.Writable $r5;
        groovy.text.GStringTemplateEngine$GStringTemplate r0;

        r0 := @this: groovy.text.GStringTemplateEngine$GStringTemplate;

        r4 := @parameter0: java.util.Map;

        $r1 = r0.<groovy.text.GStringTemplateEngine$GStringTemplate: groovy.lang.Closure template>;

        $r2 = virtualinvoke $r1.<groovy.lang.Closure: java.lang.Object clone()>();

        r3 = (groovy.lang.Closure) $r2;

        virtualinvoke r3.<groovy.lang.Closure: void setDelegate(java.lang.Object)>(r4);

        $r5 = (groovy.lang.Writable) r3;

        return $r5;
    }
}
