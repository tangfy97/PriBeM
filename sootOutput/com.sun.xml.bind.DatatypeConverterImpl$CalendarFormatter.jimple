final class com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter extends java.lang.Object
{

    private void <init>()
    {
        com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter r0;

        r0 := @this: com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String doFormat(java.lang.String, java.util.Calendar) throws java.lang.IllegalArgumentException
    {
        char $c2, $c4;
        java.util.Calendar r3;
        int $i0, $i1, $i3, i5, $i6, $i7;
        java.lang.InternalError $r6;
        java.lang.StringBuilder $r5;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Calendar;

        i5 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label01:
        if i5 >= $i0 goto label12;

        $i1 = i5;

        i5 = i5 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $i6 = (int) $c2;

        if $i6 == 37 goto label02;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label01;

     label02:
        $i3 = i5;

        i5 = i5 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i7 = (int) $c4;

        lookupswitch($i7)
        {
            case 68: goto label05;
            case 77: goto label04;
            case 89: goto label03;
            case 104: goto label06;
            case 109: goto label07;
            case 115: goto label08;
            case 122: goto label09;
            default: goto label10;
        };

     label03:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatYear(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label04:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatMonth(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label05:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatDays(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label06:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatHours(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label07:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatMinutes(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label08:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatSeconds(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label09:
        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTimeZone(java.util.Calendar,java.lang.StringBuilder)>(r3, $r5);

        goto label11;

     label10:
        $r6 = new java.lang.InternalError;

        specialinvoke $r6.<java.lang.InternalError: void <init>()>();

        throw $r6;

     label11:
        goto label01;

     label12:
        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static void formatYear(java.util.Calendar, java.lang.StringBuilder)
    {
        java.util.Calendar r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String r8;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        if $i0 > 0 goto label1;

        $i1 = 1 - $i0;

        r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        goto label2;

     label1:
        r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label2:
        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i2 >= 4 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label3:
        if $i0 > 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        return;
    }

    private static void formatMonth(java.util.Calendar, java.lang.StringBuilder)
    {
        java.util.Calendar r0;
        int $i0, $i1;
        java.lang.StringBuilder r1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        $i1 = $i0 + 1;

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i1, r1);

        return;
    }

    private static void formatDays(java.util.Calendar, java.lang.StringBuilder)
    {
        int $i0;
        java.lang.StringBuilder r1;
        java.util.Calendar r0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i0, r1);

        return;
    }

    private static void formatHours(java.util.Calendar, java.lang.StringBuilder)
    {
        int $i0;
        java.lang.StringBuilder r1;
        java.util.Calendar r0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i0, r1);

        return;
    }

    private static void formatMinutes(java.util.Calendar, java.lang.StringBuilder)
    {
        int $i0;
        java.lang.StringBuilder r1;
        java.util.Calendar r0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i0, r1);

        return;
    }

    private static void formatSeconds(java.util.Calendar, java.lang.StringBuilder)
    {
        java.util.Calendar r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder r1, $r2, $r3, $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(13);

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i0, r1);

        $z0 = virtualinvoke r0.<java.util.Calendar: boolean isSet(int)>(14);

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(14);

        if $i1 == 0 goto label3;

        r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

     label1:
        $i2 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i2 >= 3 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label3:
        return;
    }

    private static void formatTimeZone(java.util.Calendar, java.lang.StringBuilder)
    {
        java.util.TimeZone $r1;
        java.util.Date $r2;
        long $l0;
        java.util.Calendar r0;
        int $i1, $i2, $i3, $i4, i5, $i7, $i9;
        java.lang.StringBuilder r3;

        r0 := @parameter0: java.util.Calendar;

        r3 := @parameter1: java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $i1 = virtualinvoke $r1.<java.util.TimeZone: int getOffset(long)>($l0);

        i5 = $i1;

        if $i1 != 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        return;

     label2:
        if $i1 < 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        goto label4;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i7 = (int) -1;

        i5 = $i1 * $i7;

     label4:
        $i9 = (int) 60000;

        $i4 = i5 / $i9;

        $i2 = $i4 / 60;

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i2, r3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i3 = $i4 % 60;

        staticinvoke <com.sun.xml.bind.DatatypeConverterImpl$CalendarFormatter: void formatTwoDigits(int,java.lang.StringBuilder)>($i3, r3);

        return;
    }

    private static void formatTwoDigits(int, java.lang.StringBuilder)
    {
        int i0;
        java.lang.StringBuilder r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuilder;

        if i0 >= 10 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        return;
    }
}
