public class org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.Map sheetMap;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet ctSheet;
    private java.util.Iterator sheetIterator;

    private void <init>(org.apache.poi.openxml4j.opc.PackagePart) throws java.io.IOException
    {
        java.util.Map $r18;
        org.apache.poi.openxml4j.opc.PackagePart r2, $r21;
        java.net.URI $r16;
        boolean $z0, $z1, $z2;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r27;
        org.apache.poi.openxml4j.opc.PackagePartName $r17;
        java.util.List $r9;
        org.apache.poi.openxml4j.opc.OPCPackage $r20;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        org.apache.poi.xssf.usermodel.XSSFRelation $r14, $r23;
        java.util.HashMap $r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.WorkbookDocument $r6;
        org.apache.poi.openxml4j.opc.PackageRelationship r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheets $r8;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook $r7;
        java.lang.String $r13, $r15, $r19, $r22, $r24;
        org.apache.poi.POIXMLException $r26, $r28;
        java.util.Iterator $r4, $r10;
        org.apache.xmlbeans.XmlException $r25;
        java.lang.Object $r11;
        java.io.InputStream $r5;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        r2 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Map sheetMap> = $r1;

        $r3 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r11;

        $r13 = virtualinvoke r12.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r14 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation WORKSHEET>;

        $r15 = virtualinvoke $r14.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label3;

        $r22 = virtualinvoke r12.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r23 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation CHARTSHEET>;

        $r24 = virtualinvoke $r23.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z2 == 0 goto label4;

     label3:
        $r16 = virtualinvoke r12.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r17 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r16);

        $r18 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Map sheetMap>;

        $r19 = virtualinvoke r12.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        $r20 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r21 = virtualinvoke $r20.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r17);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r21);

     label4:
        goto label2;

     label5:
        $r5 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r6 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.WorkbookDocument$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.WorkbookDocument parse(java.io.InputStream)>($r5);

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.WorkbookDocument: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook getWorkbook()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorkbook: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheets getSheets()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheets: java.util.List getSheetList()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Iterator sheetIterator> = $r10;

     label6:
        goto label9;

     label7:
        $r27 := @caughtexception;

        $r28 = new org.apache.poi.POIXMLException;

        specialinvoke $r28.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r27);

        throw $r28;

     label8:
        $r25 := @caughtexception;

        $r26 = new org.apache.poi.POIXMLException;

        specialinvoke $r26.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r25);

        throw $r26;

     label9:
        return;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label6 with label7;
        catch org.apache.xmlbeans.XmlException from label1 to label6 with label8;
    }

    public boolean hasNext()
    {
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Iterator sheetIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.io.InputStream next()
    {
        java.util.Iterator $r1;
        java.io.IOException $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet $r3, $r4;
        java.util.Map $r6;
        java.lang.Object $r2, $r7;
        org.apache.poi.openxml4j.opc.PackagePart r11;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.lang.String $r5;
        org.apache.poi.POIXMLException $r10;
        java.io.InputStream $r8;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Iterator sheetIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet) $r2;

        r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet ctSheet> = $r3;

        $r4 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet ctSheet>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet: java.lang.String getId()>();

     label1:
        $r6 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Map sheetMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r11 = (org.apache.poi.openxml4j.opc.PackagePart) $r7;

        $r8 = virtualinvoke r11.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.apache.poi.POIXMLException;

        specialinvoke $r10.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getSheetName()
    {
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.lang.String $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet $r1;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet ctSheet>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet: java.lang.String getName()>();

        return $r2;
    }

    public org.apache.poi.xssf.model.CommentsTable getSheetComments()
    {
        org.apache.poi.xssf.model.CommentsTable $r10;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r12;
        org.apache.poi.openxml4j.opc.PackagePartName $r7;
        org.apache.poi.xssf.usermodel.XSSFRelation $r2;
        java.io.IOException $r11;
        org.apache.poi.openxml4j.opc.PackageRelationship $r5;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r4;
        org.apache.poi.openxml4j.opc.OPCPackage $r8;
        int $i0;
        org.apache.poi.openxml4j.opc.PackagePart $r1, $r9;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.lang.String $r3;
        java.net.URI $r6;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.apache.poi.openxml4j.opc.PackagePart getSheetPart()>();

     label1:
        $r2 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation SHEET_COMMENTS>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $r4 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r3);

        $i0 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(int)>(0);

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r6);

        $r8 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r7);

        $r10 = new org.apache.poi.xssf.model.CommentsTable;

        specialinvoke $r10.<org.apache.poi.xssf.model.CommentsTable: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>($r9, $r5);

     label2:
        return $r10;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        return null;

     label5:
        $r11 := @caughtexception;

        return null;

     label6:
        return null;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public java.util.List getShapes()
    {
        org.apache.poi.xssf.usermodel.XSSFRelation $r3;
        org.apache.poi.openxml4j.opc.PackageRelationship $r6;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r5;
        int $i0, i1;
        org.apache.poi.openxml4j.opc.PackagePart $r1, $r10;
        java.lang.String $r4;
        java.net.URI $r7;
        java.util.LinkedList $r2;
        boolean $z0;
        java.util.Iterator $r13;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r17;
        org.apache.poi.openxml4j.opc.PackagePartName $r8;
        java.io.IOException $r16;
        java.util.List $r12;
        org.apache.xmlbeans.XmlException $r18;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r11;
        org.apache.poi.openxml4j.opc.OPCPackage $r9;
        java.lang.Object $r14;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        org.apache.poi.xssf.usermodel.XSSFShape r15;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.apache.poi.openxml4j.opc.PackagePart getSheetPart()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

     label1:
        $r3 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation DRAWINGS>;

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFRelation: java.lang.String getRelation()>();

        $r5 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationshipsByType(java.lang.String)>($r4);

        i1 = 0;

     label2:
        $i0 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: int size()>();

        if i1 >= $i0 goto label5;

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(int)>(i1);

        $r7 = virtualinvoke $r6.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r8 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r7);

        $r9 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.OPCPackage getPackage()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r8);

        $r11 = new org.apache.poi.xssf.usermodel.XSSFDrawing;

        specialinvoke $r11.<org.apache.poi.xssf.usermodel.XSSFDrawing: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>($r10, $r6);

        $r12 = virtualinvoke $r11.<org.apache.poi.xssf.usermodel.XSSFDrawing: java.util.List getShapes()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.poi.xssf.usermodel.XSSFShape) $r14;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r15);

        goto label3;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        goto label9;

     label6:
        $r18 := @caughtexception;

        return null;

     label7:
        $r17 := @caughtexception;

        return null;

     label8:
        $r16 := @caughtexception;

        return null;

     label9:
        return $r2;

        catch org.apache.xmlbeans.XmlException from label1 to label5 with label6;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label5 with label7;
        catch java.io.IOException from label1 to label5 with label8;
    }

    public org.apache.poi.openxml4j.opc.PackagePart getSheetPart()
    {
        java.util.Map $r3;
        java.lang.Object $r4;
        org.apache.poi.openxml4j.opc.PackagePart $r5;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.lang.String $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet $r1;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet ctSheet>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet: java.lang.String getId()>();

        $r3 = r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.Map sheetMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (org.apache.poi.openxml4j.opc.PackagePart) $r4;

        return $r5;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r0;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r1;

        r1 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not supported");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.io.InputStream next()>();

        return $r1;
    }

    void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.xssf.eventusermodel.XSSFReader$1) throws java.io.IOException
    {
        org.apache.poi.xssf.eventusermodel.XSSFReader$1 r2;
        org.apache.poi.openxml4j.opc.PackagePart r1;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r0;

        r0 := @this: org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.xssf.eventusermodel.XSSFReader$1;

        specialinvoke r0.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: void <init>(org.apache.poi.openxml4j.opc.PackagePart)>(r1);

        return;
    }
}
