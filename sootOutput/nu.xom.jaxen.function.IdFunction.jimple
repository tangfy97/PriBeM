public class nu.xom.jaxen.function.IdFunction extends java.lang.Object implements nu.xom.jaxen.Function
{

    public void <init>()
    {
        nu.xom.jaxen.function.IdFunction r0;

        r0 := @this: nu.xom.jaxen.function.IdFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(nu.xom.jaxen.Context, java.util.List) throws nu.xom.jaxen.FunctionCallException
    {
        nu.xom.jaxen.FunctionCallException $r1;
        nu.xom.jaxen.function.IdFunction r7;
        java.util.List r0, $r3, $r6;
        int $i0;
        java.lang.Object $r4;
        nu.xom.jaxen.Context r2;
        nu.xom.jaxen.Navigator $r5;

        r7 := @this: nu.xom.jaxen.function.IdFunction;

        r2 := @parameter0: nu.xom.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r3 = virtualinvoke r2.<nu.xom.jaxen.Context: java.util.List getNodeSet()>();

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = virtualinvoke r2.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r6 = staticinvoke <nu.xom.jaxen.function.IdFunction: java.util.List evaluate(java.util.List,java.lang.Object,nu.xom.jaxen.Navigator)>($r3, $r4, $r5);

        return $r6;

     label1:
        $r1 = new nu.xom.jaxen.FunctionCallException;

        specialinvoke $r1.<nu.xom.jaxen.FunctionCallException: void <init>(java.lang.String)>("id() requires one argument");

        throw $r1;
    }

    public static java.util.List evaluate(java.util.List, java.lang.Object, nu.xom.jaxen.Navigator)
    {
        java.util.ArrayList $r1;
        java.util.StringTokenizer $r6;
        int $i0;
        java.lang.String $r5, $r7, $r12;
        nu.xom.jaxen.Navigator r4;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        java.util.List r0, $r9, $r13, $r14;
        java.lang.Object $r2, r3, $r8, $r11;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: nu.xom.jaxen.Navigator;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r14 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r14;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = r3 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r9 = (java.util.List) r3;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r11, r4);

        $r13 = staticinvoke <nu.xom.jaxen.function.IdFunction: java.util.List evaluate(java.util.List,java.lang.Object,nu.xom.jaxen.Navigator)>(r0, $r12, r4);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        goto label2;

     label3:
        goto label7;

     label4:
        $r5 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r3, r4);

        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r5, " \t\n\r");

     label5:
        $z1 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label7;

        $r7 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r8 = interfaceinvoke r4.<nu.xom.jaxen.Navigator: java.lang.Object getElementById(java.lang.Object,java.lang.String)>($r2, $r7);

        if $r8 == null goto label6;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

     label6:
        goto label5;

     label7:
        return $r1;
    }
}
