class org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5 extends java.lang.Object implements org.waveprotocol.wave.model.document.MutableDocument$Action
{
    final java.util.Set val$threadIds;
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip, java.util.Set)
    {
        java.util.Set r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5 r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip;

        r2 := @parameter1: java.util.Set;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip this$0> = r1;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5: java.util.Set val$threadIds> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void exec(org.waveprotocol.wave.model.document.MutableDocument)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5 r11;
        java.lang.Iterable $r3;
        java.util.ArrayList $r0;
        java.lang.String $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4, $r5;
        java.util.Set $r12;
        org.waveprotocol.wave.model.document.MutableDocument r1;
        java.lang.Object $r2, $r6, $r7;

        r11 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.ArrayList newArrayList()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getDocumentElement()>();

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.util.DocIterate: java.lang.Iterable deepElements(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,java.lang.Object)>(r1, $r2, null);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = "reply";

        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getTagName(java.lang.Object)>($r7);

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>($r7, "id");

        $r12 = r11.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$5: java.util.Set val$threadIds>;

        $z3 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z3 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        goto label1;

     label3:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

        $r5 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.MutableDocument: void deleteNode(java.lang.Object)>($r6);

        goto label4;

     label5:
        return;
    }
}
