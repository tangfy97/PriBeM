public final class com.google.common.collect.ImmutableList$Builder extends com.google.common.collect.ImmutableCollection$Builder
{
    private final java.util.ArrayList contents;

    public void <init>()
    {
        com.google.common.collect.ImmutableList$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents> = $r1;

        return;
    }

    public com.google.common.collect.ImmutableList$Builder add(java.lang.Object)
    {
        java.lang.Object r1, $r3;
        com.google.common.collect.ImmutableList$Builder r0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)
    {
        java.util.Collection r2;
        java.lang.Iterable r0;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0;
        com.google.common.collect.ImmutableList$Builder r1;

        r1 := @this: com.google.common.collect.ImmutableList$Builder;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        r2 = (java.util.Collection) r0;

        $r4 = r1.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $r3 = r1.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        virtualinvoke $r4.<java.util.ArrayList: void ensureCapacity(int)>($i2);

     label1:
        specialinvoke r1.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>(r0);

        return r1;
    }

    public transient com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])
    {
        java.lang.Object[] r3;
        int $i0, $i1, $i2;
        com.google.common.collect.ImmutableList$Builder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r3 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $r1 = r0.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = lengthof r3;

        $i2 = $i0 + $i1;

        virtualinvoke $r2.<java.util.ArrayList: void ensureCapacity(int)>($i2);

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])>(r3);

        return r0;
    }

    public com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.google.common.collect.ImmutableList$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableList build()
    {
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.ImmutableList$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        $r1 = r0.<com.google.common.collect.ImmutableList$Builder: java.util.ArrayList contents>;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection build()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableList$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)
    {
        java.util.Iterator r1;
        com.google.common.collect.ImmutableList$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.util.Iterator;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
    {
        java.lang.Iterable r1;
        com.google.common.collect.ImmutableList$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.google.common.collect.ImmutableList$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object[])>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableList$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableList$Builder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r1);

        return $r2;
    }
}
