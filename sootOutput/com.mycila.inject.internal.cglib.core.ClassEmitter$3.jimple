class com.mycila.inject.internal.cglib.core.ClassEmitter$3 extends com.mycila.inject.internal.cglib.core.CodeEmitter
{
    private final com.mycila.inject.internal.cglib.core.ClassEmitter this$0;

    void <init>(com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.asm.MethodVisitor, int, com.mycila.inject.internal.cglib.core.Signature, com.mycila.inject.internal.asm.Type[])
    {
        com.mycila.inject.internal.cglib.core.ClassEmitter r1, r5;
        com.mycila.inject.internal.asm.MethodVisitor r2;
        com.mycila.inject.internal.cglib.core.Signature r3;
        int i0;
        com.mycila.inject.internal.cglib.core.ClassEmitter$3 r0;
        com.mycila.inject.internal.asm.Type[] r4;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$3;

        r5 := @parameter0: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r1 := @parameter1: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r2 := @parameter2: com.mycila.inject.internal.asm.MethodVisitor;

        i0 := @parameter3: int;

        r3 := @parameter4: com.mycila.inject.internal.cglib.core.Signature;

        r4 := @parameter5: com.mycila.inject.internal.asm.Type[];

        specialinvoke r0.<com.mycila.inject.internal.cglib.core.CodeEmitter: void <init>(com.mycila.inject.internal.cglib.core.ClassEmitter,com.mycila.inject.internal.asm.MethodVisitor,int,com.mycila.inject.internal.cglib.core.Signature,com.mycila.inject.internal.asm.Type[])>(r1, r2, i0, r3, r4);

        r0.<com.mycila.inject.internal.cglib.core.ClassEmitter$3: com.mycila.inject.internal.cglib.core.ClassEmitter this$0> = r5;

        return;
    }

    public boolean isStaticHook()
    {
        com.mycila.inject.internal.cglib.core.ClassEmitter$3 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.ClassEmitter$3;

        return 1;
    }
}
