public class org.apache.lucene.queries.function.ValueSourceScorer extends org.apache.lucene.search.Scorer
{
    protected final org.apache.lucene.index.IndexReader reader;
    private int doc;
    protected final int maxDoc;
    protected final org.apache.lucene.queries.function.FunctionValues values;
    protected boolean checkDeletes;
    private final org.apache.lucene.util.Bits liveDocs;

    protected void <init>(org.apache.lucene.index.IndexReader, org.apache.lucene.queries.function.FunctionValues)
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int $i0, $i2;
        org.apache.lucene.queries.function.FunctionValues r2;
        org.apache.lucene.util.Bits $r3;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.queries.function.FunctionValues;

        specialinvoke r0.<org.apache.lucene.search.Scorer: void <init>(org.apache.lucene.search.Weight)>(null);

        $i2 = (int) -1;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc> = $i2;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.index.IndexReader reader> = r1;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: int maxDoc> = $i0;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.queries.function.FunctionValues values> = r2;

        virtualinvoke r0.<org.apache.lucene.queries.function.ValueSourceScorer: void setCheckDeletes(boolean)>(1);

        $r3 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.util.Bits getLiveDocs(org.apache.lucene.index.IndexReader)>(r1);

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.util.Bits liveDocs> = $r3;

        return;
    }

    public org.apache.lucene.index.IndexReader getReader()
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        org.apache.lucene.index.IndexReader $r1;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        $r1 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.index.IndexReader reader>;

        return $r1;
    }

    public void setCheckDeletes(boolean)
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        org.apache.lucene.index.IndexReader $r1;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.index.IndexReader reader>;

        $z1 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: boolean hasDeletions()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<org.apache.lucene.queries.function.ValueSourceScorer: boolean checkDeletes> = $z2;

        return;
    }

    public boolean matches(int)
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int i0;
        org.apache.lucene.util.Bits $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: boolean checkDeletes>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.util.Bits liveDocs>;

        $z2 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        if $z2 == 0 goto label2;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.queries.function.ValueSourceScorer: boolean matchesValue(int)>(i0);

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean matchesValue(int)
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int i0;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        i0 := @parameter0: int;

        return 1;
    }

    public int docID()
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int $i0;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        $i0 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        return $i0;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

     label1:
        $i0 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc> = $i1;

        $i3 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        $i2 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int maxDoc>;

        if $i3 < $i2 goto label2;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc> = 2147483647;

        return 2147483647;

     label2:
        $i4 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        $z0 = virtualinvoke r0.<org.apache.lucene.queries.function.ValueSourceScorer: boolean matches(int)>($i4);

        if $z0 == 0 goto label1;

        $i5 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        return $i5;
    }

    public int advance(int) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc> = $i1;

        $i2 = virtualinvoke r0.<org.apache.lucene.queries.function.ValueSourceScorer: int nextDoc()>();

        return $i2;
    }

    public float score() throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int $i0;
        float $f0;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        $r1 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: org.apache.lucene.queries.function.FunctionValues values>;

        $i0 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int doc>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>($i0);

        return $f0;
    }

    public int freq() throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        return 1;
    }

    public long cost()
    {
        org.apache.lucene.queries.function.ValueSourceScorer r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.lucene.queries.function.ValueSourceScorer;

        $i0 = r0.<org.apache.lucene.queries.function.ValueSourceScorer: int maxDoc>;

        $l1 = (long) $i0;

        return $l1;
    }
}
