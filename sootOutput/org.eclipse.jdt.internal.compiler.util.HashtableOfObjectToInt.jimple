public final class org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt extends java.lang.Object implements java.lang.Cloneable
{
    public java.lang.Object[] keyTable;
    public int[] valueTable;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r1;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int[] $r2;
        int i0, $i1, i2;
        float $f0, $f1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (java.lang.Object)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable> = $r1;

        $r2 = newarray (int)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable> = $r2;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object[] $r3, $r4, $r5, $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0, r2;
        int[] $r7, $r8, $r9, $r10;
        int $i0, $i1, i2, i3;
        java.lang.Object $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt) $r1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize>;

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize> = $i0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold>;

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold> = $i1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i2 = lengthof $r3;

        $r4 = newarray (java.lang.Object)[i2];

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable> = $r4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i2);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        i3 = lengthof $r7;

        $r8 = newarray (int)[i3];

        r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable> = $r8;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i3);

        return r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Object[] $r1, $r3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int i0, $i1, $i2, i3;
        java.lang.Object r2, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i3 = $i2 % i0;

        goto label3;

     label1:
        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        if i3 != i0 goto label3;

        i3 = 0;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r4 = $r3[i3];

        if $r4 != null goto label1;

        return 0;
    }

    public int get(java.lang.Object)
    {
        java.lang.Object[] $r1, $r4;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int[] $r3;
        int i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object r2, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i4 = $i2 % i0;

        goto label3;

     label1:
        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $i3 = $r3[i4];

        return $i3;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r5 = $r4[i4];

        if $r5 != null goto label1;

        $i6 = (int) -1;

        return $i6;
    }

    public void keysToArray(java.lang.Object[])
    {
        java.lang.Object[] $r1, $r2, r4, $r5;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int i0, $i1, i2, i3;
        java.lang.Object $r3, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r4 := @parameter0: java.lang.Object[];

        i2 = 0;

        i3 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r3 = $r2[i3];

        if $r3 == null goto label2;

        $i1 = i2;

        i2 = i2 + 1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r6 = $r5[i3];

        r4[$i1] = $r6;

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        return;
    }

    public int put(java.lang.Object, int)
    {
        java.lang.Object[] $r1, $r4, $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int[] $r3, $r5;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, i7;
        boolean $z0;
        java.lang.Object r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r2 := @parameter0: java.lang.Object;

        i3 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i7 = $i2 % i0;

        goto label3;

     label1:
        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $r3[i7] = i3;

        return i3;

     label2:
        i7 = i7 + 1;

        if i7 != i0 goto label3;

        i7 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r7 = $r6[i7];

        if $r7 != null goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r4[i7] = r2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $r5[i7] = i3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold>;

        if $i5 <= $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: void rehash()>();

     label4:
        return i3;
    }

    public int removeKey(java.lang.Object)
    {
        java.lang.Object[] $r1, $r4, $r5;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int[] $r3;
        int i0, $i1, $i2, i3, $i4, $i5, i6, $i8;
        boolean $z0;
        java.lang.Object r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        $i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label3;

     label1:
        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        i3 = $r3[i6];

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize> = $i5;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r4[i6] = null;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: void rehash()>();

        return i3;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r6 = $r5[i6];

        if $r6 != null goto label1;

        $i8 = (int) -1;

        return $i8;
    }

    private void rehash()
    {
        java.lang.Object[] $r2, $r3, $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r1, $r8;
        int[] $r5, $r7;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        $r8 = new org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i4 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r4 = $r3[i4];

        if $r4 == null goto label2;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $i2 = $r5[i4];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int put(java.lang.Object,int)>($r4, $i2);

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label1;

        $r6 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable> = $r6;

        $r7 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable> = $r7;

        $i3 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int threshold> = $i3;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r0;
        int[] $r8;
        java.lang.StringBuffer $r4, $r6, $r7, $r9, $r10;
        int i0, $i1, i2;
        java.lang.Object $r3;
        java.lang.String $r5, r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r11 = "";

        i2 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: java.lang.Object[] keyTable>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r11);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r8 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int[] valueTable>;

        $i1 = $r8[i2];

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

        return r11;
    }
}
