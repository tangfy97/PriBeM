abstract class com.sun.xml.bind.v2.runtime.property.ArrayElementProperty extends com.sun.xml.bind.v2.runtime.property.ArrayERProperty
{
    private final java.util.Map typeMap;
    private java.util.Map refs;
    protected com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop;
    private final com.sun.xml.bind.v2.runtime.Name nillableTagName;

    protected void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo)
    {
        com.sun.xml.bind.v2.runtime.Name $r17, r22;
        com.sun.xml.bind.v2.runtime.NameBuilder $r15;
        java.util.HashMap $r4, $r5;
        java.util.Map $r18, $r19, $r20;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo r2;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r1;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r9;
        java.util.Iterator $r7;
        java.util.List $r6;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r10, $r12;
        java.lang.Object $r8, $r11, $r21;
        java.lang.Class r23;
        javax.xml.namespace.QName $r3, $r16;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r13;
        com.sun.xml.bind.v2.runtime.property.TagAndType $r14;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo;

        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: javax.xml.namespace.QName getXmlName()>();

        $z0 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: boolean isCollectionNillable()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.ArrayERProperty: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo,javax.xml.namespace.QName,boolean)>(r1, r2, $r3, $z0);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map refs> = $r5;

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop> = r2;

        $r6 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        r22 = null;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r8;

        $r10 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getTarget()>();

        $r11 = interfaceinvoke $r10.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: java.lang.Object getType()>();

        r23 = (java.lang.Class) $r11;

        $z2 = virtualinvoke r23.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label2;

        $r20 = <com.sun.xml.bind.v2.runtime.RuntimeUtil: java.util.Map primitiveToBox>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        r23 = (java.lang.Class) $r21;

     label2:
        $r12 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.model.runtime.RuntimeNonElement getTarget()>();

        $r13 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getOrCreate(com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfo)>($r12);

        $r14 = new com.sun.xml.bind.v2.runtime.property.TagAndType;

        $r15 = r1.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r16 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

        $r17 = virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r16);

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.property.TagAndType: void <init>(com.sun.xml.bind.v2.runtime.Name,com.sun.xml.bind.v2.runtime.JaxBeanInfo)>($r17, $r13);

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, $r14);

        $r19 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map refs>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r13);

        $z3 = interfaceinvoke r9.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: boolean isNillable()>();

        if $z3 == 0 goto label3;

        if r22 != null goto label3;

        r22 = $r14.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

     label3:
        goto label1;

     label4:
        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.Name nillableTagName> = r22;

        return;
    }

    public void wrapUp()
    {
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.property.ArrayERProperty: void wrapUp()>();

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map refs> = null;

        r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop> = null;

        return;
    }

    protected void serializeListBody(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object) throws java.io.IOException, javax.xml.stream.XMLStreamException, org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.reflect.ListIterator $r4;
        java.util.Map $r8, $r12, $r22;
        boolean z0, $z1;
        java.util.Collection $r13;
        com.sun.xml.bind.v2.runtime.reflect.Lister $r3;
        javax.xml.bind.JAXBException $r26;
        com.sun.xml.bind.v2.runtime.Name $r6, $r7, $r10, $r17;
        java.lang.String $r19, $r27;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r18;
        java.util.Iterator $r14;
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        java.lang.Object r1, $r5, $r9, $r15, $r23, $r25, r28;
        java.lang.Class $r21, r29;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r11, $r20;
        com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFSIterator $r24;
        com.sun.xml.bind.v2.runtime.property.TagAndType $r16, r30;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        r28 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter2: java.lang.Object;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.reflect.Lister lister>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.Lister: com.sun.xml.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r2);

        z0 = $r4 instanceof com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFSIterator;

     label01:
        $z1 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

     label02:
        $r5 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.ListIterator: java.lang.Object next()>();

        if $r5 == null goto label08;

        r29 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        if z0 == 0 goto label03;

        $r24 = (com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFSIterator) $r4;

        $r25 = virtualinvoke $r24.<com.sun.xml.bind.v2.runtime.reflect.Lister$IDREFSIterator: java.lang.Object last()>();

        r29 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r29);

        r30 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r9;

     label04:
        if r30 != null goto label05;

        if r29 == null goto label05;

        $r21 = virtualinvoke r29.<java.lang.Class: java.lang.Class getSuperclass()>();

        r29 = $r21;

        $r22 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r30 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r23;

        goto label04;

     label05:
        if r30 != null goto label06;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        $r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r15;

        $r17 = $r16.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r17, null);

        $r19 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.lang.String fieldName>;

        $r18 = r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r20 = virtualinvoke $r18.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Class)>(class "Ljava/lang/Object;");

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void childAsXsiType(java.lang.Object,java.lang.String,com.sun.xml.bind.v2.runtime.JaxBeanInfo,boolean)>($r5, $r19, $r20, 0);

        goto label07;

     label06:
        $r10 = r30.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r10, null);

        $r11 = r30.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.JaxBeanInfo beanInfo>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: void serializeItem(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r11, $r5, r2);

     label07:
        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

        goto label09;

     label08:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.Name nillableTagName>;

        if $r6 == null goto label09;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.Name nillableTagName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r7, null);

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void writeXsiNilTrue()>();

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label09:
        goto label01;

     label10:
        $r26 := @caughtexception;

        $r27 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.lang.String fieldName>;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>($r27, $r26);

        goto label01;

     label11:
        return;

        catch javax.xml.bind.JAXBException from label02 to label09 with label10;
    }

    protected abstract void serializeItem(com.sun.xml.bind.v2.runtime.JaxBeanInfo, java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException;

    public void createBodyUnmarshaller(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.Name $r11;
        com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader $r15;
        com.sun.xml.bind.v2.runtime.NameBuilder $r9;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r12, r19;
        com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator $r16;
        com.sun.xml.bind.v2.util.QNameMap r14;
        int $i0;
        com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo $r3;
        com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl $r1;
        java.lang.String $r17, $r20;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r2;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r8, $r18;
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r7;
        java.util.Iterator $r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Array $r13;
        java.util.List $r4;
        java.lang.Object $r6;
        javax.xml.namespace.QName $r10;

        r2 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r14 := @parameter1: com.sun.xml.bind.v2.util.QNameMap;

        $i0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: int allocateOffset()>();

        $r1 = new com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl;

        specialinvoke $r1.<com.sun.xml.bind.v2.runtime.property.ArrayERProperty$ReceiverImpl: void <init>(com.sun.xml.bind.v2.runtime.property.ArrayERProperty,int)>(r2, $i0);

        $r3 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo prop>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo: java.util.List getTypes()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef) $r6;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r9 = $r8.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameBuilder nameBuilder>;

        $r10 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: javax.xml.namespace.QName getTagName()>();

        $r11 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)>($r10);

        $r12 = specialinvoke r2.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.unmarshaller.Loader createItemUnmarshaller(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain,com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef)>(r0, r7);

        r19 = $r12;

        $z1 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: boolean isNillable()>();

        if $z1 != 0 goto label2;

        $r18 = r0.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $z2 = $r18.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean allNillable>;

        if $z2 == 0 goto label3;

     label2:
        $r13 = new com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Array;

        specialinvoke $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.XsiNilLoader$Array: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader)>($r12);

        r19 = $r13;

     label3:
        $r20 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: java.lang.String getDefaultValue()>();

        if $r20 == null goto label4;

        $r16 = new com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator;

        $r17 = interfaceinvoke r7.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: java.lang.String getDefaultValue()>();

        specialinvoke $r16.<com.sun.xml.bind.v2.runtime.unmarshaller.DefaultValueLoaderDecorator: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,java.lang.String)>(r19, $r17);

        r19 = $r16;

     label4:
        $r15 = new com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader;

        specialinvoke $r15.<com.sun.xml.bind.v2.runtime.unmarshaller.ChildLoader: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.Loader,com.sun.xml.bind.v2.runtime.unmarshaller.Receiver)>(r19, $r1);

        virtualinvoke r14.<com.sun.xml.bind.v2.util.QNameMap: void put(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>($r11, $r15);

        goto label1;

     label5:
        return;
    }

    public final com.sun.xml.bind.v2.model.core.PropertyKind getKind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind ELEMENT>;

        return $r0;
    }

    private com.sun.xml.bind.v2.runtime.unmarshaller.Loader createItemUnmarshaller(com.sun.xml.bind.v2.runtime.property.UnmarshallerChain, com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef r0;
        com.sun.xml.bind.v2.runtime.property.UnmarshallerChain r5;
        com.sun.xml.bind.v2.runtime.unmarshaller.Loader $r8;
        com.sun.xml.bind.v2.runtime.unmarshaller.TextLoader $r10;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo $r1;
        java.util.Map $r3;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.runtime.Transducer $r9;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r7;
        boolean $z0;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r2;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r6;

        r2 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        r5 := @parameter0: com.sun.xml.bind.v2.runtime.property.UnmarshallerChain;

        r0 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo getSource()>();

        $z0 = staticinvoke <com.sun.xml.bind.v2.runtime.property.PropertyFactory: boolean isLeaf(com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>($r1);

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeTypeRef: com.sun.xml.bind.v2.runtime.Transducer getTransducer()>();

        $r10 = new com.sun.xml.bind.v2.runtime.unmarshaller.TextLoader;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.TextLoader: void <init>(com.sun.xml.bind.v2.runtime.Transducer)>($r9);

        return $r10;

     label1:
        $r3 = r2.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map refs>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r7 = (com.sun.xml.bind.v2.runtime.JaxBeanInfo) $r4;

        $r6 = r5.<com.sun.xml.bind.v2.runtime.property.UnmarshallerChain: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.unmarshaller.Loader getLoader(com.sun.xml.bind.v2.runtime.JAXBContextImpl,boolean)>($r6, 1);

        return $r8;
    }

    public com.sun.xml.bind.v2.runtime.reflect.Accessor getElementPropertyAccessor(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.Name $r1, $r9, $r13;
        java.util.Map $r2;
        java.lang.String r7, r8;
        com.sun.xml.bind.v2.runtime.reflect.NullSafeAccessor $r10;
        com.sun.xml.bind.v2.runtime.property.ArrayElementProperty r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        com.sun.xml.bind.v2.runtime.reflect.Lister $r11;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r12, $r14;
        java.lang.Object $r5;
        com.sun.xml.bind.v2.runtime.property.TagAndType r6;

        r0 := @this: com.sun.xml.bind.v2.runtime.property.ArrayElementProperty;

        r7 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.Name wrapperTagName>;

        if $r1 == null goto label1;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.Name wrapperTagName>;

        $z2 = virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>(r7, r8);

        if $z2 == 0 goto label4;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        return $r14;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: java.util.Map typeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.sun.xml.bind.v2.runtime.property.TagAndType) $r5;

        $r9 = r6.<com.sun.xml.bind.v2.runtime.property.TagAndType: com.sun.xml.bind.v2.runtime.Name tagName>;

        $z1 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.Name: boolean equals(java.lang.String,java.lang.String)>(r7, r8);

        if $z1 == 0 goto label3;

        $r10 = new com.sun.xml.bind.v2.runtime.reflect.NullSafeAccessor;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.reflect.Accessor acc>;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.property.ArrayElementProperty: com.sun.xml.bind.v2.runtime.reflect.Lister lister>;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.reflect.NullSafeAccessor: void <init>(com.sun.xml.bind.v2.runtime.reflect.Accessor,com.sun.xml.bind.v2.runtime.reflect.Lister)>($r12, $r11);

        return $r10;

     label3:
        goto label2;

     label4:
        return null;
    }
}
