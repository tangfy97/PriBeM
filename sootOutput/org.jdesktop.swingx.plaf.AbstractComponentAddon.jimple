public abstract class org.jdesktop.swingx.plaf.AbstractComponentAddon extends java.lang.Object implements org.jdesktop.swingx.plaf.ComponentAddon
{
    private java.lang.String name;

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: java.lang.String name> = r1;

        return;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        $r1 = r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: java.lang.String name>;

        return $r1;
    }

    public void initialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        java.lang.Object[] $r2;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $r2 = specialinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: java.lang.Object[] getDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r0);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.LookAndFeelAddons: void loadDefaults(java.lang.Object[])>($r2);

        return;
    }

    public void uninitialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        return;
    }

    protected void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        return;
    }

    protected void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    protected void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    protected void addMotifDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    protected void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    protected void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    protected void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r0;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        return;
    }

    private java.lang.Object[] getDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r2;
        java.lang.Object[] $r3;
        org.jdesktop.swingx.plaf.DefaultsList $r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r2 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $r0 = new org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.DefaultsList: void <init>()>();

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isWindows(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label1:
        $z1 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isMetal(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z1 == 0 goto label2;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label2:
        $z2 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isMac(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z2 == 0 goto label3;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label3:
        $z3 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isMotif(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z3 == 0 goto label4;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addMotifDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label4:
        $z4 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isLinux(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z4 == 0 goto label5;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label5:
        $z5 = virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: boolean isNimbus(org.jdesktop.swingx.plaf.LookAndFeelAddons)>(r2);

        if $z5 == 0 goto label6;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

        goto label7;

     label6:
        virtualinvoke r1.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r2, $r0);

     label7:
        $r3 = virtualinvoke $r0.<org.jdesktop.swingx.plaf.DefaultsList: java.lang.Object[] toArray()>();

        return $r3;
    }

    protected boolean isWindows(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons;

        return $z0;
    }

    protected boolean isMetal(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons;

        return $z0;
    }

    protected boolean isMac(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.macosx.MacOSXLookAndFeelAddons;

        return $z0;
    }

    protected boolean isMotif(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.motif.MotifLookAndFeelAddons;

        return $z0;
    }

    protected boolean isLinux(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.linux.LinuxLookAndFeelAddons;

        return $z0;
    }

    protected boolean isNimbus(org.jdesktop.swingx.plaf.LookAndFeelAddons)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r0;
        org.jdesktop.swingx.plaf.AbstractComponentAddon r1;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        r0 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        $z0 = r0 instanceof org.jdesktop.swingx.plaf.nimbus.NimbusLookAndFeelAddons;

        return $z0;
    }

    protected boolean isPlastic()
    {
        org.jdesktop.swingx.plaf.AbstractComponentAddon r3;
        javax.swing.LookAndFeel $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Plastic");

        return $z0;
    }

    protected boolean isSynth()
    {
        org.jdesktop.swingx.plaf.AbstractComponentAddon r3;
        javax.swing.LookAndFeel $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.plaf.AbstractComponentAddon;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("ynth");

        return $z0;
    }
}
