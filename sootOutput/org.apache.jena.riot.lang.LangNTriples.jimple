public final class org.apache.jena.riot.lang.LangNTriples extends org.apache.jena.riot.lang.LangNTuple
{
    private static org.slf4j.Logger messageLog;

    public void <init>(org.apache.jena.riot.tokens.Tokenizer, org.apache.jena.riot.system.ParserProfile, org.apache.jena.riot.system.StreamRDF)
    {
        org.apache.jena.riot.tokens.Tokenizer r1;
        org.apache.jena.riot.system.ParserProfile r2;
        org.apache.jena.riot.lang.LangNTriples r0;
        org.apache.jena.riot.system.StreamRDF r3;

        r0 := @this: org.apache.jena.riot.lang.LangNTriples;

        r1 := @parameter0: org.apache.jena.riot.tokens.Tokenizer;

        r2 := @parameter1: org.apache.jena.riot.system.ParserProfile;

        r3 := @parameter2: org.apache.jena.riot.system.StreamRDF;

        specialinvoke r0.<org.apache.jena.riot.lang.LangNTuple: void <init>(org.apache.jena.riot.tokens.Tokenizer,org.apache.jena.riot.system.ParserProfile,org.apache.jena.riot.system.StreamRDF)>(r1, r2, r3);

        return;
    }

    public org.apache.jena.riot.Lang getLang()
    {
        org.apache.jena.riot.Lang $r0;
        org.apache.jena.riot.lang.LangNTriples r1;

        r1 := @this: org.apache.jena.riot.lang.LangNTriples;

        $r0 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang NTRIPLES>;

        return $r0;
    }

    protected final void runParser()
    {
        org.apache.jena.riot.lang.LangNTriples r0;
        org.apache.jena.riot.system.StreamRDF $r2;
        boolean $z0;
        com.hp.hpl.jena.graph.Triple $r1;

        r0 := @this: org.apache.jena.riot.lang.LangNTriples;

     label1:
        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: com.hp.hpl.jena.graph.Triple parseOne()>();

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.system.StreamRDF dest>;

        interfaceinvoke $r2.<org.apache.jena.riot.system.StreamRDF: void triple(com.hp.hpl.jena.graph.Triple)>($r1);

     label2:
        goto label1;

     label3:
        return;
    }

    protected final com.hp.hpl.jena.graph.Triple parseOne()
    {
        java.lang.Object[] $r12, $r13, $r14, $r15;
        long $l0, $l1;
        com.hp.hpl.jena.graph.Node $r7, $r8, $r9;
        org.apache.jena.riot.tokens.Token $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.jena.riot.system.ParserProfile $r10;
        com.hp.hpl.jena.graph.Triple $r11;
        org.apache.jena.riot.tokens.TokenType $r5, $r6;
        org.apache.jena.riot.lang.LangNTriples r0;

        r0 := @this: org.apache.jena.riot.lang.LangNTriples;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.tokens.Token nextToken()>();

        $z0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: boolean isEOF()>();

        if $z0 == 0 goto label1;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = $r1;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r1, "Premature end of file: %s", $r15);

     label1:
        $r2 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.tokens.Token nextToken()>();

        $z1 = virtualinvoke $r2.<org.apache.jena.riot.tokens.Token: boolean isEOF()>();

        if $z1 == 0 goto label2;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = $r2;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r2, "Premature end of file: %s", $r14);

     label2:
        $r3 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.tokens.Token nextToken()>();

        $z2 = virtualinvoke $r3.<org.apache.jena.riot.tokens.Token: boolean isEOF()>();

        if $z2 == 0 goto label3;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r3;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r3, "Premature end of file: %s", $r13);

     label3:
        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void checkIRIOrBNode(org.apache.jena.riot.tokens.Token)>($r1);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void checkIRI(org.apache.jena.riot.tokens.Token)>($r2);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void checkRDFTerm(org.apache.jena.riot.tokens.Token)>($r3);

        $r4 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.tokens.Token nextToken()>();

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r6 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        if $r5 == $r6 goto label4;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r4;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r4, "Triple not terminated by DOT: %s", $r12);

     label4:
        $r7 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r1);

        $r8 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r2);

        $r9 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)>($r3);

        $r10 = r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.system.ParserProfile profile>;

        $l0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l1 = virtualinvoke $r1.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $r11 = interfaceinvoke $r10.<org.apache.jena.riot.system.ParserProfile: com.hp.hpl.jena.graph.Triple createTriple(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,long,long)>($r7, $r8, $r9, $l0, $l1);

        return $r11;
    }

    protected final com.hp.hpl.jena.graph.Node tokenAsNode(org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.system.ParserProfile $r2;
        org.apache.jena.riot.lang.LangNTriples r0;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.riot.tokens.Token r1;

        r0 := @this: org.apache.jena.riot.lang.LangNTriples;

        r1 := @parameter0: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.lang.LangNTriples: org.apache.jena.riot.system.ParserProfile profile>;

        $r3 = interfaceinvoke $r2.<org.apache.jena.riot.system.ParserProfile: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node,org.apache.jena.riot.tokens.Token)>(null, r1);

        return $r3;
    }

    protected volatile java.lang.Object parseOne()
    {
        org.apache.jena.riot.lang.LangNTriples r0;
        com.hp.hpl.jena.graph.Triple $r1;

        r0 := @this: org.apache.jena.riot.lang.LangNTriples;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.lang.LangNTriples: com.hp.hpl.jena.graph.Triple parseOne()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("N-Triples");

        <org.apache.jena.riot.lang.LangNTriples: org.slf4j.Logger messageLog> = $r0;

        return;
    }
}
