public class org.apache.http.impl.cookie.IgnoreSpec extends org.apache.http.impl.cookie.CookieSpecBase
{

    public void <init>()
    {
        org.apache.http.impl.cookie.IgnoreSpec r0;

        r0 := @this: org.apache.http.impl.cookie.IgnoreSpec;

        specialinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: void <init>()>();

        return;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.IgnoreSpec r0;

        r0 := @this: org.apache.http.impl.cookie.IgnoreSpec;

        return 0;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        java.util.List $r0;
        org.apache.http.cookie.CookieOrigin r3;
        org.apache.http.Header r2;
        org.apache.http.impl.cookie.IgnoreSpec r1;

        r1 := @this: org.apache.http.impl.cookie.IgnoreSpec;

        r2 := @parameter0: org.apache.http.Header;

        r3 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public java.util.List formatCookies(java.util.List)
    {
        java.util.List $r0, r2;
        org.apache.http.impl.cookie.IgnoreSpec r1;

        r1 := @this: org.apache.http.impl.cookie.IgnoreSpec;

        r2 := @parameter0: java.util.List;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.impl.cookie.IgnoreSpec r0;

        r0 := @this: org.apache.http.impl.cookie.IgnoreSpec;

        return null;
    }
}
