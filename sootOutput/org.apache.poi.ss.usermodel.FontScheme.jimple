public final enum class org.apache.poi.ss.usermodel.FontScheme extends java.lang.Enum
{
    public static final enum org.apache.poi.ss.usermodel.FontScheme NONE;
    public static final enum org.apache.poi.ss.usermodel.FontScheme MAJOR;
    public static final enum org.apache.poi.ss.usermodel.FontScheme MINOR;
    private int value;
    private static org.apache.poi.ss.usermodel.FontScheme[] _table;
    private static final org.apache.poi.ss.usermodel.FontScheme[] $VALUES;

    public static org.apache.poi.ss.usermodel.FontScheme[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.ss.usermodel.FontScheme[] $r0, $r2;

        $r0 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.ss.usermodel.FontScheme[]) $r1;

        return $r2;
    }

    public static org.apache.poi.ss.usermodel.FontScheme valueOf(java.lang.String)
    {
        org.apache.poi.ss.usermodel.FontScheme $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/ss/usermodel/FontScheme;", r0);

        $r2 = (org.apache.poi.ss.usermodel.FontScheme) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.apache.poi.ss.usermodel.FontScheme r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.poi.ss.usermodel.FontScheme;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.ss.usermodel.FontScheme: int value> = i1;

        return;
    }

    public int getValue()
    {
        org.apache.poi.ss.usermodel.FontScheme r0;
        int $i0;

        r0 := @this: org.apache.poi.ss.usermodel.FontScheme;

        $i0 = r0.<org.apache.poi.ss.usermodel.FontScheme: int value>;

        return $i0;
    }

    public static org.apache.poi.ss.usermodel.FontScheme valueOf(int)
    {
        int i0;
        org.apache.poi.ss.usermodel.FontScheme $r1;
        org.apache.poi.ss.usermodel.FontScheme[] $r0;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] _table>;

        $r1 = $r0[i0];

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.usermodel.FontScheme[] $r3, $r7, $r8, $r10;
        org.apache.poi.ss.usermodel.FontScheme $r0, $r1, $r2, $r4, $r5, $r6, r9;
        int i0, $i1, i2;

        $r0 = new org.apache.poi.ss.usermodel.FontScheme;

        specialinvoke $r0.<org.apache.poi.ss.usermodel.FontScheme: void <init>(java.lang.String,int,int)>("NONE", 0, 1);

        <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme NONE> = $r0;

        $r1 = new org.apache.poi.ss.usermodel.FontScheme;

        specialinvoke $r1.<org.apache.poi.ss.usermodel.FontScheme: void <init>(java.lang.String,int,int)>("MAJOR", 1, 2);

        <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme MAJOR> = $r1;

        $r2 = new org.apache.poi.ss.usermodel.FontScheme;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.FontScheme: void <init>(java.lang.String,int,int)>("MINOR", 2, 3);

        <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme MINOR> = $r2;

        $r3 = newarray (org.apache.poi.ss.usermodel.FontScheme)[3];

        $r4 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme NONE>;

        $r3[0] = $r4;

        $r5 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme MAJOR>;

        $r3[1] = $r5;

        $r6 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme MINOR>;

        $r3[2] = $r6;

        <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] $VALUES> = $r3;

        $r7 = newarray (org.apache.poi.ss.usermodel.FontScheme)[4];

        <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] _table> = $r7;

        $r8 = staticinvoke <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] values()>();

        i0 = lengthof $r8;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r9 = $r8[i2];

        $r10 = <org.apache.poi.ss.usermodel.FontScheme: org.apache.poi.ss.usermodel.FontScheme[] _table>;

        $i1 = virtualinvoke r9.<org.apache.poi.ss.usermodel.FontScheme: int getValue()>();

        $r10[$i1] = r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
