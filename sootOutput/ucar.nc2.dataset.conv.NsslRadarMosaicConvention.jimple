public class ucar.nc2.dataset.conv.NsslRadarMosaicConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    static final boolean $assertionsDisabled;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r3, $r4, $r5, $r6, $r7;
        ucar.nc2.Dimension $r8, $r9;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r1 == null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "DataType", null);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LatLonGrid");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LatLonHeightGrid");

        if $z1 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("Latitude");

        if null == $r3 goto label4;

        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("Longitude");

        if null == $r4 goto label4;

        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("LatGridSpacing");

        if null == $r5 goto label4;

        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("LonGridSpacing");

        if null == $r6 goto label4;

        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("Time");

        if null != $r7 goto label5;

     label4:
        return 0;

     label5:
        $r8 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("Lat");

        if null == $r8 goto label6;

        $r9 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("Lon");

        if null != $r9 goto label7;

     label6:
        return 0;

     label7:
        return 1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: java.lang.String conventionName> = "NSSL National Reflectivity Mosaic";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.Variable $r1;
        java.lang.String $r2;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r3 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Lat");

        if null == $r1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "DataType", null);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LatLonGrid");

        if $z0 == 0 goto label2;

        specialinvoke r3.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void augment2D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask)>(r0, r4);

        goto label3;

     label2:
        specialinvoke r3.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void augment3D(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask)>(r0, r4);

     label3:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private void augment3D(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Float $r12;
        java.lang.AssertionError $r13;
        short $s1;
        ucar.nc2.util.CancelTask r14;
        int[] $r17;
        ucar.nc2.constants.AxisType $r3;
        java.lang.Short $r9;
        int $i0;
        ucar.nc2.Variable $r4;
        java.lang.Number $r7, $r10;
        boolean $z0, $z1;
        ucar.ma2.DataType $r15;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r2;
        ucar.ma2.Array $r19;
        ucar.nc2.Attribute $r1, $r5, $r6, $r8, $r11, $r20, $r21;
        float $f0, $f1, $f2, f3, f4;
        java.lang.Class $r16;
        short[] $r18;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r14 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = new ucar.nc2.Attribute;

        specialinvoke $r1.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "NSSL National Reflectivity Mosaic");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r1);

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "mrefl_mosaic", "3-D reflectivity mosaic grid");

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addCoordinateAxisType(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.constants.AxisType)>(r0, "Height", $r3);

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addCoordSystem(ucar.nc2.dataset.NetcdfDataset)>(r0);

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("mrefl_mosaic");

        $z0 = <ucar.nc2.dataset.conv.NsslRadarMosaicConvention: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r4 != null goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        f3 = #NaNF;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("Scale");

        if $r5 == null goto label2;

        $r10 = virtualinvoke $r5.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f1 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        f3 = $f1;

        $r11 = new ucar.nc2.Attribute;

        $f2 = 1.0F / $f1;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_factor", $r12);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

     label2:
        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("MissingData");

        if null == $r6 goto label4;

        $r7 = virtualinvoke $r6.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f0 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        f4 = $f0;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f3);

        if $z1 != 0 goto label3;

        f4 = $f0 * f3;

     label3:
        $r8 = new ucar.nc2.Attribute;

        $i0 = (int) f4;

        $s1 = (short) $i0;

        $r9 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r9);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

     label4:
        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        $r16 = virtualinvoke $r15.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r17 = newarray (int)[1];

        $r17[0] = 2;

        $r18 = newarray (short)[2];

        $r18[0] = -990;

        $r18[1] = -9990;

        $r19 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r16, $r17, $r18);

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>("missing_value", $r19);

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "Height Lat Lon");

        virtualinvoke $r4.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        return;
    }

    private void augment2D(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Float $r14;
        short $s1;
        ucar.nc2.util.CancelTask r15;
        java.lang.Short $r11;
        int $i0;
        ucar.nc2.Variable r6;
        java.lang.Number $r9, $r12;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r2;
        java.util.List $r3;
        ucar.nc2.Attribute $r1, $r7, $r8, $r10, $r13;
        float $f0, $f1, $f2, f3, f4;
        java.lang.Object $r5;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r15 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = new ucar.nc2.Attribute;

        specialinvoke $r1.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "NSSL National Reflectivity Mosaic");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r1);

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "cref", "composite reflectivity");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "hgt_cref", "height associated with the composite reflectivity");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "etp18", "scho top");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "shi", "csevere hail index");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "posh", "probability of severe hail");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "mehs", "maximum estimated hail size");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "hsr", "hybrid scan reflectivity");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "hsrh", "height associated with the hybrid scan reflectivity");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "vil", "vertically integrated liquid");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "vilD", "vertically integrated liquid density");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "pcp_flag", "Radar precipitation flag");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addLongName(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r0, "pcp_type", "Surface precipitation type");

        specialinvoke r2.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: void addCoordSystem(ucar.nc2.dataset.NetcdfDataset)>(r0);

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.Variable) $r5;

        f3 = #NaNF;

        $r7 = virtualinvoke r6.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("Scale");

        if $r7 == null goto label2;

        $r12 = virtualinvoke $r7.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f1 = virtualinvoke $r12.<java.lang.Number: float floatValue()>();

        f3 = $f1;

        $r13 = new ucar.nc2.Attribute;

        $f2 = 1.0F / $f1;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_factor", $r14);

        virtualinvoke r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

     label2:
        $r8 = virtualinvoke r6.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("MissingData");

        if null == $r8 goto label4;

        $r9 = virtualinvoke $r8.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $f0 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        f4 = $f0;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f3);

        if $z1 != 0 goto label3;

        f4 = $f0 * f3;

     label3:
        $r10 = new ucar.nc2.Attribute;

        $i0 = (int) f4;

        $s1 = (short) $i0;

        $r11 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r11);

        virtualinvoke r6.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

     label4:
        goto label1;

     label5:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private void addLongName(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String)
    {
        ucar.nc2.Attribute $r3;
        ucar.nc2.Variable $r2;
        java.lang.String r1, r4;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r5;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r4);

        virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

     label1:
        return;
    }

    private void addCoordinateAxisType(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.constants.AxisType)
    {
        ucar.nc2.Attribute $r3;
        ucar.nc2.constants.AxisType r4;
        ucar.nc2.Variable $r2;
        java.lang.String r1, $r5;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r6 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: ucar.nc2.constants.AxisType;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = new ucar.nc2.Attribute;

        $r5 = virtualinvoke r4.<ucar.nc2.constants.AxisType: java.lang.String name()>();

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r5);

        virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r3);

     label1:
        return;
    }

    private void addCoordSystem(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis1D $r14, $r19, $r25;
        ucar.nc2.constants.AxisType $r17, $r22, $r28;
        boolean $z0;
        ucar.ma2.DataType $r15, $r20, $r26;
        ucar.nc2.Attribute $r1, $r3, $r5, $r7, $r9, $r16, $r21, $r27;
        java.lang.StringBuilder $r30, $r33, $r34, $r35, $r36, $r37;
        int $i0, $i1, $i2;
        java.lang.String $r18, $r23, $r29, $r32, $r38;
        java.lang.Number $r2, $r4, $r6, $r8, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.io.PrintStream $r31;
        ucar.nc2.dataset.conv.NsslRadarMosaicConvention r11;
        ucar.nc2.Dimension $r12, $r13, $r24;
        ucar.nc2.dataset.NetcdfDataset r0;

        r11 := @this: ucar.nc2.dataset.conv.NsslRadarMosaicConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("Latitude");

        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("Longitude");

        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("LatGridSpacing");

        $r6 = virtualinvoke $r5.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d2 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("LonGridSpacing");

        $r8 = virtualinvoke $r7.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d3 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("Time");

        $r10 = virtualinvoke $r9.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r10.<java.lang.Number: int intValue()>();

        $z0 = r11.<ucar.nc2.dataset.conv.NsslRadarMosaicConvention: boolean debug>;

        if $z0 == 0 goto label1;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Lat/Lon=");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label1:
        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("Lat");

        $i1 = virtualinvoke $r12.<ucar.nc2.Dimension: int getLength()>();

        $r13 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("Lon");

        $i2 = virtualinvoke $r13.<ucar.nc2.Dimension: int getLength()>();

        $r14 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        specialinvoke $r14.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "Lat", $r15, "Lat", "degrees_north", "latitude coordinate");

        $d4 = neg $d2;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r14, $i1, $d0, $d4);

        $r16 = new ucar.nc2.Attribute;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r18 = virtualinvoke $r17.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r18);

        virtualinvoke $r14.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r14);

        $r19 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        specialinvoke $r19.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "Lon", $r20, "Lon", "degrees_east", "longitude coordinate");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r19, $i2, $d1, $d3);

        $r21 = new ucar.nc2.Attribute;

        $r22 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r23 = virtualinvoke $r22.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r23);

        virtualinvoke $r19.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r19);

        $r24 = new ucar.nc2.Dimension;

        specialinvoke $r24.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("Time", 1);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r24);

        $r25 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r25.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "Time", $r26, "Time", "seconds since 1970-1-1 00:00:00", "time coordinate");

        $d5 = (double) $i0;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r25, 1, $d5, 1.0);

        $r27 = new ucar.nc2.Attribute;

        $r28 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r29 = virtualinvoke $r28.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r29);

        virtualinvoke $r25.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r25);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/dataset/conv/NsslRadarMosaicConvention;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.dataset.conv.NsslRadarMosaicConvention: boolean $assertionsDisabled> = $z1;

        return;
    }
}
