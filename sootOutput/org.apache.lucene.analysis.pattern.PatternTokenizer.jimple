public final class org.apache.lucene.analysis.pattern.PatternTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final java.lang.StringBuilder str;
    private int index;
    private final java.util.regex.Pattern pattern;
    private final int group;
    private final java.util.regex.Matcher matcher;
    final char[] buffer;

    public void <init>(java.io.Reader, java.util.regex.Pattern, int)
    {
        org.apache.lucene.analysis.pattern.PatternTokenizer r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r3;
        int i0;
        java.io.Reader r1;
        java.util.regex.Pattern r2;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.util.regex.Pattern;

        i0 := @parameter2: int;

        $r3 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader,java.util.regex.Pattern,int)>($r3, r1, r2, i0);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, java.util.regex.Pattern, int)
    {
        org.apache.lucene.analysis.pattern.PatternTokenizer r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        java.util.regex.Matcher $r10, $r11, $r15;
        int i0, $i1, $i2;
        java.lang.String $r18;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        java.lang.IllegalArgumentException $r12;
        char[] $r8;
        java.lang.StringBuilder $r7, $r13, $r14, $r16, $r17;
        org.apache.lucene.util.Attribute $r3, $r5;
        java.util.regex.Pattern r9;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        r9 := @parameter2: java.util.regex.Pattern;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str> = $r7;

        $r8 = newarray (char)[8192];

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: char[] buffer> = $r8;

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Pattern pattern> = r9;

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int group> = i0;

        $r10 = virtualinvoke r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher> = $r10;

        if i0 < 0 goto label1;

        $r11 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i1 = virtualinvoke $r11.<java.util.regex.Matcher: int groupCount()>();

        if i0 <= $i1 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid group specified: pattern only has: ");

        $r15 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i2 = virtualinvoke $r15.<java.util.regex.Matcher: int groupCount()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" capturing groups");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label1:
        return;
    }

    public boolean incrementToken()
    {
        java.util.regex.Matcher $r2, $r10, $r11, $r14, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r8, $r16, $r25;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r9, $r15, $r24;
        org.apache.lucene.analysis.pattern.PatternTokenizer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4, $r5, $r12, $r13, $r22, $r23;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        $i0 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $r1 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: void clearAttributes()>();

        $i2 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int group>;

        if $i2 < 0 goto label5;

     label2:
        $r19 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $z1 = virtualinvoke $r19.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label4;

        $r20 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i23 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int group>;

        $i24 = virtualinvoke $r20.<java.util.regex.Matcher: int start(int)>($i23);

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = $i24;

        $r21 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i25 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int group>;

        $i26 = virtualinvoke $r21.<java.util.regex.Matcher: int end(int)>($i25);

        $i27 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        if $i27 != $i26 goto label3;

        goto label2;

     label3:
        $r22 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r23 = interfaceinvoke $r22.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setEmpty()>();

        $r24 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i28 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        interfaceinvoke $r23.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(java.lang.CharSequence,int,int)>($r24, $i28, $i26);

        $r25 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i29 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $i30 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i29);

        $i31 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i26);

        interfaceinvoke $r25.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i30, $i31);

        return 1;

     label4:
        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = 2147483647;

        return 0;

     label5:
        $r2 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label7;

        $r10 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i12 = virtualinvoke $r10.<java.util.regex.Matcher: int start()>();

        $i13 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $i14 = $i12 - $i13;

        if $i14 <= 0 goto label6;

        $r12 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r13 = interfaceinvoke $r12.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setEmpty()>();

        $r15 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i16 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $r14 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i17 = virtualinvoke $r14.<java.util.regex.Matcher: int start()>();

        interfaceinvoke $r13.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(java.lang.CharSequence,int,int)>($r15, $i16, $i17);

        $r16 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i18 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $i19 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i18);

        $r17 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i20 = virtualinvoke $r17.<java.util.regex.Matcher: int start()>();

        $i21 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i20);

        interfaceinvoke $r16.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i19, $i21);

        $r18 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i22 = virtualinvoke $r18.<java.util.regex.Matcher: int end()>();

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = $i22;

        return 1;

     label6:
        $r11 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $i15 = virtualinvoke $r11.<java.util.regex.Matcher: int end()>();

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = $i15;

        goto label5;

     label7:
        $r3 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i3 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i4 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $i5 = $i3 - $i4;

        if $i5 != 0 goto label8;

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = 2147483647;

        return 0;

     label8:
        $r4 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r5 = interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setEmpty()>();

        $r7 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i6 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $r6 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i7 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(java.lang.CharSequence,int,int)>($r7, $i6, $i7);

        $r8 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i8 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index>;

        $i9 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i8);

        $r9 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i10 = virtualinvoke $r9.<java.lang.StringBuilder: int length()>();

        $i11 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i10);

        interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i9, $i11);

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = 2147483647;

        return 1;
    }

    public void end()
    {
        org.apache.lucene.analysis.pattern.PatternTokenizer r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r2;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        $r1 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int correctOffset(int)>($i0);

        $r2 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i1);

        return;
    }

    public void reset() throws java.io.IOException
    {
        java.util.regex.Matcher $r4;
        org.apache.lucene.analysis.pattern.PatternTokenizer r0;
        java.lang.StringBuilder $r2, $r3;
        java.io.Reader $r1;

        r0 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        $r2 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        $r1 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.io.Reader input>;

        specialinvoke r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: void fillBuffer(java.lang.StringBuilder,java.io.Reader)>($r2, $r1);

        $r4 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.util.regex.Matcher matcher>;

        $r3 = r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: java.lang.StringBuilder str>;

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>($r3);

        r0.<org.apache.lucene.analysis.pattern.PatternTokenizer: int index> = 0;

        return;
    }

    private void fillBuffer(java.lang.StringBuilder, java.io.Reader) throws java.io.IOException
    {
        org.apache.lucene.analysis.pattern.PatternTokenizer r2;
        int $i0;
        char[] $r3, $r4;
        java.lang.StringBuilder r0;
        java.io.Reader r1;

        r2 := @this: org.apache.lucene.analysis.pattern.PatternTokenizer;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.io.Reader;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>(0);

     label1:
        $r3 = r2.<org.apache.lucene.analysis.pattern.PatternTokenizer: char[] buffer>;

        $i0 = virtualinvoke r1.<java.io.Reader: int read(char[])>($r3);

        if $i0 <= 0 goto label2;

        $r4 = r2.<org.apache.lucene.analysis.pattern.PatternTokenizer: char[] buffer>;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r4, 0, $i0);

        goto label1;

     label2:
        return;
    }
}
