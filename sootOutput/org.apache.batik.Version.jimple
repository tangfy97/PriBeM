public final class org.apache.batik.Version extends java.lang.Object
{
    static java.lang.Class class$org$apache$batik$Version;

    public void <init>()
    {
        org.apache.batik.Version r0;

        r0 := @this: org.apache.batik.Version;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getVersion()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuffer $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r2, r3, $r4, $r5, $r6, r7, $r12, $r13, r15, r16, r17, r18, r19;
        java.lang.Package $r1;
        java.lang.Class $r0, $r14;

        $r0 = <org.apache.batik.Version: java.lang.Class class$org$apache$batik$Version>;

        if $r0 != null goto label1;

        $r14 = staticinvoke <org.apache.batik.Version: java.lang.Class class$(java.lang.String)>("org.apache.batik.Version");

        <org.apache.batik.Version: java.lang.Class class$org$apache$batik$Version> = $r14;

        goto label2;

     label1:
        $r14 = <org.apache.batik.Version: java.lang.Class class$org$apache$batik$Version>;

     label2:
        $r1 = virtualinvoke $r14.<java.lang.Class: java.lang.Package getPackage()>();

        r15 = null;

        if $r1 == null goto label3;

        r15 = virtualinvoke $r1.<java.lang.Package: java.lang.String getImplementationVersion()>();

     label3:
        r16 = "$HeadURL: https://svn.apache.org/repos/asf/xmlgraphics/batik/tags/batik-1_7/sources/org/apache/batik/Version.java $";

        r19 = "$HeadURL: https://svn.apache.org/repos/asf/xmlgraphics/batik/tags/batik-1_7/sources/org/apache/batik/Version.java $";

        r18 = "$HeadURL: https://svn.apache.org/repos/asf/xmlgraphics/batik/tags/batik-1_7/sources/org/apache/batik/Version.java $";

        r17 = "$HeadURL: https://svn.apache.org/repos/asf/xmlgraphics/batik/tags/batik-1_7/sources/org/apache/batik/Version.java $";

        r2 = "$HeadURL: ";

        r3 = "/sources/org/apache/batik/Version.java $";

        $r13 = "$HeadURL: https://svn.apache.org/repos/asf/xmlgraphics/batik/tags/batik-1_7/sources/org/apache/batik/Version.java $";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("$HeadURL: ");

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke r17.<java.lang.String: boolean endsWith(java.lang.String)>("/sources/org/apache/batik/Version.java $");

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke r19.<java.lang.String: int length()>();

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r4 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        $z2 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("/trunk");

        if $z2 != 0 goto label5;

        $i4 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int)>(47);

        $i5 = $i4 - 1;

        $i6 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int,int)>(47, $i5);

        $i7 = $i4 + 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i7);

        $i8 = $i6 + 1;

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i8, $i4);

        r7 = "batik-";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("tags");

        if $z3 == 0 goto label4;

        $z5 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("batik-");

        if $z5 == 0 goto label4;

        $i9 = virtualinvoke r7.<java.lang.String: int length()>();

        $r12 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i9);

        r15 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(char,char)>(95, 46);

        goto label5;

     label4:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("branches");

        if $z4 == 0 goto label5;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r15 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        if r15 != null goto label6;

        r15 = "development version";

     label6:
        return r15;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
