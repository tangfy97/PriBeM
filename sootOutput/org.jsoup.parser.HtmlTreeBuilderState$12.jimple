final enum class org.jsoup.parser.HtmlTreeBuilderState$12 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.HtmlTreeBuilderState$12 r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$StartTag $r12;
        int[] $r2;
        org.jsoup.nodes.Element $r4, $r9;
        int $i0, $i1;
        org.jsoup.parser.HtmlTreeBuilderState$12 r6;
        java.lang.String $r5, $r8, $r10, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Character $r16;
        org.jsoup.parser.Token$TokenType $r1;
        org.jsoup.parser.Token$EndTag $r7;
        org.jsoup.parser.HtmlTreeBuilderState $r11, $r14;
        org.jsoup.parser.Token$Comment $r15;
        org.jsoup.parser.HtmlTreeBuilder r3;

        r6 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;

        r0 := @parameter0: org.jsoup.parser.Token;

        r3 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r0);

        if $z0 == 0 goto label01;

        $r16 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r16);

        return 1;

     label01:
        $r2 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r1 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label07;
            case 5: goto label12;
            case 6: goto label10;
            default: goto label12;
        };

     label02:
        $r15 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r15);

        goto label13;

     label03:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        goto label13;

     label04:
        $r12 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r13 = virtualinvoke $r12.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z6 == 0 goto label05;

        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$12: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z9 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r0, $r14);

        return $z9;

     label05:
        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("col");

        if $z7 == 0 goto label06;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>($r12);

        goto label13;

     label06:
        $z8 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r0, r3);

        return $z8;

     label07:
        $r7 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r8 = virtualinvoke $r7.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("colgroup");

        if $z3 == 0 goto label09;

        $r9 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r10 = virtualinvoke $r9.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z5 == 0 goto label08;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r6);

        return 0;

     label08:
        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

        $r11 = <org.jsoup.parser.HtmlTreeBuilderState$12: org.jsoup.parser.HtmlTreeBuilderState InTable>;

        virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r11);

        goto label13;

     label09:
        $z4 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r0, r3);

        return $z4;

     label10:
        $r4 = virtualinvoke r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r5 = virtualinvoke $r4.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z1 == 0 goto label11;

        return 1;

     label11:
        $z2 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r0, r3);

        return $z2;

     label12:
        $z10 = specialinvoke r6.<org.jsoup.parser.HtmlTreeBuilderState$12: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder)>(r0, r3);

        return $z10;

     label13:
        return 1;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.Token$EndTag $r1;
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.parser.Token r2;
        org.jsoup.parser.HtmlTreeBuilderState$12 r3;
        boolean $z0, $z1;

        r3 := @this: org.jsoup.parser.HtmlTreeBuilderState$12;

        r2 := @parameter0: org.jsoup.parser.Token;

        r0 := @parameter1: org.jsoup.parser.TreeBuilder;

        $r1 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r1.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("colgroup");

        $z0 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>($r1);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.jsoup.parser.TreeBuilder: boolean process(org.jsoup.parser.Token)>(r2);

        return $z1;

     label1:
        return 1;
    }
}
