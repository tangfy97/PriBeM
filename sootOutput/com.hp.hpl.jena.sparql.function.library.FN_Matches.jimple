public class com.hp.hpl.jena.sparql.function.library.FN_Matches extends java.lang.Object implements com.hp.hpl.jena.sparql.function.Function
{
    com.hp.hpl.jena.sparql.expr.E_Regex regex;
    com.hp.hpl.jena.sparql.expr.ExprList myArgs;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.FN_Matches r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.FN_Matches;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.E_Regex regex> = null;

        r0.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.ExprList myArgs> = null;

        return;
    }

    public void build(java.lang.String, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.sparql.function.library.FN_Matches r1;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, r7;

        r1 := @this: com.hp.hpl.jena.sparql.function.library.FN_Matches;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 == 3 goto label1;

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i1 == 2 goto label1;

        $r2 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matches: Wrong number of arguments: Wanted 2 or 3, got ");

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r1.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.ExprList myArgs> = r0;

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.expr.ExprList, java.lang.String, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r7, $r9, $r16;
        com.hp.hpl.jena.sparql.function.library.FN_Matches r0;
        com.hp.hpl.jena.sparql.expr.Expr $r3, $r6, r14;
        com.hp.hpl.jena.sparql.expr.ExprList r1, $r2;
        int $i0;
        java.lang.String $r8, r12, $r15;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.engine.binding.Binding r4;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r11;
        com.hp.hpl.jena.sparql.expr.E_Regex $r10, r13;
        com.hp.hpl.jena.sparql.function.FunctionEnv r5;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.FN_Matches;

        r4 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        r12 := @parameter2: java.lang.String;

        r5 := @parameter3: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $r2 = r0.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.ExprList myArgs>;

        if $r2 == r1 goto label1;

        $r11 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("matches: Arguments have changed since checking");

        throw $r11;

     label1:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(0);

        r13 = r0.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.E_Regex regex>;

        if r13 != null goto label6;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(1);

        r14 = null;

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 != 3 goto label2;

        r14 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprList: com.hp.hpl.jena.sparql.expr.Expr get(int)>(2);

     label2:
        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.sparql.expr.Expr: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.function.FunctionEnv)>(r4, r5);

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.expr.NodeValue: java.lang.String getString()>();

        if r14 != null goto label3;

        $r15 = null;

        goto label4;

     label3:
        $r9 = interfaceinvoke r14.<com.hp.hpl.jena.sparql.expr.Expr: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.function.FunctionEnv)>(r4, r5);

        $r15 = virtualinvoke $r9.<com.hp.hpl.jena.sparql.expr.NodeValue: java.lang.String getString()>();

     label4:
        $r10 = new com.hp.hpl.jena.sparql.expr.E_Regex;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.expr.E_Regex: void <init>(com.hp.hpl.jena.sparql.expr.Expr,java.lang.String,java.lang.String)>($r3, $r8, $r15);

        r13 = $r10;

        $z0 = $r6 instanceof com.hp.hpl.jena.sparql.expr.NodeValue;

        if $z0 == 0 goto label6;

        if r14 == null goto label5;

        $z1 = r14 instanceof com.hp.hpl.jena.sparql.expr.NodeValue;

        if $z1 == 0 goto label6;

     label5:
        r0.<com.hp.hpl.jena.sparql.function.library.FN_Matches: com.hp.hpl.jena.sparql.expr.E_Regex regex> = $r10;

     label6:
        $r16 = virtualinvoke r13.<com.hp.hpl.jena.sparql.expr.E_Regex: com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.function.FunctionEnv)>(r4, r5);

        return $r16;
    }
}
