class org.apache.lucene.index.ParallelReader$ParallelTermPositions extends org.apache.lucene.index.ParallelReader$ParallelTermDocs implements org.apache.lucene.index.TermPositions
{
    final org.apache.lucene.index.ParallelReader this$0;

    public void <init>(org.apache.lucene.index.ParallelReader)
    {
        org.apache.lucene.index.ParallelReader r1;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        r1 := @parameter0: org.apache.lucene.index.ParallelReader;

        r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.ParallelReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: void <init>(org.apache.lucene.index.ParallelReader)>(r1);

        return;
    }

    public void <init>(org.apache.lucene.index.ParallelReader, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.ParallelReader r1;
        org.apache.lucene.index.Term r2;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        r1 := @parameter0: org.apache.lucene.index.ParallelReader;

        r2 := @parameter1: org.apache.lucene.index.Term;

        r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.ParallelReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.ParallelReader$ParallelTermDocs: void <init>(org.apache.lucene.index.ParallelReader)>(r1);

        virtualinvoke r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: void seek(org.apache.lucene.index.Term)>(r2);

        return;
    }

    public void seek(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.ParallelReader $r1;
        org.apache.lucene.index.TermPositions $r7;
        org.apache.lucene.index.Term r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;
        java.util.SortedMap $r2;
        org.apache.lucene.index.IndexReader r6;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        r3 := @parameter0: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.ParallelReader this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.ParallelReader: java.util.SortedMap access$000(org.apache.lucene.index.ParallelReader)>($r1);

        $r4 = virtualinvoke r3.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r5 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.lucene.index.IndexReader) $r5;

        if r6 == null goto label1;

        $r7 = virtualinvoke r6.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermPositions termPositions(org.apache.lucene.index.Term)>(r3);

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.TermDocs termDocs> = $r7;

        return;
    }

    public int nextPosition() throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        int $i0;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.TermDocs termDocs>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $i0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: int nextPosition()>();

        return $i0;
    }

    public int getPayloadLength()
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        int $i0;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.TermDocs termDocs>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $i0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: int getPayloadLength()>();

        return $i0;
    }

    public byte[] getPayload(byte[], int) throws java.io.IOException
    {
        byte[] r2, $r4;
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r3;
        int i0;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.TermDocs termDocs>;

        $r3 = (org.apache.lucene.index.TermPositions) $r1;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.index.TermPositions: byte[] getPayload(byte[],int)>(r2, i0);

        return $r4;
    }

    public boolean isPayloadAvailable()
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        org.apache.lucene.index.ParallelReader$ParallelTermPositions r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ParallelReader$ParallelTermPositions;

        $r1 = r0.<org.apache.lucene.index.ParallelReader$ParallelTermPositions: org.apache.lucene.index.TermDocs termDocs>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: boolean isPayloadAvailable()>();

        return $z0;
    }
}
