public final class org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation extends org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
{
    private org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations;

    void <init>(org.eclipse.jdt.internal.compiler.classfmt.FieldInfo, org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[])
    {
        byte[] $r3;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] r10;
        long $l4;
        int[] $r2, $r5;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfo r1;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4;
        char[] $r6, $r7, $r8;
        java.lang.Object $r9;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo;

        r10 := @parameter1: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[];

        $r3 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: byte[] reference>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int structOffset>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void <init>(byte[],int[],int)>($r3, $r2, $i0);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int accessFlags>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: int accessFlags> = $i1;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int attributeBytes>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: int attributeBytes> = $i2;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r4;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int[] constantPoolOffsets>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: int[] constantPoolOffsets> = $r5;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] descriptor>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: char[] descriptor> = $r6;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] name>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: char[] name> = $r7;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: char[] signature>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: char[] signature> = $r8;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: int signatureUtf8Offset>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: int signatureUtf8Offset> = $i3;

        $l4 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: long tagBits>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: long tagBits> = $l4;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: java.lang.Object wrappedConstantValue>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: java.lang.Object wrappedConstantValue> = $r9;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations> = r10;

        return;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        return $r1;
    }

    protected void initialize()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1, $r2;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r3;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        i1 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        $r3 = $r2[i1];

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void initialize()>();

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void initialize()>();

        return;
    }

    protected void reset()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1, $r2, $r3;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r4;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        if $r1 == null goto label3;

        i1 = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        i0 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void reset()>();

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfo: void reset()>();

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r4, $r6, $r7;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r8;
        org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation;

        $r0 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        if $r4 == null goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i1 = 0;

        goto label2;

     label1:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        $r8 = $r7[i1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i1 = i1 + 1;

     label2:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] annotations>;

        $i0 = lengthof $r6;

        if i1 < $i0 goto label1;

     label3:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation: void toStringContent(java.lang.StringBuffer)>($r0);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
