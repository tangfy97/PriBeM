public class org.apache.commons.lang.BitField extends java.lang.Object
{
    private final int _mask;
    private final int _shift_count;

    public void <init>(int)
    {
        int i0, $i1, i2, i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.lang.BitField: int _mask> = i0;

        i2 = 0;

        i3 = i0;

        if i0 == 0 goto label2;

     label1:
        $i1 = i3 & 1;

        if $i1 != 0 goto label2;

        i2 = i2 + 1;

        i3 = i3 >> 1;

        goto label1;

     label2:
        r0.<org.apache.commons.lang.BitField: int _shift_count> = i2;

        return;
    }

    public int getValue(int)
    {
        int i0, $i1, $i2, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int getRawValue(int)>(i0);

        $i2 = r0.<org.apache.commons.lang.BitField: int _shift_count>;

        $i3 = $i1 >> $i2;

        return $i3;
    }

    public short getShortValue(short)
    {
        short s0, $s2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        $i3 = (int) s0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int getValue(int)>($i3);

        $s2 = (short) $i1;

        return $s2;
    }

    public int getRawValue(int)
    {
        int i0, $i1, $i2;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i2 = i0 & $i1;

        return $i2;
    }

    public short getShortRawValue(short)
    {
        short s0, $s2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        $i3 = (int) s0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int getRawValue(int)>($i3);

        $s2 = (short) $i1;

        return $s2;
    }

    public boolean isSet(int)
    {
        int i0, $i1, $i2;
        org.apache.commons.lang.BitField r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAllSet(int)
    {
        int i0, $i1, $i2, $i3;
        org.apache.commons.lang.BitField r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i3 = i0 & $i1;

        $i2 = r0.<org.apache.commons.lang.BitField: int _mask>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int setValue(int, int)
    {
        org.apache.commons.lang.BitField r0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i11 = (int) -1;

        $i2 = $i1 ^ $i11;

        $i8 = i0 & $i2;

        $i4 = r0.<org.apache.commons.lang.BitField: int _shift_count>;

        $i6 = i3 << $i4;

        $i5 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i7 = $i6 & $i5;

        $i9 = $i8 | $i7;

        return $i9;
    }

    public short setShortValue(short, short)
    {
        short s0, s1, $s3;
        int $i2, $i4, $i5;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i4 = (int) s0;

        $i5 = (int) s1;

        $i2 = virtualinvoke r0.<org.apache.commons.lang.BitField: int setValue(int,int)>($i4, $i5);

        $s3 = (short) $i2;

        return $s3;
    }

    public int clear(int)
    {
        int i0, $i1, $i2, $i3, $i5;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i5 = (int) -1;

        $i2 = $i1 ^ $i5;

        $i3 = i0 & $i2;

        return $i3;
    }

    public short clearShort(short)
    {
        short s0, $s2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        $i3 = (int) s0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int clear(int)>($i3);

        $s2 = (short) $i1;

        return $s2;
    }

    public byte clearByte(byte)
    {
        byte b0, $b2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        b0 := @parameter0: byte;

        $i3 = (int) b0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int clear(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public int set(int)
    {
        int i0, $i1, $i2;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.commons.lang.BitField: int _mask>;

        $i2 = i0 | $i1;

        return $i2;
    }

    public short setShort(short)
    {
        short s0, $s2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        $i3 = (int) s0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int set(int)>($i3);

        $s2 = (short) $i1;

        return $s2;
    }

    public byte setByte(byte)
    {
        byte b0, $b2;
        int $i1, $i3;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        b0 := @parameter0: byte;

        $i3 = (int) b0;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int set(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public int setBoolean(int, boolean)
    {
        int i0, $i1;
        boolean z0;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int set(int)>(i0);

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<org.apache.commons.lang.BitField: int clear(int)>(i0);

     label2:
        return $i1;
    }

    public short setShortBoolean(short, boolean)
    {
        short s0, $s1;
        boolean z0;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        s0 := @parameter0: short;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $s1 = virtualinvoke r0.<org.apache.commons.lang.BitField: short setShort(short)>(s0);

        goto label2;

     label1:
        $s1 = virtualinvoke r0.<org.apache.commons.lang.BitField: short clearShort(short)>(s0);

     label2:
        return $s1;
    }

    public byte setByteBoolean(byte, boolean)
    {
        byte b0, $b1;
        boolean z0;
        org.apache.commons.lang.BitField r0;

        r0 := @this: org.apache.commons.lang.BitField;

        b0 := @parameter0: byte;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b1 = virtualinvoke r0.<org.apache.commons.lang.BitField: byte setByte(byte)>(b0);

        goto label2;

     label1:
        $b1 = virtualinvoke r0.<org.apache.commons.lang.BitField: byte clearByte(byte)>(b0);

     label2:
        return $b1;
    }
}
