public class com.sun.lwuit.List extends com.sun.lwuit.Component
{
    public static final int FIXED_NONE;
    public static final int FIXED_NONE_CYCLIC;
    public static final int FIXED_NONE_ONE_ELEMENT_MARGIN_FROM_EDGE;
    private static final int FIXED_NONE_BOUNDRY;
    public static final int FIXED_LEAD;
    public static final int FIXED_TRAIL;
    public static final int FIXED_CENTER;
    private java.lang.Object renderingPrototype;
    private int fixedSelection;
    private com.sun.lwuit.list.ListModel model;
    private com.sun.lwuit.list.ListCellRenderer renderer;
    private int orientation;
    public static final int VERTICAL;
    public static final int HORIZONTAL;
    static final int COMBO;
    com.sun.lwuit.util.EventDispatcher dispatcher;
    java.lang.Object eventSource;
    private com.sun.lwuit.geom.Dimension elemSize;
    private com.sun.lwuit.geom.Dimension selectedElemSize;
    private boolean inputOnFocus;
    private boolean numericKeyActions;
    private boolean paintFocusBehindList;
    private int minElementHeight;
    private int itemGap;
    private int borderGap;
    private com.sun.lwuit.List$Listeners listener;
    private int animationPosition;
    private int fixedDraggedAnimationPosition;
    private int fixedDraggedPosition;
    private com.sun.lwuit.animations.Motion fixedDraggedMotion;
    private int destination;
    private com.sun.lwuit.animations.Motion listMotion;
    private boolean fireOnClick;
    private boolean fireOnRelease;
    private int fixedDraggedSelection;
    private boolean commandList;
    private boolean ignoreFocusComponentWhenUnfocused;
    boolean disposeDialogOnSelection;
    private boolean mutableRendererBackgrounds;
    private boolean scrollToSelected;

    public void <init>(java.util.Vector)
    {
        com.sun.lwuit.List r0;
        java.util.Vector r2;
        com.sun.lwuit.list.DefaultListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        r2 := @parameter0: java.util.Vector;

        $r1 = new com.sun.lwuit.list.DefaultListModel;

        specialinvoke $r1.<com.sun.lwuit.list.DefaultListModel: void <init>(java.util.Vector)>(r2);

        specialinvoke r0.<com.sun.lwuit.List: void <init>(com.sun.lwuit.list.ListModel)>($r1);

        return;
    }

    public void <init>(java.lang.Object[])
    {
        com.sun.lwuit.List r0;
        java.lang.Object[] r2;
        com.sun.lwuit.list.DefaultListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        r2 := @parameter0: java.lang.Object[];

        $r1 = new com.sun.lwuit.list.DefaultListModel;

        specialinvoke $r1.<com.sun.lwuit.list.DefaultListModel: void <init>(java.lang.Object[])>(r2);

        specialinvoke r0.<com.sun.lwuit.List: void <init>(com.sun.lwuit.list.ListModel)>($r1);

        return;
    }

    public void <init>()
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.DefaultListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = new com.sun.lwuit.list.DefaultListModel;

        specialinvoke $r1.<com.sun.lwuit.list.DefaultListModel: void <init>()>();

        specialinvoke r0.<com.sun.lwuit.List: void <init>(com.sun.lwuit.list.ListModel)>($r1);

        return;
    }

    public void <init>(com.sun.lwuit.list.ListModel)
    {
        com.sun.lwuit.list.ListModel r3;
        com.sun.lwuit.list.DefaultListCellRenderer $r1;
        com.sun.lwuit.plaf.LookAndFeel $r5;
        com.sun.lwuit.List r0;
        com.sun.lwuit.util.EventDispatcher $r2;
        com.sun.lwuit.plaf.UIManager $r4;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        r3 := @parameter0: com.sun.lwuit.list.ListModel;

        specialinvoke r0.<com.sun.lwuit.Component: void <init>()>();

        $r1 = new com.sun.lwuit.list.DefaultListCellRenderer;

        specialinvoke $r1.<com.sun.lwuit.list.DefaultListCellRenderer: void <init>()>();

        r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer> = $r1;

        r0.<com.sun.lwuit.List: int orientation> = 0;

        $r2 = new com.sun.lwuit.util.EventDispatcher;

        specialinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void <init>()>();

        r0.<com.sun.lwuit.List: com.sun.lwuit.util.EventDispatcher dispatcher> = $r2;

        r0.<com.sun.lwuit.List: java.lang.Object eventSource> = r0;

        r0.<com.sun.lwuit.List: boolean inputOnFocus> = 1;

        r0.<com.sun.lwuit.List: boolean numericKeyActions> = 1;

        r0.<com.sun.lwuit.List: boolean paintFocusBehindList> = 1;

        r0.<com.sun.lwuit.List: int minElementHeight> = 0;

        r0.<com.sun.lwuit.List: int itemGap> = 2;

        r0.<com.sun.lwuit.List: int borderGap> = 2;

        r0.<com.sun.lwuit.List: boolean fireOnClick> = 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = 0;

        r0.<com.sun.lwuit.List: boolean scrollToSelected> = 1;

        virtualinvoke r0.<com.sun.lwuit.List: void setUIID(java.lang.String)>("List");

        virtualinvoke r0.<com.sun.lwuit.List: void setModel(com.sun.lwuit.list.ListModel)>(r3);

        $r4 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $z0 = virtualinvoke $r5.<com.sun.lwuit.plaf.LookAndFeel: boolean isDefaultSmoothScrolling()>();

        virtualinvoke r0.<com.sun.lwuit.List: void setSmoothScrolling(boolean)>($z0);

        return;
    }

    void initComponentImpl()
    {
        com.sun.lwuit.list.ListModel $r1, $r2;
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        virtualinvoke r0.<com.sun.lwuit.List: void dataChanged(int,int)>(0, 0);

        specialinvoke r0.<com.sun.lwuit.List: void bindListeners()>();

        specialinvoke r0.<com.sun.lwuit.Component: void initComponentImpl()>();

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        if $i0 < 0 goto label1;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i0);

     label1:
        return;
    }

    protected void laidOut()
    {
        com.sun.lwuit.list.ListModel $r1;
        int $i0;
        com.sun.lwuit.List r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.List;

        specialinvoke r0.<com.sun.lwuit.Component: void laidOut()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isScrollable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isInitialized()>();

        if $z1 == 0 goto label1;

        $z2 = r0.<com.sun.lwuit.List: boolean scrollToSelected>;

        if $z2 == 0 goto label1;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        if $i0 < 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.List: void selectElement(int)>($i0);

     label1:
        return;
    }

    void deinitializeImpl()
    {
        com.sun.lwuit.List$Listeners $r1, $r2, $r4;
        com.sun.lwuit.list.ListModel $r3, $r5;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        specialinvoke r0.<com.sun.lwuit.Component: void deinitializeImpl()>();

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        if $r1 == null goto label1;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: void removeDataChangedListener(com.sun.lwuit.events.DataChangedListener)>($r2);

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r5.<com.sun.lwuit.list.ListModel: void removeSelectionListener(com.sun.lwuit.events.SelectionListener)>($r4);

        r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener> = null;

     label1:
        return;
    }

    protected void modelChanged(int, int)
    {
        int i0, i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    protected void listSelectionChanged(int, int)
    {
        int i0, i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public boolean isScrollableY()
    {
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        if $i0 <= $i1 goto label1;

        $i2 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i2 >= 9 goto label1;

        $i3 = r0.<com.sun.lwuit.List: int orientation>;

        if $i3 == 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isScrollableX()
    {
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        if $i0 <= $i1 goto label1;

        $i2 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i2 >= 9 goto label1;

        $i3 = r0.<com.sun.lwuit.List: int orientation>;

        if $i3 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getMinElementHeight()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int minElementHeight>;

        return $i0;
    }

    public void setMinElementHeight(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.List: int minElementHeight> = i0;

        return;
    }

    public int size()
    {
        int $i0;
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.ListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        return $i0;
    }

    private int getCurrentSelected()
    {
        com.sun.lwuit.list.ListModel $r1;
        int $i0, $i1, $i2;
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i0 <= 9 goto label1;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z0 == 0 goto label1;

        $i2 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        return $i2;

     label1:
        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i1 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        return $i1;
    }

    public int getSelectedIndex()
    {
        int $i0;
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.ListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        return $i0;
    }

    public void setSelectedIndex(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.sun.lwuit.List: void setSelectedIndex(int,boolean)>(i0, 1);

        return;
    }

    protected com.sun.lwuit.geom.Rectangle getVisibleBounds()
    {
        com.sun.lwuit.List r1;
        com.sun.lwuit.geom.Rectangle $r0;
        com.sun.lwuit.plaf.Style $r3;
        com.sun.lwuit.geom.Dimension $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0, $z1;

        r1 := @this: com.sun.lwuit.List;

        $r0 = new com.sun.lwuit.geom.Rectangle;

        specialinvoke $r0.<com.sun.lwuit.geom.Rectangle: void <init>()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $r3 = virtualinvoke r1.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke r1.<com.sun.lwuit.List: int getWidth()>();

        $z0 = virtualinvoke r1.<com.sun.lwuit.List: boolean isRTL()>();

        $i1 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 3);

        $i2 = $i0 - $i1;

        $z1 = virtualinvoke r1.<com.sun.lwuit.List: boolean isRTL()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r1.<com.sun.lwuit.List: int getSideGap()>();

        i6 = $i4 - $i5;

        $i7 = specialinvoke r1.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r4 = virtualinvoke r1.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke r1.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i7, i6, $r0, $r2, $r4, 1);

        $i8 = virtualinvoke $r0.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i9 = virtualinvoke r1.<com.sun.lwuit.List: int getX()>();

        $i10 = $i8 + $i9;

        virtualinvoke $r0.<com.sun.lwuit.geom.Rectangle: void setX(int)>($i10);

        $i11 = virtualinvoke $r0.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i12 = virtualinvoke r1.<com.sun.lwuit.List: int getY()>();

        $i13 = $i11 + $i12;

        virtualinvoke $r0.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i13);

        return $r0;
    }

    public void setSelectedIndex(int, boolean)
    {
        com.sun.lwuit.list.ListModel $r1;
        com.sun.lwuit.List r0;
        java.lang.IllegalArgumentException $r2;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean z0, $z1;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selection index is negative:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>(i0);

        if z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isInitialized()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.sun.lwuit.List: void selectElement(int)>(i0);

     label2:
        return;
    }

    public java.lang.Object getSelectedItem()
    {
        com.sun.lwuit.list.ListModel $r1, $r2, $r3;
        com.sun.lwuit.List r0;
        int $i0, $i1, $i3;
        java.lang.Object $r4;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i1 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i0 >= $i1 goto label1;

        $i3 = (int) -1;

        if $i0 <= $i3 goto label1;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r4 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>($i0);

        return $r4;

     label1:
        return null;
    }

    public void setSelectedItem(java.lang.Object)
    {
        com.sun.lwuit.list.ListModel $r1, $r2, $r5;
        com.sun.lwuit.List r0;
        int $i0, i1;
        java.lang.Object $r3, r4;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        r4 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r3 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i1);

        if $r3 == r4 goto label2;

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

     label2:
        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r5.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>(i1);

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public com.sun.lwuit.list.ListModel getModel()
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.ListModel $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        return $r1;
    }

    protected void setShouldCalcPreferredSize(boolean)
    {
        com.sun.lwuit.list.ListModel $r3, $r4;
        com.sun.lwuit.List r0;
        com.sun.lwuit.Component $r5, $r6;
        com.sun.lwuit.list.ListCellRenderer $r1;
        int $i0;
        java.lang.Object $r2, r7;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(z0);

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize> = null;

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension selectedElemSize> = null;

        if z0 == 0 goto label4;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $r2 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        if $r2 == null goto label1;

        r7 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        goto label3;

     label1:
        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i0 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i0 <= 0 goto label2;

        $r4 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        r7 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

        goto label3;

     label2:
        return;

     label3:
        $r5 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, r7, 0, 0);

        virtualinvoke $r5.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(z0);

        $r6 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, r7, 0, 1);

        virtualinvoke $r6.<com.sun.lwuit.Component: void setShouldCalcPreferredSize(boolean)>(z0);

     label4:
        return;
    }

    void dataChanged(int, int)
    {
        com.sun.lwuit.list.ListModel $r1, $r2;
        com.sun.lwuit.List r0;
        int $i0, $i1, i2, i3, $i4, $i5, $i6;

        r0 := @this: com.sun.lwuit.List;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        virtualinvoke r0.<com.sun.lwuit.List: void setShouldCalcPreferredSize(boolean)>(1);

        $i0 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i1 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i0 < $i1 goto label1;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i4 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i5 = $i4 - 1;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0);

        virtualinvoke r0.<com.sun.lwuit.List: void setSelectedIndex(int)>($i6);

     label1:
        virtualinvoke r0.<com.sun.lwuit.List: void modelChanged(int,int)>(i2, i3);

        virtualinvoke r0.<com.sun.lwuit.List: void repaint()>();

        return;
    }

    private void bindListeners()
    {
        com.sun.lwuit.List$Listeners $r1, $r2, $r3, $r5;
        com.sun.lwuit.list.ListModel $r4, $r6;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        if $r1 != null goto label1;

        $r2 = new com.sun.lwuit.List$Listeners;

        specialinvoke $r2.<com.sun.lwuit.List$Listeners: void <init>(com.sun.lwuit.List,com.sun.lwuit.List$1)>(r0, null);

        r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener> = $r2;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: void addDataChangedListener(com.sun.lwuit.events.DataChangedListener)>($r3);

        $r6 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r6.<com.sun.lwuit.list.ListModel: void addSelectionListener(com.sun.lwuit.events.SelectionListener)>($r5);

     label1:
        return;
    }

    public void setModel(com.sun.lwuit.list.ListModel)
    {
        com.sun.lwuit.List$Listeners $r3, $r5;
        com.sun.lwuit.list.ListModel $r1, r2, $r4, $r6;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        r2 := @parameter0: com.sun.lwuit.list.ListModel;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        if $r1 == null goto label2;

        virtualinvoke r0.<com.sun.lwuit.List: void setShouldCalcPreferredSize(boolean)>(1);

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: void removeDataChangedListener(com.sun.lwuit.events.DataChangedListener)>($r3);

        $r6 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener>;

        interfaceinvoke $r6.<com.sun.lwuit.list.ListModel: void removeSelectionListener(com.sun.lwuit.events.SelectionListener)>($r5);

        r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model> = r2;

        r0.<com.sun.lwuit.List: com.sun.lwuit.List$Listeners listener> = null;

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getScrollY()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        $i3 = $i1 + $i2;

        if $i0 >= $i3 goto label1;

        virtualinvoke r0.<com.sun.lwuit.List: void setScrollY(int)>(0);

     label1:
        $r8 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i4 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.List: int getScrollX()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        $i7 = $i5 + $i6;

        if $i4 >= $i7 goto label2;

        virtualinvoke r0.<com.sun.lwuit.List: void setScrollX(int)>(0);

     label2:
        r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model> = r2;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isInitialized()>();

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.sun.lwuit.List: void bindListeners()>();

     label3:
        virtualinvoke r0.<com.sun.lwuit.List: void repaint()>();

        return;
    }

    public boolean isNumericKeyActions()
    {
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $z0 = r0.<com.sun.lwuit.List: boolean numericKeyActions>;

        return $z0;
    }

    public void setNumericKeyActions(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean numericKeyActions> = z0;

        return;
    }

    public boolean isCommandList()
    {
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $z0 = r0.<com.sun.lwuit.List: boolean commandList>;

        return $z0;
    }

    public void setCommandList(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean commandList> = z0;

        return;
    }

    public boolean isIgnoreFocusComponentWhenUnfocused()
    {
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $z0 = r0.<com.sun.lwuit.List: boolean ignoreFocusComponentWhenUnfocused>;

        return $z0;
    }

    public void setIgnoreFocusComponentWhenUnfocused(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean ignoreFocusComponentWhenUnfocused> = z0;

        return;
    }

    public boolean isMutableRendererBackgrounds()
    {
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $z0 = r0.<com.sun.lwuit.List: boolean mutableRendererBackgrounds>;

        return $z0;
    }

    public void setMutableRendererBackgrounds(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean mutableRendererBackgrounds> = z0;

        return;
    }

    public void setListCellRenderer(com.sun.lwuit.list.ListCellRenderer)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.ListCellRenderer $r1, r2;

        r0 := @this: com.sun.lwuit.List;

        r2 := @parameter0: com.sun.lwuit.list.ListCellRenderer;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        if $r1 == null goto label1;

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize> = null;

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension selectedElemSize> = null;

        virtualinvoke r0.<com.sun.lwuit.List: void setShouldCalcPreferredSize(boolean)>(1);

     label1:
        r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer> = r2;

        return;
    }

    public com.sun.lwuit.list.ListCellRenderer getRenderer()
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.list.ListCellRenderer $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        return $r1;
    }

    public int getOrientation()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int orientation>;

        return $i0;
    }

    public void refreshTheme()
    {
        com.sun.lwuit.list.ListModel $r3, $r5;
        com.sun.lwuit.List r0;
        com.sun.lwuit.Component $r4, $r7, $r9, $r10;
        com.sun.lwuit.list.ListCellRenderer $r1;
        int $i0;
        java.lang.Object $r2, $r6, $r8;

        r0 := @this: com.sun.lwuit.List;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer getRenderer()>();

        $r2 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        if $r2 == null goto label1;

        $r8 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        $r9 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r8, 0, 0);

        virtualinvoke $r9.<com.sun.lwuit.Component: void refreshTheme()>();

        goto label3;

     label1:
        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i0 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r6 = interfaceinvoke $r5.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

        $r7 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r6, 0, 0);

        virtualinvoke $r7.<com.sun.lwuit.Component: void refreshTheme()>();

        goto label3;

     label2:
        $r4 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, "", 0, 0);

        virtualinvoke $r4.<com.sun.lwuit.Component: void refreshTheme()>();

     label3:
        $r10 = interfaceinvoke $r1.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListFocusComponent(com.sun.lwuit.List)>(r0);

        if $r10 == null goto label4;

        virtualinvoke $r10.<com.sun.lwuit.Component: void refreshTheme()>();

     label4:
        specialinvoke r0.<com.sun.lwuit.Component: void refreshTheme()>();

        return;
    }

    public void setOrientation(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.List: int orientation> = i0;

        return;
    }

    public void scrollRectToVisible(com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Rectangle $r1, r2, $r5, r8;
        com.sun.lwuit.geom.Dimension $r3, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: com.sun.lwuit.List;

        r2 := @parameter0: com.sun.lwuit.geom.Rectangle;

        $i0 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i0 >= 9 goto label3;

        $i1 = r0.<com.sun.lwuit.List: int orientation>;

        if $i1 == 1 goto label1;

        $r5 = new com.sun.lwuit.geom.Rectangle;

        $i8 = virtualinvoke r0.<com.sun.lwuit.List: int getScrollX()>();

        $i9 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r6 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i10 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r7 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i11 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i12 = r0.<com.sun.lwuit.List: int itemGap>;

        $i13 = $i11 + $i12;

        specialinvoke $r5.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i8, $i9, $i10, $i13);

        r8 = $r5;

        goto label2;

     label1:
        $r1 = new com.sun.lwuit.geom.Rectangle;

        $i2 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.List: int getScrollY()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i4 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i5 = r0.<com.sun.lwuit.List: int itemGap>;

        $i6 = $i4 + $i5;

        $r4 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i7 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke $r1.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i2, $i3, $i6, $i7);

        r8 = $r1;

     label2:
        specialinvoke r0.<com.sun.lwuit.Component: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component)>(r8, r0);

     label3:
        return;
    }

    public void setHandlesInput(boolean)
    {
        com.sun.lwuit.Form $r1;
        com.sun.lwuit.List r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label4;

        if z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<com.sun.lwuit.Form: boolean isSingleFocusMode()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<com.sun.lwuit.Component: void setHandlesInput(boolean)>($z2);

        goto label5;

     label4:
        specialinvoke r0.<com.sun.lwuit.Component: void setHandlesInput(boolean)>(z0);

     label5:
        return;
    }

    void setHandlesInputParent(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.sun.lwuit.Component: void setHandlesInput(boolean)>(z0);

        return;
    }

    protected void fireClicked()
    {
        com.sun.lwuit.List r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.List;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean handlesInput()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>($z1);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.sun.lwuit.List: void fireActionEvent()>();

     label3:
        virtualinvoke r0.<com.sun.lwuit.List: void repaint()>();

        return;
    }

    protected boolean isSelectableInteraction()
    {
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        return 1;
    }

    public void keyReleased(int)
    {
        com.sun.lwuit.list.ListModel $r2;
        com.sun.lwuit.List r1;
        int i0, $i1, $i2, i3;
        com.sun.lwuit.Display $r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r0.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        if $i1 != 8 goto label4;

        $z1 = virtualinvoke r1.<com.sun.lwuit.List: boolean handlesInput()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke r1.<com.sun.lwuit.List: void setHandlesInput(boolean)>($z2);

        if $z1 == 0 goto label3;

        virtualinvoke r1.<com.sun.lwuit.List: void fireActionEvent()>();

     label3:
        virtualinvoke r1.<com.sun.lwuit.List: void repaint()>();

        return;

     label4:
        $z0 = r1.<com.sun.lwuit.List: boolean numericKeyActions>;

        if $z0 == 0 goto label5;

        if $i1 == 2 goto label5;

        if $i1 == 5 goto label5;

        if $i1 == 1 goto label5;

        if $i1 == 6 goto label5;

        if i0 < 49 goto label5;

        if i0 > 57 goto label5;

        i3 = i0 - 49;

        $r2 = virtualinvoke r1.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i2 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: int getSize()>();

        if i3 >= $i2 goto label5;

        virtualinvoke r1.<com.sun.lwuit.List: void setSelectedIndex(int)>(i3);

        virtualinvoke r1.<com.sun.lwuit.List: void fireActionEvent()>();

     label5:
        return;
    }

    public void keyPressed(int)
    {
        byte b18, b19, b27, b28, b29, $b30, $b31;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.list.ListModel $r2, $r3, $r4, $r5;
        com.sun.lwuit.List r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, i21, $i22, i24, $i25, $i26, $i33;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean handlesInput()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        $i2 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i2 == 1 goto label03;

        b18 = 6;

        b29 = 6;

        b28 = 6;

        b27 = 6;

        b19 = 1;

        if $i1 == 2 goto label02;

        if $i1 != 5 goto label07;

     label02:
        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>(0);

        goto label07;

     label03:
        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z1 == 0 goto label04;

        b18 = 2;

        b29 = 2;

        b28 = 2;

        b27 = 2;

        b19 = 5;

        goto label05;

     label04:
        b18 = 5;

        b29 = 5;

        b28 = 5;

        b27 = 5;

        b19 = 2;

     label05:
        if $i1 == 6 goto label06;

        if $i1 != 1 goto label07;

     label06:
        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>(0);

     label07:
        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i20 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        i21 = $i20;

        if $i1 != b19 goto label09;

        $i33 = (int) -1;

        i21 = $i20 + $i33;

        if i21 >= 0 goto label11;

        $i15 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i15 == 0 goto label08;

        $i16 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i16 == 2 goto label08;

        $i17 = virtualinvoke r0.<com.sun.lwuit.List: int size()>();

        i21 = $i17 - 1;

        goto label11;

     label08:
        i21 = 0;

        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>(0);

        goto label11;

     label09:
        if $i1 != b27 goto label11;

        i21 = $i20 + 1;

        $i11 = virtualinvoke r0.<com.sun.lwuit.List: int size()>();

        if i21 < $i11 goto label11;

        $i12 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i12 == 0 goto label10;

        $i14 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i14 == 2 goto label10;

        i21 = 0;

        goto label11;

     label10:
        $i13 = virtualinvoke r0.<com.sun.lwuit.List: int size()>();

        i21 = $i13 - 1;

        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>(0);

     label11:
        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i22 = interfaceinvoke $r5.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        if i21 == $i22 goto label18;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>(i21);

        if $i1 != b28 goto label12;

        $b31 = 1;

        $b30 = 1;

        goto label13;

     label12:
        $b31 = -1;

        $b30 = -1;

     label13:
        i24 = $b30;

        $z2 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z2 == 0 goto label14;

        $i10 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i10 != 1 goto label14;

        i24 = neg $b31;

     label14:
        specialinvoke r0.<com.sun.lwuit.List: void updateAnimationPosition(int)>(i24);

        $i25 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i25 == 0 goto label15;

        $i9 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i9 != 1 goto label16;

     label15:
        specialinvoke r0.<com.sun.lwuit.List: void selectElement(int)>(i21);

     label16:
        $i26 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i26 != 2 goto label18;

        if b29 != $i1 goto label17;

        $i5 = i21 + 1;

        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i6 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i7 = $i6 - 1;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i7);

        specialinvoke r0.<com.sun.lwuit.List: void selectElement(int)>($i8);

        goto label18;

     label17:
        $i3 = i21 - 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        specialinvoke r0.<com.sun.lwuit.List: void selectElement(int)>($i4);

     label18:
        virtualinvoke r0.<com.sun.lwuit.List: void repaint()>();

        return;
    }

    private void selectElement(int)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Rectangle $r3, r5, $r6;
        com.sun.lwuit.geom.Dimension $r1, $r2, $r4, $r7;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.List;

        i3 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i0 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i0 == 1 goto label1;

        $r3 = new com.sun.lwuit.geom.Rectangle;

        $i10 = virtualinvoke r0.<com.sun.lwuit.List: int getX()>();

        $i11 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i12 = r0.<com.sun.lwuit.List: int itemGap>;

        $i13 = $i11 + $i12;

        $i14 = $i13 * i3;

        $r4 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke $r3.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,com.sun.lwuit.geom.Dimension)>($i10, $i14, $r4);

        r5 = $r3;

        goto label3;

     label1:
        $i1 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i2 = r0.<com.sun.lwuit.List: int itemGap>;

        $i4 = $i1 + $i2;

        i15 = $i4 * i3;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isScrollableX()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i5 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i6 = $i5 - i15;

        $i7 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i8 = r0.<com.sun.lwuit.List: int itemGap>;

        $i9 = $i7 + $i8;

        i15 = $i6 - $i9;

     label2:
        $r6 = new com.sun.lwuit.geom.Rectangle;

        $i16 = virtualinvoke r0.<com.sun.lwuit.List: int getY()>();

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke $r6.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,com.sun.lwuit.geom.Dimension)>(i15, $i16, $r7);

        r5 = $r6;

     label3:
        virtualinvoke r0.<com.sun.lwuit.List: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle)>(r5);

        return;
    }

    private void updateAnimationPosition(int)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r1, $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.List: int animationPosition>;

        if $i0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label4;

        $i1 = r0.<com.sun.lwuit.List: int orientation>;

        if $i1 == 1 goto label2;

        $i9 = r0.<com.sun.lwuit.List: int animationPosition>;

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i10 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i11 = i2 * $i10;

        $i12 = $i9 + $i11;

        r0.<com.sun.lwuit.List: int animationPosition> = $i12;

        goto label3;

     label2:
        $i3 = r0.<com.sun.lwuit.List: int animationPosition>;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i4 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i5 = i2 * $i4;

        $i6 = $i3 + $i5;

        r0.<com.sun.lwuit.List: int animationPosition> = $i6;

     label3:
        $i7 = r0.<com.sun.lwuit.List: int animationPosition>;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i7);

        r0.<com.sun.lwuit.List: int destination> = $i8;

        specialinvoke r0.<com.sun.lwuit.List: void initListMotion()>();

     label4:
        return;
    }

    private void initListMotion()
    {
        com.sun.lwuit.animations.Motion $r2, $r3;
        com.sun.lwuit.Form $r1;
        int $i0, $i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label1:
        $i0 = r0.<com.sun.lwuit.List: int destination>;

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getScrollAnimationSpeed()>();

        $r2 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createSplineMotion(int,int,int)>(0, $i0, $i1);

        r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion listMotion> = $r2;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion listMotion>;

        virtualinvoke $r3.<com.sun.lwuit.animations.Motion: void start()>();

        return;
    }

    private void calculateComponentPosition(int, int, com.sun.lwuit.geom.Rectangle, com.sun.lwuit.geom.Dimension, com.sun.lwuit.geom.Dimension, boolean)
    {
        com.sun.lwuit.plaf.Style $r1;
        com.sun.lwuit.list.ListModel $r6, $r7;
        com.sun.lwuit.List r0;
        boolean $z0, $z1, $z2, z3;
        com.sun.lwuit.geom.Rectangle r2;
        com.sun.lwuit.geom.Dimension $r3, r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, i98, i99, i100, i101, i102, i103, i104, i105, $i106, i107, i108, i109, i110, i111, i112, i113, i114;

        r0 := @this: com.sun.lwuit.List;

        i25 := @parameter0: int;

        i60 := @parameter1: int;

        r2 := @parameter2: com.sun.lwuit.geom.Rectangle;

        r4 := @parameter3: com.sun.lwuit.geom.Dimension;

        r5 := @parameter4: com.sun.lwuit.geom.Dimension;

        z3 := @parameter5: boolean;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        i98 = $i1;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z0 == 0 goto label01;

        $i97 = virtualinvoke r0.<com.sun.lwuit.List: int getSideGap()>();

        i98 = $i1 + $i97;

     label01:
        $i2 = specialinvoke r0.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r3 = virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = r0.<com.sun.lwuit.List: int orientation>;

        if $i3 == 1 goto label10;

        $i58 = virtualinvoke r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i59 = virtualinvoke r5.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        i99 = $i59 - $i58;

        virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: void setX(int)>(i98);

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i58);

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setWidth(int)>(i60);

        i100 = 0;

        $i61 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        $i62 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i63 = $i61 - $i62;

        $i64 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        i101 = $i63 - $i64;

        $i65 = r0.<com.sun.lwuit.List: int itemGap>;

        $i66 = $i58 + $i65;

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i67 = interfaceinvoke $r7.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i68 = $i66 * $i67;

        i102 = $i68 + i99;

        $i69 = r0.<com.sun.lwuit.List: int fixedSelection>;

        tableswitch($i69)
        {
            case 10: goto label05;
            case 11: goto label04;
            case 12: goto label02;
            default: goto label07;
        };

     label02:
        $i74 = i101 / 2;

        $i70 = r0.<com.sun.lwuit.List: int itemGap>;

        $i71 = $i58 + $i70;

        $i72 = $i71 + i99;

        $i73 = $i72 / 2;

        $i79 = $i74 - $i73;

        $i77 = i25 - $i2;

        $i75 = r0.<com.sun.lwuit.List: int itemGap>;

        $i76 = $i58 + $i75;

        $i78 = $i77 * $i76;

        i103 = $i79 + $i78;

        if z3 != 0 goto label03;

        i103 = i103 + i99;

     label03:
        $i80 = r0.<com.sun.lwuit.List: int itemGap>;

        $i81 = $i58 + $i80;

        i104 = specialinvoke r0.<com.sun.lwuit.List: int recalcOffset(int,int,int,int)>(i103, i102, i101, $i81);

        goto label08;

     label04:
        $i84 = r0.<com.sun.lwuit.List: int itemGap>;

        $i85 = $i58 + $i84;

        $i86 = $i85 + i99;

        i100 = i101 - $i86;

     label05:
        $i89 = i25 - $i2;

        $i87 = r0.<com.sun.lwuit.List: int itemGap>;

        $i88 = $i58 + $i87;

        $i90 = $i89 * $i88;

        $i94 = i100 + $i90;

        i105 = $i94;

        $i91 = i25 - $i2;

        if $i91 <= 0 goto label06;

        i105 = $i94 + i99;

     label06:
        $i92 = r0.<com.sun.lwuit.List: int itemGap>;

        $i93 = $i58 + $i92;

        i104 = specialinvoke r0.<com.sun.lwuit.List: int recalcOffset(int,int,int,int)>(i105, i102, i101, $i93);

        goto label08;

     label07:
        $i95 = r0.<com.sun.lwuit.List: int itemGap>;

        $i96 = $i58 + $i95;

        i104 = i25 * $i96;

        if z3 != 0 goto label08;

        i104 = i104 + i99;

     label08:
        $i106 = i104 + $i0;

        virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i106);

        if i25 != $i2 goto label09;

        $i82 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i83 = $i82 + i99;

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i83);

     label09:
        goto label22;

     label10:
        $i4 = virtualinvoke r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i5 = virtualinvoke r5.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        i107 = $i5 - $i4;

        virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i0);

        $i6 = virtualinvoke r0.<com.sun.lwuit.List: int getHeight()>();

        $i7 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 0);

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 2);

        $i10 = $i8 - $i9;

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setHeight(int)>($i10);

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i4);

        i108 = 0;

        $i11 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        $i12 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 3);

        $i13 = $i11 - $i12;

        $z2 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        $i14 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z2, 1);

        i109 = $i13 - $i14;

        $i15 = r0.<com.sun.lwuit.List: int itemGap>;

        $i16 = $i4 + $i15;

        $r6 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i17 = interfaceinvoke $r6.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i18 = $i16 * $i17;

        i110 = $i18 + i107;

        $i19 = r0.<com.sun.lwuit.List: int fixedSelection>;

        tableswitch($i19)
        {
            case 10: goto label15;
            case 11: goto label14;
            case 12: goto label11;
            default: goto label18;
        };

     label11:
        $i24 = i109 / 2;

        $i20 = r0.<com.sun.lwuit.List: int itemGap>;

        $i21 = $i4 + $i20;

        $i22 = $i21 + i107;

        $i23 = $i22 / 2;

        $i30 = $i24 - $i23;

        $i28 = i25 - $i2;

        $i26 = r0.<com.sun.lwuit.List: int itemGap>;

        $i27 = $i4 + $i26;

        $i29 = $i28 * $i27;

        i111 = $i30 + $i29;

        if z3 != 0 goto label12;

        i111 = i111 + i107;

     label12:
        if $z0 == 0 goto label13;

        $i43 = i109 - i111;

        i111 = $i43 - $i4;

     label13:
        $i31 = r0.<com.sun.lwuit.List: int itemGap>;

        $i32 = $i4 + $i31;

        i112 = specialinvoke r0.<com.sun.lwuit.List: int recalcOffset(int,int,int,int)>(i111, i110, i109, $i32);

        goto label19;

     label14:
        $i44 = r0.<com.sun.lwuit.List: int itemGap>;

        $i45 = $i4 + $i44;

        $i46 = $i45 + i107;

        i108 = i109 - $i46;

     label15:
        $i49 = i25 - $i2;

        $i47 = r0.<com.sun.lwuit.List: int itemGap>;

        $i48 = $i4 + $i47;

        $i50 = $i49 * $i48;

        $i55 = i108 + $i50;

        i113 = $i55;

        $i51 = i25 - $i2;

        if $i51 <= 0 goto label16;

        i113 = $i55 + i107;

     label16:
        if $z0 == 0 goto label17;

        $i54 = i109 - i113;

        i113 = $i54 - $i4;

     label17:
        $i52 = r0.<com.sun.lwuit.List: int itemGap>;

        $i53 = $i4 + $i52;

        i112 = specialinvoke r0.<com.sun.lwuit.List: int recalcOffset(int,int,int,int)>(i113, i110, i109, $i53);

        goto label19;

     label18:
        $i56 = r0.<com.sun.lwuit.List: int itemGap>;

        $i57 = $i4 + $i56;

        i112 = i25 * $i57;

        if z3 != 0 goto label19;

        i112 = i112 + i107;

     label19:
        i114 = i98 + i112;

        if $z0 == 0 goto label21;

        $i35 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i35 >= 9 goto label21;

        $i37 = i98 + i110;

        $i36 = i112 - i98;

        $i40 = $i37 - $i36;

        $i38 = r0.<com.sun.lwuit.List: int itemGap>;

        $i39 = $i4 + $i38;

        i114 = $i40 - $i39;

        $i41 = specialinvoke r0.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i25 != $i41 goto label20;

        i114 = i114 - i107;

     label20:
        if i110 >= i109 goto label21;

        $i42 = i109 - i110;

        i114 = i114 + $i42;

     label21:
        virtualinvoke r2.<com.sun.lwuit.geom.Rectangle: void setX(int)>(i114);

        if i25 != $i2 goto label22;

        $i33 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i34 = $i33 + i107;

        virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: void setWidth(int)>($i34);

     label22:
        return;
    }

    private int recalcOffset(int, int, int, int)
    {
        com.sun.lwuit.List r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;

        r0 := @this: com.sun.lwuit.List;

        i16 := @parameter0: int;

        i15 := @parameter1: int;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = r0.<com.sun.lwuit.List: int animationPosition>;

        $i2 = $i1 % i0;

        $i5 = i16 + $i2;

        $i3 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i4 = $i3 % i0;

        $i7 = $i5 + $i4;

        if $i7 < i6 goto label1;

        i16 = i16 - i15;

        goto label2;

     label1:
        $i8 = r0.<com.sun.lwuit.List: int animationPosition>;

        $i9 = $i8 % i0;

        $i12 = i16 + $i9;

        $i10 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i11 = $i10 % i0;

        $i14 = $i12 + $i11;

        $i13 = 1 - i0;

        if $i14 >= $i13 goto label2;

        i16 = i16 + i15;

     label2:
        return i16;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.Style $r4;
        com.sun.lwuit.list.ListModel $r5, $r8, $r18, $r20, $r24, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, i89, i90, i91, $i92, $i93, $i94, $i95, i96, $i97, i98, i99, i100, i101, $i102, i103, i104;
        java.lang.Object $r9, $r21, $r25, $r36;
        com.sun.lwuit.list.ListCellRenderer $r10, $r12, $r16, $r19, $r26, $r34;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.List r3;
        com.sun.lwuit.plaf.LookAndFeel $r1;
        com.sun.lwuit.plaf.UIManager $r0;
        com.sun.lwuit.Component $r11, $r13, $r17, $r22, $r27, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, z18, z19, z20;
        com.sun.lwuit.geom.Rectangle $r6;
        com.sun.lwuit.geom.Dimension $r7, $r14, $r15, $r23, $r28, $r29, $r30, $r31, $r32, $r33, $r38;

        r3 := @this: com.sun.lwuit.List;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: void drawList(com.sun.lwuit.Graphics,com.sun.lwuit.List)>(r2, r3);

        $r4 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $i0 = virtualinvoke r3.<com.sun.lwuit.List: int getWidth()>();

        $z0 = virtualinvoke r3.<com.sun.lwuit.List: boolean isRTL()>();

        $i1 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z0, 3);

        $i2 = $i0 - $i1;

        $z1 = virtualinvoke r3.<com.sun.lwuit.List: boolean isRTL()>();

        $i3 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z1, 1);

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r3.<com.sun.lwuit.List: int getSideGap()>();

        i89 = $i4 - $i5;

        $z2 = virtualinvoke r3.<com.sun.lwuit.List: boolean isScrollableX()>();

        if $z2 == 0 goto label01;

        $r38 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i82 = virtualinvoke $r38.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $z7 = virtualinvoke r3.<com.sun.lwuit.List: boolean isRTL()>();

        $i83 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z7, 3);

        $i84 = $i82 - $i83;

        $z8 = virtualinvoke r3.<com.sun.lwuit.List: boolean isRTL()>();

        $i85 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>($z8, 1);

        $i86 = $i84 - $i85;

        $i87 = virtualinvoke r3.<com.sun.lwuit.List: int getSideGap()>();

        $i88 = $i86 - $i87;

        i89 = staticinvoke <java.lang.Math: int max(int,int)>(i89, $i88);

     label01:
        $r5 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i6 = interfaceinvoke $r5.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i6 != 0 goto label02;

        return;

     label02:
        $i7 = virtualinvoke r3.<com.sun.lwuit.List: int getX()>();

        i90 = $i7;

        $i8 = virtualinvoke r3.<com.sun.lwuit.List: int getY()>();

        i91 = $i8;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i7, $i8);

        $r6 = new com.sun.lwuit.geom.Rectangle;

        specialinvoke $r6.<com.sun.lwuit.geom.Rectangle: void <init>()>();

        $r7 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        $i9 = r3.<com.sun.lwuit.List: int fixedSelection>;

        if $i9 <= 9 goto label05;

        $i68 = r3.<com.sun.lwuit.List: int animationPosition>;

        if $i68 != 0 goto label03;

        $z6 = virtualinvoke r3.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z6 == 0 goto label05;

     label03:
        $i69 = r3.<com.sun.lwuit.List: int orientation>;

        if $i69 == 1 goto label04;

        $i77 = r3.<com.sun.lwuit.List: int animationPosition>;

        $i76 = r3.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i78 = $i77 + $i76;

        i91 = $i8 + $i78;

        $i80 = r3.<com.sun.lwuit.List: int animationPosition>;

        $i79 = r3.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i81 = $i80 + $i79;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>(0, $i81);

        goto label05;

     label04:
        $i71 = r3.<com.sun.lwuit.List: int animationPosition>;

        $i70 = r3.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i72 = $i71 + $i70;

        i90 = $i7 + $i72;

        $i74 = r3.<com.sun.lwuit.List: int animationPosition>;

        $i73 = r3.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i75 = $i74 + $i73;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i75, 0);

     label05:
        $i92 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipX()>();

        $i93 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipY()>();

        $i94 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i95 = virtualinvoke r2.<com.sun.lwuit.Graphics: int getClipHeight()>();

        z9 = 0;

        z20 = 0;

        z19 = 0;

        z18 = 0;

        z17 = 0;

        i96 = 0;

        $i97 = r3.<com.sun.lwuit.List: int fixedSelection>;

        if $i97 >= 9 goto label07;

        $i62 = virtualinvoke r3.<com.sun.lwuit.List: int getAbsoluteX()>();

        i98 = $i92 + $i62;

        $z5 = virtualinvoke r3.<com.sun.lwuit.List: boolean isRTL()>();

        if $z5 == 0 goto label06;

        $i67 = virtualinvoke r3.<com.sun.lwuit.List: int getWidth()>();

        i98 = i98 + $i67;

     label06:
        $i63 = virtualinvoke r3.<com.sun.lwuit.List: int getAbsoluteY()>();

        $i64 = $i93 + $i63;

        $i65 = specialinvoke r3.<com.sun.lwuit.List: int pointerSelect(int,int)>(i98, $i64);

        $i66 = $i65 - 1;

        i96 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i66);

     label07:
        i99 = 0;

        i100 = $i6;

        $z10 = r3.<com.sun.lwuit.List: boolean mutableRendererBackgrounds>;

        if $z10 == 0 goto label18;

        i101 = i96;

     label08:
        if i101 >= $i6 goto label17;

        $i50 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i101 != $i50 goto label09;

        $i60 = r3.<com.sun.lwuit.List: int animationPosition>;

        if $i60 != 0 goto label09;

        $i61 = r3.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        if $i61 != 0 goto label09;

        z9 = 1;

        z20 = 1;

        z19 = 1;

        i100 = i101;

        goto label16;

     label09:
        $i58 = i101;

        $i59 = i89;

        $r32 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        $i102 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i101 > $i102 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        specialinvoke r3.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i58, $i59, $r6, $r7, $r32, $z11);

        $z4 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int)>($i92, $i93, $i94, $i95);

        if $z4 == 0 goto label15;

        if z20 != 0 goto label12;

        i99 = i101;

     label12:
        i100 = i101;

        $r33 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $r34 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r35 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r36 = interfaceinvoke $r35.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i101);

        $i57 = i101;

        $i52 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i101 != $i52 goto label13;

        $z12 = 1;

        goto label14;

     label13:
        $z12 = 0;

     label14:
        $r37 = interfaceinvoke $r34.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r3, $r36, $i57, $z12);

        $i53 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i54 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i55 = virtualinvoke $r33.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i56 = virtualinvoke $r33.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponentBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r37, $i53, $i54, $i55, $i56);

        z9 = 1;

        z20 = 1;

        z19 = 1;

        goto label16;

     label15:
        if z19 == 0 goto label16;

        $i51 = r3.<com.sun.lwuit.List: int fixedSelection>;

        if $i51 >= 9 goto label16;

        goto label17;

     label16:
        i101 = i101 + 1;

        goto label08;

     label17:
        goto label28;

     label18:
        $r8 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $r9 = interfaceinvoke $r8.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(0);

        $r10 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r11 = interfaceinvoke $r10.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r3, $r9, 0, 1);

        $r12 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r13 = interfaceinvoke $r12.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r3, $r9, 0, 0);

        i103 = i96;

     label19:
        if i103 >= $i6 goto label28;

        $i35 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i103 != $i35 goto label20;

        $i49 = r3.<com.sun.lwuit.List: int animationPosition>;

        if $i49 != 0 goto label20;

        z9 = 1;

        z18 = 1;

        z17 = 1;

        i100 = i103;

        goto label27;

     label20:
        $i47 = i103;

        $i48 = i89;

        $r29 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        $i36 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i103 > $i36 goto label21;

        $z13 = 1;

        goto label22;

     label21:
        $z13 = 0;

     label22:
        specialinvoke r3.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i47, $i48, $r6, $r7, $r29, $z13);

        $z3 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: boolean intersects(int,int,int,int)>($i92, $i93, $i94, $i95);

        if $z3 == 0 goto label26;

        if z17 != 0 goto label23;

        i99 = i103;

     label23:
        i100 = i103;

        $i38 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i103 != $i38 goto label24;

        $r31 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i43 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i44 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i45 = virtualinvoke $r31.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i46 = virtualinvoke $r31.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponentBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r11, $i43, $i44, $i45, $i46);

        goto label25;

     label24:
        $r30 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i39 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i40 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i41 = virtualinvoke $r30.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i42 = virtualinvoke $r30.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponentBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r13, $i39, $i40, $i41, $i42);

     label25:
        z9 = 1;

        z18 = 1;

        z17 = 1;

        goto label27;

     label26:
        if z18 == 0 goto label27;

        $i37 = r3.<com.sun.lwuit.List: int fixedSelection>;

        if $i37 >= 9 goto label27;

        goto label28;

     label27:
        i103 = i103 + 1;

        goto label19;

     label28:
        $z14 = r3.<com.sun.lwuit.List: boolean paintFocusBehindList>;

        if $z14 == 0 goto label29;

        specialinvoke r3.<com.sun.lwuit.List: void paintFocus(com.sun.lwuit.Graphics,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension)>(r2, i89, $r6, $r7);

     label29:
        i104 = i99;

     label30:
        if i104 > i100 goto label35;

        $i26 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i104 != $i26 goto label31;

        $i34 = r3.<com.sun.lwuit.List: int animationPosition>;

        if $i34 != 0 goto label31;

        goto label34;

     label31:
        $i32 = i104;

        $i33 = i89;

        $r23 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        $i27 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        if i104 > $i27 goto label32;

        $z15 = 1;

        goto label33;

     label32:
        $z15 = 0;

     label33:
        specialinvoke r3.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i32, $i33, $r6, $r7, $r23, $z15);

        $r24 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r25 = interfaceinvoke $r24.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i104);

        $r26 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r27 = interfaceinvoke $r26.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r3, $r25, i104, 0);

        virtualinvoke $r27.<com.sun.lwuit.Component: void setCellRenderer(boolean)>(1);

        $r28 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i28 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i29 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i30 = virtualinvoke $r28.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i31 = virtualinvoke $r28.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r27, $i28, $i29, $i30, $i31);

     label34:
        i104 = i104 + 1;

        goto label30;

     label35:
        $i10 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r14 = virtualinvoke r3.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke r3.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i10, i89, $r6, $r7, $r14, 1);

        $r15 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $r16 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r17 = interfaceinvoke $r16.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListFocusComponent(com.sun.lwuit.List)>(r3);

        if $r17 != null goto label36;

        $i25 = r3.<com.sun.lwuit.List: int fixedSelection>;

        if $i25 < 9 goto label37;

     label36:
        $i11 = r3.<com.sun.lwuit.List: int animationPosition>;

        if $i11 != 0 goto label38;

        $r18 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i14 = interfaceinvoke $r18.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i14 <= 0 goto label38;

     label37:
        $r19 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r20 = r3.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i15 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r21 = interfaceinvoke $r20.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>($i15);

        $i16 = specialinvoke r3.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r22 = interfaceinvoke $r19.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r3, $r21, $i16, 1);

        $i17 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i18 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i19 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i20 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponentBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r22, $i17, $i18, $i19, $i20);

        $i21 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i22 = virtualinvoke $r6.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i23 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i24 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r3.<com.sun.lwuit.List: void renderComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r2, $r22, $i21, $i22, $i23, $i24);

     label38:
        $z16 = r3.<com.sun.lwuit.List: boolean paintFocusBehindList>;

        if $z16 != 0 goto label39;

        specialinvoke r3.<com.sun.lwuit.List: void paintFocus(com.sun.lwuit.Graphics,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension)>(r2, i89, $r6, $r7);

     label39:
        $i13 = neg i90;

        $i12 = neg i91;

        virtualinvoke r2.<com.sun.lwuit.Graphics: void translate(int,int)>($i13, $i12);

        return;
    }

    private void paintFocus(com.sun.lwuit.Graphics, int, com.sun.lwuit.geom.Rectangle, com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.Graphics r7;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Rectangle r1;
        com.sun.lwuit.Component $r6;
        com.sun.lwuit.geom.Dimension r2, $r3, $r4;
        com.sun.lwuit.list.ListCellRenderer $r5;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.List;

        r7 := @parameter0: com.sun.lwuit.Graphics;

        i1 := @parameter1: int;

        r1 := @parameter2: com.sun.lwuit.geom.Rectangle;

        r2 := @parameter3: com.sun.lwuit.geom.Dimension;

        $z0 = r0.<com.sun.lwuit.List: boolean ignoreFocusComponentWhenUnfocused>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean hasFocus()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $i0 = specialinvoke r0.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke r0.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i0, i1, r1, r2, $r3, 1);

        $r4 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r6 = interfaceinvoke $r5.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListFocusComponent(com.sun.lwuit.List)>(r0);

        if $r6 == null goto label4;

        virtualinvoke $r6.<com.sun.lwuit.Component: void setCellRenderer(boolean)>(1);

        $i2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        i15 = $i2;

        $i3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        i16 = $i3;

        $i4 = r0.<com.sun.lwuit.List: int orientation>;

        if $i4 == 1 goto label2;

        $i13 = r0.<com.sun.lwuit.List: int animationPosition>;

        $i12 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i14 = $i13 + $i12;

        i16 = $i3 - $i14;

        goto label3;

     label2:
        $i6 = r0.<com.sun.lwuit.List: int animationPosition>;

        $i5 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i7 = $i6 + $i5;

        i15 = $i2 - $i7;

     label3:
        $i8 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i9 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r0.<com.sun.lwuit.List: void renderComponentBackground(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r7, $r6, i15, i16, $i8, $i9);

        $i10 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i11 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        specialinvoke r0.<com.sun.lwuit.List: void renderComponent(com.sun.lwuit.Graphics,com.sun.lwuit.Component,int,int,int,int)>(r7, $r6, i15, i16, $i10, $i11);

     label4:
        return;
    }

    private void renderComponent(com.sun.lwuit.Graphics, com.sun.lwuit.Component, int, int, int, int)
    {
        com.sun.lwuit.Graphics r3;
        com.sun.lwuit.List r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0, $z1, $z2;

        r2 := @this: com.sun.lwuit.List;

        r3 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Component;

        i10 := @parameter2: int;

        i12 := @parameter3: int;

        i2 := @parameter4: int;

        i6 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.List: boolean isRTL()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z0, 1);

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $i3 = i2 - $i0;

        $z1 = virtualinvoke r2.<com.sun.lwuit.List: boolean isRTL()>();

        $i4 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z1, 3);

        $i5 = $i3 - $i4;

        virtualinvoke r0.<com.sun.lwuit.Component: void setWidth(int)>($i5);

        $i7 = i6 - $i1;

        $i8 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i9 = $i7 - $i8;

        virtualinvoke r0.<com.sun.lwuit.Component: void setHeight(int)>($i9);

        $i11 = i10 + $i0;

        virtualinvoke r0.<com.sun.lwuit.Component: void setX(int)>($i11);

        $i13 = i12 + $i1;

        virtualinvoke r0.<com.sun.lwuit.Component: void setY(int)>($i13);

        $i14 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipX()>();

        $i15 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipY()>();

        $i16 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i17 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipHeight()>();

        $i18 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i19 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i20 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i21 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i18, $i19, $i20, $i21);

        virtualinvoke r0.<com.sun.lwuit.Component: void paint(com.sun.lwuit.Graphics)>(r3);

        $z2 = virtualinvoke r0.<com.sun.lwuit.Component: boolean isBorderPainted()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.Component: void paintBorder(com.sun.lwuit.Graphics)>(r3);

     label1:
        virtualinvoke r3.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i14, $i15, $i16, $i17);

        return;
    }

    private void renderComponentBackground(com.sun.lwuit.Graphics, com.sun.lwuit.Component, int, int, int, int)
    {
        com.sun.lwuit.Graphics r3;
        com.sun.lwuit.List r2;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0, $z1;

        r2 := @this: com.sun.lwuit.List;

        r3 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Component;

        i10 := @parameter2: int;

        i12 := @parameter3: int;

        i2 := @parameter4: int;

        i6 := @parameter5: int;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $z0 = virtualinvoke r2.<com.sun.lwuit.List: boolean isRTL()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z0, 1);

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 0);

        $i3 = i2 - $i0;

        $z1 = virtualinvoke r2.<com.sun.lwuit.List: boolean isRTL()>();

        $i4 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>($z1, 3);

        $i5 = $i3 - $i4;

        virtualinvoke r0.<com.sun.lwuit.Component: void setWidth(int)>($i5);

        $i7 = i6 - $i1;

        $i8 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getMargin(boolean,int)>(0, 2);

        $i9 = $i7 - $i8;

        virtualinvoke r0.<com.sun.lwuit.Component: void setHeight(int)>($i9);

        $i11 = i10 + $i0;

        virtualinvoke r0.<com.sun.lwuit.Component: void setX(int)>($i11);

        $i13 = i12 + $i1;

        virtualinvoke r0.<com.sun.lwuit.Component: void setY(int)>($i13);

        $i14 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipX()>();

        $i15 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipY()>();

        $i16 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i17 = virtualinvoke r3.<com.sun.lwuit.Graphics: int getClipHeight()>();

        $i18 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i19 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i20 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i21 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        virtualinvoke r3.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i18, $i19, $i20, $i21);

        virtualinvoke r0.<com.sun.lwuit.Component: void paintBackground(com.sun.lwuit.Graphics)>(r3);

        virtualinvoke r3.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i14, $i15, $i16, $i17);

        return;
    }

    public void addSelectionListener(com.sun.lwuit.events.SelectionListener)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.events.SelectionListener r1;
        com.sun.lwuit.list.ListModel $r2;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: com.sun.lwuit.events.SelectionListener;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: void addSelectionListener(com.sun.lwuit.events.SelectionListener)>(r1);

        return;
    }

    public void removeSelectionListener(com.sun.lwuit.events.SelectionListener)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.events.SelectionListener r1;
        com.sun.lwuit.list.ListModel $r2;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: com.sun.lwuit.events.SelectionListener;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: void removeSelectionListener(com.sun.lwuit.events.SelectionListener)>(r1);

        return;
    }

    public void addActionListener(com.sun.lwuit.events.ActionListener)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.events.ActionListener r1;
        com.sun.lwuit.util.EventDispatcher $r2;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: com.sun.lwuit.events.ActionListener;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.util.EventDispatcher dispatcher>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void addListener(java.lang.Object)>(r1);

        return;
    }

    public void removeActionListener(com.sun.lwuit.events.ActionListener)
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.events.ActionListener r1;
        com.sun.lwuit.util.EventDispatcher $r2;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: com.sun.lwuit.events.ActionListener;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.util.EventDispatcher dispatcher>;

        virtualinvoke $r2.<com.sun.lwuit.util.EventDispatcher: void removeListener(java.lang.Object)>(r1);

        return;
    }

    protected void fireActionEvent()
    {
        com.sun.lwuit.events.ActionEvent $r1;
        com.sun.lwuit.List r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.lwuit.Command $r5, $r7;
        com.sun.lwuit.Form $r6, $r8;
        com.sun.lwuit.Dialog $r9;
        java.lang.Object $r2, $r4;
        com.sun.lwuit.util.EventDispatcher $r3;

        r0 := @this: com.sun.lwuit.List;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<com.sun.lwuit.List: boolean disposeDialogOnSelection>;

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.Form getComponentForm()>();

        $r9 = (com.sun.lwuit.Dialog) $r8;

        virtualinvoke $r9.<com.sun.lwuit.Dialog: void dispose()>();

     label1:
        specialinvoke r0.<com.sun.lwuit.Component: void fireActionEvent()>();

        $r1 = new com.sun.lwuit.events.ActionEvent;

        $r2 = r0.<com.sun.lwuit.List: java.lang.Object eventSource>;

        specialinvoke $r1.<com.sun.lwuit.events.ActionEvent: void <init>(java.lang.Object)>($r2);

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.util.EventDispatcher dispatcher>;

        virtualinvoke $r3.<com.sun.lwuit.util.EventDispatcher: void fireActionEvent(com.sun.lwuit.events.ActionEvent)>($r1);

        $z2 = virtualinvoke r0.<com.sun.lwuit.List: boolean isCommandList()>();

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke $r1.<com.sun.lwuit.events.ActionEvent: boolean isConsumed()>();

        if $z3 != 0 goto label2;

        $r4 = virtualinvoke r0.<com.sun.lwuit.List: java.lang.Object getSelectedItem()>();

        if $r4 == null goto label2;

        $z4 = $r4 instanceof com.sun.lwuit.Command;

        if $z4 == 0 goto label2;

        $r5 = (com.sun.lwuit.Command) $r4;

        virtualinvoke $r5.<com.sun.lwuit.Command: void actionPerformed(com.sun.lwuit.events.ActionEvent)>($r1);

        $z5 = virtualinvoke $r1.<com.sun.lwuit.events.ActionEvent: boolean isConsumed()>();

        if $z5 != 0 goto label2;

        $r6 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.Form getComponentForm()>();

        if $r6 == null goto label2;

        $r7 = (com.sun.lwuit.Command) $r4;

        virtualinvoke $r6.<com.sun.lwuit.Form: void actionCommandImpl(com.sun.lwuit.Command)>($r7);

     label2:
        return;
    }

    public void setInputOnFocus(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean inputOnFocus> = z0;

        return;
    }

    public void setPaintFocusBehindList(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean paintFocusBehindList> = z0;

        return;
    }

    void focusGainedInternal()
    {
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        $z0 = r0.<com.sun.lwuit.List: boolean inputOnFocus>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.List: void setHandlesInput(boolean)>(1);

     label1:
        return;
    }

    void focusLostInternal()
    {
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        return;
    }

    public int getItemGap()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int itemGap>;

        return $i0;
    }

    public void setItemGap(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.List: int itemGap> = i0;

        return;
    }

    public void setRenderingPrototype(java.lang.Object)
    {
        com.sun.lwuit.List r0;
        java.lang.Object r1;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: java.lang.Object;

        r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype> = r1;

        return;
    }

    public java.lang.Object getRenderingPrototype()
    {
        com.sun.lwuit.List r0;
        java.lang.Object $r1;

        r0 := @this: com.sun.lwuit.List;

        $r1 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        return $r1;
    }

    com.sun.lwuit.geom.Dimension getElementSize(boolean, boolean)
    {
        com.sun.lwuit.list.ListModel $r4, $r11;
        com.sun.lwuit.Label $r5, $r12, $r14;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r1, $r3, $r6, $r7, $r8, $r10, $r13, $r15, $r16, $r17;
        int $i0, $i1;
        boolean z0, z1;
        java.lang.Object $r2, $r9;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label4;

        $r8 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension selectedElemSize>;

        if $r8 != null goto label3;

        $r9 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        if $r9 != null goto label2;

        $r11 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i1 = interfaceinvoke $r11.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i1 != 0 goto label2;

        if z1 == 0 goto label1;

        $r14 = new com.sun.lwuit.Label;

        specialinvoke $r14.<com.sun.lwuit.Label: void <init>(java.lang.String)>("XXXXXX");

        $r15 = virtualinvoke $r14.<com.sun.lwuit.Label: com.sun.lwuit.geom.Dimension getPreferredSizeWithMargin()>();

        return $r15;

     label1:
        $r12 = new com.sun.lwuit.Label;

        specialinvoke $r12.<com.sun.lwuit.Label: void <init>(java.lang.String)>("XXXXXX");

        $r13 = virtualinvoke $r12.<com.sun.lwuit.Label: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        return $r13;

     label2:
        $r10 = specialinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension calculateElementSize(boolean,boolean)>(1, z1);

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension selectedElemSize> = $r10;

     label3:
        $r16 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension selectedElemSize>;

        return $r16;

     label4:
        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize>;

        if $r1 != null goto label7;

        $r2 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        if $r2 != null goto label6;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i0 != 0 goto label6;

        $r5 = new com.sun.lwuit.Label;

        specialinvoke $r5.<com.sun.lwuit.Label: void <init>(java.lang.String)>("XXXXXX");

        if z1 == 0 goto label5;

        $r7 = virtualinvoke $r5.<com.sun.lwuit.Label: com.sun.lwuit.geom.Dimension getPreferredSizeWithMargin()>();

        return $r7;

     label5:
        $r6 = virtualinvoke $r5.<com.sun.lwuit.Label: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        return $r6;

     label6:
        $r3 = specialinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension calculateElementSize(boolean,boolean)>(0, z1);

        r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize> = $r3;

     label7:
        $r17 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize>;

        return $r17;
    }

    private com.sun.lwuit.geom.Dimension calculateElementSize(boolean, boolean)
    {
        com.sun.lwuit.Component $r7, $r12;
        com.sun.lwuit.plaf.Style $r9;
        com.sun.lwuit.list.ListCellRenderer $r5, $r11;
        boolean z0, z1;
        com.sun.lwuit.list.ListModel $r2, $r4;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r3, $r8, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14;
        java.lang.Object $r1, $r6, $r10;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        if $r1 == null goto label2;

        $r11 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r10 = r0.<com.sun.lwuit.List: java.lang.Object renderingPrototype>;

        $r12 = interfaceinvoke $r11.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r10, 0, z0);

        if z1 == 0 goto label1;

        $r14 = virtualinvoke $r12.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSizeWithMargin()>();

        return $r14;

     label1:
        $r13 = virtualinvoke $r12.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        return $r13;

     label2:
        i10 = 0;

        i11 = 0;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i0 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i0);

        i12 = 0;

        i13 = 0;

        i14 = 0;

     label3:
        if i14 >= $i1 goto label5;

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListCellRenderer renderer>;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $r6 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: java.lang.Object getItemAt(int)>(i14);

        $r7 = interfaceinvoke $r5.<com.sun.lwuit.list.ListCellRenderer: com.sun.lwuit.Component getListCellRendererComponent(com.sun.lwuit.List,java.lang.Object,int,boolean)>(r0, $r6, i14, z0);

        $r8 = virtualinvoke $r7.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i4 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i4);

        $i5 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i5);

        if i14 != 0 goto label4;

        $r9 = virtualinvoke $r7.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        $i6 = virtualinvoke $r9.<com.sun.lwuit.plaf.Style: int getMargin(int)>(0);

        $i7 = virtualinvoke $r9.<com.sun.lwuit.plaf.Style: int getMargin(int)>(2);

        i12 = $i6 + $i7;

        $i8 = virtualinvoke $r9.<com.sun.lwuit.plaf.Style: int getMargin(int)>(1);

        $i9 = virtualinvoke $r9.<com.sun.lwuit.plaf.Style: int getMargin(int)>(3);

        i13 = $i8 + $i9;

     label4:
        i14 = i14 + 1;

        goto label3;

     label5:
        $r3 = new com.sun.lwuit.geom.Dimension;

        $i3 = i10 + i13;

        $i2 = i11 + i12;

        specialinvoke $r3.<com.sun.lwuit.geom.Dimension: void <init>(int,int)>($i3, $i2);

        return $r3;
    }

    protected void longPointerPress(int, int)
    {
        com.sun.lwuit.list.ListModel $r1;
        int i0, i1, $i2, $i4;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<com.sun.lwuit.List: int pointerSelect(int,int)>(i0, i1);

        $i4 = (int) -1;

        if $i2 <= $i4 goto label1;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i2);

     label1:
        return;
    }

    public void pointerPressed(int, int)
    {
        com.sun.lwuit.list.ListModel $r1, $r2, $r3, $r4;
        com.sun.lwuit.List r0;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        boolean $z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.List;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i0 <= 9 goto label4;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label4;

        $i4 = r0.<com.sun.lwuit.List: int orientation>;

        if $i4 == 1 goto label1;

        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i2;

        goto label2;

     label1:
        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i1;

     label2:
        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z1 == 0 goto label3;

        $i6 = specialinvoke r0.<com.sun.lwuit.List: int getCurrentSelected()>();

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i6);

        r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion> = null;

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = 0;

     label3:
        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i5 = interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i5;

     label4:
        virtualinvoke r0.<com.sun.lwuit.List: void setDragActivated(boolean)>(0);

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i7 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSelectedIndex()>();

        $i8 = specialinvoke r0.<com.sun.lwuit.List: int pointerSelect(int,int)>(i1, i2);

        $i10 = (int) -1;

        if $i8 <= $i10 goto label5;

        $i3 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i3 >= 9 goto label5;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i8);

     label5:
        if $i7 != $i8 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        r0.<com.sun.lwuit.List: boolean fireOnRelease> = $z2;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerPressed(int,int)>(i1, i2);

        return;
    }

    public void pointerHover(int[], int[])
    {
        com.sun.lwuit.list.ListModel $r3;
        com.sun.lwuit.List r0;
        int[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        virtualinvoke r0.<com.sun.lwuit.List: void clearDrag()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z0 != 0 goto label1;

        $i1 = r1[0];

        $i0 = r2[0];

        $i2 = specialinvoke r0.<com.sun.lwuit.List: int pointerSelect(int,int)>($i1, $i0);

        $i6 = (int) -1;

        if $i2 <= $i6 goto label1;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i2);

     label1:
        $i3 = r1[0];

        $i4 = r2[0];

        specialinvoke r0.<com.sun.lwuit.List: void pointerDraggedImpl(int,int)>($i3, $i4);

        return;
    }

    public void pointerDragged(int, int)
    {
        int i0, i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.List: void pointerDraggedImpl(int,int)>(i0, i1);

        return;
    }

    private void pointerDraggedImpl(int, int)
    {
        boolean $z0, $z1, $z2;
        com.sun.lwuit.list.ListModel $r1, $r3, $r4;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, $i24;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label09;

        $i3 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i3 >= 9 goto label01;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerDragged(int,int)>(i0, i1);

        goto label10;

     label01:
        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z1 != 0 goto label02;

        virtualinvoke r0.<com.sun.lwuit.List: void setDragActivated(boolean)>(1);

     label02:
        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i4 = r0.<com.sun.lwuit.List: int orientation>;

        if $i4 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        if $z2 == 0 goto label05;

        i21 = i1;

        i22 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        goto label06;

     label05:
        i21 = i0;

        i22 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

     label06:
        $i7 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i5 = r0.<com.sun.lwuit.List: int fixedDraggedPosition>;

        $i6 = $i5 - i21;

        $i8 = $i7 - $i6;

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = $i8;

        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i21;

        $i10 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i9 = neg i22;

        if $i10 > $i9 goto label07;

        $i17 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $i18 = $i17 + 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i18;

        $i19 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i20 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i19 < $i20 goto label08;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = 0;

        goto label08;

     label07:
        $i11 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        if $i11 < i22 goto label08;

        $i12 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $i13 = $i12 - 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i13;

        $i14 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        if $i14 >= 0 goto label08;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i15 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i16 = $i15 - 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i16;

     label08:
        $i23 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i24 = $i23 % i22;

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = $i24;

        goto label10;

     label09:
        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i2 = specialinvoke r0.<com.sun.lwuit.List: int pointerSelect(int,int)>(i0, i1);

        interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: void setSelectedIndex(int)>($i2);

     label10:
        return;
    }

    private int pointerSelect(int, int)
    {
        com.sun.lwuit.plaf.Style $r2;
        com.sun.lwuit.list.ListModel $r1;
        com.sun.lwuit.List r0;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.geom.Rectangle $r8;
        com.sun.lwuit.geom.Dimension $r3, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, i74, i75, i76, i77, i78, i79, i80, i81, i82, $i84, $i86;

        r0 := @this: com.sun.lwuit.List;

        i74 := @parameter0: int;

        i75 := @parameter1: int;

        $i84 = (int) -1;

        i76 = $i84;

        $r1 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i0 = interfaceinvoke $r1.<com.sun.lwuit.list.ListModel: int getSize()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.plaf.Style getStyle()>();

        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $r4 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        $r8 = new com.sun.lwuit.geom.Rectangle;

        specialinvoke $r8.<com.sun.lwuit.geom.Rectangle: void <init>()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.List: int getWidth()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i5 = $i3 - $i4;

        $i6 = virtualinvoke r0.<com.sun.lwuit.List: int getSideGap()>();

        i77 = $i5 - $i6;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isScrollableX()>();

        if $z0 == 0 goto label01;

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i65 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i66 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i67 = $i65 - $i66;

        $i68 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i69 = $i67 - $i68;

        $i70 = virtualinvoke r0.<com.sun.lwuit.List: int getSideGap()>();

        $i71 = $i69 - $i70;

        i77 = staticinvoke <java.lang.Math: int max(int,int)>(i77, $i71);

     label01:
        $i7 = virtualinvoke r0.<com.sun.lwuit.List: int getAbsoluteY()>();

        $i72 = i75 - $i7;

        $i8 = virtualinvoke r0.<com.sun.lwuit.List: int getAbsoluteX()>();

        $i73 = i74 - $i8;

        $i9 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i9 >= 9 goto label12;

        $i11 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $r6 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(1, 1);

        specialinvoke r0.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>($i11, i77, $r8, $r3, $r6, 1);

        $i12 = r0.<com.sun.lwuit.List: int orientation>;

        if $i12 == 1 goto label05;

        $i48 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getY()>();

        if $i72 >= $i48 goto label02;

        $i62 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i63 = r0.<com.sun.lwuit.List: int itemGap>;

        $i64 = $i62 + $i63;

        i76 = $i72 / $i64;

        goto label15;

     label02:
        $i49 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $i50 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i51 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i52 = $i50 + $i51;

        if $i72 >= $i52 goto label03;

        i76 = $i49;

        goto label04;

     label03:
        $i53 = $i49 + 1;

        $i54 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i55 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i56 = $i54 + $i55;

        $i57 = $i72 - $i56;

        $i58 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i59 = r0.<com.sun.lwuit.List: int itemGap>;

        $i60 = $i58 + $i59;

        $i61 = $i57 / $i60;

        i76 = $i53 + $i61;

     label04:
        goto label15;

     label05:
        $z2 = virtualinvoke r0.<com.sun.lwuit.List: boolean isRTL()>();

        if $z2 == 0 goto label08;

        $i30 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i31 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i32 = $i30 + $i31;

        if $i73 <= $i32 goto label06;

        $i40 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i41 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i42 = $i40 + $i41;

        i78 = $i73 - $i42;

        $i43 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i44 = r0.<com.sun.lwuit.List: int itemGap>;

        $i45 = $i43 + $i44;

        i79 = i78 / $i45;

        $i46 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $i47 = $i46 - 1;

        i76 = $i47 - i79;

        goto label15;

     label06:
        $i33 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        if $i73 < $i33 goto label07;

        i76 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        goto label15;

     label07:
        $i34 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        i80 = $i34 - $i73;

        $i35 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i36 = r0.<com.sun.lwuit.List: int itemGap>;

        $i37 = $i35 + $i36;

        i81 = i80 / $i37;

        $i38 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $i39 = $i38 + 1;

        i76 = $i39 + i81;

        goto label15;

     label08:
        $i13 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        if $i73 >= $i13 goto label09;

        $i27 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i28 = r0.<com.sun.lwuit.List: int itemGap>;

        $i29 = $i27 + $i28;

        i76 = $i73 / $i29;

        goto label15;

     label09:
        $i14 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $i15 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i16 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i17 = $i15 + $i16;

        if $i73 >= $i17 goto label10;

        i76 = $i14;

        goto label11;

     label10:
        $i18 = $i14 + 1;

        $i19 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i20 = virtualinvoke $r4.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i21 = $i19 + $i20;

        $i22 = $i73 - $i21;

        $i23 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i24 = r0.<com.sun.lwuit.List: int itemGap>;

        $i25 = $i23 + $i24;

        $i26 = $i22 / $i25;

        i76 = $i18 + $i26;

     label11:
        goto label15;

     label12:
        i82 = 0;

     label13:
        if i82 >= $i0 goto label15;

        specialinvoke r0.<com.sun.lwuit.List: void calculateComponentPosition(int,int,com.sun.lwuit.geom.Rectangle,com.sun.lwuit.geom.Dimension,com.sun.lwuit.geom.Dimension,boolean)>(i82, i77, $r8, $r3, $r4, 1);

        $z1 = virtualinvoke $r8.<com.sun.lwuit.geom.Rectangle: boolean contains(int,int)>($i73, $i72);

        if $z1 == 0 goto label14;

        i76 = i82;

        goto label15;

     label14:
        i82 = i82 + 1;

        goto label13;

     label15:
        if i76 < 0 goto label16;

        $i10 = virtualinvoke r0.<com.sun.lwuit.List: int size()>();

        if i76 < $i10 goto label17;

     label16:
        $i86 = (int) -1;

        return $i86;

     label17:
        return i76;
    }

    public void setFireOnClick(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean fireOnClick> = z0;

        return;
    }

    public void pointerHoverReleased(int[], int[])
    {
        int[] r1, r2;
        int $i0, $i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i1 = r1[0];

        $i0 = r2[0];

        specialinvoke r0.<com.sun.lwuit.List: void pointerReleasedImpl(int,int,boolean)>($i1, $i0, 1);

        return;
    }

    private void pointerReleasedImpl(int, int, boolean)
    {
        com.sun.lwuit.animations.Motion $r4, $r6, $r9;
        boolean $z0, z1, $z2, $z3, $z5, $z6;
        float $f0;
        com.sun.lwuit.list.ListModel $r3, $r8;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r2, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        com.sun.lwuit.Display $r1;
        com.sun.lwuit.Form $r5;

        r0 := @this: com.sun.lwuit.List;

        i14 := @parameter0: int;

        i15 := @parameter1: int;

        z1 := @parameter2: boolean;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z0 == 0 goto label08;

        $i1 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i1 >= 9 goto label01;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerReleased(int,int)>(i14, i15);

        goto label07;

     label01:
        $i2 = virtualinvoke r0.<com.sun.lwuit.List: int getOrientation()>();

        if $i2 != 0 goto label02;

        $z6 = 1;

        $z5 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

     label03:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $f0 = virtualinvoke $r1.<com.sun.lwuit.Display: float getDragSpeed(boolean)>($z6);

        if $z5 == 0 goto label04;

        $i9 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i10 = neg $i9;

        $r7 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i11 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $r8 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i12 = interfaceinvoke $r8.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i13 = $i11 * $i12;

        $r9 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>($i10, $i13, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion> = $r9;

        goto label05;

     label04:
        $i3 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i4 = neg $i3;

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i5 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel getModel()>();

        $i6 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i7 = $i5 * $i6;

        $r4 = staticinvoke <com.sun.lwuit.animations.Motion: com.sun.lwuit.animations.Motion createFrictionMotion(int,int,float,float)>($i4, $i7, $f0, 4.0E-4F);

        r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion> = $r4;

     label05:
        $i8 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = $i8;

        $r5 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.Form getComponentForm()>();

        if $r5 == null goto label06;

        virtualinvoke $r5.<com.sun.lwuit.Form: void registerAnimatedInternal(com.sun.lwuit.animations.Animation)>(r0);

     label06:
        $r6 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion>;

        virtualinvoke $r6.<com.sun.lwuit.animations.Motion: void start()>();

     label07:
        return;

     label08:
        if z1 != 0 goto label11;

        $z2 = r0.<com.sun.lwuit.List: boolean fireOnClick>;

        if $z2 == 0 goto label09;

        $i0 = r0.<com.sun.lwuit.List: int fixedSelection>;

        if $i0 < 9 goto label10;

     label09:
        $z3 = r0.<com.sun.lwuit.List: boolean fireOnRelease>;

        if $z3 == 0 goto label11;

     label10:
        virtualinvoke r0.<com.sun.lwuit.List: void fireActionEvent()>();

     label11:
        return;
    }

    public void pointerReleased(int, int)
    {
        int i0, i1;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.List: void pointerReleasedImpl(int,int,boolean)>(i0, i1, 0);

        return;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.geom.Dimension $r3;
        com.sun.lwuit.plaf.LookAndFeel $r1;
        com.sun.lwuit.List r2;
        com.sun.lwuit.plaf.UIManager $r0;

        r2 := @this: com.sun.lwuit.List;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $r3 = virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.geom.Dimension getListPreferredSize(com.sun.lwuit.List)>(r2);

        return $r3;
    }

    public void addItem(java.lang.Object)
    {
        com.sun.lwuit.List r0;
        java.lang.Object r1;
        com.sun.lwuit.list.ListModel $r2;

        r0 := @this: com.sun.lwuit.List;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        interfaceinvoke $r2.<com.sun.lwuit.list.ListModel: void addItem(java.lang.Object)>(r1);

        return;
    }

    public int getFixedSelection()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int fixedSelection>;

        return $i0;
    }

    public void setFixedSelection(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.List: int fixedSelection> = i0;

        return;
    }

    void deregisterAnimatedInternal()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int animationPosition>;

        if $i0 != 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void deregisterAnimatedInternal()>();

     label1:
        return;
    }

    public boolean animate()
    {
        com.sun.lwuit.animations.Motion $r1, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.list.ListModel $r3, $r4;
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, $i38, $i39;

        r0 := @this: com.sun.lwuit.List;

        $z0 = specialinvoke r0.<com.sun.lwuit.Component: boolean animate()>();

        $i0 = r0.<com.sun.lwuit.List: int animationPosition>;

        if $i0 == 0 goto label04;

        $r5 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion listMotion>;

        if $r5 == null goto label04;

        $z1 = virtualinvoke r0.<com.sun.lwuit.List: boolean isDragActivated()>();

        if $z1 != 0 goto label04;

        $i26 = r0.<com.sun.lwuit.List: int animationPosition>;

        if $i26 >= 0 goto label01;

        $r7 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion listMotion>;

        $i32 = virtualinvoke $r7.<com.sun.lwuit.animations.Motion: int getValue()>();

        $i33 = r0.<com.sun.lwuit.List: int destination>;

        $i34 = $i32 - $i33;

        $i35 = staticinvoke <java.lang.Math: int min(int,int)>($i34, 0);

        r0.<com.sun.lwuit.List: int animationPosition> = $i35;

        goto label02;

     label01:
        $i27 = r0.<com.sun.lwuit.List: int destination>;

        $r6 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion listMotion>;

        $i28 = virtualinvoke $r6.<com.sun.lwuit.animations.Motion: int getValue()>();

        $i29 = $i27 - $i28;

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>($i29, 0);

        r0.<com.sun.lwuit.List: int animationPosition> = $i30;

     label02:
        $i31 = r0.<com.sun.lwuit.List: int animationPosition>;

        if $i31 != 0 goto label03;

        virtualinvoke r0.<com.sun.lwuit.List: void deregisterAnimatedInternal()>();

     label03:
        return 1;

     label04:
        $r8 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion>;

        if $r8 == null goto label15;

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion>;

        $i1 = virtualinvoke $r1.<com.sun.lwuit.animations.Motion: int getValue()>();

        i2 = neg $i1;

        $i5 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i3 = r0.<com.sun.lwuit.List: int fixedDraggedPosition>;

        $i4 = $i3 - i2;

        $i6 = $i5 - $i4;

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = $i6;

        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i2;

        $r2 = virtualinvoke r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension getElementSize(boolean,boolean)>(0, 1);

        $i7 = r0.<com.sun.lwuit.List: int orientation>;

        if $i7 != 0 goto label05;

        i36 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        goto label06;

     label05:
        i36 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

     label06:
        $i9 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i8 = neg i36;

        if $i9 > $i8 goto label08;

        $i22 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $i23 = $i22 + 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i23;

        $i24 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $r4 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i25 = interfaceinvoke $r4.<com.sun.lwuit.list.ListModel: int getSize()>();

        if $i24 < $i25 goto label07;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = 0;

     label07:
        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i2;

        goto label10;

     label08:
        $i10 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        if $i10 < i36 goto label10;

        $i17 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        $i18 = $i17 - 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i18;

        $i19 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        if $i19 >= 0 goto label09;

        $r3 = r0.<com.sun.lwuit.List: com.sun.lwuit.list.ListModel model>;

        $i20 = interfaceinvoke $r3.<com.sun.lwuit.list.ListModel: int getSize()>();

        $i21 = $i20 - 1;

        r0.<com.sun.lwuit.List: int fixedDraggedSelection> = $i21;

     label09:
        r0.<com.sun.lwuit.List: int fixedDraggedPosition> = i2;

     label10:
        $i37 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i38 = $i37 % i36;

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = $i38;

        $r9 = r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion>;

        $z2 = virtualinvoke $r9.<com.sun.lwuit.animations.Motion: boolean isFinished()>();

        if $z2 == 0 goto label14;

        virtualinvoke r0.<com.sun.lwuit.List: void deregisterAnimatedInternal()>();

        $i11 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        if $i11 == 0 goto label13;

        $i12 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        if $i12 >= 0 goto label11;

        $i15 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        $i16 = neg $i15;

        r0.<com.sun.lwuit.List: int destination> = $i16;

        goto label12;

     label11:
        $i13 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        r0.<com.sun.lwuit.List: int destination> = $i13;

     label12:
        $i14 = r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition>;

        r0.<com.sun.lwuit.List: int animationPosition> = $i14;

        specialinvoke r0.<com.sun.lwuit.List: void initListMotion()>();

        r0.<com.sun.lwuit.List: int fixedDraggedAnimationPosition> = 0;

     label13:
        $i39 = r0.<com.sun.lwuit.List: int fixedDraggedSelection>;

        virtualinvoke r0.<com.sun.lwuit.List: void setSelectedIndex(int)>($i39);

        virtualinvoke r0.<com.sun.lwuit.List: void setDragActivated(boolean)>(0);

        r0.<com.sun.lwuit.List: com.sun.lwuit.animations.Motion fixedDraggedMotion> = null;

     label14:
        return 1;

     label15:
        return $z0;
    }

    protected boolean isTactileTouch(int, int)
    {
        int i0, i1, $i2, $i4;
        com.sun.lwuit.List r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.List: boolean isTactileTouch()>();

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<com.sun.lwuit.List: int pointerSelect(int,int)>(i0, i1);

        $i4 = (int) -1;

        if $i2 <= $i4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setBorderGap(int)
    {
        int i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.List: int borderGap> = i0;

        return;
    }

    public int getBorderGap()
    {
        int $i0;
        com.sun.lwuit.List r0;

        r0 := @this: com.sun.lwuit.List;

        $i0 = r0.<com.sun.lwuit.List: int borderGap>;

        return $i0;
    }

    public void setScrollToSelected(boolean)
    {
        com.sun.lwuit.List r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.List;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.List: boolean scrollToSelected> = z0;

        return;
    }

    protected java.lang.String paramString()
    {
        com.sun.lwuit.List r0;
        com.sun.lwuit.geom.Dimension $r1, $r18;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r15, $r19, r21;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r20;

        r0 := @this: com.sun.lwuit.List;

        r21 = "element size = ";

        $r1 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize>;

        if $r1 == null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("element size = ");

        $r18 = r0.<com.sun.lwuit.List: com.sun.lwuit.geom.Dimension elemSize>;

        $r19 = virtualinvoke $r18.<com.sun.lwuit.geom.Dimension: java.lang.String toString()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<com.sun.lwuit.Component: java.lang.String paramString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", itemGap = ");

        $i0 = r0.<com.sun.lwuit.List: int itemGap>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", orientation = ");

        $i1 = r0.<com.sun.lwuit.List: int orientation>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", selected index = ");

        $i2 = virtualinvoke r0.<com.sun.lwuit.List: int getSelectedIndex()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size = ");

        $i3 = virtualinvoke r0.<com.sun.lwuit.List: int size()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public static void <clinit>()
    {
        <com.sun.lwuit.List: int COMBO> = 2;

        <com.sun.lwuit.List: int HORIZONTAL> = 1;

        <com.sun.lwuit.List: int VERTICAL> = 0;

        <com.sun.lwuit.List: int FIXED_CENTER> = 12;

        <com.sun.lwuit.List: int FIXED_TRAIL> = 11;

        <com.sun.lwuit.List: int FIXED_LEAD> = 10;

        <com.sun.lwuit.List: int FIXED_NONE_BOUNDRY> = 9;

        <com.sun.lwuit.List: int FIXED_NONE_ONE_ELEMENT_MARGIN_FROM_EDGE> = 2;

        <com.sun.lwuit.List: int FIXED_NONE_CYCLIC> = 1;

        <com.sun.lwuit.List: int FIXED_NONE> = 0;

        return;
    }
}
