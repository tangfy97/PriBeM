public class com.hp.hpl.jena.sparql.util.TranslationTable extends java.lang.Object
{
    java.util.Map map;
    boolean ignoreCase;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.TranslationTable r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.TranslationTable: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.sparql.util.TranslationTable r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.util.TranslationTable: java.util.Map map> = $r1;

        r0.<com.hp.hpl.jena.sparql.util.TranslationTable: boolean ignoreCase> = 0;

        r0.<com.hp.hpl.jena.sparql.util.TranslationTable: boolean ignoreCase> = z0;

        return;
    }

    public java.lang.Object lookup(java.lang.String)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        com.hp.hpl.jena.sparql.util.TranslationTable r1;
        java.util.Set $r3;
        java.util.Map $r2;
        java.lang.Object $r5, $r7, $r9, $r10;
        java.lang.String r0, r8;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<com.hp.hpl.jena.sparql.util.TranslationTable: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r7;

        $z1 = r1.<com.hp.hpl.jena.sparql.util.TranslationTable: boolean ignoreCase>;

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r10;

     label3:
        $z2 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r9;

     label4:
        goto label2;

     label5:
        return null;
    }

    public void put(java.lang.String, java.lang.Object)
    {
        com.hp.hpl.jena.sparql.util.TranslationTable r0;
        java.util.Map $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.hp.hpl.jena.sparql.util.TranslationTable: java.util.Map map>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator keys()
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.util.TranslationTable r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.TranslationTable: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Iterator values()
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.util.TranslationTable r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: com.hp.hpl.jena.sparql.util.TranslationTable;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.TranslationTable: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }
}
