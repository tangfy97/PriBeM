public class ucar.nc2.util.net.URLStreamHandlerFactory extends java.lang.Object implements java.net.URLStreamHandlerFactory
{
    private static java.util.HashMap hash;
    private static boolean installed;

    public void <init>()
    {
        ucar.nc2.util.net.URLStreamHandlerFactory r0;

        r0 := @this: ucar.nc2.util.net.URLStreamHandlerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void install()
    {
        java.io.PrintStream $r3;
        java.lang.Error $r1;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0;
        ucar.nc2.util.net.URLStreamHandlerFactory $r0;

     label1:
        $z0 = <ucar.nc2.util.net.URLStreamHandlerFactory: boolean installed>;

        if $z0 != 0 goto label2;

        $r0 = new ucar.nc2.util.net.URLStreamHandlerFactory;

        specialinvoke $r0.<ucar.nc2.util.net.URLStreamHandlerFactory: void <init>()>();

        staticinvoke <java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>($r0);

        <ucar.nc2.util.net.URLStreamHandlerFactory: boolean installed> = 1;

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error installing URLStreamHandlerFactory ");

        $r5 = virtualinvoke $r1.<java.lang.Error: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label4:
        return;

        catch java.lang.Error from label1 to label2 with label3;
    }

    public static void register(java.lang.String, java.net.URLStreamHandler)
    {
        java.net.URLStreamHandler r3;
        java.util.HashMap $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URLStreamHandler;

        $r1 = <ucar.nc2.util.net.URLStreamHandlerFactory: java.util.HashMap hash>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r3);

        return;
    }

    public static java.net.URL makeURL(java.lang.String) throws java.net.MalformedURLException
    {
        java.lang.String r0;
        java.net.URL $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = <ucar.nc2.util.net.URLStreamHandlerFactory: boolean installed>;

        if $z0 == 0 goto label1;

        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r0);

        goto label2;

     label1:
        $r1 = staticinvoke <ucar.nc2.util.net.URLStreamHandlerFactory: java.net.URL makeURL(java.net.URL,java.lang.String)>(null, r0);

     label2:
        return $r1;
    }

    public static java.net.URL makeURL(java.net.URL, java.lang.String) throws java.net.MalformedURLException
    {
        java.net.MalformedURLException $r11;
        java.net.URL $r7, r8, $r9;
        java.net.URISyntaxException $r10;
        java.util.HashMap $r2;
        java.net.URLStreamHandler r6;
        java.lang.Object $r5;
        java.net.URI $r0;
        java.lang.String r1, $r3, $r4, $r12;
        boolean $z0;

        r8 := @parameter0: java.net.URL;

        r1 := @parameter1: java.lang.String;

        $z0 = <ucar.nc2.util.net.URLStreamHandlerFactory: boolean installed>;

        if $z0 == 0 goto label1;

        $r9 = new java.net.URL;

        specialinvoke $r9.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r8, r1);

        return $r9;

     label1:
        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>(r1);

        $r2 = <ucar.nc2.util.net.URLStreamHandlerFactory: java.util.HashMap hash>;

        $r3 = virtualinvoke $r0.<java.net.URI: java.lang.String getScheme()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (java.net.URLStreamHandler) $r5;

        $r7 = new java.net.URL;

        specialinvoke $r7.<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>(r8, r1, r6);

     label2:
        return $r7;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.net.MalformedURLException;

        $r12 = virtualinvoke $r10.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.net.MalformedURLException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public java.net.URLStreamHandler createURLStreamHandler(java.lang.String)
    {
        java.net.URLStreamHandler $r4;
        java.util.HashMap $r1;
        java.lang.Object $r3;
        java.lang.String r0, $r2;
        ucar.nc2.util.net.URLStreamHandlerFactory r5;

        r5 := @this: ucar.nc2.util.net.URLStreamHandlerFactory;

        r0 := @parameter0: java.lang.String;

        $r1 = <ucar.nc2.util.net.URLStreamHandlerFactory: java.util.HashMap hash>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.net.URLStreamHandler) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <ucar.nc2.util.net.URLStreamHandlerFactory: java.util.HashMap hash> = $r0;

        <ucar.nc2.util.net.URLStreamHandlerFactory: boolean installed> = 0;

        return;
    }
}
