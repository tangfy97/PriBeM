class org.mozilla.javascript.tools.debugger.MyTableModel extends javax.swing.table.AbstractTableModel
{
    private static final long serialVersionUID;
    private org.mozilla.javascript.tools.debugger.SwingGui debugGui;
    private java.util.Vector expressions;
    private java.util.Vector values;

    public void <init>(org.mozilla.javascript.tools.debugger.SwingGui)
    {
        java.util.Vector $r2, $r3, $r4, $r5;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;
        org.mozilla.javascript.tools.debugger.SwingGui r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        r1 := @parameter0: org.mozilla.javascript.tools.debugger.SwingGui;

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.MyTableModel: org.mozilla.javascript.tools.debugger.SwingGui debugGui> = r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values> = $r3;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>("");

        $r5 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>("");

        return;
    }

    public int getColumnCount()
    {
        org.mozilla.javascript.tools.debugger.MyTableModel r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        return 2;
    }

    public int getRowCount()
    {
        int $i0;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;
        java.util.Vector $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        int i0;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return "Expression";

     label2:
        return "Value";

     label3:
        return null;
    }

    public boolean isCellEditable(int, int)
    {
        int i0, i1;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 1;
    }

    public java.lang.Object getValueAt(int, int)
    {
        java.util.Vector $r1, $r3;
        int i0, i1;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;
        java.lang.Object $r2, $r4;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        return $r4;

     label2:
        $r1 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        return $r2;

     label3:
        return "";
    }

    public void setValueAt(java.lang.Object, int, int)
    {
        java.util.Vector $r3, $r4, $r5, $r10, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, $r8, r9;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;
        java.lang.Object r1;
        org.mozilla.javascript.tools.debugger.Dim $r7;
        org.mozilla.javascript.tools.debugger.SwingGui $r6;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        r1 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        virtualinvoke $r3.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r2, i1);

        r9 = "";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        $r6 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: org.mozilla.javascript.tools.debugger.SwingGui debugGui>;

        $r7 = $r6.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim>;

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.tools.debugger.Dim: java.lang.String eval(java.lang.String)>($r2);

        r9 = $r8;

        if $r8 != null goto label2;

        r9 = "";

     label2:
        $r10 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values>;

        virtualinvoke $r10.<java.util.Vector: void setElementAt(java.lang.Object,int)>(r9, i1);

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTableModel: void updateModel()>();

        $i5 = i1 + 1;

        $r11 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        $i6 = virtualinvoke $r11.<java.util.Vector: int size()>();

        if $i5 != $i6 goto label4;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>("");

        $r5 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>("");

        $i4 = i1 + 1;

        $i3 = i1 + 1;

        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTableModel: void fireTableRowsInserted(int,int)>($i4, $i3);

        goto label4;

     label3:
        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTableModel: void fireTableDataChanged()>();

     label4:
        return;
    }

    void updateModel()
    {
        java.util.Vector $r1, $r2, $r10;
        int $i0, $i1, i2;
        org.mozilla.javascript.tools.debugger.MyTableModel r0;
        java.lang.Object $r3;
        java.lang.String $r4, $r7, r8, $r9;
        org.mozilla.javascript.tools.debugger.Dim $r6;
        org.mozilla.javascript.tools.debugger.SwingGui $r5;

        r0 := @this: org.mozilla.javascript.tools.debugger.MyTableModel;

        i2 = 0;

     label1:
        $r1 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i2 >= $i0 goto label4;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector expressions>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r5 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: org.mozilla.javascript.tools.debugger.SwingGui debugGui>;

        $r6 = $r5.<org.mozilla.javascript.tools.debugger.SwingGui: org.mozilla.javascript.tools.debugger.Dim dim>;

        $r7 = virtualinvoke $r6.<org.mozilla.javascript.tools.debugger.Dim: java.lang.String eval(java.lang.String)>($r4);

        r8 = $r7;

        if $r7 != null goto label3;

        r8 = "";

        goto label3;

     label2:
        r8 = "";

     label3:
        $r9 = virtualinvoke r8.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r10 = r0.<org.mozilla.javascript.tools.debugger.MyTableModel: java.util.Vector values>;

        virtualinvoke $r10.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r9, i2);

        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<org.mozilla.javascript.tools.debugger.MyTableModel: void fireTableDataChanged()>();

        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.debugger.MyTableModel: long serialVersionUID> = 2971618907207577000L;

        return;
    }
}
