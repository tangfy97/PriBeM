public class org.codehaus.groovy.control.CompilationUnit extends org.codehaus.groovy.control.ProcessingUnit
{
    protected java.util.Map sources;
    protected java.util.Map summariesBySourceName;
    protected java.util.Map summariesByPublicClassName;
    protected java.util.Map classSourcesByPublicClassName;
    protected java.util.List names;
    protected java.util.LinkedList queuedSources;
    protected org.codehaus.groovy.ast.CompileUnit ast;
    protected java.util.List generatedClasses;
    protected org.codehaus.groovy.classgen.Verifier verifier;
    protected boolean debug;
    protected boolean configured;
    protected org.codehaus.groovy.control.CompilationUnit$ClassgenCallback classgenCallback;
    protected org.codehaus.groovy.control.CompilationUnit$ProgressCallback progressCallback;
    protected org.codehaus.groovy.control.ResolveVisitor resolveVisitor;
    protected org.codehaus.groovy.control.StaticImportVisitor staticImportVisitor;
    java.util.LinkedList[] phaseOperations;
    private final org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation resolve;
    private org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation staticImport;
    private org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation convert;
    private org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation output;
    private org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation compileCompleteCheck;
    private org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation classgen;
    private org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation mark;

    public void <init>()
    {
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(null, null, null);

        return;
    }

    public void <init>(groovy.lang.GroovyClassLoader)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        groovy.lang.GroovyClassLoader r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: groovy.lang.GroovyClassLoader;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(null, null, r1);

        return;
    }

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.CompilerConfiguration r1;
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(r1, null, null);

        return;
    }

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration, java.security.CodeSource, groovy.lang.GroovyClassLoader)
    {
        org.codehaus.groovy.control.CompilationUnit$1 $r26;
        org.codehaus.groovy.control.CompilationUnit$5 $r3;
        org.codehaus.groovy.control.CompilationUnit$2 $r28;
        org.codehaus.groovy.control.CompilationUnit$8 $r6;
        org.codehaus.groovy.control.CompilationUnit$9 $r7;
        org.codehaus.groovy.control.CompilationUnit$6 $r4;
        org.codehaus.groovy.control.CompilationUnit$7 $r5;
        org.codehaus.groovy.control.StaticImportVisitor $r23;
        org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation $r33;
        org.codehaus.groovy.control.ResolveVisitor $r22;
        org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation $r27, $r29, $r31;
        java.util.LinkedList[] $r24, $r25, $r35;
        groovy.lang.GroovyClassLoader r2, $r19;
        org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation $r30, $r32;
        java.util.HashMap $r12, $r13, $r14, $r15;
        org.codehaus.groovy.classgen.Verifier $r21;
        java.util.ArrayList $r10, $r20;
        org.codehaus.groovy.control.CompilationUnit r0;
        int $i0, i1;
        org.codehaus.groovy.control.CompilationUnit$10 $r8;
        java.util.LinkedList $r11, $r34;
        org.codehaus.groovy.control.CompilationUnit$11 $r9;
        org.codehaus.groovy.control.CompilerConfiguration r1, $r18;
        org.codehaus.groovy.ast.CompileUnit $r16;
        java.security.CodeSource r17;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        r17 := @parameter1: java.security.CodeSource;

        r2 := @parameter2: groovy.lang.GroovyClassLoader;

        specialinvoke r0.<org.codehaus.groovy.control.ProcessingUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r1, r2, null);

        $r3 = new org.codehaus.groovy.control.CompilationUnit$5;

        specialinvoke $r3.<org.codehaus.groovy.control.CompilationUnit$5: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation resolve> = $r3;

        $r4 = new org.codehaus.groovy.control.CompilationUnit$6;

        specialinvoke $r4.<org.codehaus.groovy.control.CompilationUnit$6: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation staticImport> = $r4;

        $r5 = new org.codehaus.groovy.control.CompilationUnit$7;

        specialinvoke $r5.<org.codehaus.groovy.control.CompilationUnit$7: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation convert> = $r5;

        $r6 = new org.codehaus.groovy.control.CompilationUnit$8;

        specialinvoke $r6.<org.codehaus.groovy.control.CompilationUnit$8: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation output> = $r6;

        $r7 = new org.codehaus.groovy.control.CompilationUnit$9;

        specialinvoke $r7.<org.codehaus.groovy.control.CompilationUnit$9: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation compileCompleteCheck> = $r7;

        $r8 = new org.codehaus.groovy.control.CompilationUnit$10;

        specialinvoke $r8.<org.codehaus.groovy.control.CompilationUnit$10: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation classgen> = $r8;

        $r9 = new org.codehaus.groovy.control.CompilationUnit$11;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationUnit$11: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation mark> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List names> = $r10;

        $r11 = new java.util.LinkedList;

        specialinvoke $r11.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map sources> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map summariesBySourceName> = $r13;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map summariesByPublicClassName> = $r14;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map classSourcesByPublicClassName> = $r15;

        $r16 = new org.codehaus.groovy.ast.CompileUnit;

        $r19 = r0.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        $r18 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        specialinvoke $r16.<org.codehaus.groovy.ast.CompileUnit: void <init>(groovy.lang.GroovyClassLoader,java.security.CodeSource,org.codehaus.groovy.control.CompilerConfiguration)>($r19, r17, $r18);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast> = $r16;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List generatedClasses> = $r20;

        $r21 = new org.codehaus.groovy.classgen.Verifier;

        specialinvoke $r21.<org.codehaus.groovy.classgen.Verifier: void <init>()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.classgen.Verifier verifier> = $r21;

        $r22 = new org.codehaus.groovy.control.ResolveVisitor;

        specialinvoke $r22.<org.codehaus.groovy.control.ResolveVisitor: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ResolveVisitor resolveVisitor> = $r22;

        $r23 = new org.codehaus.groovy.control.StaticImportVisitor;

        specialinvoke $r23.<org.codehaus.groovy.control.StaticImportVisitor: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.StaticImportVisitor staticImportVisitor> = $r23;

        $r24 = newarray (java.util.LinkedList)[10];

        r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations> = $r24;

        i1 = 0;

     label1:
        $r25 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $i0 = lengthof $r25;

        if i1 >= $i0 goto label2;

        $r35 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $r34 = new java.util.LinkedList;

        specialinvoke $r34.<java.util.LinkedList: void <init>()>();

        $r35[i1] = $r34;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r26 = new org.codehaus.groovy.control.CompilationUnit$1;

        specialinvoke $r26.<org.codehaus.groovy.control.CompilationUnit$1: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation,int)>($r26, 2);

        $r27 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation convert>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation,int)>($r27, 3);

        $r28 = new org.codehaus.groovy.control.CompilationUnit$2;

        specialinvoke $r28.<org.codehaus.groovy.control.CompilationUnit$2: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r0);

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r28, 3);

        $r29 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation resolve>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation,int)>($r29, 4);

        $r30 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation staticImport>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r30, 4);

        $r31 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation compileCompleteCheck>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation,int)>($r31, 5);

        $r32 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation classgen>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r32, 7);

        $r33 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation output>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation)>($r33);

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$ClassgenCallback classgenCallback> = null;

        return;
    }

    public void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation, int)
    {
        java.util.LinkedList[] $r7;
        java.lang.IllegalArgumentException $r0;
        org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation r8;
        org.codehaus.groovy.control.CompilationUnit r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4;
        int i0;
        java.lang.String $r5;
        java.util.LinkedList $r9;

        r6 := @this: org.codehaus.groovy.control.CompilationUnit;

        r8 := @parameter0: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= 9 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("phase ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is unknown");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label2:
        $r7 = r6.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $r9 = $r7[i0];

        virtualinvoke $r9.<java.util.LinkedList: boolean add(java.lang.Object)>(r8);

        return;
    }

    public void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation, int)
    {
        java.util.LinkedList[] $r7;
        org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation r8;
        java.lang.IllegalArgumentException $r0;
        org.codehaus.groovy.control.CompilationUnit r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4;
        int i0;
        java.lang.String $r5;
        java.util.LinkedList $r9;

        r6 := @this: org.codehaus.groovy.control.CompilationUnit;

        r8 := @parameter0: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        if i0 <= 9 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("phase ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is unknown");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label2:
        $r7 = r6.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $r9 = $r7[i0];

        virtualinvoke $r9.<java.util.LinkedList: boolean add(java.lang.Object)>(r8);

        return;
    }

    public void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation)
    {
        java.util.LinkedList[] $r1;
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation r2;
        java.util.LinkedList $r3;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r2 := @parameter0: org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $r3 = $r1[8];

        virtualinvoke $r3.<java.util.LinkedList: void addFirst(java.lang.Object)>(r2);

        return;
    }

    public void configure(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        groovy.lang.GroovyClassLoader $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<org.codehaus.groovy.control.ProcessingUnit: void configure(org.codehaus.groovy.control.CompilerConfiguration)>(r1);

        $z0 = virtualinvoke r1.<org.codehaus.groovy.control.CompilerConfiguration: boolean getDebug()>();

        r0.<org.codehaus.groovy.control.CompilationUnit: boolean debug> = $z0;

        $z1 = r0.<org.codehaus.groovy.control.CompilationUnit: boolean configured>;

        if $z1 != 0 goto label1;

        $r2 = r0.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        $z2 = $r2 instanceof groovy.lang.GroovyClassLoader;

        if $z2 == 0 goto label1;

        $r3 = r0.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void appendCompilerConfigurationClasspathToClassLoader(org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader)>(r1, $r3);

     label1:
        r0.<org.codehaus.groovy.control.CompilationUnit: boolean configured> = 1;

        return;
    }

    private void appendCompilerConfigurationClasspathToClassLoader(org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader)
    {
        org.codehaus.groovy.control.CompilerConfiguration r1;
        org.codehaus.groovy.control.CompilationUnit r0;
        groovy.lang.GroovyClassLoader r2;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        r2 := @parameter1: groovy.lang.GroovyClassLoader;

        return;
    }

    public org.codehaus.groovy.ast.CompileUnit getAST()
    {
        org.codehaus.groovy.ast.CompileUnit $r1;
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        return $r1;
    }

    public java.util.Map getSummariesBySourceName()
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map summariesBySourceName>;

        return $r1;
    }

    public java.util.Map getSummariesByPublicClassName()
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map summariesByPublicClassName>;

        return $r1;
    }

    public java.util.Map getClassSourcesByPublicClassName()
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map classSourcesByPublicClassName>;

        return $r1;
    }

    public boolean isPublicClass(java.lang.String)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map summariesByPublicClassName>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.List getClasses()
    {
        java.util.List $r1;
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List generatedClasses>;

        return $r1;
    }

    public org.codehaus.groovy.ast.ClassNode getFirstClassNode()
    {
        org.codehaus.groovy.ast.ClassNode $r7;
        org.codehaus.groovy.ast.ModuleNode $r4;
        java.util.List $r2, $r5;
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.ast.CompileUnit $r1;
        java.lang.Object $r3, $r6;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.CompileUnit: java.util.List getModules()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.codehaus.groovy.ast.ModuleNode) $r3;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.ast.ModuleNode: java.util.List getClasses()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.codehaus.groovy.ast.ClassNode) $r6;

        return $r7;
    }

    public org.codehaus.groovy.ast.ClassNode getClassNode(java.lang.String)
    {
        org.codehaus.groovy.control.CompilationUnit r2;
        org.codehaus.groovy.ast.ClassNode $r5;
        org.codehaus.groovy.control.CompilationUnit$3 $r1;
        org.codehaus.groovy.ast.ClassNode[] $r0;
        org.codehaus.groovy.control.CompilationFailedException $r4;
        java.lang.String r3;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.control.CompilationUnit;

        r3 := @parameter0: java.lang.String;

        $r0 = newarray (org.codehaus.groovy.ast.ClassNode)[1];

        $r0[0] = null;

        $r1 = new org.codehaus.groovy.control.CompilationUnit$3;

        specialinvoke $r1.<org.codehaus.groovy.control.CompilationUnit$3: void <init>(org.codehaus.groovy.control.CompilationUnit,java.lang.String,org.codehaus.groovy.ast.ClassNode[])>(r2, r3, $r0);

     label1:
        virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: void applyToPrimaryClassNodes(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation)>($r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $z0 = r2.<org.codehaus.groovy.control.CompilationUnit: boolean debug>;

        if $z0 == 0 goto label4;

        virtualinvoke $r4.<org.codehaus.groovy.control.CompilationFailedException: void printStackTrace()>();

     label4:
        $r5 = $r0[0];

        return $r5;

        catch org.codehaus.groovy.control.CompilationFailedException from label1 to label2 with label3;
    }

    public void addSources(java.lang.String[])
    {
        org.codehaus.groovy.control.CompilationUnit r3;
        int $i0, i1;
        java.lang.String[] r0;
        java.lang.String $r2;
        java.io.File $r1;

        r3 := @this: org.codehaus.groovy.control.CompilationUnit;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = new java.io.File;

        $r2 = r0[i1];

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke r3.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void addSources(java.io.File[])
    {
        org.codehaus.groovy.control.CompilationUnit r1;
        int $i0, i1;
        java.io.File[] r0;
        java.io.File $r2;

        r1 := @this: org.codehaus.groovy.control.CompilationUnit;

        r0 := @parameter0: java.io.File[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        virtualinvoke r1.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.codehaus.groovy.control.SourceUnit addSource(java.io.File)
    {
        org.codehaus.groovy.control.ErrorCollector $r5;
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.SourceUnit $r1, $r6;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyClassLoader $r4;
        java.io.File r2;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r2 := @parameter0: java.io.File;

        $r1 = new org.codehaus.groovy.control.SourceUnit;

        $r3 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r4 = r0.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        specialinvoke $r1.<org.codehaus.groovy.control.SourceUnit: void <init>(java.io.File,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r2, $r3, $r4, $r5);

        $r6 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(org.codehaus.groovy.control.SourceUnit)>($r1);

        return $r6;
    }

    public org.codehaus.groovy.control.SourceUnit addSource(java.net.URL)
    {
        org.codehaus.groovy.control.ErrorCollector $r5;
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.SourceUnit $r1, $r6;
        java.net.URL r2;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyClassLoader $r4;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r2 := @parameter0: java.net.URL;

        $r1 = new org.codehaus.groovy.control.SourceUnit;

        $r3 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r4 = r0.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        specialinvoke $r1.<org.codehaus.groovy.control.SourceUnit: void <init>(java.net.URL,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r2, $r3, $r4, $r5);

        $r6 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(org.codehaus.groovy.control.SourceUnit)>($r1);

        return $r6;
    }

    public org.codehaus.groovy.control.SourceUnit addSource(java.lang.String, java.io.InputStream)
    {
        org.codehaus.groovy.control.ErrorCollector $r8;
        org.codehaus.groovy.control.SourceUnit $r4, $r9;
        org.codehaus.groovy.control.CompilerConfiguration $r3, $r6;
        org.codehaus.groovy.control.io.InputStreamReaderSource $r0;
        org.codehaus.groovy.control.CompilationUnit r2;
        java.lang.String r5;
        groovy.lang.GroovyClassLoader $r7;
        java.io.InputStream r1;

        r2 := @this: org.codehaus.groovy.control.CompilationUnit;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.InputStream;

        $r0 = new org.codehaus.groovy.control.io.InputStreamReaderSource;

        $r3 = r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        specialinvoke $r0.<org.codehaus.groovy.control.io.InputStreamReaderSource: void <init>(java.io.InputStream,org.codehaus.groovy.control.CompilerConfiguration)>(r1, $r3);

        $r4 = new org.codehaus.groovy.control.SourceUnit;

        $r6 = r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r7 = r2.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        $r8 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        specialinvoke $r4.<org.codehaus.groovy.control.SourceUnit: void <init>(java.lang.String,org.codehaus.groovy.control.io.ReaderSource,org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader,org.codehaus.groovy.control.ErrorCollector)>(r5, $r0, $r6, $r7, $r8);

        $r9 = virtualinvoke r2.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(org.codehaus.groovy.control.SourceUnit)>($r4);

        return $r9;
    }

    public org.codehaus.groovy.control.SourceUnit addSource(org.codehaus.groovy.control.SourceUnit)
    {
        java.util.Iterator $r5;
        org.codehaus.groovy.control.SourceUnit r0, r8;
        org.codehaus.groovy.control.CompilationUnit r2;
        java.lang.Object $r7;
        java.lang.String $r1, $r9;
        java.util.LinkedList $r4, $r6;
        groovy.lang.GroovyClassLoader $r3;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.control.CompilationUnit;

        r0 := @parameter0: org.codehaus.groovy.control.SourceUnit;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: java.lang.String getName()>();

        $r3 = r2.<org.codehaus.groovy.control.CompilationUnit: groovy.lang.GroovyClassLoader classLoader>;

        virtualinvoke r0.<org.codehaus.groovy.control.SourceUnit: void setClassLoader(groovy.lang.GroovyClassLoader)>($r3);

        $r4 = r2.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.codehaus.groovy.control.SourceUnit) $r7;

        $r9 = virtualinvoke r8.<org.codehaus.groovy.control.SourceUnit: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        return r8;

     label2:
        goto label1;

     label3:
        $r6 = r2.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources>;

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>(r0);

        return r0;
    }

    public java.util.Iterator iterator()
    {
        org.codehaus.groovy.control.CompilationUnit$4 $r0;
        org.codehaus.groovy.control.CompilationUnit r1;

        r1 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r0 = new org.codehaus.groovy.control.CompilationUnit$4;

        specialinvoke $r0.<org.codehaus.groovy.control.CompilationUnit$4: void <init>(org.codehaus.groovy.control.CompilationUnit)>(r1);

        return $r0;
    }

    public void addClassNode(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.control.CompilationUnit r1;
        org.codehaus.groovy.ast.ClassNode r4;
        org.codehaus.groovy.ast.CompileUnit $r2, $r3;
        org.codehaus.groovy.ast.ModuleNode $r0;

        r1 := @this: org.codehaus.groovy.control.CompilationUnit;

        r4 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        $r0 = new org.codehaus.groovy.ast.ModuleNode;

        $r2 = r1.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        specialinvoke $r0.<org.codehaus.groovy.ast.ModuleNode: void <init>(org.codehaus.groovy.ast.CompileUnit)>($r2);

        $r3 = r1.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        virtualinvoke $r3.<org.codehaus.groovy.ast.CompileUnit: void addModule(org.codehaus.groovy.ast.ModuleNode)>($r0);

        virtualinvoke $r0.<org.codehaus.groovy.ast.ModuleNode: void addClass(org.codehaus.groovy.ast.ClassNode)>(r4);

        return;
    }

    public void setClassgenCallback(org.codehaus.groovy.control.CompilationUnit$ClassgenCallback)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.CompilationUnit$ClassgenCallback r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilationUnit$ClassgenCallback;

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$ClassgenCallback classgenCallback> = r1;

        return;
    }

    public void setProgressCallback(org.codehaus.groovy.control.CompilationUnit$ProgressCallback)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.CompilationUnit$ProgressCallback r1;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilationUnit$ProgressCallback;

        r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$ProgressCallback progressCallback> = r1;

        return;
    }

    public void compile() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void compile(int)>(9);

        return;
    }

    public void compile(int) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation $r11;
        org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation $r9;
        org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation $r6, $r10;
        org.codehaus.groovy.control.CompilationUnit r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.util.LinkedList $r3;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.groovy.control.ErrorCollector $r1;
        java.util.LinkedList[] $r2;
        java.util.Iterator $r4;
        org.codehaus.groovy.control.CompilationUnit$ProgressCallback $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        i7 := @parameter0: int;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void gotoPhase(int)>(1);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(i7, 9);

     label1:
        $i8 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i0 < $i8 goto label9;

        $i1 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i1 > 9 goto label9;

        $r2 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList[] phaseOperations>;

        $i2 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        $r3 = $r2[$i2];

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z2 = $r8 instanceof org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation;

        if $z2 == 0 goto label3;

        $r11 = (org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation) $r8;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void applyToPrimaryClassNodes(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation)>($r11);

        goto label5;

     label3:
        $z3 = $r8 instanceof org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation;

        if $z3 == 0 goto label4;

        $r10 = (org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation) $r8;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void applyToSourceUnits(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation)>($r10);

        goto label5;

     label4:
        $r9 = (org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation) $r8;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void applyToGeneratedGroovyClasses(org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation)>($r9);

     label5:
        goto label2;

     label6:
        $r5 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$ProgressCallback progressCallback>;

        if $r5 == null goto label7;

        $r7 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$ProgressCallback progressCallback>;

        $i6 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        virtualinvoke $r7.<org.codehaus.groovy.control.CompilationUnit$ProgressCallback: void call(org.codehaus.groovy.control.ProcessingUnit,int)>(r0, $i6);

     label7:
        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void completePhase()>();

        $r6 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation mark>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void applyToSourceUnits(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation)>($r6);

        $z1 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: boolean dequeued()>();

        if $z1 == 0 goto label8;

        goto label1;

     label8:
        $i3 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        $i4 = $i3 + 1;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void gotoPhase(int)>($i4);

        $i5 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i5 != 7 goto label1;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void sortClasses()>();

        goto label1;

     label9:
        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector errorCollector>;

        virtualinvoke $r1.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;
    }

    private void sortClasses() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.ast.ModuleNode r5;
        java.util.HashSet $r11;
        org.codehaus.groovy.control.CompilationUnit r0;
        java.lang.StringBuffer $r16, $r17, $r19, $r20, $r22;
        java.lang.String $r12, $r13, $r18, $r21, $r23;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.control.ErrorCollector $r8, $r14;
        java.util.Iterator $r3, $r7;
        org.codehaus.groovy.control.messages.SimpleMessage $r15;
        org.codehaus.groovy.ast.ClassNode r10, r24;
        java.util.List $r2, $r6;
        org.codehaus.groovy.ast.CompileUnit $r1;
        java.lang.Object $r4, $r9;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.CompileUnit: java.util.List getModules()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.groovy.ast.ModuleNode) $r4;

        $r6 = virtualinvoke r5.<org.codehaus.groovy.ast.ModuleNode: java.util.List getClasses()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.codehaus.groovy.ast.ClassNode) $r9;

        r24 = r10;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

     label3:
        $r12 = virtualinvoke r24.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z2 == 0 goto label4;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r15 = new org.codehaus.groovy.control.messages.SimpleMessage;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cyclic inheritance involving ");

        $r18 = virtualinvoke r24.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in class ");

        $r21 = virtualinvoke r10.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.codehaus.groovy.control.messages.SimpleMessage: void <init>(java.lang.String,org.codehaus.groovy.control.ProcessingUnit)>($r23, r0);

        virtualinvoke $r14.<org.codehaus.groovy.control.ErrorCollector: void addErrorAndContinue(org.codehaus.groovy.control.messages.Message)>($r15);

        r24 = null;

        goto label5;

     label4:
        $r13 = virtualinvoke r24.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r13);

        r24 = virtualinvoke r24.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode getSuperClass()>();

     label5:
        if r24 != null goto label3;

        goto label2;

     label6:
        $r8 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector errorCollector>;

        virtualinvoke $r8.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        virtualinvoke r5.<org.codehaus.groovy.ast.ModuleNode: void sortClasses()>();

        goto label1;

     label7:
        return;
    }

    protected boolean dequeued() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.SourceUnit r4;
        java.util.List $r6;
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r7;
        java.lang.Object $r3;
        java.lang.String $r5;
        java.util.LinkedList $r1, $r2, $r8;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

     label3:
        $r8 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources>;

        $z3 = virtualinvoke $r8.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        $r2 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.LinkedList queuedSources>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r4 = (org.codehaus.groovy.control.SourceUnit) $r3;

        $r5 = virtualinvoke r4.<org.codehaus.groovy.control.SourceUnit: java.lang.String getName()>();

        $r6 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List names>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r7 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map sources>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r4);

        goto label3;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void gotoPhase(int)>(1);

     label5:
        return z1;
    }

    protected groovyjarjarasm.asm.ClassVisitor createClassVisitor()
    {
        groovyjarjarasm.asm.ClassWriter $r0;
        org.codehaus.groovy.control.CompilationUnit r1;

        r1 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r0 = new groovyjarjarasm.asm.ClassWriter;

        specialinvoke $r0.<groovyjarjarasm.asm.ClassWriter: void <init>(boolean)>(1);

        return $r0;
    }

    protected void mark() throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation $r1;
        org.codehaus.groovy.control.CompilationUnit r0;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation mark>;

        virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void applyToSourceUnits(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation)>($r1);

        return;
    }

    public void applyToSourceUnits(org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation r9;
        org.codehaus.groovy.control.CompilationUnit r0;
        java.util.Map $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.String r5;
        boolean $z0, $z1;
        org.codehaus.groovy.control.ErrorCollector $r3;
        java.util.Iterator $r2;
        org.codehaus.groovy.control.SourceUnit r8;
        java.lang.Exception $r11;
        org.codehaus.groovy.GroovyBugError $r10, $r12;
        java.util.List $r1;
        org.codehaus.groovy.control.CompilationFailedException $r13;
        java.lang.Object $r4, $r7;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r9 := @parameter0: org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List names>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.Map sources>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r8 = (org.codehaus.groovy.control.SourceUnit) $r7;

        $i1 = r8.<org.codehaus.groovy.control.SourceUnit: int phase>;

        $i0 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i1 < $i0 goto label2;

        $i3 = r8.<org.codehaus.groovy.control.SourceUnit: int phase>;

        $i2 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i3 != $i2 goto label7;

        $z1 = r8.<org.codehaus.groovy.control.SourceUnit: boolean phaseComplete>;

        if $z1 != 0 goto label7;

     label2:
        virtualinvoke r9.<org.codehaus.groovy.control.CompilationUnit$SourceUnitOperation: void call(org.codehaus.groovy.control.SourceUnit)>(r8);

     label3:
        goto label7;

     label4:
        $r13 := @caughtexception;

        throw $r13;

     label5:
        $r11 := @caughtexception;

        $r12 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r12.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.Exception)>($r11);

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void changeBugText(org.codehaus.groovy.GroovyBugError,org.codehaus.groovy.control.SourceUnit)>($r12, r8);

        throw $r12;

     label6:
        $r10 := @caughtexception;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void changeBugText(org.codehaus.groovy.GroovyBugError,org.codehaus.groovy.control.SourceUnit)>($r10, r8);

        throw $r10;

     label7:
        goto label1;

     label8:
        $r3 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r3.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;

        catch org.codehaus.groovy.control.CompilationFailedException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
        catch org.codehaus.groovy.GroovyBugError from label2 to label3 with label6;
    }

    private java.util.List getPrimaryClassNodes(boolean)
    {
        org.codehaus.groovy.ast.ModuleNode r14;
        java.util.ArrayList $r19;
        org.codehaus.groovy.control.CompilationUnit r1;
        int[] r16, r17;
        int $i0, $i1, i2, i3, $i5, $i7;
        boolean $z0, z1, $z2, $z3, $z4;
        java.util.Iterator $r4, $r5, $r12;
        org.codehaus.groovy.ast.ClassNode r9, r15, r18;
        java.util.List $r3, $r6, $r7, $r11;
        org.codehaus.groovy.ast.CompileUnit $r2;
        java.lang.Object $r8, $r10, $r13;

        r1 := @this: org.codehaus.groovy.control.CompilationUnit;

        z1 := @parameter0: boolean;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.CompileUnit: java.util.List getModules()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.codehaus.groovy.ast.ModuleNode) $r10;

        $r11 = virtualinvoke r14.<org.codehaus.groovy.ast.ModuleNode: java.util.List getClasses()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label03;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.codehaus.groovy.ast.ClassNode) $r13;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r15);

        goto label02;

     label03:
        goto label01;

     label04:
        if z1 != 0 goto label05;

        return $r19;

     label05:
        $i0 = interfaceinvoke $r19.<java.util.List: int size()>();

        r16 = newarray (int)[$i0];

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        r17 = newarray (int)[$i1];

        i2 = 0;

        $r5 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.codehaus.groovy.ast.ClassNode) $r8;

        i3 = 0;

        r18 = r9;

     label07:
        if r18 == null goto label08;

        i3 = i3 + 1;

        r18 = virtualinvoke r18.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ClassNode getSuperClass()>();

        goto label07;

     label08:
        $z3 = virtualinvoke r9.<org.codehaus.groovy.ast.ClassNode: boolean isInterface()>();

        if $z3 == 0 goto label09;

        r17[i2] = i3;

        $i5 = (int) -1;

        r16[i2] = $i5;

        goto label10;

     label09:
        r16[i2] = i3;

        $i7 = (int) -1;

        r17[i2] = $i7;

     label10:
        i2 = i2 + 1;

        goto label06;

     label11:
        $r6 = specialinvoke r1.<org.codehaus.groovy.control.CompilationUnit: java.util.List getSorted(int[],java.util.List)>(r17, $r19);

        $r7 = specialinvoke r1.<org.codehaus.groovy.control.CompilationUnit: java.util.List getSorted(int[],java.util.List)>(r16, $r19);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return $r6;
    }

    private java.util.List getSorted(int[], java.util.List)
    {
        java.util.ArrayList $r5;
        int[] r3;
        org.codehaus.groovy.control.CompilationUnit r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i10, $i12, $i14, $i16, $i18;
        java.util.List r1;
        java.lang.Object $r2;

        r4 := @this: org.codehaus.groovy.control.CompilationUnit;

        r3 := @parameter0: int[];

        r1 := @parameter1: java.util.List;

        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        i6 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 >= $i1 goto label8;

        $i10 = (int) -1;

        i7 = $i10;

        i8 = 0;

     label2:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i8 >= $i2 goto label6;

        $i3 = r3[i8];

        $i12 = (int) -1;

        if $i3 != $i12 goto label3;

        goto label5;

     label3:
        $i14 = (int) -1;

        if i7 != $i14 goto label4;

        i7 = i8;

        goto label5;

     label4:
        $i5 = r3[i8];

        $i4 = r3[i7];

        if $i5 >= $i4 goto label5;

        i7 = i8;

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        $i16 = (int) -1;

        if i7 != $i16 goto label7;

        goto label8;

     label7:
        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i18 = (int) -1;

        r3[i7] = $i18;

        i6 = i6 + 1;

        goto label1;

     label8:
        return $r5;
    }

    public void applyToPrimaryClassNodes(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Throwable r22;
        org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation r1;
        java.lang.NullPointerException $r17;
        org.codehaus.groovy.ast.ModuleNode $r6;
        org.codehaus.groovy.control.CompilationUnit r0;
        int $i0, $i1;
        org.codehaus.groovy.classgen.GeneratorContext $r8;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.groovy.control.ErrorCollector $r4, $r11, $r14, r21;
        org.codehaus.groovy.control.MultipleCompilationErrorsException r15;
        java.util.Iterator $r3;
        org.codehaus.groovy.control.SourceUnit $r7, r19;
        org.codehaus.groovy.ast.ClassNode r20;
        org.codehaus.groovy.control.CompilerConfiguration $r13;
        java.lang.Exception $r10;
        org.codehaus.groovy.GroovyBugError $r16;
        java.util.List $r2;
        org.codehaus.groovy.control.CompilationFailedException $r18;
        java.lang.Object $r5;
        org.codehaus.groovy.ast.CompileUnit $r9;
        org.codehaus.groovy.control.messages.ExceptionMessage $r12;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation;

        $z0 = virtualinvoke r1.<org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation: boolean needSortedInput()>();

        $r2 = specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List getPrimaryClassNodes(boolean)>($z0);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        r19 = null;

     label02:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.codehaus.groovy.ast.ClassNode) $r5;

        $r6 = virtualinvoke r20.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ModuleNode getModule()>();

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.ast.ModuleNode: org.codehaus.groovy.control.SourceUnit getContext()>();

        r19 = $r7;

        if $r7 == null goto label03;

        $i1 = $r7.<org.codehaus.groovy.control.SourceUnit: int phase>;

        $i0 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i1 > $i0 goto label04;

     label03:
        $r8 = new org.codehaus.groovy.classgen.GeneratorContext;

        $r9 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.ast.CompileUnit ast>;

        specialinvoke $r8.<org.codehaus.groovy.classgen.GeneratorContext: void <init>(org.codehaus.groovy.ast.CompileUnit)>($r9);

        virtualinvoke r1.<org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>($r7, $r8, r20);

     label04:
        goto label14;

     label05:
        $r18 := @caughtexception;

        goto label14;

     label06:
        $r17 := @caughtexception;

        throw $r17;

     label07:
        $r16 := @caughtexception;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void changeBugText(org.codehaus.groovy.GroovyBugError,org.codehaus.groovy.control.SourceUnit)>($r16, r19);

        throw $r16;

     label08:
        $r10 := @caughtexception;

        r21 = null;

        r22 = virtualinvoke $r10.<java.lang.Exception: java.lang.Throwable getCause()>();

     label09:
        if r22 == $r10 goto label12;

        if r22 == null goto label12;

        $z3 = r22 instanceof org.codehaus.groovy.control.MultipleCompilationErrorsException;

        if $z3 != 0 goto label10;

        goto label11;

     label10:
        r15 = (org.codehaus.groovy.control.MultipleCompilationErrorsException) r22;

        r21 = r15.<org.codehaus.groovy.control.MultipleCompilationErrorsException: org.codehaus.groovy.control.ErrorCollector collector>;

        goto label12;

     label11:
        r22 = virtualinvoke r22.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label09;

     label12:
        if r21 == null goto label13;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r14.<org.codehaus.groovy.control.ErrorCollector: void addCollectorContents(org.codehaus.groovy.control.ErrorCollector)>(r21);

        goto label14;

     label13:
        $r11 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        $r12 = new org.codehaus.groovy.control.messages.ExceptionMessage;

        $r13 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $z2 = virtualinvoke $r13.<org.codehaus.groovy.control.CompilerConfiguration: boolean getDebug()>();

        specialinvoke $r12.<org.codehaus.groovy.control.messages.ExceptionMessage: void <init>(java.lang.Exception,boolean,org.codehaus.groovy.control.ProcessingUnit)>($r10, $z2, r0);

        virtualinvoke $r11.<org.codehaus.groovy.control.ErrorCollector: void addError(org.codehaus.groovy.control.messages.Message)>($r12);

     label14:
        goto label01;

     label15:
        $r4 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r4.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;

        catch org.codehaus.groovy.control.CompilationFailedException from label02 to label04 with label05;
        catch java.lang.NullPointerException from label02 to label04 with label06;
        catch org.codehaus.groovy.GroovyBugError from label02 to label04 with label07;
        catch java.lang.Exception from label02 to label04 with label08;
    }

    public void applyToGeneratedGroovyClasses(org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation) throws org.codehaus.groovy.control.CompilationFailedException
    {
        org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation r6;
        java.lang.NullPointerException $r16;
        org.codehaus.groovy.control.CompilationUnit r0;
        java.lang.StringBuffer $r8, $r9, $r11;
        int $i0, $i1;
        java.lang.String $r10, $r12;
        boolean $z0, $z1;
        org.codehaus.groovy.control.ErrorCollector $r3;
        java.util.Iterator $r2;
        org.codehaus.groovy.tools.GroovyClass r5;
        java.lang.Exception $r13;
        org.codehaus.groovy.GroovyBugError $r7, $r14, $r15;
        java.util.List $r1;
        org.codehaus.groovy.control.CompilationFailedException $r17;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.groovy.control.CompilationUnit;

        r6 := @parameter0: org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation;

        $i0 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i0 == 8 goto label02;

        $i1 = r0.<org.codehaus.groovy.control.CompilationUnit: int phase>;

        if $i1 != 7 goto label01;

        $z0 = r0.<org.codehaus.groovy.control.CompilationUnit: boolean phaseComplete>;

        if $z0 != 0 goto label02;

     label01:
        $r7 = new org.codehaus.groovy.GroovyBugError;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CompilationUnit not ready for output(). Current phase=");

        $r10 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: java.lang.String getPhaseDescription()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>($r12);

        throw $r7;

     label02:
        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: java.util.List generatedClasses>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.groovy.tools.GroovyClass) $r4;

     label04:
        virtualinvoke r6.<org.codehaus.groovy.control.CompilationUnit$GroovyClassOperation: void call(org.codehaus.groovy.tools.GroovyClass)>(r5);

     label05:
        goto label10;

     label06:
        $r17 := @caughtexception;

        goto label10;

     label07:
        $r16 := @caughtexception;

        throw $r16;

     label08:
        $r15 := @caughtexception;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void changeBugText(org.codehaus.groovy.GroovyBugError,org.codehaus.groovy.control.SourceUnit)>($r15, null);

        throw $r15;

     label09:
        $r13 := @caughtexception;

        $r14 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r14.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.Exception)>($r13);

        throw $r14;

     label10:
        goto label03;

     label11:
        $r3 = virtualinvoke r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.ErrorCollector getErrorCollector()>();

        virtualinvoke $r3.<org.codehaus.groovy.control.ErrorCollector: void failIfErrors()>();

        return;

        catch org.codehaus.groovy.control.CompilationFailedException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label04 to label05 with label07;
        catch org.codehaus.groovy.GroovyBugError from label04 to label05 with label08;
        catch java.lang.Exception from label04 to label05 with label09;
    }

    private void changeBugText(org.codehaus.groovy.GroovyBugError, org.codehaus.groovy.control.SourceUnit)
    {
        org.codehaus.groovy.control.SourceUnit r7;
        org.codehaus.groovy.GroovyBugError r0;
        org.codehaus.groovy.control.CompilationUnit r3;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8, $r9, $r11;
        java.lang.String $r4, $r10, $r12, $r13;

        r3 := @this: org.codehaus.groovy.control.CompilationUnit;

        r0 := @parameter0: org.codehaus.groovy.GroovyBugError;

        r7 := @parameter1: org.codehaus.groovy.control.SourceUnit;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("exception in phase \'");

        $r4 = virtualinvoke r3.<org.codehaus.groovy.control.CompilationUnit: java.lang.String getPhaseDescription()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in source unit \'");

        if r7 == null goto label1;

        $r13 = virtualinvoke r7.<org.codehaus.groovy.control.SourceUnit: java.lang.String getName()>();

        goto label2;

     label1:
        $r13 = "?";

     label2:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' ");

        $r10 = virtualinvoke r0.<org.codehaus.groovy.GroovyBugError: java.lang.String getBugText()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.GroovyBugError: void setBugText(java.lang.String)>($r12);

        return;
    }

    static org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation access$000(org.codehaus.groovy.control.CompilationUnit)
    {
        org.codehaus.groovy.control.CompilationUnit r0;
        org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation $r1;

        r0 := @parameter0: org.codehaus.groovy.control.CompilationUnit;

        $r1 = r0.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation classgen>;

        return $r1;
    }
}
