public abstract class org.apache.xml.serializer.SerializerFactory extends java.lang.Object
{
    private static java.util.Hashtable m_formats;

    public void <init>()
    {
        org.apache.xml.serializer.SerializerFactory r0;

        r0 := @this: org.apache.xml.serializer.SerializerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)
    {
        java.lang.Object[] $r7;
        org.apache.xml.serializer.SerializationHandler r11;
        java.lang.String $r1, $r2, $r8, $r15, r20;
        org.xml.sax.ContentHandler $r12;
        boolean $z0, $z1;
        org.apache.xml.utils.WrappedRuntimeException $r19;
        java.util.Properties r0, $r14;
        java.lang.IllegalArgumentException $r16, $r17;
        java.lang.Exception $r6, $r18;
        org.apache.xml.serializer.Serializer r21;
        java.lang.Class $r4, $r9;
        java.lang.Object $r5, $r10, $r13;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: java.util.Properties;

     label1:
        $r1 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("method");

        if $r1 != null goto label2;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The output format has a null method name");

        throw $r17;

     label2:
        $r2 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("{http://xml.apache.org/xalan}content-handler");

        r20 = $r2;

        if null != $r2 goto label3;

        $r14 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("{http://xml.apache.org/xalan}content-handler");

        r20 = $r15;

        if null != $r15 goto label3;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The output format must have a \'{http://xml.apache.org/xalan}content-handler\' property!");

        throw $r16;

     label3:
        $r3 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r4 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r20, $r3, 1);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $z0 = $r5 instanceof org.apache.xml.serializer.SerializationHandler;

        if $z0 == 0 goto label4;

        $r13 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        r21 = (org.apache.xml.serializer.Serializer) $r13;

        interfaceinvoke r21.<org.apache.xml.serializer.Serializer: void setOutputFormat(java.util.Properties)>(r0);

        goto label6;

     label4:
        $z1 = $r5 instanceof org.xml.sax.ContentHandler;

        if $z1 == 0 goto label5;

        $r9 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>("org.apache.xml.serializer.ToXMLSAXHandler", $r3, 1);

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Object newInstance()>();

        r11 = (org.apache.xml.serializer.SerializationHandler) $r10;

        $r12 = (org.xml.sax.ContentHandler) $r5;

        interfaceinvoke r11.<org.apache.xml.serializer.SerializationHandler: void setContentHandler(org.xml.sax.ContentHandler)>($r12);

        interfaceinvoke r11.<org.apache.xml.serializer.Serializer: void setOutputFormat(java.util.Properties)>(r0);

        r21 = r11;

        goto label6;

     label5:
        $r6 = new java.lang.Exception;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r20;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SERIALIZER_NOT_CONTENTHANDLER", $r7);

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r8);

        throw $r6;

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        $r19 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r19.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r18);

        throw $r19;

     label8:
        return r21;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.SerializerFactory: java.util.Hashtable m_formats> = $r0;

        return;
    }
}
