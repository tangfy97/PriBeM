class org.apache.solr.common.cloud.ZkStateReader$3 extends java.lang.Object implements org.apache.zookeeper.Watcher
{
    final org.apache.solr.common.cloud.ZkStateReader this$0;

    void <init>(org.apache.solr.common.cloud.ZkStateReader)
    {
        org.apache.solr.common.cloud.ZkStateReader r1;
        org.apache.solr.common.cloud.ZkStateReader$3 r0;

        r0 := @this: org.apache.solr.common.cloud.ZkStateReader$3;

        r1 := @parameter0: org.apache.solr.common.cloud.ZkStateReader;

        r0.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.zookeeper.WatchedEvent)
    {
        org.apache.solr.common.cloud.ClusterState $r12, $r14, $r17;
        java.lang.Integer $r10, $r15;
        java.util.Map $r18;
        java.lang.Thread $r21;
        boolean $z0;
        org.apache.solr.common.cloud.ZkStateReader $r4, $r6, $r13, $r16, $r19;
        org.apache.solr.common.cloud.ZooKeeperException $r30;
        java.util.List $r8;
        java.lang.Throwable $r32;
        java.util.HashSet $r11;
        org.apache.zookeeper.KeeperException$Code $r24, $r25, $r27, $r28;
        int $i0;
        org.slf4j.Logger $r9, $r22, $r26, $r29;
        org.apache.zookeeper.KeeperException $r23;
        org.apache.zookeeper.WatchedEvent r0;
        org.apache.solr.common.SolrException$ErrorCode $r31;
        org.apache.solr.common.cloud.ZkStateReader$3 r3;
        java.lang.InterruptedException $r20;
        org.apache.zookeeper.Watcher$Event$EventType $r1, $r2;
        java.lang.Object $r5;
        org.apache.solr.common.cloud.SolrZkClient $r7;

        r3 := @this: org.apache.solr.common.cloud.ZkStateReader$3;

        r0 := @parameter0: org.apache.zookeeper.WatchedEvent;

        $r1 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType None>;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$EventType getType()>();

        $z0 = virtualinvoke $r1.<org.apache.zookeeper.Watcher$Event$EventType: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = r3.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.cloud.ZkStateReader: java.lang.Object getUpdateLock()>();

        entermonitor $r5;

     label02:
        $r6 = r3.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r7 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient access$300(org.apache.solr.common.cloud.ZkStateReader)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.solr.common.cloud.SolrZkClient: java.util.List getChildren(java.lang.String,org.apache.zookeeper.Watcher,boolean)>("/live_nodes", r3, 1);

        $r9 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Updating live nodes... ({})", $r10);

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r11.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

        $r12 = new org.apache.solr.common.cloud.ClusterState;

        $r13 = r3.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r14 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$200(org.apache.solr.common.cloud.ZkStateReader)>($r13);

        $r15 = virtualinvoke $r14.<org.apache.solr.common.cloud.ClusterState: java.lang.Integer getZkClusterStateVersion()>();

        $r16 = r3.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r17 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$200(org.apache.solr.common.cloud.ZkStateReader)>($r16);

        $r18 = virtualinvoke $r17.<org.apache.solr.common.cloud.ClusterState: java.util.Map getCollectionStates()>();

        specialinvoke $r12.<org.apache.solr.common.cloud.ClusterState: void <init>(java.lang.Integer,java.util.Set,java.util.Map)>($r15, $r11, $r18);

        $r19 = r3.<org.apache.solr.common.cloud.ZkStateReader$3: org.apache.solr.common.cloud.ZkStateReader this$0>;

        staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.ClusterState access$202(org.apache.solr.common.cloud.ZkStateReader,org.apache.solr.common.cloud.ClusterState)>($r19, $r12);

        exitmonitor $r5;

     label03:
        goto label06;

     label04:
        $r32 := @caughtexception;

        exitmonitor $r5;

     label05:
        throw $r32;

     label06:
        goto label11;

     label07:
        $r23 := @caughtexception;

        $r24 = virtualinvoke $r23.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r25 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code SESSIONEXPIRED>;

        if $r24 == $r25 goto label08;

        $r27 = virtualinvoke $r23.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r28 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code CONNECTIONLOSS>;

        if $r27 != $r28 goto label09;

     label08:
        $r26 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r26.<org.slf4j.Logger: void warn(java.lang.String)>("ZooKeeper watch triggered, but Solr cannot talk to ZK");

        return;

     label09:
        $r29 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("", $r23);

        $r30 = new org.apache.solr.common.cloud.ZooKeeperException;

        $r31 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r30.<org.apache.solr.common.cloud.ZooKeeperException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r31, "", $r23);

        throw $r30;

     label10:
        $r20 := @caughtexception;

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r21.<java.lang.Thread: void interrupt()>();

        $r22 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r20);

        return;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch org.apache.zookeeper.KeeperException from label01 to label06 with label07;
        catch java.lang.InterruptedException from label01 to label06 with label10;
    }
}
