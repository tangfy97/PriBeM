public abstract class org.apache.lucene.codecs.PostingsConsumer extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    protected void <init>()
    {
        org.apache.lucene.codecs.PostingsConsumer r0;

        r0 := @this: org.apache.lucene.codecs.PostingsConsumer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void startDoc(int, int) throws java.io.IOException;

    public abstract void addPosition(int, org.apache.lucene.util.BytesRef, int, int) throws java.io.IOException;

    public abstract void finishDoc() throws java.io.IOException;

    public org.apache.lucene.codecs.TermStats merge(org.apache.lucene.index.MergeState, org.apache.lucene.index.FieldInfo$IndexOptions, org.apache.lucene.index.DocsEnum, org.apache.lucene.util.FixedBitSet) throws java.io.IOException
    {
        org.apache.lucene.index.MergeState r13;
        org.apache.lucene.index.DocsAndPositionsEnum $r10, r14;
        boolean $z0;
        org.apache.lucene.index.FieldInfo$IndexOptions r0, $r1, $r2, $r3, $r9, $r15;
        org.apache.lucene.util.BytesRef $r7, $r12;
        org.apache.lucene.util.FixedBitSet r5;
        long $l1, $l8, $l12, l15, $l19;
        java.lang.AssertionError $r16;
        org.apache.lucene.codecs.TermStats $r17;
        org.apache.lucene.codecs.PostingsConsumer r6;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13, i14, i16, $i17, i18, $i21, $i23, $i25;
        org.apache.lucene.index.DocsEnum r4;

        r6 := @this: org.apache.lucene.codecs.PostingsConsumer;

        r13 := @parameter0: org.apache.lucene.index.MergeState;

        r0 := @parameter1: org.apache.lucene.index.FieldInfo$IndexOptions;

        r4 := @parameter2: org.apache.lucene.index.DocsEnum;

        r5 := @parameter3: org.apache.lucene.util.FixedBitSet;

        i14 = 0;

        l15 = 0L;

        $r1 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if r0 != $r1 goto label04;

     label01:
        $i13 = virtualinvoke r4.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i13 != 2147483647 goto label02;

        goto label03;

     label02:
        virtualinvoke r5.<org.apache.lucene.util.FixedBitSet: void set(int)>($i13);

        $i21 = (int) -1;

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void startDoc(int,int)>($i13, $i21);

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void finishDoc()>();

        i14 = i14 + 1;

        goto label01;

     label03:
        l15 = -1L;

        goto label19;

     label04:
        $r2 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS>;

        if r0 != $r2 goto label07;

     label05:
        $i10 = virtualinvoke r4.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i10 != 2147483647 goto label06;

        goto label19;

     label06:
        virtualinvoke r5.<org.apache.lucene.util.FixedBitSet: void set(int)>($i10);

        $i11 = virtualinvoke r4.<org.apache.lucene.index.DocsEnum: int freq()>();

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void startDoc(int,int)>($i10, $i11);

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void finishDoc()>();

        i14 = i14 + 1;

        $l12 = (long) $i11;

        l15 = l15 + $l12;

        goto label05;

     label07:
        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        if r0 != $r3 goto label13;

        r14 = (org.apache.lucene.index.DocsAndPositionsEnum) r4;

     label08:
        $i6 = virtualinvoke r14.<org.apache.lucene.index.DocsAndPositionsEnum: int nextDoc()>();

        if $i6 != 2147483647 goto label09;

        goto label12;

     label09:
        virtualinvoke r5.<org.apache.lucene.util.FixedBitSet: void set(int)>($i6);

        $i7 = virtualinvoke r14.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void startDoc(int,int)>($i6, $i7);

        $l8 = (long) $i7;

        l15 = l15 + $l8;

        i16 = 0;

     label10:
        if i16 >= $i7 goto label11;

        $i9 = virtualinvoke r14.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        $r12 = virtualinvoke r14.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        $i23 = (int) -1;

        $i25 = (int) -1;

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void addPosition(int,org.apache.lucene.util.BytesRef,int,int)>($i9, $r12, $i23, $i25);

        i16 = i16 + 1;

        goto label10;

     label11:
        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void finishDoc()>();

        i14 = i14 + 1;

        goto label08;

     label12:
        goto label19;

     label13:
        $z0 = <org.apache.lucene.codecs.PostingsConsumer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label14;

        $r9 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        if r0 == $r9 goto label14;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label14:
        $r10 = (org.apache.lucene.index.DocsAndPositionsEnum) r4;

     label15:
        $i17 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: int nextDoc()>();

        if $i17 != 2147483647 goto label16;

        goto label19;

     label16:
        virtualinvoke r5.<org.apache.lucene.util.FixedBitSet: void set(int)>($i17);

        $i0 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void startDoc(int,int)>($i17, $i0);

        $l1 = (long) $i0;

        l15 = l15 + $l1;

        i18 = 0;

     label17:
        if i18 >= $i0 goto label18;

        $i2 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        $r7 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        $i3 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: int startOffset()>();

        $i4 = virtualinvoke $r10.<org.apache.lucene.index.DocsAndPositionsEnum: int endOffset()>();

        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void addPosition(int,org.apache.lucene.util.BytesRef,int,int)>($i2, $r7, $i3, $i4);

        i18 = i18 + 1;

        goto label17;

     label18:
        virtualinvoke r6.<org.apache.lucene.codecs.PostingsConsumer: void finishDoc()>();

        i14 = i14 + 1;

        goto label15;

     label19:
        $r17 = new org.apache.lucene.codecs.TermStats;

        $i5 = i14;

        $r15 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if r0 != $r15 goto label20;

        $l19 = -1L;

        goto label21;

     label20:
        $l19 = l15;

     label21:
        specialinvoke $r17.<org.apache.lucene.codecs.TermStats: void <init>(int,long)>($i5, $l19);

        return $r17;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/PostingsConsumer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.PostingsConsumer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
