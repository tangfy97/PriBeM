public abstract class org.eclipse.jetty.io.AbstractBuffers extends java.lang.Object implements org.eclipse.jetty.io.Buffers
{
    protected final org.eclipse.jetty.io.Buffers$Type _headerType;
    protected final int _headerSize;
    protected final org.eclipse.jetty.io.Buffers$Type _bufferType;
    protected final int _bufferSize;
    protected final org.eclipse.jetty.io.Buffers$Type _otherType;

    public void <init>(org.eclipse.jetty.io.Buffers$Type, int, org.eclipse.jetty.io.Buffers$Type, int, org.eclipse.jetty.io.Buffers$Type)
    {
        org.eclipse.jetty.io.AbstractBuffers r0;
        int i0, i1;
        org.eclipse.jetty.io.Buffers$Type r1, r2, r3;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers$Type;

        i0 := @parameter1: int;

        r2 := @parameter2: org.eclipse.jetty.io.Buffers$Type;

        i1 := @parameter3: int;

        r3 := @parameter4: org.eclipse.jetty.io.Buffers$Type;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _headerType> = r1;

        r0.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize> = i0;

        r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _bufferType> = r2;

        r0.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize> = i1;

        r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _otherType> = r3;

        return;
    }

    public int getBufferSize()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffers r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        return $i0;
    }

    public int getHeaderSize()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffers r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        return $i0;
    }

    protected final org.eclipse.jetty.io.Buffer newHeader()
    {
        java.lang.IllegalStateException $r6;
        org.eclipse.jetty.io.AbstractBuffers r0;
        org.eclipse.jetty.io.Buffers$Type $r1;
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r3;
        org.eclipse.jetty.io.ByteArrayBuffer $r5;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jetty.io.nio.DirectNIOBuffer $r4;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        $r2 = <org.eclipse.jetty.io.AbstractBuffers$1: int[] $SwitchMap$org$eclipse$jetty$io$Buffers$Type>;

        $r1 = r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _headerType>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.io.Buffers$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $i4 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        specialinvoke $r5.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(int)>($i4);

        return $r5;

     label2:
        $r4 = new org.eclipse.jetty.io.nio.DirectNIOBuffer;

        $i3 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        specialinvoke $r4.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void <init>(int)>($i3);

        return $r4;

     label3:
        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        $i2 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>($i2);

        return $r3;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;
    }

    protected final org.eclipse.jetty.io.Buffer newBuffer()
    {
        java.lang.IllegalStateException $r6;
        org.eclipse.jetty.io.AbstractBuffers r0;
        org.eclipse.jetty.io.Buffers$Type $r1;
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r3;
        org.eclipse.jetty.io.ByteArrayBuffer $r5;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jetty.io.nio.DirectNIOBuffer $r4;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        $r2 = <org.eclipse.jetty.io.AbstractBuffers$1: int[] $SwitchMap$org$eclipse$jetty$io$Buffers$Type>;

        $r1 = r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _bufferType>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.io.Buffers$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $i4 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        specialinvoke $r5.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(int)>($i4);

        return $r5;

     label2:
        $r4 = new org.eclipse.jetty.io.nio.DirectNIOBuffer;

        $i3 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        specialinvoke $r4.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void <init>(int)>($i3);

        return $r4;

     label3:
        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        $i2 = r0.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>($i2);

        return $r3;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;
    }

    protected final org.eclipse.jetty.io.Buffer newBuffer(int)
    {
        java.lang.IllegalStateException $r6;
        org.eclipse.jetty.io.AbstractBuffers r0;
        org.eclipse.jetty.io.Buffers$Type $r1;
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r3;
        org.eclipse.jetty.io.ByteArrayBuffer $r5;
        int[] $r2;
        int $i0, $i1, i2;
        org.eclipse.jetty.io.nio.DirectNIOBuffer $r4;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffers;

        i2 := @parameter0: int;

        $r2 = <org.eclipse.jetty.io.AbstractBuffers$1: int[] $SwitchMap$org$eclipse$jetty$io$Buffers$Type>;

        $r1 = r0.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _otherType>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.io.Buffers$Type: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r5.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(int)>(i2);

        return $r5;

     label2:
        $r4 = new org.eclipse.jetty.io.nio.DirectNIOBuffer;

        specialinvoke $r4.<org.eclipse.jetty.io.nio.DirectNIOBuffer: void <init>(int)>(i2);

        return $r4;

     label3:
        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(i2);

        return $r3;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;
    }

    public final boolean isHeader(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.AbstractBuffers r1;
        org.eclipse.jetty.io.Buffers$Type $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jetty.io.Buffer r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffers;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int capacity()>();

        $i1 = r1.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        if $i0 != $i1 goto label6;

        $r3 = <org.eclipse.jetty.io.AbstractBuffers$1: int[] $SwitchMap$org$eclipse$jetty$io$Buffers$Type>;

        $r2 = r1.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _headerType>;

        $i2 = virtualinvoke $r2.<org.eclipse.jetty.io.Buffers$Type: int ordinal()>();

        $i3 = $r3[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $z2 = r0 instanceof org.eclipse.jetty.io.ByteArrayBuffer;

        if $z2 == 0 goto label2;

        $z3 = r0 instanceof org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $z1 = r0 instanceof org.eclipse.jetty.io.nio.DirectNIOBuffer;

        return $z1;

     label5:
        $z0 = r0 instanceof org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        return $z0;

     label6:
        return 0;
    }

    public final boolean isBuffer(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.AbstractBuffers r1;
        org.eclipse.jetty.io.Buffers$Type $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jetty.io.Buffer r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffers;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int capacity()>();

        $i1 = r1.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        if $i0 != $i1 goto label6;

        $r3 = <org.eclipse.jetty.io.AbstractBuffers$1: int[] $SwitchMap$org$eclipse$jetty$io$Buffers$Type>;

        $r2 = r1.<org.eclipse.jetty.io.AbstractBuffers: org.eclipse.jetty.io.Buffers$Type _bufferType>;

        $i2 = virtualinvoke $r2.<org.eclipse.jetty.io.Buffers$Type: int ordinal()>();

        $i3 = $r3[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $z2 = r0 instanceof org.eclipse.jetty.io.ByteArrayBuffer;

        if $z2 == 0 goto label2;

        $z3 = r0 instanceof org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $z1 = r0 instanceof org.eclipse.jetty.io.nio.DirectNIOBuffer;

        return $z1;

     label5:
        $z0 = r0 instanceof org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        return $z0;

     label6:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.io.AbstractBuffers r1;
        java.lang.Integer $r4, $r5;
        int $i0, $i1;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffers;

        $r0 = newarray (java.lang.Object)[3];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r0[0] = $r3;

        $i0 = r1.<org.eclipse.jetty.io.AbstractBuffers: int _headerSize>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r4;

        $i1 = r1.<org.eclipse.jetty.io.AbstractBuffers: int _bufferSize>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s [%d,%d]", $r0);

        return $r6;
    }
}
