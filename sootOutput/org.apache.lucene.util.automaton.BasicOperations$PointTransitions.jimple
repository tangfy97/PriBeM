final class org.apache.lucene.util.automaton.BasicOperations$PointTransitions extends java.lang.Object implements java.lang.Comparable
{
    int point;
    final org.apache.lucene.util.automaton.BasicOperations$TransitionList ends;
    final org.apache.lucene.util.automaton.BasicOperations$TransitionList starts;

    private void <init>()
    {
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0;
        org.apache.lucene.util.automaton.BasicOperations$TransitionList $r1, $r2;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.util.automaton.BasicOperations$TransitionList;

        specialinvoke $r1.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: void <init>(org.apache.lucene.util.automaton.BasicOperations$1)>(null);

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList ends> = $r1;

        $r2 = new org.apache.lucene.util.automaton.BasicOperations$TransitionList;

        specialinvoke $r2.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: void <init>(org.apache.lucene.util.automaton.BasicOperations$1)>(null);

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList starts> = $r2;

        return;
    }

    public int compareTo(org.apache.lucene.util.automaton.BasicOperations$PointTransitions)
    {
        int $i0, $i1, $i2;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0, r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        r1 := @parameter0: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        $i1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        $i0 = r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void reset(int)
    {
        org.apache.lucene.util.automaton.BasicOperations$TransitionList $r1, $r2;
        int i0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point> = i0;

        $r1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList ends>;

        $r1.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: int count> = 0;

        $r2 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList starts>;

        $r2.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: int count> = 0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions $r1, r2;
        java.lang.Object r0;
        boolean $z0;

        r2 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.apache.lucene.util.automaton.BasicOperations$PointTransitions) r0;

        $i1 = $r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        $i0 = r2.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        $i0 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.util.automaton.BasicOperations$PointTransitions) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int compareTo(org.apache.lucene.util.automaton.BasicOperations$PointTransitions)>($r2);

        return $i0;
    }

    void <init>(org.apache.lucene.util.automaton.BasicOperations$1)
    {
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions r0;
        org.apache.lucene.util.automaton.BasicOperations$1 r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        r1 := @parameter0: org.apache.lucene.util.automaton.BasicOperations$1;

        specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: void <init>()>();

        return;
    }
}
