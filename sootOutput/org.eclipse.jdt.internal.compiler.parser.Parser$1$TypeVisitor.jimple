class org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor extends org.eclipse.jdt.internal.compiler.ASTVisitor
{
    public org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor methodVisitor;
    org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types;
    int typePtr;
    final org.eclipse.jdt.internal.compiler.parser.Parser this$0;

    void <init>(org.eclipse.jdt.internal.compiler.parser.Parser)
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r2;
        org.eclipse.jdt.internal.compiler.parser.Parser r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.parser.Parser this$0> = r1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)[0];

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types> = $r2;

        $i1 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr> = $i1;

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: void endVisitType()>();

        return;
    }

    public void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: void endVisitType()>();

        return;
    }

    private void endVisitType()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr> = $i1;

        return;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r1);

        return $z0;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r1);

        return $z0;
    }

    private boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i2 = lengthof $r1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr> = $i1;

        if $i2 > $i1 goto label1;

        i4 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i5 = i4 * 2;

        $i6 = $i5 + 1;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)[$i6];

        r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i4);

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr>;

        $r3[$i3] = r2;

        return 1;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor $r3;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean isDefaultConstructor()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor methodVisitor>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r3, r2);

        return 0;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.Initializer, org.eclipse.jdt.internal.compiler.lookup.MethodScope)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor $r5, $r7;
        org.eclipse.jdt.internal.compiler.ast.Block $r1;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r3;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r6;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;
        org.eclipse.jdt.internal.compiler.ast.Initializer r0;

        r2 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Initializer;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r5 = r2.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor methodVisitor>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: int typePtr>;

        $r4 = $r3[$i0];

        $r5.<org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingType> = $r4;

        $r7 = r2.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor methodVisitor>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Initializer: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>($r7, r6);

        return 0;
    }

    public boolean visit(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor $r3;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor: org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor methodVisitor>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r3, r2);

        return 0;
    }
}
