public class com.hp.hpl.jena.assembler.exceptions.AssemblerException extends com.hp.hpl.jena.shared.JenaException
{
    protected final com.hp.hpl.jena.rdf.model.Resource root;
    protected java.util.List doing;

    public void <init>(com.hp.hpl.jena.rdf.model.Resource, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource r4;
        java.util.ArrayList $r3;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        r4 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.util.List doing> = $r3;

        r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: com.hp.hpl.jena.rdf.model.Resource root> = r4;

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Resource, java.lang.String)
    {
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.model.Resource r3;
        java.util.ArrayList $r2;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.util.List doing> = $r2;

        r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: com.hp.hpl.jena.rdf.model.Resource root> = r3;

        return;
    }

    public com.hp.hpl.jena.rdf.model.Resource getRoot()
    {
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        com.hp.hpl.jena.rdf.model.Resource $r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        $r1 = r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: com.hp.hpl.jena.rdf.model.Resource root>;

        return $r1;
    }

    public com.hp.hpl.jena.assembler.exceptions.AssemblerException pushDoing(com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame)
    {
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        java.util.List $r2;
        com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        r1 := @parameter0: com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame;

        $r2 = r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.util.List doing>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    protected static java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.rdf.model.Model $r2;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r3, $r6, $r8;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: java.lang.String toString(com.hp.hpl.jena.shared.PrefixMapping)>($r2);

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String getLabels(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r8 = $r3;

     label2:
        return $r8;
    }

    private static java.lang.String getLabels(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.graph.Node $r10;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        java.lang.String $r11, r16, r17, $r18;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.model.RDFNode $r9;
        com.hp.hpl.jena.rdf.model.Statement $r8;
        com.hp.hpl.jena.rdf.model.Resource r0;
        com.hp.hpl.jena.rdf.model.Model $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        r16 = "";

        r17 = "labels: ";

        $r2 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property label>;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r2);

     label1:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: java.lang.String toString(com.hp.hpl.jena.shared.PrefixMapping,boolean)>($r1, 1);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = ", ";

        goto label1;

     label2:
        $z1 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label3;

        $r18 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String getIncomingProperty(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r18;
    }

    private static java.lang.String getIncomingProperty(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r11;
        java.lang.String $r12, $r16, r18, r19, $r20;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.model.Statement $r7;
        com.hp.hpl.jena.rdf.model.Resource r0, $r15;
        com.hp.hpl.jena.rdf.model.Model $r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r13, $r14, $r17;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r18 = "";

        r19 = "";

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, null, r0);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r11 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r12 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r15 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r16 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r19 = ", ";

        goto label1;

     label2:
        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label3;

        $r20 = "";

        goto label4;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r20;
    }

    protected static java.lang.String nice(com.hp.hpl.jena.rdf.model.RDFNode)
    {
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.graph.Node $r2;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Resource $r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.RDFNode;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isLiteral()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: java.lang.String toString()>();

        goto label2;

     label1:
        $r1 = (com.hp.hpl.jena.rdf.model.Resource) r0;

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String nice(com.hp.hpl.jena.rdf.model.Resource)>($r1);

     label2:
        return $r3;
    }

    public java.util.List getDoing()
    {
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        $r1 = r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.util.List doing>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r1, $r2, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.shared.JenaException: java.lang.String toString()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.lang.String frameStrings()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r7 = $r1;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  doing:\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r7;
    }

    protected java.lang.String frameStrings()
    {
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.StringBuffer $r0, $r5, $r9;
        com.hp.hpl.jena.assembler.exceptions.AssemblerException r1;
        java.lang.Object $r6;
        java.lang.String $r4, $r8;
        com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame $r7;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.assembler.exceptions.AssemblerException;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.assembler.exceptions.AssemblerException: java.util.List doing>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame) $r6;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.assembler.assemblers.AssemblerGroup$Frame: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
