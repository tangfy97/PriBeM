public class com.jidesoft.range.TimeRange extends com.jidesoft.range.AbstractRange
{
    protected java.util.Date _min;
    protected java.util.Date _max;
    private java.util.TimeZone timeZone;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Calendar $r2;
        java.util.TimeZone $r1;
        java.util.Date $r3, $r4;
        long $l0, $l1;

        r0 := @this: com.jidesoft.range.TimeRange;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone> = $r1;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(14, 0);

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(10, 24);

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l0);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = $r3;

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l1);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = $r4;

        return;
    }

    public void <init>(java.util.Calendar, java.util.Calendar)
    {
        java.util.TimeZone $r1;
        java.util.Date $r3, $r5;
        java.lang.AssertionError $r6;
        com.jidesoft.range.TimeRange r0;
        java.util.Calendar r2, r4;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.range.TimeRange;

        r2 := @parameter0: java.util.Calendar;

        r4 := @parameter1: java.util.Calendar;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone> = $r1;

        $r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = $r3;

        $r5 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>();

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = $r5;

        $z0 = <com.jidesoft.range.TimeRange: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.util.Calendar: boolean before(java.lang.Object)>(r4);

        if $z1 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        return;
    }

    public void <init>(java.util.Date, java.util.Date)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.TimeZone $r1;
        java.util.Date r2, r3;

        r0 := @this: com.jidesoft.range.TimeRange;

        r2 := @parameter0: java.util.Date;

        r3 := @parameter1: java.util.Date;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone> = $r1;

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = r2;

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = r3;

        return;
    }

    public void <init>(long, long)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.TimeZone $r1;
        java.util.Date $r2, $r3;
        long l0, l1;

        r0 := @this: com.jidesoft.range.TimeRange;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<com.jidesoft.range.AbstractRange: void <init>()>();

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone> = $r1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l0);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = $r2;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>(l1);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = $r3;

        return;
    }

    public void <init>(com.jidesoft.range.TimeRange)
    {
        com.jidesoft.range.TimeRange r0, r1;
        long $l0, $l1;
        double $d0, $d1;

        r0 := @this: com.jidesoft.range.TimeRange;

        r1 := @parameter0: com.jidesoft.range.TimeRange;

        $d0 = virtualinvoke r1.<com.jidesoft.range.TimeRange: double minimum()>();

        $l0 = (long) $d0;

        $d1 = virtualinvoke r1.<com.jidesoft.range.TimeRange: double maximum()>();

        $l1 = (long) $d1;

        specialinvoke r0.<com.jidesoft.range.TimeRange: void <init>(long,long)>($l0, $l1);

        return;
    }

    public com.jidesoft.range.Range copy()
    {
        com.jidesoft.range.TimeRange $r0, r1;

        r1 := @this: com.jidesoft.range.TimeRange;

        $r0 = new com.jidesoft.range.TimeRange;

        specialinvoke $r0.<com.jidesoft.range.TimeRange: void <init>(com.jidesoft.range.TimeRange)>(r1);

        return $r0;
    }

    public void setMin(java.util.Date)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date r1, r2, $r3;

        r0 := @this: com.jidesoft.range.TimeRange;

        r2 := @parameter0: java.util.Date;

        r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = r2;

        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("min", r1, $r3);

        return;
    }

    public void setMin(long)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date r1, $r2, $r3;
        long l0;

        r0 := @this: com.jidesoft.range.TimeRange;

        l0 := @parameter0: long;

        r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l0);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _min> = $r2;

        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("min", r1, $r3);

        return;
    }

    public void adjust(java.util.Date, java.util.Date)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date r1, r2;

        r0 := @this: com.jidesoft.range.TimeRange;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void setMin(java.util.Date)>(r1);

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void setMax(java.util.Date)>(r2);

        return;
    }

    public void setMax(java.util.Date)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date r1, r2, $r3;

        r0 := @this: com.jidesoft.range.TimeRange;

        r2 := @parameter0: java.util.Date;

        r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = r2;

        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("max", r1, $r3);

        return;
    }

    public void setMax(long)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date r1, $r2, $r3;
        long l0;

        r0 := @this: com.jidesoft.range.TimeRange;

        l0 := @parameter0: long;

        r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l0);

        r0.<com.jidesoft.range.TimeRange: java.util.Date _max> = $r2;

        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("max", r1, $r3);

        return;
    }

    public double minimum()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1, $r2;
        long $l0;
        double $d0;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r1 != null goto label1;

        $d0 = 4.9E-324;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

     label2:
        return $d0;
    }

    public double maximum()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1, $r2;
        long $l0;
        double $d0;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r1 != null goto label1;

        $d0 = 1.7976931348623157E308;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

     label2:
        return $d0;
    }

    public double size()
    {
        com.jidesoft.range.TimeRange r0;
        double $d0, $d1, $d2;

        r0 := @this: com.jidesoft.range.TimeRange;

        $d0 = virtualinvoke r0.<com.jidesoft.range.TimeRange: double maximum()>();

        $d1 = virtualinvoke r0.<com.jidesoft.range.TimeRange: double minimum()>();

        $d2 = $d0 - $d1;

        return $d2;
    }

    public java.util.Date lower()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        return $r1;
    }

    public java.util.Date upper()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        return $r1;
    }

    public boolean contains(java.util.Date)
    {
        java.util.Date r0;
        long $l0;
        com.jidesoft.range.TimeRange r1;
        byte $b1, $b2;
        int $i3, $i4;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r1 := @this: com.jidesoft.range.TimeRange;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        $d1 = virtualinvoke r1.<com.jidesoft.range.TimeRange: double minimum()>();

        $b1 = $d0 cmpl $d1;

        $i3 = (int) $b1;

        if $i3 < 0 goto label2;

        $d2 = (double) $l0;

        $d3 = virtualinvoke r1.<com.jidesoft.range.TimeRange: double maximum()>();

        $b2 = $d2 cmpg $d3;

        $i4 = (int) $b2;

        if $i4 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.util.TimeZone getTimeZone()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.TimeZone $r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone>;

        return $r1;
    }

    public void setTimeZone(java.util.TimeZone)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.TimeZone r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        r1 := @parameter0: java.util.TimeZone;

        r0.<com.jidesoft.range.TimeRange: java.util.TimeZone timeZone> = r1;

        return;
    }

    public static com.jidesoft.range.TimeRange union(com.jidesoft.range.TimeRange, com.jidesoft.range.TimeRange)
    {
        java.util.Date $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7, $l8;
        com.jidesoft.range.TimeRange r0, r1, $r10;

        r0 := @parameter0: com.jidesoft.range.TimeRange;

        r1 := @parameter1: com.jidesoft.range.TimeRange;

        if r0 != null goto label01;

        return r1;

     label01:
        if r1 != null goto label02;

        return r0;

     label02:
        $r2 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r2 != null goto label03;

        $l5 = 9223372036854775807L;

        goto label04;

     label03:
        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $l5 = virtualinvoke $r3.<java.util.Date: long getTime()>();

     label04:
        l0 = $l5;

        $r4 = r1.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r4 != null goto label05;

        $l6 = 9223372036854775807L;

        goto label06;

     label05:
        $r5 = r1.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $l6 = virtualinvoke $r5.<java.util.Date: long getTime()>();

     label06:
        l1 = $l6;

        $r6 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r6 != null goto label07;

        $l7 = -9223372036854775808L;

        goto label08;

     label07:
        $r7 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $l7 = virtualinvoke $r7.<java.util.Date: long getTime()>();

     label08:
        l2 = $l7;

        $r8 = r1.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r8 != null goto label09;

        $l8 = -9223372036854775808L;

        goto label10;

     label09:
        $r9 = r1.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $l8 = virtualinvoke $r9.<java.util.Date: long getTime()>();

     label10:
        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(l0, l1);

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>(l2, $l8);

        $r10 = new com.jidesoft.range.TimeRange;

        specialinvoke $r10.<com.jidesoft.range.TimeRange: void <init>(long,long)>($l3, $l4);

        return $r10;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Date $r3, $r4, $r5, $r6;
        com.jidesoft.range.TimeRange r1, r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.jidesoft.range.TimeRange;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.jidesoft.range.TimeRange;

        if $z0 == 0 goto label3;

        r1 = (com.jidesoft.range.TimeRange) r0;

        $r4 = r2.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $r3 = r1.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $z1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label1;

        $r6 = r2.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $r5 = r1.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $z2 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        java.util.Date $r1, $r2, $r3, $r4;
        com.jidesoft.range.TimeRange r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $i2 = virtualinvoke $r2.<java.util.Date: int hashCode()>();

     label2:
        $i0 = $i2 * 29;

        $r3 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r3 != null goto label3;

        $i3 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $i3 = virtualinvoke $r4.<java.util.Date: int hashCode()>();

     label4:
        $i1 = $i0 + $i3;

        return $i1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1;
        java.lang.Double $r8, $r10;
        java.util.Date $r3, $r4, $r5, $r6, $r7, $r9;
        com.jidesoft.range.TimeRange r2;
        java.lang.String $r11, $r12, $r13, $r14, $r15;
        java.text.DateFormat $r0;
        double $d0, $d1;

        r2 := @this: com.jidesoft.range.TimeRange;

        $r0 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(2, 2);

        $r1 = newarray (java.lang.Object)[4];

        $r3 = r2.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r3 != null goto label1;

        $r12 = "null";

        goto label2;

     label1:
        $r4 = r2.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        $r12 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

     label2:
        $r1[0] = $r12;

        $r5 = r2.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r5 != null goto label3;

        $r13 = "null";

        goto label4;

     label3:
        $r6 = r2.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        $r13 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r6);

     label4:
        $r1[1] = $r13;

        $r7 = r2.<com.jidesoft.range.TimeRange: java.util.Date _min>;

        if $r7 != null goto label5;

        $r14 = "null";

        goto label6;

     label5:
        $d0 = virtualinvoke r2.<com.jidesoft.range.TimeRange: double minimum()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r14 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.lang.Object)>($r8);

     label6:
        $r1[2] = $r14;

        $r9 = r2.<com.jidesoft.range.TimeRange: java.util.Date _max>;

        if $r9 != null goto label7;

        $r15 = "null";

        goto label8;

     label7:
        $d1 = virtualinvoke r2.<com.jidesoft.range.TimeRange: double maximum()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r15 = virtualinvoke $r0.<java.text.DateFormat: java.lang.String format(java.lang.Object)>($r10);

     label8:
        $r1[3] = $r15;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s, %s] rounded to [%s, %s]", $r1);

        return $r11;
    }

    public volatile boolean contains(java.lang.Object)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.jidesoft.range.TimeRange;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Date) r1;

        $z0 = virtualinvoke r0.<com.jidesoft.range.TimeRange: boolean contains(java.util.Date)>($r2);

        return $z0;
    }

    public volatile void adjust(java.lang.Object, java.lang.Object)
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r3, $r4;
        java.lang.Object r1, r2;

        r0 := @this: com.jidesoft.range.TimeRange;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Date) r1;

        $r3 = (java.util.Date) r2;

        virtualinvoke r0.<com.jidesoft.range.TimeRange: void adjust(java.util.Date,java.util.Date)>($r4, $r3);

        return;
    }

    public volatile java.lang.Object upper()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = virtualinvoke r0.<com.jidesoft.range.TimeRange: java.util.Date upper()>();

        return $r1;
    }

    public volatile java.lang.Object lower()
    {
        com.jidesoft.range.TimeRange r0;
        java.util.Date $r1;

        r0 := @this: com.jidesoft.range.TimeRange;

        $r1 = virtualinvoke r0.<com.jidesoft.range.TimeRange: java.util.Date lower()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/jidesoft/range/TimeRange;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.jidesoft.range.TimeRange: boolean $assertionsDisabled> = $z1;

        return;
    }
}
