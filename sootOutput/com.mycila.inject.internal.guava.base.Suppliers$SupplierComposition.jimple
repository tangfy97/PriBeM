class com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition extends java.lang.Object implements com.mycila.inject.internal.guava.base.Supplier, java.io.Serializable
{
    final com.mycila.inject.internal.guava.base.Function function;
    final com.mycila.inject.internal.guava.base.Supplier supplier;
    private static final long serialVersionUID;

    void <init>(com.mycila.inject.internal.guava.base.Function, com.mycila.inject.internal.guava.base.Supplier)
    {
        com.mycila.inject.internal.guava.base.Supplier r2;
        com.mycila.inject.internal.guava.base.Function r1;
        com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Function;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.Supplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: com.mycila.inject.internal.guava.base.Function function> = r1;

        r0.<com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: com.mycila.inject.internal.guava.base.Supplier supplier> = r2;

        return;
    }

    public java.lang.Object get()
    {
        com.mycila.inject.internal.guava.base.Supplier $r1;
        java.lang.Object $r3, $r4;
        com.mycila.inject.internal.guava.base.Function $r2;
        com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: com.mycila.inject.internal.guava.base.Function function>;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: com.mycila.inject.internal.guava.base.Supplier supplier>;

        $r3 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.base.Supplier: java.lang.Object get()>();

        $r4 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.base.Function: java.lang.Object apply(java.lang.Object)>($r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Suppliers$SupplierComposition: long serialVersionUID> = 0L;

        return;
    }
}
