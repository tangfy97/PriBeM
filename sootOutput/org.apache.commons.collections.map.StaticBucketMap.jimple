public final class org.apache.commons.collections.map.StaticBucketMap extends java.lang.Object implements java.util.Map
{
    private static final int DEFAULT_BUCKETS;
    private org.apache.commons.collections.map.StaticBucketMap$Node[] buckets;
    private org.apache.commons.collections.map.StaticBucketMap$Lock[] locks;

    public void <init>()
    {
        org.apache.commons.collections.map.StaticBucketMap r0;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: void <init>(int)>(255);

        return;
    }

    public void <init>(int)
    {
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r5;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2, $r4;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(17, i0);

        i3 = $i1;

        $i2 = $i1 % 2;

        if $i2 != 0 goto label1;

        $i6 = (int) -1;

        i3 = $i1 + $i6;

     label1:
        $r1 = newarray (org.apache.commons.collections.map.StaticBucketMap$Node)[i3];

        r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets> = $r1;

        $r2 = newarray (org.apache.commons.collections.map.StaticBucketMap$Lock)[i3];

        r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks> = $r2;

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r5 = new org.apache.commons.collections.map.StaticBucketMap$Lock;

        specialinvoke $r5.<org.apache.commons.collections.map.StaticBucketMap$Lock: void <init>(org.apache.commons.collections.map.StaticBucketMap$1)>(null);

        $r4[i4] = $r5;

        i4 = i4 + 1;

        goto label2;

     label3:
        return;
    }

    private final int getHash(java.lang.Object)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i19, $i21, $i23;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r2;
        org.apache.commons.collections.map.StaticBucketMap r1;
        java.lang.Object r0;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = $i0 << 15;

        $i19 = (int) -1;

        $i2 = $i1 ^ $i19;

        i10 = $i0 + $i2;

        $i3 = i10 >>> 10;

        i11 = i10 ^ $i3;

        $i4 = i11 << 3;

        i12 = i11 + $i4;

        $i5 = i12 >>> 6;

        i13 = i12 ^ $i5;

        $i6 = i13 << 11;

        $i21 = (int) -1;

        $i7 = $i6 ^ $i21;

        i14 = i13 + $i7;

        $i8 = i14 >>> 16;

        i15 = i14 ^ $i8;

        $r2 = r1.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i9 = lengthof $r2;

        i16 = i15 % $i9;

        if i16 >= 0 goto label2;

        $i23 = (int) -1;

        $i17 = i16 * $i23;

        goto label3;

     label2:
        $i17 = i16;

     label3:
        return $i17;
    }

    public int size()
    {
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0, $i1, i2, i3;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[i3];

        $i1 = $r3.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size>;

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.commons.collections.map.StaticBucketMap r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r4;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        org.apache.commons.collections.map.StaticBucketMap$Node r10;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0;
        java.lang.Object r1, $r5, $r6, $r7, $r8;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[$i0];

        entermonitor $r3;

     label01:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r10 = $r4[$i0];

     label02:
        if r10 == null goto label06;

        $r5 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r5 == r1 goto label03;

        $r7 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r7 == null goto label05;

        $r8 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label05;

     label03:
        $r6 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        exitmonitor $r3;

     label04:
        return $r6;

     label05:
        r10 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label02;

     label06:
        exitmonitor $r3;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label09:
        throw $r9;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.lang.Throwable $r8;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r4;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        org.apache.commons.collections.map.StaticBucketMap$Node r9;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0;
        java.lang.Object r1, $r5, $r6, $r7;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[$i0];

        entermonitor $r3;

     label01:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r9 = $r4[$i0];

     label02:
        if r9 == null goto label06;

        $r5 = r9.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r5 == r1 goto label03;

        $r6 = r9.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r6 == null goto label05;

        $r7 = r9.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label05;

     label03:
        exitmonitor $r3;

     label04:
        return 1;

     label05:
        r9 = r9.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label02;

     label06:
        exitmonitor $r3;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label09:
        throw $r8;

     label10:
        return 0;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1, $r4;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        org.apache.commons.collections.map.StaticBucketMap$Node r10;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0, i1;
        java.lang.Object r5, $r6, $r7, $r8;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r5 := @parameter0: java.lang.Object;

        i1 = 0;

     label01:
        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label12;

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[i1];

        entermonitor $r3;

     label02:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r10 = $r4[i1];

     label03:
        if r10 == null goto label07;

        $r6 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        if $r6 == r5 goto label04;

        $r7 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        if $r7 == null goto label06;

        $r8 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label06;

     label04:
        exitmonitor $r3;

     label05:
        return 1;

     label06:
        r10 = r10.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label03;

     label07:
        exitmonitor $r3;

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r9;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return 0;

        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r17;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3, $r8, $r16;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2, $r7, $r15;
        boolean $z0;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r4, $r14;
        org.apache.commons.collections.map.StaticBucketMap$Node $r5, $r13, r18, r19;
        org.apache.commons.collections.map.StaticBucketMap r0;
        java.lang.Object r1, r6, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[$i0];

        entermonitor $r3;

     label01:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r18 = $r4[$i0];

        if r18 != null goto label03;

        $r13 = new org.apache.commons.collections.map.StaticBucketMap$Node;

        specialinvoke $r13.<org.apache.commons.collections.map.StaticBucketMap$Node: void <init>(org.apache.commons.collections.map.StaticBucketMap$1)>(null);

        $r13.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key> = r1;

        $r13.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value> = r6;

        $r14 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $r14[$i0] = $r13;

        $r15 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r16 = $r15[$i0];

        $i3 = $r16.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size>;

        $i4 = $i3 + 1;

        $r16.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size> = $i4;

        exitmonitor $r3;

     label02:
        return null;

     label03:
        r19 = r18;

     label04:
        if r19 == null goto label08;

        r18 = r19;

        $r9 = r19.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r9 == r1 goto label05;

        $r10 = r19.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r10 == null goto label07;

        $r11 = r19.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

     label05:
        $r12 = r18.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        r18.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value> = r6;

        exitmonitor $r3;

     label06:
        return $r12;

     label07:
        r19 = r19.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label04;

     label08:
        $r5 = new org.apache.commons.collections.map.StaticBucketMap$Node;

        specialinvoke $r5.<org.apache.commons.collections.map.StaticBucketMap$Node: void <init>(org.apache.commons.collections.map.StaticBucketMap$1)>(null);

        $r5.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key> = r1;

        $r5.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value> = r6;

        r18.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next> = $r5;

        $r7 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r8 = $r7[$i0];

        $i1 = $r8.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size>;

        $i2 = $i1 + 1;

        $r8.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size> = $i2;

        exitmonitor $r3;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r17;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.lang.Throwable $r14;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3, $r8;
        int $i0, $i1, $i2;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2, $r7;
        boolean $z0;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r4, $r11;
        org.apache.commons.collections.map.StaticBucketMap$Node $r6, $r10, r15, r16;
        org.apache.commons.collections.map.StaticBucketMap r0;
        java.lang.Object r1, $r5, $r9, $r12, $r13;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[$i0];

        entermonitor $r3;

     label01:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r15 = $r4[$i0];

        r16 = null;

     label02:
        if r15 == null goto label08;

        $r5 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r5 == r1 goto label03;

        $r12 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        if $r12 == null goto label07;

        $r13 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object key>;

        $z0 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

     label03:
        if null != r16 goto label04;

        $r11 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $r10 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        $r11[$i0] = $r10;

        goto label05;

     label04:
        $r6 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        r16.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next> = $r6;

     label05:
        $r7 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r8 = $r7[$i0];

        $i1 = $r8.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size>;

        $i2 = $i1 - 1;

        $r8.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size> = $i2;

        $r9 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: java.lang.Object value>;

        exitmonitor $r3;

     label06:
        return $r9;

     label07:
        r16 = r15;

        r15 = r15.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label02;

     label08:
        exitmonitor $r3;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label11:
        throw $r14;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.util.Set keySet()
    {
        org.apache.commons.collections.map.StaticBucketMap$KeySet $r0;
        org.apache.commons.collections.map.StaticBucketMap r1;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        $r0 = new org.apache.commons.collections.map.StaticBucketMap$KeySet;

        specialinvoke $r0.<org.apache.commons.collections.map.StaticBucketMap$KeySet: void <init>(org.apache.commons.collections.map.StaticBucketMap,org.apache.commons.collections.map.StaticBucketMap$1)>(r1, null);

        return $r0;
    }

    public java.util.Collection values()
    {
        org.apache.commons.collections.map.StaticBucketMap$Values $r0;
        org.apache.commons.collections.map.StaticBucketMap r1;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        $r0 = new org.apache.commons.collections.map.StaticBucketMap$Values;

        specialinvoke $r0.<org.apache.commons.collections.map.StaticBucketMap$Values: void <init>(org.apache.commons.collections.map.StaticBucketMap,org.apache.commons.collections.map.StaticBucketMap$1)>(r1, null);

        return $r0;
    }

    public java.util.Set entrySet()
    {
        org.apache.commons.collections.map.StaticBucketMap$EntrySet $r0;
        org.apache.commons.collections.map.StaticBucketMap r1;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        $r0 = new org.apache.commons.collections.map.StaticBucketMap$EntrySet;

        specialinvoke $r0.<org.apache.commons.collections.map.StaticBucketMap$EntrySet: void <init>(org.apache.commons.collections.map.StaticBucketMap,org.apache.commons.collections.map.StaticBucketMap$1)>(r1, null);

        return $r0;
    }

    public void putAll(java.util.Map)
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.map.StaticBucketMap r4;
        java.util.Map r0;
        java.util.Set $r1;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r4 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        virtualinvoke r4.<org.apache.commons.collections.map.StaticBucketMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        goto label1;

     label2:
        return;
    }

    public void clear()
    {
        java.lang.Throwable $r5;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1, $r4;
        org.apache.commons.collections.map.StaticBucketMap$Lock r3;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0, i1;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label7;

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        r3 = $r2[i1];

        entermonitor r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $r4[i1] = null;

        r3.<org.apache.commons.collections.map.StaticBucketMap$Lock: int size> = 0;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor r3;

     label5:
        throw $r5;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections.map.StaticBucketMap r1;
        java.util.Map r2;
        java.util.Set $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof java.util.Map;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map) r0;

        $r3 = virtualinvoke r1.<org.apache.commons.collections.map.StaticBucketMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        java.lang.Throwable $r5;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1, $r4;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        org.apache.commons.collections.map.StaticBucketMap$Node r6;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int $i0, $i1, i2, i3;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label9;

        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[i3];

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        r6 = $r4[i3];

     label3:
        if r6 == null goto label4;

        $i1 = virtualinvoke r6.<org.apache.commons.collections.map.StaticBucketMap$Node: int hashCode()>();

        i2 = i2 + $i1;

        r6 = r6.<org.apache.commons.collections.map.StaticBucketMap$Node: org.apache.commons.collections.map.StaticBucketMap$Node next>;

        goto label3;

     label4:
        exitmonitor $r3;

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r5;

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        return i2;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void atomic(java.lang.Runnable)
    {
        org.apache.commons.collections.map.StaticBucketMap r1;
        java.lang.Runnable r0;
        java.lang.NullPointerException $r2;

        r1 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r0 := @parameter0: java.lang.Runnable;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r1.<org.apache.commons.collections.map.StaticBucketMap: void atomic(java.lang.Runnable,int)>(r0, 0);

        return;
    }

    private void atomic(java.lang.Runnable, int)
    {
        java.lang.Throwable $r5;
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1;
        org.apache.commons.collections.map.StaticBucketMap$Lock $r3;
        java.lang.Runnable r4;
        org.apache.commons.collections.map.StaticBucketMap r0;
        int i0, $i1, $i2;
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r2;

        r0 := @this: org.apache.commons.collections.map.StaticBucketMap;

        r4 := @parameter0: java.lang.Runnable;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        interfaceinvoke r4.<java.lang.Runnable: void run()>();

        return;

     label1:
        $r2 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        $r3 = $r2[i0];

        entermonitor $r3;

     label2:
        $i2 = i0 + 1;

        specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: void atomic(java.lang.Runnable,int)>(r4, $i2);

        exitmonitor $r3;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static org.apache.commons.collections.map.StaticBucketMap$Node[] access$500(org.apache.commons.collections.map.StaticBucketMap)
    {
        org.apache.commons.collections.map.StaticBucketMap$Node[] $r1;
        org.apache.commons.collections.map.StaticBucketMap r0;

        r0 := @parameter0: org.apache.commons.collections.map.StaticBucketMap;

        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Node[] buckets>;

        return $r1;
    }

    static org.apache.commons.collections.map.StaticBucketMap$Lock[] access$600(org.apache.commons.collections.map.StaticBucketMap)
    {
        org.apache.commons.collections.map.StaticBucketMap$Lock[] $r1;
        org.apache.commons.collections.map.StaticBucketMap r0;

        r0 := @parameter0: org.apache.commons.collections.map.StaticBucketMap;

        $r1 = r0.<org.apache.commons.collections.map.StaticBucketMap: org.apache.commons.collections.map.StaticBucketMap$Lock[] locks>;

        return $r1;
    }

    static int access$800(org.apache.commons.collections.map.StaticBucketMap, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.commons.collections.map.StaticBucketMap r0;

        r0 := @parameter0: org.apache.commons.collections.map.StaticBucketMap;

        r1 := @parameter1: java.lang.Object;

        $i0 = specialinvoke r0.<org.apache.commons.collections.map.StaticBucketMap: int getHash(java.lang.Object)>(r1);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.map.StaticBucketMap: int DEFAULT_BUCKETS> = 255;

        return;
    }
}
