public class org.eclipse.jetty.webapp.StandardDescriptorProcessor extends org.eclipse.jetty.webapp.IterativeDescriptorProcessor
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String STANDARD_PROCESSOR;

    public void <init>()
    {
        java.lang.IllegalStateException $r56;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r0;
        java.lang.reflect.Method $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54;
        java.lang.Exception $r55;
        java.lang.Class[] $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53;
        java.lang.Class $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52;

        r0 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        specialinvoke r0.<org.eclipse.jetty.webapp.IterativeDescriptorProcessor: void <init>()>();

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitContextParam", $r2);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("context-param", $r3);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitDisplayName", $r5);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("display-name", $r6);

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitServlet", $r8);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("servlet", $r9);

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitServletMapping", $r11);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("servlet-mapping", $r12);

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r15 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitSessionConfig", $r14);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("session-config", $r15);

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r18 = virtualinvoke $r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitMimeMapping", $r17);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("mime-mapping", $r18);

        $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r21 = virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitWelcomeFileList", $r20);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("welcome-file-list", $r21);

        $r22 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r24 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitLocaleEncodingList", $r23);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("locale-encoding-mapping-list", $r24);

        $r25 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r27 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitErrorPage", $r26);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("error-page", $r27);

        $r28 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r30 = virtualinvoke $r28.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitTagLib", $r29);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("taglib", $r30);

        $r31 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r33 = virtualinvoke $r31.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitJspConfig", $r32);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("jsp-config", $r33);

        $r34 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r35 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r36 = virtualinvoke $r34.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitSecurityConstraint", $r35);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("security-constraint", $r36);

        $r37 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r38 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r39 = virtualinvoke $r37.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitLoginConfig", $r38);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("login-config", $r39);

        $r40 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r41 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r42 = virtualinvoke $r40.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitSecurityRole", $r41);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("security-role", $r42);

        $r43 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r44 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r45 = virtualinvoke $r43.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitFilter", $r44);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("filter", $r45);

        $r46 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r47 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r48 = virtualinvoke $r46.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitFilterMapping", $r47);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("filter-mapping", $r48);

        $r49 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r50 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r51 = virtualinvoke $r49.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitListener", $r50);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("listener", $r51);

        $r52 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r53 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.Class[] __signature>;

        $r54 = virtualinvoke $r52.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitDistributable", $r53);

        virtualinvoke r0.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void registerVisitor(java.lang.String,java.lang.reflect.Method)>("distributable", $r54);

     label2:
        goto label4;

     label3:
        $r55 := @caughtexception;

        $r56 = new java.lang.IllegalStateException;

        specialinvoke $r56.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r55);

        throw $r56;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void start(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor)
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r0;
        org.eclipse.jetty.webapp.Descriptor r2;

        r0 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r2 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        return;
    }

    public void end(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor)
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r0;
        org.eclipse.jetty.webapp.Descriptor r2;

        r0 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r2 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        return;
    }

    public void visitContextParam(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r3;
        java.lang.IllegalStateException $r23;
        int[] $r10;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r45;
        java.util.Map $r20, $r33, $r39;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.webapp.Descriptor r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r12, $r14, $r15, $r16, $r17, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r35, $r36, $r37, $r41, $r42, $r43;
        org.eclipse.jetty.webapp.Origin $r9;
        java.lang.Object[] $r19;
        org.eclipse.jetty.webapp.MetaData $r4, $r34, $r40;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r8, $r18, $r22, $r32, $r38, $r44;
        org.eclipse.jetty.util.resource.Resource $r30;
        java.lang.Object $r21;
        org.eclipse.jetty.util.log.Logger $r13, $r46;

        r45 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r11 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        $r4 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("context-param.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r4.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r8);

        $r10 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r9.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r10[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label4;
        };

     label1:
        $r39 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.util.Map getInitParams()>();

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r40 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("context-param.");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r44, r11);

        goto label4;

     label2:
        $z2 = r11 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z2 != 0 goto label4;

        $r33 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.util.Map getInitParams()>();

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r34 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("context-param.");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r38, r11);

        goto label4;

     label3:
        $z0 = r11 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 == 0 goto label4;

        $r20 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.util.Map getInitParams()>();

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r22 = (java.lang.String) $r21;

        $z1 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label4;

        $r23 = new java.lang.IllegalStateException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting context-param ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r30 = virtualinvoke r11.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r32);

        throw $r23;

     label4:
        $r46 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $z3 = interfaceinvoke $r46.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label5;

        $r13 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContextParam: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r18, $r19);

     label5:
        return;
    }

    protected void visitDisplayName(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.MetaData $r4;
        org.eclipse.jetty.webapp.WebAppContext r1;
        org.eclipse.jetty.xml.XmlParser$Node r2;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r5;
        org.eclipse.jetty.webapp.Descriptor r0;
        java.lang.String $r3;
        boolean $z0;

        r5 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r0 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r2 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $z0 = r0 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: void setDisplayName(java.lang.String)>($r3);

        $r4 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r4.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("display-name", r0);

     label1:
        return;
    }

    protected void visitServlet(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.Origin $r67, $r93, $r122, $r155, $r219, $r263, $r317, $r340;
        int[] $r68, $r94, $r123, $r156, $r220, $r264, $r318, $r341;
        javax.servlet.ServletRegistration$Dynamic $r14, $r48, $r54;
        org.eclipse.jetty.servlet.Holder$Source $r289;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r8, $r9, r306, r320, $r332;
        int $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, $i30, $i33, $i34, $i35;
        java.lang.Boolean $r87, $r115;
        java.lang.Class $r240;
        org.eclipse.jetty.util.log.Logger $r148, $r181, $r211, $r249, $r294, $r300, $r303, $r321;
        java.lang.Exception $r292;
        java.lang.String $r1, $r2, $r7, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r21, $r22, $r23, $r31, $r39, $r47, $r53, $r59, $r60, $r61, $r66, $r76, $r81, $r86, $r92, $r104, $r109, $r114, $r116, $r121, $r124, $r134, $r139, $r144, $r146, $r147, $r154, $r157, $r167, $r173, $r179, $r189, $r191, $r192, $r198, $r203, $r208, $r209, $r212, $r218, $r221, $r229, $r234, $r239, $r241, $r244, $r245, $r246, $r247, $r252, $r255, $r256, $r262, $r265, $r275, $r281, $r287, $r298, $r304, r307, r308, $r309, $r310, $r311, $r316, $r324, $r328, $r330, $r331, $r334, $r339, $r349;
        java.lang.ClassNotFoundException $r301;
        org.eclipse.jetty.webapp.WebAppContext r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z27, $z28, $z29, $z30, $z31, $z32, $z33;
        org.eclipse.jetty.webapp.Descriptor r20;
        org.eclipse.jetty.webapp.MetaData $r49, $r55, $r62, $r77, $r82, $r88, $r105, $r110, $r117, $r135, $r140, $r149, $r168, $r174, $r199, $r204, $r214, $r230, $r235, $r257, $r276, $r282, $r312, $r335;
        byte $b2, $b5;
        java.lang.StringBuilder $r25, $r26, $r27, $r28, $r30, $r33, $r34, $r35, $r36, $r38, $r41, $r42, $r43, $r44, $r46, $r50, $r51, $r52, $r56, $r57, $r58, $r63, $r64, $r65, $r70, $r71, $r72, $r73, $r75, $r78, $r79, $r80, $r83, $r84, $r85, $r89, $r90, $r91, $r96, $r97, $r98, $r99, $r100, $r101, $r103, $r106, $r107, $r108, $r111, $r112, $r113, $r118, $r119, $r120, $r126, $r127, $r128, $r129, $r130, $r131, $r133, $r136, $r137, $r138, $r141, $r142, $r143, $r150, $r151, $r152, $r153, $r159, $r160, $r161, $r162, $r163, $r164, $r166, $r169, $r170, $r171, $r172, $r175, $r176, $r177, $r178, $r180, $r182, $r183, $r184, $r185, $r186, $r188, $r194, $r195, $r197, $r200, $r201, $r202, $r205, $r206, $r207, $r215, $r216, $r217, $r223, $r224, $r225, $r226, $r228, $r231, $r232, $r233, $r236, $r237, $r238, $r248, $r250, $r251, $r258, $r259, $r260, $r261, $r267, $r268, $r269, $r270, $r271, $r272, $r274, $r277, $r278, $r279, $r280, $r283, $r284, $r285, $r286, $r293, $r295, $r296, $r297, $r313, $r314, $r315, $r322, $r323, $r325, $r326, $r327, $r336, $r337, $r338, $r343, $r344, $r345, $r346, $r348;
        java.lang.Object[] $r190, $r210, $r253, $r299, $r302, $r329;
        long $l0, $l1, $l3, $l4, $l31, $l32;
        org.eclipse.jetty.util.resource.Resource $r29, $r37, $r45, $r74, $r102, $r132, $r165, $r196, $r227, $r273, $r347;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r187;
        org.eclipse.jetty.servlet.ServletHandler $r4, $r288, $r291;
        javax.servlet.MultipartConfigElement $r16, $r333;
        org.eclipse.jetty.servlet.ServletHolder$Registration $r15;
        java.lang.Object $r145, $r254;
        org.eclipse.jetty.servlet.ServletHolder $r5, $r290, r305;
        java.io.File $r242, $r243;
        java.lang.IllegalStateException $r24, $r32, $r40, $r69, $r95, $r125, $r158, $r193, $r222, $r266, $r342;
        org.eclipse.jetty.webapp.WebDescriptor $r213;
        java.util.Iterator $r6, $r319;

        r187 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r20 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-name", 0, 1);

        $r4 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder getServlet(java.lang.String)>($r2);

        r305 = $r5;

        if $r5 != null goto label01;

        $r288 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r289 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source DESCRIPTOR>;

        $r290 = virtualinvoke $r288.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletHolder newServletHolder(org.eclipse.jetty.servlet.Holder$Source)>($r289);

        r305 = $r290;

        virtualinvoke $r290.<org.eclipse.jetty.servlet.ServletHolder: void setName(java.lang.String)>($r2);

        $r291 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r291.<org.eclipse.jetty.servlet.ServletHandler: void addServlet(org.eclipse.jetty.servlet.ServletHolder)>($r290);

     label01:
        $r6 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("init-param");

     label02:
        $z23 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label07;

        $r254 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r306 = (org.eclipse.jetty.xml.XmlParser$Node) $r254;

        $r255 = virtualinvoke r306.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r256 = virtualinvoke r306.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        $r257 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r258 = new java.lang.StringBuilder;

        specialinvoke $r258.<java.lang.StringBuilder: void <init>()>();

        $r259 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r260 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.init-param.");

        $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);

        $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.String toString()>();

        $r263 = virtualinvoke $r257.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r262);

        $r264 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i26 = virtualinvoke $r263.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i27 = $r264[$i26];

        tableswitch($i27)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label04;
            case 4: goto label04;
            case 5: goto label05;
            default: goto label06;
        };

     label03:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>($r255, $r256);

        $r282 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r283 = new java.lang.StringBuilder;

        specialinvoke $r283.<java.lang.StringBuilder: void <init>()>();

        $r284 = virtualinvoke $r283.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r285 = virtualinvoke $r284.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.init-param.");

        $r286 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);

        $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r282.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r287, r20);

        goto label06;

     label04:
        $z22 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z22 != 0 goto label06;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>($r255, $r256);

        $r276 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r277 = new java.lang.StringBuilder;

        specialinvoke $r277.<java.lang.StringBuilder: void <init>()>();

        $r278 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r279 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.init-param.");

        $r280 = virtualinvoke $r279.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);

        $r281 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r276.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r281, r20);

        goto label06;

     label05:
        $r265 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>($r255);

        $z21 = virtualinvoke $r265.<java.lang.String: boolean equals(java.lang.Object)>($r256);

        if $z21 != 0 goto label06;

        $r266 = new java.lang.IllegalStateException;

        $r267 = new java.lang.StringBuilder;

        specialinvoke $r267.<java.lang.StringBuilder: void <init>()>();

        $r268 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatching init-param ");

        $r269 = virtualinvoke $r268.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r255);

        $r270 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r271 = virtualinvoke $r270.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r256);

        $r272 = virtualinvoke $r271.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r273 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r274 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r273);

        $r275 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r266.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r275);

        throw $r266;

     label06:
        goto label02;

     label07:
        $r7 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-class", 0, 1);

        r307 = $r7;

        r308 = null;

        if $r1 == null goto label14;

        $z18 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("jsp");

        if $z18 == 0 goto label14;

        r308 = $r7;

     label08:
        $r240 = virtualinvoke r187.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r240, $r7);

     label09:
        goto label11;

     label10:
        $r301 := @caughtexception;

        $r303 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r302 = newarray (java.lang.Object)[2];

        $r304 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getContextPath()>();

        $r302[0] = $r304;

        $r302[1] = $r7;

        interfaceinvoke $r303.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("NO JSP Support for {}, did not find {}", $r302);

        r307 = "org.eclipse.jetty.servlet.NoJspServlet";

        r308 = "org.eclipse.jetty.servlet.NoJspServlet";

     label11:
        $r241 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>("scratchdir");

        if $r241 != null goto label13;

        $r242 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        $r243 = new java.io.File;

        specialinvoke $r243.<java.io.File: void <init>(java.io.File,java.lang.String)>($r242, "jsp");

        $z19 = virtualinvoke $r243.<java.io.File: boolean exists()>();

        if $z19 != 0 goto label12;

        virtualinvoke $r243.<java.io.File: boolean mkdir()>();

     label12:
        $r244 = virtualinvoke $r243.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("scratchdir", $r244);

        $r245 = "?";

        $r246 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getInitParameter(java.lang.String)>("classpath");

        $z20 = virtualinvoke $r245.<java.lang.String: boolean equals(java.lang.Object)>($r246);

        if $z20 == 0 goto label13;

        $r247 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getClassPath()>();

        $r249 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r248 = new java.lang.StringBuilder;

        specialinvoke $r248.<java.lang.StringBuilder: void <init>()>();

        $r250 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classpath=");

        $r251 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r247);

        $r252 = virtualinvoke $r251.<java.lang.StringBuilder: java.lang.String toString()>();

        $r253 = newarray (java.lang.Object)[0];

        interfaceinvoke $r249.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r252, $r253);

        if $r247 == null goto label13;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("classpath", $r247);

     label13:
        $r309 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getClassPath()>();

        virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: void setAttribute(java.lang.String,java.lang.Object)>("org.apache.catalina.jsp_classpath", $r309);

        $r310 = virtualinvoke r187.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String getSystemClassPath(org.eclipse.jetty.webapp.WebAppContext)>(r3);

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("com.sun.appserv.jsp.classpath", $r310);

     label14:
        if r307 == null goto label18;

        $r213 = (org.eclipse.jetty.webapp.WebDescriptor) r20;

        virtualinvoke $r213.<org.eclipse.jetty.webapp.WebDescriptor: void addClassName(java.lang.String)>(r307);

        $r214 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r215 = new java.lang.StringBuilder;

        specialinvoke $r215.<java.lang.StringBuilder: void <init>()>();

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r217 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.servlet-class");

        $r218 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.String toString()>();

        $r219 = virtualinvoke $r214.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r218);

        $r220 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i24 = virtualinvoke $r219.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i25 = $r220[$i24];

        tableswitch($i25)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label16;
            case 4: goto label16;
            case 5: goto label17;
            default: goto label18;
        };

     label15:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>(r307);

        $r235 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r236 = new java.lang.StringBuilder;

        specialinvoke $r236.<java.lang.StringBuilder: void <init>()>();

        $r237 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.servlet-class");

        $r239 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r235.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r239, r20);

        goto label18;

     label16:
        $z17 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z17 != 0 goto label18;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>(r307);

        $r230 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r231 = new java.lang.StringBuilder;

        specialinvoke $r231.<java.lang.StringBuilder: void <init>()>();

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.servlet-class");

        $r234 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r230.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r234, r20);

        goto label18;

     label17:
        $r221 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getClassName()>();

        $z16 = virtualinvoke r307.<java.lang.String: boolean equals(java.lang.Object)>($r221);

        if $z16 != 0 goto label18;

        $r222 = new java.lang.IllegalStateException;

        $r223 = new java.lang.StringBuilder;

        specialinvoke $r223.<java.lang.StringBuilder: void <init>()>();

        $r224 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting servlet-class ");

        $r225 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r307);

        $r226 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r227 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r228 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r227);

        $r229 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r222.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r229);

        throw $r222;

     label18:
        $r311 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("jsp-file", 0, 1);

        if $r311 == null goto label19;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setForcedPath(java.lang.String)>($r311);

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setClassName(java.lang.String)>(r308);

        $r212 = virtualinvoke r187.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String getSystemClassPath(org.eclipse.jetty.webapp.WebAppContext)>(r3);

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitParameter(java.lang.String,java.lang.String)>("com.sun.appserv.jsp.classpath", $r212);

     label19:
        $r8 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("load-on-startup");

        if $r8 == null goto label27;

        $r191 = virtualinvoke $r8.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r192 = virtualinvoke $r191.<java.lang.String: java.lang.String toLowerCase()>();

        i28 = 0;

        $z14 = virtualinvoke $r192.<java.lang.String: boolean startsWith(java.lang.String)>("t");

        if $z14 == 0 goto label20;

        $r211 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r210 = newarray (java.lang.Object)[0];

        interfaceinvoke $r211.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("Deprecated boolean load-on-startup.  Please use integer", $r210);

        i28 = 1;

        goto label23;

     label20:
        if $r192 == null goto label21;

        $r209 = virtualinvoke $r192.<java.lang.String: java.lang.String trim()>();

        $i23 = virtualinvoke $r209.<java.lang.String: int length()>();

        if $i23 <= 0 goto label21;

        i28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r192);

     label21:
        goto label23;

     label22:
        $r292 := @caughtexception;

        $r294 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r293 = new java.lang.StringBuilder;

        specialinvoke $r293.<java.lang.StringBuilder: void <init>()>();

        $r295 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse load-on-startup ");

        $r296 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r192);

        $r297 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please use integer");

        $r298 = virtualinvoke $r297.<java.lang.StringBuilder: java.lang.String toString()>();

        $r299 = newarray (java.lang.Object)[0];

        interfaceinvoke $r294.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r298, $r299);

        $r300 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r300.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r292);

     label23:
        $r312 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r313 = new java.lang.StringBuilder;

        specialinvoke $r313.<java.lang.StringBuilder: void <init>()>();

        $r314 = virtualinvoke $r313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r315 = virtualinvoke $r314.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.load-on-startup");

        $r316 = virtualinvoke $r315.<java.lang.StringBuilder: java.lang.String toString()>();

        $r317 = virtualinvoke $r312.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r316);

        $r318 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i29 = virtualinvoke $r317.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i30 = $r318[$i29];

        tableswitch($i30)
        {
            case 1: goto label24;
            case 2: goto label25;
            case 3: goto label25;
            case 4: goto label25;
            case 5: goto label26;
            default: goto label27;
        };

     label24:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitOrder(int)>(i28);

        $r204 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r205 = new java.lang.StringBuilder;

        specialinvoke $r205.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.load-on-startup");

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r204.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r208, r20);

        goto label27;

     label25:
        $z15 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z15 != 0 goto label27;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setInitOrder(int)>(i28);

        $r199 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r200 = new java.lang.StringBuilder;

        specialinvoke $r200.<java.lang.StringBuilder: void <init>()>();

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.load-on-startup");

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r199.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r203, r20);

        goto label27;

     label26:
        $i22 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: int getInitOrder()>();

        if i28 == $i22 goto label27;

        $r193 = new java.lang.IllegalStateException;

        $r194 = new java.lang.StringBuilder;

        specialinvoke $r194.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting load-on-startup value in ");

        $r196 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r197 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r196);

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r193.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r198);

        throw $r193;

     label27:
        $r319 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("security-role-ref");

     label28:
        $z24 = interfaceinvoke $r319.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label36;

        $r145 = interfaceinvoke $r319.<java.util.Iterator: java.lang.Object next()>();

        r320 = (org.eclipse.jetty.xml.XmlParser$Node) $r145;

        $r146 = virtualinvoke r320.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-name", 0, 1);

        $r147 = virtualinvoke r320.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-link", 0, 1);

        if $r146 == null goto label34;

        $i18 = virtualinvoke $r146.<java.lang.String: int length()>();

        if $i18 <= 0 goto label34;

        if $r147 == null goto label34;

        $i19 = virtualinvoke $r147.<java.lang.String: int length()>();

        if $i19 <= 0 goto label34;

        $r148 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $z11 = interfaceinvoke $r148.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z11 == 0 goto label29;

        $r181 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r180 = new java.lang.StringBuilder;

        specialinvoke $r180.<java.lang.StringBuilder: void <init>()>();

        $r182 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("link role ");

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r188 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r187);

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        $r190 = newarray (java.lang.Object)[0];

        interfaceinvoke $r181.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r189, $r190);

     label29:
        $r149 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>()>();

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.role-name.");

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        $r155 = virtualinvoke $r149.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r154);

        $r156 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i20 = virtualinvoke $r155.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i21 = $r156[$i20];

        tableswitch($i21)
        {
            case 1: goto label30;
            case 2: goto label31;
            case 3: goto label31;
            case 4: goto label31;
            case 5: goto label32;
            default: goto label33;
        };

     label30:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setUserRoleLink(java.lang.String,java.lang.String)>($r146, $r147);

        $r174 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r175 = new java.lang.StringBuilder;

        specialinvoke $r175.<java.lang.StringBuilder: void <init>()>();

        $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.role-name.");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r174.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r179, r20);

        goto label33;

     label31:
        $z13 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z13 != 0 goto label33;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setUserRoleLink(java.lang.String,java.lang.String)>($r146, $r147);

        $r168 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.role-name.");

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r168.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r173, r20);

        goto label33;

     label32:
        $r157 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getUserRoleLink(java.lang.String)>($r146);

        $z12 = virtualinvoke $r157.<java.lang.String: boolean equals(java.lang.Object)>($r147);

        if $z12 != 0 goto label33;

        $r158 = new java.lang.IllegalStateException;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting role-link for role-name ");

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for servlet ");

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r165 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r165);

        $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r158.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r167);

        throw $r158;

     label33:
        goto label35;

     label34:
        $r321 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r322 = new java.lang.StringBuilder;

        specialinvoke $r322.<java.lang.StringBuilder: void <init>()>();

        $r323 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored invalid security-role-ref element: servlet-name=");

        $r324 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        $r325 = virtualinvoke $r323.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r324);

        $r326 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r320);

        $r328 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.String toString()>();

        $r329 = newarray (java.lang.Object)[0];

        interfaceinvoke $r321.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r328, $r329);

     label35:
        goto label28;

     label36:
        $r9 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("run-as");

        if $r9 == null goto label40;

        $r116 = virtualinvoke $r9.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("role-name", 0, 1);

        if $r116 == null goto label40;

        $r117 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.run-as");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        $r122 = virtualinvoke $r117.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r121);

        $r123 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i16 = virtualinvoke $r122.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i17 = $r123[$i16];

        tableswitch($i17)
        {
            case 1: goto label37;
            case 2: goto label38;
            case 3: goto label38;
            case 4: goto label38;
            case 5: goto label39;
            default: goto label40;
        };

     label37:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setRunAsRole(java.lang.String)>($r116);

        $r140 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.run-as");

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r140.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r144, r20);

        goto label40;

     label38:
        $z10 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z10 != 0 goto label40;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setRunAsRole(java.lang.String)>($r116);

        $r135 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.run-as");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r135.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r139, r20);

        goto label40;

     label39:
        $r124 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getRunAsRole()>();

        $z9 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>($r116);

        if $z9 != 0 goto label40;

        $r125 = new java.lang.IllegalStateException;

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting run-as role ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for servlet ");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r132 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r125.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r134);

        throw $r125;

     label40:
        $r330 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("async-supported", 0, 1);

        if $r330 == null goto label47;

        $i13 = virtualinvoke $r330.<java.lang.String: int length()>();

        if $i13 == 0 goto label41;

        $r115 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r330);

        $z8 = virtualinvoke $r115.<java.lang.Boolean: boolean booleanValue()>();

        if $z8 == 0 goto label42;

     label41:
        $z33 = 1;

        $z32 = 1;

        $z31 = 1;

        goto label43;

     label42:
        $z33 = 0;

        $z32 = 0;

        $z31 = 0;

     label43:
        $r88 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.async-supported");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        $r93 = virtualinvoke $r88.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r92);

        $r94 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i14 = virtualinvoke $r93.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i15 = $r94[$i14];

        tableswitch($i15)
        {
            case 1: goto label44;
            case 2: goto label45;
            case 3: goto label45;
            case 4: goto label45;
            case 5: goto label46;
            default: goto label47;
        };

     label44:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setAsyncSupported(boolean)>($z32);

        $r110 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.async-supported");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r110.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r114, r20);

        goto label47;

     label45:
        $z7 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z7 != 0 goto label47;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setAsyncSupported(boolean)>($z33);

        $r105 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.async-supported");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r105.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r109, r20);

        goto label47;

     label46:
        $z6 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: boolean isAsyncSupported()>();

        if $z6 == $z31 goto label47;

        $r95 = new java.lang.IllegalStateException;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting async-supported=");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r330);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for servlet ");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r102 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r95.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r104);

        throw $r95;

     label47:
        $r331 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("enabled", 0, 1);

        if $r331 == null goto label54;

        $i10 = virtualinvoke $r331.<java.lang.String: int length()>();

        if $i10 == 0 goto label48;

        $r87 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r331);

        $z5 = virtualinvoke $r87.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label49;

     label48:
        $z30 = 1;

        $z29 = 1;

        $z28 = 1;

        goto label50;

     label49:
        $z30 = 0;

        $z29 = 0;

        $z28 = 0;

     label50:
        $r62 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.enabled");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r67 = virtualinvoke $r62.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r66);

        $r68 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i11 = virtualinvoke $r67.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i12 = $r68[$i11];

        tableswitch($i12)
        {
            case 1: goto label51;
            case 2: goto label52;
            case 3: goto label52;
            case 4: goto label52;
            case 5: goto label53;
            default: goto label54;
        };

     label51:
        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setEnabled(boolean)>($z29);

        $r82 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.enabled");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r86, r20);

        goto label54;

     label52:
        $z4 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z4 != 0 goto label54;

        virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: void setEnabled(boolean)>($z28);

        $r77 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.enabled");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r77.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r81, r20);

        goto label54;

     label53:
        $z3 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: boolean isEnabled()>();

        if $z3 == $z30 goto label54;

        $r69 = new java.lang.IllegalStateException;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting value of servlet enabled for servlet ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r74 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r76);

        throw $r69;

     label54:
        $r332 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("multipart-config");

        if $r332 == null goto label72;

        $r10 = virtualinvoke $r332.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("location", 0, 1);

        $r11 = virtualinvoke $r332.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("max-file-size", 0, 1);

        $r12 = virtualinvoke $r332.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("max-request-size", 0, 1);

        $r13 = virtualinvoke $r332.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("file-size-threshold", 0, 1);

        $r333 = new javax.servlet.MultipartConfigElement;

        if $r11 == null goto label55;

        $r61 = "";

        $z2 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label56;

     label55:
        $l31 = -1L;

        goto label57;

     label56:
        $l31 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

     label57:
        if $r12 == null goto label58;

        $r60 = "";

        $z1 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label59;

     label58:
        $l32 = -1L;

        goto label60;

     label59:
        $l32 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

     label60:
        if $r13 == null goto label61;

        $r334 = "";

        $z27 = virtualinvoke $r334.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z27 == 0 goto label62;

     label61:
        $i33 = 0;

        goto label63;

     label62:
        $i33 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

     label63:
        specialinvoke $r333.<javax.servlet.MultipartConfigElement: void <init>(java.lang.String,long,long,int)>($r10, $l31, $l32, $i33);

        $r335 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r336 = new java.lang.StringBuilder;

        specialinvoke $r336.<java.lang.StringBuilder: void <init>()>();

        $r337 = virtualinvoke $r336.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r338 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.multipart-config");

        $r339 = virtualinvoke $r338.<java.lang.StringBuilder: java.lang.String toString()>();

        $r340 = virtualinvoke $r335.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r339);

        $r341 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i34 = virtualinvoke $r340.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i35 = $r341[$i34];

        tableswitch($i35)
        {
            case 1: goto label64;
            case 2: goto label65;
            case 3: goto label65;
            case 4: goto label65;
            case 5: goto label66;
            default: goto label72;
        };

     label64:
        $r54 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic getRegistration()>();

        interfaceinvoke $r54.<javax.servlet.ServletRegistration$Dynamic: void setMultipartConfig(javax.servlet.MultipartConfigElement)>($r333);

        $r55 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.multipart-config");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r59, r20);

        goto label72;

     label65:
        $z0 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 != 0 goto label72;

        $r48 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic getRegistration()>();

        interfaceinvoke $r48.<javax.servlet.ServletRegistration$Dynamic: void setMultipartConfig(javax.servlet.MultipartConfigElement)>($r333);

        $r49 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.multipart-config");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r53, r20);

        goto label72;

     label66:
        $r14 = virtualinvoke r305.<org.eclipse.jetty.servlet.ServletHolder: javax.servlet.ServletRegistration$Dynamic getRegistration()>();

        $r15 = (org.eclipse.jetty.servlet.ServletHolder$Registration) $r14;

        $r16 = virtualinvoke $r15.<org.eclipse.jetty.servlet.ServletHolder$Registration: javax.servlet.MultipartConfigElement getMultipartConfig()>();

        $l0 = virtualinvoke $r16.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $l1 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: long getMaxFileSize()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label67;

        $r40 = new java.lang.IllegalStateException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting multipart-config max-file-size for servlet ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r45 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r47);

        throw $r40;

     label67:
        $l3 = virtualinvoke $r16.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $l4 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label68;

        $r32 = new java.lang.IllegalStateException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting multipart-config max-request-size for servlet ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r37 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r39);

        throw $r32;

     label68:
        $i6 = virtualinvoke $r16.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        $i7 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: int getFileSizeThreshold()>();

        if $i6 == $i7 goto label69;

        $r24 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting multipart-config file-size-threshold for servlet ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r29 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r24;

     label69:
        $r17 = virtualinvoke $r16.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        if $r17 == null goto label70;

        $r22 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        if $r22 == null goto label71;

        $r23 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        $i9 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i9 == 0 goto label71;

     label70:
        $r18 = virtualinvoke $r16.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        if $r18 != null goto label72;

        $r19 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        if $r19 != null goto label71;

        $r21 = virtualinvoke $r333.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        $i8 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i8 <= 0 goto label72;

     label71:
        $r342 = new java.lang.IllegalStateException;

        $r343 = new java.lang.StringBuilder;

        specialinvoke $r343.<java.lang.StringBuilder: void <init>()>();

        $r344 = virtualinvoke $r343.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting multipart-config location for servlet ");

        $r345 = virtualinvoke $r344.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r347 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r348 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r347);

        $r349 = virtualinvoke $r348.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r342.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r349);

        throw $r342;

     label72:
        return;

        catch java.lang.ClassNotFoundException from label08 to label09 with label10;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    protected void visitServletMapping(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r2;
        org.eclipse.jetty.webapp.MetaData $r3, $r12;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int[] $r9;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r10;
        int $i0, $i1;
        java.lang.String $r1, $r7, $r16;
        boolean $z0;
        org.eclipse.jetty.webapp.Descriptor r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r13, $r14, $r15;
        org.eclipse.jetty.webapp.Origin $r8;

        r10 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r11 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("servlet-name", 0, 1);

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.mappings");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r3.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r7);

        $r9 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r8.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r9[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label4;
        };

     label1:
        $r12 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".servlet.mappings");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r16, r11);

        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addServletMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

        goto label4;

     label2:
        $z0 = r11 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 != 0 goto label4;

        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addServletMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

        goto label4;

     label3:
        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addServletMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

     label4:
        return;
    }

    protected void visitSessionConfig(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r26, $r44, $r45, $r46, $r47, $r49, $r67, $r68, $r69, $r70, $r72, $r90, $r91, $r92, $r93, $r95, $r113, $r114, $r115, $r116, $r118, $r136, $r137, $r138, $r139, $r141, $r159, $r160, $r161, $r162, $r164;
        org.eclipse.jetty.webapp.Origin $r14, $r38, $r61, $r83, $r106, $r129, $r152;
        javax.servlet.SessionTrackingMode $r176;
        org.eclipse.jetty.util.resource.Resource $r25, $r48, $r71, $r94, $r117, $r140, $r163;
        int[] $r15, $r39, $r62, $r84, $r107, $r130, $r153;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r180;
        java.util.HashSet $r3;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r1, $r10, r181, $r185, $r186, $r187;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.Object $r174;
        javax.servlet.SessionCookieConfig $r18, $r30, $r34, $r42, $r53, $r57, $r65, $r76, $r80, $r87, $r99, $r103, $r110, $r122, $r126, $r133, $r145, $r149, $r156, $r168, $r172;
        java.util.Set $r7;
        java.lang.String $r11, $r12, $r27, $r36, $r50, $r59, $r73, $r88, $r96, $r111, $r119, $r134, $r142, $r157, $r165, $r175, $r177, $r182, $r183, $r184;
        org.eclipse.jetty.server.SessionManager $r6, $r9, $r17, $r29, $r33, $r41, $r52, $r56, $r64, $r75, $r79, $r86, $r98, $r102, $r109, $r121, $r125, $r132, $r144, $r148, $r155, $r167, $r171, $r179;
        org.eclipse.jetty.webapp.WebAppContext r4;
        java.lang.IllegalStateException $r19, $r43, $r66, $r89, $r112, $r135, $r158;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.eclipse.jetty.webapp.Descriptor r24;
        org.eclipse.jetty.webapp.MetaData $r13, $r31, $r35, $r37, $r54, $r58, $r60, $r77, $r81, $r82, $r100, $r104, $r105, $r123, $r127, $r128, $r146, $r150, $r151, $r169, $r173;
        java.util.Iterator $r2;
        org.eclipse.jetty.server.session.SessionHandler $r5, $r8, $r16, $r28, $r32, $r40, $r51, $r55, $r63, $r74, $r78, $r85, $r97, $r101, $r108, $r120, $r124, $r131, $r143, $r147, $r154, $r166, $r170, $r178;

        r180 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r4 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r24 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("session-timeout");

        if $r1 == null goto label01;

        $r177 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r177);

        $r178 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r179 = virtualinvoke $r178.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $i17 = $i16 * 60;

        interfaceinvoke $r179.<org.eclipse.jetty.server.SessionManager: void setMaxInactiveInterval(int)>($i17);

     label01:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("tracking-mode");

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r5 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r7 = interfaceinvoke $r6.<org.eclipse.jetty.server.SessionManager: java.util.Set getEffectiveSessionTrackingModes()>();

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

     label02:
        $z15 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label03;

        $r174 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r181 = (org.eclipse.jetty.xml.XmlParser$Node) $r174;

        $r175 = virtualinvoke r181.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r176 = staticinvoke <javax.servlet.SessionTrackingMode: javax.servlet.SessionTrackingMode valueOf(java.lang.String)>($r175);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r176);

        goto label02;

     label03:
        $r8 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        interfaceinvoke $r9.<org.eclipse.jetty.server.SessionManager: void setSessionTrackingModes(java.util.Set)>($r3);

        $r10 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("cookie-config");

        if $r10 == null goto label31;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("name", 0, 1);

        if $r11 == null goto label07;

        $r151 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r152 = virtualinvoke $r151.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.name");

        $r153 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i14 = virtualinvoke $r152.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i15 = $r153[$i14];

        tableswitch($i15)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label05;
            case 4: goto label05;
            case 5: goto label06;
            default: goto label07;
        };

     label04:
        $r170 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r171 = virtualinvoke $r170.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r172 = interfaceinvoke $r171.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r172.<javax.servlet.SessionCookieConfig: void setName(java.lang.String)>($r11);

        $r173 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r173.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.name", r24);

        goto label07;

     label05:
        $z14 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z14 != 0 goto label07;

        $r166 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r167 = virtualinvoke $r166.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r168 = interfaceinvoke $r167.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r168.<javax.servlet.SessionCookieConfig: void setName(java.lang.String)>($r11);

        $r169 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r169.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.name", r24);

        goto label07;

     label06:
        $r154 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r155 = virtualinvoke $r154.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r156 = interfaceinvoke $r155.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $r157 = interfaceinvoke $r156.<javax.servlet.SessionCookieConfig: java.lang.String getName()>();

        $z13 = virtualinvoke $r157.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z13 != 0 goto label07;

        $r158 = new java.lang.IllegalStateException;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config name ");

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r163 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r164 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r163);

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r158.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r165);

        throw $r158;

     label07:
        $r182 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("domain", 0, 1);

        if $r182 == null goto label11;

        $r128 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r129 = virtualinvoke $r128.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.domain");

        $r130 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i12 = virtualinvoke $r129.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i13 = $r130[$i12];

        tableswitch($i13)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label10;
            default: goto label11;
        };

     label08:
        $r147 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r148 = virtualinvoke $r147.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r149 = interfaceinvoke $r148.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r149.<javax.servlet.SessionCookieConfig: void setDomain(java.lang.String)>($r182);

        $r150 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r150.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.domain", r24);

        goto label11;

     label09:
        $z12 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z12 != 0 goto label11;

        $r143 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r144 = virtualinvoke $r143.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r145 = interfaceinvoke $r144.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r145.<javax.servlet.SessionCookieConfig: void setDomain(java.lang.String)>($r182);

        $r146 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r146.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.domain", r24);

        goto label11;

     label10:
        $r131 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r132 = virtualinvoke $r131.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r133 = interfaceinvoke $r132.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $r134 = interfaceinvoke $r133.<javax.servlet.SessionCookieConfig: java.lang.String getDomain()>();

        $z11 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>($r182);

        if $z11 != 0 goto label11;

        $r135 = new java.lang.IllegalStateException;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config domain ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r182);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r140 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r135.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r142);

        throw $r135;

     label11:
        $r183 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("path", 0, 1);

        if $r183 == null goto label15;

        $r105 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r106 = virtualinvoke $r105.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.path");

        $r107 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i10 = virtualinvoke $r106.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i11 = $r107[$i10];

        tableswitch($i11)
        {
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label14;
            default: goto label15;
        };

     label12:
        $r124 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r125 = virtualinvoke $r124.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r126 = interfaceinvoke $r125.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r126.<javax.servlet.SessionCookieConfig: void setPath(java.lang.String)>($r183);

        $r127 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r127.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.path", r24);

        goto label15;

     label13:
        $z10 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z10 != 0 goto label15;

        $r120 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r121 = virtualinvoke $r120.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r122 = interfaceinvoke $r121.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r122.<javax.servlet.SessionCookieConfig: void setPath(java.lang.String)>($r183);

        $r123 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r123.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.path", r24);

        goto label15;

     label14:
        $r108 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r109 = virtualinvoke $r108.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r110 = interfaceinvoke $r109.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $r111 = interfaceinvoke $r110.<javax.servlet.SessionCookieConfig: java.lang.String getPath()>();

        $z9 = virtualinvoke $r111.<java.lang.String: boolean equals(java.lang.Object)>($r183);

        if $z9 != 0 goto label15;

        $r112 = new java.lang.IllegalStateException;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config path ");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r183);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r117 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r117);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r112.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r119);

        throw $r112;

     label15:
        $r184 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("comment", 0, 1);

        if $r184 == null goto label19;

        $r82 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r83 = virtualinvoke $r82.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.comment");

        $r84 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i8 = virtualinvoke $r83.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i9 = $r84[$i8];

        tableswitch($i9)
        {
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label17;
            case 4: goto label17;
            case 5: goto label18;
            default: goto label19;
        };

     label16:
        $r101 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r102 = virtualinvoke $r101.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r103 = interfaceinvoke $r102.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r103.<javax.servlet.SessionCookieConfig: void setComment(java.lang.String)>($r184);

        $r104 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r104.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.comment", r24);

        goto label19;

     label17:
        $z8 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z8 != 0 goto label19;

        $r97 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r98 = virtualinvoke $r97.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r99 = interfaceinvoke $r98.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r99.<javax.servlet.SessionCookieConfig: void setComment(java.lang.String)>($r184);

        $r100 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r100.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.comment", r24);

        goto label19;

     label18:
        $r85 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r86 = virtualinvoke $r85.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r87 = interfaceinvoke $r86.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $r88 = interfaceinvoke $r87.<javax.servlet.SessionCookieConfig: java.lang.String getComment()>();

        $z7 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>($r184);

        if $z7 != 0 goto label19;

        $r89 = new java.lang.IllegalStateException;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config comment ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r184);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r94 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r94);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r89.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r96);

        throw $r89;

     label19:
        $r185 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("http-only");

        if $r185 == null goto label23;

        $r59 = virtualinvoke $r185.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r59);

        $r60 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r61 = virtualinvoke $r60.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.http-only");

        $r62 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i6 = virtualinvoke $r61.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i7 = $r62[$i6];

        tableswitch($i7)
        {
            case 1: goto label20;
            case 2: goto label21;
            case 3: goto label21;
            case 4: goto label21;
            case 5: goto label22;
            default: goto label23;
        };

     label20:
        $r78 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r79 = virtualinvoke $r78.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r80 = interfaceinvoke $r79.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r80.<javax.servlet.SessionCookieConfig: void setHttpOnly(boolean)>($z4);

        $r81 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r81.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.http-only", r24);

        goto label23;

     label21:
        $z6 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z6 != 0 goto label23;

        $r74 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r75 = virtualinvoke $r74.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r76 = interfaceinvoke $r75.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r76.<javax.servlet.SessionCookieConfig: void setHttpOnly(boolean)>($z4);

        $r77 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r77.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.http-only", r24);

        goto label23;

     label22:
        $r63 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r64 = virtualinvoke $r63.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r65 = interfaceinvoke $r64.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $z5 = interfaceinvoke $r65.<javax.servlet.SessionCookieConfig: boolean isHttpOnly()>();

        if $z5 == $z4 goto label23;

        $r66 = new java.lang.IllegalStateException;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config http-only ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r71 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r73);

        throw $r66;

     label23:
        $r186 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("secure");

        if $r186 == null goto label27;

        $r36 = virtualinvoke $r186.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r36);

        $r37 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r38 = virtualinvoke $r37.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.secure");

        $r39 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i4 = virtualinvoke $r38.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i5 = $r39[$i4];

        tableswitch($i5)
        {
            case 1: goto label24;
            case 2: goto label25;
            case 3: goto label25;
            case 4: goto label25;
            case 5: goto label26;
            default: goto label27;
        };

     label24:
        $r55 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r56 = virtualinvoke $r55.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r57 = interfaceinvoke $r56.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r57.<javax.servlet.SessionCookieConfig: void setSecure(boolean)>($z1);

        $r58 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r58.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.secure", r24);

        goto label27;

     label25:
        $z3 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z3 != 0 goto label27;

        $r51 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r52 = virtualinvoke $r51.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r53 = interfaceinvoke $r52.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r53.<javax.servlet.SessionCookieConfig: void setSecure(boolean)>($z1);

        $r54 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r54.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.secure", r24);

        goto label27;

     label26:
        $r40 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r41 = virtualinvoke $r40.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r42 = interfaceinvoke $r41.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $z2 = interfaceinvoke $r42.<javax.servlet.SessionCookieConfig: boolean isSecure()>();

        if $z2 == $z1 goto label27;

        $r43 = new java.lang.IllegalStateException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config secure ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r48 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r50);

        throw $r43;

     label27:
        $r187 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("max-age");

        if $r187 == null goto label31;

        $r12 = virtualinvoke $r187.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        $r13 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r14 = virtualinvoke $r13.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("cookie-config.max-age");

        $r15 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i1 = virtualinvoke $r14.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i2 = $r15[$i1];

        tableswitch($i2)
        {
            case 1: goto label28;
            case 2: goto label29;
            case 3: goto label29;
            case 4: goto label29;
            case 5: goto label30;
            default: goto label31;
        };

     label28:
        $r32 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r33 = virtualinvoke $r32.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r34 = interfaceinvoke $r33.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r34.<javax.servlet.SessionCookieConfig: void setMaxAge(int)>($i0);

        $r35 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r35.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.max-age", r24);

        goto label31;

     label29:
        $z0 = r24 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 != 0 goto label31;

        $r28 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r29 = virtualinvoke $r28.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r30 = interfaceinvoke $r29.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        interfaceinvoke $r30.<javax.servlet.SessionCookieConfig: void setMaxAge(int)>($i0);

        $r31 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r31.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("cookie-config.max-age", r24);

        goto label31;

     label30:
        $r16 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r17 = virtualinvoke $r16.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.SessionManager getSessionManager()>();

        $r18 = interfaceinvoke $r17.<org.eclipse.jetty.server.SessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $i3 = interfaceinvoke $r18.<javax.servlet.SessionCookieConfig: int getMaxAge()>();

        if $i3 == $i0 goto label31;

        $r19 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting cookie-config max-age ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r25 = virtualinvoke r24.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r19;

     label31:
        return;
    }

    protected void visitMimeMapping(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r2;
        java.lang.IllegalStateException $r18;
        int[] $r9;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r41;
        org.eclipse.jetty.io.Buffer $r15, $r17;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.webapp.Descriptor r25;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r12, $r13, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r31, $r32, $r33, $r37, $r38, $r39;
        org.eclipse.jetty.http.MimeTypes $r10, $r29, $r35;
        org.eclipse.jetty.webapp.Origin $r8;
        org.eclipse.jetty.webapp.MetaData $r3, $r30, $r36;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        org.eclipse.jetty.io.BufferCache $r16;
        int $i0, $i1;
        java.lang.String $r1, $r7, $r14, $r28, $r34, $r40, r42, $r43;
        org.eclipse.jetty.util.resource.Resource $r26;

        r41 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r25 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("extension", 0, 1);

        r42 = $r1;

        if $r1 == null goto label1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z2 == 0 goto label1;

        r42 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $r43 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("mime-type", 0, 1);

        if r42 == null goto label5;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r3.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r7);

        $r9 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r8.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r9[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label2:
        $r35 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.http.MimeTypes getMimeTypes()>();

        virtualinvoke $r35.<org.eclipse.jetty.http.MimeTypes: void addMimeMapping(java.lang.String,java.lang.String)>(r42, $r43);

        $r36 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r40, r25);

        goto label5;

     label3:
        $z1 = r25 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z1 != 0 goto label5;

        $r29 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.http.MimeTypes getMimeTypes()>();

        virtualinvoke $r29.<org.eclipse.jetty.http.MimeTypes: void addMimeMapping(java.lang.String,java.lang.String)>(r42, $r43);

        $r30 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension.");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r34, r25);

        goto label5;

     label4:
        $r10 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.http.MimeTypes getMimeTypes()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke $r10.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r14);

        virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.http.MimeTypes getMimeTypes()>();

        $r16 = <org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.BufferCache CACHE>;

        $r17 = virtualinvoke $r16.<org.eclipse.jetty.io.BufferCache: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>($r43);

        $z0 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z0 != 0 goto label5;

        $r18 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting mime-type ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for extension ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r26 = virtualinvoke r25.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r18;

     label5:
        return;
    }

    protected void visitWelcomeFileList(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.Descriptor r6;
        java.lang.String[] $r7;
        org.eclipse.jetty.webapp.MetaData $r1, $r8;
        org.eclipse.jetty.xml.XmlParser$Node r5;
        int[] $r3;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r4;
        int $i0, $i1;
        org.eclipse.jetty.webapp.Origin $r2;
        boolean $z0, $z1, $z2;

        r4 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r6 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r5 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("welcome-file-list");

        $r3 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r2.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        $r8 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r8.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("welcome-file-list", r6);

        virtualinvoke r4.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r5);

        goto label7;

     label2:
        virtualinvoke r4.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r5);

        goto label7;

     label3:
        $z0 = r6 instanceof org.eclipse.jetty.webapp.DefaultsDescriptor;

        if $z0 != 0 goto label4;

        $z1 = r6 instanceof org.eclipse.jetty.webapp.OverrideDescriptor;

        if $z1 != 0 goto label4;

        $z2 = r6 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z2 != 0 goto label4;

        $r7 = newarray (java.lang.String)[0];

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setWelcomeFiles(java.lang.String[])>($r7);

     label4:
        virtualinvoke r4.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r5);

        goto label7;

     label5:
        virtualinvoke r4.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r5);

        goto label7;

     label6:
        virtualinvoke r4.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r5);

     label7:
        return;
    }

    protected void visitLocaleEncodingList(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r6;
        java.lang.IllegalStateException $r15;
        int[] $r13;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r34;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.webapp.Descriptor r20;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r22, $r25, $r26, $r27, $r30, $r31, $r32;
        org.eclipse.jetty.webapp.Origin $r12;
        org.eclipse.jetty.webapp.MetaData $r7, $r24, $r29;
        org.eclipse.jetty.xml.XmlParser$Node r0, r3;
        int $i0, $i1;
        java.lang.String $r4, $r5, $r11, $r14, $r23, $r28, $r33;
        java.util.Iterator $r1;
        org.eclipse.jetty.util.resource.Resource $r21;
        java.lang.Object $r2;

        r34 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r6 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r20 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("locale-encoding-mapping");

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.eclipse.jetty.xml.XmlParser$Node) $r2;

        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("locale", 0, 1);

        $r5 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("encoding", 0, 1);

        if $r5 == null goto label5;

        $r7 = virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locale-encoding.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r7.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r11);

        $r13 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r12.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r13[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label2:
        virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: void addLocaleEncoding(java.lang.String,java.lang.String)>($r4, $r5);

        $r29 = virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locale-encoding.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r33, r20);

        goto label5;

     label3:
        $z2 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z2 != 0 goto label5;

        virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: void addLocaleEncoding(java.lang.String,java.lang.String)>($r4, $r5);

        $r24 = virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locale-encoding.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r28, r20);

        goto label5;

     label4:
        $r14 = virtualinvoke r6.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getLocaleEncoding(java.lang.String)>($r4);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label5;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting loacle-encoding mapping for locale ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r21 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r15;

     label5:
        goto label1;

     label6:
        return;
    }

    protected void visitErrorPage(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r3;
        java.lang.IllegalStateException $r15;
        java.lang.Integer $r34;
        org.eclipse.jetty.server.handler.ErrorHandler $r4;
        int[] $r11;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r36;
        java.util.Map $r12;
        boolean $z0, $z1;
        org.eclipse.jetty.webapp.Descriptor r20;
        java.lang.StringBuilder $r6, $r7, $r8, $r16, $r17, $r18, $r19, $r22, $r25, $r26, $r27, $r30, $r31, $r32;
        org.eclipse.jetty.webapp.Origin $r10;
        org.eclipse.jetty.webapp.MetaData $r5, $r24, $r29;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r2, $r9, $r14, $r23, $r28, $r33, r37;
        org.eclipse.jetty.servlet.ErrorPageErrorHandler $r35;
        org.eclipse.jetty.util.resource.Resource $r21;
        java.lang.Object $r13;

        r36 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r20 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("error-code", 0, 1);

        r37 = $r1;

        i3 = 0;

        if $r1 == null goto label01;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label02;

     label01:
        r37 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("exception-type", 0, 1);

        goto label03;

     label02:
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        i3 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

     label03:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("location", 0, 1);

        $r4 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ErrorHandler getErrorHandler()>();

        $r35 = (org.eclipse.jetty.servlet.ErrorPageErrorHandler) $r4;

        $r5 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r5.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r9);

        $r11 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r10.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label07;
            case 5: goto label10;
            default: goto label11;
        };

     label04:
        if i3 <= 0 goto label05;

        virtualinvoke $r35.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: void addErrorPage(int,java.lang.String)>(i3, $r2);

        goto label06;

     label05:
        virtualinvoke $r35.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: void addErrorPage(java.lang.String,java.lang.String)>(r37, $r2);

     label06:
        $r29 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r33, r20);

        goto label11;

     label07:
        $z1 = r20 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z1 != 0 goto label11;

        if i3 <= 0 goto label08;

        virtualinvoke $r35.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: void addErrorPage(int,java.lang.String)>(i3, $r2);

        goto label09;

     label08:
        virtualinvoke $r35.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: void addErrorPage(java.lang.String,java.lang.String)>(r37, $r2);

     label09:
        $r24 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r28, r20);

        goto label11;

     label10:
        $r12 = virtualinvoke $r35.<org.eclipse.jetty.servlet.ErrorPageErrorHandler: java.util.Map getErrorPages()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r37);

        $r14 = (java.lang.String) $r13;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label11;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting error-code or exception-type ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r21 = virtualinvoke r20.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r15;

     label11:
        return;
    }

    protected void addWelcomeFiles(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r5;
        java.lang.Object[] $r7;
        java.util.Iterator $r1;
        java.lang.String[] $r6, $r8, $r9;
        org.eclipse.jetty.xml.XmlParser$Node r0, r3;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r10;
        java.lang.Object $r2;
        java.lang.String $r4;
        boolean $z0;

        r10 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r5 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r0 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("welcome-file");

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.eclipse.jetty.xml.XmlParser$Node) $r2;

        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r6 = virtualinvoke r5.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String[] getWelcomeFiles()>();

        $r7 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r6, $r4, class "Ljava/lang/String;");

        $r8 = (java.lang.String[]) $r7;

        $r9 = (java.lang.String[]) $r8;

        virtualinvoke r5.<org.eclipse.jetty.webapp.WebAppContext: void setWelcomeFiles(java.lang.String[])>($r9);

        goto label1;

     label2:
        return;
    }

    protected void addServletMapping(java.lang.String, org.eclipse.jetty.xml.XmlParser$Node, org.eclipse.jetty.webapp.WebAppContext)
    {
        org.eclipse.jetty.webapp.WebAppContext r9;
        java.lang.Object[] $r6;
        java.lang.String[] $r5, $r7, $r8;
        java.util.ArrayList $r2;
        org.eclipse.jetty.xml.XmlParser$Node r3, $r12;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r14;
        int $i0;
        java.lang.String r1, $r13, $r15;
        org.eclipse.jetty.servlet.ServletMapping $r0;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHandler $r10;
        java.util.Iterator $r4;
        java.lang.Object $r11;

        r14 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        r9 := @parameter2: org.eclipse.jetty.webapp.WebAppContext;

        $r0 = new org.eclipse.jetty.servlet.ServletMapping;

        specialinvoke $r0.<org.eclipse.jetty.servlet.ServletMapping: void <init>()>();

        virtualinvoke $r0.<org.eclipse.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.eclipse.jetty.xml.XmlParser$Node) $r11;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r15 = virtualinvoke r14.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String normalizePattern(java.lang.String)>($r13);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        virtualinvoke $r0.<org.eclipse.jetty.servlet.ServletMapping: void setPathSpecs(java.lang.String[])>($r8);

        $r10 = virtualinvoke r9.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r10.<org.eclipse.jetty.servlet.ServletHandler: void addServletMapping(org.eclipse.jetty.servlet.ServletMapping)>($r0);

        return;
    }

    protected void addFilterMapping(java.lang.String, org.eclipse.jetty.xml.XmlParser$Node, org.eclipse.jetty.webapp.WebAppContext)
    {
        org.eclipse.jetty.webapp.WebAppContext r17;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r30;
        java.util.EnumSet $r19;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.servlet.ServletHandler $r18;
        java.lang.Object[] $r6, $r12;
        java.lang.String[] $r5, $r7, $r8, $r11, $r13, $r14;
        java.util.ArrayList $r2, $r9, $r15;
        org.eclipse.jetty.xml.XmlParser$Node r3, $r21, $r25, $r28;
        int $i0, $i1, $i2;
        java.lang.String r1, $r22, $r26, $r29, $r31;
        java.util.Iterator $r4, $r10, $r16;
        org.eclipse.jetty.servlet.FilterMapping $r0;
        javax.servlet.DispatcherType $r23;
        java.lang.Object $r20, $r24, $r27;

        r30 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.eclipse.jetty.xml.XmlParser$Node;

        r17 := @parameter2: org.eclipse.jetty.webapp.WebAppContext;

        $r0 = new org.eclipse.jetty.servlet.FilterMapping;

        specialinvoke $r0.<org.eclipse.jetty.servlet.FilterMapping: void <init>()>();

        virtualinvoke $r0.<org.eclipse.jetty.servlet.FilterMapping: void setFilterName(java.lang.String)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r27 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (org.eclipse.jetty.xml.XmlParser$Node) $r27;

        $r29 = virtualinvoke $r28.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r31 = virtualinvoke r30.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String normalizePattern(java.lang.String)>($r29);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        virtualinvoke $r0.<org.eclipse.jetty.servlet.FilterMapping: void setPathSpecs(java.lang.String[])>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("servlet-name");

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r24 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (org.eclipse.jetty.xml.XmlParser$Node) $r24;

        $r26 = virtualinvoke $r25.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label3;

     label4:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r11 = newarray (java.lang.String)[$i1];

        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r13 = (java.lang.String[]) $r12;

        $r14 = (java.lang.String[]) $r13;

        virtualinvoke $r0.<org.eclipse.jetty.servlet.FilterMapping: void setServletNames(java.lang.String[])>($r14);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("dispatcher");

     label5:
        $z2 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r20 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (org.eclipse.jetty.xml.XmlParser$Node) $r20;

        $r22 = virtualinvoke $r21.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r23 = staticinvoke <org.eclipse.jetty.servlet.FilterMapping: javax.servlet.DispatcherType dispatch(java.lang.String)>($r22);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label5;

     label6:
        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i2 <= 0 goto label7;

        $r19 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>($r15);

        virtualinvoke $r0.<org.eclipse.jetty.servlet.FilterMapping: void setDispatcherTypes(java.util.EnumSet)>($r19);

     label7:
        $r18 = virtualinvoke r17.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r18.<org.eclipse.jetty.servlet.ServletHandler: void addFilterMapping(org.eclipse.jetty.servlet.FilterMapping)>($r0);

        return;
    }

    protected void visitTagLib(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.servlet.ServletContextHandler$TagLib $r6;
        org.eclipse.jetty.webapp.WebAppContext r3;
        javax.servlet.descriptor.JspConfigDescriptor $r5;
        org.eclipse.jetty.servlet.ServletContextHandler$JspConfig $r7, r11;
        org.eclipse.jetty.webapp.Descriptor r10;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r4, $r8;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r9;
        java.lang.String $r1, $r2;

        r9 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r10 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("taglib-uri", 0, 1);

        $r2 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("taglib-location", 0, 1);

        virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: void setResourceAlias(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler$Context: javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor()>();

        r11 = (org.eclipse.jetty.servlet.ServletContextHandler$JspConfig) $r5;

        if r11 != null goto label1;

        $r7 = new org.eclipse.jetty.servlet.ServletContextHandler$JspConfig;

        specialinvoke $r7.<org.eclipse.jetty.servlet.ServletContextHandler$JspConfig: void <init>()>();

        r11 = $r7;

        $r8 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        virtualinvoke $r8.<org.eclipse.jetty.server.handler.ContextHandler$Context: void setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)>($r7);

     label1:
        $r6 = new org.eclipse.jetty.servlet.ServletContextHandler$TagLib;

        specialinvoke $r6.<org.eclipse.jetty.servlet.ServletContextHandler$TagLib: void <init>()>();

        virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletContextHandler$TagLib: void setTaglibLocation(java.lang.String)>($r2);

        virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletContextHandler$TagLib: void setTaglibURI(java.lang.String)>($r1);

        virtualinvoke r11.<org.eclipse.jetty.servlet.ServletContextHandler$JspConfig: void addTaglibDescriptor(javax.servlet.descriptor.TaglibDescriptor)>($r6);

        return;
    }

    protected void visitJspConfig(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup $r14;
        org.eclipse.jetty.servlet.ServletHolder r54;
        javax.servlet.descriptor.JspConfigDescriptor $r2;
        java.lang.Object[] $r10, $r31;
        java.util.ArrayList $r5;
        java.lang.String $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r30, $r34, $r37, $r40, $r42, $r45, $r46, r53;
        org.eclipse.jetty.servlet.ServletMapping $r8;
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1, $r50;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jetty.http.PathMap$Entry $r7;
        org.eclipse.jetty.servlet.ServletContextHandler$JspConfig $r49, r51;
        org.eclipse.jetty.servlet.ServletHandler $r6, $r12;
        org.eclipse.jetty.webapp.Descriptor r47;
        java.lang.String[] $r9, $r11;
        org.eclipse.jetty.xml.XmlParser$Node r3, $r33, $r36, $r39, $r44, $r48, r52;
        int $i0, $i1, i2, $i3;
        java.util.Iterator $r4, $r16, $r26, $r27;
        java.lang.Object $r13, $r15, $r32, $r35, $r38, $r43;
        org.eclipse.jetty.util.log.Logger $r28, $r29;

        r41 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r47 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r3 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.handler.ContextHandler$Context: javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor()>();

        r51 = (org.eclipse.jetty.servlet.ServletContextHandler$JspConfig) $r2;

        if r51 != null goto label01;

        $r49 = new org.eclipse.jetty.servlet.ServletContextHandler$JspConfig;

        specialinvoke $r49.<org.eclipse.jetty.servlet.ServletContextHandler$JspConfig: void <init>()>();

        r51 = $r49;

        $r50 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        virtualinvoke $r50.<org.eclipse.jetty.server.handler.ContextHandler$Context: void setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor)>($r49);

     label01:
        i2 = 0;

     label02:
        $i3 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: int size()>();

        if i2 >= $i3 goto label04;

        $r43 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.Object get(int)>(i2);

        $z5 = $r43 instanceof org.eclipse.jetty.xml.XmlParser$Node;

        if $z5 == 0 goto label03;

        $r45 = "taglib";

        $r44 = (org.eclipse.jetty.xml.XmlParser$Node) $r43;

        $r46 = virtualinvoke $r44.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z6 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z6 == 0 goto label03;

        $r48 = (org.eclipse.jetty.xml.XmlParser$Node) $r43;

        virtualinvoke r41.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void visitTagLib(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.webapp.Descriptor,org.eclipse.jetty.xml.XmlParser$Node)>(r0, r47, $r48);

     label03:
        i2 = i2 + 1;

        goto label02;

     label04:
        $r4 = virtualinvoke r3.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("jsp-property-group");

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r14 = new org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup;

        specialinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void <init>()>();

        virtualinvoke r51.<org.eclipse.jetty.servlet.ServletContextHandler$JspConfig: void addJspPropertyGroup(javax.servlet.descriptor.JspPropertyGroupDescriptor)>($r14);

        $r15 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r52 = (org.eclipse.jetty.xml.XmlParser$Node) $r15;

        $r16 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label06:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r38 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r39 = (org.eclipse.jetty.xml.XmlParser$Node) $r38;

        $r40 = virtualinvoke $r39.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r42 = virtualinvoke r41.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String normalizePattern(java.lang.String)>($r40);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r42);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void addUrlPattern(java.lang.String)>($r42);

        goto label06;

     label07:
        $r17 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("el-ignored", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setElIgnored(java.lang.String)>($r17);

        $r18 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("page-encoding", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setPageEncoding(java.lang.String)>($r18);

        $r19 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("scripting-invalid", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setScriptingInvalid(java.lang.String)>($r19);

        $r20 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("is-xml", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setIsXml(java.lang.String)>($r20);

        $r21 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("deferred-syntax-allowed-as-literal", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setDeferredSyntaxAllowedAsLiteral(java.lang.String)>($r21);

        $r22 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("trim-directive-whitespaces", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setTrimDirectiveWhitespaces(java.lang.String)>($r22);

        $r23 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("defaultContentType", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setDefaultContentType(java.lang.String)>($r23);

        $r24 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("buffer", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setBuffer(java.lang.String)>($r24);

        $r25 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("error-on-undeclared-namespace", 0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void setErrorOnUndeclaredNamespace(java.lang.String)>($r25);

        $r26 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("include-prelude");

     label08:
        $z2 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r35 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        $r36 = (org.eclipse.jetty.xml.XmlParser$Node) $r35;

        $r37 = virtualinvoke $r36.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void addIncludePrelude(java.lang.String)>($r37);

        goto label08;

     label09:
        $r27 = virtualinvoke r52.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("include-coda");

     label10:
        $z3 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r32 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        $r33 = (org.eclipse.jetty.xml.XmlParser$Node) $r32;

        $r34 = virtualinvoke $r33.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r14.<org.eclipse.jetty.servlet.ServletContextHandler$JspPropertyGroup: void addIncludeCoda(java.lang.String)>($r34);

        goto label10;

     label11:
        $r28 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $z4 = interfaceinvoke $r28.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label12;

        $r29 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r30 = virtualinvoke r51.<org.eclipse.jetty.servlet.ServletContextHandler$JspConfig: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        interfaceinvoke $r29.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r30, $r31);

     label12:
        goto label05;

     label13:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label15;

        r53 = "jsp";

        $r6 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.http.PathMap$Entry getHolderEntry(java.lang.String)>("test.jsp");

        if $r7 == null goto label14;

        $r13 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r54 = (org.eclipse.jetty.servlet.ServletHolder) $r13;

        r53 = virtualinvoke r54.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

     label14:
        if r53 == null goto label15;

        $r8 = new org.eclipse.jetty.servlet.ServletMapping;

        specialinvoke $r8.<org.eclipse.jetty.servlet.ServletMapping: void <init>()>();

        virtualinvoke $r8.<org.eclipse.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>(r53);

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r9 = newarray (java.lang.String)[$i1];

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r11 = (java.lang.String[]) $r10;

        virtualinvoke $r8.<org.eclipse.jetty.servlet.ServletMapping: void setPathSpecs(java.lang.String[])>($r11);

        $r12 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r12.<org.eclipse.jetty.servlet.ServletHandler: void addServletMapping(org.eclipse.jetty.servlet.ServletMapping)>($r8);

     label15:
        return;
    }

    protected void visitSecurityConstraint(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r16;
        java.lang.CloneNotSupportedException $r45;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r12;
        org.eclipse.jetty.security.SecurityHandler $r17, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jetty.webapp.Descriptor r47;
        org.eclipse.jetty.security.ConstraintMapping $r15, $r22;
        java.lang.StringBuilder $r31, $r33, $r34;
        java.lang.Object[] $r36, $r40;
        java.lang.String[] $r39, $r41;
        java.util.ArrayList $r38;
        org.eclipse.jetty.xml.XmlParser$Node r1, $r2, $r3, $r10, $r20, $r25, $r43, r49;
        org.eclipse.jetty.util.security.Constraint $r0, r7;
        int $i0, $i1;
        java.lang.String $r5, $r11, $r13, $r21, $r26, $r27, $r28, $r29, $r30, $r35, $r44;
        org.eclipse.jetty.security.ConstraintAware $r18, $r24;
        java.util.Iterator $r8, $r14, $r37, $r48;
        java.lang.Object $r4, $r6, $r9, $r19, $r42;
        org.eclipse.jetty.util.log.Logger $r32, $r46;

        r12 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r16 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r47 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r1 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r0 = new org.eclipse.jetty.util.security.Constraint;

        specialinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("auth-constraint");

        if $r2 == null goto label04;

        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setAuthenticate(boolean)>(1);

        $r37 = virtualinvoke $r2.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("role-name");

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

     label02:
        $z6 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label03;

        $r42 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (org.eclipse.jetty.xml.XmlParser$Node) $r42;

        $r44 = virtualinvoke $r43.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r44);

        goto label02;

     label03:
        $i1 = interfaceinvoke $r38.<java.util.List: int size()>();

        $r39 = newarray (java.lang.String)[$i1];

        $r40 = interfaceinvoke $r38.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r39);

        $r41 = (java.lang.String[]) $r40;

        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setRoles(java.lang.String[])>($r41);

     label04:
        $r3 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("user-data-constraint");

        if $r3 == null goto label09;

        $r25 = virtualinvoke $r3.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("transport-guarantee");

        $r26 = virtualinvoke $r25.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toUpperCase()>();

        if $r27 == null goto label05;

        $i0 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i0 == 0 goto label05;

        $r28 = "NONE";

        $z3 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z3 == 0 goto label06;

     label05:
        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setDataConstraint(int)>(0);

        goto label09;

     label06:
        $r29 = "INTEGRAL";

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z4 == 0 goto label07;

        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setDataConstraint(int)>(1);

        goto label09;

     label07:
        $r30 = "CONFIDENTIAL";

        $z5 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z5 == 0 goto label08;

        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setDataConstraint(int)>(2);

        goto label09;

     label08:
        $r32 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown user-data-constraint:");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = newarray (java.lang.Object)[0];

        interfaceinvoke $r32.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r35, $r36);

        virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: void setDataConstraint(int)>(2);

     label09:
        $r48 = virtualinvoke r1.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("web-resource-collection");

     label10:
        $z7 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label16;

        $r4 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (org.eclipse.jetty.xml.XmlParser$Node) $r4;

        $r5 = virtualinvoke r49.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("web-resource-name", 0, 1);

        $r6 = virtualinvoke $r0.<org.eclipse.jetty.util.security.Constraint: java.lang.Object clone()>();

        r7 = (org.eclipse.jetty.util.security.Constraint) $r6;

        virtualinvoke r7.<org.eclipse.jetty.util.security.Constraint: void setName(java.lang.String)>($r5);

        $r8 = virtualinvoke r49.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("url-pattern");

     label11:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.eclipse.jetty.xml.XmlParser$Node) $r9;

        $r11 = virtualinvoke $r10.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r13 = virtualinvoke r12.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String normalizePattern(java.lang.String)>($r11);

        $r14 = virtualinvoke r49.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("http-method");

        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

     label12:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r19 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (org.eclipse.jetty.xml.XmlParser$Node) $r19;

        $r21 = virtualinvoke $r20.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r22 = new org.eclipse.jetty.security.ConstraintMapping;

        specialinvoke $r22.<org.eclipse.jetty.security.ConstraintMapping: void <init>()>();

        virtualinvoke $r22.<org.eclipse.jetty.security.ConstraintMapping: void setMethod(java.lang.String)>($r21);

        virtualinvoke $r22.<org.eclipse.jetty.security.ConstraintMapping: void setPathSpec(java.lang.String)>($r13);

        virtualinvoke $r22.<org.eclipse.jetty.security.ConstraintMapping: void setConstraint(org.eclipse.jetty.util.security.Constraint)>(r7);

        $r23 = virtualinvoke r16.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r24 = (org.eclipse.jetty.security.ConstraintAware) $r23;

        interfaceinvoke $r24.<org.eclipse.jetty.security.ConstraintAware: void addConstraintMapping(org.eclipse.jetty.security.ConstraintMapping)>($r22);

        goto label12;

     label13:
        $r15 = new org.eclipse.jetty.security.ConstraintMapping;

        specialinvoke $r15.<org.eclipse.jetty.security.ConstraintMapping: void <init>()>();

        virtualinvoke $r15.<org.eclipse.jetty.security.ConstraintMapping: void setPathSpec(java.lang.String)>($r13);

        virtualinvoke $r15.<org.eclipse.jetty.security.ConstraintMapping: void setConstraint(org.eclipse.jetty.util.security.Constraint)>(r7);

        $r17 = virtualinvoke r16.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r18 = (org.eclipse.jetty.security.ConstraintAware) $r17;

        interfaceinvoke $r18.<org.eclipse.jetty.security.ConstraintAware: void addConstraintMapping(org.eclipse.jetty.security.ConstraintMapping)>($r15);

     label14:
        goto label11;

     label15:
        goto label10;

     label16:
        goto label18;

     label17:
        $r45 := @caughtexception;

        $r46 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r46.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r45);

     label18:
        return;

        catch java.lang.CloneNotSupportedException from label01 to label16 with label17;
    }

    protected void visitLoginConfig(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node) throws java.lang.Exception
    {
        org.eclipse.jetty.security.SecurityHandler $r6, $r12, $r21, $r23, $r32, $r34, $r42, $r44, $r52, $r54, $r62, $r65, $r72;
        java.lang.StringBuilder $r26, $r27, $r30, $r37, $r38, $r40, $r47, $r48, $r50, $r57, $r58, $r60;
        org.eclipse.jetty.webapp.Origin $r4, $r10, $r19, $r77;
        java.lang.String $r7, $r8, $r13, $r22, $r24, $r31, $r41, $r51, $r61, $r63, $r66, $r70, $r71, $r73, r74, r75;
        org.eclipse.jetty.util.resource.Resource $r29, $r39, $r49, $r59;
        org.eclipse.jetty.webapp.WebAppContext r2;
        java.lang.IllegalStateException $r15, $r25, $r36, $r46, $r56;
        int[] $r5, $r11, $r20, $r78;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r68;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jetty.webapp.Descriptor r28;
        org.eclipse.jetty.webapp.MetaData $r3, $r9, $r18, $r33, $r35, $r43, $r45, $r53, $r55, $r64, $r67, $r76;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r1, $r14, $r16, $r17, $r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r68 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r28 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("auth-method");

        if $r1 == null goto label22;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("auth-method");

        $r5 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r4.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label02;
            case 5: goto label03;
            default: goto label04;
        };

     label01:
        $r65 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r66 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r65.<org.eclipse.jetty.security.SecurityHandler: void setAuthMethod(java.lang.String)>($r66);

        $r67 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r67.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("auth-method", r28);

        goto label04;

     label02:
        $z7 = r28 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z7 != 0 goto label04;

        $r62 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r63 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        virtualinvoke $r62.<org.eclipse.jetty.security.SecurityHandler: void setAuthMethod(java.lang.String)>($r63);

        $r64 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r64.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("auth-method", r28);

        goto label04;

     label03:
        $r6 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.security.SecurityHandler: java.lang.String getAuthMethod()>();

        $r8 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label04;

        $r56 = new java.lang.IllegalStateException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting auth-method value in ");

        $r59 = virtualinvoke r28.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r61);

        throw $r56;

     label04:
        $r69 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("realm-name");

        if $r69 != null goto label05;

        $r70 = "default";

        goto label06;

     label05:
        $r70 = virtualinvoke $r69.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

     label06:
        $r9 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("realm-name");

        $r11 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i2 = virtualinvoke $r10.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i3 = $r11[$i2];

        tableswitch($i3)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label09;
            default: goto label10;
        };

     label07:
        $r54 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r54.<org.eclipse.jetty.security.SecurityHandler: void setRealmName(java.lang.String)>($r70);

        $r55 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r55.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("realm-name", r28);

        goto label10;

     label08:
        $z6 = r28 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z6 != 0 goto label10;

        $r52 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r52.<org.eclipse.jetty.security.SecurityHandler: void setRealmName(java.lang.String)>($r70);

        $r53 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r53.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("realm-name", r28);

        goto label10;

     label09:
        $r12 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.security.SecurityHandler: java.lang.String getRealmName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r70);

        if $z1 != 0 goto label10;

        $r46 = new java.lang.IllegalStateException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting realm-name value in ");

        $r49 = virtualinvoke r28.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r51);

        throw $r46;

     label10:
        $r71 = "FORM";

        $r72 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r73 = virtualinvoke $r72.<org.eclipse.jetty.security.SecurityHandler: java.lang.String getAuthMethod()>();

        $z8 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>($r73);

        if $z8 == 0 goto label22;

        $r14 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("form-login-config");

        if $r14 == null goto label21;

        r74 = null;

        $r16 = virtualinvoke $r14.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("form-login-page");

        if $r16 == null goto label11;

        r74 = virtualinvoke $r16.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

     label11:
        r75 = null;

        $r17 = virtualinvoke $r14.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("form-error-page");

        if $r17 == null goto label12;

        r75 = virtualinvoke $r17.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

     label12:
        $r18 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r19 = virtualinvoke $r18.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("form-login-page");

        $r20 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i4 = virtualinvoke $r19.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i5 = $r20[$i4];

        tableswitch($i5)
        {
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label14;
            case 4: goto label14;
            case 5: goto label15;
            default: goto label16;
        };

     label13:
        $r44 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r44.<org.eclipse.jetty.security.SecurityHandler: java.lang.String setInitParameter(java.lang.String,java.lang.String)>("org.eclipse.jetty.security.form_login_page", r74);

        $r45 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r45.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("form-login-page", r28);

        goto label16;

     label14:
        $z5 = r28 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z5 != 0 goto label16;

        $r42 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r42.<org.eclipse.jetty.security.SecurityHandler: java.lang.String setInitParameter(java.lang.String,java.lang.String)>("org.eclipse.jetty.security.form_login_page", r74);

        $r43 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r43.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("form-login-page", r28);

        goto label16;

     label15:
        $r21 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r22 = virtualinvoke $r21.<org.eclipse.jetty.security.SecurityHandler: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.security.form_login_page");

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r74);

        if $z2 != 0 goto label16;

        $r36 = new java.lang.IllegalStateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting form-login-page value in ");

        $r39 = virtualinvoke r28.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r41);

        throw $r36;

     label16:
        $r76 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r77 = virtualinvoke $r76.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>("form-error-page");

        $r78 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i6 = virtualinvoke $r77.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i7 = $r78[$i6];

        tableswitch($i7)
        {
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label18;
            case 4: goto label18;
            case 5: goto label19;
            default: goto label20;
        };

     label17:
        $r34 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r34.<org.eclipse.jetty.security.SecurityHandler: java.lang.String setInitParameter(java.lang.String,java.lang.String)>("org.eclipse.jetty.security.form_error_page", r75);

        $r35 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r35.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("form-error-page", r28);

        goto label20;

     label18:
        $z4 = r28 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z4 != 0 goto label20;

        $r32 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        virtualinvoke $r32.<org.eclipse.jetty.security.SecurityHandler: java.lang.String setInitParameter(java.lang.String,java.lang.String)>("org.eclipse.jetty.security.form_error_page", r75);

        $r33 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        virtualinvoke $r33.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>("form-error-page", r28);

        goto label20;

     label19:
        $r23 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r24 = virtualinvoke $r23.<org.eclipse.jetty.security.SecurityHandler: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.security.form_error_page");

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r75);

        if $z3 != 0 goto label20;

        $r25 = new java.lang.IllegalStateException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting form-error-page value in ");

        $r29 = virtualinvoke r28.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r31);

        throw $r25;

     label20:
        goto label22;

     label21:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!form-login-config");

        throw $r15;

     label22:
        return;
    }

    protected void visitSecurityRole(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r3;
        org.eclipse.jetty.security.ConstraintAware $r5;
        org.eclipse.jetty.webapp.Descriptor r7;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r1;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r6;
        org.eclipse.jetty.security.SecurityHandler $r4;
        java.lang.String $r2;

        r6 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r7 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("role-name");

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        $r4 = virtualinvoke r3.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.security.SecurityHandler getSecurityHandler()>();

        $r5 = (org.eclipse.jetty.security.ConstraintAware) $r4;

        interfaceinvoke $r5.<org.eclipse.jetty.security.ConstraintAware: void addRole(java.lang.String)>($r2);

        return;
    }

    protected void visitFilter(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        java.lang.StringBuilder $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r26, $r27, $r28, $r31, $r32, $r33, $r42, $r43, $r44, $r45, $r51, $r52, $r53, $r54, $r55, $r56, $r58, $r61, $r62, $r63, $r64, $r67, $r68, $r69, $r70, $r74, $r75, $r76, $r82, $r83, $r84, $r85, $r87, $r90, $r91, $r92, $r95, $r96, $r97;
        org.eclipse.jetty.webapp.Origin $r12, $r47, $r78;
        org.eclipse.jetty.util.resource.Resource $r22, $r57, $r86;
        int[] $r13, $r48, $r79;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r103;
        org.eclipse.jetty.servlet.FilterHolder $r4, $r37, $r101, r104;
        org.eclipse.jetty.servlet.ServletHandler $r3, $r99, $r102;
        org.eclipse.jetty.servlet.Holder$Source $r100;
        org.eclipse.jetty.xml.XmlParser$Node r0, r106;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Boolean $r35, $r36;
        java.lang.Object $r38;
        java.lang.String $r1, $r5, $r6, $r11, $r24, $r29, $r34, $r39, $r40, $r46, $r49, $r59, $r65, $r71, $r77, $r80, $r88, $r93, $r98;
        org.eclipse.jetty.webapp.WebAppContext r2;
        java.lang.IllegalStateException $r14, $r50, $r81;
        org.eclipse.jetty.webapp.WebDescriptor $r72;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13;
        org.eclipse.jetty.webapp.Descriptor r21;
        org.eclipse.jetty.webapp.MetaData $r7, $r25, $r30, $r41, $r60, $r66, $r73, $r89, $r94;
        java.util.Iterator $r105;

        r103 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r21 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-name", 0, 1);

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder getFilter(java.lang.String)>($r1);

        r104 = $r4;

        if $r4 != null goto label01;

        $r99 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        $r100 = <org.eclipse.jetty.servlet.Holder$Source: org.eclipse.jetty.servlet.Holder$Source DESCRIPTOR>;

        $r101 = virtualinvoke $r99.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.FilterHolder newFilterHolder(org.eclipse.jetty.servlet.Holder$Source)>($r100);

        r104 = $r101;

        virtualinvoke $r101.<org.eclipse.jetty.servlet.FilterHolder: void setName(java.lang.String)>($r1);

        $r102 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.servlet.ServletHandler getServletHandler()>();

        virtualinvoke $r102.<org.eclipse.jetty.servlet.ServletHandler: void addFilter(org.eclipse.jetty.servlet.FilterHolder)>($r101);

     label01:
        $r5 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-class", 0, 1);

        if $r5 == null goto label05;

        $r72 = (org.eclipse.jetty.webapp.WebDescriptor) r21;

        virtualinvoke $r72.<org.eclipse.jetty.webapp.WebDescriptor: void addClassName(java.lang.String)>($r5);

        $r73 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.filter-class");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        $r78 = virtualinvoke $r73.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r77);

        $r79 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i6 = virtualinvoke $r78.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i7 = $r79[$i6];

        tableswitch($i7)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label04;
            default: goto label05;
        };

     label02:
        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setClassName(java.lang.String)>($r5);

        $r94 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.filter-class");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r94.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r98, r21);

        goto label05;

     label03:
        $z7 = r21 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z7 != 0 goto label05;

        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setClassName(java.lang.String)>($r5);

        $r89 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.filter-class");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r93, r21);

        goto label05;

     label04:
        $r80 = virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: java.lang.String getClassName()>();

        $z6 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z6 != 0 goto label05;

        $r81 = new java.lang.IllegalStateException;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting filter-class for filter ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r86 = virtualinvoke r21.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r81.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r88);

        throw $r81;

     label05:
        $r105 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator(java.lang.String)>("init-param");

     label06:
        $z8 = interfaceinvoke $r105.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r38 = interfaceinvoke $r105.<java.util.Iterator: java.lang.Object next()>();

        r106 = (org.eclipse.jetty.xml.XmlParser$Node) $r38;

        $r39 = virtualinvoke r106.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-name", 0, 1);

        $r40 = virtualinvoke r106.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("param-value", 0, 1);

        $r41 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.init-param.");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = virtualinvoke $r41.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r46);

        $r48 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i4 = virtualinvoke $r47.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i5 = $r48[$i4];

        tableswitch($i5)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label09;
            default: goto label10;
        };

     label07:
        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>($r39, $r40);

        $r66 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.init-param.");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r66.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r71, r21);

        goto label10;

     label08:
        $z5 = r21 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z5 != 0 goto label10;

        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setInitParameter(java.lang.String,java.lang.String)>($r39, $r40);

        $r60 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.init-param.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r60.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r65, r21);

        goto label10;

     label09:
        $r49 = virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: java.lang.String getInitParameter(java.lang.String)>($r39);

        $z4 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z4 != 0 goto label10;

        $r50 = new java.lang.IllegalStateException;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mismatching init-param ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r57 = virtualinvoke r21.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r59);

        throw $r50;

     label10:
        goto label06;

     label11:
        $r6 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("async-supported", 0, 1);

        if $r6 == null goto label15;

        $r37 = r104;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 == 0 goto label12;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z3 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label13;

     label12:
        $z9 = 1;

        goto label14;

     label13:
        $z9 = 0;

     label14:
        virtualinvoke $r37.<org.eclipse.jetty.servlet.FilterHolder: void setAsyncSupported(boolean)>($z9);

     label15:
        if $r6 == null goto label22;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label16;

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z2 = virtualinvoke $r35.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label17;

     label16:
        $z13 = 1;

        $z12 = 1;

        $z11 = 1;

        goto label18;

     label17:
        $z13 = 0;

        $z12 = 0;

        $z11 = 0;

     label18:
        $r7 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.async-supported");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r7.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r11);

        $r13 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i1 = virtualinvoke $r12.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i2 = $r13[$i1];

        tableswitch($i2)
        {
            case 1: goto label19;
            case 2: goto label20;
            case 3: goto label20;
            case 4: goto label20;
            case 5: goto label21;
            default: goto label22;
        };

     label19:
        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setAsyncSupported(boolean)>($z11);

        $r30 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.async-supported");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r34, r21);

        goto label22;

     label20:
        $z1 = r21 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z1 != 0 goto label22;

        virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: void setAsyncSupported(boolean)>($z13);

        $r25 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.async-supported");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r29, r21);

        goto label22;

     label21:
        $z0 = virtualinvoke r104.<org.eclipse.jetty.servlet.FilterHolder: boolean isAsyncSupported()>();

        if $z0 == $z12 goto label22;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting async-supported=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for filter ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r22 = virtualinvoke r21.<org.eclipse.jetty.webapp.Descriptor: org.eclipse.jetty.util.resource.Resource getResource()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r14;

     label22:
        return;
    }

    protected void visitFilterMapping(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r2;
        org.eclipse.jetty.webapp.MetaData $r3, $r12;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int[] $r9;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r10;
        int $i0, $i1;
        java.lang.String $r1, $r7, $r16;
        boolean $z0;
        org.eclipse.jetty.webapp.Descriptor r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r13, $r14, $r15;
        org.eclipse.jetty.webapp.Origin $r8;

        r10 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r11 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("filter-name", 0, 1);

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.mappings");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r3.<org.eclipse.jetty.webapp.MetaData: org.eclipse.jetty.webapp.Origin getOrigin(java.lang.String)>($r7);

        $r9 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor$1: int[] $SwitchMap$org$eclipse$jetty$webapp$Origin>;

        $i0 = virtualinvoke $r8.<org.eclipse.jetty.webapp.Origin: int ordinal()>();

        $i1 = $r9[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label4;
        };

     label1:
        $r12 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".filter.mappings");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r16, r11);

        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addFilterMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

        goto label4;

     label2:
        $z0 = r11 instanceof org.eclipse.jetty.webapp.FragmentDescriptor;

        if $z0 != 0 goto label4;

        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addFilterMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

        goto label4;

     label3:
        virtualinvoke r10.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: void addFilterMapping(java.lang.String,org.eclipse.jetty.xml.XmlParser$Node,org.eclipse.jetty.webapp.WebAppContext)>($r1, r0, r2);

     label4:
        return;
    }

    protected void visitListener(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r2;
        org.eclipse.jetty.webapp.WebDescriptor $r5;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r7;
        boolean $z0, $z1;
        java.util.EventListener[] $r3;
        org.eclipse.jetty.webapp.Descriptor r4;
        java.lang.Exception $r23;
        java.util.EventListener $r8, r20;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r16, $r17, $r24, $r26, $r27;
        java.lang.Object[] $r19;
        org.eclipse.jetty.webapp.MetaData $r9;
        org.eclipse.jetty.xml.XmlParser$Node r0;
        int $i0, i1, i2;
        java.lang.String $r1, $r13, $r18, $r22, $r28;
        java.lang.Class $r6, $r21;
        org.eclipse.jetty.util.log.Logger $r15, $r25;

        r7 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r4 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r0 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getString(java.lang.String,boolean,boolean)>("listener-class", 0, 1);

     label01:
        if $r1 == null goto label08;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label08;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: java.util.EventListener[] getEventListeners()>();

        if $r3 == null goto label05;

        i1 = lengthof $r3;

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        r20 = $r3[i2];

        $r21 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label04;

     label03:
        return;

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        $r5 = (org.eclipse.jetty.webapp.WebDescriptor) r4;

        virtualinvoke $r5.<org.eclipse.jetty.webapp.WebDescriptor: void addClassName(java.lang.String)>($r1);

        $r6 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Class loadClass(java.lang.String)>($r1);

        $r8 = virtualinvoke r7.<org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.util.EventListener newListenerInstance(org.eclipse.jetty.webapp.WebAppContext,java.lang.Class)>(r2, $r6);

        $z0 = $r8 instanceof java.util.EventListener;

        if $z0 != 0 goto label07;

        $r15 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an EventListener: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        interfaceinvoke $r15.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r18, $r19);

     label06:
        return;

     label07:
        virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addEventListener(java.util.EventListener)>($r8);

        $r9 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.webapp.MetaData getMetaData()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".listener");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.eclipse.jetty.webapp.MetaData: void setOrigin(java.lang.String,org.eclipse.jetty.webapp.Descriptor)>($r13, r4);

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        $r25 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate listener ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r28, $r23);

        return;

     label10:
        return;

        catch java.lang.Exception from label01 to label03 with label09;
        catch java.lang.Exception from label04 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected void visitDistributable(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.Descriptor, org.eclipse.jetty.xml.XmlParser$Node)
    {
        org.eclipse.jetty.webapp.WebAppContext r3;
        org.eclipse.jetty.xml.XmlParser$Node r4;
        org.eclipse.jetty.webapp.WebDescriptor $r1;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r2;
        org.eclipse.jetty.webapp.Descriptor r0;

        r2 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r0 := @parameter1: org.eclipse.jetty.webapp.Descriptor;

        r4 := @parameter2: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = (org.eclipse.jetty.webapp.WebDescriptor) r0;

        virtualinvoke $r1.<org.eclipse.jetty.webapp.WebDescriptor: void setDistributable(boolean)>(1);

        return;
    }

    protected java.util.EventListener newListenerInstance(org.eclipse.jetty.webapp.WebAppContext, java.lang.Class) throws javax.servlet.ServletException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.Throwable $r5;
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.lang.IllegalAccessException $r6;
        javax.servlet.ServletException $r4;
        java.util.EventListener $r3;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r8;
        java.lang.InstantiationException $r7;
        java.lang.Class r2;
        boolean $z0, $z1;

        r8 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r2 := @parameter1: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.handler.ContextHandler$Context getServletContext()>();

        $r3 = virtualinvoke $r1.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.util.EventListener createListener(java.lang.Class)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<javax.servlet.ServletException: java.lang.Throwable getRootCause()>();

        $z0 = $r5 instanceof java.lang.InstantiationException;

        if $z0 == 0 goto label4;

        $r7 = (java.lang.InstantiationException) $r5;

        throw $r7;

     label4:
        $z1 = $r5 instanceof java.lang.IllegalAccessException;

        if $z1 == 0 goto label5;

        $r6 = (java.lang.IllegalAccessException) $r5;

        throw $r6;

     label5:
        throw $r4;

        catch javax.servlet.ServletException from label1 to label2 with label3;
    }

    protected java.lang.String normalizePattern(java.lang.String)
    {
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r5;
        int $i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r0, $r4;
        boolean $z0, $z1;

        r5 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z1 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        return r0;
    }

    protected java.lang.String getSystemClassPath(org.eclipse.jetty.webapp.WebAppContext)
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.net.URL $r7;
        java.net.URL[] $r6;
        java.net.URLClassLoader $r5;
        org.eclipse.jetty.webapp.StandardDescriptorProcessor r13;
        int $i0, $i1, i3;
        java.lang.String $r4, $r10;
        boolean $z0, $z1;
        char $c2;
        java.io.IOException $r11;
        java.io.File $r9;
        org.eclipse.jetty.util.resource.Resource $r8;
        java.lang.StringBuilder $r3;
        java.lang.ClassLoader $r1, $r2, r14;
        org.eclipse.jetty.util.log.Logger $r12;

        r13 := @this: org.eclipse.jetty.webapp.StandardDescriptorProcessor;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.ClassLoader getClassLoader()>();

        r14 = $r1;

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        if $r2 == null goto label01;

        r14 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label02:
        if r14 == null goto label10;

        $z0 = r14 instanceof java.net.URLClassLoader;

        if $z0 == 0 goto label10;

        $r5 = (java.net.URLClassLoader) r14;

        $r6 = virtualinvoke $r5.<java.net.URLClassLoader: java.net.URL[] getURLs()>();

        if $r6 == null goto label09;

        i3 = 0;

     label03:
        $i0 = lengthof $r6;

        if i3 >= $i0 goto label09;

     label04:
        $r7 = $r6[i3];

        $r8 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.net.URL)>($r7);

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r9 == null goto label06;

        $z1 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label06;

        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label05;

        $c2 = <java.io.File: char pathSeparatorChar>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label05:
        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label06:
        goto label08;

     label07:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r11);

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        r14 = virtualinvoke r14.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        goto label02;

     label10:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

        catch java.io.IOException from label04 to label06 with label07;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.webapp.StandardDescriptorProcessor: java.lang.String STANDARD_PROCESSOR> = "org.eclipse.jetty.standardDescriptorProcessor";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/StandardDescriptorProcessor;");

        <org.eclipse.jetty.webapp.StandardDescriptorProcessor: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
