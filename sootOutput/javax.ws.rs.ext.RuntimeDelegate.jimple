public abstract class javax.ws.rs.ext.RuntimeDelegate extends java.lang.Object
{
    public static final java.lang.String JAXRS_RUNTIME_DELEGATE_PROPERTY;
    private static final java.lang.String JAXRS_DEFAULT_RUNTIME_DELEGATE;
    private static final java.lang.Object RD_LOCK;
    private static java.lang.reflect.ReflectPermission suppressAccessChecksPermission;
    private static volatile javax.ws.rs.ext.RuntimeDelegate cachedDelegate;

    protected void <init>()
    {
        javax.ws.rs.ext.RuntimeDelegate r0;

        r0 := @this: javax.ws.rs.ext.RuntimeDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.ws.rs.ext.RuntimeDelegate getInstance()
    {
        java.lang.Throwable $r2;
        javax.ws.rs.ext.RuntimeDelegate $r1, r3;
        java.lang.Object $r0;

        r3 = <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate cachedDelegate>;

        if r3 != null goto label6;

        $r0 = <javax.ws.rs.ext.RuntimeDelegate: java.lang.Object RD_LOCK>;

        entermonitor $r0;

     label1:
        r3 = <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate cachedDelegate>;

        if r3 != null goto label2;

        $r1 = staticinvoke <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate findDelegate()>();

        r3 = $r1;

        <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate cachedDelegate> = $r1;

     label2:
        exitmonitor $r0;

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

     label6:
        return r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static javax.ws.rs.ext.RuntimeDelegate findDelegate()
    {
        java.net.URL $r10, $r16;
        javax.ws.rs.ext.RuntimeDelegate $r1;
        java.lang.String $r4, $r5, $r8, $r20;
        boolean $z0;
        java.lang.LinkageError $r11;
        java.lang.RuntimeException $r22;
        java.lang.Exception $r21;
        java.lang.Object $r0;
        java.lang.Class r2, $r14, r24, r25;
        java.lang.StringBuilder $r3, $r6, $r7, $r12, $r13, $r17, $r18, $r19;
        java.lang.ClassLoader $r9, $r15, r23;

     label1:
        $r0 = staticinvoke <javax.ws.rs.ext.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)>("javax.ws.rs.ext.RuntimeDelegate", "org.glassfish.jersey.internal.RuntimeDelegateImpl");

        $z0 = $r0 instanceof javax.ws.rs.ext.RuntimeDelegate;

        if $z0 != 0 goto label3;

        r2 = class "Ljavax/ws/rs/ext/RuntimeDelegate;";

        r25 = class "Ljavax/ws/rs/ext/RuntimeDelegate;";

        r24 = class "Ljavax/ws/rs/ext/RuntimeDelegate;";

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r25.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r24.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r23 = $r9;

        if $r9 != null goto label2;

        r23 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label2:
        $r10 = virtualinvoke r23.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r8);

        $r11 = new java.lang.LinkageError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassCastException: attempting to cast");

        $r14 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r16 = virtualinvoke $r15.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r8);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.LinkageError: void <init>(java.lang.String)>($r20);

        throw $r11;

     label3:
        $r1 = (javax.ws.rs.ext.RuntimeDelegate) $r0;

     label4:
        return $r1;

     label5:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static void setInstance(javax.ws.rs.ext.RuntimeDelegate) throws java.lang.SecurityException
    {
        java.lang.Throwable $r4;
        java.lang.reflect.ReflectPermission $r3;
        javax.ws.rs.ext.RuntimeDelegate r2;
        java.lang.Object $r1;
        java.lang.SecurityManager $r0;

        r2 := @parameter0: javax.ws.rs.ext.RuntimeDelegate;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label1;

        $r3 = <javax.ws.rs.ext.RuntimeDelegate: java.lang.reflect.ReflectPermission suppressAccessChecksPermission>;

        virtualinvoke $r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);

     label1:
        $r1 = <javax.ws.rs.ext.RuntimeDelegate: java.lang.Object RD_LOCK>;

        entermonitor $r1;

     label2:
        <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate cachedDelegate> = r2;

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public abstract javax.ws.rs.core.UriBuilder createUriBuilder();

    public abstract javax.ws.rs.core.Response$ResponseBuilder createResponseBuilder();

    public abstract javax.ws.rs.core.Variant$VariantListBuilder createVariantListBuilder();

    public abstract java.lang.Object createEndpoint(javax.ws.rs.core.Application, java.lang.Class) throws java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException;

    public abstract javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class) throws java.lang.IllegalArgumentException;

    static void <clinit>()
    {
        java.lang.reflect.ReflectPermission $r1;
        java.lang.Object $r0;

        <javax.ws.rs.ext.RuntimeDelegate: java.lang.String JAXRS_DEFAULT_RUNTIME_DELEGATE> = "org.glassfish.jersey.internal.RuntimeDelegateImpl";

        <javax.ws.rs.ext.RuntimeDelegate: java.lang.String JAXRS_RUNTIME_DELEGATE_PROPERTY> = "javax.ws.rs.ext.RuntimeDelegate";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <javax.ws.rs.ext.RuntimeDelegate: java.lang.Object RD_LOCK> = $r0;

        $r1 = new java.lang.reflect.ReflectPermission;

        specialinvoke $r1.<java.lang.reflect.ReflectPermission: void <init>(java.lang.String)>("suppressAccessChecks");

        <javax.ws.rs.ext.RuntimeDelegate: java.lang.reflect.ReflectPermission suppressAccessChecksPermission> = $r1;

        return;
    }
}
