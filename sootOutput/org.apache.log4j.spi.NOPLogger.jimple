public final class org.apache.log4j.spi.NOPLogger extends org.apache.log4j.Logger
{

    public void <init>(org.apache.log4j.spi.NOPLoggerRepository, java.lang.String)
    {
        org.apache.log4j.spi.NOPLogger r0;
        org.apache.log4j.Level $r3;
        java.lang.String r1;
        org.apache.log4j.spi.NOPLoggerRepository r2;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r2 := @parameter0: org.apache.log4j.spi.NOPLoggerRepository;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.log4j.Logger: void <init>(java.lang.String)>(r1);

        r0.<org.apache.log4j.Category: org.apache.log4j.spi.LoggerRepository repository> = r2;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level OFF>;

        r0.<org.apache.log4j.Category: org.apache.log4j.Level level> = $r3;

        r0.<org.apache.log4j.Category: org.apache.log4j.Category parent> = r0;

        return;
    }

    public void addAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.Appender r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Appender;

        return;
    }

    public void assertLog(boolean, java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.spi.NOPLogger r0;
        boolean z0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void callAppenders(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        return;
    }

    void closeNestedAppenders()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return;
    }

    public void debug(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void error(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void fatal(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public java.util.Enumeration getAllAppenders()
    {
        java.util.Vector $r0;
        org.apache.log4j.spi.NOPLogger r2;
        java.util.Enumeration $r1;

        r2 := @this: org.apache.log4j.spi.NOPLogger;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = virtualinvoke $r0.<java.util.Vector: java.util.Enumeration elements()>();

        return $r1;
    }

    public org.apache.log4j.Appender getAppender(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public org.apache.log4j.Level getEffectiveLevel()
    {
        org.apache.log4j.spi.NOPLogger r1;
        org.apache.log4j.Level $r0;

        r1 := @this: org.apache.log4j.spi.NOPLogger;

        $r0 = <org.apache.log4j.Level: org.apache.log4j.Level OFF>;

        return $r0;
    }

    public org.apache.log4j.Priority getChainedPriority()
    {
        org.apache.log4j.spi.NOPLogger r0;
        org.apache.log4j.Level $r1;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        $r1 = virtualinvoke r0.<org.apache.log4j.spi.NOPLogger: org.apache.log4j.Level getEffectiveLevel()>();

        return $r1;
    }

    public java.util.ResourceBundle getResourceBundle()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return null;
    }

    public void info(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public boolean isAttached(org.apache.log4j.Appender)
    {
        org.apache.log4j.Appender r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Appender;

        return 0;
    }

    public boolean isDebugEnabled()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return 0;
    }

    public boolean isEnabledFor(org.apache.log4j.Priority)
    {
        org.apache.log4j.Priority r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        return 0;
    }

    public boolean isInfoEnabled()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return 0;
    }

    public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Priority r1;
        org.apache.log4j.spi.NOPLogger r0;
        java.lang.String r2;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        return;
    }

    public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Object[], java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.apache.log4j.Priority r1;
        java.lang.Object[] r3;
        org.apache.log4j.spi.NOPLogger r0;
        java.lang.String r2;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.Throwable;

        return;
    }

    public void log(org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.apache.log4j.Priority r1;
        org.apache.log4j.spi.NOPLogger r0;
        java.lang.Object r2;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        return;
    }

    public void log(org.apache.log4j.Priority, java.lang.Object)
    {
        java.lang.Object r2;
        org.apache.log4j.Priority r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public void log(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.apache.log4j.Priority r2;
        org.apache.log4j.spi.NOPLogger r0;
        java.lang.Object r3;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.Priority;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Throwable;

        return;
    }

    public void removeAllAppenders()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return;
    }

    public void removeAppender(org.apache.log4j.Appender)
    {
        org.apache.log4j.Appender r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Appender;

        return;
    }

    public void removeAppender(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setLevel(org.apache.log4j.Level)
    {
        org.apache.log4j.spi.NOPLogger r0;
        org.apache.log4j.Level r1;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Level;

        return;
    }

    public void setPriority(org.apache.log4j.Priority)
    {
        org.apache.log4j.Priority r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: org.apache.log4j.Priority;

        return;
    }

    public void setResourceBundle(java.util.ResourceBundle)
    {
        org.apache.log4j.spi.NOPLogger r0;
        java.util.ResourceBundle r1;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.util.ResourceBundle;

        return;
    }

    public void warn(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public void trace(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.Object r1;
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public boolean isTraceEnabled()
    {
        org.apache.log4j.spi.NOPLogger r0;

        r0 := @this: org.apache.log4j.spi.NOPLogger;

        return 0;
    }
}
