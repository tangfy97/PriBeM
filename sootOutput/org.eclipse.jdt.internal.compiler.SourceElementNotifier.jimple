public class org.eclipse.jdt.internal.compiler.SourceElementNotifier extends java.lang.Object
{
    org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor;
    boolean reportReferenceInfo;
    char[][] typeNames;
    char[][] superTypeNames;
    int nestedTypeIndex;
    org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor;
    org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds;
    java.util.Map nodesToCategories;
    int initialPosition;
    int eofPosition;

    public void <init>(org.eclipse.jdt.internal.compiler.ISourceElementRequestor, boolean)
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor $r4;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor r1;
        char[][] $r2, $r3;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ISourceElementRequestor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor> = null;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor> = r1;

        if z0 == 0 goto label1;

        $r4 = new org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor: void <init>(org.eclipse.jdt.internal.compiler.SourceElementNotifier)>(r0);

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor> = $r4;

     label1:
        $r2 = newarray (char[])[4];

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames> = $r2;

        $r3 = newarray (char[])[4];

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames> = $r3;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex> = 0;

        return;
    }

    protected char[][][] getArguments(org.eclipse.jdt.internal.compiler.ast.Argument[])
    {
        org.eclipse.jdt.internal.compiler.ast.Argument $r3, $r7;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r10;
        char[][] r1, r2, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4;
        int i0, i1;
        char[] $r6, $r8;
        org.eclipse.jdt.internal.compiler.ast.Argument[] r0;
        char[][][] $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument[];

        i0 = lengthof r0;

        r1 = newarray (char[])[i0];

        r2 = newarray (char[])[i0];

        i1 = 0;

        goto label2;

     label1:
        $r3 = r0[i1];

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r5, 46);

        r1[i1] = $r6;

        $r7 = r0[i1];

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        r2[i1] = $r8;

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        $r9 = newarray (char[][])[2];

        $r9[0] = r1;

        $r9[1] = r2;

        return $r9;
    }

    protected char[][] getInterfaceNames(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r7;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r1, $r4, $r6;
        char[][] $r2, r8;
        int $i0, $i1, i2, i3;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r10;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r5, r9;

        r7 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r8 = (char[][]) null;

        i2 = 0;

        r9 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if r9 == null goto label1;

        i2 = lengthof r9;

        r8 = newarray (char[])[i2];

        goto label2;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label2;

        r10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        if r10 == null goto label2;

        $r4 = r10.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label2;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeReference)[1];

        $r6 = r10.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r5[0] = $r6;

        r9 = $r5;

        i2 = 1;

        r8 = newarray (char[])[1];

     label2:
        if r9 == null goto label5;

        i3 = 0;

        goto label4;

     label3:
        $r1 = r9[i3];

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r2, 46);

        r8[i3] = $r3;

        i3 = i3 + 1;

     label4:
        if i3 < i2 goto label3;

     label5:
        return r8;
    }

    protected char[] getSuperclassName(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r3;
        char[] $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1;
        char[][] $r2;

        r3 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r2, 46);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    protected char[][] getThrownExceptions(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2;
        char[][] $r3, r6;
        int i0, i1;
        char[] $r4;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r1;

        r5 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r6 = (char[][]) null;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        if r1 == null goto label3;

        i0 = lengthof r1;

        r6 = newarray (char[])[i0];

        i1 = 0;

        goto label2;

     label1:
        $r2 = r1[i1];

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r3, 46);

        r6[i1] = $r4;

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return r6;
    }

    protected char[][] getTypeParameterBounds(org.eclipse.jdt.internal.compiler.ast.TypeParameter)
    {
        char[][] $r3, $r4, r6, $r7, $r10, r13;
        int i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r2;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1, $r9;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r0;
        char[] $r5, $r8, $r11;

        r12 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: org.eclipse.jdt.internal.compiler.ast.TypeReference[] bounds>;

        if r1 == null goto label4;

        if r2 == null goto label3;

        i0 = lengthof r2;

        $i1 = i0 + 1;

        r6 = newarray (char[])[$i1];

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r7, 46);

        r6[0] = $r8;

        i3 = 0;

        goto label2;

     label1:
        $i2 = i3 + 1;

        $r9 = r2[i3];

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r10, 46);

        r6[$i2] = $r11;

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        r13 = r6;

        goto label5;

     label3:
        $r3 = newarray (char[])[1];

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r4, 46);

        $r3[0] = $r5;

        r13 = $r3;

        goto label5;

     label4:
        r13 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

     label5:
        return r13;
    }

    private org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] getTypeParameterInfos(org.eclipse.jdt.internal.compiler.ast.TypeParameter[])
    {
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] r1;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r3;
        char[][] $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r2;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo $r5;
        int i0, $i1, $i2, $i3, $i4, i5;
        char[] $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r0;

        r3 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter[];

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        r1 = newarray (org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo)[i0];

        i5 = 0;

        goto label3;

     label2:
        r2 = r0[i5];

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] getTypeParameterBounds(org.eclipse.jdt.internal.compiler.ast.TypeParameter)>(r2);

        $r5 = new org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: void <init>()>();

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceStart>;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: int declarationStart> = $i1;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceEnd>;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: int declarationEnd> = $i2;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: char[] name> = $r6;

        $i3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: int nameSourceStart> = $i3;

        $i4 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: int nameSourceEnd> = $i4;

        $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo: char[][] bounds> = $r4;

        r1[i5] = $r5;

        i5 = i5 + 1;

     label3:
        if i5 < i0 goto label2;

        return r1;
    }

    private boolean hasDeprecatedAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation[])
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r6;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2;
        char[][] $r4;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation r1;
        char[] $r3, $r5;
        boolean $z0;

        r6 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation[];

        if r0 == null goto label4;

        i1 = 0;

        i0 = lengthof r0;

        goto label3;

     label1:
        r1 = r0[i1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[] getLastToken()>();

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_DEPRECATED>;

        $r5 = $r4[2];

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return 0;
    }

    protected void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt $r4, $r19;
        char[][] $r3, $r8, $r14, $r21, $r26, $r36, $r42, $r47, r54, r55;
        java.util.Map $r12, $r34;
        char[][][] $r40;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r52, r57;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r59, r60;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor $r5, $r6, $r16, $r20, $r25, $r30, $r38, $r46, $r51;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r17;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall r53, r58;
        char[] $r9, $r24, $r29, $r31, $r45, $r50, $r61;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] $r11, $r33;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r22, $r23, $r27, $r28, $r43, $r44, $r48, $r49;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r62;
        org.eclipse.jdt.internal.compiler.ast.Expression r63;
        org.eclipse.jdt.internal.compiler.ast.Argument[] r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, z14, $z15;
        org.eclipse.jdt.internal.compiler.ast.Argument $r41;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r15, $r18, $r37, $r39;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo $r64, $r65;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, $i35, $i36, $i37, $i38, i39, $i40, $i42, $i44, $i46, $i48;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r10, $r32;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;
        java.lang.Object $r13, $r35;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int initialPosition>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        if $i1 > $i0 goto label01;

        $i31 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int eofPosition>;

        $i30 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        if $i31 < $i30 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z0 = $z8;

        $z9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isClinit()>();

        if $z9 == 0 goto label03;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r1);

        return;

     label03:
        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isDefaultConstructor()>();

        if $z1 == 0 goto label11;

        $z7 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean reportReferenceInfo>;

        if $z7 == 0 goto label10;

        r52 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) r1;

        r53 = r52.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if r53 == null goto label10;

        $i23 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        tableswitch($i23)
        {
            case 1: goto label07;
            case 2: goto label07;
            case 3: goto label04;
            default: goto label10;
        };

     label04:
        $r46 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames>;

        $i24 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i25 = $i24 - 1;

        $r45 = $r42[$i25];

        $r43 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r43 != null goto label05;

        $i32 = 0;

        goto label06;

     label05:
        $r44 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i32 = lengthof $r44;

     label06:
        $i26 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        interfaceinvoke $r46.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptConstructorReference(char[],int,int)>($r45, $i32, $i26);

        goto label10;

     label07:
        $r51 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r47 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames>;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i28 = $i27 - 1;

        $r50 = $r47[$i28];

        $r48 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r48 != null goto label08;

        $i33 = 0;

        goto label09;

     label08:
        $r49 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i33 = lengthof $r49;

     label09:
        $i29 = r53.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        interfaceinvoke $r51.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptConstructorReference(char[],int,int)>($r50, $i33, $i29);

     label10:
        return;

     label11:
        r54 = (char[][]) null;

        r55 = (char[][]) null;

        z10 = 0;

        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        if r2 == null goto label12;

        $r40 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][][] getArguments(org.eclipse.jdt.internal.compiler.ast.Argument[])>(r2);

        r54 = $r40[0];

        r55 = $r40[1];

        $i21 = lengthof r2;

        $i22 = $i21 - 1;

        $r41 = r2[$i22];

        z10 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.ast.Argument: boolean isVarArgs()>();

     label12:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] getThrownExceptions(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r1);

        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z2 == 0 goto label27;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds>;

        $i9 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int get(java.lang.Object)>(r1);

        if z0 == 0 goto label18;

        i34 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers>;

        if z10 == 0 goto label13;

        i34 = i34 | 128;

     label13:
        $i18 = i34 & 1048576;

        if $i18 != 0 goto label14;

        $r39 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $z6 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean hasDeprecatedAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation[])>($r39);

        if $z6 != 0 goto label14;

        $z11 = 0;

        goto label15;

     label14:
        $z11 = 1;

     label15:
        $r64 = new org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;

        specialinvoke $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: void <init>()>();

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: boolean isConstructor> = 1;

        $i35 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int declarationStart> = $i35;

        if $z11 == 0 goto label16;

        $i42 = (int) 65535;

        $i20 = i34 & $i42;

        $i36 = $i20 | 1048576;

        goto label17;

     label16:
        $i44 = (int) 65535;

        $i36 = i34 & $i44;

     label17:
        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int modifiers> = $i36;

        $r31 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[] name> = $r31;

        $i19 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int nameSourceStart> = $i19;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int nameSourceEnd> = $i9;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] parameterTypes> = r54;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] parameterNames> = r55;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] exceptionTypes> = $r3;

        $r32 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters()>();

        $r33 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] getTypeParameterInfos(org.eclipse.jdt.internal.compiler.ast.TypeParameter[])>($r32);

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] typeParameters> = $r33;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: java.util.Map nodesToCategories>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r36 = (char[][]) $r35;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] categories> = $r36;

        $r37 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r37;

        $r64.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration node> = r1;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r38.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterConstructor(org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo)>($r64);

     label18:
        $z12 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean reportReferenceInfo>;

        if $z12 == 0 goto label25;

        r57 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) r1;

        r58 = r57.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if r58 == null goto label25;

        $i11 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        tableswitch($i11)
        {
            case 1: goto label22;
            case 2: goto label22;
            case 3: goto label19;
            default: goto label25;
        };

     label19:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i13 = $i12 - 1;

        $r24 = $r21[$i13];

        $r22 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r22 != null goto label20;

        $i37 = 0;

        goto label21;

     label20:
        $r23 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i37 = lengthof $r23;

     label21:
        $i14 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        interfaceinvoke $r25.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptConstructorReference(char[],int,int)>($r24, $i37, $i14);

        goto label25;

     label22:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i16 = $i15 - 1;

        $r29 = $r26[$i16];

        $r27 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r27 != null goto label23;

        $i38 = 0;

        goto label24;

     label23:
        $r28 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i38 = lengthof $r28;

     label24:
        $i17 = r58.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        interfaceinvoke $r30.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptConstructorReference(char[],int,int)>($r29, $i38, $i17);

     label25:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r1);

        if z0 == 0 goto label26;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r20.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitConstructor(int)>($i10);

     label26:
        return;

     label27:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds>;

        $i2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int get(java.lang.Object)>(r1);

        if z0 == 0 goto label37;

        i39 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers>;

        if z10 == 0 goto label28;

        i39 = i39 | 128;

     label28:
        $i5 = i39 & 1048576;

        if $i5 != 0 goto label29;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $z5 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean hasDeprecatedAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation[])>($r18);

        if $z5 != 0 goto label29;

        $z13 = 0;

        goto label30;

     label29:
        $z13 = 1;

     label30:
        z14 = $z13;

        $z15 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        if $z15 == 0 goto label31;

        $r17 = (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration) r1;

        $r59 = $r17.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        goto label32;

     label31:
        $r59 = null;

     label32:
        r60 = $r59;

        $r65 = new org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;

        specialinvoke $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: void <init>()>();

        $z4 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: boolean isAnnotation> = $z4;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int declarationStart> = $i6;

        if z14 == 0 goto label33;

        $i46 = (int) 65535;

        $i8 = i39 & $i46;

        $i40 = $i8 | 1048576;

        goto label34;

     label33:
        $i48 = (int) 65535;

        $i40 = i39 & $i48;

     label34:
        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int modifiers> = $i40;

        if r60 != null goto label35;

        $r61 = null;

        goto label36;

     label35:
        $r8 = virtualinvoke r60.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        $r61 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r8, 46);

     label36:
        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[] returnType> = $r61;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[] name> = $r9;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int nameSourceStart> = $i7;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: int nameSourceEnd> = $i2;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] parameterTypes> = r54;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] parameterNames> = r55;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] exceptionTypes> = $r3;

        $r10 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters()>();

        $r11 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] getTypeParameterInfos(org.eclipse.jdt.internal.compiler.ast.TypeParameter[])>($r10);

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] typeParameters> = $r11;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: java.util.Map nodesToCategories>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (char[][]) $r13;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: char[][] categories> = $r14;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r15;

        $r65.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration node> = r1;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r16.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterMethod(org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo)>($r65);

     label37:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r1);

        if z0 == 0 goto label39;

        $z3 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        if $z3 == 0 goto label38;

        r62 = (org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration) r1;

        r63 = r62.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression defaultValue>;

        if r63 == null goto label38;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r6.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitMethod(int,org.eclipse.jdt.internal.compiler.ast.Expression)>($i4, r63);

        return;

     label38:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r5.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitMethod(int,org.eclipse.jdt.internal.compiler.ast.Expression)>($i3, null);

     label39:
        return;
    }

    public void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, int, int, boolean, org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt, java.util.Map)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt r1;
        java.util.Map r2;
        boolean z0, z1, $z2, $z4, $z5, $z6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r5, $r8;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r3;
        java.lang.Throwable $r15;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r14;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r16;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor $r4, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] $r10;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r6, $r7, $r9, $r12;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.ast.ImportReference[] $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;

        r2 := @parameter5: java.util.Map;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int initialPosition> = i0;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int eofPosition> = i1;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean reportReferenceInfo> = z0;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds> = r1;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: java.util.Map nodesToCategories> = r2;

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int initialPosition>;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceStart>;

        if $i3 > $i2 goto label02;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int eofPosition>;

        $i10 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceEnd>;

        if $i11 < $i10 goto label02;

        $z6 = 1;

        $z5 = 1;

        goto label03;

     label02:
        $z6 = 0;

        $z5 = 0;

     label03:
        z1 = $z5;

        if $z6 == 0 goto label04;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r11.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterCompilationUnit()>();

     label04:
        $r12 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r12 != null goto label05;

        $z4 = 0;

        goto label06;

     label05:
        $z4 = 1;

     label06:
        if $r13 != null goto label07;

        $i12 = 0;

        goto label08;

     label07:
        $i12 = lengthof $r13;

     label08:
        $i4 = $z4 + $i12;

        if $r14 != null goto label09;

        $i13 = 0;

        goto label10;

     label09:
        $i13 = lengthof $r14;

     label10:
        $i9 = $i4 + $i13;

        $r10 = newarray (org.eclipse.jdt.internal.compiler.ast.ASTNode)[$i9];

        i14 = 0;

        if $r12 == null goto label11;

        i14 = 1;

        $r10[0] = $r12;

     label11:
        if $r13 == null goto label14;

        i15 = 0;

        i16 = lengthof $r13;

        goto label13;

     label12:
        $i8 = i14;

        i14 = i14 + 1;

        $r9 = $r13[i15];

        $r10[$i8] = $r9;

        i15 = i15 + 1;

     label13:
        if i15 < i16 goto label12;

     label14:
        if $r14 == null goto label17;

        i17 = 0;

        i18 = lengthof $r14;

        goto label16;

     label15:
        $i7 = i14;

        i14 = i14 + 1;

        $r8 = $r14[i17];

        $r10[$i7] = $r8;

        i17 = i17 + 1;

     label16:
        if i17 < i18 goto label15;

     label17:
        if $i9 <= 0 goto label23;

        $i6 = $i9 - 1;

        staticinvoke <org.eclipse.jdt.internal.compiler.SourceElementNotifier: void quickSort(org.eclipse.jdt.internal.compiler.ast.ASTNode[],int,int)>($r10, 0, $i6);

        i19 = 0;

        goto label22;

     label18:
        r16 = $r10[i19];

        $z2 = r16 instanceof org.eclipse.jdt.internal.compiler.ast.ImportReference;

        if $z2 == 0 goto label20;

        r6 = (org.eclipse.jdt.internal.compiler.ast.ImportReference) r16;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if r16 != $r7 goto label19;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.ImportReference,boolean)>(r6, 1);

        goto label21;

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.ImportReference,boolean)>(r6, 0);

        goto label21;

     label20:
        $r5 = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) r16;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,boolean,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r5, 1, null);

     label21:
        i19 = i19 + 1;

     label22:
        if i19 < $i9 goto label18;

     label23:
        if z1 == 0 goto label25;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceEnd>;

        interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitCompilationUnit(int)>($i5);

        goto label25;

     label24:
        $r15 := @caughtexception;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void reset()>();

        throw $r15;

     label25:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void reset()>();

        return;

        catch java.lang.Throwable from label01 to label24 with label24;
    }

    protected void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt $r34;
        char[][] $r15, $r20;
        java.util.Map $r18;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r14, $r35;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor $r4, $r22, $r29, $r31, $r32;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r33;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        char[] $r17, $r28, r36;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r26, $r27;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r24, $r25;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z14, $z15, $z16;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo $r37;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, $i19, $i20, $i22, $i24, $i26, $i28;
        java.lang.Object $r19;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r30;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int initialPosition>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        if $i1 > $i0 goto label01;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int eofPosition>;

        $i12 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        if $i13 < $i12 goto label01;

        $z16 = 1;

        $z15 = 1;

        goto label02;

     label01:
        $z16 = 0;

        $z15 = 0;

     label02:
        z0 = $z15;

        $i14 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i14)
        {
            case 1: goto label06;
            case 2: goto label18;
            case 3: goto label03;
            default: goto label20;
        };

     label03:
        $z1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean reportReferenceInfo>;

        if $z1 == 0 goto label06;

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z12 = $r24 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z12 == 0 goto label06;

        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        r33 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) $r25;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r28 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r26 = r33.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r26 != null goto label04;

        $i15 = 0;

        goto label05;

     label04:
        $r27 = r33.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i15 = lengthof $r27;

     label05:
        $i8 = r33.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: int sourceStart>;

        interfaceinvoke $r29.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptConstructorReference(char[],int,int)>($r28, $i15, $i8);

     label06:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds>;

        $i16 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt: int get(java.lang.Object)>(r1);

        i17 = $i16;

        $i22 = (int) -1;

        if $i16 != $i22 goto label07;

        i17 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

     label07:
        if z0 == 0 goto label14;

        i18 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        $i3 = i18 & 1048576;

        if $i3 != 0 goto label08;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $z11 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean hasDeprecatedAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation[])>($r23);

        if $z11 != 0 goto label08;

        $z14 = 0;

        goto label09;

     label08:
        $z14 = 1;

     label09:
        z10 = $z14;

        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r35 != null goto label10;

        r36 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        i18 = i18 | 16384;

        goto label11;

     label10:
        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getParameterizedTypeName()>();

        r36 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r15, 46);

     label11:
        $r37 = new org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo;

        specialinvoke $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: void <init>()>();

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: int declarationStart> = $i4;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: char[] name> = $r17;

        if z10 == 0 goto label12;

        $i24 = (int) 65535;

        $i7 = i18 & $i24;

        $i19 = $i7 | 1048576;

        goto label13;

     label12:
        $i26 = (int) 65535;

        $i19 = i18 & $i26;

     label13:
        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: int modifiers> = $i19;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: char[] type> = r36;

        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: int nameSourceStart> = $i5;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: int nameSourceEnd> = $i6;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: java.util.Map nodesToCategories>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r20 = (char[][]) $r19;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: char[][] categories> = $r20;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r21;

        $r37.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration node> = r1;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r22.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterField(org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo)>($r37);

     label14:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r1, r2);

        if z0 == 0 goto label20;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        if $r3 == null goto label15;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z2 = $r5 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        if $z2 != 0 goto label15;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z3 = $r6 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z3 != 0 goto label15;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z4 = $r7 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        if $z4 != 0 goto label15;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z5 = $r8 instanceof org.eclipse.jdt.internal.compiler.ast.Assignment;

        if $z5 != 0 goto label15;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z6 = $r9 instanceof org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess;

        if $z6 != 0 goto label15;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z7 = $r10 instanceof org.eclipse.jdt.internal.compiler.ast.MessageSend;

        if $z7 != 0 goto label15;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z8 = $r11 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayReference;

        if $z8 != 0 goto label15;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z9 = $r12 instanceof org.eclipse.jdt.internal.compiler.ast.ThisReference;

        if $z9 == 0 goto label16;

     label15:
        $i28 = (int) -1;

        $i20 = $i28;

        goto label17;

     label16:
        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $i20 = $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

     label17:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitField(int,int,int)>($i20, i17, $i2);

        goto label20;

     label18:
        if $z16 == 0 goto label19;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i11 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        interfaceinvoke $r32.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterInitializer(int,int)>($i11, $i10);

     label19:
        $r30 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.Initializer)>($r30);

        if z0 == 0 goto label20;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r31.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitInitializer(int)>($i9);

     label20:
        return;
    }

    protected void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.ImportReference, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor $r3, $r4;
        char[][] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptPackage(org.eclipse.jdt.internal.compiler.ast.ImportReference)>(r1);

        goto label4;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceStart>;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceEnd>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int bits>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int modifiers>;

        interfaceinvoke $r3.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void acceptImport(int,int,char[][],boolean,int)>($i4, $i3, $r2, $z1, $i2);

     label4:
        return;
    }

    protected void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, boolean, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        char[][] $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r21, $r41;
        byte b42;
        java.util.Map $r19;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor $r4, $r40;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r3;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r34;
        char[] $r1, $r2, $r6, $r16, r36, r38;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] $r18;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r33;
        org.eclipse.jdt.internal.compiler.ast.Expression $r24;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r26, $r28, $r31, r42;
        boolean $z0, z1, z2, z3, $z4, $z5, $z6, $z7, z8, $z10, $z11, $z12;
        org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo $r45;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, r29, r44;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r14, $r15, $r22, $r23, $r25, $r27, $r30, $r37;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r32, $r39;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r35;
        int $i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36, $i37, $i38, $i39, $i40, i41, i43, $i45, $i47;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r17;
        java.lang.Object $r20;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r43;

        r3 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        z2 := @parameter1: boolean;

        r29 := @parameter2: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] PACKAGE_INFO_NAME>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r1);

        if $z0 == 0 goto label01;

        return;

     label01:
        $i1 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int initialPosition>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        if $i1 > $i0 goto label02;

        $i29 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int eofPosition>;

        $i28 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        if $i29 < $i28 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z1 = $z6;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r33 != null goto label04;

        $i30 = 0;

        goto label05;

     label04:
        $i30 = lengthof $r33;

     label05:
        i2 = $i30;

        if $r34 != null goto label06;

        $i31 = 0;

        goto label07;

     label06:
        $i31 = lengthof $r34;

     label07:
        i3 = $i31;

        if $r35 != null goto label08;

        $i32 = 0;

        goto label09;

     label08:
        $i32 = lengthof $r35;

     label09:
        i4 = $i32;

        i33 = 0;

        i34 = 0;

        i35 = 0;

        if z2 == 0 goto label38;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] getInterfaceNames(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i12 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i11);

        r36 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_OBJECT>;

        if z1 == 0 goto label29;

        i36 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i22 = i36 & 1048576;

        if $i22 != 0 goto label10;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $z5 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: boolean hasDeprecatedAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation[])>($r32);

        if $z5 != 0 goto label10;

        $z7 = 0;

        goto label11;

     label10:
        $z7 = 1;

     label11:
        z8 = $z7;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        if $r37 == null goto label12;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r31 = $r30.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        if $r31 == null goto label12;

        $z12 = 1;

        $z11 = 1;

        goto label13;

     label12:
        $z12 = 0;

        $z11 = 0;

     label13:
        z3 = $z12;

        if $z11 == 0 goto label14;

        i36 = i36 | 16384;

        r38 = r29.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        goto label15;

     label14:
        r38 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[] getSuperclassName(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label15:
        $r45 = new org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo;

        specialinvoke $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: void <init>()>();

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        if $r14 != null goto label16;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int declarationStart> = $i27;

        goto label18;

     label16:
        if z3 == 0 goto label17;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r28 = $r27.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $i26 = $r28.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int declarationStart> = $i26;

        goto label18;

     label17:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $i23 = $r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: int sourceStart>;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int declarationStart> = $i23;

     label18:
        if z8 == 0 goto label19;

        $i45 = (int) 65535;

        $i25 = i36 & $i45;

        $i37 = $i25 | 1048576;

        goto label20;

     label19:
        $i47 = (int) 65535;

        $i37 = i36 & $i47;

     label20:
        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int modifiers> = $i37;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: char[] name> = $r16;

        if z3 == 0 goto label21;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r26 = $r25.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $i38 = $r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        goto label22;

     label21:
        $i38 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

     label22:
        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int nameSourceStart> = $i38;

        $i24 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int sourceEnd(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: int nameSourceEnd> = $i24;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: char[] superclass> = r38;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: char[][] superinterfaces> = $r5;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r18 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] getTypeParameterInfos(org.eclipse.jdt.internal.compiler.ast.TypeParameter[])>($r17);

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo[] typeParameters> = $r18;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: java.util.Map nodesToCategories>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r21 = (char[][]) $r20;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: char[][] categories> = $r21;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean isSecondary()>();

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: boolean secondary> = $z4;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        if $r22 == null goto label23;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r24 == null goto label23;

        $z10 = 1;

        goto label24;

     label23:
        $z10 = 0;

     label24:
        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: boolean anonymousMember> = $z10;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r39;

        $r45.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration node> = r0;

        $r40 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        interfaceinvoke $r40.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void enterType(org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo)>($r45);

        tableswitch($i12)
        {
            case 1: goto label25;
            case 2: goto label26;
            case 3: goto label27;
            case 4: goto label28;
            default: goto label29;
        };

     label25:
        if r38 == null goto label29;

        r36 = r38;

        goto label29;

     label26:
        r36 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_OBJECT>;

        goto label29;

     label27:
        r36 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_ENUM>;

        goto label29;

     label28:
        r36 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_ANNOTATION_ANNOTATION>;

     label29:
        $i39 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $r41 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames>;

        $i40 = lengthof $r41;

        if $i39 != $i40 goto label30;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames>;

        $i16 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i17 = $i16 * 2;

        $r9 = newarray (char[])[$i17];

        r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames> = $r9;

        $i18 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, $i18);

        $r12 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames>;

        $i19 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i20 = $i19 * 2;

        $r11 = newarray (char[])[$i20];

        r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames> = $r11;

        $i21 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, $i21);

     label30:
        $r7 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames>;

        $i13 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r7[$i13] = $r6;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames>;

        $i14 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i15 = $i14 + 1;

        r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex> = $i15;

        $r8[$i14] = r36;

        goto label38;

     label31:
        r42 = null;

        r43 = null;

        r44 = null;

        i41 = 2147483647;

        b42 = -1;

        if i33 >= i2 goto label32;

        r42 = $r33[i33];

        $i7 = r42.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        if $i7 >= 2147483647 goto label32;

        i41 = r42.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart>;

        b42 = 0;

     label32:
        if i34 >= i3 goto label33;

        r43 = $r34[i34];

        $i6 = r43.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        if $i6 >= i41 goto label33;

        i41 = r43.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart>;

        b42 = 1;

     label33:
        if i35 >= i4 goto label34;

        r44 = $r35[i35];

        $i5 = r44.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        if $i5 >= i41 goto label34;

        i43 = r44.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        b42 = 2;

     label34:
        tableswitch(b42)
        {
            case 0: goto label35;
            case 1: goto label36;
            case 2: goto label37;
            default: goto label38;
        };

     label35:
        i33 = i33 + 1;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r42, r0);

        goto label38;

     label36:
        i34 = i34 + 1;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r43);

        goto label38;

     label37:
        i35 = i35 + 1;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: void notifySourceElementRequestor(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,boolean,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r44, 1, null);

     label38:
        if i33 < i2 goto label31;

        if i35 < i4 goto label31;

        if i34 < i3 goto label31;

        if z2 == 0 goto label40;

        if z1 == 0 goto label39;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.ISourceElementRequestor requestor>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.ISourceElementRequestor: void exitType(int)>($i10);

     label39:
        $i8 = r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex>;

        $i9 = $i8 - 1;

        r3.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex> = $i9;

     label40:
        return;
    }

    private static void quickSort(org.eclipse.jdt.internal.compiler.ast.ASTNode[], int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1, $r2, r3, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i9, $i10, $i12, $i14;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] r0;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode[];

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        i0 = i7;

        i1 = i8;

        $i2 = i8 - i7;

        $i3 = $i2 / 2;

        $i4 = i7 + $i3;

        r1 = r0[$i4];

        goto label2;

     label1:
        i7 = i7 + 1;

     label2:
        $r5 = r0[i7];

        $i9 = $r5.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        if $i9 < $i10 goto label1;

        goto label4;

     label3:
        $i12 = (int) -1;

        i8 = i8 + $i12;

     label4:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $r2 = r0[i8];

        $i5 = $r2.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        if $i6 < $i5 goto label3;

        if i7 > i8 goto label5;

        r3 = r0[i7];

        $r4 = r0[i8];

        r0[i7] = $r4;

        r0[i8] = r3;

        i7 = i7 + 1;

        $i14 = (int) -1;

        i8 = i8 + $i14;

     label5:
        if i7 <= i8 goto label2;

        if i0 >= i8 goto label6;

        staticinvoke <org.eclipse.jdt.internal.compiler.SourceElementNotifier: void quickSort(org.eclipse.jdt.internal.compiler.ast.ASTNode[],int,int)>(r0, i0, i8);

     label6:
        if i7 >= i1 goto label7;

        staticinvoke <org.eclipse.jdt.internal.compiler.SourceElementNotifier: void quickSort(org.eclipse.jdt.internal.compiler.ast.ASTNode[],int,int)>(r0, i7, i1);

     label7:
        return;
    }

    private void reset()
    {
        char[][] $r1, $r2;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        $r1 = newarray (char[])[4];

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] typeNames> = $r1;

        $r2 = newarray (char[])[4];

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: char[][] superTypeNames> = $r2;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: int nestedTypeIndex> = 0;

        r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt sourceEnds> = null;

        return;
    }

    private int sourceEnd(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r2, $r4;

        r5 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label2;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        if $r2 == null goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $i4 = $r4.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        return $i4;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        return $i3;

     label2:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        return $i2;
    }

    private void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] $r3, $r4, $r13;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r5, $r9;
        org.eclipse.jdt.internal.compiler.ast.Statement $r7;
        int $i0, $i1, i2, i3;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r12;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor $r1, $r6, $r10;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r8, $r11;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        if $r1 == null goto label4;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bits>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label4;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        if $z0 == 0 goto label1;

        r12 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) r2;

        $r8 = r12.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r8 == null goto label1;

        $r11 = r12.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r10, $r9);

     label1:
        $r13 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        if $r13 == null goto label4;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        i2 = lengthof $r3;

        i3 = 0;

        goto label3;

     label2:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements>;

        $r7 = $r4[i3];

        $r6 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Statement: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r6, $r5);

        i3 = i3 + 1;

     label3:
        if i3 < i2 goto label2;

     label4:
        return;
    }

    private void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        java.lang.Throwable $r9;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor $r1, $r5, $r6, $r8, $r10;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r7;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r4;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        if $r1 == null goto label4;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label4;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        if $r3 == null goto label4;

     label1:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor: void pushDeclaringType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r4);

        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r6, null);

        goto label3;

     label2:
        $r9 := @caughtexception;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor: void popDeclaringType()>();

        throw $r9;

     label3:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor: void popDeclaringType()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    private void visitIfNeeded(org.eclipse.jdt.internal.compiler.ast.Initializer)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r3, $r5;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier r0;
        org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor $r1, $r4;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Initializer r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.SourceElementNotifier;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Initializer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        if $r1 == null goto label1;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Initializer: int bits>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        if $r3 == null goto label1;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.Initializer: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.SourceElementNotifier: org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor localDeclarationVisitor>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Block: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r4, null);

     label1:
        return;
    }
}
