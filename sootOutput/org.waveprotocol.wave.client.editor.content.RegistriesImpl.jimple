public final class org.waveprotocol.wave.client.editor.content.RegistriesImpl extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.Registries
{
    private final org.waveprotocol.wave.client.editor.ElementHandlerRegistry elementHandlerRegistry;
    private final org.waveprotocol.wave.model.document.util.AnnotationRegistry annotationHandlerRegistry;
    private final org.waveprotocol.wave.client.editor.content.PainterRegistry paintRegistry;

    public void <init>(org.waveprotocol.wave.client.editor.ElementHandlerRegistry, org.waveprotocol.wave.model.document.util.AnnotationRegistry, org.waveprotocol.wave.client.editor.content.PainterRegistry)
    {
        org.waveprotocol.wave.client.editor.content.RegistriesImpl r0;
        org.waveprotocol.wave.client.editor.content.PainterRegistry r3;
        org.waveprotocol.wave.model.document.util.AnnotationRegistry r2;
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.ElementHandlerRegistry;

        r2 := @parameter1: org.waveprotocol.wave.model.document.util.AnnotationRegistry;

        r3 := @parameter2: org.waveprotocol.wave.client.editor.content.PainterRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.ElementHandlerRegistry elementHandlerRegistry> = r1;

        r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.model.document.util.AnnotationRegistry annotationHandlerRegistry> = r2;

        r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.content.PainterRegistry paintRegistry> = r3;

        return;
    }

    public org.waveprotocol.wave.client.editor.ElementHandlerRegistry getElementHandlerRegistry()
    {
        org.waveprotocol.wave.client.editor.content.RegistriesImpl r0;
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.ElementHandlerRegistry elementHandlerRegistry>;

        return $r1;
    }

    public org.waveprotocol.wave.model.document.util.AnnotationRegistry getAnnotationHandlerRegistry()
    {
        org.waveprotocol.wave.client.editor.content.RegistriesImpl r0;
        org.waveprotocol.wave.model.document.util.AnnotationRegistry $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.model.document.util.AnnotationRegistry annotationHandlerRegistry>;

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.PainterRegistry getPaintRegistry()
    {
        org.waveprotocol.wave.client.editor.content.RegistriesImpl r0;
        org.waveprotocol.wave.client.editor.content.PainterRegistry $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.content.PainterRegistry paintRegistry>;

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.Registries createExtension()
    {
        org.waveprotocol.wave.client.editor.content.RegistriesImpl $r0, r1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistry $r4, $r5;
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry $r2, $r3;
        org.waveprotocol.wave.client.editor.content.PainterRegistry $r6, $r7;

        r1 := @this: org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        $r0 = new org.waveprotocol.wave.client.editor.content.RegistriesImpl;

        $r2 = r1.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.ElementHandlerRegistry elementHandlerRegistry>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.ElementHandlerRegistry: org.waveprotocol.wave.client.editor.ElementHandlerRegistry createExtension()>();

        $r4 = r1.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.model.document.util.AnnotationRegistry annotationHandlerRegistry>;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.util.AnnotationRegistry: org.waveprotocol.wave.model.document.util.AnnotationRegistry createExtension()>();

        $r6 = r1.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: org.waveprotocol.wave.client.editor.content.PainterRegistry paintRegistry>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.client.editor.content.PainterRegistry: org.waveprotocol.wave.client.editor.content.PainterRegistry createExtension()>();

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.content.RegistriesImpl: void <init>(org.waveprotocol.wave.client.editor.ElementHandlerRegistry,org.waveprotocol.wave.model.document.util.AnnotationRegistry,org.waveprotocol.wave.client.editor.content.PainterRegistry)>($r3, $r5, $r7);

        return $r0;
    }
}
