public class org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser extends org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser
{

    public void <init>()
    {
        org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/apache/cxf/clustering/LoadDistributorFeature;";
    }

    protected void mapElement(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r3;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser r0;
        java.lang.String r4;

        r0 := @this: org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser;

        r2 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r3 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter2: org.w3c.dom.Element;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.cxf.clustering.spring.LoadDistributorBeanDefinitionParser: void setFirstChildAsProperty(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)>(r1, r2, r3, r4);

        return;
    }
}
