public class org.apache.log4j.BasicConfigurator extends java.lang.Object
{

    protected void <init>()
    {
        org.apache.log4j.BasicConfigurator r0;

        r0 := @this: org.apache.log4j.BasicConfigurator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void configure()
    {
        org.apache.log4j.Logger $r0;
        org.apache.log4j.PatternLayout $r2;
        org.apache.log4j.ConsoleAppender $r1;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>();

        $r1 = new org.apache.log4j.ConsoleAppender;

        $r2 = new org.apache.log4j.PatternLayout;

        specialinvoke $r2.<org.apache.log4j.PatternLayout: void <init>(java.lang.String)>("%r [%t] %p %c %x - %m%n");

        specialinvoke $r1.<org.apache.log4j.ConsoleAppender: void <init>(org.apache.log4j.Layout)>($r2);

        virtualinvoke $r0.<org.apache.log4j.Category: void addAppender(org.apache.log4j.Appender)>($r1);

        return;
    }

    public static void configure(org.apache.log4j.Appender)
    {
        org.apache.log4j.Logger $r0;
        org.apache.log4j.Appender r1;

        r1 := @parameter0: org.apache.log4j.Appender;

        $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>();

        virtualinvoke $r0.<org.apache.log4j.Category: void addAppender(org.apache.log4j.Appender)>(r1);

        return;
    }

    public static void resetConfiguration()
    {
        staticinvoke <org.apache.log4j.LogManager: void resetConfiguration()>();

        return;
    }
}
