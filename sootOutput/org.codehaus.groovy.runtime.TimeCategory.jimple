public class org.codehaus.groovy.runtime.TimeCategory extends java.lang.Object
{

    public void <init>()
    {
        org.codehaus.groovy.runtime.TimeCategory r0;

        r0 := @this: org.codehaus.groovy.runtime.TimeCategory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Date plus(java.util.Date, groovy.time.BaseDuration)
    {
        java.util.Date r1, $r2;
        groovy.time.BaseDuration r0;

        r1 := @parameter0: java.util.Date;

        r0 := @parameter1: groovy.time.BaseDuration;

        $r2 = virtualinvoke r0.<groovy.time.BaseDuration: java.util.Date plus(java.util.Date)>(r1);

        return $r2;
    }

    public static java.util.Date minus(java.util.Date, groovy.time.BaseDuration)
    {
        java.util.Date r1, $r3;
        java.util.Calendar $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        groovy.time.BaseDuration r2;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: groovy.time.BaseDuration;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $i0 = virtualinvoke r2.<groovy.time.BaseDuration: int getYears()>();

        $i1 = neg $i0;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(1, $i1);

        $i2 = virtualinvoke r2.<groovy.time.BaseDuration: int getMonths()>();

        $i3 = neg $i2;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(2, $i3);

        $i4 = virtualinvoke r2.<groovy.time.BaseDuration: int getDays()>();

        $i5 = neg $i4;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(6, $i5);

        $i6 = virtualinvoke r2.<groovy.time.BaseDuration: int getHours()>();

        $i7 = neg $i6;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(11, $i7);

        $i8 = virtualinvoke r2.<groovy.time.BaseDuration: int getMinutes()>();

        $i9 = neg $i8;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(12, $i9);

        $i10 = virtualinvoke r2.<groovy.time.BaseDuration: int getSeconds()>();

        $i11 = neg $i10;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(13, $i11);

        $i12 = virtualinvoke r2.<groovy.time.BaseDuration: int getMillis()>();

        $i13 = neg $i12;

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(14, $i13);

        $r3 = virtualinvoke $r0.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;
    }

    public static java.util.TimeZone getTimeZone(java.util.Date)
    {
        java.util.Calendar $r0;
        java.util.Date r1;
        java.util.TimeZone $r2;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r2 = virtualinvoke $r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public static groovy.time.Duration getDaylightSavingsOffset(java.util.Date)
    {
        java.util.Date r0;
        java.util.TimeZone $r1;
        int $i0;
        groovy.time.TimeDuration $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: java.util.TimeZone getTimeZone(java.util.Date)>(r0);

        $z0 = virtualinvoke $r1.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r1.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r0);

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.util.TimeZone: int getDSTSavings()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r2 = new groovy.time.TimeDuration;

        specialinvoke $r2.<groovy.time.TimeDuration: void <init>(int,int,int,int)>(0, 0, 0, $i0);

        return $r2;
    }

    public static groovy.time.Duration getDaylightSavingsOffset(groovy.time.BaseDuration)
    {
        groovy.time.Duration $r2;
        java.util.Date $r0;
        groovy.time.BaseDuration r1;
        long $l0, $l1;

        r1 := @parameter0: groovy.time.BaseDuration;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<groovy.time.BaseDuration: long toMilliseconds()>();

        $l1 = $l0 + 1L;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        $r2 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.Duration getDaylightSavingsOffset(java.util.Date)>($r0);

        return $r2;
    }

    public static groovy.time.Duration getRelativeDaylightSavingsOffset(java.util.Date, java.util.Date)
    {
        groovy.time.Duration $r1, $r3;
        java.util.Date r0, r2;
        long $l0, $l1, $l2;
        int $i3;
        groovy.time.TimeDuration $r4;

        r0 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.Duration getDaylightSavingsOffset(java.util.Date)>(r0);

        $r3 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.Duration getDaylightSavingsOffset(java.util.Date)>(r2);

        $r4 = new groovy.time.TimeDuration;

        $l0 = virtualinvoke $r3.<groovy.time.Duration: long toMilliseconds()>();

        $l1 = virtualinvoke $r1.<groovy.time.Duration: long toMilliseconds()>();

        $l2 = $l0 - $l1;

        $i3 = (int) $l2;

        specialinvoke $r4.<groovy.time.TimeDuration: void <init>(int,int,int,int)>(0, 0, 0, $i3);

        return $r4;
    }

    public static groovy.time.TimeDuration minus(java.util.Date, java.util.Date)
    {
        java.util.Date r0, r1;
        long $l0, $l1, l2, $l3, $l4, $l5, $l6, $l7, $l12, $l13, $l17, $l18, $l21, l24, l25, l26, l27, l28;
        int i8, $i9, $i10, $i11, i14, $i15, $i16, i19, $i20, $i22, $i23;
        groovy.time.TimeDuration $r2;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        l24 = $l0 - $l1;

        l2 = l24 / 86400000L;

        $l3 = l2 * 24L;

        $l4 = $l3 * 60L;

        $l5 = $l4 * 60L;

        $l6 = $l5 * 1000L;

        l25 = l24 - $l6;

        $l7 = l25 / 3600000L;

        i8 = (int) $l7;

        $i9 = i8 * 60;

        $i10 = $i9 * 60;

        $i11 = $i10 * 1000;

        $l12 = (long) $i11;

        l26 = l25 - $l12;

        $l13 = l26 / 60000L;

        i14 = (int) $l13;

        $i15 = i14 * 60;

        $i16 = $i15 * 1000;

        $l17 = (long) $i16;

        l27 = l26 - $l17;

        $l18 = l27 / 1000L;

        i19 = (int) $l18;

        $i20 = i19 * 1000;

        $l21 = (long) $i20;

        l28 = l27 - $l21;

        $r2 = new groovy.time.TimeDuration;

        $i23 = (int) l2;

        $i22 = (int) l28;

        specialinvoke $r2.<groovy.time.TimeDuration: void <init>(int,int,int,int,int)>($i23, i8, i14, i19, $i22);

        return $r2;
    }

    public static groovy.time.DatumDependentDuration getMonths(java.lang.Integer)
    {
        groovy.time.DatumDependentDuration $r0;
        int $i0;
        java.lang.Integer r1;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.DatumDependentDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.DatumDependentDuration: void <init>(int,int,int,int,int,int,int)>(0, $i0, 0, 0, 0, 0, 0);

        return $r0;
    }

    public static groovy.time.DatumDependentDuration getMonth(java.lang.Integer)
    {
        groovy.time.DatumDependentDuration $r1;
        java.lang.Integer r0;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.DatumDependentDuration getMonths(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.DatumDependentDuration getYears(java.lang.Integer)
    {
        groovy.time.DatumDependentDuration $r0;
        int $i0;
        java.lang.Integer r1;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.DatumDependentDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.DatumDependentDuration: void <init>(int,int,int,int,int,int,int)>($i0, 0, 0, 0, 0, 0, 0);

        return $r0;
    }

    public static groovy.time.DatumDependentDuration getYear(java.lang.Integer)
    {
        groovy.time.DatumDependentDuration $r1;
        java.lang.Integer r0;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.DatumDependentDuration getYears(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.Duration getWeeks(java.lang.Integer)
    {
        groovy.time.Duration $r0;
        int $i0, $i1;
        java.lang.Integer r1;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.Duration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i1 = $i0 * 7;

        specialinvoke $r0.<groovy.time.Duration: void <init>(int,int,int,int,int)>($i1, 0, 0, 0, 0);

        return $r0;
    }

    public static groovy.time.Duration getWeek(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.Duration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.Duration getWeeks(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.Duration getDays(java.lang.Integer)
    {
        int $i0;
        groovy.time.Duration $r0;
        java.lang.Integer r1;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.Duration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.Duration: void <init>(int,int,int,int,int)>($i0, 0, 0, 0, 0);

        return $r0;
    }

    public static groovy.time.Duration getDay(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.Duration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.Duration getDays(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.TimeDuration getHours(java.lang.Integer)
    {
        int $i0;
        java.lang.Integer r1;
        groovy.time.TimeDuration $r0;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.TimeDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.TimeDuration: void <init>(int,int,int,int,int)>(0, $i0, 0, 0, 0);

        return $r0;
    }

    public static groovy.time.TimeDuration getHour(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.TimeDuration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.TimeDuration getHours(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.TimeDuration getMinutes(java.lang.Integer)
    {
        int $i0;
        java.lang.Integer r1;
        groovy.time.TimeDuration $r0;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.TimeDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.TimeDuration: void <init>(int,int,int,int,int)>(0, 0, $i0, 0, 0);

        return $r0;
    }

    public static groovy.time.TimeDuration getMinute(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.TimeDuration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.TimeDuration getMinutes(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.TimeDuration getSeconds(java.lang.Integer)
    {
        int $i0;
        java.lang.Integer r1;
        groovy.time.TimeDuration $r0;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.TimeDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.TimeDuration: void <init>(int,int,int,int,int)>(0, 0, 0, $i0, 0);

        return $r0;
    }

    public static groovy.time.TimeDuration getSecond(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.TimeDuration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.TimeDuration getSeconds(java.lang.Integer)>(r0);

        return $r1;
    }

    public static groovy.time.TimeDuration getMilliseconds(java.lang.Integer)
    {
        int $i0;
        java.lang.Integer r1;
        groovy.time.TimeDuration $r0;

        r1 := @parameter0: java.lang.Integer;

        $r0 = new groovy.time.TimeDuration;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r0.<groovy.time.TimeDuration: void <init>(int,int,int,int,int)>(0, 0, 0, 0, $i0);

        return $r0;
    }

    public static groovy.time.TimeDuration getMillisecond(java.lang.Integer)
    {
        java.lang.Integer r0;
        groovy.time.TimeDuration $r1;

        r0 := @parameter0: java.lang.Integer;

        $r1 = staticinvoke <org.codehaus.groovy.runtime.TimeCategory: groovy.time.TimeDuration getMilliseconds(java.lang.Integer)>(r0);

        return $r1;
    }
}
