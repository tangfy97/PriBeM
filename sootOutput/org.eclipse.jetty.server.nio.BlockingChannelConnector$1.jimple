class org.eclipse.jetty.server.nio.BlockingChannelConnector$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.eclipse.jetty.server.nio.BlockingChannelConnector this$0;

    void <init>(org.eclipse.jetty.server.nio.BlockingChannelConnector)
    {
        org.eclipse.jetty.server.nio.BlockingChannelConnector$1 r0;
        org.eclipse.jetty.server.nio.BlockingChannelConnector r1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$1;

        r1 := @parameter0: org.eclipse.jetty.server.nio.BlockingChannelConnector;

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$1: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        long $l0;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$1 r0;
        java.lang.Exception $r6;
        java.lang.InterruptedException $r8;
        org.eclipse.jetty.server.nio.BlockingChannelConnector $r1, $r10;
        java.lang.Object $r4;
        org.eclipse.jetty.util.log.Logger $r7, $r9;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$1;

     label1:
        $r10 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$1: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $z1 = virtualinvoke $r10.<org.eclipse.jetty.server.nio.BlockingChannelConnector: boolean isRunning()>();

        if $z1 == 0 goto label7;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(400L);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$1: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint) $r4;

        virtualinvoke r5.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: void checkIdleTimestamp(long)>($l0);

        goto label3;

     label4:
        goto label1;

     label5:
        $r8 := @caughtexception;

        $r9 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

        goto label1;

     label6:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

        goto label1;

     label7:
        return;

        catch java.lang.InterruptedException from label2 to label4 with label5;
        catch java.lang.Exception from label2 to label4 with label6;
    }
}
