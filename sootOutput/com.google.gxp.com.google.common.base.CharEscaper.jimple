public abstract class com.google.gxp.com.google.common.base.CharEscaper extends java.lang.Object implements com.google.gxp.com.google.common.base.Escaper
{
    private static final int DEST_PAD;
    private static final java.lang.ThreadLocal DEST_TL;

    public void <init>()
    {
        com.google.gxp.com.google.common.base.CharEscaper r0;

        r0 := @this: com.google.gxp.com.google.common.base.CharEscaper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String escape(java.lang.String)
    {
        com.google.gxp.com.google.common.base.CharEscaper r1;
        int $i0, i2;
        char[] $r2;
        char $c1;
        java.lang.String r0, $r3;

        r1 := @this: com.google.gxp.com.google.common.base.CharEscaper;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $r2 = virtualinvoke r1.<com.google.gxp.com.google.common.base.CharEscaper: char[] escape(char)>($c1);

        if $r2 == null goto label2;

        $r3 = virtualinvoke r1.<com.google.gxp.com.google.common.base.CharEscaper: java.lang.String escapeSlow(java.lang.String,int)>(r0, i2);

        return $r3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r0;
    }

    public java.lang.Appendable escape(java.lang.Appendable)
    {
        com.google.gxp.com.google.common.base.CharEscaper r2;
        com.google.gxp.com.google.common.base.CharEscaper$1 $r1;
        java.lang.Appendable r0;

        r2 := @this: com.google.gxp.com.google.common.base.CharEscaper;

        r0 := @parameter0: java.lang.Appendable;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.gxp.com.google.common.base.CharEscaper$1;

        specialinvoke $r1.<com.google.gxp.com.google.common.base.CharEscaper$1: void <init>(com.google.gxp.com.google.common.base.CharEscaper,java.lang.Appendable)>(r2, r0);

        return $r1;
    }

    protected java.lang.String escapeSlow(java.lang.String, int)
    {
        int $i0, i2, $i3, i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13;
        java.lang.String r0, $r6;
        com.google.gxp.com.google.common.base.CharEscaper r3;
        java.lang.ThreadLocal $r1;
        char $c1;
        char[] $r4, r5;
        java.lang.Object $r2;

        r3 := @this: com.google.gxp.com.google.common.base.CharEscaper;

        r0 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = <com.google.gxp.com.google.common.base.CharEscaper: java.lang.ThreadLocal DEST_TL>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (char[]) $r2;

        i8 = lengthof r5;

        i9 = 0;

        i10 = 0;

     label1:
        if i7 >= $i0 goto label7;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $r4 = virtualinvoke r3.<com.google.gxp.com.google.common.base.CharEscaper: char[] escape(char)>($c1);

        if $r4 != null goto label2;

        goto label6;

     label2:
        i11 = lengthof $r4;

        i2 = i7 - i10;

        $i3 = i9 + i2;

        i4 = $i3 + i11;

        if i8 >= i4 goto label3;

        $i5 = $i0 - i7;

        $i6 = i4 + $i5;

        i8 = $i6 + 32;

        r5 = staticinvoke <com.google.gxp.com.google.common.base.CharEscaper: char[] growBuffer(char[],int,int)>(r5, i9, i8);

     label3:
        if i2 <= 0 goto label4;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(i10, i7, r5, i9);

        i9 = i9 + i2;

     label4:
        if i11 <= 0 goto label5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, i9, i11);

        i9 = i9 + i11;

     label5:
        i10 = i7 + 1;

     label6:
        i7 = i7 + 1;

        goto label1;

     label7:
        i12 = $i0 - i10;

        if i12 <= 0 goto label9;

        i13 = i9 + i12;

        if i8 >= i13 goto label8;

        r5 = staticinvoke <com.google.gxp.com.google.common.base.CharEscaper: char[] growBuffer(char[],int,int)>(r5, i9, i13);

     label8:
        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(i10, $i0, r5, i9);

        i9 = i13;

     label9:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r5, 0, i9);

        return $r6;
    }

    protected abstract char[] escape(char);

    private static final char[] growBuffer(char[], int, int)
    {
        int i0, i1;
        char[] r0, r1;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (char)[i0];

        if i1 <= 0 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, i1);

     label1:
        return r0;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.base.CharEscaper$2 $r0;

        <com.google.gxp.com.google.common.base.CharEscaper: int DEST_PAD> = 32;

        $r0 = new com.google.gxp.com.google.common.base.CharEscaper$2;

        specialinvoke $r0.<com.google.gxp.com.google.common.base.CharEscaper$2: void <init>()>();

        <com.google.gxp.com.google.common.base.CharEscaper: java.lang.ThreadLocal DEST_TL> = $r0;

        return;
    }
}
