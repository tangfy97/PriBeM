public class org.apache.batik.svggen.SVGTransform extends org.apache.batik.svggen.AbstractSVGConverter
{
    private static double radiansToDegrees;

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGTransform r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGTransform;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.apache.batik.svggen.SVGDescriptor toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        org.apache.batik.svggen.SVGTransformDescriptor $r0;
        org.apache.batik.ext.awt.g2d.GraphicContext r2;
        java.lang.String $r3;
        org.apache.batik.svggen.SVGTransform r1;

        r1 := @this: org.apache.batik.svggen.SVGTransform;

        r2 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r0 = new org.apache.batik.svggen.SVGTransformDescriptor;

        $r3 = virtualinvoke r1.<org.apache.batik.svggen.SVGTransform: java.lang.String toSVGTransform(org.apache.batik.ext.awt.g2d.GraphicContext)>(r2);

        specialinvoke $r0.<org.apache.batik.svggen.SVGTransformDescriptor: void <init>(java.lang.String)>($r3);

        return $r0;
    }

    public final java.lang.String toSVGTransform(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        org.apache.batik.ext.awt.g2d.GraphicContext r1;
        org.apache.batik.ext.awt.g2d.TransformStackElement[] $r2;
        java.lang.String $r3;
        org.apache.batik.svggen.SVGTransform r0;

        r0 := @this: org.apache.batik.svggen.SVGTransform;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.GraphicContext: org.apache.batik.ext.awt.g2d.TransformStackElement[] getTransformStack()>();

        $r3 = virtualinvoke r0.<org.apache.batik.svggen.SVGTransform: java.lang.String toSVGTransform(org.apache.batik.ext.awt.g2d.TransformStackElement[])>($r2);

        return $r3;
    }

    public final java.lang.String toSVGTransform(org.apache.batik.ext.awt.g2d.TransformStackElement[])
    {
        org.apache.batik.ext.awt.g2d.TransformStackElement $r3, $r5, $r9, r13;
        java.lang.StringBuffer $r7;
        int i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.String $r10, $r11, $r12;
        boolean $z0;
        org.apache.batik.svggen.SVGTransform$1 $r1;
        java.lang.Object $r4, $r6, $r8;
        org.apache.batik.ext.awt.g2d.TransformStackElement[] r0;
        org.apache.batik.svggen.SVGTransform r2;

        r2 := @this: org.apache.batik.svggen.SVGTransform;

        r0 := @parameter0: org.apache.batik.ext.awt.g2d.TransformStackElement[];

        i0 = lengthof r0;

        $r1 = new org.apache.batik.svggen.SVGTransform$1;

        specialinvoke $r1.<org.apache.batik.svggen.SVGTransform$1: void <init>(org.apache.batik.svggen.SVGTransform)>(r2);

        i3 = 0;

        r13 = null;

        goto label07;

     label01:
        i4 = i3;

        if r13 != null goto label02;

        $r5 = r0[i3];

        $r6 = virtualinvoke $r5.<org.apache.batik.ext.awt.g2d.TransformStackElement: java.lang.Object clone()>();

        r13 = (org.apache.batik.ext.awt.g2d.TransformStackElement) $r6;

        i4 = i3 + 1;

     label02:
        i5 = i4;

        goto label05;

     label03:
        $r3 = r0[i5];

        $z0 = virtualinvoke r13.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean concatenate(org.apache.batik.ext.awt.g2d.TransformStackElement)>($r3);

        if $z0 != 0 goto label04;

        goto label06;

     label04:
        i5 = i5 + 1;

     label05:
        if i5 < i0 goto label03;

     label06:
        i3 = i5;

        $r4 = virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r13);

        r13 = (org.apache.batik.ext.awt.g2d.TransformStackElement) $r4;

     label07:
        if i3 < i0 goto label01;

        if r13 == null goto label08;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r13);

     label08:
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        $r7 = new java.lang.StringBuffer;

        $i2 = $i1 * 8;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>($i2);

        i6 = 0;

        goto label10;

     label09:
        $r8 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(i6);

        $r9 = (org.apache.batik.ext.awt.g2d.TransformStackElement) $r8;

        $r10 = virtualinvoke r2.<org.apache.batik.svggen.SVGTransform: java.lang.String convertTransform(org.apache.batik.ext.awt.g2d.TransformStackElement)>($r9);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i6 = i6 + 1;

     label10:
        if i6 < $i1 goto label09;

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        return $r12;
    }

    final java.lang.String convertTransform(org.apache.batik.ext.awt.g2d.TransformStackElement)
    {
        org.apache.batik.ext.awt.g2d.TransformType $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        double[] $r2;
        java.lang.Error $r18;
        org.apache.batik.ext.awt.g2d.TransformStackElement r1;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        org.apache.batik.svggen.SVGTransform r4;

        r4 := @this: org.apache.batik.svggen.SVGTransform;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.TransformStackElement;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: double[] getTransformParameters()>();

        $r3 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: org.apache.batik.ext.awt.g2d.TransformType getType()>();

        $i0 = virtualinvoke $r3.<org.apache.batik.ext.awt.g2d.TransformType: int toInt()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        $z4 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z4 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("translate");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $d13 = $r2[0];

        $r16 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d14 = $r2[1];

        $r17 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d14);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label7;

     label2:
        $z3 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z3 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rotate");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $d11 = <org.apache.batik.svggen.SVGTransform: double radiansToDegrees>;

        $d10 = $r2[0];

        $d12 = $d11 * $d10;

        $r15 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label7;

     label3:
        $z2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z2 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("scale");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $d8 = $r2[0];

        $r13 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d9 = $r2[1];

        $r14 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label7;

     label4:
        $z1 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z1 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("matrix");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d6 = $r2[1];

        $r11 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d7 = $r2[0];

        $r12 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label7;

     label5:
        $z0 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z0 != 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("matrix");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $d0 = $r2[0];

        $r5 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d1 = $r2[1];

        $r6 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d2 = $r2[2];

        $r7 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d3 = $r2[3];

        $r8 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d4 = $r2[4];

        $r9 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $d5 = $r2[5];

        $r10 = virtualinvoke r4.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label7;

     label6:
        $r18 = new java.lang.Error;

        specialinvoke $r18.<java.lang.Error: void <init>()>();

        throw $r18;

     label7:
        $r19 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r19;
    }

    static void <clinit>()
    {
        <org.apache.batik.svggen.SVGTransform: double radiansToDegrees> = 57.29577951308232;

        return;
    }
}
