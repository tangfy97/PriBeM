public class org.apache.zookeeper.txn.CreateTxnV0 extends java.lang.Object implements org.apache.jute.Record
{
    private java.lang.String path;
    private byte[] data;
    private java.util.List acl;
    private boolean ephemeral;

    public void <init>()
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, byte[], java.util.List, boolean)
    {
        byte[] r2;
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        java.util.List r3;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path> = r1;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data> = r2;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl> = r3;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral> = z0;

        return;
    }

    public java.lang.String getPath()
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        $r1 = r0.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        return $r1;
    }

    public void setPath(java.lang.String)
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        java.lang.String r1;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path> = r1;

        return;
    }

    public byte[] getData()
    {
        byte[] $r1;
        org.apache.zookeeper.txn.CreateTxnV0 r0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        $r1 = r0.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        return $r1;
    }

    public void setData(byte[])
    {
        byte[] r1;
        org.apache.zookeeper.txn.CreateTxnV0 r0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: byte[];

        r0.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data> = r1;

        return;
    }

    public java.util.List getAcl()
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        java.util.List $r1;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        $r1 = r0.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        return $r1;
    }

    public void setAcl(java.util.List)
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        java.util.List r1;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl> = r1;

        return;
    }

    public boolean getEphemeral()
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        $z0 = r0.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        return $z0;
    }

    public void setEphemeral(boolean)
    {
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        boolean z0;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        z0 := @parameter0: boolean;

        r0.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral> = z0;

        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.zookeeper.data.ACL r11;
        org.apache.zookeeper.txn.CreateTxnV0 r1;
        java.util.List $r5, $r6, $r7, $r8, $r9;
        org.apache.jute.OutputArchive r0;
        int $i0, i1;
        java.lang.Object $r10;
        java.lang.String r2, $r3;
        boolean $z0;

        r1 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $r3 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeString(java.lang.String,java.lang.String)>($r3, "path");

        $r4 = r1.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeBuffer(byte[],java.lang.String)>($r4, "data");

        $r5 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startVector(java.util.List,java.lang.String)>($r5, "acl");

        $r6 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        if $r6 == null goto label2;

        $r8 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r9 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        r11 = (org.apache.zookeeper.data.ACL) $r10;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r11, "e1");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endVector(java.util.List,java.lang.String)>($r7, "acl");

        $z0 = r1.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeBool(boolean,java.lang.String)>($z0, "ephemeral");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.jute.InputArchive r0;
        org.apache.zookeeper.data.ACL $r7;
        java.util.ArrayList $r6;
        org.apache.zookeeper.txn.CreateTxnV0 r2;
        java.util.List $r8;
        java.lang.String r1, $r3;
        org.apache.jute.Index $r5;
        boolean $z0, $z1;

        r2 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $r3 = interfaceinvoke r0.<org.apache.jute.InputArchive: java.lang.String readString(java.lang.String)>("path");

        r2.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path> = $r3;

        $r4 = interfaceinvoke r0.<org.apache.jute.InputArchive: byte[] readBuffer(java.lang.String)>("data");

        r2.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data> = $r4;

        $r5 = interfaceinvoke r0.<org.apache.jute.InputArchive: org.apache.jute.Index startVector(java.lang.String)>("acl");

        if $r5 == null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl> = $r6;

     label1:
        $z1 = interfaceinvoke $r5.<org.apache.jute.Index: boolean done()>();

        if $z1 != 0 goto label2;

        $r7 = new org.apache.zookeeper.data.ACL;

        specialinvoke $r7.<org.apache.zookeeper.data.ACL: void <init>()>();

        interfaceinvoke r0.<org.apache.jute.InputArchive: void readRecord(org.apache.jute.Record,java.lang.String)>($r7, "e1");

        $r8 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        interfaceinvoke $r5.<org.apache.jute.Index: void incr()>();

        goto label1;

     label2:
        interfaceinvoke r0.<org.apache.jute.InputArchive: void endVector(java.lang.String)>("acl");

        $z0 = interfaceinvoke r0.<org.apache.jute.InputArchive: boolean readBool(java.lang.String)>("ephemeral");

        r2.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral> = $z0;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r14;
        byte[] $r4, $r9;
        java.io.ByteArrayOutputStream $r0;
        org.apache.zookeeper.data.ACL r13;
        org.apache.zookeeper.txn.CreateTxnV0 r2;
        int $i0, i1;
        java.lang.String $r3, $r8;
        boolean $z0;
        org.apache.jute.CsvOutputArchive $r1;
        java.util.List $r5, $r6, $r7, $r10, $r11;
        java.lang.Object $r12;

        r2 := @this: org.apache.zookeeper.txn.CreateTxnV0;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.jute.CsvOutputArchive;

        specialinvoke $r1.<org.apache.jute.CsvOutputArchive: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r3 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeString(java.lang.String,java.lang.String)>($r3, "path");

        $r4 = r2.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeBuffer(byte[],java.lang.String)>($r4, "data");

        $r5 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startVector(java.util.List,java.lang.String)>($r5, "acl");

        $r6 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        if $r6 == null goto label3;

        $r10 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        $r11 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i1);

        r13 = (org.apache.zookeeper.data.ACL) $r12;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r13, "e1");

        i1 = i1 + 1;

        goto label2;

     label3:
        $r7 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endVector(java.util.List,java.lang.String)>($r7, "acl");

        $z0 = r2.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeBool(boolean,java.lang.String)>($z0, "ephemeral");

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r8 = new java.lang.String;

        $r9 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.lang.String)>($r9, "UTF-8");

     label4:
        return $r8;

     label5:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Throwable: void printStackTrace()>();

        return "ERROR";

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r0;
        java.io.DataOutput r1;
        org.apache.zookeeper.txn.CreateTxnV0 r2;

        r2 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: java.io.DataOutput;

        $r0 = new org.apache.jute.BinaryOutputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryOutputArchive: void <init>(java.io.DataOutput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.txn.CreateTxnV0: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r0, "");

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r1;
        org.apache.zookeeper.txn.CreateTxnV0 r2;
        org.apache.jute.BinaryInputArchive $r0;

        r2 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r1 := @parameter0: java.io.DataInput;

        $r0 = new org.apache.jute.BinaryInputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryInputArchive: void <init>(java.io.DataInput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.txn.CreateTxnV0: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r0, "");

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.zookeeper.txn.CreateTxnV0 r1;
        java.lang.Object r2;

        r1 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("comparing CreateTxnV0 is unimplemented");

        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r5, $r6;
        org.apache.zookeeper.txn.CreateTxnV0 r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9;
        java.util.List $r7, $r8;
        java.lang.Object r0;

        r1 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.txn.CreateTxnV0;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (org.apache.zookeeper.txn.CreateTxnV0) r0;

        $r4 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        $r3 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        return $z1;

     label3:
        $r6 = r1.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        $r5 = r2.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        $z2 = staticinvoke <org.apache.jute.Utils: boolean bufEquals(byte[],byte[])>($r6, $r5);

        if $z2 != 0 goto label4;

        return $z2;

     label4:
        $r8 = r1.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $r7 = r2.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label5;

        return $z3;

     label5:
        $z5 = r1.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        $z4 = r2.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        if $z5 != $z4 goto label6;

        $z9 = 1;

        $z8 = 1;

        $z7 = 1;

        goto label7;

     label6:
        $z9 = 0;

        $z8 = 0;

        $z7 = 0;

     label7:
        if $z7 != 0 goto label8;

        return $z9;

     label8:
        return $z8;
    }

    public int hashCode()
    {
        byte[] $r2;
        org.apache.zookeeper.txn.CreateTxnV0 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;
        java.util.List $r4;

        r0 := @this: org.apache.zookeeper.txn.CreateTxnV0;

        $r1 = r0.<org.apache.zookeeper.txn.CreateTxnV0: java.lang.String path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i7 = 629 + $i0;

        $r2 = r0.<org.apache.zookeeper.txn.CreateTxnV0: byte[] data>;

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r2);

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        $i2 = 37 * i7;

        i8 = $i2 + $i1;

        $r4 = r0.<org.apache.zookeeper.txn.CreateTxnV0: java.util.List acl>;

        $i3 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        $i4 = 37 * i8;

        i9 = $i4 + $i3;

        $z0 = r0.<org.apache.zookeeper.txn.CreateTxnV0: boolean ephemeral>;

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        $i5 = 37 * i9;

        $i6 = $i5 + $z1;

        return $i6;
    }

    public static java.lang.String signature()
    {
        return "LCreateTxnV0(sB[LACL(iLId(ss))]z)";
    }
}
