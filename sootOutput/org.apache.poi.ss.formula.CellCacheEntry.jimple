abstract class org.apache.poi.ss.formula.CellCacheEntry extends java.lang.Object implements org.apache.poi.ss.formula.IEvaluationListener$ICacheEntry
{
    public static final org.apache.poi.ss.formula.CellCacheEntry[] EMPTY_ARRAY;
    private final org.apache.poi.ss.formula.FormulaCellCacheEntrySet _consumingCells;
    private org.apache.poi.ss.formula.eval.ValueEval _value;

    protected void <init>()
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        org.apache.poi.ss.formula.FormulaCellCacheEntrySet $r1;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.ss.formula.FormulaCellCacheEntrySet;

        specialinvoke $r1.<org.apache.poi.ss.formula.FormulaCellCacheEntrySet: void <init>()>();

        r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntrySet _consumingCells> = $r1;

        return;
    }

    protected final void clearValue()
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.eval.ValueEval _value> = null;

        return;
    }

    public final boolean updateValue(org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.CellCacheEntry r1;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Did not expect to update to null");

        throw $r3;

     label1:
        $r2 = r1.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.eval.ValueEval _value>;

        $z0 = staticinvoke <org.apache.poi.ss.formula.CellCacheEntry: boolean areValuesEqual(org.apache.poi.ss.formula.eval.ValueEval,org.apache.poi.ss.formula.eval.ValueEval)>($r2, r0);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r1.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.eval.ValueEval _value> = r0;

        return $z1;
    }

    public final org.apache.poi.ss.formula.eval.ValueEval getValue()
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        org.apache.poi.ss.formula.eval.ValueEval $r1;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        $r1 = r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.eval.ValueEval _value>;

        return $r1;
    }

    private static boolean areValuesEqual(org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        java.lang.IllegalStateException $r5;
        org.apache.poi.ss.formula.eval.BlankEval $r4;
        byte $b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.ss.formula.eval.StringEval $r16, $r18;
        org.apache.poi.ss.formula.eval.ValueEval r0, r2;
        org.apache.poi.ss.formula.eval.NumberEval $r20, $r21;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        org.apache.poi.ss.formula.eval.ErrorEval $r12, $r13;
        int $i0, $i1;
        java.lang.String $r8, $r11, $r17, $r19;
        org.apache.poi.ss.formula.eval.BoolEval $r14, $r15;
        double $d0, $d1;
        java.lang.Class $r1, $r3;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter1: org.apache.poi.ss.formula.eval.ValueEval;

        if r0 != null goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r3 goto label02;

        return 0;

     label02:
        $r4 = <org.apache.poi.ss.formula.eval.BlankEval: org.apache.poi.ss.formula.eval.BlankEval instance>;

        if r0 != $r4 goto label05;

        if r2 != r0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        return $z3;

     label05:
        if $r1 != class "Lorg/apache/poi/ss/formula/eval/NumberEval;" goto label08;

        $r20 = (org.apache.poi.ss.formula.eval.NumberEval) r0;

        $d0 = virtualinvoke $r20.<org.apache.poi.ss.formula.eval.NumberEval: double getNumberValue()>();

        $r21 = (org.apache.poi.ss.formula.eval.NumberEval) r2;

        $d1 = virtualinvoke $r21.<org.apache.poi.ss.formula.eval.NumberEval: double getNumberValue()>();

        $b2 = $d0 cmpl $d1;

        if $b2 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        return $z4;

     label08:
        if $r1 != class "Lorg/apache/poi/ss/formula/eval/StringEval;" goto label09;

        $r16 = (org.apache.poi.ss.formula.eval.StringEval) r0;

        $r17 = virtualinvoke $r16.<org.apache.poi.ss.formula.eval.StringEval: java.lang.String getStringValue()>();

        $r18 = (org.apache.poi.ss.formula.eval.StringEval) r2;

        $r19 = virtualinvoke $r18.<org.apache.poi.ss.formula.eval.StringEval: java.lang.String getStringValue()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        return $z2;

     label09:
        if $r1 != class "Lorg/apache/poi/ss/formula/eval/BoolEval;" goto label12;

        $r14 = (org.apache.poi.ss.formula.eval.BoolEval) r0;

        $z0 = virtualinvoke $r14.<org.apache.poi.ss.formula.eval.BoolEval: boolean getBooleanValue()>();

        $r15 = (org.apache.poi.ss.formula.eval.BoolEval) r2;

        $z1 = virtualinvoke $r15.<org.apache.poi.ss.formula.eval.BoolEval: boolean getBooleanValue()>();

        if $z0 != $z1 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        return $z5;

     label12:
        if $r1 != class "Lorg/apache/poi/ss/formula/eval/ErrorEval;" goto label15;

        $r12 = (org.apache.poi.ss.formula.eval.ErrorEval) r0;

        $i0 = virtualinvoke $r12.<org.apache.poi.ss.formula.eval.ErrorEval: int getErrorCode()>();

        $r13 = (org.apache.poi.ss.formula.eval.ErrorEval) r2;

        $i1 = virtualinvoke $r13.<org.apache.poi.ss.formula.eval.ErrorEval: int getErrorCode()>();

        if $i0 != $i1 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        return $z6;

     label15:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected value class (");

        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;
    }

    public final void addConsumingCell(org.apache.poi.ss.formula.FormulaCellCacheEntry)
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        org.apache.poi.ss.formula.FormulaCellCacheEntry r1;
        org.apache.poi.ss.formula.FormulaCellCacheEntrySet $r2;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r1 := @parameter0: org.apache.poi.ss.formula.FormulaCellCacheEntry;

        $r2 = r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntrySet _consumingCells>;

        virtualinvoke $r2.<org.apache.poi.ss.formula.FormulaCellCacheEntrySet: void add(org.apache.poi.ss.formula.CellCacheEntry)>(r1);

        return;
    }

    public final org.apache.poi.ss.formula.FormulaCellCacheEntry[] getConsumingCells()
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        org.apache.poi.ss.formula.FormulaCellCacheEntrySet $r1;
        org.apache.poi.ss.formula.FormulaCellCacheEntry[] $r2;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        $r1 = r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntrySet _consumingCells>;

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.formula.FormulaCellCacheEntrySet: org.apache.poi.ss.formula.FormulaCellCacheEntry[] toArray()>();

        return $r2;
    }

    public final void clearConsumingCell(org.apache.poi.ss.formula.FormulaCellCacheEntry)
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        java.lang.IllegalStateException $r3;
        org.apache.poi.ss.formula.FormulaCellCacheEntry r1;
        org.apache.poi.ss.formula.FormulaCellCacheEntrySet $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r1 := @parameter0: org.apache.poi.ss.formula.FormulaCellCacheEntry;

        $r2 = r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntrySet _consumingCells>;

        $z0 = virtualinvoke $r2.<org.apache.poi.ss.formula.FormulaCellCacheEntrySet: boolean remove(org.apache.poi.ss.formula.CellCacheEntry)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Specified formula cell is not consumed by this cell");

        throw $r3;

     label1:
        return;
    }

    public final void recurseClearCachedFormulaResults(org.apache.poi.ss.formula.IEvaluationListener)
    {
        org.apache.poi.ss.formula.CellCacheEntry r1;
        org.apache.poi.ss.formula.IEvaluationListener r0;

        r1 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r0 := @parameter0: org.apache.poi.ss.formula.IEvaluationListener;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.poi.ss.formula.CellCacheEntry: void recurseClearCachedFormulaResults()>();

        goto label2;

     label1:
        interfaceinvoke r0.<org.apache.poi.ss.formula.IEvaluationListener: void onClearCachedValue(org.apache.poi.ss.formula.IEvaluationListener$ICacheEntry)>(r1);

        virtualinvoke r1.<org.apache.poi.ss.formula.CellCacheEntry: void recurseClearCachedFormulaResults(org.apache.poi.ss.formula.IEvaluationListener,int)>(r0, 1);

     label2:
        return;
    }

    protected final void recurseClearCachedFormulaResults()
    {
        org.apache.poi.ss.formula.CellCacheEntry r0;
        int $i0, i1;
        org.apache.poi.ss.formula.FormulaCellCacheEntry r2;
        org.apache.poi.ss.formula.FormulaCellCacheEntry[] $r1;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        $r1 = virtualinvoke r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntry[] getConsumingCells()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r2.<org.apache.poi.ss.formula.FormulaCellCacheEntry: void clearFormulaEntry()>();

        virtualinvoke r2.<org.apache.poi.ss.formula.FormulaCellCacheEntry: void recurseClearCachedFormulaResults()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected final void recurseClearCachedFormulaResults(org.apache.poi.ss.formula.IEvaluationListener, int)
    {
        org.apache.poi.ss.formula.IEvaluationListener r2;
        org.apache.poi.ss.formula.FormulaCellCacheEntry[] $r1;
        org.apache.poi.ss.formula.CellCacheEntry r0;
        int $i0, i1, $i2, i3;
        org.apache.poi.ss.formula.FormulaCellCacheEntry r3;

        r0 := @this: org.apache.poi.ss.formula.CellCacheEntry;

        r2 := @parameter0: org.apache.poi.ss.formula.IEvaluationListener;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.FormulaCellCacheEntry[] getConsumingCells()>();

        interfaceinvoke r2.<org.apache.poi.ss.formula.IEvaluationListener: void sortDependentCachedValues(org.apache.poi.ss.formula.IEvaluationListener$ICacheEntry[])>($r1);

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        r3 = $r1[i3];

        interfaceinvoke r2.<org.apache.poi.ss.formula.IEvaluationListener: void onClearDependentCachedValue(org.apache.poi.ss.formula.IEvaluationListener$ICacheEntry,int)>(r3, i1);

        virtualinvoke r3.<org.apache.poi.ss.formula.FormulaCellCacheEntry: void clearFormulaEntry()>();

        $i2 = i1 + 1;

        virtualinvoke r3.<org.apache.poi.ss.formula.FormulaCellCacheEntry: void recurseClearCachedFormulaResults(org.apache.poi.ss.formula.IEvaluationListener,int)>(r2, $i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.CellCacheEntry[] $r0;

        $r0 = newarray (org.apache.poi.ss.formula.CellCacheEntry)[0];

        <org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.CellCacheEntry[] EMPTY_ARRAY> = $r0;

        return;
    }
}
