public class org.apache.batik.svggen.font.SVGFont extends java.lang.Object implements org.apache.batik.util.XMLConstants, org.apache.batik.util.SVGConstants, org.apache.batik.svggen.font.table.ScriptTags, org.apache.batik.svggen.font.table.FeatureTags
{
    static final java.lang.String EOL;
    static final java.lang.String PROPERTY_LINE_SEPARATOR;
    static final java.lang.String PROPERTY_LINE_SEPARATOR_DEFAULT;
    static final int DEFAULT_FIRST;
    static final int DEFAULT_LAST;
    private static java.lang.String QUOT_EOL;
    private static java.lang.String CONFIG_USAGE;
    private static java.lang.String CONFIG_SVG_BEGIN;
    private static java.lang.String CONFIG_SVG_TEST_CARD_START;
    private static java.lang.String CONFIG_SVG_TEST_CARD_END;
    public static final char ARG_KEY_START_CHAR;
    public static final java.lang.String ARG_KEY_CHAR_RANGE_LOW;
    public static final java.lang.String ARG_KEY_CHAR_RANGE_HIGH;
    public static final java.lang.String ARG_KEY_ID;
    public static final java.lang.String ARG_KEY_ASCII;
    public static final java.lang.String ARG_KEY_TESTCARD;
    public static final java.lang.String ARG_KEY_AUTO_RANGE;
    public static final java.lang.String ARG_KEY_OUTPUT_PATH;

    public void <init>()
    {
        org.apache.batik.svggen.font.SVGFont r0;

        r0 := @this: org.apache.batik.svggen.font.SVGFont;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.lang.String encodeEntities(java.lang.String)
    {
        java.lang.StringBuffer $r3;
        int i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r1, $r2;
        char $c0, $c1, $c2, $c3, $c4, $c5;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i6 = 0;

        goto label8;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c0;

        if $i8 != 60 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&lt;");

        goto label7;

     label2:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i9 = (int) $c1;

        if $i9 != 62 goto label3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&gt;");

        goto label7;

     label3:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i10 = (int) $c2;

        if $i10 != 38 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&amp;");

        goto label7;

     label4:
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i11 = (int) $c3;

        if $i11 != 39 goto label5;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&apos;");

        goto label7;

     label5:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i12 = (int) $c4;

        if $i12 != 34 goto label6;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&quot;");

        goto label7;

     label6:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

     label7:
        i6 = i6 + 1;

     label8:
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if i6 < $i7 goto label1;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    protected static java.lang.String getContourAsSVGPathData(org.apache.batik.svggen.font.Glyph, int, int)
    {
        java.lang.StringBuffer $r2, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r42, $r43, $r45, $r47, $r49, $r51, $r52;
        java.lang.String $r7, $r9, $r12, $r14, $r17, $r19, $r22, $r25, $r28, $r30, $r33, $r36, $r39, $r41, $r44, $r46, $r48, $r50, $r53;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.batik.svggen.font.Glyph r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40;
        java.io.PrintStream $r6;
        org.apache.batik.svggen.font.Point $r1, $r3, $r4, $r5;

        r0 := @parameter0: org.apache.batik.svggen.font.Glyph;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point getPoint(int)>(i0);

        $z0 = $r1.<org.apache.batik.svggen.font.Point: boolean endOfContour>;

        if $z0 == 0 goto label01;

        return "";

     label01:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i40 = 0;

        goto label12;

     label02:
        $i2 = i40 % i1;

        $i3 = i0 + $i2;

        $r3 = virtualinvoke r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point getPoint(int)>($i3);

        $i4 = i40 + 1;

        $i5 = $i4 % i1;

        $i6 = i0 + $i5;

        $r4 = virtualinvoke r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point getPoint(int)>($i6);

        $i7 = i40 + 2;

        $i8 = $i7 % i1;

        $i9 = i0 + $i8;

        $r5 = virtualinvoke r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point getPoint(int)>($i9);

        if i40 != 0 goto label03;

        $r49 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("M");

        $i38 = $r3.<org.apache.batik.svggen.font.Point: int x>;

        $r50 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i38);

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i39 = $r3.<org.apache.batik.svggen.font.Point: int y>;

        $r53 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i39);

        virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

     label03:
        $z1 = $r3.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z1 == 0 goto label07;

        $z10 = $r4.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z10 == 0 goto label07;

        $i31 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $i30 = $r3.<org.apache.batik.svggen.font.Point: int x>;

        if $i31 != $i30 goto label04;

        $r47 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V");

        $i37 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $r48 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i37);

        virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        goto label06;

     label04:
        $i33 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $i32 = $r3.<org.apache.batik.svggen.font.Point: int y>;

        if $i33 != $i32 goto label05;

        $r45 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("H");

        $i36 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $r46 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i36);

        virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        goto label06;

     label05:
        $r40 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        $i34 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i34);

        $r42 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i35 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i35);

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

     label06:
        i40 = i40 + 1;

        goto label12;

     label07:
        $z2 = $r3.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z2 == 0 goto label08;

        $z8 = $r4.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z8 != 0 goto label08;

        $z9 = $r5.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z9 == 0 goto label08;

        $r29 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Q");

        $i26 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i26);

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i27 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i27);

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i28 = $r5.<org.apache.batik.svggen.font.Point: int x>;

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i28);

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i29 = $r5.<org.apache.batik.svggen.font.Point: int y>;

        $r39 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i29);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        i40 = i40 + 2;

        goto label12;

     label08:
        $z11 = $r3.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z11 == 0 goto label09;

        $z6 = $r4.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z6 != 0 goto label09;

        $z7 = $r5.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z7 != 0 goto label09;

        $r18 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Q");

        $i18 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i18);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i19 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i19);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i21 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $i20 = $r5.<org.apache.batik.svggen.font.Point: int x>;

        $i22 = staticinvoke <org.apache.batik.svggen.font.SVGFont: int midValue(int,int)>($i21, $i20);

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i22);

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i24 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $i23 = $r5.<org.apache.batik.svggen.font.Point: int y>;

        $i25 = staticinvoke <org.apache.batik.svggen.font.SVGFont: int midValue(int,int)>($i24, $i23);

        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i25);

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        i40 = i40 + 2;

        goto label12;

     label09:
        $z12 = $r3.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z12 != 0 goto label10;

        $z5 = $r4.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z5 != 0 goto label10;

        $r13 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        $i13 = $r3.<org.apache.batik.svggen.font.Point: int x>;

        $i12 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $i14 = staticinvoke <org.apache.batik.svggen.font.SVGFont: int midValue(int,int)>($i13, $i12);

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i16 = $r3.<org.apache.batik.svggen.font.Point: int y>;

        $i15 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $i17 = staticinvoke <org.apache.batik.svggen.font.SVGFont: int midValue(int,int)>($i16, $i15);

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i17);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        i40 = i40 + 1;

        goto label12;

     label10:
        $z3 = $r3.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z3 != 0 goto label11;

        $z4 = $r4.<org.apache.batik.svggen.font.Point: boolean onCurve>;

        if $z4 == 0 goto label11;

        $r8 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        $i10 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $i11 = $r4.<org.apache.batik.svggen.font.Point: int y>;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i11);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        i40 = i40 + 1;

        goto label12;

     label11:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("drawGlyph case not catered for!!");

        goto label13;

     label12:
        if i40 < i1 goto label02;

     label13:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Z");

        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    protected static java.lang.String getSVGFontFaceElement(org.apache.batik.svggen.font.Font)
    {
        org.apache.batik.svggen.font.Font r1;
        org.apache.batik.svggen.font.table.Os2Table $r5;
        org.apache.batik.svggen.font.table.HeadTable $r4;
        org.apache.batik.svggen.font.table.Panose $r6;
        org.apache.batik.svggen.font.table.NameTable $r2;
        org.apache.batik.svggen.font.table.HheaTable $r8, $r9;
        short $s0, $s1, $s2;
        java.lang.StringBuffer $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r52;
        int $i3, $i4, $i5;
        java.lang.String $r3, $r7, $r12, $r18, $r24, $r30, $r36, $r42, $r50, $r51;

        r1 := @parameter0: org.apache.batik.svggen.font.Font;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.NameTable getNameTable()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.NameTable: java.lang.String getRecord(short)>(1);

        $r4 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.HeadTable getHeadTable()>();

        $s0 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.HeadTable: short getUnitsPerEm()>();

        $r5 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.Os2Table getOS2Table()>();

        $r6 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.Os2Table: org.apache.batik.svggen.font.table.Panose getPanose()>();

        $r7 = virtualinvoke $r6.<org.apache.batik.svggen.font.table.Panose: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.HheaTable getHheaTable()>();

        $s1 = virtualinvoke $r8.<org.apache.batik.svggen.font.table.HheaTable: short getAscender()>();

        $r9 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.HheaTable getHheaTable()>();

        $s2 = virtualinvoke $r9.<org.apache.batik.svggen.font.table.HheaTable: short getDescender()>();

        $r10 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("font-face");

        $r12 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("font-family");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r18 = <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("units-per-em");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $i3 = (int) $s0;

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r24 = <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("panose-1");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r30 = <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ascent");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $i4 = (int) $s1;

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r36 = <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("descent");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $i5 = (int) $s2;

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r42 = <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("alphabetic");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" />");

        $r50 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r51 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r51;
    }

    protected static void writeFontAsSVGFragment(java.io.PrintStream, org.apache.batik.svggen.font.Font, java.lang.String, int, int, boolean, boolean) throws java.lang.Exception
    {
        org.apache.batik.svggen.font.table.ScriptList $r20;
        org.apache.batik.svggen.font.table.FeatureList $r23, $r25, $r27;
        org.apache.batik.svggen.font.table.GsubTable r8;
        org.apache.batik.svggen.font.Font r0;
        org.apache.batik.svggen.font.table.KerningPair $r18;
        org.apache.batik.svggen.font.table.KernTable r56;
        org.apache.batik.svggen.font.table.SingleSubst r45, r46, r47, $r51, $r52, $r53;
        java.lang.Exception $r41, $r58;
        org.apache.batik.svggen.font.table.CmapTable $r5, $r39, $r40;
        org.apache.batik.svggen.font.table.KernSubtable $r16;
        short $s0;
        java.lang.StringBuffer $r10, $r12, $r13, $r59;
        org.apache.batik.svggen.font.table.CmapFormat $r6, r44;
        java.lang.String r3, $r4, $r11, $r14, $r19, $r43, $r49, $r54, $r55;
        org.apache.batik.svggen.font.table.Script $r21;
        org.apache.batik.svggen.font.table.Feature $r24, $r26, $r28;
        org.apache.batik.svggen.font.table.PostTable r57;
        boolean z0, z1;
        org.apache.batik.svggen.font.table.Os2Table $r1;
        org.apache.batik.svggen.font.table.Table $r7, $r15, $r17;
        org.apache.batik.svggen.font.table.LangSys $r22;
        org.apache.batik.svggen.font.table.LookupList $r29, $r32, $r35;
        org.apache.batik.svggen.font.table.LookupSubtable $r31, $r34, $r37;
        org.apache.batik.svggen.font.Glyph $r48, $r50;
        int $i1, $i3, i4, i5, i6, i7, $i8, $i9, $i11, $i13, $i14;
        java.io.PrintStream r2, $r42;
        char $c2;
        org.apache.batik.svggen.font.table.Lookup $r30, $r33, $r36;

        r2 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: org.apache.batik.svggen.font.Font;

        r3 := @parameter2: java.lang.String;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        z1 := @parameter5: boolean;

        z0 := @parameter6: boolean;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.Os2Table getOS2Table()>();

        $s0 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.Os2Table: short getAvgCharWidth()>();

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("<");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("font");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>(" ");

        if r3 == null goto label01;

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("id");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("=\"");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>(r3);

        virtualinvoke r2.<java.io.PrintStream: void print(char)>(34);

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>(" ");

     label01:
        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("horiz-adv-x");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("=\"");

        $i8 = (int) $s0;

        virtualinvoke r2.<java.io.PrintStream: void print(int)>($i8);

        virtualinvoke r2.<java.io.PrintStream: void print(char)>(34);

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>(" >");

        $r4 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getSVGFontFaceElement(org.apache.batik.svggen.font.Font)>(r0);

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>($r4);

        if z0 == 0 goto label02;

        $r40 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.CmapTable getCmapTable()>();

        r44 = virtualinvoke $r40.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat getCmapFormat(short,short)>(1, 0);

        goto label03;

     label02:
        $r5 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.CmapTable getCmapTable()>();

        $r6 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat getCmapFormat(short,short)>(3, 1);

        r44 = $r6;

        if $r6 != null goto label03;

        $r39 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.CmapTable getCmapTable()>();

        r44 = virtualinvoke $r39.<org.apache.batik.svggen.font.table.CmapTable: org.apache.batik.svggen.font.table.CmapFormat getCmapFormat(short,short)>(3, 0);

     label03:
        if r44 != null goto label04;

        $r58 = new java.lang.Exception;

        specialinvoke $r58.<java.lang.Exception: void <init>(java.lang.String)>("Cannot find a suitable cmap table");

        throw $r58;

     label04:
        $r7 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.Table getTable(int)>(1196643650);

        r8 = (org.apache.batik.svggen.font.table.GsubTable) $r7;

        r45 = null;

        r46 = null;

        r47 = null;

        if r8 == null goto label05;

        $r20 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.ScriptList getScriptList()>();

        $r21 = virtualinvoke $r20.<org.apache.batik.svggen.font.table.ScriptList: org.apache.batik.svggen.font.table.Script findScript(java.lang.String)>("arab");

        if $r21 == null goto label05;

        $r22 = virtualinvoke $r21.<org.apache.batik.svggen.font.table.Script: org.apache.batik.svggen.font.table.LangSys getDefaultLangSys()>();

        if $r22 == null goto label05;

        $r23 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.FeatureList getFeatureList()>();

        $r24 = virtualinvoke $r23.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature findFeature(org.apache.batik.svggen.font.table.LangSys,java.lang.String)>($r22, "init");

        $r25 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.FeatureList getFeatureList()>();

        $r26 = virtualinvoke $r25.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature findFeature(org.apache.batik.svggen.font.table.LangSys,java.lang.String)>($r22, "medi");

        $r27 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.FeatureList getFeatureList()>();

        $r28 = virtualinvoke $r27.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature findFeature(org.apache.batik.svggen.font.table.LangSys,java.lang.String)>($r22, "fina");

        $r29 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.LookupList getLookupList()>();

        $r30 = virtualinvoke $r29.<org.apache.batik.svggen.font.table.LookupList: org.apache.batik.svggen.font.table.Lookup getLookup(org.apache.batik.svggen.font.table.Feature,int)>($r24, 0);

        $r31 = virtualinvoke $r30.<org.apache.batik.svggen.font.table.Lookup: org.apache.batik.svggen.font.table.LookupSubtable getSubtable(int)>(0);

        r45 = (org.apache.batik.svggen.font.table.SingleSubst) $r31;

        $r32 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.LookupList getLookupList()>();

        $r33 = virtualinvoke $r32.<org.apache.batik.svggen.font.table.LookupList: org.apache.batik.svggen.font.table.Lookup getLookup(org.apache.batik.svggen.font.table.Feature,int)>($r26, 0);

        $r34 = virtualinvoke $r33.<org.apache.batik.svggen.font.table.Lookup: org.apache.batik.svggen.font.table.LookupSubtable getSubtable(int)>(0);

        r46 = (org.apache.batik.svggen.font.table.SingleSubst) $r34;

        $r35 = virtualinvoke r8.<org.apache.batik.svggen.font.table.GsubTable: org.apache.batik.svggen.font.table.LookupList getLookupList()>();

        $r36 = virtualinvoke $r35.<org.apache.batik.svggen.font.table.LookupList: org.apache.batik.svggen.font.table.Lookup getLookup(org.apache.batik.svggen.font.table.Feature,int)>($r28, 0);

        $r37 = virtualinvoke $r36.<org.apache.batik.svggen.font.table.Lookup: org.apache.batik.svggen.font.table.LookupSubtable getSubtable(int)>(0);

        r47 = (org.apache.batik.svggen.font.table.SingleSubst) $r37;

     label05:
        $r48 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Glyph getGlyph(int)>(0);

        $i9 = (int) $s0;

        $r49 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,org.apache.batik.svggen.font.table.SingleSubst,org.apache.batik.svggen.font.table.SingleSubst,org.apache.batik.svggen.font.table.SingleSubst,java.lang.String)>(r0, $r48, 0, $i9, r45, r46, r47, "");

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label06:
        $i11 = (int) -1;

        if i4 != $i11 goto label08;

        if z1 != 0 goto label07;

        i4 = 32;

        goto label08;

     label07:
        i4 = virtualinvoke r44.<org.apache.batik.svggen.font.table.CmapFormat: int getFirst()>();

     label08:
        $i13 = (int) -1;

        if i5 != $i13 goto label10;

        if z1 != 0 goto label09;

        i5 = 128;

        goto label10;

     label09:
        i5 = virtualinvoke r44.<org.apache.batik.svggen.font.table.CmapFormat: int getLast()>();

     label10:
        i6 = i4;

        goto label15;

     label11:
        $i1 = virtualinvoke r44.<org.apache.batik.svggen.font.table.CmapFormat: int mapCharCode(int)>(i6);

        if $i1 <= 0 goto label14;

        $r50 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Glyph getGlyph(int)>($i1);

        $r51 = r45;

        $r52 = r46;

        $r53 = r47;

        if 32 > i6 goto label12;

        if i6 > 127 goto label12;

        $c2 = (char) i6;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        $r54 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String encodeEntities(java.lang.String)>($r14);

        goto label13;

     label12:
        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&#x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i6);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r54 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

     label13:
        $i14 = (int) $s0;

        $r55 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,org.apache.batik.svggen.font.table.SingleSubst,org.apache.batik.svggen.font.table.SingleSubst,org.apache.batik.svggen.font.table.SingleSubst,java.lang.String)>(r0, $r50, $i1, $i14, $r51, $r52, $r53, $r54);

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r55);

     label14:
        i6 = i6 + 1;

     label15:
        if i6 <= i5 goto label11;

        $r15 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.Table getTable(int)>(1801810542);

        r56 = (org.apache.batik.svggen.font.table.KernTable) $r15;

        if r56 == null goto label18;

        $r16 = virtualinvoke r56.<org.apache.batik.svggen.font.table.KernTable: org.apache.batik.svggen.font.table.KernSubtable getSubtable(int)>(0);

        $r17 = virtualinvoke r0.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.Table getTable(int)>(1886352244);

        r57 = (org.apache.batik.svggen.font.table.PostTable) $r17;

        i7 = 0;

        goto label17;

     label16:
        $r18 = virtualinvoke $r16.<org.apache.batik.svggen.font.table.KernSubtable: org.apache.batik.svggen.font.table.KerningPair getKerningPair(int)>(i7);

        $r19 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getKerningPairAsSVG(org.apache.batik.svggen.font.table.KerningPair,org.apache.batik.svggen.font.table.PostTable)>($r18, r57);

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r19);

        i7 = i7 + 1;

     label17:
        $i3 = virtualinvoke $r16.<org.apache.batik.svggen.font.table.KernSubtable: int getKerningPairCount()>();

        if i7 < $i3 goto label16;

     label18:
        goto label20;

     label19:
        $r41 := @caughtexception;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        $r43 = virtualinvoke $r41.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label20:
        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("</");

        virtualinvoke r2.<java.io.PrintStream: void print(java.lang.String)>("font");

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>(">");

        return;

        catch java.lang.Exception from label06 to label18 with label19;
    }

    protected static java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font, org.apache.batik.svggen.font.Glyph, int, int, java.lang.String, java.lang.String)
    {
        org.apache.batik.svggen.font.table.PostTable $r13;
        org.apache.batik.svggen.font.table.HmtxTable $r2;
        org.apache.batik.svggen.font.Font r1;
        boolean $z0;
        java.lang.StringBuffer $r0, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r15, $r19, $r20, $r23, $r24, $r25, $r26;
        org.apache.batik.svggen.font.Glyph r17;
        int i0, $i1, i2, i3, i4, i5, $i6;
        java.lang.String r8, $r14, r16, $r18, $r22;
        org.apache.batik.svggen.font.Point $r21;

        r1 := @parameter0: org.apache.batik.svggen.font.Font;

        r17 := @parameter1: org.apache.batik.svggen.font.Glyph;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        r16 := @parameter4: java.lang.String;

        r8 := @parameter5: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

        i4 = 0;

        $r2 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.HmtxTable getHmtxTable()>();

        $i1 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.HmtxTable: int getAdvanceWidth(int)>(i0);

        if i0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("missing-glyph");

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("glyph");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unicode");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("glyph-name");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r13 = virtualinvoke r1.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.PostTable getPostTable()>();

        $r14 = virtualinvoke $r13.<org.apache.batik.svggen.font.table.PostTable: java.lang.String getGlyphName(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label2:
        if $i1 == i2 goto label3;

        $r23 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("horiz-adv-x");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label3:
        if r16 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

     label4:
        if r17 == null goto label8;

        $r19 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("d");

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        i5 = 0;

        goto label7;

     label5:
        i4 = i4 + 1;

        $r21 = virtualinvoke r17.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point getPoint(int)>(i5);

        $z0 = $r21.<org.apache.batik.svggen.font.Point: boolean endOfContour>;

        if $z0 == 0 goto label6;

        $r22 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getContourAsSVGPathData(org.apache.batik.svggen.font.Glyph,int,int)>(r17, i3, i4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        i3 = i5 + 1;

        i4 = 0;

     label6:
        i5 = i5 + 1;

     label7:
        $i6 = virtualinvoke r17.<org.apache.batik.svggen.font.Glyph: int getPointCount()>();

        if i5 < $i6 goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" />");

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void chopUpStringBuffer(java.lang.StringBuffer)>($r0);

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;
    }

    protected static java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font, org.apache.batik.svggen.font.Glyph, int, int, org.apache.batik.svggen.font.table.SingleSubst, org.apache.batik.svggen.font.table.SingleSubst, org.apache.batik.svggen.font.table.SingleSubst, java.lang.String)
    {
        java.lang.StringBuffer $r0;
        org.apache.batik.svggen.font.Font r4;
        org.apache.batik.svggen.font.Glyph r5, $r10, $r13, $r16;
        int i0, i1, i2, i3, i4;
        java.lang.String r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18;
        boolean z0;
        org.apache.batik.svggen.font.table.SingleSubst r1, r2, r3;

        r4 := @parameter0: org.apache.batik.svggen.font.Font;

        r5 := @parameter1: org.apache.batik.svggen.font.Glyph;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: org.apache.batik.svggen.font.table.SingleSubst;

        r2 := @parameter5: org.apache.batik.svggen.font.table.SingleSubst;

        r3 := @parameter6: org.apache.batik.svggen.font.table.SingleSubst;

        r6 := @parameter7: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        z0 = 0;

        i2 = i0;

        i3 = i0;

        i4 = i0;

        if r1 == null goto label1;

        i2 = virtualinvoke r1.<org.apache.batik.svggen.font.table.SingleSubst: int substitute(int)>(i0);

     label1:
        if r2 == null goto label2;

        i3 = virtualinvoke r2.<org.apache.batik.svggen.font.table.SingleSubst: int substitute(int)>(i0);

     label2:
        if r3 == null goto label3;

        i4 = virtualinvoke r3.<org.apache.batik.svggen.font.table.SingleSubst: int substitute(int)>(i0);

     label3:
        if i2 == i0 goto label4;

        $r16 = virtualinvoke r4.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Glyph getGlyph(int)>(i2);

        $r17 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,java.lang.String,java.lang.String)>(r4, $r16, i2, i1, " arabic-form=\"initial\"", r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r18 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        z0 = 1;

     label4:
        if i3 == i0 goto label5;

        $r13 = virtualinvoke r4.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Glyph getGlyph(int)>(i3);

        $r14 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,java.lang.String,java.lang.String)>(r4, $r13, i3, i1, " arabic-form=\"medial\"", r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        z0 = 1;

     label5:
        if i4 == i0 goto label6;

        $r10 = virtualinvoke r4.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Glyph getGlyph(int)>(i4);

        $r11 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,java.lang.String,java.lang.String)>(r4, $r10, i4, i1, " arabic-form=\"terminal\"", r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        z0 = 1;

     label6:
        if z0 == 0 goto label7;

        $r9 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,java.lang.String,java.lang.String)>(r4, r5, i0, i1, " arabic-form=\"isolated\"", r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label8;

     label7:
        $r7 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String getGlyphAsSVG(org.apache.batik.svggen.font.Font,org.apache.batik.svggen.font.Glyph,int,int,java.lang.String,java.lang.String)>(r4, r5, i0, i1, null, r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label8:
        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    protected static java.lang.String getKerningPairAsSVG(org.apache.batik.svggen.font.table.KerningPair, org.apache.batik.svggen.font.table.PostTable)
    {
        org.apache.batik.svggen.font.table.PostTable r4;
        short $s2;
        java.lang.StringBuffer $r1, $r2, $r3, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16;
        int $i0, $i1, $i3, $i4;
        org.apache.batik.svggen.font.table.KerningPair r5;
        java.lang.String $r6, $r10, $r15;

        r5 := @parameter0: org.apache.batik.svggen.font.table.KerningPair;

        r4 := @parameter1: org.apache.batik.svggen.font.table.PostTable;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hkern");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("g1");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $i0 = virtualinvoke r5.<org.apache.batik.svggen.font.table.KerningPair: int getLeft()>();

        $r6 = virtualinvoke r4.<org.apache.batik.svggen.font.table.PostTable: java.lang.String getGlyphName(int)>($i0);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("g2");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $i1 = virtualinvoke r5.<org.apache.batik.svggen.font.table.KerningPair: int getRight()>();

        $r10 = virtualinvoke r4.<org.apache.batik.svggen.font.table.PostTable: java.lang.String getGlyphName(int)>($i1);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("k");

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $s2 = virtualinvoke r5.<org.apache.batik.svggen.font.table.KerningPair: short getValue()>();

        $i4 = (int) $s2;

        $i3 = neg $i4;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r14 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" />");

        $r15 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    protected static void writeSvgBegin(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.io.PrintStream;

        $r2 = <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_BEGIN>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "-//W3C//DTD SVG 1.0//EN";

        $r1[1] = "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd";

        $r3 = staticinvoke <org.apache.batik.svggen.font.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>($r2, $r1);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }

    protected static void writeSvgDefsBegin(java.io.PrintStream)
    {
        java.io.PrintStream r0;

        r0 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("<defs >");

        return;
    }

    protected static void writeSvgDefsEnd(java.io.PrintStream)
    {
        java.io.PrintStream r0;

        r0 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("</defs>");

        return;
    }

    protected static void writeSvgEnd(java.io.PrintStream)
    {
        java.io.PrintStream r0;

        r0 := @parameter0: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>("</svg>");

        return;
    }

    protected static void writeSvgTestCard(java.io.PrintStream, java.lang.String)
    {
        java.io.PrintStream r0;
        java.lang.String $r1, $r2, r3, $r4, $r5;

        r0 := @parameter0: java.io.PrintStream;

        r3 := @parameter1: java.lang.String;

        $r1 = <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_TEST_CARD_START>;

        $r2 = staticinvoke <org.apache.batik.svggen.font.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>($r1, null);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>(r3);

        $r4 = <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_TEST_CARD_END>;

        $r5 = staticinvoke <org.apache.batik.svggen.font.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>($r4, null);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public static void main(java.lang.String[])
    {
        org.apache.batik.svggen.font.table.NameTable $r10;
        java.lang.String[] r0;
        org.apache.batik.svggen.font.Font $r9;
        int $i0, $i1, $i3, $i5;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r16;
        boolean $z0, $z1;
        java.io.PrintStream $r15, r18, $r19, $r21;
        java.io.FileOutputStream r17, $r20;
        java.lang.Exception $r14;

        r0 := @parameter0: java.lang.String[];

     label01:
        $r1 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, null);

        $r2 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-l");

        $r3 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-h");

        $r4 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-id");

        $r5 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-ascii");

        $r6 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-testcard");

        $r7 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-o");

        $r8 = staticinvoke <org.apache.batik.svggen.font.SVGFont: java.lang.String parseArgs(java.lang.String[],java.lang.String)>(r0, "-autorange");

        r17 = null;

        if $r7 == null goto label02;

        $r20 = new java.io.FileOutputStream;

        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>($r7);

        r17 = $r20;

        $r21 = new java.io.PrintStream;

        specialinvoke $r21.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r20);

        r18 = $r21;

        goto label03;

     label02:
        r18 = <java.lang.System: java.io.PrintStream out>;

     label03:
        if $r1 == null goto label14;

        $r9 = staticinvoke <org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.Font create(java.lang.String)>($r1);

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeSvgBegin(java.io.PrintStream)>(r18);

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeSvgDefsBegin(java.io.PrintStream)>(r18);

        $r19 = r18;

        if $r2 == null goto label04;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        goto label05;

     label04:
        $i3 = (int) -1;

        $i0 = $i3;

     label05:
        if $r3 == null goto label06;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        goto label07;

     label06:
        $i5 = (int) -1;

        $i1 = $i5;

     label07:
        if $r8 == null goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        if $r5 == null goto label10;

        $z1 = 1;

        goto label11;

     label10:
        $z1 = 0;

     label11:
        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeFontAsSVGFragment(java.io.PrintStream,org.apache.batik.svggen.font.Font,java.lang.String,int,int,boolean,boolean)>($r19, $r9, $r4, $i0, $i1, $z0, $z1);

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeSvgDefsEnd(java.io.PrintStream)>(r18);

        if $r6 == null goto label12;

        $r10 = virtualinvoke $r9.<org.apache.batik.svggen.font.Font: org.apache.batik.svggen.font.table.NameTable getNameTable()>();

        $r11 = virtualinvoke $r10.<org.apache.batik.svggen.font.table.NameTable: java.lang.String getRecord(short)>(1);

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeSvgTestCard(java.io.PrintStream,java.lang.String)>(r18, $r11);

     label12:
        staticinvoke <org.apache.batik.svggen.font.SVGFont: void writeSvgEnd(java.io.PrintStream)>(r18);

        if r17 == null goto label13;

        virtualinvoke r17.<java.io.FileOutputStream: void close()>();

     label13:
        goto label15;

     label14:
        staticinvoke <org.apache.batik.svggen.font.SVGFont: void usage()>();

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Throwable: void printStackTrace()>();

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = virtualinvoke $r14.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r16);

        staticinvoke <org.apache.batik.svggen.font.SVGFont: void usage()>();

     label17:
        return;

        catch java.lang.Exception from label01 to label15 with label16;
    }

    private static void chopUpStringBuffer(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, i2, $i3, $i4;
        char $c1;

        r0 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if $i0 >= 256 goto label1;

        return;

     label1:
        i2 = 240;

        goto label4;

     label2:
        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i2);

        $i4 = (int) $c1;

        if $i4 != 32 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: void setCharAt(int,char)>(i2, 10);

        i2 = i2 + 240;

     label3:
        i2 = i2 + 1;

     label4:
        $i3 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i2 < $i3 goto label2;

        return;
    }

    private static int midValue(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - i0;

        $i3 = $i2 / 2;

        $i4 = i0 + $i3;

        return $i4;
    }

    private static java.lang.String parseArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i4, i6, $i7, $i8, $i9;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;
        char $c3, $c5;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        i6 = 0;

        goto label5;

     label1:
        if r1 != null goto label2;

        $r6 = r0[i6];

        $c5 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c5;

        if $i8 == 45 goto label4;

        $r7 = r0[i6];

        return $r7;

     label2:
        $r2 = r0[i6];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        if i6 >= $i1 goto label3;

        $i2 = i6 + 1;

        $r4 = r0[$i2];

        $c3 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        $i9 = (int) $c3;

        if $i9 == 45 goto label3;

        $i4 = i6 + 1;

        $r5 = r0[$i4];

        return $r5;

     label3:
        $r3 = r0[i6];

        return $r3;

     label4:
        i6 = i6 + 1;

     label5:
        $i7 = lengthof r0;

        if i6 < $i7 goto label1;

        return null;
    }

    private static void usage()
    {
        java.io.PrintStream $r1;
        java.lang.String $r0, $r2;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_USAGE>;

        $r2 = staticinvoke <org.apache.batik.svggen.font.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>($r0, null);

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuffer $r0, $r1, $r3;
        java.lang.SecurityException $r5;
        java.lang.String $r2, $r4, r6;

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_OUTPUT_PATH> = "-o";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_AUTO_RANGE> = "-autorange";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_TESTCARD> = "-testcard";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_ASCII> = "-ascii";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_ID> = "-id";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_CHAR_RANGE_HIGH> = "-h";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String ARG_KEY_CHAR_RANGE_LOW> = "-l";

        <org.apache.batik.svggen.font.SVGFont: char ARG_KEY_START_CHAR> = 45;

        <org.apache.batik.svggen.font.SVGFont: int DEFAULT_LAST> = 128;

        <org.apache.batik.svggen.font.SVGFont: int DEFAULT_FIRST> = 32;

        <org.apache.batik.svggen.font.SVGFont: java.lang.String PROPERTY_LINE_SEPARATOR_DEFAULT> = "\n";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String PROPERTY_LINE_SEPARATOR> = "line.separator";

     label1:
        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = "\n";

     label4:
        <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL> = r6;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r2 = <org.apache.batik.svggen.font.SVGFont: java.lang.String EOL>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        <org.apache.batik.svggen.font.SVGFont: java.lang.String QUOT_EOL> = $r4;

        <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_USAGE> = "SVGFont.config.usage";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_BEGIN> = "SVGFont.config.svg.begin";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_TEST_CARD_START> = "SVGFont.config.svg.test.card.start";

        <org.apache.batik.svggen.font.SVGFont: java.lang.String CONFIG_SVG_TEST_CARD_END> = "SVGFont.config.svg.test.card.end";

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }
}
