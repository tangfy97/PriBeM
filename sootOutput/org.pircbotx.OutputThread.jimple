public class org.pircbotx.OutputThread extends java.lang.Thread
{
    protected org.pircbotx.PircBotX bot;
    protected java.util.concurrent.LinkedBlockingQueue queue;
    protected final java.io.BufferedWriter bwriter;

    protected void <init>(org.pircbotx.PircBotX, java.io.BufferedWriter)
    {
        java.io.BufferedWriter r3;
        org.pircbotx.PircBotX r2;
        java.util.concurrent.LinkedBlockingQueue $r1;
        org.pircbotx.OutputThread r0;

        r0 := @this: org.pircbotx.OutputThread;

        r2 := @parameter0: org.pircbotx.PircBotX;

        r3 := @parameter1: java.io.BufferedWriter;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot> = null;

        $r1 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<org.pircbotx.OutputThread: java.util.concurrent.LinkedBlockingQueue queue> = $r1;

        r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot> = r2;

        r0.<org.pircbotx.OutputThread: java.io.BufferedWriter bwriter> = r3;

        return;
    }

    public void sendRawLineNow(java.lang.String)
    {
        java.lang.Throwable $r15;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r7, $r13, r18;
        org.pircbotx.PircBotX $r1, $r10, $r14;
        java.io.BufferedWriter $r2, $r4, $r8;
        java.lang.RuntimeException $r17;
        java.lang.Exception $r16;
        org.pircbotx.OutputThread r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r12;

        r0 := @this: org.pircbotx.OutputThread;

        r18 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r18.<java.lang.String: int length()>();

        $r1 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $i1 = virtualinvoke $r1.<org.pircbotx.PircBotX: int getMaxLineLength()>();

        $i2 = $i1 - 2;

        if $i0 <= $i2 goto label01;

        $r14 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $i3 = virtualinvoke $r14.<org.pircbotx.PircBotX: int getMaxLineLength()>();

        $i4 = $i3 - 2;

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label01:
        $r2 = r0.<org.pircbotx.OutputThread: java.io.BufferedWriter bwriter>;

        entermonitor $r2;

     label02:
        virtualinvoke r0.<org.pircbotx.OutputThread: void failIfNotConnected()>();

     label03:
        $r4 = r0.<org.pircbotx.OutputThread: java.io.BufferedWriter bwriter>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>($r7);

        $r8 = r0.<org.pircbotx.OutputThread: java.io.BufferedWriter bwriter>;

        virtualinvoke $r8.<java.io.BufferedWriter: void flush()>();

        $r10 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.pircbotx.PircBotX: void log(java.lang.String)>($r13);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Exception encountered when writing to socket", $r16);

        throw $r17;

     label06:
        exitmonitor $r2;

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        exitmonitor $r2;

     label09:
        throw $r15;

     label10:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void send(java.lang.String)
    {
        java.lang.InterruptedException $r3;
        java.lang.String r1;
        java.lang.RuntimeException $r4;
        java.util.concurrent.LinkedBlockingQueue $r2;
        org.pircbotx.OutputThread r0;

        r0 := @this: org.pircbotx.OutputThread;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.pircbotx.OutputThread: void failIfNotConnected()>();

     label1:
        $r2 = r0.<org.pircbotx.OutputThread: java.util.concurrent.LinkedBlockingQueue queue>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t add message to queue", $r3);

        throw $r4;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public int getQueueSize()
    {
        int $i0;
        java.util.concurrent.LinkedBlockingQueue $r1;
        org.pircbotx.OutputThread r0;

        r0 := @this: org.pircbotx.OutputThread;

        $r1 = r0.<org.pircbotx.OutputThread: java.util.concurrent.LinkedBlockingQueue queue>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: int size()>();

        return $i0;
    }

    protected void failIfNotConnected() throws java.lang.RuntimeException
    {
        java.lang.RuntimeException $r2;
        org.pircbotx.PircBotX $r1;
        org.pircbotx.OutputThread r0;
        boolean $z0;

        r0 := @this: org.pircbotx.OutputThread;

        $r1 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $z0 = virtualinvoke $r1.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Trying to send message when no longer connected");

        throw $r2;

     label1:
        return;
    }

    public void run()
    {
        long $l0;
        java.util.concurrent.LinkedBlockingQueue $r1;
        org.pircbotx.OutputThread r0;
        java.lang.InterruptedException $r5;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.pircbotx.PircBotX $r4, $r6;
        boolean $z0;

        r0 := @this: org.pircbotx.OutputThread;

     label1:
        $r1 = r0.<org.pircbotx.OutputThread: java.util.concurrent.LinkedBlockingQueue queue>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<org.pircbotx.OutputThread: void failIfNotConnected()>();

        if $r3 == null goto label2;

        $r4 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $z0 = virtualinvoke $r4.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r3);

     label2:
        $r6 = r0.<org.pircbotx.OutputThread: org.pircbotx.PircBotX bot>;

        $l0 = virtualinvoke $r6.<org.pircbotx.PircBotX: long getMessageDelay()>();

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        goto label1;

     label3:
        $r5 := @caughtexception;

        return;

        catch java.lang.InterruptedException from label1 to label3 with label3;
    }
}
