public class org.apache.xpath.objects.XRTreeFrag extends org.apache.xpath.objects.XObject implements java.lang.Cloneable
{
    org.apache.xml.dtm.DTM m_dtm;
    int m_dtmRoot;
    org.apache.xpath.XPathContext m_xctxt;
    boolean m_allowRelease;
    private org.apache.xml.utils.XMLString m_xmlStr;

    public void <init>(int, org.apache.xpath.XPathContext, org.apache.xpath.ExpressionNode)
    {
        org.apache.xpath.ExpressionNode r1;
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xpath.XPathContext r2;
        int i0;
        org.apache.xml.dtm.DTM $r3;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.xpath.XPathContext;

        r1 := @parameter2: org.apache.xpath.ExpressionNode;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(null);

        r0.<org.apache.xpath.objects.XRTreeFrag: boolean m_allowRelease> = 0;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr> = null;

        virtualinvoke r0.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot> = i0;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt> = r2;

        $r3 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm> = $r3;

        return;
    }

    public void <init>(int, org.apache.xpath.XPathContext)
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        org.apache.xml.dtm.DTM $r2;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xpath.XPathContext;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(null);

        r0.<org.apache.xpath.objects.XRTreeFrag: boolean m_allowRelease> = 0;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr> = null;

        r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot> = i0;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt> = r1;

        $r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm> = $r2;

        return;
    }

    public java.lang.Object object()
    {
        org.apache.xml.dtm.ref.DTMNodeIterator $r3;
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xpath.NodeSetDTM $r4;
        org.apache.xpath.XPathContext $r1, $r5;
        org.apache.xml.dtm.DTMManager $r6;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        if $r1 == null goto label1;

        $r3 = new org.apache.xml.dtm.ref.DTMNodeIterator;

        $r4 = new org.apache.xpath.NodeSetDTM;

        $i0 = r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot>;

        $r5 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r6 = virtualinvoke $r5.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r4.<org.apache.xpath.NodeSetDTM: void <init>(int,org.apache.xml.dtm.DTMManager)>($i0, $r6);

        specialinvoke $r3.<org.apache.xml.dtm.ref.DTMNodeIterator: void <init>(org.apache.xml.dtm.DTMIterator)>($r4);

        return $r3;

     label1:
        $r2 = specialinvoke r0.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        return $r2;
    }

    public void <init>(org.apache.xpath.Expression)
    {
        org.apache.xpath.Expression r1;
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        r1 := @parameter0: org.apache.xpath.Expression;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(r1);

        r0.<org.apache.xpath.objects.XRTreeFrag: boolean m_allowRelease> = 0;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr> = null;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.lang.Throwable $r1;
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

     label1:
        virtualinvoke r0.<org.apache.xpath.objects.XRTreeFrag: void destruct()>();

        goto label6;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        goto label7;

     label4:
        throw $r1;

     label5:
        return;

     label6:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label2;

     label7:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    public void allowDetachToRelease(boolean)
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        boolean z0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        z0 := @parameter0: boolean;

        r0.<org.apache.xpath.objects.XRTreeFrag: boolean m_allowRelease> = z0;

        return;
    }

    public void detach()
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xpath.XPathContext $r2, $r3, $r7;
        org.apache.xml.dtm.DTM $r1, $r4, $r5, $r6;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $z0 = r0.<org.apache.xpath.objects.XRTreeFrag: boolean m_allowRelease>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r1 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        $i0 = virtualinvoke $r2.<org.apache.xpath.XPathContext: int getDTMIdentity(org.apache.xml.dtm.DTM)>($r1);

        $r3 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r5 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        if $r4 != $r5 goto label1;

        $r7 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r6 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        virtualinvoke $r7.<org.apache.xpath.XPathContext: boolean release(org.apache.xml.dtm.DTM,boolean)>($r6, 1);

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm> = null;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt> = null;

     label1:
        r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj> = null;

     label2:
        return;
    }

    public void destruct()
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xpath.XPathContext $r3, $r4, $r8;
        org.apache.xml.dtm.DTM $r1, $r2, $r5, $r6, $r7;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        if null == $r1 goto label1;

        $r3 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r2 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        $i0 = virtualinvoke $r3.<org.apache.xpath.XPathContext: int getDTMIdentity(org.apache.xml.dtm.DTM)>($r2);

        $r4 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r6 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        if $r5 != $r6 goto label1;

        $r8 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r7 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        virtualinvoke $r8.<org.apache.xpath.XPathContext: boolean release(org.apache.xml.dtm.DTM,boolean)>($r7, 1);

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm> = null;

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt> = null;

     label1:
        r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj> = null;

        return;
    }

    public int getType()
    {
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        return 5;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        return "#RTREEFRAG";
    }

    public double num() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xml.utils.XMLString $r1;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString xstr()>();

        $d0 = interfaceinvoke $r1.<org.apache.xml.utils.XMLString: double toDouble()>();

        return $d0;
    }

    public boolean bool()
    {
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        return 1;
    }

    public org.apache.xml.utils.XMLString xstr()
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        int $i0;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xml.utils.XMLString $r1, $r2, $r4;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr>;

        if null != $r1 goto label1;

        $r3 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        $i0 = r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot>;

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr> = $r4;

     label1:
        $r2 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString m_xmlStr>;

        return $r2;
    }

    public void appendToFsb(org.apache.xml.utils.FastStringBuffer)
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.apache.xml.utils.FastStringBuffer r3;
        org.apache.xml.utils.XMLString $r1;
        org.apache.xpath.objects.XString r2;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        r3 := @parameter0: org.apache.xml.utils.FastStringBuffer;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString xstr()>();

        r2 = (org.apache.xpath.objects.XString) $r1;

        virtualinvoke r2.<org.apache.xpath.objects.XObject: void appendToFsb(org.apache.xml.utils.FastStringBuffer)>(r3);

        return;
    }

    public java.lang.String str()
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        int $i0;
        org.apache.xml.dtm.DTM $r1;
        java.lang.String $r3, $r4;
        org.apache.xml.utils.XMLString $r2;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTM m_dtm>;

        $i0 = r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        if null != $r3 goto label1;

        $r4 = "";

        goto label2;

     label1:
        $r4 = $r3;

     label2:
        return $r4;
    }

    public int rtf()
    {
        int $i0;
        org.apache.xpath.objects.XRTreeFrag r0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $i0 = r0.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot>;

        return $i0;
    }

    public org.apache.xml.dtm.DTMIterator asNodeIterator()
    {
        org.apache.xpath.axes.RTFIterator $r0;
        org.apache.xpath.objects.XRTreeFrag r1;
        org.apache.xpath.XPathContext $r2;
        org.apache.xml.dtm.DTMManager $r3;
        int $i0;

        r1 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r0 = new org.apache.xpath.axes.RTFIterator;

        $i0 = r1.<org.apache.xpath.objects.XRTreeFrag: int m_dtmRoot>;

        $r2 = r1.<org.apache.xpath.objects.XRTreeFrag: org.apache.xpath.XPathContext m_xctxt>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r0.<org.apache.xpath.axes.RTFIterator: void <init>(int,org.apache.xml.dtm.DTMManager)>($i0, $r3);

        return $r0;
    }

    public org.w3c.dom.NodeList convertToNodeset()
    {
        org.apache.xpath.objects.XRTreeFrag r0;
        org.w3c.dom.NodeList $r5;
        org.apache.xml.dtm.ref.DTMNodeList $r2;
        java.lang.Object $r1, $r4;
        org.apache.xml.dtm.DTMIterator $r3;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XRTreeFrag;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $z0 = $r1 instanceof org.w3c.dom.NodeList;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $r5 = (org.w3c.dom.NodeList) $r4;

        return $r5;

     label1:
        $r2 = new org.apache.xml.dtm.ref.DTMNodeList;

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTMIterator asNodeIterator()>();

        specialinvoke $r2.<org.apache.xml.dtm.ref.DTMNodeList: void <init>(org.apache.xml.dtm.DTMIterator)>($r3);

        return $r2;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        javax.xml.transform.TransformerException $r8;
        org.apache.xml.utils.XMLString $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.xpath.objects.XRTreeFrag r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        double $d0, $d1;
        org.apache.xml.utils.WrappedRuntimeException $r9;
        org.apache.xpath.objects.XObject r0;

        r1 := @this: org.apache.xpath.objects.XRTreeFrag;

        r0 := @parameter0: org.apache.xpath.objects.XObject;

     label01:
        $i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != $i0 goto label02;

        $z6 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r1);

        return $z6;

     label02:
        $i1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 1 != $i1 goto label05;

        $z4 = virtualinvoke r1.<org.apache.xpath.objects.XRTreeFrag: boolean bool()>();

        $z5 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean bool()>();

        if $z4 != $z5 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        return $z7;

     label05:
        $i2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 2 != $i2 goto label08;

        $d0 = virtualinvoke r1.<org.apache.xpath.objects.XRTreeFrag: double num()>();

        $d1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $b6 = $d0 cmpl $d1;

        if $b6 != 0 goto label06;

        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        return $z8;

     label08:
        $i3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != $i3 goto label09;

        $r6 = virtualinvoke r1.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString xstr()>();

        $r7 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $z3 = interfaceinvoke $r6.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>($r7);

        return $z3;

     label09:
        $i4 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 3 != $i4 goto label10;

        $r4 = virtualinvoke r1.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString xstr()>();

        $r5 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $z2 = interfaceinvoke $r4.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>($r5);

        return $z2;

     label10:
        $i5 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int getType()>();

        if 5 != $i5 goto label11;

        $r2 = virtualinvoke r1.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.utils.XMLString xstr()>();

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        $z1 = interfaceinvoke $r2.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>($r3);

        return $z1;

     label11:
        $z0 = specialinvoke r1.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r0);

        return $z0;

     label12:
        $r8 := @caughtexception;

        $r9 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r9.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

        catch javax.xml.transform.TransformerException from label01 to label12 with label12;
    }
}
