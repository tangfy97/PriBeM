public class org.apache.cxf.resource.URIResolver extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private java.util.Map cache;
    private java.io.File file;
    private java.net.URI uri;
    private java.net.URL url;
    private java.io.InputStream is;
    private java.lang.Class calling;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.cxf.resource.URIResolver r0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.resource.URIResolver: java.util.Map cache> = $r1;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.cxf.resource.URIResolver r0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void <init>(java.lang.String,java.lang.String)>("", r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r1, r2;
        org.apache.cxf.resource.URIResolver r0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void <init>(java.lang.String,java.lang.String,java.lang.Class)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.Class) throws java.io.IOException
    {
        org.apache.cxf.resource.URIResolver r0;
        java.util.HashMap $r1;
        java.lang.Class r2, $r5;
        java.lang.String r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.resource.URIResolver: java.util.Map cache> = $r1;

        if r2 == null goto label1;

        $r5 = r2;

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        r0.<org.apache.cxf.resource.URIResolver: java.lang.Class calling> = $r5;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>(r3);

        goto label8;

     label3:
        if r4 == null goto label5;

        $z4 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z4 != 0 goto label4;

        $z5 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("zip:");

        if $z5 != 0 goto label4;

        $z6 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("wsjar:");

        if $z6 == 0 goto label5;

     label4:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryArchive(java.lang.String,java.lang.String)>(r4, r3);

        goto label8;

     label5:
        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z1 != 0 goto label6;

        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("zip:");

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("wsjar:");

        if $z3 == 0 goto label7;

     label6:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryArchive(java.lang.String)>(r3);

        goto label8;

     label7:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryFileSystem(java.lang.String,java.lang.String)>(r4, r3);

     label8:
        return;
    }

    public void unresolve()
    {
        org.apache.cxf.resource.URIResolver r0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r0.<org.apache.cxf.resource.URIResolver: java.io.File file> = null;

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = null;

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = null;

        return;
    }

    public void resolve(java.lang.String, java.lang.String, java.lang.Class) throws java.io.IOException
    {
        org.apache.cxf.resource.URIResolver r0;
        java.lang.Class r1, $r4;
        java.lang.String r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Class;

        if r1 == null goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        r0.<org.apache.cxf.resource.URIResolver: java.lang.Class calling> = $r4;

        r0.<org.apache.cxf.resource.URIResolver: java.io.File file> = null;

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = null;

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = null;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>(r2);

        goto label8;

     label3:
        if r3 == null goto label5;

        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z4 != 0 goto label4;

        $z5 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("zip:");

        if $z5 != 0 goto label4;

        $z6 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("wsjar:");

        if $z6 == 0 goto label5;

     label4:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryArchive(java.lang.String,java.lang.String)>(r3, r2);

        goto label8;

     label5:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z1 != 0 goto label6;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("zip:");

        if $z2 != 0 goto label6;

        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("wsjar:");

        if $z3 == 0 goto label7;

     label6:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryArchive(java.lang.String)>(r2);

        goto label8;

     label7:
        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryFileSystem(java.lang.String,java.lang.String)>(r3, r2);

     label8:
        return;
    }

    private void tryFileSystem(java.lang.String, java.lang.String) throws java.io.IOException, java.net.MalformedURLException
    {
        java.net.HttpURLConnection r93;
        byte[] $r56;
        java.lang.RuntimePermission $r5, $r91;
        java.lang.StringBuilder $r26, $r27, $r52, $r53, $r54, $r59, $r60, $r72, $r73, $r109, $r110, $r115, $r119;
        java.lang.Throwable $r82;
        org.apache.cxf.resource.URIResolver r8;
        java.lang.ClassCastException $r85;
        java.net.URLConnection $r47;
        java.lang.String r0, $r1, $r4, r7, $r21, $r22, $r28, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r44, $r48, $r49, $r50, $r55, $r57, $r61, $r63, $r65, $r66, $r67, $r74, $r79, $r83, $r84, r89, $r97, $r98, $r99, $r100;
        java.lang.RuntimeException $r120;
        java.io.File $r6, $r10, $r11, $r12, $r15, $r16, $r80, r90, r95, $r104, $r105, $r107, $r111, $r112, $r114, $r116, $r117;
        java.net.URL $r18, $r41, $r45, $r46, $r78, $r86;
        java.net.URISyntaxException $r81, $r88;
        java.net.URI $r13, $r17, $r19, $r20, $r24, $r31, $r77, r92, r96, $r106, $r108, $r113;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.io.FileNotFoundException $r69;
        int $i1;
        java.io.FileInputStream $r118;
        java.lang.IllegalArgumentException $r75;
        java.io.InputStream $r9, $r42, $r87, $r94, $r101, $r102, $r103;

        r8 := @this: org.apache.cxf.resource.URIResolver;

        r7 := @parameter0: java.lang.String;

        r89 := @parameter1: java.lang.String;

     label01:
        r0 = r89;

        $r1 = virtualinvoke r89.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%20", " ");

        r89 = $r1;

        $r104 = new java.io.File;

        specialinvoke $r104.<java.io.File: void <init>(java.lang.String)>($r1);

        $r105 = new java.io.File;

        $r4 = virtualinvoke $r104.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r105.<java.io.File: void <init>(java.lang.String)>($r4);

        r90 = $r105;

        $r5 = <org.apache.cxf.common.CXFPermissions: java.lang.RuntimePermission RESOLVE_URI>;

        $z0 = staticinvoke <org.apache.cxf.resource.SecurityActions: boolean fileExists(java.io.File,java.security.Permission)>($r105, $r5);

        if $z0 != 0 goto label05;

     label02:
        $r106 = new java.net.URI;

        $r65 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r0, "ASCII");

        specialinvoke $r106.<java.net.URI: void <init>(java.lang.String)>($r65);

        $r66 = "file";

        $r67 = virtualinvoke $r106.<java.net.URI: java.lang.String getScheme()>();

        $z14 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>($r67);

        if $z14 == 0 goto label03;

        $z15 = virtualinvoke $r106.<java.net.URI: boolean isAbsolute()>();

        if $z15 == 0 goto label03;

        $r107 = new java.io.File;

        specialinvoke $r107.<java.io.File: void <init>(java.net.URI)>($r106);

        $z16 = virtualinvoke $r107.<java.io.File: boolean exists()>();

        if $z16 == 0 goto label03;

        r90 = $r107;

     label03:
        goto label05;

     label04:
        $r88 := @caughtexception;

     label05:
        $r91 = <org.apache.cxf.common.CXFPermissions: java.lang.RuntimePermission RESOLVE_URI>;

        $z19 = staticinvoke <org.apache.cxf.resource.SecurityActions: boolean fileExists(java.io.File,java.security.Permission)>(r90, $r91);

        if $z19 != 0 goto label06;

        $r108 = new java.net.URI;

        $r63 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

        specialinvoke $r108.<java.net.URI: void <init>(java.lang.String)>($r63);

        r92 = $r108;

        goto label07;

     label06:
        $r6 = virtualinvoke r90.<java.io.File: java.io.File getAbsoluteFile()>();

        r92 = virtualinvoke $r6.<java.io.File: java.net.URI toURI()>();

     label07:
        $z1 = virtualinvoke r92.<java.net.URI: boolean isAbsolute()>();

        if $z1 == 0 goto label12;

        r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = r92;

        $r45 = virtualinvoke r92.<java.net.URI: java.net.URL toURL()>();

        r8.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r45;

     label08:
        $r46 = r8.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r47 = virtualinvoke $r46.<java.net.URL: java.net.URLConnection openConnection()>();

        r93 = (java.net.HttpURLConnection) $r47;

        $r48 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("http.proxyHost");

        if $r48 == null goto label09;

        $r49 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("http.proxy.user");

        $r50 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("http.proxy.password");

        if $r49 == null goto label09;

        if $r50 == null goto label09;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $r56 = virtualinvoke $r55.<java.lang.String: byte[] getBytes()>();

        $r57 = staticinvoke <org.apache.cxf.common.util.Base64Utility: java.lang.String encode(byte[])>($r56);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r93.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Proxy-Authorization", $r61);

     label09:
        virtualinvoke r93.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

        $i1 = (int) 60000;

        virtualinvoke r93.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1);

        $r94 = virtualinvoke r93.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r94;

     label10:
        goto label31;

     label11:
        $r85 := @caughtexception;

        $r86 = r8.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r87 = virtualinvoke $r86.<java.net.URL: java.io.InputStream openStream()>();

        r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r87;

        goto label31;

     label12:
        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r7);

        if $z2 != 0 goto label28;

        $r111 = new java.io.File;

        specialinvoke $r111.<java.io.File: void <init>(java.lang.String)>(r7);

        r95 = $r111;

        $z7 = virtualinvoke $r111.<java.io.File: boolean exists()>();

        if $z7 != 0 goto label13;

        $z13 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z13 == 0 goto label13;

        $r112 = new java.io.File;

        $r44 = specialinvoke r8.<org.apache.cxf.resource.URIResolver: java.lang.String getFilePathFromUri(java.lang.String)>(r7);

        specialinvoke $r112.<java.io.File: void <init>(java.lang.String)>($r44);

        r95 = $r112;

     label13:
        $z20 = virtualinvoke r95.<java.io.File: boolean exists()>();

        if $z20 == 0 goto label14;

        r96 = virtualinvoke r95.<java.io.File: java.net.URI toURI()>();

        goto label15;

     label14:
        $r113 = new java.net.URI;

        specialinvoke $r113.<java.net.URI: void <init>(java.lang.String)>(r7);

        r96 = $r113;

     label15:
        $r31 = virtualinvoke r96.<java.net.URI: java.net.URI resolve(java.net.URI)>(r92);

        $z8 = virtualinvoke $r31.<java.net.URI: boolean isAbsolute()>();

        if $z8 == 0 goto label24;

        $r34 = "file";

        $r35 = virtualinvoke $r31.<java.net.URI: java.lang.String getScheme()>();

        $z10 = virtualinvoke $r34.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r35);

        if $z10 == 0 goto label24;

     label16:
        $r114 = new java.io.File;

        $r37 = virtualinvoke $r31.<java.net.URI: java.lang.String getPath()>();

        $r38 = virtualinvoke $r37.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%20", " ");

        specialinvoke $r114.<java.io.File: void <init>(java.lang.String)>($r38);

        $z11 = virtualinvoke $r114.<java.io.File: boolean exists()>();

        if $z11 == 0 goto label17;

        $r41 = virtualinvoke $r31.<java.net.URI: java.net.URL toURL()>();

        $r42 = virtualinvoke $r41.<java.net.URL: java.io.InputStream openStream()>();

        r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r42;

        r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r31;

        goto label20;

     label17:
        $r39 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $z12 = virtualinvoke $r39.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z12 == 0 goto label18;

        $r40 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $r97 = virtualinvoke $r40.<java.lang.String: java.lang.String substring(int)>(5);

        goto label19;

     label18:
        $r97 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

     label19:
        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r97);

     label20:
        goto label27;

     label21:
        $r82 := @caughtexception;

        $r83 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $z18 = virtualinvoke $r83.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z18 == 0 goto label22;

        $r84 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $r98 = virtualinvoke $r84.<java.lang.String: java.lang.String substring(int)>(5);

        goto label23;

     label22:
        $r98 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

     label23:
        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r98);

        goto label27;

     label24:
        $r32 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $z9 = virtualinvoke $r32.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z9 == 0 goto label25;

        $r33 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

        $r99 = virtualinvoke $r33.<java.lang.String: java.lang.String substring(int)>(5);

        goto label26;

     label25:
        $r99 = virtualinvoke $r31.<java.net.URI: java.lang.String toString()>();

     label26:
        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r99);

     label27:
        goto label31;

     label28:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z3 == 0 goto label29;

        $r100 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(5);

        goto label30;

     label29:
        $r100 = $r1;

     label30:
        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r100);

     label31:
        goto label33;

     label32:
        $r81 := @caughtexception;

     label33:
        $r9 = r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r9 != null goto label34;

        if r7 == null goto label34;

        $z6 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z6 == 0 goto label34;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r89);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r28);

     label34:
        $r101 = r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r101 != null goto label38;

        $r19 = r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri>;

        if $r19 == null goto label38;

        $r21 = "file";

        $r20 = r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri>;

        $r22 = virtualinvoke $r20.<java.net.URI: java.lang.String getScheme()>();

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label38;

     label35:
        $r116 = new java.io.File;

        $r24 = r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri>;

        specialinvoke $r116.<java.io.File: void <init>(java.net.URI)>($r24);

        r8.<org.apache.cxf.resource.URIResolver: java.io.File file> = $r116;

     label36:
        goto label38;

     label37:
        $r75 := @caughtexception;

        $r117 = new java.io.File;

        $r77 = r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri>;

        $r78 = virtualinvoke $r77.<java.net.URI: java.net.URL toURL()>();

        $r79 = virtualinvoke $r78.<java.net.URL: java.lang.String getPath()>();

        specialinvoke $r117.<java.io.File: void <init>(java.lang.String)>($r79);

        r8.<org.apache.cxf.resource.URIResolver: java.io.File file> = $r117;

        $r80 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        $z17 = virtualinvoke $r80.<java.io.File: boolean exists()>();

        if $z17 != 0 goto label38;

        r8.<org.apache.cxf.resource.URIResolver: java.io.File file> = null;

     label38:
        $r102 = r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r102 != null goto label43;

        $r10 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        if $r10 == null goto label43;

        $r11 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        $z4 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label43;

        $r12 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        $r13 = virtualinvoke $r12.<java.io.File: java.net.URI toURI()>();

        r8.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r13;

     label39:
        $r118 = new java.io.FileInputStream;

        $r15 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        specialinvoke $r118.<java.io.FileInputStream: void <init>(java.io.File)>($r15);

        r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r118;

     label40:
        goto label42;

     label41:
        $r69 := @caughtexception;

        $r120 = new java.lang.RuntimeException;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File was deleted! ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r89);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r120.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r74, $r69);

        throw $r120;

     label42:
        $r16 = r8.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        $r17 = virtualinvoke $r16.<java.io.File: java.net.URI toURI()>();

        $r18 = virtualinvoke $r17.<java.net.URI: java.net.URL toURL()>();

        r8.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r18;

        goto label44;

     label43:
        $r103 = r8.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r103 != null goto label44;

        specialinvoke r8.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>(r89);

     label44:
        return;

        catch java.net.URISyntaxException from label02 to label03 with label04;
        catch java.lang.ClassCastException from label08 to label10 with label11;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.net.URISyntaxException from label01 to label31 with label32;
        catch java.lang.IllegalArgumentException from label35 to label36 with label37;
        catch java.io.FileNotFoundException from label39 to label40 with label41;
    }

    private java.lang.String getFilePathFromUri(java.lang.String)
    {
        java.net.MalformedURLException $r3;
        java.net.URL $r0;
        org.apache.cxf.resource.URIResolver r4;
        java.lang.String r1, $r2, r5;
        boolean $z0, $z1;

        r4 := @this: org.apache.cxf.resource.URIResolver;

        r1 := @parameter0: java.lang.String;

        r5 = null;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        r5 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        if r5 != null goto label6;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("file:/");

        if $z0 == 0 goto label5;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(6);

        goto label6;

     label5:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z1 == 0 goto label6;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(5);

     label6:
        if r5 == null goto label7;

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%20", " ");

        return $r2;

     label7:
        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    private void tryArchive(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.cxf.resource.URIResolver r6;
        java.net.URL $r13;
        java.net.URISyntaxException $r14;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, $r1, $r2, r4, $r9, $r11;
        java.net.URI $r5, $r15;
        boolean $z0;
        java.lang.StringBuilder $r8, $r10, $r16;
        java.io.InputStream $r12;

        r6 := @this: org.apache.cxf.resource.URIResolver;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(33);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        specialinvoke r6.<org.apache.cxf.resource.URIResolver: void tryFileSystem(java.lang.String,java.lang.String)>(r0, r4);

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

     label2:
        $r15 = new java.net.URI;

        specialinvoke $r15.<java.net.URI: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r15.<java.net.URI: java.net.URI resolve(java.lang.String)>(r4);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r6.<org.apache.cxf.resource.URIResolver: void tryArchive(java.lang.String)>($r11);

        $r12 = r6.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r12 == null goto label4;

        $z0 = virtualinvoke $r5.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

        $r13 = virtualinvoke $r5.<java.net.URI: java.net.URL toURL()>();

        r6.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r13;

     label3:
        return;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

     label6:
        specialinvoke r6.<org.apache.cxf.resource.URIResolver: void tryFileSystem(java.lang.String,java.lang.String)>("", r4);

        return;

        catch java.net.URISyntaxException from label2 to label3 with label5;
    }

    private void tryArchive(java.lang.String) throws java.io.IOException
    {
        org.apache.cxf.resource.URIResolver r0;
        java.net.URL $r2, $r4, $r10;
        java.net.URISyntaxException $r8;
        java.io.IOException $r6;
        int $i0, $i1, $i3;
        java.net.URI $r5;
        java.lang.String $r7, r9;
        java.io.InputStream $r3;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r9 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(33);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        return;

     label1:
        $r10 = new java.net.URL;

        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>(r9);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r10;

     label2:
        $r2 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r3 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r3;

     label3:
        $r4 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URI toURI()>();

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r5;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        $i1 = $i0 + 1;

        $r7 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryClasspath(java.lang.String)>($r7);

     label8:
        return;

        catch java.net.URISyntaxException from label3 to label4 with label5;
        catch java.io.IOException from label2 to label6 with label7;
    }

    private void tryClasspath(java.lang.String) throws java.io.IOException
    {
        java.net.URL $r2, $r3, $r4, $r10, $r19, $r21, $r24, $r28, $r31;
        java.net.URISyntaxException $r8, $r9, $r18;
        java.net.URI $r5, $r22, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.logging.Logger $r7;
        java.lang.StringBuilder $r14, $r16, $r32;
        org.apache.cxf.resource.URIResolver r0;
        java.util.logging.Level $r6;
        int $i0, $i1, $i3;
        java.lang.String $r11, $r15, $r17, $r20, $r25, $r26, r27;
        java.lang.Class $r1;
        java.io.InputStream $r29, $r30;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r27 := @parameter0: java.lang.String;

        z5 = 0;

        $z0 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z0 == 0 goto label01;

        r27 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int)>(10);

        z5 = 1;

     label01:
        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.lang.Class calling>;

        $r2 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.net.URL getResource(java.lang.String,java.lang.Class)>(r27, $r1);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r2;

        $r3 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        if $r3 != null goto label02;

        specialinvoke r0.<org.apache.cxf.resource.URIResolver: void tryRemote(java.lang.String)>(r27);

        goto label13;

     label02:
        $r4 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URI toURI()>();

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r5;

     label03:
        goto label12;

     label04:
        $r18 := @caughtexception;

        $r19 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r20 = virtualinvoke $r19.<java.net.URL: java.lang.String toString()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean contains(java.lang.CharSequence)>(" ");

        if $z4 == 0 goto label05;

        $r31 = new java.net.URL;

        $r24 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r25 = virtualinvoke $r24.<java.net.URL: java.lang.String toString()>();

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

        specialinvoke $r31.<java.net.URL: void <init>(java.lang.String)>($r26);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r31;

     label05:
        $r21 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r22 = virtualinvoke $r21.<java.net.URL: java.net.URI toURI()>();

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r22;

     label06:
        goto label12;

     label07:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r11 = virtualinvoke $r10.<java.net.URL: java.lang.String toString()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z1 != 0 goto label08;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("zip:");

        if $z2 != 0 goto label08;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("wsjar:");

        if $z3 == 0 goto label12;

     label08:
        $i1 = virtualinvoke $r11.<java.lang.String: int indexOf(int)>(33);

        $i3 = (int) -1;

        if $i1 == $i3 goto label12;

     label09:
        $r33 = new java.net.URI;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classpath:");

        $i0 = $i1 + 1;

        $r15 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int)>($i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.net.URI: void <init>(java.lang.String)>($r17);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r33;

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

     label12:
        $r28 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r29 = virtualinvoke $r28.<java.net.URL: java.io.InputStream openStream()>();

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r29;

     label13:
        $r30 = r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r30 != null goto label14;

        if z5 == 0 goto label14;

        $r7 = <org.apache.cxf.resource.URIResolver: java.util.logging.Logger LOG>;

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)>($r6, "NOT_ON_CLASSPATH", r27);

     label14:
        return;

        catch java.net.URISyntaxException from label02 to label03 with label04;
        catch java.net.URISyntaxException from label05 to label06 with label07;
        catch java.net.URISyntaxException from label09 to label10 with label11;
    }

    private void tryRemote(java.lang.String) throws java.io.IOException
    {
        org.apache.cxf.resource.URIResolver r0;
        java.net.URL $r4, $r6, $r9;
        java.net.URISyntaxException $r16;
        java.io.ByteArrayInputStream $r8;
        java.net.URLConnection $r10;
        java.util.Map $r2, $r15;
        java.lang.String r1, $r7;
        java.net.URI $r5;
        java.net.MalformedURLException $r17;
        org.apache.cxf.helpers.LoadingByteArrayOutputStream $r12, r18;
        java.lang.Object $r3;
        java.io.InputStream $r11, $r13, $r14;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.cxf.resource.URIResolver: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r18 = (org.apache.cxf.helpers.LoadingByteArrayOutputStream) $r3;

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r1);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URL url> = $r4;

        $r5 = new java.net.URI;

        $r6 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r7);

        r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri> = $r5;

        if r18 != null goto label2;

        $r9 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        $r10 = virtualinvoke $r9.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = virtualinvoke $r10.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r11;

        $r12 = new org.apache.cxf.helpers.LoadingByteArrayOutputStream;

        specialinvoke $r12.<org.apache.cxf.helpers.LoadingByteArrayOutputStream: void <init>(int)>(1024);

        r18 = $r12;

        $r13 = r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r13, $r12);

        $r14 = r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        virtualinvoke $r14.<java.io.InputStream: void close()>();

        $r15 = r0.<org.apache.cxf.resource.URIResolver: java.util.Map cache>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r12);

     label2:
        $r8 = virtualinvoke r18.<org.apache.cxf.helpers.LoadingByteArrayOutputStream: java.io.ByteArrayInputStream createInputStream()>();

        r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is> = $r8;

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        return;

        catch java.net.MalformedURLException from label1 to label3 with label4;
        catch java.net.URISyntaxException from label1 to label3 with label5;
    }

    public java.net.URI getURI()
    {
        java.net.URI $r1;
        org.apache.cxf.resource.URIResolver r0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.net.URI uri>;

        return $r1;
    }

    public java.net.URL getURL()
    {
        org.apache.cxf.resource.URIResolver r0;
        java.net.URL $r1;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.net.URL url>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        org.apache.cxf.resource.URIResolver r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        return $r1;
    }

    public boolean isFile()
    {
        org.apache.cxf.resource.URIResolver r0;
        java.io.File $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        return $z0;

     label1:
        return 0;
    }

    public java.io.File getFile()
    {
        org.apache.cxf.resource.URIResolver r0;
        java.io.File $r1;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.io.File file>;

        return $r1;
    }

    public boolean isResolved()
    {
        org.apache.cxf.resource.URIResolver r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.resource.URIResolver;

        $r1 = r0.<org.apache.cxf.resource.URIResolver: java.io.InputStream is>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getLogger(java.lang.Class)>(class "Lorg/apache/cxf/resource/URIResolver;");

        <org.apache.cxf.resource.URIResolver: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
