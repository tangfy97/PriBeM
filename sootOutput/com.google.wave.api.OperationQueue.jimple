public class com.google.wave.api.OperationQueue extends java.lang.Object implements java.io.Serializable
{
    private static final java.util.Random ID_GENERATOR;
    private static final java.lang.String TEMP_BLIP_ID_FORMAT;
    private static final java.lang.String TEMP_WAVE_ID_FORMAT;
    private static final java.lang.String TEMP_WAVELET_ID_FORMAT;
    private static final java.lang.String OP_ID_FORMAT;
    private static long nextOpId;
    private final java.lang.String proxyForId;
    private java.util.List pendingOperations;

    public void <init>()
    {
        com.google.wave.api.OperationQueue r0;
        java.util.ArrayList $r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.google.wave.api.OperationQueue: void <init>(java.util.List,java.lang.String)>($r1, null);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        java.lang.String r2;
        java.util.ArrayList $r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.google.wave.api.OperationQueue: void <init>(java.util.List,java.lang.String)>($r1, r2);

        return;
    }

    public void <init>(java.util.List, java.lang.String)
    {
        java.util.List r1;
        com.google.wave.api.OperationQueue r0;
        java.lang.String r2;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations> = r1;

        r0.<com.google.wave.api.OperationQueue: java.lang.String proxyForId> = r2;

        return;
    }

    public java.util.List getPendingOperations()
    {
        java.util.List $r1;
        com.google.wave.api.OperationQueue r0;

        r0 := @this: com.google.wave.api.OperationQueue;

        $r1 = r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        return $r1;
    }

    public java.lang.String getProxyForId()
    {
        com.google.wave.api.OperationQueue r0;
        java.lang.String $r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        $r1 = r0.<com.google.wave.api.OperationQueue: java.lang.String proxyForId>;

        return $r1;
    }

    public com.google.wave.api.OperationQueue proxyFor(java.lang.String)
    {
        java.util.List $r3;
        com.google.wave.api.OperationQueue $r0, r1;
        java.lang.String r2;

        r1 := @this: com.google.wave.api.OperationQueue;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.google.wave.api.OperationQueue;

        $r3 = r1.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        specialinvoke $r0.<com.google.wave.api.OperationQueue: void <init>(java.util.List,java.lang.String)>($r3, r2);

        return $r0;
    }

    public void clear()
    {
        java.util.List $r1;
        com.google.wave.api.OperationQueue r0;

        r0 := @this: com.google.wave.api.OperationQueue;

        $r1 = r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public com.google.wave.api.Blip appendBlipToWavelet(com.google.wave.api.Wavelet, java.lang.String)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r7;
        com.google.wave.api.OperationType $r8;
        com.google.wave.api.BlipThread $r3;
        com.google.wave.api.Wavelet r0;
        com.google.wave.api.Blip $r5;
        com.google.wave.api.OperationQueue r6;
        com.google.wave.api.OperationRequest$Parameter $r11;
        com.google.wave.api.BlipData $r10;
        java.lang.String r1, $r2, $r4;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r9;

        r6 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: com.google.wave.api.Wavelet;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.google.wave.api.OperationQueue: java.lang.String generateTempBlipId(com.google.wave.api.Wavelet)>(r0);

        $r3 = virtualinvoke r0.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread getRootThread()>();

        $r4 = virtualinvoke $r3.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        $r5 = staticinvoke <com.google.wave.api.OperationQueue: com.google.wave.api.Blip newBlip(com.google.wave.api.Wavelet,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, null, $r2, $r4);

        $r8 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_APPEND_BLIP>;

        $r7 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r9 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty BLIP_DATA>;

        $r10 = virtualinvoke $r5.<com.google.wave.api.Blip: com.google.wave.api.BlipData serialize()>();

        $r11 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r9, $r10);

        $r7[0] = $r11;

        virtualinvoke r6.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r8, r0, $r7);

        return $r5;
    }

    public void addParticipantToWavelet(com.google.wave.api.Wavelet, java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6;
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        java.lang.String r3;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_ADD_PARTICIPANT_NEWSYNTAX>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PARTICIPANT_ID>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public void removeParticipantFromWavelet(com.google.wave.api.Wavelet, java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6;
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        java.lang.String r3;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_REMOVE_PARTICIPANT_NEWSYNTAX>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PARTICIPANT_ID>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public com.google.wave.api.Wavelet createWavelet(java.lang.String, java.util.Set)
    {
        com.google.wave.api.OperationQueue r0;
        java.util.Set r2;
        java.lang.String r1;
        com.google.wave.api.Wavelet $r3;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        $r3 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.Wavelet createWavelet(java.lang.String,java.util.Set,java.lang.String)>(r1, r2, "");

        return $r3;
    }

    public com.google.wave.api.Wavelet createWavelet(java.lang.String, java.util.Set, java.lang.String)
    {
        com.google.wave.api.OperationRequest $r9;
        com.google.wave.api.OperationRequest$Parameter[] $r4;
        java.util.Set r1;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet $r3;
        com.google.wave.api.impl.WaveletData $r7;
        com.google.wave.api.OperationQueue r2;
        com.google.wave.api.OperationRequest$Parameter $r8, $r12;
        java.lang.String r0, r10;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r6, $r11;
        boolean $z0;

        r2 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        r10 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.google.wave.api.OperationQueue: com.google.wave.api.Wavelet newWavelet(java.lang.String,java.util.Set,com.google.wave.api.OperationQueue)>(r0, r1, r2);

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType ROBOT_CREATE_WAVELET>;

        $r4 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r6 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty WAVELET_DATA>;

        $r7 = virtualinvoke $r3.<com.google.wave.api.Wavelet: com.google.wave.api.impl.WaveletData serialize()>();

        $r8 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r6, $r7);

        $r4[0] = $r8;

        $r9 = virtualinvoke r2.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, $r3, $r4);

        if r10 == null goto label1;

        $z0 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r11 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty MESSAGE>;

        $r12 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r11, r10);

        virtualinvoke $r9.<com.google.wave.api.OperationRequest: void addParameter(com.google.wave.api.OperationRequest$Parameter)>($r12);

     label1:
        return $r3;
    }

    public void search(java.lang.String, java.lang.Integer, java.lang.Integer)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r10;
        com.google.wave.api.OperationType $r11;
        java.lang.Integer r3, r6;
        com.google.wave.api.OperationQueue r9;
        com.google.wave.api.OperationRequest$Parameter $r2, $r5, $r8;
        java.lang.String r0;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r1, $r4, $r7;

        r9 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Integer;

        r6 := @parameter2: java.lang.Integer;

        $r1 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty QUERY>;

        $r2 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r1, r0);

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty INDEX>;

        $r5 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r7 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty NUM_RESULTS>;

        $r8 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r7, r6);

        $r11 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType ROBOT_SEARCH>;

        $r10 = newarray (com.google.wave.api.OperationRequest$Parameter)[3];

        $r10[0] = $r2;

        $r10[1] = $r5;

        $r10[2] = $r8;

        virtualinvoke r9.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.OperationRequest$Parameter[])>($r11, $r10);

        return;
    }

    public void setDatadocOfWavelet(com.google.wave.api.Wavelet, java.lang.String, java.lang.String)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6, $r9;
        java.lang.String r3, r7;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4, $r8;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_SET_DATADOC>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[2];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty DATADOC_NAME>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        $r8 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty DATADOC_VALUE>;

        $r9 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r8, r7);

        $r2[1] = $r9;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public void fetchWavelet(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        com.google.wave.api.OperationQueue r0;
        org.waveprotocol.wave.model.id.WaveId r1;
        com.google.wave.api.OperationRequest$Parameter[] $r3;
        org.waveprotocol.wave.model.id.WaveletId r2;
        com.google.wave.api.OperationType $r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        $r4 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType ROBOT_FETCH_WAVE>;

        $r3 = newarray (com.google.wave.api.OperationRequest$Parameter)[0];

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>($r4, r1, r2, null, $r3);

        return;
    }

    public void setTitleOfWavelet(com.google.wave.api.Wavelet, java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6;
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        java.lang.String r3;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_SET_TITLE>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty WAVELET_TITLE>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public void modifyTagOfWavelet(com.google.wave.api.Wavelet, java.lang.String, java.lang.String)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6, $r9;
        java.lang.String r3, r7;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4, $r8;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_MODIFY_TAG>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[2];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty NAME>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        $r8 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty MODIFY_HOW>;

        $r9 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r8, r7);

        $r2[1] = $r9;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public com.google.wave.api.Blip createChildOfBlip(com.google.wave.api.Blip)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r12;
        com.google.wave.api.OperationType $r13;
        com.google.wave.api.Blip r0, $r10;
        com.google.wave.api.Wavelet $r1, $r3, $r7;
        java.util.ArrayList $r17;
        com.google.wave.api.OperationRequest$Parameter $r16;
        java.util.Map $r6;
        int $i1;
        java.lang.String $r2, $r8, $r9;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r14;
        com.google.wave.api.BlipThread $r18;
        com.google.wave.api.OperationQueue r11;
        com.google.wave.api.BlipData $r15;

        r11 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: com.google.wave.api.Blip;

        $r1 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r2 = staticinvoke <com.google.wave.api.OperationQueue: java.lang.String generateTempBlipId(com.google.wave.api.Wavelet)>($r1);

        $r3 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r18 = new com.google.wave.api.BlipThread;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke $r3.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        $i1 = (int) -1;

        specialinvoke $r18.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>($r2, $i1, $r17, $r6);

        virtualinvoke r0.<com.google.wave.api.Blip: void addThread(com.google.wave.api.BlipThread)>($r18);

        virtualinvoke $r3.<com.google.wave.api.Wavelet: void addThread(com.google.wave.api.BlipThread)>($r18);

        $r7 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r8 = virtualinvoke r0.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        $r9 = virtualinvoke $r18.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        $r10 = staticinvoke <com.google.wave.api.OperationQueue: com.google.wave.api.Blip newBlip(com.google.wave.api.Wavelet,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, "", $r8, $r2, $r9);

        $r13 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType BLIP_CREATE_CHILD>;

        $r12 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r14 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty BLIP_DATA>;

        $r15 = virtualinvoke $r10.<com.google.wave.api.Blip: com.google.wave.api.BlipData serialize()>();

        $r16 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r14, $r15);

        $r12[0] = $r16;

        virtualinvoke r11.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Blip,com.google.wave.api.OperationRequest$Parameter[])>($r13, r0, $r12);

        return $r10;
    }

    public com.google.wave.api.Blip continueThreadOfBlip(com.google.wave.api.Blip)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r9;
        com.google.wave.api.OperationType $r10;
        com.google.wave.api.BlipThread $r5;
        com.google.wave.api.Blip r0, $r7;
        com.google.wave.api.Wavelet $r1, $r3;
        com.google.wave.api.OperationQueue r8;
        com.google.wave.api.OperationRequest$Parameter $r13;
        com.google.wave.api.BlipData $r12;
        java.lang.String $r2, $r4, $r6;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r11;

        r8 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: com.google.wave.api.Blip;

        $r1 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r2 = virtualinvoke r0.<com.google.wave.api.Blip: java.lang.String getParentBlipId()>();

        $r3 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r4 = staticinvoke <com.google.wave.api.OperationQueue: java.lang.String generateTempBlipId(com.google.wave.api.Wavelet)>($r3);

        $r5 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.BlipThread getThread()>();

        $r6 = virtualinvoke $r5.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        $r7 = staticinvoke <com.google.wave.api.OperationQueue: com.google.wave.api.Blip newBlip(com.google.wave.api.Wavelet,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, "", $r2, $r4, $r6);

        $r10 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType BLIP_CONTINUE_THREAD>;

        $r9 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r11 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty BLIP_DATA>;

        $r12 = virtualinvoke $r7.<com.google.wave.api.Blip: com.google.wave.api.BlipData serialize()>();

        $r13 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r11, $r12);

        $r9[0] = $r13;

        virtualinvoke r8.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Blip,com.google.wave.api.OperationRequest$Parameter[])>($r10, r0, $r9);

        return $r7;
    }

    public void deleteBlip(com.google.wave.api.Wavelet, java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        org.waveprotocol.wave.model.id.WaveId $r3;
        com.google.wave.api.OperationRequest$Parameter[] $r6;
        org.waveprotocol.wave.model.id.WaveletId $r4;
        com.google.wave.api.OperationType $r2;
        java.lang.String r5;
        com.google.wave.api.Wavelet r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r5 := @parameter1: java.lang.String;

        $r2 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType BLIP_DELETE>;

        $r3 = virtualinvoke r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r4 = virtualinvoke r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r6 = newarray (com.google.wave.api.OperationRequest$Parameter)[0];

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>($r2, $r3, $r4, r5, $r6);

        return;
    }

    public void appendMarkupToDocument(com.google.wave.api.Blip, java.lang.String)
    {
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6;
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        java.lang.String r3;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Blip r1;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Blip;

        r3 := @parameter1: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType DOCUMENT_APPEND_MARKUP>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty CONTENT>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Blip,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public void submitWith(com.google.wave.api.OperationQueue)
    {
        java.util.List $r2, $r3, $r4;
        com.google.wave.api.OperationQueue r0, r1;

        r1 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: com.google.wave.api.OperationQueue;

        $r3 = r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        $r2 = r1.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r4 = r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        r1.<com.google.wave.api.OperationQueue: java.util.List pendingOperations> = $r4;

        return;
    }

    public com.google.wave.api.OperationRequest modifyDocument(com.google.wave.api.Blip)
    {
        com.google.wave.api.OperationRequest $r4;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        com.google.wave.api.OperationType $r3;
        com.google.wave.api.Blip r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Blip;

        $r3 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType DOCUMENT_MODIFY>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[0];

        $r4 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Blip,com.google.wave.api.OperationRequest$Parameter[])>($r3, r1, $r2);

        return $r4;
    }

    public com.google.wave.api.Blip insertInlineBlipToDocument(com.google.wave.api.Blip, int)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r12;
        com.google.wave.api.OperationType $r13;
        java.lang.Integer $r15;
        com.google.wave.api.Blip r0, $r10;
        com.google.wave.api.Wavelet $r1, $r3, $r7;
        java.util.ArrayList $r5;
        com.google.wave.api.OperationRequest$Parameter $r16, $r19;
        java.util.Map $r6;
        int i0;
        java.lang.String $r2, $r8, $r9;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r14, $r17;
        com.google.wave.api.BlipThread $r4;
        com.google.wave.api.OperationQueue r11;
        com.google.wave.api.BlipData $r18;

        r11 := @this: com.google.wave.api.OperationQueue;

        r0 := @parameter0: com.google.wave.api.Blip;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r2 = staticinvoke <com.google.wave.api.OperationQueue: java.lang.String generateTempBlipId(com.google.wave.api.Wavelet)>($r1);

        $r3 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r4 = new com.google.wave.api.BlipThread;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke $r3.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        specialinvoke $r4.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>($r2, i0, $r5, $r6);

        virtualinvoke r0.<com.google.wave.api.Blip: void addThread(com.google.wave.api.BlipThread)>($r4);

        virtualinvoke $r3.<com.google.wave.api.Wavelet: void addThread(com.google.wave.api.BlipThread)>($r4);

        $r7 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet getWavelet()>();

        $r8 = virtualinvoke r0.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        $r9 = virtualinvoke $r4.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        $r10 = staticinvoke <com.google.wave.api.OperationQueue: com.google.wave.api.Blip newBlip(com.google.wave.api.Wavelet,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, "", $r8, $r2, $r9);

        $r13 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType DOCUMENT_INSERT_INLINE_BLIP>;

        $r12 = newarray (com.google.wave.api.OperationRequest$Parameter)[2];

        $r14 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty INDEX>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r14, $r15);

        $r12[0] = $r16;

        $r17 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty BLIP_DATA>;

        $r18 = virtualinvoke $r10.<com.google.wave.api.Blip: com.google.wave.api.BlipData serialize()>();

        $r19 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r17, $r18);

        $r12[1] = $r19;

        virtualinvoke r11.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Blip,com.google.wave.api.OperationRequest$Parameter[])>($r13, r0, $r12);

        return $r10;
    }

    transient com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r3;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter[] r2;
        com.google.wave.api.OperationType r1;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: com.google.wave.api.OperationRequest$Parameter[];

        $r3 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>(r1, null, null, null, r2);

        return $r3;
    }

    transient com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType, com.google.wave.api.Wavelet, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r6;
        com.google.wave.api.OperationQueue r0;
        org.waveprotocol.wave.model.id.WaveId $r3;
        com.google.wave.api.OperationRequest$Parameter[] r5;
        org.waveprotocol.wave.model.id.WaveletId $r4;
        com.google.wave.api.OperationType r1;
        com.google.wave.api.Wavelet r2;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: com.google.wave.api.Wavelet;

        r5 := @parameter2: com.google.wave.api.OperationRequest$Parameter[];

        $r3 = virtualinvoke r2.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r4 = virtualinvoke r2.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r6 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>(r1, $r3, $r4, null, r5);

        return $r6;
    }

    transient com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType, com.google.wave.api.Blip, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r7;
        org.waveprotocol.wave.model.id.WaveId $r3;
        com.google.wave.api.OperationRequest$Parameter[] r6;
        org.waveprotocol.wave.model.id.WaveletId $r4;
        com.google.wave.api.OperationType r1;
        com.google.wave.api.Blip r2;
        com.google.wave.api.OperationQueue r0;
        java.lang.String $r5;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: com.google.wave.api.Blip;

        r6 := @parameter2: com.google.wave.api.OperationRequest$Parameter[];

        $r3 = virtualinvoke r2.<com.google.wave.api.Blip: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r4 = virtualinvoke r2.<com.google.wave.api.Blip: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r5 = virtualinvoke r2.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        $r7 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>(r1, $r3, $r4, $r5, r6);

        return $r7;
    }

    transient com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType, org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r7;
        org.waveprotocol.wave.model.id.WaveId r2;
        com.google.wave.api.OperationRequest$Parameter[] r6;
        org.waveprotocol.wave.model.id.WaveletId r3;
        com.google.wave.api.OperationType r1;
        java.util.List $r5;
        com.google.wave.api.OperationQueue r0;
        int $i0;
        java.lang.String r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveId;

        r3 := @parameter2: org.waveprotocol.wave.model.id.WaveletId;

        r4 := @parameter3: java.lang.String;

        r6 := @parameter4: com.google.wave.api.OperationRequest$Parameter[];

        $r5 = r0.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest addOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,int,com.google.wave.api.OperationRequest$Parameter[])>(r1, r2, r3, r4, $i0, r6);

        return $r7;
    }

    transient com.google.wave.api.OperationRequest prependOperation(com.google.wave.api.OperationType, org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r6;
        com.google.wave.api.OperationQueue r0;
        org.waveprotocol.wave.model.id.WaveId r2;
        com.google.wave.api.OperationRequest$Parameter[] r5;
        org.waveprotocol.wave.model.id.WaveletId r3;
        com.google.wave.api.OperationType r1;
        java.lang.String r4;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.OperationType;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveId;

        r3 := @parameter2: org.waveprotocol.wave.model.id.WaveletId;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: com.google.wave.api.OperationRequest$Parameter[];

        $r6 = virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest addOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,int,com.google.wave.api.OperationRequest$Parameter[])>(r1, r2, r3, r4, 0, r5);

        return $r6;
    }

    transient com.google.wave.api.OperationRequest addOperation(com.google.wave.api.OperationType, org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String, int, com.google.wave.api.OperationRequest$Parameter[])
    {
        com.google.wave.api.OperationRequest $r2;
        java.lang.Object[] $r5;
        com.google.wave.api.OperationRequest$Parameter[] r9;
        org.waveprotocol.wave.model.id.WaveletId r1;
        long $l0, $l1;
        com.google.wave.api.OperationType r3;
        com.google.wave.api.OperationRequest$Parameter $r15;
        java.lang.Long $r6;
        int i2;
        java.lang.String $r4, $r7, r8, $r11, $r12, $r13, r18, r19;
        org.waveprotocol.wave.model.id.IdSerialiser $r16, $r17;
        boolean $z0;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r14;
        org.waveprotocol.wave.model.id.WaveId r0;
        java.util.List $r20;
        com.google.wave.api.OperationQueue r10;

        r10 := @this: com.google.wave.api.OperationQueue;

        r3 := @parameter0: com.google.wave.api.OperationType;

        r0 := @parameter1: org.waveprotocol.wave.model.id.WaveId;

        r1 := @parameter2: org.waveprotocol.wave.model.id.WaveletId;

        r8 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        r9 := @parameter5: com.google.wave.api.OperationRequest$Parameter[];

        r18 = null;

        if r0 == null goto label1;

        $r17 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        r18 = interfaceinvoke $r17.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>(r0);

     label1:
        r19 = null;

        if r1 == null goto label2;

        $r16 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        r19 = interfaceinvoke $r16.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>(r1);

     label2:
        $r2 = new com.google.wave.api.OperationRequest;

        $r4 = virtualinvoke r3.<com.google.wave.api.OperationType: java.lang.String method()>();

        $r5 = newarray (java.lang.Object)[1];

        $l0 = <com.google.wave.api.OperationQueue: long nextOpId>;

        $l1 = $l0 + 1L;

        <com.google.wave.api.OperationQueue: long nextOpId> = $l1;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("op%d", $r5);

        specialinvoke $r2.<com.google.wave.api.OperationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>($r4, $r7, r18, r19, r8, r9);

        $r11 = r10.<com.google.wave.api.OperationQueue: java.lang.String proxyForId>;

        if $r11 == null goto label3;

        $r12 = r10.<com.google.wave.api.OperationQueue: java.lang.String proxyForId>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r14 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PROXYING_FOR>;

        $r13 = r10.<com.google.wave.api.OperationQueue: java.lang.String proxyForId>;

        $r15 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r14, $r13);

        virtualinvoke $r2.<com.google.wave.api.OperationRequest: void addParameter(com.google.wave.api.OperationRequest$Parameter)>($r15);

     label3:
        $r20 = r10.<com.google.wave.api.OperationQueue: java.util.List pendingOperations>;

        interfaceinvoke $r20.<java.util.List: void add(int,java.lang.Object)>(i2, $r2);

        return $r2;
    }

    private static java.lang.String generateTempBlipId(com.google.wave.api.Wavelet)
    {
        java.lang.Object[] $r0;
        org.waveprotocol.wave.model.id.WaveletId $r3;
        java.util.Random $r5;
        java.lang.Integer $r6;
        com.google.wave.api.Wavelet r2;
        int $i0;
        java.lang.String $r4, $r7;
        org.waveprotocol.wave.model.id.IdSerialiser $r1;

        r2 := @parameter0: com.google.wave.api.Wavelet;

        $r0 = newarray (java.lang.Object)[2];

        $r1 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r3 = virtualinvoke r2.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r3);

        $r0[0] = $r4;

        $r5 = <com.google.wave.api.OperationQueue: java.util.Random ID_GENERATOR>;

        $i0 = virtualinvoke $r5.<java.util.Random: int nextInt()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("TBD_%s_%s", $r0);

        return $r7;
    }

    private static com.google.wave.api.Blip newBlip(com.google.wave.api.Wavelet, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.google.wave.api.BlipThread $r13;
        com.google.wave.api.Blip $r0, r10;
        com.google.wave.api.Wavelet r5;
        java.util.List $r8;
        java.util.Map $r6, $r11;
        java.lang.Object $r7;
        java.lang.String r1, r2, r3, r4, $r9, $r12;

        r5 := @parameter0: com.google.wave.api.Wavelet;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r0 = new com.google.wave.api.Blip;

        specialinvoke $r0.<com.google.wave.api.Blip: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.wave.api.Wavelet)>(r1, r2, r3, r4, r5);

        if r3 == null goto label1;

        $r6 = virtualinvoke r5.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r10 = (com.google.wave.api.Blip) $r7;

        if r10 == null goto label1;

        $r8 = virtualinvoke r10.<com.google.wave.api.Blip: java.util.List getChildBlipIds()>();

        $r9 = virtualinvoke $r0.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

     label1:
        $r11 = virtualinvoke r5.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        $r12 = virtualinvoke $r0.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r0);

        $r13 = virtualinvoke r5.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread getThread(java.lang.String)>(r4);

        if $r13 == null goto label2;

        virtualinvoke $r13.<com.google.wave.api.BlipThread: void appendBlip(com.google.wave.api.Blip)>($r0);

     label2:
        return $r0;
    }

    private static com.google.wave.api.Wavelet newWavelet(java.lang.String, java.util.Set, com.google.wave.api.OperationQueue)
    {
        java.lang.IllegalStateException $r28;
        java.lang.Object[] $r1, $r8, $r11;
        java.util.Random $r3, $r14;
        org.waveprotocol.wave.model.id.WaveletId $r10;
        java.util.HashMap $r29, $r30, $r31;
        java.lang.Integer $r4, $r15;
        com.google.wave.api.Wavelet $r34;
        com.google.wave.api.Blip $r35;
        java.util.ArrayList $r32;
        int $i0, $i1, $i3;
        java.lang.String r2, $r5, $r9, $r13, $r16;
        org.waveprotocol.wave.model.id.IdSerialiser $r0, $r7, $r12;
        org.waveprotocol.wave.model.id.WaveId $r6;
        org.waveprotocol.wave.model.id.InvalidIdException $r25;
        java.util.Set r27;
        com.google.wave.api.BlipThread $r33;
        com.google.wave.api.OperationQueue r23;

        r2 := @parameter0: java.lang.String;

        r27 := @parameter1: java.util.Set;

        r23 := @parameter2: com.google.wave.api.OperationQueue;

        if r27 != null goto label1;

        r27 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label1:
        $r0 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r3 = <com.google.wave.api.OperationQueue: java.util.Random ID_GENERATOR>;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s!TBD_%s", $r1);

        $r6 = interfaceinvoke $r0.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>($r5);

        $r7 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s!conv+root", $r8);

        $r10 = interfaceinvoke $r7.<org.waveprotocol.wave.model.id.IdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>($r9);

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid temporary id", $r25);

        throw $r28;

     label4:
        $r11 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r13 = interfaceinvoke $r12.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r10);

        $r11[0] = $r13;

        $r14 = <com.google.wave.api.OperationQueue: java.util.Random ID_GENERATOR>;

        $i1 = virtualinvoke $r14.<java.util.Random: int nextInt()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("TBD_%s_%s", $r11);

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        $r30 = new java.util.HashMap;

        specialinvoke $r30.<java.util.HashMap: void <init>()>();

        $r31 = new java.util.HashMap;

        specialinvoke $r31.<java.util.HashMap: void <init>()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r33 = new com.google.wave.api.BlipThread;

        $i3 = (int) -1;

        specialinvoke $r33.<com.google.wave.api.BlipThread: void <init>(java.lang.String,int,java.util.List,java.util.Map)>("", $i3, $r32, $r29);

        $r34 = new com.google.wave.api.Wavelet;

        specialinvoke $r34.<com.google.wave.api.Wavelet: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.BlipThread,java.util.Set,java.util.Map,java.util.Map,java.util.Map,com.google.wave.api.OperationQueue)>($r6, $r10, $r16, $r33, r27, $r30, $r29, $r31, r23);

        $r35 = new com.google.wave.api.Blip;

        specialinvoke $r35.<com.google.wave.api.Blip: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.wave.api.Wavelet)>($r16, "", null, "", $r34);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r35);

        return $r34;

        catch org.waveprotocol.wave.model.id.InvalidIdException from label1 to label2 with label3;
    }

    public void modifyParticipantRoleOfWavelet(com.google.wave.api.Wavelet, java.lang.String, java.lang.String)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r2;
        com.google.wave.api.OperationType $r5;
        com.google.wave.api.Wavelet r1;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6, $r9;
        java.lang.String r3, r7;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4, $r8;

        r0 := @this: com.google.wave.api.OperationQueue;

        r1 := @parameter0: com.google.wave.api.Wavelet;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r5 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType WAVELET_MODIFY_PARTICIPANT_ROLE>;

        $r2 = newarray (com.google.wave.api.OperationRequest$Parameter)[2];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PARTICIPANT_ID>;

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, r3);

        $r2[0] = $r6;

        $r8 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PARTICIPANT_ROLE>;

        $r9 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r8, r7);

        $r2[1] = $r9;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.Wavelet,com.google.wave.api.OperationRequest$Parameter[])>($r5, r1, $r2);

        return;
    }

    public void notifyRobotInformation(com.google.wave.api.ProtocolVersion, java.lang.String)
    {
        com.google.wave.api.OperationRequest$Parameter[] $r1;
        com.google.wave.api.OperationType $r3;
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r6, $r9;
        com.google.wave.api.ProtocolVersion r2;
        java.lang.String $r5, r7;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r4, $r8;

        r0 := @this: com.google.wave.api.OperationQueue;

        r2 := @parameter0: com.google.wave.api.ProtocolVersion;

        r7 := @parameter1: java.lang.String;

        $r3 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType ROBOT_NOTIFY>;

        $r1 = newarray (com.google.wave.api.OperationRequest$Parameter)[2];

        $r4 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty PROTOCOL_VERSION>;

        $r5 = virtualinvoke r2.<com.google.wave.api.ProtocolVersion: java.lang.String getVersionString()>();

        $r6 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r4, $r5);

        $r1[0] = $r6;

        $r8 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty CAPABILITIES_HASH>;

        $r9 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r8, r7);

        $r1[1] = $r9;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest prependOperation(com.google.wave.api.OperationType,org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String,com.google.wave.api.OperationRequest$Parameter[])>($r3, null, null, null, $r1);

        return;
    }

    public void fetchProfiles(com.google.wave.api.FetchProfilesRequest)
    {
        com.google.wave.api.OperationQueue r0;
        com.google.wave.api.OperationRequest$Parameter $r5;
        com.google.wave.api.OperationRequest$Parameter[] $r1;
        com.google.wave.api.FetchProfilesRequest r2;
        com.google.wave.api.OperationType $r4;
        com.google.wave.api.JsonRpcConstant$ParamsProperty $r3;

        r0 := @this: com.google.wave.api.OperationQueue;

        r2 := @parameter0: com.google.wave.api.FetchProfilesRequest;

        $r4 = <com.google.wave.api.OperationType: com.google.wave.api.OperationType ROBOT_FETCH_PROFILES>;

        $r1 = newarray (com.google.wave.api.OperationRequest$Parameter)[1];

        $r3 = <com.google.wave.api.JsonRpcConstant$ParamsProperty: com.google.wave.api.JsonRpcConstant$ParamsProperty FETCH_PROFILES_REQUEST>;

        $r5 = staticinvoke <com.google.wave.api.OperationRequest$Parameter: com.google.wave.api.OperationRequest$Parameter of(com.google.wave.api.JsonRpcConstant$ParamsProperty,java.lang.Object)>($r3, r2);

        $r1[0] = $r5;

        virtualinvoke r0.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationRequest appendOperation(com.google.wave.api.OperationType,com.google.wave.api.OperationRequest$Parameter[])>($r4, $r1);

        return;
    }

    static void <clinit>()
    {
        java.util.Random $r0;

        <com.google.wave.api.OperationQueue: java.lang.String OP_ID_FORMAT> = "op%d";

        <com.google.wave.api.OperationQueue: java.lang.String TEMP_WAVELET_ID_FORMAT> = "%s!conv+root";

        <com.google.wave.api.OperationQueue: java.lang.String TEMP_WAVE_ID_FORMAT> = "%s!TBD_%s";

        <com.google.wave.api.OperationQueue: java.lang.String TEMP_BLIP_ID_FORMAT> = "TBD_%s_%s";

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <com.google.wave.api.OperationQueue: java.util.Random ID_GENERATOR> = $r0;

        <com.google.wave.api.OperationQueue: long nextOpId> = 1L;

        return;
    }
}
