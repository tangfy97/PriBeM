public class com.mongodb.gridfs.GridFSInputFile extends com.mongodb.gridfs.GridFSFile
{
    final java.io.InputStream _in;
    boolean _saved;
    static com.mongodb.util.SimplePool _md5Pool;

    void <init>(com.mongodb.gridfs.GridFS, java.io.InputStream, java.lang.String)
    {
        java.util.Date $r5;
        com.mongodb.gridfs.GridFSInputFile r0;
        org.bson.types.ObjectId $r4;
        java.lang.String r3;
        com.mongodb.gridfs.GridFS r1;
        java.io.InputStream r2;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        r1 := @parameter0: com.mongodb.gridfs.GridFS;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.mongodb.gridfs.GridFSFile: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSInputFile: boolean _saved> = 0;

        r0.<com.mongodb.gridfs.GridFSInputFile: com.mongodb.gridfs.GridFS _fs> = r1;

        r0.<com.mongodb.gridfs.GridFSInputFile: java.io.InputStream _in> = r2;

        r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.String _filename> = r3;

        $r4 = new org.bson.types.ObjectId;

        specialinvoke $r4.<org.bson.types.ObjectId: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.Object _id> = $r4;

        r0.<com.mongodb.gridfs.GridFSInputFile: long _chunkSize> = 262144L;

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSInputFile: java.util.Date _uploadDate> = $r5;

        return;
    }

    public com.mongodb.DBObject getMetaData()
    {
        com.mongodb.DBObject $r1, $r2;
        com.mongodb.BasicDBObject $r3;
        com.mongodb.gridfs.GridFSInputFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        $r1 = r0.<com.mongodb.gridfs.GridFSInputFile: com.mongodb.DBObject _metadata>;

        if $r1 != null goto label1;

        $r3 = new com.mongodb.BasicDBObject;

        specialinvoke $r3.<com.mongodb.BasicDBObject: void <init>()>();

        r0.<com.mongodb.gridfs.GridFSInputFile: com.mongodb.DBObject _metadata> = $r3;

     label1:
        $r2 = r0.<com.mongodb.gridfs.GridFSInputFile: com.mongodb.DBObject _metadata>;

        return $r2;
    }

    public void setFilename(java.lang.String)
    {
        com.mongodb.gridfs.GridFSInputFile r0;
        java.lang.String r1;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        r1 := @parameter0: java.lang.String;

        r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.String _filename> = r1;

        return;
    }

    public void setContentType(java.lang.String)
    {
        com.mongodb.gridfs.GridFSInputFile r0;
        java.lang.String r1;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        r1 := @parameter0: java.lang.String;

        r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.String _contentType> = r1;

        return;
    }

    public void save()
    {
        com.mongodb.gridfs.GridFSInputFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        virtualinvoke r0.<com.mongodb.gridfs.GridFSInputFile: void save(int)>(262144);

        return;
    }

    public void save(int)
    {
        com.mongodb.MongoException $r2;
        int i0;
        com.mongodb.gridfs.GridFSInputFile r0;
        java.io.IOException $r1;
        boolean $z0;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        i0 := @parameter0: int;

        $z0 = r0.<com.mongodb.gridfs.GridFSInputFile: boolean _saved>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<com.mongodb.gridfs.GridFSInputFile: int saveChunks(int)>(i0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new com.mongodb.MongoException;

        specialinvoke $r2.<com.mongodb.MongoException: void <init>(java.lang.String,java.lang.Throwable)>("couldn\'t save chunks", $r1);

        throw $r2;

     label4:
        specialinvoke r0.<com.mongodb.gridfs.GridFSFile: void save()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int saveChunks() throws java.io.IOException
    {
        int $i0;
        com.mongodb.gridfs.GridFSInputFile r0;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        $i0 = virtualinvoke r0.<com.mongodb.gridfs.GridFSInputFile: int saveChunks(int)>(262144);

        return $i0;
    }

    public int saveChunks(int) throws java.io.IOException
    {
        byte[] r1, $r16, r22;
        com.mongodb.gridfs.GridFSInputFile r0;
        java.lang.Integer $r10;
        com.mongodb.util.SimplePool $r2, $r18;
        byte $b1;
        com.mongodb.DBObject $r13;
        boolean $z0;
        com.mongodb.gridfs.GridFS $r14;
        java.security.MessageDigest r4;
        long $l2, $l9, l10;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, i11, i12, $i13, $i14;
        java.lang.String $r17;
        double $d0;
        com.mongodb.BasicDBObjectBuilder $r7, $r9, $r11, $r12;
        com.mongodb.DBCollection $r15;
        java.lang.RuntimeException $r23, $r24, $r26;
        java.security.DigestInputStream $r25;
        java.lang.Object $r3, $r8;
        java.io.InputStream $r6;

        r0 := @this: com.mongodb.gridfs.GridFSInputFile;

        i0 := @parameter0: int;

        $z0 = r0.<com.mongodb.gridfs.GridFSInputFile: boolean _saved>;

        if $z0 == 0 goto label01;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>("already saved!");

        throw $r23;

     label01:
        $d0 = (double) i0;

        $b1 = $d0 cmpl 3500000.0;

        $i14 = (int) $b1;

        if $i14 <= 0 goto label02;

        $r24 = new java.lang.RuntimeException;

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>("chunkSize must be less than 3.5MiB!");

        throw $r24;

     label02:
        r1 = newarray (byte)[i0];

        l10 = 0L;

        i11 = 0;

        $r2 = <com.mongodb.gridfs.GridFSInputFile: com.mongodb.util.SimplePool _md5Pool>;

        $r3 = virtualinvoke $r2.<com.mongodb.util.SimplePool: java.lang.Object get()>();

        r4 = (java.security.MessageDigest) $r3;

        virtualinvoke r4.<java.security.MessageDigest: void reset()>();

        $r25 = new java.security.DigestInputStream;

        $r6 = r0.<com.mongodb.gridfs.GridFSInputFile: java.io.InputStream _in>;

        specialinvoke $r25.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r6, r4);

     label03:
        i12 = 0;

     label04:
        $i13 = lengthof r1;

        if i12 >= $i13 goto label07;

        $i6 = lengthof r1;

        $i7 = $i6 - i12;

        $i8 = virtualinvoke $r25.<java.security.DigestInputStream: int read(byte[],int,int)>(r1, i12, $i7);

        if $i8 != 0 goto label05;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>("i\'m doing something wrong");

        throw $r26;

     label05:
        if $i8 >= 0 goto label06;

        goto label07;

     label06:
        i12 = i12 + $i8;

        goto label04;

     label07:
        $l2 = (long) i12;

        $l9 = l10 + $l2;

        l10 = $l9;

        r22 = r1;

        $i3 = lengthof r1;

        if i12 == $i3 goto label08;

        r22 = newarray (byte)[i12];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r22, 0, i12);

     label08:
        $r7 = staticinvoke <com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder start()>();

        $r8 = r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.Object _id>;

        $r9 = virtualinvoke $r7.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("files_id", $r8);

        $i4 = i11;

        i11 = i11 + 1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r11 = virtualinvoke $r9.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("n", $r10);

        $r12 = virtualinvoke $r11.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("data", r22);

        $r13 = virtualinvoke $r12.<com.mongodb.BasicDBObjectBuilder: com.mongodb.DBObject get()>();

        $r14 = r0.<com.mongodb.gridfs.GridFSInputFile: com.mongodb.gridfs.GridFS _fs>;

        $r15 = $r14.<com.mongodb.gridfs.GridFS: com.mongodb.DBCollection _chunkCollection>;

        virtualinvoke $r15.<com.mongodb.DBCollection: com.mongodb.WriteResult save(com.mongodb.DBObject)>($r13);

        $i5 = lengthof r1;

        if i12 >= $i5 goto label09;

        goto label10;

     label09:
        goto label03;

     label10:
        $r16 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>();

        $r17 = staticinvoke <com.mongodb.util.Util: java.lang.String toHex(byte[])>($r16);

        r0.<com.mongodb.gridfs.GridFSInputFile: java.lang.String _md5> = $r17;

        $r18 = <com.mongodb.gridfs.GridFSInputFile: com.mongodb.util.SimplePool _md5Pool>;

        virtualinvoke $r18.<com.mongodb.util.SimplePool: void done(java.lang.Object)>(r4);

        r0.<com.mongodb.gridfs.GridFSInputFile: long _length> = $l9;

        r0.<com.mongodb.gridfs.GridFSInputFile: boolean _saved> = 1;

        return i11;
    }

    static void <clinit>()
    {
        int $i1;
        com.mongodb.gridfs.GridFSInputFile$1 $r1;

        $r1 = new com.mongodb.gridfs.GridFSInputFile$1;

        $i1 = (int) -1;

        specialinvoke $r1.<com.mongodb.gridfs.GridFSInputFile$1: void <init>(java.lang.String,int,int,boolean,boolean)>("md5", 10, $i1, 0, 0);

        <com.mongodb.gridfs.GridFSInputFile: com.mongodb.util.SimplePool _md5Pool> = $r1;

        return;
    }
}
