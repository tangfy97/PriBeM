public abstract class org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.ReadableBlipData
{

    public void <init>()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate();

    public org.waveprotocol.wave.model.wave.data.ReadableWaveletData getWavelet()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getWavelet()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getAuthor()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.ParticipantId getAuthor()>();

        return $r2;
    }

    public java.util.Set getContributors()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: java.util.Set getContributors()>();

        return $r2;
    }

    public long getLastModifiedTime()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $l0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: long getLastModifiedTime()>();

        return $l0;
    }

    public long getLastModifiedVersion()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        long $l0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $l0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: long getLastModifiedVersion()>();

        return $l0;
    }

    public org.waveprotocol.wave.model.wave.data.DocumentOperationSink getContent()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        org.waveprotocol.wave.model.wave.data.DocumentOperationSink $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: org.waveprotocol.wave.model.wave.data.DocumentOperationSink getContent()>();

        return $r2;
    }

    public java.lang.String getId()
    {
        org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableBlipData: org.waveprotocol.wave.model.wave.data.ReadableBlipData delegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.wave.data.ReadableBlipData: java.lang.String getId()>();

        return $r2;
    }
}
