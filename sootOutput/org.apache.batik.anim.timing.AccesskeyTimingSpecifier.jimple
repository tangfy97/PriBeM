public class org.apache.batik.anim.timing.AccesskeyTimingSpecifier extends org.apache.batik.anim.timing.EventLikeTimingSpecifier implements org.w3c.dom.events.EventListener
{
    protected char accesskey;
    protected boolean isSVG12AccessKey;
    protected java.lang.String keyName;

    public void <init>(org.apache.batik.anim.timing.TimedElement, boolean, float, char)
    {
        org.apache.batik.anim.timing.TimedElement r1;
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        float f0;
        char c0;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        c0 := @parameter3: char;

        specialinvoke r0.<org.apache.batik.anim.timing.EventLikeTimingSpecifier: void <init>(org.apache.batik.anim.timing.TimedElement,boolean,float)>(r1, z0, f0);

        r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: char accesskey> = c0;

        return;
    }

    public void <init>(org.apache.batik.anim.timing.TimedElement, boolean, float, java.lang.String)
    {
        org.apache.batik.anim.timing.TimedElement r1;
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        float f0;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.anim.timing.EventLikeTimingSpecifier: void <init>(org.apache.batik.anim.timing.TimedElement,boolean,float)>(r1, z0, f0);

        r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: boolean isSVG12AccessKey> = 1;

        r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: java.lang.String keyName> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        byte $b1, $b2;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13, $r14, $r15;
        boolean $z0;
        char $c0;
        float $f0, $f1;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        $z0 = r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: boolean isSVG12AccessKey>;

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("accessKey(");

        $r9 = r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: java.lang.String keyName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $f1 = r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $b2 = $f1 cmpl 0.0F;

        if $b2 == 0 goto label1;

        $r14 = specialinvoke r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: java.lang.String toString()>();

        goto label2;

     label1:
        $r14 = "";

     label2:
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label3:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("accesskey(");

        $c0 = r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: char accesskey>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $f0 = r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label4;

        $r15 = specialinvoke r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: java.lang.String toString()>();

        goto label5;

     label4:
        $r15 = "";

     label5:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public void initialize()
    {
        org.apache.batik.anim.timing.TimedElement $r1, $r3;
        org.w3c.dom.events.EventTarget $r2, $r4;
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        boolean $z0;
        org.apache.batik.dom.events.NodeEventTarget r5;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        $z0 = r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: boolean isSVG12AccessKey>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r4 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getRootEventTarget()>();

        r5 = (org.apache.batik.dom.events.NodeEventTarget) $r4;

        interfaceinvoke r5.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "keydown", r0, 0, null);

        goto label2;

     label1:
        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getRootEventTarget()>();

        interfaceinvoke $r2.<org.w3c.dom.events.EventTarget: void addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("keypress", r0, 0);

     label2:
        return;
    }

    public void deinitialize()
    {
        org.apache.batik.anim.timing.TimedElement $r1, $r3;
        org.w3c.dom.events.EventTarget $r2, $r4;
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        boolean $z0;
        org.apache.batik.dom.events.NodeEventTarget r5;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        $z0 = r0.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: boolean isSVG12AccessKey>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r4 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getRootEventTarget()>();

        r5 = (org.apache.batik.dom.events.NodeEventTarget) $r4;

        interfaceinvoke r5.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "keydown", r0, 0);

        goto label2;

     label1:
        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: org.w3c.dom.events.EventTarget getRootEventTarget()>();

        interfaceinvoke $r2.<org.w3c.dom.events.EventTarget: void removeEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)>("keypress", r0, 0);

     label2:
        return;
    }

    public void handleEvent(org.w3c.dom.events.Event)
    {
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r3;
        char $c0, $c2;
        org.w3c.dom.events.KeyboardEvent r7;
        org.apache.batik.anim.timing.TimedElement $r5;
        org.w3c.dom.events.Event r0;
        int $i1, $i3, $i4;
        org.apache.batik.dom.events.DOMKeyEvent r6;
        java.lang.String $r1, $r2, $r4;
        boolean $z0, z1;

        r3 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        r0 := @parameter0: org.w3c.dom.events.Event;

        $r1 = interfaceinvoke r0.<org.w3c.dom.events.Event: java.lang.String getType()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(3);

        $i3 = (int) $c0;

        if $i3 != 112 goto label3;

        r6 = (org.apache.batik.dom.events.DOMKeyEvent) r0;

        $i1 = virtualinvoke r6.<org.apache.batik.dom.events.DOMKeyEvent: int getCharCode()>();

        $c2 = r3.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: char accesskey>;

        $i4 = (int) $c2;

        if $i1 != $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        goto label4;

     label3:
        r7 = (org.w3c.dom.events.KeyboardEvent) r0;

        $r2 = interfaceinvoke r7.<org.w3c.dom.events.KeyboardEvent: java.lang.String getKeyIdentifier()>();

        $r4 = r3.<org.apache.batik.anim.timing.AccesskeyTimingSpecifier: java.lang.String keyName>;

        z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label4:
        if z1 == 0 goto label5;

        $r5 = r3.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: void eventOccurred(org.apache.batik.anim.timing.TimingSpecifier,org.w3c.dom.events.Event)>(r3, r0);

     label5:
        return;
    }

    public void resolve(org.w3c.dom.events.Event)
    {
        org.apache.batik.anim.timing.AccesskeyTimingSpecifier r0;
        org.apache.batik.anim.timing.InstanceTime $r4;
        long $l0;
        org.apache.batik.anim.timing.TimedDocumentRoot $r2;
        org.apache.batik.anim.timing.TimedElement $r1, $r5;
        org.w3c.dom.events.Event r3;
        float $f0, $f1, $f2;
        boolean $z0;

        r0 := @this: org.apache.batik.anim.timing.AccesskeyTimingSpecifier;

        r3 := @parameter0: org.w3c.dom.events.Event;

        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $r2 = virtualinvoke $r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedDocumentRoot getRoot()>();

        $l0 = interfaceinvoke r3.<org.w3c.dom.events.Event: long getTimeStamp()>();

        $f0 = virtualinvoke $r2.<org.apache.batik.anim.timing.TimedDocumentRoot: float convertEpochTime(long)>($l0);

        $r4 = new org.apache.batik.anim.timing.InstanceTime;

        $f1 = r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $f2 = $f0 + $f1;

        specialinvoke $r4.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(r0, $f2, 1);

        $r5 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = r0.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r4, $z0);

        return;
    }
}
