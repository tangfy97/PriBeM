public class com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.assembler.Mode r5;
        com.hp.hpl.jena.assembler.RuleSet $r4;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource RuleSet>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: com.hp.hpl.jena.assembler.RuleSet createRuleSet(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r3, r1);

        return $r4;
    }

    public static com.hp.hpl.jena.assembler.RuleSet createRuleSet(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        java.util.List $r3;
        com.hp.hpl.jena.assembler.RuleSet $r4;
        com.hp.hpl.jena.rdf.model.Resource r2;
        java.util.ArrayList $r0;

        r1 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: java.util.List addRules(java.util.List,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>($r0, r1, r2);

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.RuleSet: com.hp.hpl.jena.assembler.RuleSet create(java.util.List)>($r3);

        return $r4;
    }

    public static java.util.List addRules(java.util.List, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r2;
        java.util.List r1;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: void addLiteralRules(com.hp.hpl.jena.rdf.model.Resource,java.util.List)>(r0, r1);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: void addIndirectRules(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource,java.util.List)>(r2, r0, r1);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: void addExternalRules(com.hp.hpl.jena.rdf.model.Resource,java.util.List)>(r0, r1);

        return r1;
    }

    private static void addIndirectRules(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, java.util.List)
    {
        com.hp.hpl.jena.assembler.Assembler r6;
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r4;
        java.util.List r5, $r9;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.Object $r7;
        com.hp.hpl.jena.assembler.RuleSet $r8;
        boolean $z0;

        r6 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter2: java.util.List;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property rules>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r7 = interfaceinvoke r6.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r4);

        $r8 = (com.hp.hpl.jena.assembler.RuleSet) $r7;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.assembler.RuleSet: java.util.List getRules()>();

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label1;

     label2:
        return;
    }

    private static void addExternalRules(com.hp.hpl.jena.rdf.model.Resource, java.util.List)
    {
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r4;
        java.util.List r5, $r7;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter1: java.util.List;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property rulesFrom>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r7 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Rule: java.util.List rulesFromURL(java.lang.String)>($r6);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        goto label1;

     label2:
        return;
    }

    private static void addLiteralRules(com.hp.hpl.jena.rdf.model.Resource, java.util.List)
    {
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.util.List r5, $r6;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r5 := @parameter1: java.util.List;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property rule>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.RuleSetAssembler: java.lang.String getString(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r6 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Rule: java.util.List parseRules(java.lang.String)>($r4);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label1;

     label2:
        return;
    }
}
