public class groovy.xml.dom.DOMUtil extends java.lang.Object
{

    public void <init>()
    {
        groovy.xml.dom.DOMUtil r0;

        r0 := @this: groovy.xml.dom.DOMUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String serialize(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        java.io.StringWriter $r0;
        javax.xml.transform.stream.StreamResult $r2;
        java.lang.String $r3;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r2 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r2.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r0);

        staticinvoke <groovy.xml.dom.DOMUtil: void serialize(org.w3c.dom.Element,javax.xml.transform.stream.StreamResult)>(r1, $r2);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static void serialize(org.w3c.dom.Element, java.io.OutputStream)
    {
        java.io.OutputStream r2;
        org.w3c.dom.Element r0;
        javax.xml.transform.stream.StreamResult $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.io.OutputStream;

        $r1 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r1.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r2);

        staticinvoke <groovy.xml.dom.DOMUtil: void serialize(org.w3c.dom.Element,javax.xml.transform.stream.StreamResult)>(r0, $r1);

        return;
    }

    private static void serialize(org.w3c.dom.Element, javax.xml.transform.stream.StreamResult)
    {
        javax.xml.transform.Transformer $r2;
        javax.xml.transform.dom.DOMSource $r3;
        org.w3c.dom.Element r4;
        javax.xml.transform.TransformerException $r6;
        java.io.StringWriter $r1;
        javax.xml.transform.stream.StreamResult r5;
        javax.xml.transform.TransformerFactory $r0;

        r4 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: javax.xml.transform.stream.StreamResult;

        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r2.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        $r3 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r3.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r4);

        virtualinvoke $r2.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r3, r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }
}
