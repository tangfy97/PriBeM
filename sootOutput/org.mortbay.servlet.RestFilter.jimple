public class org.mortbay.servlet.RestFilter extends java.lang.Object implements javax.servlet.Filter
{
    private static final java.lang.String HTTP_METHOD_PUT;
    private static final java.lang.String HTTP_METHOD_GET;
    private static final java.lang.String HTTP_METHOD_DELETE;
    private javax.servlet.FilterConfig filterConfig;
    private long _maxPutSize;

    public void <init>()
    {
        org.mortbay.servlet.RestFilter r0;

        r0 := @this: org.mortbay.servlet.RestFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.UnavailableException
    {
        org.mortbay.servlet.RestFilter r0;
        javax.servlet.FilterConfig r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: org.mortbay.servlet.RestFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        r0.<org.mortbay.servlet.RestFilter: javax.servlet.FilterConfig filterConfig> = r1;

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("maxPutSize");

        if $r2 == null goto label1;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        r0.<org.mortbay.servlet.RestFilter: long _maxPutSize> = $l0;

     label1:
        return;
    }

    private java.io.File locateFile(javax.servlet.http.HttpServletRequest)
    {
        org.mortbay.servlet.RestFilter r1;
        java.io.File $r0;
        javax.servlet.http.HttpServletRequest r4;
        javax.servlet.FilterConfig $r2;
        javax.servlet.ServletContext $r3;
        java.lang.String $r5, $r6, $r7, $r8;

        r1 := @this: org.mortbay.servlet.RestFilter;

        r4 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r0 = new java.io.File;

        $r2 = r1.<org.mortbay.servlet.RestFilter: javax.servlet.FilterConfig filterConfig>;

        $r3 = interfaceinvoke $r2.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        $r5 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        $r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r7 = staticinvoke <org.mortbay.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r5, $r6);

        $r8 = interfaceinvoke $r3.<javax.servlet.ServletContext: java.lang.String getRealPath(java.lang.String)>($r7);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r8);

        return $r0;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.ServletRequest r0;
        javax.servlet.FilterChain r1;
        org.mortbay.servlet.RestFilter r8;
        javax.servlet.http.HttpServletResponse r4;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.ServletResponse r2;
        java.lang.String $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r8 := @this: org.mortbay.servlet.RestFilter;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        r1 := @parameter2: javax.servlet.FilterChain;

        $z0 = r0 instanceof javax.servlet.http.HttpServletRequest;

        if $z0 == 0 goto label1;

        $z1 = r2 instanceof javax.servlet.http.HttpServletResponse;

        if $z1 != 0 goto label2;

     label1:
        interfaceinvoke r1.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r2);

        return;

     label2:
        r3 = (javax.servlet.http.HttpServletRequest) r0;

        r4 = (javax.servlet.http.HttpServletResponse) r2;

        $r5 = interfaceinvoke r3.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z2 == 0 goto label3;

        interfaceinvoke r1.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r3, r4);

        goto label6;

     label3:
        $r6 = interfaceinvoke r3.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("PUT");

        if $z3 == 0 goto label4;

        virtualinvoke r8.<org.mortbay.servlet.RestFilter: void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r3, r4);

        goto label6;

     label4:
        $r7 = interfaceinvoke r3.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("DELETE");

        if $z4 == 0 goto label5;

        virtualinvoke r8.<org.mortbay.servlet.RestFilter: void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r3, r4);

        goto label6;

     label5:
        interfaceinvoke r1.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r3, r4);

     label6:
        return;
    }

    protected void doPut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Throwable $r7;
        javax.servlet.ServletInputStream $r4, $r6;
        long $l0, $l3, $l4, $l6;
        javax.servlet.http.HttpServletRequest r1;
        byte $b1, $b5;
        int $i2, $i7, $i8;
        boolean $z0, $z1;
        org.mortbay.servlet.RestFilter r0;
        javax.servlet.http.HttpServletResponse r5;
        java.io.FileOutputStream $r8;
        java.io.File $r2;

        r0 := @this: org.mortbay.servlet.RestFilter;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r2 = specialinvoke r0.<org.mortbay.servlet.RestFilter: java.io.File locateFile(javax.servlet.http.HttpServletRequest)>(r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label01;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        return;

     label01:
        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label02:
        $l0 = r0.<org.mortbay.servlet.RestFilter: long _maxPutSize>;

        $b1 = $l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label05;

        $i2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: int getContentLength()>();

        $l4 = (long) $i2;

        $l3 = r0.<org.mortbay.servlet.RestFilter: long _maxPutSize>;

        $b5 = $l4 cmp $l3;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label04;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        goto label11;

     label03:
        return;

     label04:
        $r6 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $l6 = r0.<org.mortbay.servlet.RestFilter: long _maxPutSize>;

        staticinvoke <org.mortbay.util.IO: void copy(java.io.InputStream,java.io.OutputStream,long)>($r6, $r8, $l6);

        goto label06;

     label05:
        $r4 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        staticinvoke <org.mortbay.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r4, $r8);

     label06:
        goto label12;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        goto label13;

     label09:
        throw $r7;

     label10:
        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(204);

        return;

     label11:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        goto label03;

     label12:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        goto label07;

     label13:
        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        goto label09;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void doDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        org.mortbay.servlet.RestFilter r0;
        javax.servlet.http.HttpServletResponse r3;
        java.io.File $r2;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.servlet.RestFilter;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r2 = specialinvoke r0.<org.mortbay.servlet.RestFilter: java.io.File locateFile(javax.servlet.http.HttpServletRequest)>(r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int)>(404);

        return;

     label1:
        $z1 = staticinvoke <org.mortbay.util.IO: boolean delete(java.io.File)>($r2);

        if $z1 == 0 goto label2;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(204);

        goto label3;

     label2:
        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int)>(500);

     label3:
        return;
    }

    public void destroy()
    {
        org.mortbay.servlet.RestFilter r0;

        r0 := @this: org.mortbay.servlet.RestFilter;

        return;
    }

    public static void <clinit>()
    {
        <org.mortbay.servlet.RestFilter: java.lang.String HTTP_METHOD_DELETE> = "DELETE";

        <org.mortbay.servlet.RestFilter: java.lang.String HTTP_METHOD_GET> = "GET";

        <org.mortbay.servlet.RestFilter: java.lang.String HTTP_METHOD_PUT> = "PUT";

        return;
    }
}
