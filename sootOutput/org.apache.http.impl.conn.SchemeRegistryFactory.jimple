public final class org.apache.http.impl.conn.SchemeRegistryFactory extends java.lang.Object
{

    public void <init>()
    {
        org.apache.http.impl.conn.SchemeRegistryFactory r0;

        r0 := @this: org.apache.http.impl.conn.SchemeRegistryFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.http.conn.scheme.SchemeRegistry createDefault()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r2;
        org.apache.http.conn.scheme.SchemeRegistry $r0;
        org.apache.http.conn.scheme.Scheme $r1, $r3;
        org.apache.http.conn.ssl.SSLSocketFactory $r4;

        $r0 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r1 = new org.apache.http.conn.scheme.Scheme;

        $r2 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r1.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)>("http", 80, $r2);

        virtualinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r1);

        $r3 = new org.apache.http.conn.scheme.Scheme;

        $r4 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke $r3.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)>("https", 443, $r4);

        virtualinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r3);

        return $r0;
    }

    public static org.apache.http.conn.scheme.SchemeRegistry createSystemDefault()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r2;
        org.apache.http.conn.scheme.SchemeRegistry $r0;
        org.apache.http.conn.scheme.Scheme $r1, $r3;
        org.apache.http.conn.ssl.SSLSocketFactory $r4;

        $r0 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r1 = new org.apache.http.conn.scheme.Scheme;

        $r2 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r1.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)>("http", 80, $r2);

        virtualinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r1);

        $r3 = new org.apache.http.conn.scheme.Scheme;

        $r4 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSystemSocketFactory()>();

        specialinvoke $r3.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)>("https", 443, $r4);

        virtualinvoke $r0.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r3);

        return $r0;
    }
}
