public class org.springframework.beans.factory.config.PropertyPlaceholderConfigurer extends org.springframework.beans.factory.config.PropertyResourceConfigurer implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.BeanFactoryAware
{
    public static final java.lang.String DEFAULT_PLACEHOLDER_PREFIX;
    public static final java.lang.String DEFAULT_PLACEHOLDER_SUFFIX;
    public static final java.lang.String DEFAULT_VALUE_SEPARATOR;
    public static final int SYSTEM_PROPERTIES_MODE_NEVER;
    public static final int SYSTEM_PROPERTIES_MODE_FALLBACK;
    public static final int SYSTEM_PROPERTIES_MODE_OVERRIDE;
    private static final org.springframework.core.Constants constants;
    private java.lang.String placeholderPrefix;
    private java.lang.String placeholderSuffix;
    private java.lang.String valueSeparator;
    private int systemPropertiesMode;
    private boolean searchSystemEnvironment;
    private boolean ignoreUnresolvablePlaceholders;
    private java.lang.String nullValue;
    private java.lang.String beanName;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    static void <clinit>()
    {
        org.springframework.core.Constants $r0;

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int SYSTEM_PROPERTIES_MODE_OVERRIDE> = 2;

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int SYSTEM_PROPERTIES_MODE_FALLBACK> = 1;

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int SYSTEM_PROPERTIES_MODE_NEVER> = 0;

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String DEFAULT_VALUE_SEPARATOR> = ":";

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String DEFAULT_PLACEHOLDER_SUFFIX> = "}";

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String DEFAULT_PLACEHOLDER_PREFIX> = "${";

        $r0 = new org.springframework.core.Constants;

        specialinvoke $r0.<org.springframework.core.Constants: void <init>(java.lang.Class)>(class "Lorg/springframework/beans/factory/config/PropertyPlaceholderConfigurer;");

        <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.springframework.core.Constants constants> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        specialinvoke r0.<org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>();

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderPrefix> = "${";

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderSuffix> = "}";

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String valueSeparator> = ":";

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int systemPropertiesMode> = 1;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean searchSystemEnvironment> = 1;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean ignoreUnresolvablePlaceholders> = 0;

        return;
    }

    public void setPlaceholderPrefix(java.lang.String)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderPrefix> = r1;

        return;
    }

    public void setPlaceholderSuffix(java.lang.String)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderSuffix> = r1;

        return;
    }

    public void setValueSeparator(java.lang.String)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String valueSeparator> = r1;

        return;
    }

    public void setSystemPropertiesModeName(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        int $i0;
        org.springframework.core.Constants $r2;
        java.lang.String r1;
        java.lang.Number $r3;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.springframework.core.Constants constants>;

        $r3 = virtualinvoke $r2.<org.springframework.core.Constants: java.lang.Number asNumber(java.lang.String)>(r1);

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int systemPropertiesMode> = $i0;

        return;
    }

    public void setSystemPropertiesMode(int)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        int i0;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        i0 := @parameter0: int;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int systemPropertiesMode> = i0;

        return;
    }

    public void setSearchSystemEnvironment(boolean)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean searchSystemEnvironment> = z0;

        return;
    }

    public void setIgnoreUnresolvablePlaceholders(boolean)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean ignoreUnresolvablePlaceholders> = z0;

        return;
    }

    public void setNullValue(java.lang.String)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String nullValue> = r1;

        return;
    }

    public void setBeanName(java.lang.String)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String beanName> = r1;

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    protected void processProperties(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.Properties) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r1;
        java.lang.String[] $r5;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r4;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver $r0;
        int i0, i1;
        org.springframework.beans.factory.config.BeanDefinition $r8;
        java.lang.String r6, $r7, $r12, $r13;
        boolean $z0, $z1;
        java.util.Properties r2;
        org.springframework.beans.factory.BeanDefinitionStoreException $r11;
        java.lang.Exception $r10;
        org.springframework.beans.factory.BeanFactory $r9;
        org.springframework.beans.factory.config.BeanDefinitionVisitor $r3;

        r1 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r4 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        r2 := @parameter1: java.util.Properties;

        $r0 = new org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver;

        specialinvoke $r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver: void <init>(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer,java.util.Properties)>(r1, r2);

        $r3 = new org.springframework.beans.factory.config.BeanDefinitionVisitor;

        specialinvoke $r3.<org.springframework.beans.factory.config.BeanDefinitionVisitor: void <init>(org.springframework.util.StringValueResolver)>($r0);

        $r5 = interfaceinvoke r4.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: java.lang.String[] getBeanDefinitionNames()>();

        i0 = lengthof $r5;

        i1 = 0;

        goto label7;

     label1:
        r6 = $r5[i1];

        $r7 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String beanName>;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r9 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.springframework.beans.factory.BeanFactory beanFactory>;

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label6;

     label2:
        $r8 = interfaceinvoke r4.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>(r6);

     label3:
        virtualinvoke $r3.<org.springframework.beans.factory.config.BeanDefinitionVisitor: void visitBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)>($r8);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        $r12 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getResourceDescription()>();

        $r13 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r11.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r12, r6, $r13);

        throw $r11;

     label6:
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label1;

        interfaceinvoke r4.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void resolveAliases(org.springframework.util.StringValueResolver)>($r0);

        interfaceinvoke r4.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void addEmbeddedValueResolver(org.springframework.util.StringValueResolver)>($r0);

        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected java.lang.String resolvePlaceholder(java.lang.String, java.util.Properties, int)
    {
        java.util.Properties r2;
        int i0;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String r1, r3;

        r0 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Properties;

        i0 := @parameter2: int;

        r3 = null;

        if i0 != 2 goto label1;

        r3 = virtualinvoke r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String resolveSystemProperty(java.lang.String)>(r1);

     label1:
        if r3 != null goto label2;

        r3 = virtualinvoke r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String resolvePlaceholder(java.lang.String,java.util.Properties)>(r1, r2);

     label2:
        if r3 != null goto label3;

        if i0 != 1 goto label3;

        r3 = virtualinvoke r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String resolveSystemProperty(java.lang.String)>(r1);

     label3:
        return r3;
    }

    protected java.lang.String resolvePlaceholder(java.lang.String, java.util.Properties)
    {
        java.util.Properties r0;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r3;
        java.lang.String r1, $r2;

        r3 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Properties;

        $r2 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        return $r2;
    }

    protected java.lang.String resolveSystemProperty(java.lang.String)
    {
        java.lang.Throwable $r3;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r2;
        org.apache.commons.logging.Log $r4, $r6;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        java.lang.String r0, $r1, $r10, r11;
        boolean $z0, $z1;

        r2 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        r11 = $r1;

        if $r1 != null goto label2;

        $z0 = r2.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean searchSystemEnvironment>;

        if $z0 == 0 goto label2;

        r11 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r0);

     label2:
        return r11;

     label3:
        $r3 := @caughtexception;

        $r4 = r2.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label4;

        $r6 = r2.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: org.apache.commons.logging.Log logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not access system property \'");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

     label4:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected java.lang.String parseStringValue(java.lang.String, java.util.Properties, java.util.Set)
    {
        org.springframework.util.PropertyPlaceholderHelper $r0;
        java.util.Properties r6;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r1;
        java.util.Set r9;
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PropertyPlaceholderConfigurerResolver $r5;
        java.lang.String $r2, $r3, $r4, r7, $r8;
        boolean $z0;

        r1 := @this: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        r7 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Properties;

        r9 := @parameter2: java.util.Set;

        $r0 = new org.springframework.util.PropertyPlaceholderHelper;

        $r4 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderPrefix>;

        $r3 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderSuffix>;

        $r2 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String valueSeparator>;

        $z0 = r1.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean ignoreUnresolvablePlaceholders>;

        specialinvoke $r0.<org.springframework.util.PropertyPlaceholderHelper: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>($r4, $r3, $r2, $z0);

        $r5 = new org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PropertyPlaceholderConfigurerResolver;

        specialinvoke $r5.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PropertyPlaceholderConfigurerResolver: void <init>(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer,java.util.Properties,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PropertyPlaceholderConfigurerResolver)>(r1, r6, null);

        $r8 = virtualinvoke $r0.<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver)>(r7, $r5);

        return $r8;
    }

    static java.lang.String access$0(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $r1 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderPrefix>;

        return $r1;
    }

    static java.lang.String access$1(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $r1 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String placeholderSuffix>;

        return $r1;
    }

    static java.lang.String access$2(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $r1 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String valueSeparator>;

        return $r1;
    }

    static boolean access$3(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $z0 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: boolean ignoreUnresolvablePlaceholders>;

        return $z0;
    }

    static java.lang.String access$4(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        java.lang.String $r1;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $r1 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String nullValue>;

        return $r1;
    }

    static int access$5(org.springframework.beans.factory.config.PropertyPlaceholderConfigurer)
    {
        org.springframework.beans.factory.config.PropertyPlaceholderConfigurer r0;
        int $i0;

        r0 := @parameter0: org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

        $i0 = r0.<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: int systemPropertiesMode>;

        return $i0;
    }
}
