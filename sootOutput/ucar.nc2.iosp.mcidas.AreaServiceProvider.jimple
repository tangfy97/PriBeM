public class ucar.nc2.iosp.mcidas.AreaServiceProvider extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    protected ucar.nc2.iosp.mcidas.AreaReader areaReader;

    public void <init>()
    {
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r0;
        ucar.nc2.iosp.mcidas.AreaServiceProvider r1;
        boolean $z0;

        r1 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = staticinvoke <ucar.nc2.iosp.mcidas.AreaReader: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r0);

        return $z0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        return "McIDASArea";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        return "McIDAS area file";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r2;
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;
        java.lang.Exception $r6;
        ucar.nc2.iosp.mcidas.AreaReader $r1, $r4, $r5;
        ucar.nc2.util.CancelTask r7;
        ucar.nc2.NetcdfFile r3;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r3 := @parameter1: ucar.nc2.NetcdfFile;

        r7 := @parameter2: ucar.nc2.util.CancelTask;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader>;

        if $r1 != null goto label1;

        $r5 = new ucar.nc2.iosp.mcidas.AreaReader;

        specialinvoke $r5.<ucar.nc2.iosp.mcidas.AreaReader: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader> = $r5;

     label1:
        $r4 = r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader>;

        virtualinvoke $r4.<ucar.nc2.iosp.mcidas.AreaReader: boolean init(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile)>(r2, r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.iosp.mcidas.AreaReader $r3;
        ucar.ma2.Section r2;
        ucar.nc2.Variable r1;
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;
        ucar.ma2.Array $r4;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        r1 := @parameter0: ucar.nc2.Variable;

        r2 := @parameter1: ucar.ma2.Section;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader>;

        $r4 = virtualinvoke $r3.<ucar.nc2.iosp.mcidas.AreaReader: ucar.ma2.Array readVariable(ucar.nc2.Variable,ucar.ma2.Section)>(r1, r2);

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $r4;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.iosp.mcidas.AreaReader $r1;
        ucar.nc2.iosp.mcidas.AreaServiceProvider r0;

        r0 := @this: ucar.nc2.iosp.mcidas.AreaServiceProvider;

        $r1 = r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader>;

        if $r1 == null goto label1;

        r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: ucar.nc2.iosp.mcidas.AreaReader areaReader> = null;

     label1:
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.mcidas.AreaServiceProvider$MakeNetcdfFile $r4;
        java.lang.String[] r2;
        ucar.nc2.iosp.mcidas.AreaServiceProvider $r0;
        int $i0;
        java.lang.String $r3, $r5, $r6;

        r2 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.mcidas.AreaServiceProvider;

        specialinvoke $r0.<ucar.nc2.iosp.mcidas.AreaServiceProvider: void <init>()>();

        $r1 = new ucar.unidata.io.RandomAccessFile;

        $r3 = r2[0];

        specialinvoke $r1.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>($r3, "r", 2048);

        $r4 = new ucar.nc2.iosp.mcidas.AreaServiceProvider$MakeNetcdfFile;

        $r5 = r2[0];

        specialinvoke $r4.<ucar.nc2.iosp.mcidas.AreaServiceProvider$MakeNetcdfFile: void <init>(ucar.nc2.iosp.IOServiceProvider,ucar.unidata.io.RandomAccessFile,java.lang.String,ucar.nc2.util.CancelTask)>($r0, $r1, $r5, null);

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $r6 = r2[1];

        staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String)>($r4, $r6);

     label1:
        return;
    }
}
