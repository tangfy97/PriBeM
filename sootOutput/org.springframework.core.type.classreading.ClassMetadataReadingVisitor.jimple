class org.springframework.core.type.classreading.ClassMetadataReadingVisitor extends java.lang.Object implements org.springframework.asm.ClassVisitor, org.springframework.core.type.ClassMetadata
{
    private java.lang.String className;
    private boolean isInterface;
    private boolean isAbstract;
    private boolean isFinal;
    private java.lang.String enclosingClassName;
    private boolean independentInnerClass;
    private java.lang.String superClassName;
    private java.lang.String[] interfaces;

    void <init>()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r4, $r5, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String r1, $r2, r3, $r6, $r8, $r9, r10;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        i6 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>(r1);

        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String className> = $r2;

        $i1 = i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isInterface> = $z0;

        $i2 = i0 & 1024;

        if $i2 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isAbstract> = $z1;

        $i3 = i0 & 16;

        if $i3 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isFinal> = $z2;

        if r3 == null goto label7;

        $r9 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>(r3);

        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String superClassName> = $r9;

     label7:
        $i4 = lengthof r4;

        $r5 = newarray (java.lang.String)[$i4];

        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String[] interfaces> = $r5;

        i7 = 0;

        goto label9;

     label8:
        $r7 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String[] interfaces>;

        $r6 = r4[i7];

        $r8 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>($r6);

        $r7[i7] = $r8;

        i7 = i7 + 1;

     label9:
        $i5 = lengthof r4;

        if i7 < $i5 goto label8;

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String r1, $r2, r3, r4;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>(r1);

        r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String enclosingClassName> = $r2;

        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r0, r2, $r3, $r4, $r5, r6;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r1;
        boolean $z0, $z1;

        r1 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        if r0 == null goto label3;

        $r3 = r1.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String className>;

        $r4 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertResourcePathToClassName(java.lang.String)>(r0);

        r1.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String enclosingClassName> = $r5;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r1.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean independentInnerClass> = $z1;

     label3:
        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.springframework.asm.commons.EmptyVisitor $r0;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r1;
        java.lang.String r2;
        boolean z0;

        r1 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.springframework.asm.commons.EmptyVisitor;

        specialinvoke $r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        return $r0;
    }

    public void visitAttribute(org.springframework.asm.Attribute)
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        org.springframework.asm.Attribute r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        r1 := @parameter0: org.springframework.asm.Attribute;

        return;
    }

    public org.springframework.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.springframework.asm.commons.EmptyVisitor $r0;
        int i0;
        java.lang.Object r5;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r1;
        java.lang.String r2, r3, r4;

        r1 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        $r0 = new org.springframework.asm.commons.EmptyVisitor;

        specialinvoke $r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        return $r0;
    }

    public org.springframework.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.springframework.asm.commons.EmptyVisitor $r0;
        int i0;
        java.lang.String[] r5;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r1;
        java.lang.String r2, r3, r4;

        r1 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        $r0 = new org.springframework.asm.commons.EmptyVisitor;

        specialinvoke $r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        return $r0;
    }

    public void visitEnd()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        return;
    }

    public java.lang.String getClassName()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String className>;

        return $r1;
    }

    public boolean isInterface()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $z0 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isInterface>;

        return $z0;
    }

    public boolean isAbstract()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $z0 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isAbstract>;

        return $z0;
    }

    public boolean isConcrete()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $z0 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isInterface>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isAbstract>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 1;

     label3:
        return $z2;
    }

    public boolean isFinal()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $z0 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean isFinal>;

        return $z0;
    }

    public boolean isIndependent()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String enclosingClassName>;

        if $r1 == null goto label1;

        $z0 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: boolean independentInnerClass>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean hasEnclosingClass()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String enclosingClassName>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getEnclosingClassName()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String enclosingClassName>;

        return $r1;
    }

    public boolean hasSuperClass()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String superClassName>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getSuperClassName()
    {
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String superClassName>;

        return $r1;
    }

    public java.lang.String[] getInterfaceNames()
    {
        java.lang.String[] $r1;
        org.springframework.core.type.classreading.ClassMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.ClassMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String[] interfaces>;

        return $r1;
    }
}
