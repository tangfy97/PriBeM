public class org.bson.BasicBSONObject extends java.util.LinkedHashMap implements org.bson.BSONObject
{

    public void <init>()
    {
        org.bson.BasicBSONObject r0;

        r0 := @this: org.bson.BasicBSONObject;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>()>();

        virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.bson.BasicBSONObject r0;
        java.util.Map r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        return;
    }

    public java.util.Map toMap()
    {
        java.util.LinkedHashMap $r0;
        org.bson.BasicBSONObject r1;

        r1 := @this: org.bson.BasicBSONObject;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        return $r0;
    }

    public java.lang.Object removeField(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public boolean containsField(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.bson.BasicBSONObject: boolean containsField(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r2;
    }

    public int getInt(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.NullPointerException $r3;
        int $i0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, $r7;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no value for: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $i0 = staticinvoke <org.bson.BSON: int toInt(java.lang.Object)>($r2);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        org.bson.BasicBSONObject r0;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return i1;

     label1:
        $i0 = staticinvoke <org.bson.BSON: int toInt(java.lang.Object)>($r2);

        return $i0;
    }

    public long getLong(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object $r2;
        long $l0;
        java.lang.String r1;
        java.lang.Number $r3;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r1);

        $r3 = (java.lang.Number) $r2;

        $l0 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        return $l0;
    }

    public double getDouble(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object $r2;
        java.lang.String r1;
        java.lang.Number $r3;
        double $d0;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r1);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public java.lang.String getString(java.lang.String)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        org.bson.BasicBSONObject r5;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String $r7;
        boolean $z0;

        r5 := @this: org.bson.BasicBSONObject;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.bson.BasicBSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r7, $r8);

        goto label1;

     label2:
        return;
    }

    public void putAll(org.bson.BSONObject)
    {
        org.bson.BasicBSONObject r5;
        java.util.Iterator $r2;
        org.bson.BSONObject r0;
        java.util.Set $r1;
        java.lang.Object $r3, $r6;
        java.lang.String r4;
        boolean $z0;

        r5 := @this: org.bson.BasicBSONObject;

        r0 := @parameter0: org.bson.BSONObject;

        $r1 = interfaceinvoke r0.<org.bson.BSONObject: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r6 = interfaceinvoke r0.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>(r4);

        virtualinvoke r5.<org.bson.BasicBSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r4, $r6);

        goto label1;

     label2:
        return;
    }

    public org.bson.BasicBSONObject append(java.lang.String, java.lang.Object)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, r2);

        return r0;
    }

    public java.lang.String toString()
    {
        org.bson.BasicBSONObject r0;
        java.lang.String $r1;

        r0 := @this: org.bson.BasicBSONObject;

        $r1 = staticinvoke <com.mongodb.util.JSON: java.lang.String serialize(java.lang.Object)>(r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.bson.BasicBSONObject r2;
        byte $b0;
        java.lang.String r8;
        java.lang.Number $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0, $d1;
        java.util.Iterator $r6;
        org.bson.BSONObject r1;
        java.util.Set $r3, $r4, $r5;
        java.lang.Object r0, $r7, $r9, $r10;

        r2 := @this: org.bson.BasicBSONObject;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.bson.BSONObject;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.bson.BSONObject) r0;

        $r3 = virtualinvoke r2.<org.bson.BasicBSONObject: java.util.Set keySet()>();

        $r4 = interfaceinvoke r1.<org.bson.BSONObject: java.util.Set keySet()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r5 = virtualinvoke r2.<org.bson.BasicBSONObject: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = virtualinvoke r2.<org.bson.BasicBSONObject: java.lang.Object get(java.lang.String)>(r8);

        $r10 = interfaceinvoke r1.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>(r8);

        if $r9 != null goto label4;

        if $r10 == null goto label4;

        return 0;

     label4:
        if $r10 != null goto label5;

        if $r9 == null goto label7;

        return 0;

     label5:
        $z3 = $r9 instanceof java.lang.Number;

        if $z3 == 0 goto label6;

        $z5 = $r10 instanceof java.lang.Number;

        if $z5 == 0 goto label6;

        $r11 = (java.lang.Number) $r9;

        $d0 = virtualinvoke $r11.<java.lang.Number: double doubleValue()>();

        $r12 = (java.lang.Number) $r10;

        $d1 = virtualinvoke $r12.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label7;

        return 0;

     label6:
        $z4 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z4 != 0 goto label7;

        return 0;

     label7:
        goto label3;

     label8:
        return 1;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.bson.BasicBSONObject r0;
        java.lang.Object r1, r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.bson.BasicBSONObject;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke r0.<org.bson.BasicBSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
