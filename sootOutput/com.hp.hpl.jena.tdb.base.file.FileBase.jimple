public final class com.hp.hpl.jena.tdb.base.file.FileBase extends java.lang.Object implements org.apache.jena.atlas.lib.Sync, org.apache.jena.atlas.lib.Closeable
{
    private static org.slf4j.Logger log;
    public final java.lang.String filename;
    private java.nio.channels.FileChannel channel;
    public static boolean DEBUG;
    private final boolean DebugThis;
    private static long counter;
    private final long id;

    static com.hp.hpl.jena.tdb.base.file.FileBase createUnmanged(java.lang.String, java.nio.channels.FileChannel)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r0;
        java.lang.String r1;
        java.nio.channels.FileChannel r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.channels.FileChannel;

        $r0 = new com.hp.hpl.jena.tdb.base.file.FileBase;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.FileBase: void <init>(java.lang.String,java.nio.channels.FileChannel)>(r1, r2);

        return $r0;
    }

    static com.hp.hpl.jena.tdb.base.file.FileBase create(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.tdb.base.file.FileBase;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.FileBase: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    static com.hp.hpl.jena.tdb.base.file.FileBase create(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new com.hp.hpl.jena.tdb.base.file.FileBase;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.FileBase: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    private void <init>(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileBase: void <init>(java.lang.String,java.lang.String)>(r1, "rw");

        return;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        long $l0, $l1, $l2;
        java.lang.String r1, r2, $r10;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        org.slf4j.Logger $r3, $r5;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.nio.channels.FileChannel $r11;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: boolean DebugThis> = 0;

        $l0 = <com.hp.hpl.jena.tdb.base.file.FileBase: long counter>;

        $l1 = $l0 + 1L;

        <com.hp.hpl.jena.tdb.base.file.FileBase: long counter> = $l1;

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: long id> = $l0;

        $z0 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: boolean DebugThis>;

        if $z0 == 0 goto label1;

        $r3 = <com.hp.hpl.jena.tdb.base.file.FileBase: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r5 = <com.hp.hpl.jena.tdb.base.file.FileBase: org.slf4j.Logger log>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("open: [");

        $l2 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: long id>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label1:
        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename> = r1;

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: java.nio.channels.FileChannel acquire(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel> = $r11;

        return;
    }

    private void <init>(java.lang.String, java.nio.channels.FileChannel)
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        java.lang.String r1;
        java.nio.channels.FileChannel r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.channels.FileChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: boolean DebugThis> = 0;

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: long id> = -1L;

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename> = r1;

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel> = r2;

        return;
    }

    public final java.nio.channels.FileChannel channel()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        java.nio.channels.FileChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel>;

        return $r1;
    }

    public long size()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        long $l0;
        java.io.IOException $r2;
        java.nio.channels.FileChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel>;

        $l0 = virtualinvoke $r1.<java.nio.channels.FileChannel: long size()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r2);

        return -1L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isClosed()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        java.nio.channels.FileChannel $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        org.slf4j.Logger $r3;
        long $l0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        java.nio.channels.FileChannel $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        $z0 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: boolean DebugThis>;

        if $z0 == 0 goto label1;

        $r3 = <com.hp.hpl.jena.tdb.base.file.FileBase: org.slf4j.Logger log>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close: [");

        $l0 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: long id>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r7 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r9);

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel>;

        staticinvoke <com.hp.hpl.jena.tdb.base.file.ChannelManager: void release(java.nio.channels.FileChannel)>($r1);

        r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel> = null;

        return;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        org.slf4j.Logger $r3;
        long $l0;
        java.io.IOException $r10;
        com.hp.hpl.jena.tdb.base.file.FileException $r11;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        java.nio.channels.FileChannel $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        $z0 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: boolean DebugThis>;

        if $z0 == 0 goto label1;

        $r3 = <com.hp.hpl.jena.tdb.base.file.FileBase: org.slf4j.Logger log>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sync: [");

        $l0 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: long id>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r7 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r9);

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.nio.channels.FileChannel channel>;

        virtualinvoke $r1.<java.nio.channels.FileChannel: void force(boolean)>(0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new com.hp.hpl.jena.tdb.base.file.FileException;

        specialinvoke $r11.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String,java.lang.Throwable)>("FileBase.sync", $r10);

        throw $r11;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getFilename()
    {
        com.hp.hpl.jena.tdb.base.file.FileBase r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.FileBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.FileBase: java.lang.String filename>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/base/file/FileBase;");

        <com.hp.hpl.jena.tdb.base.file.FileBase: org.slf4j.Logger log> = $r0;

        <com.hp.hpl.jena.tdb.base.file.FileBase: boolean DEBUG> = 0;

        <com.hp.hpl.jena.tdb.base.file.FileBase: long counter> = 0L;

        return;
    }
}
