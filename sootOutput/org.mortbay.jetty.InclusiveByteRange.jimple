public class org.mortbay.jetty.InclusiveByteRange extends java.lang.Object
{
    long first;
    long last;

    public void <init>(long, long)
    {
        org.mortbay.jetty.InclusiveByteRange r0;
        long l0, l1;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.jetty.InclusiveByteRange: long first> = 0L;

        r0.<org.mortbay.jetty.InclusiveByteRange: long last> = 0L;

        r0.<org.mortbay.jetty.InclusiveByteRange: long first> = l0;

        r0.<org.mortbay.jetty.InclusiveByteRange: long last> = l1;

        return;
    }

    public long getFirst()
    {
        org.mortbay.jetty.InclusiveByteRange r0;
        long $l0;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        $l0 = r0.<org.mortbay.jetty.InclusiveByteRange: long first>;

        return $l0;
    }

    public long getLast()
    {
        org.mortbay.jetty.InclusiveByteRange r0;
        long $l0;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        $l0 = r0.<org.mortbay.jetty.InclusiveByteRange: long last>;

        return $l0;
    }

    public static java.util.List satisfiableRanges(java.util.Enumeration, long)
    {
        java.util.Enumeration r0;
        byte $b5, $b7, $b8, $b9, $b16, $b17;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r17;
        java.util.List $r1;
        long l6, l14, l15;
        java.lang.StringBuffer $r19, $r20, $r26;
        java.util.StringTokenizer $r24;
        int $i0, $i1, $i2, $i3, $i4, $i10, $i11, $i12, $i13, $i18, $i19;
        org.mortbay.jetty.InclusiveByteRange $r25;
        java.lang.String r3, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r21, r23;
        java.lang.Object $r2, r22;

        r0 := @parameter0: java.util.Enumeration;

        l6 := @parameter1: long;

        r22 = null;

     label01:
        $z1 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label20;

        $r2 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $r24 = new java.util.StringTokenizer;

        specialinvoke $r24.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r3, "=,", 0);

        r23 = null;

     label02:
        $z2 = virtualinvoke $r24.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label17;

        $r5 = virtualinvoke $r24.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r23 = $r6;

        l14 = -1L;

        l15 = -1L;

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(45);

        if $i0 < 0 goto label03;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String,int)>("-", $i1);

        if $i2 < 0 goto label06;

     label03:
        $r7 = "bytes";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label04;

        goto label02;

     label04:
        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Object)>("Bad range format: {}", $r6);

     label05:
        goto label01;

     label06:
        if $i0 != 0 goto label09;

        $i11 = $i0 + 1;

        $i12 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i11 >= $i12 goto label07;

        $i13 = $i0 + 1;

        $r15 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i13);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        l15 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r16);

        goto label11;

     label07:
        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Object)>("Bad range format: {}", $r6);

     label08:
        goto label01;

     label09:
        $i3 = $i0 + 1;

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label10;

        $r11 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

        $i10 = $i0 + 1;

        $r13 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i10);

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        l15 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r14);

        goto label11;

     label10:
        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

     label11:
        $b16 = l14 cmp -1L;

        if $b16 != 0 goto label13;

        $b9 = l15 cmp -1L;

        if $b9 != 0 goto label13;

     label12:
        goto label01;

     label13:
        $b5 = l14 cmp -1L;

        if $b5 == 0 goto label15;

        $b7 = l15 cmp -1L;

        if $b7 == 0 goto label15;

        $b8 = l14 cmp l15;

        $i18 = (int) $b8;

        if $i18 <= 0 goto label15;

     label14:
        goto label01;

     label15:
        $b17 = l14 cmp l6;

        $i19 = (int) $b17;

        if $i19 >= 0 goto label16;

        $r25 = new org.mortbay.jetty.InclusiveByteRange;

        specialinvoke $r25.<org.mortbay.jetty.InclusiveByteRange: void <init>(long,long)>(l14, l15);

        r22 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r22, $r25);

     label16:
        goto label02;

     label17:
        goto label19;

     label18:
        $r17 := @caughtexception;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad range format: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r21);

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r17);

     label19:
        goto label01;

     label20:
        $r1 = staticinvoke <org.mortbay.util.LazyList: java.util.List getList(java.lang.Object,boolean)>(r22, 1);

        return $r1;

        catch java.lang.Exception from label02 to label05 with label18;
        catch java.lang.Exception from label06 to label08 with label18;
        catch java.lang.Exception from label09 to label12 with label18;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Exception from label15 to label17 with label18;
    }

    public long getFirst(long)
    {
        long $l0, $l2, l3, $l4, l6;
        byte $b1, $b5;
        org.mortbay.jetty.InclusiveByteRange r0;
        int $i7, $i8;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        l3 := @parameter0: long;

        $l0 = r0.<org.mortbay.jetty.InclusiveByteRange: long first>;

        $b1 = $l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 >= 0 goto label2;

        $l4 = r0.<org.mortbay.jetty.InclusiveByteRange: long last>;

        l6 = l3 - $l4;

        $b5 = l6 cmp 0L;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label1;

        l6 = 0L;

     label1:
        return l6;

     label2:
        $l2 = r0.<org.mortbay.jetty.InclusiveByteRange: long first>;

        return $l2;
    }

    public long getLast(long)
    {
        long $l0, $l2, l4, $l5, $l6, $l8, $l9;
        byte $b1, $b3, $b7;
        org.mortbay.jetty.InclusiveByteRange r0;
        int $i10, $i11, $i12;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        l4 := @parameter0: long;

        $l0 = r0.<org.mortbay.jetty.InclusiveByteRange: long first>;

        $b1 = $l0 cmp 0L;

        $i10 = (int) $b1;

        if $i10 >= 0 goto label1;

        $l9 = l4 - 1L;

        return $l9;

     label1:
        $l2 = r0.<org.mortbay.jetty.InclusiveByteRange: long last>;

        $b3 = $l2 cmp 0L;

        $i11 = (int) $b3;

        if $i11 < 0 goto label2;

        $l6 = r0.<org.mortbay.jetty.InclusiveByteRange: long last>;

        $b7 = $l6 cmp l4;

        $i12 = (int) $b7;

        if $i12 < 0 goto label3;

     label2:
        $l5 = l4 - 1L;

        return $l5;

     label3:
        $l8 = r0.<org.mortbay.jetty.InclusiveByteRange: long last>;

        return $l8;
    }

    public long getSize(long)
    {
        org.mortbay.jetty.InclusiveByteRange r0;
        long l0, $l1, $l2, $l3, $l4;

        r0 := @this: org.mortbay.jetty.InclusiveByteRange;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.mortbay.jetty.InclusiveByteRange: long getLast(long)>(l0);

        $l2 = virtualinvoke r0.<org.mortbay.jetty.InclusiveByteRange: long getFirst(long)>(l0);

        $l3 = $l1 - $l2;

        $l4 = $l3 + 1L;

        return $l4;
    }

    public java.lang.String toHeaderRangeString(long)
    {
        java.lang.StringBuffer $r0;
        org.mortbay.jetty.InclusiveByteRange r1;
        long l0, $l1, $l2;
        java.lang.String $r2;

        r1 := @this: org.mortbay.jetty.InclusiveByteRange;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(40);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bytes ");

        $l1 = virtualinvoke r1.<org.mortbay.jetty.InclusiveByteRange: long getFirst(long)>(l0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $l2 = virtualinvoke r1.<org.mortbay.jetty.InclusiveByteRange: long getLast(long)>(l0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String to416HeaderRangeString(long)
    {
        long l0;
        java.lang.String $r1;
        java.lang.StringBuffer $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(40);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bytes */");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        org.mortbay.jetty.InclusiveByteRange r1;
        long $l0, $l1;
        java.lang.String $r2, $r3, $r4;

        r1 := @this: org.mortbay.jetty.InclusiveByteRange;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(60);

        $l0 = r1.<org.mortbay.jetty.InclusiveByteRange: long first>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $l1 = r1.<org.mortbay.jetty.InclusiveByteRange: long last>;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
