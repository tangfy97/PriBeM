public abstract class javax.xml.bind.Binder extends java.lang.Object
{

    public void <init>()
    {
        javax.xml.bind.Binder r0;

        r0 := @this: javax.xml.bind.Binder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.Object unmarshal(java.lang.Object) throws javax.xml.bind.JAXBException;

    public abstract javax.xml.bind.JAXBElement unmarshal(java.lang.Object, java.lang.Class) throws javax.xml.bind.JAXBException;

    public abstract void marshal(java.lang.Object, java.lang.Object) throws javax.xml.bind.JAXBException;

    public abstract java.lang.Object getXMLNode(java.lang.Object);

    public abstract java.lang.Object getJAXBNode(java.lang.Object);

    public abstract java.lang.Object updateXML(java.lang.Object) throws javax.xml.bind.JAXBException;

    public abstract java.lang.Object updateXML(java.lang.Object, java.lang.Object) throws javax.xml.bind.JAXBException;

    public abstract java.lang.Object updateJAXB(java.lang.Object) throws javax.xml.bind.JAXBException;

    public abstract void setSchema(javax.xml.validation.Schema);

    public abstract javax.xml.validation.Schema getSchema();

    public abstract void setEventHandler(javax.xml.bind.ValidationEventHandler) throws javax.xml.bind.JAXBException;

    public abstract javax.xml.bind.ValidationEventHandler getEventHandler() throws javax.xml.bind.JAXBException;

    public abstract void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException;

    public abstract java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException;
}
