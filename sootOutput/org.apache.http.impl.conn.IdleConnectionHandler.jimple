public class org.apache.http.impl.conn.IdleConnectionHandler extends java.lang.Object
{
    private final org.apache.commons.logging.Log log;
    private final java.util.Map connectionToTimes;

    public void <init>()
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes> = $r3;

        return;
    }

    public void add(org.apache.http.HttpConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r3;
        long $l0, l1;
        java.util.concurrent.TimeUnit r4;
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.util.Map $r5;
        org.apache.commons.logging.Log $r1, $r7;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10;
        org.apache.http.HttpConnection r2;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        r2 := @parameter0: org.apache.http.HttpConnection;

        l1 := @parameter1: long;

        r4 := @parameter2: java.util.concurrent.TimeUnit;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding connection at: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r10);

     label1:
        $r5 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r3 = new org.apache.http.impl.conn.IdleConnectionHandler$TimeValues;

        specialinvoke $r3.<org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: void <init>(long,long,java.util.concurrent.TimeUnit)>($l0, l1, r4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

        return;
    }

    public boolean remove(org.apache.http.HttpConnection)
    {
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues r4;
        long $l0, $l1;
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        byte $b2;
        java.util.Map $r2;
        int $i3;
        java.lang.Object $r3;
        org.apache.commons.logging.Log $r5;
        org.apache.http.HttpConnection r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        r1 := @parameter0: org.apache.http.HttpConnection;

        $r2 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r3;

        if r4 != null goto label1;

        $r5 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Removing a connection that never existed!");

        return 1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r4);

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void removeAll()
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.util.Map $r1;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public void closeIdleConnections(long)
    {
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues r10;
        byte $b4;
        java.util.Map $r2;
        boolean $z0, $z1, $z2;
        java.util.Set $r3;
        java.lang.StringBuilder $r14, $r15, $r19, $r20, $r24, $r25;
        long $l0, l1, l2, $l3;
        int $i5;
        java.lang.String $r16, $r21;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.io.IOException $r22;
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        org.apache.commons.logging.Log $r1, $r11, $r13, $r18, $r23;
        java.lang.Object $r5, $r7, $r9;
        org.apache.http.HttpConnection r8;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        l1 := @parameter0: long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l0 - l1;

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r18 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for connections, idle timeout: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label1:
        $r2 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (org.apache.http.HttpConnection) $r7;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r9;

        $l3 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r10);

        $b4 = $l3 cmp l2;

        $i5 = (int) $b4;

        if $i5 > 0 goto label6;

        $r11 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r13 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing idle connection, connection time: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label3:
        interfaceinvoke r8.<org.apache.http.HttpConnection: void close()>();

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        $r23 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r22);

     label6:
        goto label2;

     label7:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void closeExpiredConnections()
    {
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues r10;
        byte $b2;
        java.util.Map $r2;
        boolean $z0, $z1, $z2;
        java.util.Set $r3;
        java.lang.StringBuilder $r14, $r15, $r19, $r20, $r24, $r25;
        long $l0, $l1, $l3;
        int $i4;
        java.lang.String $r16, $r21;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.io.IOException $r22;
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        org.apache.commons.logging.Log $r1, $r11, $r13, $r18, $r23;
        java.lang.Object $r5, $r7, $r9;
        org.apache.http.HttpConnection r8;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r18 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for expired connections, now: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label1:
        $r2 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (org.apache.http.HttpConnection) $r7;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r9;

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r10);

        $b2 = $l1 cmp $l0;

        $i4 = (int) $b2;

        if $i4 > 0 goto label6;

        $r11 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r13 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection, expired @: ");

        $l3 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label3:
        interfaceinvoke r8.<org.apache.http.HttpConnection: void close()>();

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        $r23 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r22);

     label6:
        goto label2;

     label7:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }
}
