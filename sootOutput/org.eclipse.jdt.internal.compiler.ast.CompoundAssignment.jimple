public class org.eclipse.jdt.internal.compiler.ast.CompoundAssignment extends org.eclipse.jdt.internal.compiler.ast.Assignment implements org.eclipse.jdt.internal.compiler.ast.OperatorIds
{
    public int operator;
    public int preAssignImplicitConversion;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Expression, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;
        org.eclipse.jdt.internal.compiler.ast.Expression r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        i5 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: void <init>(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,int)>(r1, r2, i0);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i7 = (int) -8193;

        $i2 = $i1 & $i7;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i2;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i4 = $i3 | 65536;

        r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i4;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator> = i5;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r5, $r7;
        org.eclipse.jdt.internal.compiler.ast.Reference $r6;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r9;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i0 == 11 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: void checkNPE(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r3, r4, r5);

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $r6 = (org.eclipse.jdt.internal.compiler.ast.Reference) $r2;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Reference: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.ast.Assignment,boolean)>(r3, r4, r5, r0, 1);

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        return $r8;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.Reference $r5;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r1;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r4;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $r5 = (org.eclipse.jdt.internal.compiler.ast.Reference) $r2;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int preAssignImplicitConversion>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Reference: void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.ast.Expression,int,int,boolean)>(r3, r0, $r4, $i2, $i1, z0);

        if z0 == 0 goto label1;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i4);

     label1:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i3);

        return;
    }

    public int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        int $i1;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i1 = (int) -1;

        return $i1;
    }

    public java.lang.String operatorToString()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        tableswitch($i0)
        {
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label07;
            case 9: goto label04;
            case 10: goto label09;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label02;
            case 14: goto label01;
            case 15: goto label03;
            case 16: goto label08;
            case 17: goto label10;
            case 18: goto label12;
            case 19: goto label11;
            default: goto label12;
        };

     label01:
        return "+=";

     label02:
        return "-=";

     label03:
        return "*=";

     label04:
        return "/=";

     label05:
        return "&=";

     label06:
        return "|=";

     label07:
        return "^=";

     label08:
        return "%=";

     label09:
        return "<<=";

     label10:
        return ">>=";

     label11:
        return ">>>=";

     label12:
        return "unknown operator";
    }

    public java.lang.StringBuffer printExpressionNoParenthesis(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r7;
        java.lang.StringBuffer r1, $r3, $r4, $r6, $r8;
        int i0;
        java.lang.String $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(i0, r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: java.lang.String operatorToString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r1);

        return $r8;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;
        byte $b1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r8, $r10, $r21, r22, r23, $r25, $r27;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r12;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        long $l0;
        short $s22;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r11;
        int[][] $r13;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4, $r15, $r16, $r17, $r18, $r19, $r20;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r5, $r6, $r7, $r9, $r24, $r26;
        int[] $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, z10, z11;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i23;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.Reference;

        if $z0 == 0 goto label01;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $z1 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isThis()>();

        if $z1 == 0 goto label02;

     label01:
        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void expressionShouldBeAVariable(org.eclipse.jdt.internal.compiler.ast.Expression)>($r5);

        return null;

     label02:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        if $r8 == null goto label03;

        if $r10 != null goto label04;

     label03:
        return null;

     label04:
        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        r22 = $r8;

        r23 = $r10;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l0 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b1 = $l0 cmp 3211264L;

        $i23 = (int) $b1;

        if $i23 < 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z7 = 0;

        z11 = 0;

        z10 = 0;

        if $z6 == 0 goto label08;

        $z5 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z5 != 0 goto label07;

        $i15 = $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i15 == 11 goto label07;

        $i16 = $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i16 == 12 goto label07;

        $r21 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8);

        if $r21 == $r8 goto label07;

        r22 = $r21;

        z7 = 1;

        z11 = 1;

        z10 = 1;

     label07:
        $z8 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z8 != 0 goto label08;

        $i13 = r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i13 == 11 goto label08;

        $i14 = r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i14 == 12 goto label08;

        r23 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r10);

     label08:
        $z9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: boolean restrainUsageToNumericTypes()>();

        if $z9 == 0 goto label09;

        $z4 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNumericType()>();

        if $z4 != 0 goto label09;

        $r20 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void operatorOnlyValidOnNumericType(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, r23);

        return null;

     label09:
        $i11 = r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $i12 = r23.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        i17 = $i12;

        if $i11 > 15 goto label10;

        if $i12 <= 15 goto label12;

     label10:
        if $i11 == 11 goto label11;

        $r19 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidOperator(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, r23);

        return null;

     label11:
        i17 = 1;

     label12:
        $r13 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        $r14 = $r13[$i2];

        $i3 = $i11 << 4;

        $i4 = $i3 + i17;

        $i10 = $r14[$i4];

        if $i10 != 0 goto label13;

        $r18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidOperator(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, r23);

        return null;

     label13:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        if $i5 != 14 goto label16;

        if $i11 != 1 goto label14;

        $r17 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidOperator(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, r23);

        return null;

     label14:
        $z2 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNumericType()>();

        if $z2 != 0 goto label15;

        if $i11 != 5 goto label16;

     label15:
        $z3 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNumericType()>();

        if $z3 != 0 goto label16;

        $r16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidOperator(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, r23);

        return null;

     label16:
        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        $i18 = $i10 >>> 16;

        $i19 = $i18 & 15;

        $r25 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding wellKnownType(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r3, $i19);

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, $r25, $r8);

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i20 = $i10 >>> 8;

        $i21 = $i20 & 15;

        $r27 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding wellKnownType(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r3, $i21);

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, $r27, $r10);

        if z11 == 0 goto label17;

        $s22 = 512;

        goto label18;

     label17:
        $s22 = 0;

     label18:
        $i6 = $i11 << 4;

        $i8 = $s22 | $i6;

        $i7 = $i10 & 15;

        $i9 = $i8 | $i7;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int preAssignImplicitConversion> = $i9;

        if z10 == 0 goto label19;

        $r15 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void autoboxing(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r22, $r8);

     label19:
        r0.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r8;

        return $r8;
    }

    public boolean restrainUsageToNumericTypes()
    {
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        return 0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression lhs>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
