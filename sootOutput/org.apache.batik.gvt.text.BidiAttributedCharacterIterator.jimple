public class org.apache.batik.gvt.text.BidiAttributedCharacterIterator extends java.lang.Object implements java.text.AttributedCharacterIterator
{
    private java.text.AttributedCharacterIterator reorderedACI;
    private java.awt.font.FontRenderContext frc;
    private int chunkStart;
    private int[] newCharOrder;
    private static final java.lang.Float FLOAT_NAN;

    protected void <init>(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext, int, int[])
    {
        java.awt.font.FontRenderContext r2;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator r1;
        int[] r3;
        int i0;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator;

        r2 := @parameter1: java.awt.font.FontRenderContext;

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI> = r1;

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.awt.font.FontRenderContext frc> = r2;

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int chunkStart> = i0;

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder> = r3;

        return;
    }

    public void <init>(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext, int)
    {
        java.lang.Float $r32, $r35, $r38, $r41, r53, $r56, $r59, $r62;
        java.lang.Integer $r68, $r69;
        byte $b10, $b11, $b13, $b14, b34, b35;
        java.util.Map $r5, $r24, r51, r52;
        java.util.Set $r7;
        org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute $r15, $r17, $r27, $r33, $r34, $r36, $r37, $r39, $r40, $r42, $r43, $r54, $r57, $r60;
        java.awt.font.TextLayout $r67;
        java.lang.StringBuffer $r64, $r70;
        java.lang.String $r4, $r23;
        java.util.Map$Entry r47;
        java.util.Map[] r50;
        java.awt.font.FontRenderContext r1;
        int[] $r19, $r21, $r25, $r26, $r29, $r30, $r44, $r45, r48, r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.text.AttributedString $r63, $r65, $r71;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r13, $r18, $r31, r46;
        java.util.HashMap $r66;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i31, i32, i33, i36, i37, i38, i39, i40, i42, i43, i44, i45, i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56;
        java.util.Iterator $r8;
        char $c12, c30, c41;
        java.lang.Object $r9, $r10, $r11, $r28, $r55, $r58, $r61;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r46 := @parameter0: java.text.AttributedCharacterIterator;

        r1 := @parameter1: java.awt.font.FontRenderContext;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.awt.font.FontRenderContext frc> = r1;

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int chunkStart> = i0;

        interfaceinvoke r46.<java.text.CharacterIterator: char first()>();

        $i1 = interfaceinvoke r46.<java.text.CharacterIterator: int getEndIndex()>();

        $i2 = interfaceinvoke r46.<java.text.CharacterIterator: int getBeginIndex()>();

        i3 = $i1 - $i2;

        $r64 = new java.lang.StringBuffer;

        specialinvoke $r64.<java.lang.StringBuffer: void <init>(int)>(i3);

        c30 = interfaceinvoke r46.<java.text.CharacterIterator: char first()>();

        i31 = 0;

        goto label02;

     label01:
        virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c30);

        c30 = interfaceinvoke r46.<java.text.CharacterIterator: char next()>();

        i31 = i31 + 1;

     label02:
        if i31 < i3 goto label01;

        $r65 = new java.text.AttributedString;

        $r4 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r65.<java.text.AttributedString: void <init>(java.lang.String)>($r4);

        $i4 = interfaceinvoke r46.<java.text.CharacterIterator: int getBeginIndex()>();

        $i5 = interfaceinvoke r46.<java.text.CharacterIterator: int getEndIndex()>();

        i32 = $i4;

        goto label08;

     label03:
        interfaceinvoke r46.<java.text.CharacterIterator: char setIndex(int)>(i32);

        $r5 = interfaceinvoke r46.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        $i6 = interfaceinvoke r46.<java.text.AttributedCharacterIterator: int getRunLimit()>();

        $r66 = new java.util.HashMap;

        $i7 = interfaceinvoke $r5.<java.util.Map: int size()>();

        specialinvoke $r66.<java.util.HashMap: void <init>(int)>($i7);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label07;

     label04:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r47 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r10 != null goto label05;

        goto label07;

     label05:
        $r11 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r11 != null goto label06;

        goto label07;

     label06:
        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label07:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label04;

        $i9 = i32 - $i4;

        $i8 = $i6 - $i4;

        virtualinvoke $r65.<java.text.AttributedString: void addAttributes(java.util.Map,int,int)>($r66, $i9, $i8);

        i32 = $i6;

     label08:
        if i32 < $i5 goto label03;

        $r67 = new java.awt.font.TextLayout;

        $r13 = virtualinvoke $r65.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        specialinvoke $r67.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r13, r1);

        r48 = newarray (int)[i3];

        r49 = newarray (int)[i3];

        i33 = 0;

        $b10 = virtualinvoke $r67.<java.awt.font.TextLayout: byte getCharacterLevel(int)>(0);

        b34 = $b10;

        r48[0] = 0;

        $i47 = (int) $b10;

        r49[0] = $i47;

        b35 = $b10;

        i36 = 1;

        goto label11;

     label09:
        $b11 = virtualinvoke $r67.<java.awt.font.TextLayout: byte getCharacterLevel(int)>(i36);

        r48[i36] = i36;

        $i48 = (int) $b11;

        r49[i36] = $i48;

        $i49 = (int) $b11;

        $i50 = (int) b34;

        if $i49 == $i50 goto label10;

        $r15 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute BIDI_LEVEL>;

        $r68 = new java.lang.Integer;

        $i51 = (int) b34;

        specialinvoke $r68.<java.lang.Integer: void <init>(int)>($i51);

        virtualinvoke $r65.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r15, $r68, i33, i36);

        i33 = i36;

        b34 = $b11;

        $i52 = (int) $b11;

        $i53 = (int) b35;

        if $i52 <= $i53 goto label10;

        b35 = $b11;

     label10:
        i36 = i36 + 1;

     label11:
        if i36 < i3 goto label09;

        $r17 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute BIDI_LEVEL>;

        $r69 = new java.lang.Integer;

        $i54 = (int) b34;

        specialinvoke $r69.<java.lang.Integer: void <init>(int)>($i54);

        virtualinvoke $r65.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r17, $r69, i33, i3);

        $r18 = virtualinvoke $r65.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        if i33 != 0 goto label14;

        if b34 != 0 goto label14;

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI> = $r18;

        $r44 = newarray (int)[i3];

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder> = $r44;

        i37 = 0;

        goto label13;

     label12:
        $r45 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $i29 = i0 + i37;

        $r45[i37] = $i29;

        i37 = i37 + 1;

     label13:
        if i37 < i3 goto label12;

        return;

     label14:
        $i55 = (int) b35;

        $r19 = specialinvoke r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] doBidiReorder(int[],int[],int,int)>(r48, r49, i3, $i55);

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder> = $r19;

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>(int)>(i3);

        i38 = 0;

        i39 = 0;

        goto label18;

     label15:
        $r21 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        i40 = $r21[i39];

        $c12 = interfaceinvoke $r18.<java.text.CharacterIterator: char setIndex(int)>(i40);

        c41 = $c12;

        if i40 != 0 goto label16;

        i38 = i39;

     label16:
        $b13 = virtualinvoke $r67.<java.awt.font.TextLayout: byte getCharacterLevel(int)>(i40);

        $b14 = $b13 & 1;

        if $b14 == 0 goto label17;

        $i56 = (int) $c12;

        $i15 = staticinvoke <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int mirrorChar(int)>($i56);

        c41 = (char) $i15;

     label17:
        virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c41);

        i39 = i39 + 1;

     label18:
        if i39 < i3 goto label15;

        $r71 = new java.text.AttributedString;

        $r23 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r71.<java.text.AttributedString: void <init>(java.lang.String)>($r23);

        r50 = newarray (java.util.Map)[i3];

        $i16 = interfaceinvoke $r18.<java.text.CharacterIterator: int getBeginIndex()>();

        $i17 = interfaceinvoke $r18.<java.text.CharacterIterator: int getEndIndex()>();

        i42 = $i16;

        goto label22;

     label19:
        interfaceinvoke $r18.<java.text.CharacterIterator: char setIndex(int)>(i42);

        $r24 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        $i18 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: int getRunLimit()>();

        i43 = i42;

        goto label21;

     label20:
        $i19 = i43 - $i16;

        r50[$i19] = $r24;

        i43 = i43 + 1;

     label21:
        if i43 < $i18 goto label20;

        i42 = $i18;

     label22:
        if i42 < $i17 goto label19;

        i44 = 0;

        $r25 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $i20 = $r25[0];

        r51 = r50[$i20];

        i45 = 1;

        goto label25;

     label23:
        $r26 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $i21 = $r26[i45];

        r52 = r50[$i21];

        if r52 == r51 goto label24;

        virtualinvoke $r71.<java.text.AttributedString: void addAttributes(java.util.Map,int,int)>(r51, i44, i45);

        r51 = r52;

        i44 = i45;

     label24:
        i45 = i45 + 1;

     label25:
        if i45 < i3 goto label23;

        virtualinvoke $r71.<java.text.AttributedString: void addAttributes(java.util.Map,int,int)>(r51, i44, i3);

        interfaceinvoke $r18.<java.text.CharacterIterator: char first()>();

        $r27 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        $r28 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r27);

        r53 = (java.lang.Float) $r28;

        if r53 == null goto label26;

        $z3 = virtualinvoke r53.<java.lang.Float: boolean isNaN()>();

        if $z3 != 0 goto label26;

        $r42 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        $r41 = <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.lang.Float FLOAT_NAN>;

        $i28 = i38 + 1;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r42, $r41, i38, $i28);

        $r43 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute X>;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r43, r53, 0, 1);

     label26:
        $r54 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        $r55 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r54);

        $r56 = (java.lang.Float) $r55;

        if $r56 == null goto label27;

        $z2 = virtualinvoke $r56.<java.lang.Float: boolean isNaN()>();

        if $z2 != 0 goto label27;

        $r39 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        $r38 = <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.lang.Float FLOAT_NAN>;

        $i27 = i38 + 1;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r39, $r38, i38, $i27);

        $r40 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute Y>;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r40, $r56, 0, 1);

     label27:
        $r57 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DX>;

        $r58 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r57);

        $r59 = (java.lang.Float) $r58;

        if $r59 == null goto label28;

        $z1 = virtualinvoke $r59.<java.lang.Float: boolean isNaN()>();

        if $z1 != 0 goto label28;

        $r36 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DX>;

        $r35 = <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.lang.Float FLOAT_NAN>;

        $i26 = i38 + 1;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r36, $r35, i38, $i26);

        $r37 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DX>;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r37, $r59, 0, 1);

     label28:
        $r60 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DY>;

        $r61 = interfaceinvoke $r18.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r60);

        $r62 = (java.lang.Float) $r61;

        if $r62 == null goto label29;

        $z0 = virtualinvoke $r62.<java.lang.Float: boolean isNaN()>();

        if $z0 != 0 goto label29;

        $r33 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DY>;

        $r32 = <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.lang.Float FLOAT_NAN>;

        $i25 = i38 + 1;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r33, $r32, i38, $i25);

        $r34 = <org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute: org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute DY>;

        virtualinvoke $r71.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r34, $r62, 0, 1);

     label29:
        $r63 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: java.text.AttributedString assignArabicForms(java.text.AttributedString)>($r71);

        i46 = 0;

        goto label31;

     label30:
        $r30 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $i23 = $r30[i46];

        $i24 = $i23 + i0;

        $r30[i46] = $i24;

        i46 = i46 + 1;

     label31:
        $r29 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $i22 = lengthof $r29;

        if i46 < $i22 goto label30;

        $r31 = virtualinvoke $r63.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI> = $r31;

        return;
    }

    public int[] getCharMap()
    {
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        int[] $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        return $r1;
    }

    private int[] doBidiReorder(int[], int[], int, int)
    {
        int[] r0, r1, $r3;
        int i0, i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r2;

        r2 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        if i0 != 0 goto label01;

        return r0;

     label01:
        i20 = 0;

        goto label11;

     label02:
        i20 = i20 + 1;

     label03:
        if i20 >= i1 goto label04;

        $i19 = r1[i20];

        if $i19 < i0 goto label02;

     label04:
        if i20 != i1 goto label05;

        goto label12;

     label05:
        i2 = i20;

        i20 = i20 + 1;

        goto label07;

     label06:
        i20 = i20 + 1;

     label07:
        if i20 >= i1 goto label08;

        $i15 = r1[i20];

        if $i15 == i0 goto label06;

     label08:
        $i16 = i20 - 1;

        $i3 = $i16 - i2;

        $i4 = $i3 >> 1;

        $i17 = $i4 + 1;

        i21 = 0;

        goto label10;

     label09:
        $i5 = i2 + i21;

        i6 = r0[$i5];

        $i9 = i2 + i21;

        $i7 = $i16 - i21;

        $i8 = r0[$i7];

        r0[$i9] = $i8;

        $i10 = $i16 - i21;

        r0[$i10] = i6;

        $i12 = i2 + i21;

        $i11 = i0 - 1;

        r1[$i12] = $i11;

        $i14 = $i16 - i21;

        $i13 = i0 - 1;

        r1[$i14] = $i13;

        i21 = i21 + 1;

     label10:
        if i21 < $i17 goto label09;

     label11:
        if i20 < i1 goto label03;

     label12:
        $i18 = i0 - 1;

        $r3 = specialinvoke r2.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] doBidiReorder(int[],int[],int,int)>(r0, r1, i1, $i18);

        return $r3;
    }

    public java.util.Set getAllAttributeKeys()
    {
        java.util.Set $r2;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $r2 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: java.util.Set getAllAttributeKeys()>();

        return $r2;
    }

    public java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedCharacterIterator$Attribute r1;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $r3 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>(r1);

        return $r3;
    }

    public java.util.Map getAttributes()
    {
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $r2 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: java.util.Map getAttributes()>();

        return $r2;
    }

    public int getRunLimit()
    {
        int $i0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: int getRunLimit()>();

        return $i0;
    }

    public int getRunLimit(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedCharacterIterator$Attribute r1;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunLimit(java.text.AttributedCharacterIterator$Attribute)>(r1);

        return $i0;
    }

    public int getRunLimit(java.util.Set)
    {
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0;
        java.util.Set r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunLimit(java.util.Set)>(r1);

        return $i0;
    }

    public int getRunStart()
    {
        int $i0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r1.<java.text.AttributedCharacterIterator: int getRunStart()>();

        return $i0;
    }

    public int getRunStart(java.text.AttributedCharacterIterator$Attribute)
    {
        java.text.AttributedCharacterIterator$Attribute r1;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.text.AttributedCharacterIterator$Attribute;

        $r2 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunStart(java.text.AttributedCharacterIterator$Attribute)>(r1);

        return $i0;
    }

    public int getRunStart(java.util.Set)
    {
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r2;
        int $i0;
        java.util.Set r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r2.<java.text.AttributedCharacterIterator: int getRunStart(java.util.Set)>(r1);

        return $i0;
    }

    public java.lang.Object clone()
    {
        java.awt.font.FontRenderContext $r6;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator $r0, r1;
        java.text.AttributedCharacterIterator $r2, $r5;
        int[] $r4, $r8;
        int $i0;
        java.lang.Object $r3, $r7;

        r1 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r0 = new org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r2 = r1.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $r3 = interfaceinvoke $r2.<java.text.CharacterIterator: java.lang.Object clone()>();

        $r5 = (java.text.AttributedCharacterIterator) $r3;

        $r6 = r1.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.awt.font.FontRenderContext frc>;

        $i0 = r1.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int chunkStart>;

        $r4 = r1.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: int[] newCharOrder>;

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (int[]) $r7;

        specialinvoke $r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int,int[])>($r5, $r6, $i0, $r8);

        return $r0;
    }

    public char current()
    {
        char $c0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char current()>();

        return $c0;
    }

    public char first()
    {
        char $c0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char first()>();

        return $c0;
    }

    public int getBeginIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getBeginIndex()>();

        return $i0;
    }

    public int getEndIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getEndIndex()>();

        return $i0;
    }

    public int getIndex()
    {
        int $i0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $i0 = interfaceinvoke $r1.<java.text.CharacterIterator: int getIndex()>();

        return $i0;
    }

    public char last()
    {
        char $c0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char last()>();

        return $c0;
    }

    public char next()
    {
        char $c0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char next()>();

        return $c0;
    }

    public char previous()
    {
        char $c0;
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c0 = interfaceinvoke $r1.<java.text.CharacterIterator: char previous()>();

        return $c0;
    }

    public char setIndex(int)
    {
        org.apache.batik.gvt.text.BidiAttributedCharacterIterator r0;
        java.text.AttributedCharacterIterator $r1;
        int i0;
        char $c1;

        r0 := @this: org.apache.batik.gvt.text.BidiAttributedCharacterIterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.text.AttributedCharacterIterator reorderedACI>;

        $c1 = interfaceinvoke $r1.<java.text.CharacterIterator: char setIndex(int)>(i0);

        return $c1;
    }

    public static int mirrorChar(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 40: goto label001;
            case 41: goto label002;
            case 60: goto label003;
            case 62: goto label004;
            case 91: goto label005;
            case 93: goto label006;
            case 123: goto label007;
            case 125: goto label008;
            case 171: goto label009;
            case 187: goto label010;
            case 8249: goto label011;
            case 8250: goto label012;
            case 8261: goto label013;
            case 8262: goto label014;
            case 8317: goto label015;
            case 8318: goto label016;
            case 8333: goto label017;
            case 8334: goto label018;
            case 8712: goto label019;
            case 8713: goto label020;
            case 8714: goto label021;
            case 8715: goto label022;
            case 8716: goto label023;
            case 8717: goto label024;
            case 8764: goto label025;
            case 8765: goto label026;
            case 8771: goto label027;
            case 8786: goto label028;
            case 8787: goto label029;
            case 8788: goto label030;
            case 8789: goto label031;
            case 8804: goto label032;
            case 8805: goto label033;
            case 8806: goto label034;
            case 8807: goto label035;
            case 8808: goto label036;
            case 8809: goto label037;
            case 8810: goto label038;
            case 8811: goto label039;
            case 8814: goto label040;
            case 8815: goto label041;
            case 8816: goto label042;
            case 8817: goto label043;
            case 8818: goto label044;
            case 8819: goto label045;
            case 8820: goto label046;
            case 8821: goto label047;
            case 8822: goto label048;
            case 8823: goto label049;
            case 8824: goto label050;
            case 8825: goto label051;
            case 8826: goto label052;
            case 8827: goto label053;
            case 8828: goto label054;
            case 8829: goto label055;
            case 8830: goto label056;
            case 8831: goto label057;
            case 8832: goto label058;
            case 8833: goto label059;
            case 8834: goto label060;
            case 8835: goto label061;
            case 8836: goto label062;
            case 8837: goto label063;
            case 8838: goto label064;
            case 8839: goto label065;
            case 8840: goto label066;
            case 8841: goto label067;
            case 8842: goto label068;
            case 8843: goto label069;
            case 8847: goto label070;
            case 8848: goto label071;
            case 8849: goto label072;
            case 8850: goto label073;
            case 8866: goto label074;
            case 8867: goto label075;
            case 8880: goto label076;
            case 8881: goto label077;
            case 8882: goto label078;
            case 8883: goto label079;
            case 8884: goto label080;
            case 8885: goto label081;
            case 8886: goto label082;
            case 8887: goto label083;
            case 8905: goto label084;
            case 8906: goto label085;
            case 8907: goto label086;
            case 8908: goto label087;
            case 8909: goto label088;
            case 8912: goto label089;
            case 8913: goto label090;
            case 8918: goto label091;
            case 8919: goto label092;
            case 8920: goto label093;
            case 8921: goto label094;
            case 8922: goto label095;
            case 8923: goto label096;
            case 8924: goto label097;
            case 8925: goto label098;
            case 8926: goto label099;
            case 8927: goto label100;
            case 8928: goto label101;
            case 8929: goto label102;
            case 8930: goto label103;
            case 8931: goto label104;
            case 8932: goto label105;
            case 8933: goto label106;
            case 8934: goto label107;
            case 8935: goto label108;
            case 8936: goto label109;
            case 8937: goto label110;
            case 8938: goto label111;
            case 8939: goto label112;
            case 8940: goto label113;
            case 8941: goto label114;
            case 8944: goto label115;
            case 8945: goto label116;
            case 8968: goto label117;
            case 8969: goto label118;
            case 8970: goto label119;
            case 8971: goto label120;
            case 9001: goto label121;
            case 9002: goto label122;
            case 12296: goto label123;
            case 12297: goto label124;
            case 12298: goto label125;
            case 12299: goto label126;
            case 12300: goto label127;
            case 12301: goto label128;
            case 12302: goto label129;
            case 12303: goto label130;
            case 12304: goto label131;
            case 12305: goto label132;
            case 12308: goto label133;
            case 12309: goto label134;
            case 12310: goto label135;
            case 12311: goto label136;
            case 12312: goto label137;
            case 12313: goto label138;
            case 12314: goto label139;
            case 12315: goto label140;
            default: goto label141;
        };

     label001:
        return 41;

     label002:
        return 40;

     label003:
        return 62;

     label004:
        return 60;

     label005:
        return 93;

     label006:
        return 91;

     label007:
        return 125;

     label008:
        return 123;

     label009:
        return 187;

     label010:
        return 171;

     label011:
        return 8250;

     label012:
        return 8249;

     label013:
        return 8262;

     label014:
        return 8261;

     label015:
        return 8318;

     label016:
        return 8317;

     label017:
        return 8334;

     label018:
        return 8333;

     label019:
        return 8715;

     label020:
        return 8716;

     label021:
        return 8717;

     label022:
        return 8712;

     label023:
        return 8713;

     label024:
        return 8714;

     label025:
        return 8765;

     label026:
        return 8764;

     label027:
        return 8909;

     label028:
        return 8787;

     label029:
        return 8786;

     label030:
        return 8789;

     label031:
        return 8788;

     label032:
        return 8805;

     label033:
        return 8804;

     label034:
        return 8807;

     label035:
        return 8806;

     label036:
        return 8809;

     label037:
        return 8808;

     label038:
        return 8811;

     label039:
        return 8810;

     label040:
        return 8815;

     label041:
        return 8814;

     label042:
        return 8817;

     label043:
        return 8816;

     label044:
        return 8819;

     label045:
        return 8818;

     label046:
        return 8821;

     label047:
        return 8820;

     label048:
        return 8823;

     label049:
        return 8822;

     label050:
        return 8825;

     label051:
        return 8824;

     label052:
        return 8827;

     label053:
        return 8826;

     label054:
        return 8829;

     label055:
        return 8828;

     label056:
        return 8831;

     label057:
        return 8830;

     label058:
        return 8833;

     label059:
        return 8832;

     label060:
        return 8835;

     label061:
        return 8834;

     label062:
        return 8837;

     label063:
        return 8836;

     label064:
        return 8839;

     label065:
        return 8838;

     label066:
        return 8841;

     label067:
        return 8840;

     label068:
        return 8843;

     label069:
        return 8842;

     label070:
        return 8848;

     label071:
        return 8847;

     label072:
        return 8850;

     label073:
        return 8849;

     label074:
        return 8867;

     label075:
        return 8866;

     label076:
        return 8881;

     label077:
        return 8880;

     label078:
        return 8883;

     label079:
        return 8882;

     label080:
        return 8885;

     label081:
        return 8884;

     label082:
        return 8887;

     label083:
        return 8886;

     label084:
        return 8906;

     label085:
        return 8905;

     label086:
        return 8908;

     label087:
        return 8907;

     label088:
        return 8771;

     label089:
        return 8913;

     label090:
        return 8912;

     label091:
        return 8919;

     label092:
        return 8918;

     label093:
        return 8921;

     label094:
        return 8920;

     label095:
        return 8923;

     label096:
        return 8922;

     label097:
        return 8925;

     label098:
        return 8924;

     label099:
        return 8927;

     label100:
        return 8926;

     label101:
        return 8929;

     label102:
        return 8928;

     label103:
        return 8931;

     label104:
        return 8930;

     label105:
        return 8933;

     label106:
        return 8932;

     label107:
        return 8935;

     label108:
        return 8934;

     label109:
        return 8937;

     label110:
        return 8936;

     label111:
        return 8939;

     label112:
        return 8938;

     label113:
        return 8941;

     label114:
        return 8940;

     label115:
        return 8945;

     label116:
        return 8944;

     label117:
        return 8969;

     label118:
        return 8968;

     label119:
        return 8971;

     label120:
        return 8970;

     label121:
        return 9002;

     label122:
        return 9001;

     label123:
        return 12297;

     label124:
        return 12296;

     label125:
        return 12299;

     label126:
        return 12298;

     label127:
        return 12301;

     label128:
        return 12300;

     label129:
        return 12303;

     label130:
        return 12302;

     label131:
        return 12305;

     label132:
        return 12304;

     label133:
        return 12309;

     label134:
        return 12308;

     label135:
        return 12311;

     label136:
        return 12310;

     label137:
        return 12313;

     label138:
        return 12312;

     label139:
        return 12315;

     label140:
        return 12314;

     label141:
        return i0;
    }

    static void <clinit>()
    {
        java.lang.Float $r0;

        $r0 = new java.lang.Float;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>(#NaNF);

        <org.apache.batik.gvt.text.BidiAttributedCharacterIterator: java.lang.Float FLOAT_NAN> = $r0;

        return;
    }
}
