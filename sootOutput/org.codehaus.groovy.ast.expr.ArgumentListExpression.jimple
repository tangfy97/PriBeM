public class org.codehaus.groovy.ast.expr.ArgumentListExpression extends org.codehaus.groovy.ast.expr.TupleExpression
{
    public static final java.lang.Object[] EMPTY_ARRAY;
    public static final org.codehaus.groovy.ast.expr.ArgumentListExpression EMPTY_ARGUMENTS;

    public void <init>()
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>()>();

        return;
    }

    public void <init>(java.util.List)
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        java.util.List r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>(java.util.List)>(r1);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression[])
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        org.codehaus.groovy.ast.expr.Expression[] r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression[];

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>(org.codehaus.groovy.ast.expr.Expression[])>(r1);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.Parameter[])
    {
        org.codehaus.groovy.ast.Parameter[] r1;
        org.codehaus.groovy.ast.Parameter r2;
        org.codehaus.groovy.ast.expr.VariableExpression $r3;
        int $i0, i1;
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        java.lang.String $r4;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.Parameter[];

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        r2 = r1[i1];

        $r3 = new org.codehaus.groovy.ast.expr.VariableExpression;

        $r4 = virtualinvoke r2.<org.codehaus.groovy.ast.Parameter: java.lang.String getName()>();

        specialinvoke $r3.<org.codehaus.groovy.ast.expr.VariableExpression: void <init>(java.lang.String)>($r4);

        virtualinvoke r0.<org.codehaus.groovy.ast.expr.ArgumentListExpression: org.codehaus.groovy.ast.expr.TupleExpression addExpression(org.codehaus.groovy.ast.expr.Expression)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>(org.codehaus.groovy.ast.expr.Expression)>(r1);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1, r2;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r2 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>(r1, r2);

        return;
    }

    public void <init>(org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r0;
        org.codehaus.groovy.ast.expr.Expression r1, r2, r3;

        r0 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r2 := @parameter1: org.codehaus.groovy.ast.expr.Expression;

        r3 := @parameter2: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.TupleExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>(r1, r2, r3);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        java.util.List $r2, $r4;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r3;
        org.codehaus.groovy.ast.expr.ArgumentListExpression $r0, r1;

        r1 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r3 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        $r0 = new org.codehaus.groovy.ast.expr.ArgumentListExpression;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.ArgumentListExpression: java.util.List getExpressions()>();

        $r4 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.ArgumentListExpression: java.util.List transformExpressions(java.util.List,org.codehaus.groovy.ast.expr.ExpressionTransformer)>($r2, r3);

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.ArgumentListExpression: void <init>(java.util.List)>($r4);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.Expression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r1);

        return $r0;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitArgumentlistExpression(org.codehaus.groovy.ast.expr.ArgumentListExpression)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.codehaus.groovy.ast.expr.ArgumentListExpression $r1;
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.codehaus.groovy.ast.expr.ArgumentListExpression: java.lang.Object[] EMPTY_ARRAY> = $r0;

        $r1 = new org.codehaus.groovy.ast.expr.ArgumentListExpression;

        specialinvoke $r1.<org.codehaus.groovy.ast.expr.ArgumentListExpression: void <init>()>();

        <org.codehaus.groovy.ast.expr.ArgumentListExpression: org.codehaus.groovy.ast.expr.ArgumentListExpression EMPTY_ARGUMENTS> = $r1;

        return;
    }
}
