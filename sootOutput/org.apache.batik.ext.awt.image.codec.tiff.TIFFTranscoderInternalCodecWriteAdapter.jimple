public class org.apache.batik.ext.awt.image.codec.tiff.TIFFTranscoderInternalCodecWriteAdapter extends java.lang.Object implements org.apache.batik.transcoder.image.TIFFTranscoder$WriteAdapter
{

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFTranscoderInternalCodecWriteAdapter r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFTranscoderInternalCodecWriteAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeImage(org.apache.batik.transcoder.image.TIFFTranscoder, java.awt.image.BufferedImage, org.apache.batik.transcoder.TranscoderOutput) throws org.apache.batik.transcoder.TranscoderException
    {
        java.awt.image.SampleModel $r26;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField[] $r5;
        int[] $r30;
        org.apache.batik.ext.awt.image.rendered.FormatRed $r37;
        org.apache.batik.transcoder.TranscodingHints$Key $r12, $r18;
        boolean $z0, $z1, $z2;
        java.awt.image.BufferedImage r13;
        java.awt.image.PixelInterleavedSampleModel $r36;
        org.apache.batik.transcoder.TranscodingHints $r1;
        org.apache.batik.bridge.UserAgent $r3;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r17;
        float $f0, $f1;
        org.apache.batik.transcoder.image.TIFFTranscoder r0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFTranscoderInternalCodecWriteAdapter r24;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam $r31;
        long $l1, $l2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFImageEncoder $r35;
        long[] $r4;
        int i0, $i3, $i4, $i5, $i6, i7, $i9, $i11;
        java.awt.image.SinglePixelPackedSampleModel $r27;
        java.lang.String $r20, $r21, r25;
        double $d0, $d1;
        long[][] $r9, $r11;
        java.io.OutputStream $r28;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFField $r32, $r33, $r34;
        org.apache.batik.transcoder.TranscoderOutput r14;
        java.io.IOException $r22;
        org.apache.batik.transcoder.TranscoderException $r38;
        char[] $r7;
        java.lang.Object $r19;

        r24 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFTranscoderInternalCodecWriteAdapter;

        r0 := @parameter0: org.apache.batik.transcoder.image.TIFFTranscoder;

        r13 := @parameter1: java.awt.image.BufferedImage;

        r14 := @parameter2: org.apache.batik.transcoder.TranscoderOutput;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints getTranscodingHints()>();

        $r31 = new org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam;

        specialinvoke $r31.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.batik.transcoder.image.TIFFTranscoder: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $f0 = interfaceinvoke $r3.<org.apache.batik.bridge.UserAgent: float getPixelUnitToMillimeter()>();

        $f1 = 100000.0F / $f0;

        $d0 = (double) $f1;

        $d1 = $d0 + 0.5;

        i0 = (int) $d1;

        $r4 = newarray (long)[2];

        $l1 = (long) i0;

        $r4[0] = $l1;

        $l2 = (long) 10000;

        $r4[1] = $l2;

        $r5 = newarray (org.apache.batik.ext.awt.image.codec.tiff.TIFFField)[3];

        $r32 = new org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r7 = newarray (char)[1];

        $r7[0] = 3;

        specialinvoke $r32.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: void <init>(int,int,int,java.lang.Object)>(296, 3, 1, $r7);

        $r5[0] = $r32;

        $r33 = new org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r9 = newarray (long[])[1];

        $r9[0] = $r4;

        specialinvoke $r33.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: void <init>(int,int,int,java.lang.Object)>(282, 5, 1, $r9);

        $r5[1] = $r33;

        $r34 = new org.apache.batik.ext.awt.image.codec.tiff.TIFFField;

        $r11 = newarray (long[])[1];

        $r11[0] = $r4;

        specialinvoke $r34.<org.apache.batik.ext.awt.image.codec.tiff.TIFFField: void <init>(int,int,int,java.lang.Object)>(283, 5, 1, $r11);

        $r5[2] = $r34;

        virtualinvoke $r31.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: void setExtraFields(org.apache.batik.ext.awt.image.codec.tiff.TIFFField[])>($r5);

        $r12 = <org.apache.batik.transcoder.image.TIFFTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_COMPRESSION_METHOD>;

        $z0 = virtualinvoke $r1.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r12);

        if $z0 == 0 goto label2;

        $r18 = <org.apache.batik.transcoder.image.TIFFTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_COMPRESSION_METHOD>;

        $r19 = virtualinvoke $r1.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r18);

        r25 = (java.lang.String) $r19;

        $r20 = "packbits";

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z1 == 0 goto label1;

        $i9 = (int) 32773;

        virtualinvoke $r31.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: void setCompression(int)>($i9);

        goto label2;

     label1:
        $r21 = "deflate";

        $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z2 == 0 goto label2;

        $i11 = (int) 32946;

        virtualinvoke $r31.<org.apache.batik.ext.awt.image.codec.tiff.TIFFEncodeParam: void setCompression(int)>($i11);

     label2:
        $i4 = virtualinvoke r13.<java.awt.image.BufferedImage: int getWidth()>();

        $i5 = virtualinvoke r13.<java.awt.image.BufferedImage: int getHeight()>();

        $r26 = virtualinvoke r13.<java.awt.image.BufferedImage: java.awt.image.SampleModel getSampleModel()>();

        $r27 = (java.awt.image.SinglePixelPackedSampleModel) $r26;

        $r28 = virtualinvoke r14.<org.apache.batik.transcoder.TranscoderOutput: java.io.OutputStream getOutputStream()>();

        $r35 = new org.apache.batik.ext.awt.image.codec.tiff.TIFFImageEncoder;

        specialinvoke $r35.<org.apache.batik.ext.awt.image.codec.tiff.TIFFImageEncoder: void <init>(java.io.OutputStream,org.apache.batik.ext.awt.image.codec.util.ImageEncodeParam)>($r28, $r31);

        $i6 = virtualinvoke $r27.<java.awt.image.SampleModel: int getNumBands()>();

        $r30 = newarray (int)[$i6];

        i7 = 0;

        goto label4;

     label3:
        $r30[i7] = i7;

        i7 = i7 + 1;

     label4:
        if i7 < $i6 goto label3;

        $r36 = new java.awt.image.PixelInterleavedSampleModel;

        $i3 = $i4 * $i6;

        specialinvoke $r36.<java.awt.image.PixelInterleavedSampleModel: void <init>(int,int,int,int,int,int[])>(0, $i4, $i5, $i6, $i3, $r30);

        $r37 = new org.apache.batik.ext.awt.image.rendered.FormatRed;

        $r17 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>(r13);

        specialinvoke $r37.<org.apache.batik.ext.awt.image.rendered.FormatRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.image.SampleModel)>($r17, $r36);

        virtualinvoke $r35.<org.apache.batik.ext.awt.image.codec.tiff.TIFFImageEncoder: void encode(java.awt.image.RenderedImage)>($r37);

        virtualinvoke $r28.<java.io.OutputStream: void flush()>();

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;

        $r38 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r38.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r22);

        throw $r38;

     label7:
        return;

        catch java.io.IOException from label2 to label5 with label6;
    }
}
