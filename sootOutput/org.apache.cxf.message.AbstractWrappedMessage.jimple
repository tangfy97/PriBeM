public abstract class org.apache.cxf.message.AbstractWrappedMessage extends java.lang.Object implements org.apache.cxf.message.Message
{
    private org.apache.cxf.message.Message message;

    protected void <init>(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message> = r1;

        return;
    }

    public void clear()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r1.<org.apache.cxf.message.Message: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $z0 = interfaceinvoke $r2.<org.apache.cxf.message.Message: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $z0 = interfaceinvoke $r2.<org.apache.cxf.message.Message: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.util.Set entrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.util.Collection getAttachments()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.util.Collection getAttachments()>();

        return $r2;
    }

    public void setAttachments(java.util.Collection)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.util.Collection r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void setAttachments(java.util.Collection)>(r1);

        return;
    }

    public org.apache.cxf.message.Message getMessage()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        return $r1;
    }

    public void setMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message> = r1;

        return;
    }

    public org.apache.cxf.transport.Destination getDestination()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.transport.Destination $r2;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: org.apache.cxf.transport.Destination getDestination()>();

        return $r2;
    }

    public org.apache.cxf.message.Exchange getExchange()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Exchange $r2;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        return $r2;
    }

    public final void setExchange(org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Exchange r1;
        org.apache.cxf.message.Message $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>(r1);

        return;
    }

    public java.lang.String getId()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        java.lang.String $r2;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.lang.String getId()>();

        return $r2;
    }

    public void setId(java.lang.String)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        java.lang.String r1;
        org.apache.cxf.message.Message $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void setId(java.lang.String)>(r1);

        return;
    }

    public org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.interceptor.InterceptorChain $r2;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        return $r2;
    }

    public void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.interceptor.InterceptorChain r1;
        org.apache.cxf.message.Message $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: org.apache.cxf.interceptor.InterceptorChain;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>(r1);

        return;
    }

    public java.lang.Object getContent(java.lang.Class)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(r1);

        return $r3;
    }

    public void removeContent(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(r1);

        return;
    }

    public java.util.Set getContentFormats()
    {
        java.util.Set $r2;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.util.Set getContentFormats()>();

        return $r2;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $z0 = interfaceinvoke $r1.<org.apache.cxf.message.Message: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r3;
        java.lang.Object r2, $r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r2.<org.apache.cxf.message.Message: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public void setContent(java.lang.Class, java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r3;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r3.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(r1, r2);

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $i0 = interfaceinvoke $r1.<org.apache.cxf.message.Message: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.util.Collection values()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Class)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Class r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(r1);

        return $r3;
    }

    public void put(java.lang.Class, java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r3;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r3.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object getContextualProperty(java.lang.String)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>(r1);

        return $r3;
    }

    public void setContextualProperty(java.lang.String, java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r3.<org.apache.cxf.message.Message: void setContextualProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void resetContextCache()
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        org.apache.cxf.message.Message $r1;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        $r1 = r0.<org.apache.cxf.message.AbstractWrappedMessage: org.apache.cxf.message.Message message>;

        interfaceinvoke $r1.<org.apache.cxf.message.Message: void resetContextCache()>();

        return;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.message.AbstractWrappedMessage r0;
        java.lang.Object r1, r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.message.AbstractWrappedMessage;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke r0.<org.apache.cxf.message.AbstractWrappedMessage: java.lang.Object put(java.lang.String,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
