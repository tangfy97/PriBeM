public class ucar.unidata.geoloc.projection.UtmProjection extends ucar.unidata.geoloc.ProjectionImpl
{
    private ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon;
    private ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy;
    private ucar.unidata.geoloc.projection.UtmProjection$SaveParams save;
    static final boolean $assertionsDisabled;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.UtmProjection r0, $r4;
        ucar.unidata.geoloc.projection.UtmProjection$SaveParams $r1, $r2, $r3;
        int $i0, $i1;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        $r1 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save>;

        if $r1 != null goto label1;

        $r4 = new ucar.unidata.geoloc.projection.UtmProjection;

        $i1 = virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: int getZone()>();

        $z1 = virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: boolean isNorth()>();

        specialinvoke $r4.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(int,boolean)>($i1, $z1);

        goto label2;

     label1:
        $r4 = new ucar.unidata.geoloc.projection.UtmProjection;

        $r2 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save>;

        $d0 = $r2.<ucar.unidata.geoloc.projection.UtmProjection$SaveParams: double a>;

        $r3 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save>;

        $d1 = $r3.<ucar.unidata.geoloc.projection.UtmProjection$SaveParams: double f>;

        $i0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: int getZone()>();

        $z0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: boolean isNorth()>();

        specialinvoke $r4.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(double,double,int,boolean)>($d0, $d1, $i0, $z0);

     label2:
        return $r4;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        specialinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(int,boolean)>(5, 1);

        return;
    }

    public void <init>(int, boolean)
    {
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r1, $r3, $r4;
        ucar.unidata.geoloc.projection.UtmProjection r0;
        int i0;
        java.lang.String $r5;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r2;
        boolean z0;
        double $d0, $d1, $d2;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save> = null;

        $r1 = new ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter;

        specialinvoke $r1.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: void <init>(int,boolean)>(i0, z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon> = $r1;

        $r2 = new ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: void <init>(int,boolean)>(i0, z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy> = $r2;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "UTM");

        $r3 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d0 = virtualinvoke $r3.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getA()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("semi-major_axis", $d0);

        $r4 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d1 = virtualinvoke $r4.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getF()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("inverse_flattening", $d1);

        $d2 = (double) i0;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("UTM_zone", $d2);

        if z0 == 0 goto label1;

        $r5 = "true";

        goto label2;

     label1:
        $r5 = "false";

     label2:
        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,java.lang.String)>("north_hemisphere", $r5);

        return;
    }

    public void <init>(double, double, int, boolean)
    {
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r2;
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.projection.UtmProjection$SaveParams $r1;
        int i0;
        java.lang.String $r4;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r3;
        double d0, d1, $d2;
        boolean z0;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save> = null;

        $r1 = new ucar.unidata.geoloc.projection.UtmProjection$SaveParams;

        specialinvoke $r1.<ucar.unidata.geoloc.projection.UtmProjection$SaveParams: void <init>(double,double)>(d0, d1);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.UtmProjection$SaveParams save> = $r1;

        $r2 = new ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: void <init>(double,double,int,boolean)>(d0, d1, i0, z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon> = $r2;

        $r3 = new ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter;

        specialinvoke $r3.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: void <init>(double,double,int,boolean)>(d0, d1, i0, z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy> = $r3;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "universal_transverse_mercator");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("semi-major_axis", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("inverse_flattening", d1);

        $d2 = (double) i0;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,double)>("UTM_zone", $d2);

        if z0 == 0 goto label1;

        $r4 = "true";

        goto label2;

     label1:
        $r4 = "false";

     label2:
        virtualinvoke r0.<ucar.unidata.geoloc.projection.UtmProjection: void addParameter(java.lang.String,java.lang.String)>("north_hemisphere", $r4);

        return;
    }

    public int getZone()
    {
        int $i0;
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r1;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        $r1 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $i0 = virtualinvoke $r1.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: int getZone()>();

        return $i0;
    }

    public void setZone(int)
    {
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        ucar.unidata.geoloc.projection.UtmProjection r0;
        int i0, $i1;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r5;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        i0 := @parameter0: int;

        $r1 = new ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter;

        $r2 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d0 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getA()>();

        $r3 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d1 = virtualinvoke $r3.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getF()>();

        $r4 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $z0 = virtualinvoke $r4.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: boolean isNorth()>();

        specialinvoke $r1.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: void <init>(double,double,int,boolean)>($d0, $d1, i0, $z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon> = $r1;

        $r5 = new ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter;

        $r6 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d2 = virtualinvoke $r6.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getA()>();

        $r7 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d3 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getF()>();

        $r8 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $i1 = virtualinvoke $r8.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: int getZone()>();

        $r9 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $z1 = virtualinvoke $r9.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: boolean isNorth()>();

        specialinvoke $r5.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: void <init>(double,double,int,boolean)>($d2, $d3, $i1, $z1);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy> = $r5;

        return;
    }

    public boolean isNorth()
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r1;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        $r1 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $z0 = virtualinvoke $r1.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: boolean isNorth()>();

        return $z0;
    }

    public void setNorth(boolean)
    {
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        ucar.unidata.geoloc.projection.UtmProjection r0;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;
        boolean z0, $z1;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r5;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        z0 := @parameter0: boolean;

        $r1 = new ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter;

        $r2 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d0 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getA()>();

        $r3 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d1 = virtualinvoke $r3.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getF()>();

        $r4 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $i0 = virtualinvoke $r4.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: int getZone()>();

        specialinvoke $r1.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: void <init>(double,double,int,boolean)>($d0, $d1, $i0, z0);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon> = $r1;

        $r5 = new ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter;

        $r6 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d2 = virtualinvoke $r6.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getA()>();

        $r7 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d3 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double getF()>();

        $r8 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $i1 = virtualinvoke $r8.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: int getZone()>();

        $r9 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $z1 = virtualinvoke $r9.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: boolean isNorth()>();

        specialinvoke $r5.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: void <init>(double,double,int,boolean)>($d2, $d3, $i1, $z1);

        r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy> = $r5;

        return;
    }

    public java.lang.String getProjectionTypeLabel()
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        return "Universal transverse mercator";
    }

    public double getCentralMeridian()
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r1;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        $r1 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: double getCentralMeridian()>();

        return $d0;
    }

    public java.lang.String paramsToString()
    {
        ucar.unidata.geoloc.projection.UtmProjection r1;
        int $i0;
        java.lang.StringBuilder $r0, $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r1 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.UtmProjection: int getZone()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.UtmProjection: boolean isNorth()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.ProjectionPoint r1, r2;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.projection.UtmProjection r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.UtmProjection;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.UtmProjection) r0;

        $i0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.UtmProjection: int getZone()>();

        $i1 = virtualinvoke r2.<ucar.unidata.geoloc.projection.UtmProjection: int getZone()>();

        if $i0 != $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        ucar.unidata.geoloc.LatLonPoint r0;
        ucar.unidata.geoloc.projection.UtmProjection r1;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r3;
        double $d0, $d1;
        ucar.unidata.geoloc.ProjectionPoint $r4;

        r1 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r3 = r1.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy>;

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: ucar.unidata.geoloc.ProjectionPoint latLonToProj(double,double,ucar.unidata.geoloc.ProjectionPointImpl)>($d0, $d1, r2);

        return $r4;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        double[] $r4, $r5;
        ucar.unidata.geoloc.projection.UtmProjection r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.IllegalArgumentException $r1, $r3, $r9;
        double[][] r0, r2, $r8;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r7;

        r6 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:from array not same length as to array");

        throw $r9;

     label5:
        $r7 = r6.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy>;

        $r8 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: double[][] latLonToProj(double[][],double[][],int,int)>(r0, r2, i4, i5);

        return $r8;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        float[] $r4, $r5;
        ucar.unidata.geoloc.projection.UtmProjection r6;
        int $i0, $i1, $i2, $i3, i4, i5;
        float[][] r0, r2, $r8;
        java.lang.IllegalArgumentException $r1, $r3, $r9;
        ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter $r7;

        r6 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: float[][];

        r2 := @parameter1: float[][];

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.latLonToProj:from array not same length as to array");

        throw $r9;

     label5:
        $r7 = r6.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter convert2xy>;

        $r8 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Gdc_To_Utm_Converter: float[][] latLonToProj(float[][],float[][],int,int)>(r0, r2, i4, i5);

        return $r8;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        ucar.unidata.geoloc.projection.UtmProjection r0;
        ucar.unidata.geoloc.LatLonPoint $r4;
        ucar.unidata.geoloc.LatLonPointImpl r3;
        ucar.unidata.geoloc.ProjectionPoint r1;
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r2;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r3 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $r2 = r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $d0 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: ucar.unidata.geoloc.LatLonPoint projToLatLon(double,double,ucar.unidata.geoloc.LatLonPointImpl)>($d0, $d1, r3);

        return $r4;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        float[][] r0, r2, $r8;
        float[] $r4, $r5;
        java.lang.IllegalArgumentException $r1, $r3, $r9;
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r7;
        ucar.unidata.geoloc.projection.UtmProjection r6;
        int $i0, $i1, $i2, $i3;

        r6 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: float[][];

        r2 := @parameter1: float[][];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:from array not same length as to array");

        throw $r9;

     label5:
        $r7 = r6.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $r8 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: float[][] projToLatLon(float[][],float[][])>(r0, r2);

        return $r8;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        double[] $r4, $r5;
        java.lang.IllegalArgumentException $r1, $r3, $r9;
        ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter $r7;
        ucar.unidata.geoloc.projection.UtmProjection r6;
        int $i0, $i1, $i2, $i3;
        double[][] r0, r2, $r8;

        r6 := @this: ucar.unidata.geoloc.projection.UtmProjection;

        r0 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 == 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (from)");

        throw $r1;

     label2:
        if r2 == null goto label3;

        $i1 = lengthof r2;

        if $i1 == 2 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:null array argument or wrong dimension (to)");

        throw $r3;

     label4:
        $r4 = r0[0];

        $i3 = lengthof $r4;

        $r5 = r2[0];

        $i2 = lengthof $r5;

        if $i3 == $i2 goto label5;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ProjectionImpl.projToLatLon:from array not same length as to array");

        throw $r9;

     label5:
        $r7 = r6.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter convert2latlon>;

        $r8 = virtualinvoke $r7.<ucar.unidata.geoloc.projection.Utm_To_Gdc_Converter: double[][] projToLatLon(double[][],double[][])>(r0, r2);

        return $r8;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Object[] $r2;
        java.lang.Double $r4, $r5;
        java.lang.String[] r8;
        java.lang.AssertionError $r6, $r7;
        ucar.unidata.geoloc.projection.UtmProjection $r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r3;
        ucar.unidata.geoloc.LatLonPointImpl $r1;

        r8 := @parameter0: java.lang.String[];

        $r0 = new ucar.unidata.geoloc.projection.UtmProjection;

        specialinvoke $r0.<ucar.unidata.geoloc.projection.UtmProjection: void <init>(int,boolean)>(17, 1);

        $r1 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.UtmProjection: ucar.unidata.geoloc.LatLonPointImpl projToLatLon(double,double)>(577.8000000000001, 2951.8);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[2];

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r4;

        $d1 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r2[1] = $r5;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%15.12f %15.12f%n", $r2);

        $z0 = <ucar.unidata.geoloc.projection.UtmProjection: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $d3 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $z3 = staticinvoke <ucar.unidata.geoloc.projection.UtmProjection: boolean closeEnough(double,double,double)>($d3, -80.21802662821469, 1.0E-8);

        if $z3 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $z1 = <ucar.unidata.geoloc.projection.UtmProjection: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $d2 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $z2 = staticinvoke <ucar.unidata.geoloc.projection.UtmProjection: boolean closeEnough(double,double,double)>($d2, 26.685132668190793, 1.0E-8);

        if $z2 != 0 goto label2;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        return;
    }

    private static boolean closeEnough(double, double, double)
    {
        byte $b0, $b1;
        int $i2;
        double d0, d1, $d2, $d3, d4, $d5, $d6;
        boolean $z0;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        d4 := @parameter2: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d5 = d1 - d0;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        goto label2;

     label1:
        $d2 = d1 / d0;

        $d3 = $d2 - 1.0;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d3);

     label2:
        $b1 = $d6 cmpg d4;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/unidata/geoloc/projection/UtmProjection;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.unidata.geoloc.projection.UtmProjection: boolean $assertionsDisabled> = $z1;

        return;
    }
}
