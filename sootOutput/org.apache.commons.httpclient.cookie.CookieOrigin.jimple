public final class org.apache.commons.httpclient.cookie.CookieOrigin extends java.lang.Object
{
    private final java.lang.String host;
    private final int port;
    private final java.lang.String path;
    private final boolean secure;

    public void <init>(java.lang.String, int, java.lang.String, boolean)
    {
        java.lang.IllegalArgumentException $r4, $r5, $r10, $r11;
        java.lang.StringBuffer $r6, $r7, $r8;
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        int i0;
        java.lang.String r1, $r2, r3, $r9;
        boolean $z0, z1;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be null");

        throw $r11;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host of origin may not be blank");

        throw $r10;

     label2:
        if i0 >= 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid port: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label3:
        if r3 != null goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path of origin may not be null.");

        throw $r4;

     label4:
        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String host> = r1;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: int port> = i0;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String path> = r3;

        r0.<org.apache.commons.httpclient.cookie.CookieOrigin: boolean secure> = z1;

        return;
    }

    public java.lang.String getHost()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.cookie.CookieOrigin r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        $r1 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String host>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.cookie.CookieOrigin r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        $r1 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: java.lang.String path>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.commons.httpclient.cookie.CookieOrigin r0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        $i0 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: int port>;

        return $i0;
    }

    public boolean isSecure()
    {
        org.apache.commons.httpclient.cookie.CookieOrigin r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.cookie.CookieOrigin;

        $z0 = r0.<org.apache.commons.httpclient.cookie.CookieOrigin: boolean secure>;

        return $z0;
    }
}
