public final class org.apache.cxf.transport.http.blueprint.HolderUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.transport.http.blueprint.HolderUtils r0;

        r0 := @this: org.apache.cxf.transport.http.blueprint.HolderUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getJaxbObject(org.w3c.dom.Element, java.lang.Class, javax.xml.bind.JAXBContext, java.util.Set, java.lang.ClassLoader)
    {
        javax.xml.bind.Unmarshaller $r5;
        javax.xml.bind.JAXBElement r8;
        java.util.Set r2;
        javax.xml.bind.JAXBException $r10;
        org.w3c.dom.Element r6;
        java.lang.Class r0;
        java.lang.Object $r7, $r9;
        java.lang.ClassLoader r3;
        javax.xml.bind.JAXBContext r1, $r4;

        r6 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: javax.xml.bind.JAXBContext;

        r2 := @parameter3: java.util.Set;

        r3 := @parameter4: java.lang.ClassLoader;

     label1:
        $r4 = staticinvoke <org.apache.cxf.transport.http.blueprint.HolderUtils: javax.xml.bind.JAXBContext getContext(java.lang.Class,javax.xml.bind.JAXBContext,java.util.Set,java.lang.ClassLoader)>(r0, r1, r2, r3);

        $r5 = virtualinvoke $r4.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r7 = interfaceinvoke $r5.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(org.w3c.dom.Node)>(r6);

        r8 = (javax.xml.bind.JAXBElement) $r7;

        $r9 = virtualinvoke r8.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        return null;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public static synchronized javax.xml.bind.JAXBContext getContext(java.lang.Class, javax.xml.bind.JAXBContext, java.util.Set, java.lang.ClassLoader)
    {
        java.util.HashSet $r14;
        java.lang.String $r1, $r7, $r8;
        javax.xml.bind.JAXBContext r12;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r2;
        java.lang.Package $r5, $r6;
        java.util.Set r13;
        java.lang.RuntimeException $r11;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r16;
        javax.xml.bind.JAXBException $r10;
        java.lang.Class r0, r4;
        java.lang.Object $r3;
        java.lang.ClassLoader r9, $r15;

        r0 := @parameter0: java.lang.Class;

        r12 := @parameter1: javax.xml.bind.JAXBContext;

        r13 := @parameter2: java.util.Set;

        r9 := @parameter3: java.lang.ClassLoader;

        if r12 == null goto label01;

        if r13 == null goto label01;

        $z2 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z2 != 0 goto label11;

     label01:
        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        if r13 == null goto label02;

        interfaceinvoke $r14.<java.util.Set: boolean addAll(java.util.Collection)>(r13);

     label02:
        $r1 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(r0);

        if r0 != null goto label03;

        $r15 = r9;

        goto label04;

     label03:
        $r15 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r14, $r1, $r15);

        if r0 == null goto label08;

        z3 = 0;

        $r2 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r3;

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.Package getPackage()>();

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        if $r5 != $r6 goto label06;

        $r7 = "ObjectFactory";

        $r8 = virtualinvoke r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label06;

        z3 = 1;

     label06:
        goto label05;

     label07:
        if z3 != 0 goto label08;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label08:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r14);

        $r16 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r14, null, null, null, 0);

        virtualinvoke $r16.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r12 = virtualinvoke $r16.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label11:
        return r12;

        catch javax.xml.bind.JAXBException from label01 to label09 with label10;
    }
}
