public class com.jhlabs.image.QuiltFilter extends com.jhlabs.image.WholeImageFilter implements java.io.Serializable
{
    private java.util.Random randomGenerator;
    private long seed;
    private int iterations;
    private float a;
    private float b;
    private float c;
    private float d;
    private int k;
    private com.jhlabs.image.Colormap colormap;

    public void <init>()
    {
        com.jhlabs.image.QuiltFilter r0;
        com.jhlabs.image.LinearColormap $r1;
        java.util.Random $r2;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        specialinvoke r0.<com.jhlabs.image.WholeImageFilter: void <init>()>();

        r0.<com.jhlabs.image.QuiltFilter: long seed> = 567L;

        r0.<com.jhlabs.image.QuiltFilter: int iterations> = 25000;

        r0.<com.jhlabs.image.QuiltFilter: float a> = -0.59F;

        r0.<com.jhlabs.image.QuiltFilter: float b> = 0.2F;

        r0.<com.jhlabs.image.QuiltFilter: float c> = 0.1F;

        r0.<com.jhlabs.image.QuiltFilter: float d> = 0.0F;

        r0.<com.jhlabs.image.QuiltFilter: int k> = 0;

        $r1 = new com.jhlabs.image.LinearColormap;

        specialinvoke $r1.<com.jhlabs.image.LinearColormap: void <init>()>();

        r0.<com.jhlabs.image.QuiltFilter: com.jhlabs.image.Colormap colormap> = $r1;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator> = $r2;

        return;
    }

    public void randomize()
    {
        com.jhlabs.image.QuiltFilter r0;
        java.util.Date $r1;
        long $l0, $l1;
        java.util.Random $r2, $r3, $r4, $r5, $r6, $r7;
        int $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        r0.<com.jhlabs.image.QuiltFilter: long seed> = $l0;

        $r2 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $l1 = r0.<com.jhlabs.image.QuiltFilter: long seed>;

        virtualinvoke $r2.<java.util.Random: void setSeed(long)>($l1);

        $r3 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $f0 = virtualinvoke $r3.<java.util.Random: float nextFloat()>();

        r0.<com.jhlabs.image.QuiltFilter: float a> = $f0;

        $r4 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $f1 = virtualinvoke $r4.<java.util.Random: float nextFloat()>();

        r0.<com.jhlabs.image.QuiltFilter: float b> = $f1;

        $r5 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $f2 = virtualinvoke $r5.<java.util.Random: float nextFloat()>();

        r0.<com.jhlabs.image.QuiltFilter: float c> = $f2;

        $r6 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $f3 = virtualinvoke $r6.<java.util.Random: float nextFloat()>();

        r0.<com.jhlabs.image.QuiltFilter: float d> = $f3;

        $r7 = r0.<com.jhlabs.image.QuiltFilter: java.util.Random randomGenerator>;

        $i2 = virtualinvoke $r7.<java.util.Random: int nextInt()>();

        $i3 = $i2 % 20;

        $i4 = $i3 - 10;

        r0.<com.jhlabs.image.QuiltFilter: int k> = $i4;

        return;
    }

    public void setIterations(int)
    {
        int i0;
        com.jhlabs.image.QuiltFilter r0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.QuiltFilter: int iterations> = i0;

        return;
    }

    public int getIterations()
    {
        int $i0;
        com.jhlabs.image.QuiltFilter r0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $i0 = r0.<com.jhlabs.image.QuiltFilter: int iterations>;

        return $i0;
    }

    public void setA(float)
    {
        com.jhlabs.image.QuiltFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.QuiltFilter: float a> = f0;

        return;
    }

    public float getA()
    {
        com.jhlabs.image.QuiltFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $f0 = r0.<com.jhlabs.image.QuiltFilter: float a>;

        return $f0;
    }

    public void setB(float)
    {
        com.jhlabs.image.QuiltFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.QuiltFilter: float b> = f0;

        return;
    }

    public float getB()
    {
        com.jhlabs.image.QuiltFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $f0 = r0.<com.jhlabs.image.QuiltFilter: float b>;

        return $f0;
    }

    public void setC(float)
    {
        com.jhlabs.image.QuiltFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.QuiltFilter: float c> = f0;

        return;
    }

    public float getC()
    {
        com.jhlabs.image.QuiltFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $f0 = r0.<com.jhlabs.image.QuiltFilter: float c>;

        return $f0;
    }

    public void setD(float)
    {
        com.jhlabs.image.QuiltFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.QuiltFilter: float d> = f0;

        return;
    }

    public float getD()
    {
        com.jhlabs.image.QuiltFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $f0 = r0.<com.jhlabs.image.QuiltFilter: float d>;

        return $f0;
    }

    public void setK(int)
    {
        int i0;
        com.jhlabs.image.QuiltFilter r0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.QuiltFilter: int k> = i0;

        return;
    }

    public int getK()
    {
        int $i0;
        com.jhlabs.image.QuiltFilter r0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $i0 = r0.<com.jhlabs.image.QuiltFilter: int k>;

        return $i0;
    }

    public void setColormap(com.jhlabs.image.Colormap)
    {
        com.jhlabs.image.QuiltFilter r0;
        com.jhlabs.image.Colormap r1;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        r1 := @parameter0: com.jhlabs.image.Colormap;

        r0.<com.jhlabs.image.QuiltFilter: com.jhlabs.image.Colormap colormap> = r1;

        return;
    }

    public com.jhlabs.image.Colormap getColormap()
    {
        com.jhlabs.image.QuiltFilter r0;
        com.jhlabs.image.Colormap $r1;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        $r1 = r0.<com.jhlabs.image.QuiltFilter: com.jhlabs.image.Colormap colormap>;

        return $r1;
    }

    protected int[] filterPixels(int, int, int[], java.awt.Rectangle)
    {
        byte $b4, $b5, $b9, $b12, $b23, $b26;
        com.jhlabs.image.QuiltFilter r1;
        int[] r0, r4;
        int i0, i1, $i2, $i3, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i27, $i28, $i29, i30, i31, i32, i33, $i34, $i35, $i36, $i37, $i38, $i39;
        com.jhlabs.image.Colormap $r2, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, f73, f74, f75, f76, f77, f78, f79, $f80, f81, $f82, f83, f84, f85, $f86, f87, $f88, f89, f90;
        java.awt.Rectangle r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99;

        r1 := @this: com.jhlabs.image.QuiltFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: int[];

        r5 := @parameter3: java.awt.Rectangle;

        $i2 = i0 * i1;

        r0 = newarray (int)[$i2];

        i30 = 0;

        f73 = 0.1F;

        f74 = 0.3F;

        i31 = 0;

     label01:
        if i31 >= 20 goto label06;

        f75 = 3.1415927F * f73;

        f76 = 3.1415927F * f74;

        $f40 = 2.0F * f75;

        $d54 = (double) $f40;

        $d55 = staticinvoke <java.lang.Math: double sin(double)>($d54);

        f77 = (float) $d55;

        $f41 = 2.0F * f76;

        $d56 = (double) $f41;

        $d57 = staticinvoke <java.lang.Math: double sin(double)>($d56);

        f78 = (float) $d57;

        $f42 = r1.<com.jhlabs.image.QuiltFilter: float a>;

        $f43 = $f42 * f77;

        $d59 = (double) $f43;

        $f44 = r1.<com.jhlabs.image.QuiltFilter: float b>;

        $f45 = $f44 * f77;

        $d60 = (double) $f45;

        $f46 = 2.0F * f76;

        $d58 = (double) $f46;

        $d61 = staticinvoke <java.lang.Math: double cos(double)>($d58);

        $d62 = $d60 * $d61;

        $d64 = $d59 + $d62;

        $f47 = r1.<com.jhlabs.image.QuiltFilter: float c>;

        $d65 = (double) $f47;

        $f48 = 4.0F * f75;

        $d63 = (double) $f48;

        $d66 = staticinvoke <java.lang.Math: double sin(double)>($d63);

        $d67 = $d65 * $d66;

        $d69 = $d64 + $d67;

        $f49 = r1.<com.jhlabs.image.QuiltFilter: float d>;

        $d70 = (double) $f49;

        $f50 = 6.0F * f75;

        $d68 = (double) $f50;

        $d71 = staticinvoke <java.lang.Math: double sin(double)>($d68);

        $d73 = $d70 * $d71;

        $f51 = 4.0F * f76;

        $d72 = (double) $f51;

        $d74 = staticinvoke <java.lang.Math: double cos(double)>($d72);

        $d75 = $d73 * $d74;

        $d77 = $d69 + $d75;

        $i22 = r1.<com.jhlabs.image.QuiltFilter: int k>;

        $f52 = (float) $i22;

        $f53 = $f52 * f73;

        $d76 = (double) $f53;

        $d78 = $d77 + $d76;

        f79 = (float) $d78;

        $b23 = f79 cmpl 0.0F;

        $i34 = (int) $b23;

        if $i34 < 0 goto label02;

        $i29 = (int) f79;

        $f71 = (float) $i29;

        $f80 = f79 - $f71;

        goto label03;

     label02:
        $i24 = (int) f79;

        $f54 = (float) $i24;

        $f55 = f79 - $f54;

        $f80 = $f55 + 1.0F;

     label03:
        f81 = $f80;

        $f56 = r1.<com.jhlabs.image.QuiltFilter: float a>;

        $f57 = $f56 * f78;

        $d80 = (double) $f57;

        $f58 = r1.<com.jhlabs.image.QuiltFilter: float b>;

        $f59 = $f58 * f78;

        $d81 = (double) $f59;

        $f60 = 2.0F * f75;

        $d79 = (double) $f60;

        $d82 = staticinvoke <java.lang.Math: double cos(double)>($d79);

        $d83 = $d81 * $d82;

        $d85 = $d80 + $d83;

        $f61 = r1.<com.jhlabs.image.QuiltFilter: float c>;

        $d86 = (double) $f61;

        $f62 = 4.0F * f76;

        $d84 = (double) $f62;

        $d87 = staticinvoke <java.lang.Math: double sin(double)>($d84);

        $d88 = $d86 * $d87;

        $d90 = $d85 + $d88;

        $f63 = r1.<com.jhlabs.image.QuiltFilter: float d>;

        $d91 = (double) $f63;

        $f64 = 6.0F * f76;

        $d89 = (double) $f64;

        $d92 = staticinvoke <java.lang.Math: double sin(double)>($d89);

        $d94 = $d91 * $d92;

        $f65 = 4.0F * f75;

        $d93 = (double) $f65;

        $d95 = staticinvoke <java.lang.Math: double cos(double)>($d93);

        $d96 = $d94 * $d95;

        $d98 = $d90 + $d96;

        $i25 = r1.<com.jhlabs.image.QuiltFilter: int k>;

        $f66 = (float) $i25;

        $f67 = $f66 * f74;

        $d97 = (double) $f67;

        $d99 = $d98 + $d97;

        $f72 = (float) $d99;

        $b26 = $f72 cmpl 0.0F;

        $i35 = (int) $b26;

        if $i35 < 0 goto label04;

        $i28 = (int) $f72;

        $f70 = (float) $i28;

        $f82 = $f72 - $f70;

        goto label05;

     label04:
        $i27 = (int) $f72;

        $f68 = (float) $i27;

        $f69 = $f72 - $f68;

        $f82 = $f69 + 1.0F;

     label05:
        f73 = f81;

        f74 = $f82;

        i31 = i31 + 1;

        goto label01;

     label06:
        i32 = 0;

     label07:
        $i3 = r1.<com.jhlabs.image.QuiltFilter: int iterations>;

        if i32 >= $i3 goto label13;

        f83 = 3.1415927F * f73;

        f84 = 3.1415927F * f74;

        $f5 = r1.<com.jhlabs.image.QuiltFilter: float a>;

        $d1 = (double) $f5;

        $f6 = 2.0F * f83;

        $d0 = (double) $f6;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d4 = $d1 * $d2;

        $f7 = r1.<com.jhlabs.image.QuiltFilter: float b>;

        $d5 = (double) $f7;

        $f8 = 2.0F * f83;

        $d3 = (double) $f8;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d8 = $d5 * $d6;

        $f9 = 2.0F * f84;

        $d7 = (double) $f9;

        $d9 = staticinvoke <java.lang.Math: double cos(double)>($d7);

        $d10 = $d8 * $d9;

        $d12 = $d4 + $d10;

        $f10 = r1.<com.jhlabs.image.QuiltFilter: float c>;

        $d13 = (double) $f10;

        $f11 = 4.0F * f83;

        $d11 = (double) $f11;

        $d14 = staticinvoke <java.lang.Math: double sin(double)>($d11);

        $d15 = $d13 * $d14;

        $d17 = $d12 + $d15;

        $f12 = r1.<com.jhlabs.image.QuiltFilter: float d>;

        $d18 = (double) $f12;

        $f13 = 6.0F * f83;

        $d16 = (double) $f13;

        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d16);

        $d21 = $d18 * $d19;

        $f14 = 4.0F * f84;

        $d20 = (double) $f14;

        $d22 = staticinvoke <java.lang.Math: double cos(double)>($d20);

        $d23 = $d21 * $d22;

        $d25 = $d17 + $d23;

        $i8 = r1.<com.jhlabs.image.QuiltFilter: int k>;

        $f15 = (float) $i8;

        $f16 = $f15 * f73;

        $d24 = (double) $f16;

        $d26 = $d25 + $d24;

        f85 = (float) $d26;

        $b9 = f85 cmpl 0.0F;

        $i36 = (int) $b9;

        if $i36 < 0 goto label08;

        $i21 = (int) f85;

        $f38 = (float) $i21;

        $f86 = f85 - $f38;

        goto label09;

     label08:
        $i10 = (int) f85;

        $f17 = (float) $i10;

        $f18 = f85 - $f17;

        $f86 = $f18 + 1.0F;

     label09:
        f87 = $f86;

        $f19 = r1.<com.jhlabs.image.QuiltFilter: float a>;

        $d28 = (double) $f19;

        $f20 = 2.0F * f84;

        $d27 = (double) $f20;

        $d29 = staticinvoke <java.lang.Math: double sin(double)>($d27);

        $d31 = $d28 * $d29;

        $f21 = r1.<com.jhlabs.image.QuiltFilter: float b>;

        $d32 = (double) $f21;

        $f22 = 2.0F * f84;

        $d30 = (double) $f22;

        $d33 = staticinvoke <java.lang.Math: double sin(double)>($d30);

        $d35 = $d32 * $d33;

        $f23 = 2.0F * f83;

        $d34 = (double) $f23;

        $d36 = staticinvoke <java.lang.Math: double cos(double)>($d34);

        $d37 = $d35 * $d36;

        $d39 = $d31 + $d37;

        $f24 = r1.<com.jhlabs.image.QuiltFilter: float c>;

        $d40 = (double) $f24;

        $f25 = 4.0F * f84;

        $d38 = (double) $f25;

        $d41 = staticinvoke <java.lang.Math: double sin(double)>($d38);

        $d42 = $d40 * $d41;

        $d44 = $d39 + $d42;

        $f26 = r1.<com.jhlabs.image.QuiltFilter: float d>;

        $d45 = (double) $f26;

        $f27 = 6.0F * f84;

        $d43 = (double) $f27;

        $d46 = staticinvoke <java.lang.Math: double sin(double)>($d43);

        $d48 = $d45 * $d46;

        $f28 = 4.0F * f83;

        $d47 = (double) $f28;

        $d49 = staticinvoke <java.lang.Math: double cos(double)>($d47);

        $d50 = $d48 * $d49;

        $d52 = $d44 + $d50;

        $i11 = r1.<com.jhlabs.image.QuiltFilter: int k>;

        $f29 = (float) $i11;

        $f30 = $f29 * f74;

        $d51 = (double) $f30;

        $d53 = $d52 + $d51;

        $f39 = (float) $d53;

        $b12 = $f39 cmpl 0.0F;

        $i37 = (int) $b12;

        if $i37 < 0 goto label10;

        $i18 = (int) $f39;

        $f37 = (float) $i18;

        $f88 = $f39 - $f37;

        goto label11;

     label10:
        $i13 = (int) $f39;

        $f31 = (float) $i13;

        $f32 = $f39 - $f31;

        $f88 = $f32 + 1.0F;

     label11:
        f73 = f87;

        f74 = $f88;

        $f33 = (float) i0;

        $f34 = $f33 * f87;

        $i19 = (int) $f34;

        $f35 = (float) i1;

        $f36 = $f35 * $f88;

        $i20 = (int) $f36;

        if $i19 < 0 goto label12;

        if $i19 >= i0 goto label12;

        if $i20 < 0 goto label12;

        if $i20 >= i1 goto label12;

        $i14 = i0 * $i20;

        $i15 = $i14 + $i19;

        $i16 = r0[$i15];

        $i17 = $i16 + 1;

        r0[$i15] = $i17;

        if $i16 <= i30 goto label12;

        i30 = $i16;

     label12:
        i32 = i32 + 1;

        goto label07;

     label13:
        $r2 = r1.<com.jhlabs.image.QuiltFilter: com.jhlabs.image.Colormap colormap>;

        if $r2 == null goto label17;

        i33 = 0;

        f89 = 0.0F;

     label14:
        $f0 = (float) i1;

        $b4 = f89 cmpg $f0;

        $i38 = (int) $b4;

        if $i38 >= 0 goto label17;

        f90 = 0.0F;

     label15:
        $f1 = (float) i0;

        $b5 = f90 cmpg $f1;

        $i39 = (int) $b5;

        if $i39 >= 0 goto label16;

        $r3 = r1.<com.jhlabs.image.QuiltFilter: com.jhlabs.image.Colormap colormap>;

        $i6 = r0[i33];

        $f3 = (float) $i6;

        $f2 = (float) i30;

        $f4 = $f3 / $f2;

        $i7 = interfaceinvoke $r3.<com.jhlabs.image.Colormap: int getColor(float)>($f4);

        r0[i33] = $i7;

        i33 = i33 + 1;

        f90 = f90 + 1.0F;

        goto label15;

     label16:
        f89 = f89 + 1.0F;

        goto label14;

     label17:
        return r0;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.QuiltFilter r0;

        r0 := @this: com.jhlabs.image.QuiltFilter;

        return "Texture/Chaotic Quilt...";
    }
}
