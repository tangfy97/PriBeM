public class org.eclipse.jdt.internal.core.util.SimpleDocument extends java.lang.Object implements org.eclipse.jface.text.IDocument
{
    private java.lang.StringBuffer buffer;

    public void <init>(java.lang.String)
    {
        java.lang.String r2;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        r0.<org.eclipse.jdt.internal.core.util.SimpleDocument: java.lang.StringBuffer buffer> = $r1;

        return;
    }

    public char getChar(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return 0;
    }

    public int getLength()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.SimpleDocument: java.lang.StringBuffer buffer>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        return $i0;
    }

    public java.lang.String get()
    {
        java.lang.String $r2;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.SimpleDocument: java.lang.StringBuffer buffer>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String get(int, int)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        java.lang.StringBuffer $r1;
        int i0, i1, $i2;
        java.lang.String $r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.SimpleDocument: java.lang.StringBuffer buffer>;

        $i2 = i0 + i1;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String substring(int,int)>(i0, $i2);

        return $r2;
    }

    public void set(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void replace(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        java.lang.StringBuffer $r2;
        int i0, i1, $i2;
        java.lang.String r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.SimpleDocument: java.lang.StringBuffer buffer>;

        $i2 = i0 + i1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i0, $i2, r1);

        return;
    }

    public void addDocumentListener(org.eclipse.jface.text.IDocumentListener)
    {
        org.eclipse.jface.text.IDocumentListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentListener;

        return;
    }

    public void removeDocumentListener(org.eclipse.jface.text.IDocumentListener)
    {
        org.eclipse.jface.text.IDocumentListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentListener;

        return;
    }

    public void addPrenotifiedDocumentListener(org.eclipse.jface.text.IDocumentListener)
    {
        org.eclipse.jface.text.IDocumentListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentListener;

        return;
    }

    public void removePrenotifiedDocumentListener(org.eclipse.jface.text.IDocumentListener)
    {
        org.eclipse.jface.text.IDocumentListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentListener;

        return;
    }

    public void addPositionCategory(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void removePositionCategory(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.lang.String[] getPositionCategories()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return null;
    }

    public boolean containsPositionCategory(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void addPosition(org.eclipse.jface.text.Position)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.Position r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.Position;

        return;
    }

    public void removePosition(org.eclipse.jface.text.Position)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.Position r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.Position;

        return;
    }

    public void addPosition(java.lang.String, org.eclipse.jface.text.Position)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.Position r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.eclipse.jface.text.Position;

        return;
    }

    public void removePosition(java.lang.String, org.eclipse.jface.text.Position)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.Position r2;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.eclipse.jface.text.Position;

        return;
    }

    public org.eclipse.jface.text.Position[] getPositions(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public boolean containsPosition(java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return 0;
    }

    public int computeIndexInCategory(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return 0;
    }

    public void addPositionUpdater(org.eclipse.jface.text.IPositionUpdater)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.IPositionUpdater r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IPositionUpdater;

        return;
    }

    public void removePositionUpdater(org.eclipse.jface.text.IPositionUpdater)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.IPositionUpdater r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IPositionUpdater;

        return;
    }

    public void insertPositionUpdater(org.eclipse.jface.text.IPositionUpdater, int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.IPositionUpdater r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IPositionUpdater;

        i0 := @parameter1: int;

        return;
    }

    public org.eclipse.jface.text.IPositionUpdater[] getPositionUpdaters()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return null;
    }

    public java.lang.String[] getLegalContentTypes()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return null;
    }

    public java.lang.String getContentType(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return null;
    }

    public org.eclipse.jface.text.ITypedRegion getPartition(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return null;
    }

    public org.eclipse.jface.text.ITypedRegion[] computePartitioning(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

    public void addDocumentPartitioningListener(org.eclipse.jface.text.IDocumentPartitioningListener)
    {
        org.eclipse.jface.text.IDocumentPartitioningListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentPartitioningListener;

        return;
    }

    public void removeDocumentPartitioningListener(org.eclipse.jface.text.IDocumentPartitioningListener)
    {
        org.eclipse.jface.text.IDocumentPartitioningListener r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentPartitioningListener;

        return;
    }

    public void setDocumentPartitioner(org.eclipse.jface.text.IDocumentPartitioner)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        org.eclipse.jface.text.IDocumentPartitioner r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: org.eclipse.jface.text.IDocumentPartitioner;

        return;
    }

    public org.eclipse.jface.text.IDocumentPartitioner getDocumentPartitioner()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return null;
    }

    public int getLineLength(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return 0;
    }

    public int getLineOfOffset(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return 0;
    }

    public int getLineOffset(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return 0;
    }

    public org.eclipse.jface.text.IRegion getLineInformation(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return null;
    }

    public org.eclipse.jface.text.IRegion getLineInformationOfOffset(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return null;
    }

    public int getNumberOfLines()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return 0;
    }

    public int getNumberOfLines(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }

    public int computeNumberOfLines(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String[] getLegalLineDelimiters()
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        return null;
    }

    public java.lang.String getLineDelimiter(int)
    {
        int i0;
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        return null;
    }

    public int search(int, java.lang.String, boolean, boolean, boolean)
    {
        org.eclipse.jdt.internal.core.util.SimpleDocument r0;
        int i0;
        java.lang.String r1;
        boolean z0, z1, z2;

        r0 := @this: org.eclipse.jdt.internal.core.util.SimpleDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        return 0;
    }
}
