class org.waveprotocol.box.server.rpc.ClientRpcController$RpcState extends java.lang.Object
{
    private final org.waveprotocol.box.server.rpc.ClientRpcChannel creator;
    private final boolean isStreamingRpc;
    private final com.google.protobuf.RpcCallback callback;
    private final java.lang.Runnable cancelRpc;
    private boolean complete;
    private boolean failed;
    private java.lang.String errorText;

    void <init>(org.waveprotocol.box.server.rpc.ClientRpcChannel, boolean, com.google.protobuf.RpcCallback, java.lang.Runnable)
    {
        org.waveprotocol.box.server.rpc.ClientRpcChannel r1;
        java.lang.Runnable r3;
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean z0;
        com.google.protobuf.RpcCallback r2;

        r0 := @this: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcChannel;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.google.protobuf.RpcCallback;

        r3 := @parameter3: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean complete> = 0;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean failed> = 0;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: java.lang.String errorText> = null;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: org.waveprotocol.box.server.rpc.ClientRpcChannel creator> = r1;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean isStreamingRpc> = z0;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: com.google.protobuf.RpcCallback callback> = r2;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: java.lang.Runnable cancelRpc> = r3;

        return;
    }

    static boolean access$000(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $z0 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean complete>;

        return $z0;
    }

    static org.waveprotocol.box.server.rpc.ClientRpcChannel access$100(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        org.waveprotocol.box.server.rpc.ClientRpcChannel $r1;
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: org.waveprotocol.box.server.rpc.ClientRpcChannel creator>;

        return $r1;
    }

    static boolean access$200(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $z0 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean isStreamingRpc>;

        return $z0;
    }

    static boolean access$002(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState, boolean)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean complete> = z0;

        return z0;
    }

    static com.google.protobuf.RpcCallback access$300(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        com.google.protobuf.RpcCallback $r1;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: com.google.protobuf.RpcCallback callback>;

        return $r1;
    }

    static boolean access$402(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState, boolean)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean failed> = z0;

        return z0;
    }

    static java.lang.String access$502(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState, java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        r1 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: java.lang.String errorText> = r1;

        return r1;
    }

    static java.lang.String access$500(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        java.lang.String $r1;
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: java.lang.String errorText>;

        return $r1;
    }

    static boolean access$400(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $z0 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: boolean failed>;

        return $z0;
    }

    static java.lang.Runnable access$600(org.waveprotocol.box.server.rpc.ClientRpcController$RpcState)
    {
        java.lang.Runnable $r1;
        org.waveprotocol.box.server.rpc.ClientRpcController$RpcState r0;

        r0 := @parameter0: org.waveprotocol.box.server.rpc.ClientRpcController$RpcState;

        $r1 = r0.<org.waveprotocol.box.server.rpc.ClientRpcController$RpcState: java.lang.Runnable cancelRpc>;

        return $r1;
    }
}
