final class org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1 extends java.lang.Object implements java.io.FilenameFilter
{
    final org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory this$0;

    void <init>(org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory)
    {
        org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1 r0;
        org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1: org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory this$0> = r1;

        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1 r2;
        java.lang.String r0, $r1;
        java.io.File r3;
        boolean $z0, $z1;

        r2 := @this: org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }
}
