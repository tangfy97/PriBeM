final class org.apache.poi.ss.formula.CellEvaluationFrame extends java.lang.Object
{
    private final org.apache.poi.ss.formula.FormulaCellCacheEntry _cce;
    private final java.util.Set _sensitiveInputCells;
    private org.apache.poi.ss.formula.FormulaUsedBlankCellSet _usedBlankCellGroup;

    public void <init>(org.apache.poi.ss.formula.FormulaCellCacheEntry)
    {
        java.util.HashSet $r2;
        org.apache.poi.ss.formula.FormulaCellCacheEntry r1;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        r1 := @parameter0: org.apache.poi.ss.formula.FormulaCellCacheEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaCellCacheEntry _cce> = r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.apache.poi.ss.formula.CellEvaluationFrame: java.util.Set _sensitiveInputCells> = $r2;

        return;
    }

    public org.apache.poi.ss.formula.CellCacheEntry getCCE()
    {
        org.apache.poi.ss.formula.FormulaCellCacheEntry $r1;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        $r1 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaCellCacheEntry _cce>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r4;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        org.apache.poi.ss.formula.CellEvaluationFrame r1;

        r1 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public void addSensitiveInputCell(org.apache.poi.ss.formula.CellCacheEntry)
    {
        org.apache.poi.ss.formula.CellCacheEntry r1;
        java.util.Set $r2;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        r1 := @parameter0: org.apache.poi.ss.formula.CellCacheEntry;

        $r2 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: java.util.Set _sensitiveInputCells>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    private org.apache.poi.ss.formula.CellCacheEntry[] getSensitiveInputCells()
    {
        org.apache.poi.ss.formula.CellCacheEntry[] r2, $r4;
        int $i0;
        java.util.Set $r1, $r3;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        $r1 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: java.util.Set _sensitiveInputCells>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 >= 1 goto label1;

        $r4 = <org.apache.poi.ss.formula.CellCacheEntry: org.apache.poi.ss.formula.CellCacheEntry[] EMPTY_ARRAY>;

        return $r4;

     label1:
        r2 = newarray (org.apache.poi.ss.formula.CellCacheEntry)[$i0];

        $r3 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: java.util.Set _sensitiveInputCells>;

        interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return r2;
    }

    public void addUsedBlankCell(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet $r1, $r2, $r3;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaUsedBlankCellSet _usedBlankCellGroup>;

        if $r1 != null goto label1;

        $r3 = new org.apache.poi.ss.formula.FormulaUsedBlankCellSet;

        specialinvoke $r3.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: void <init>()>();

        r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaUsedBlankCellSet _usedBlankCellGroup> = $r3;

     label1:
        $r2 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaUsedBlankCellSet _usedBlankCellGroup>;

        virtualinvoke $r2.<org.apache.poi.ss.formula.FormulaUsedBlankCellSet: void addCell(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void updateFormulaResult(org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.CellCacheEntry[] $r3;
        org.apache.poi.ss.formula.eval.ValueEval r1;
        org.apache.poi.ss.formula.FormulaCellCacheEntry $r2;
        org.apache.poi.ss.formula.FormulaUsedBlankCellSet $r4;
        org.apache.poi.ss.formula.CellEvaluationFrame r0;

        r0 := @this: org.apache.poi.ss.formula.CellEvaluationFrame;

        r1 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        $r2 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaCellCacheEntry _cce>;

        $r3 = specialinvoke r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.CellCacheEntry[] getSensitiveInputCells()>();

        $r4 = r0.<org.apache.poi.ss.formula.CellEvaluationFrame: org.apache.poi.ss.formula.FormulaUsedBlankCellSet _usedBlankCellGroup>;

        virtualinvoke $r2.<org.apache.poi.ss.formula.FormulaCellCacheEntry: void updateFormulaResult(org.apache.poi.ss.formula.eval.ValueEval,org.apache.poi.ss.formula.CellCacheEntry[],org.apache.poi.ss.formula.FormulaUsedBlankCellSet)>(r1, $r3, $r4);

        return;
    }
}
