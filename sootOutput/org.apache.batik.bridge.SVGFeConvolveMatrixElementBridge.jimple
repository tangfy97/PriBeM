public class org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge;

        return "feConvolveMatrix";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        java.awt.geom.Rectangle2D $r12, r13, $r14;
        java.awt.Point $r19;
        int[] $r2, $r4;
        java.util.Map r10;
        org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge r22;
        boolean $z0;
        org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable8Bit $r17;
        org.apache.batik.gvt.GraphicsNode r8;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.ext.awt.image.renderable.Filter r9, $r11;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r15, $r20;
        float $f0, $f1, $f2, $f3;
        double[] $r6;
        float[] $r3;
        org.apache.batik.ext.awt.image.PadMode $r5, $r16, $r21;
        java.awt.image.Kernel $r18;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double $d0;
        org.w3c.dom.Element r0, r7;

        r22 := @this: org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.w3c.dom.Element;

        r8 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r9 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r13 := @parameter5: java.awt.geom.Rectangle2D;

        r10 := @parameter6: java.util.Map;

        $r2 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: int[] convertOrder(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $r3 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: float[] convertKernelMatrix(org.w3c.dom.Element,int[],org.apache.batik.bridge.BridgeContext)>(r0, $r2, r1);

        $f0 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: float convertDivisor(org.w3c.dom.Element,float[],org.apache.batik.bridge.BridgeContext)>(r0, $r3, r1);

        $f1 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "bias", 0.0F, r1);

        $r4 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: int[] convertTarget(org.w3c.dom.Element,int[],org.apache.batik.bridge.BridgeContext)>(r0, $r2, r1);

        $r5 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: org.apache.batik.ext.awt.image.PadMode convertEdgeMode(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $r6 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: double[] convertKernelUnitLength(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $z0 = staticinvoke <org.apache.batik.bridge.SVGFeConvolveMatrixElementBridge: boolean convertPreserveAlpha(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $r11 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r7, r8, r9, r10, r1);

        if $r11 != null goto label1;

        return null;

     label1:
        $r12 = interfaceinvoke $r11.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r14 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r7, r8, $r12, r13, r1);

        $r15 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r16 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r15.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r11, $r14, $r16);

        $r17 = new org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable8Bit;

        specialinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>($r15);

        i5 = 0;

        goto label3;

     label2:
        $f2 = $r3[i5];

        $f3 = $f2 / $f0;

        $r3[i5] = $f3;

        i5 = i5 + 1;

     label3:
        $i0 = lengthof $r3;

        if i5 < $i0 goto label2;

        $r18 = new java.awt.image.Kernel;

        $i2 = $r2[0];

        $i1 = $r2[1];

        specialinvoke $r18.<java.awt.image.Kernel: void <init>(int,int,float[])>($i2, $i1, $r3);

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setKernel(java.awt.image.Kernel)>($r18);

        $r19 = new java.awt.Point;

        $i4 = $r4[0];

        $i3 = $r4[1];

        specialinvoke $r19.<java.awt.Point: void <init>(int,int)>($i4, $i3);

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setTarget(java.awt.Point)>($r19);

        $d0 = (double) $f1;

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setBias(double)>($d0);

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setEdgeMode(org.apache.batik.ext.awt.image.PadMode)>($r5);

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setKernelUnitLength(double[])>($r6);

        interfaceinvoke $r17.<org.apache.batik.ext.awt.image.renderable.ConvolveMatrixRable: void setPreserveAlpha(boolean)>($z0);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>($r17, r0);

        $r20 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r21 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r20.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r17, $r14, $r21);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r20, r10);

        return $r20;
    }

    protected static int[] convertOrder(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r10, $r12;
        int[] r2, $r7;
        java.util.StringTokenizer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r4, $r6;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeException $r9, $r11;
        org.apache.batik.bridge.BridgeContext r5;
        java.lang.NumberFormatException $r8;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "order");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r7 = newarray (int)[2];

        $r7[0] = 3;

        $r7[1] = 3;

        return $r7;

     label1:
        r2 = newarray (int)[2];

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

     label2:
        $r4 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r4);

        r2[0] = $i1;

        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i5 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r6);

        r2[1] = $i5;

        goto label4;

     label3:
        $i2 = r2[0];

        r2[1] = $i2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.batik.bridge.BridgeException;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "order";

        $r10[1] = $r1;

        $r10[2] = $r8;

        specialinvoke $r9.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r8, "attribute.malformed", $r10);

        throw $r9;

     label6:
        $z1 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label7;

        $i3 = r2[0];

        if $i3 <= 0 goto label7;

        $i4 = r2[1];

        if $i4 > 0 goto label8;

     label7:
        $r11 = new org.apache.batik.bridge.BridgeException;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "order";

        $r12[1] = $r1;

        specialinvoke $r11.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r12);

        throw $r11;

     label8:
        return r2;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    protected static float[] convertKernelMatrix(org.w3c.dom.Element, int[], org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r7, $r10, $r13;
        float[] r3;
        int[] r2;
        java.util.StringTokenizer $r4;
        int $i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r1, $r8;
        boolean $z0;
        org.apache.batik.bridge.BridgeException $r5, $r9, $r12;
        org.apache.batik.bridge.BridgeContext r6;
        java.lang.NumberFormatException $r11;
        org.w3c.dom.Element r0;
        float $f0;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: int[];

        r6 := @parameter2: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "kernelMatrix");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r9 = new org.apache.batik.bridge.BridgeException;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "kernelMatrix";

        specialinvoke $r9.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r6, r0, "attribute.missing", $r10);

        throw $r9;

     label1:
        $i2 = r2[0];

        $i1 = r2[1];

        i3 = $i2 * $i1;

        r3 = newarray (float)[i3];

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        i5 = 0;

     label2:
        goto label4;

     label3:
        $i4 = i5;

        i5 = i5 + 1;

        $r8 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r8);

        r3[$i4] = $f0;

     label4:
        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        if i5 < i3 goto label3;

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new org.apache.batik.bridge.BridgeException;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = "kernelMatrix";

        $r13[1] = $r1;

        $r13[2] = $r11;

        specialinvoke $r12.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r6, r0, $r11, "attribute.malformed", $r13);

        throw $r12;

     label7:
        if i5 == i3 goto label8;

        $r5 = new org.apache.batik.bridge.BridgeException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "kernelMatrix";

        $r7[1] = $r1;

        specialinvoke $r5.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r6, r0, "attribute.malformed", $r7);

        throw $r5;

     label8:
        return r3;

        catch java.lang.NumberFormatException from label2 to label5 with label6;
    }

    protected static float convertDivisor(org.w3c.dom.Element, float[], org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.BridgeException $r4;
        float[] r2;
        java.lang.NumberFormatException $r3;
        org.apache.batik.bridge.BridgeContext r5;
        org.w3c.dom.Element r0;
        byte $b2;
        int $i0, $i1, i3;
        float $f0, $f1, f2, $f3;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: float[];

        r5 := @parameter2: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "divisor");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

        f2 = 0.0F;

        i3 = 0;

        goto label2;

     label1:
        $f1 = r2[i3];

        f2 = f2 + $f1;

        i3 = i3 + 1;

     label2:
        $i1 = lengthof r2;

        if i3 < $i1 goto label1;

        $b2 = f2 cmpl 0.0F;

        if $b2 != 0 goto label3;

        $f3 = 1.0F;

        goto label4;

     label3:
        $f3 = f2;

     label4:
        return $f3;

     label5:
        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r1);

        return $f0;

     label6:
        $r3 := @caughtexception;

        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = "divisor";

        $r6[1] = $r1;

        $r6[2] = $r3;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r3, "attribute.malformed", $r6);

        throw $r4;

        catch java.lang.NumberFormatException from label5 to label6 with label6;
    }

    protected static int[] convertTarget(org.w3c.dom.Element, int[], org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r5, $r9, $r12, $r15;
        int[] r0, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r2, $r7;
        org.apache.batik.bridge.BridgeException $r3, $r8, $r11, $r14;
        org.apache.batik.bridge.BridgeContext r4;
        java.lang.NumberFormatException $r10, $r13;
        org.w3c.dom.Element r1;

        r1 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: int[];

        r4 := @parameter2: org.apache.batik.bridge.BridgeContext;

        r0 = newarray (int)[2];

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "targetX");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $i8 = r6[0];

        $i9 = $i8 / 2;

        r0[0] = $i9;

        goto label06;

     label01:
        $i1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r2);

        if $i1 < 0 goto label02;

        $i2 = r6[0];

        if $i1 < $i2 goto label03;

     label02:
        $r3 = new org.apache.batik.bridge.BridgeException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "targetX";

        $r5[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r4, r1, "attribute.malformed", $r5);

        throw $r3;

     label03:
        r0[0] = $i1;

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        $r14 = new org.apache.batik.bridge.BridgeException;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = "targetX";

        $r15[1] = $r2;

        $r15[2] = $r13;

        specialinvoke $r14.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r1, $r13, "attribute.malformed", $r15);

        throw $r14;

     label06:
        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "targetY");

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i3 != 0 goto label07;

        $i6 = r6[1];

        $i7 = $i6 / 2;

        r0[1] = $i7;

        goto label12;

     label07:
        $i4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r7);

        if $i4 < 0 goto label08;

        $i5 = r6[1];

        if $i4 < $i5 goto label09;

     label08:
        $r8 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "targetY";

        $r9[1] = $r7;

        specialinvoke $r8.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r4, r1, "attribute.malformed", $r9);

        throw $r8;

     label09:
        r0[1] = $i4;

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        $r11 = new org.apache.batik.bridge.BridgeException;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = "targetY";

        $r12[1] = $r7;

        $r12[2] = $r10;

        specialinvoke $r11.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r1, $r10, "attribute.malformed", $r12);

        throw $r11;

     label12:
        return r0;

        catch java.lang.NumberFormatException from label01 to label04 with label05;
        catch java.lang.NumberFormatException from label07 to label10 with label11;
    }

    protected static double[] convertKernelUnitLength(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r9, $r11;
        double[] r2;
        byte $b1, $b2;
        java.util.StringTokenizer $r12;
        int $i0, $i3, $i4;
        java.lang.String $r1, $r4, $r6;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeException $r13, $r14;
        org.apache.batik.bridge.BridgeContext r5;
        java.lang.NumberFormatException $r7;
        org.w3c.dom.Element r0;
        float $f0, $f1;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "kernelUnitLength");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        r2 = newarray (double)[2];

        $r12 = new java.util.StringTokenizer;

        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

     label2:
        $r4 = virtualinvoke $r12.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r4);

        $d0 = (double) $f0;

        r2[0] = $d0;

        $z0 = virtualinvoke $r12.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke $r12.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r6);

        $d4 = (double) $f1;

        r2[1] = $d4;

        goto label4;

     label3:
        $d1 = r2[0];

        r2[1] = $d1;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r13 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "kernelUnitLength";

        $r9[1] = $r1;

        specialinvoke $r13.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r7, "attribute.malformed", $r9);

        throw $r13;

     label6:
        $z1 = virtualinvoke $r12.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label7;

        $d2 = r2[0];

        $b1 = $d2 cmpg 0.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label7;

        $d3 = r2[1];

        $b2 = $d3 cmpg 0.0;

        $i4 = (int) $b2;

        if $i4 > 0 goto label8;

     label7:
        $r14 = new org.apache.batik.bridge.BridgeException;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "kernelUnitLength";

        $r11[1] = $r1;

        specialinvoke $r14.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r11);

        throw $r14;

     label8:
        return r2;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    protected static org.apache.batik.ext.awt.image.PadMode convertEdgeMode(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r7;
        org.apache.batik.ext.awt.image.PadMode $r8, $r9, $r10, $r11;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.batik.bridge.BridgeException $r5;
        org.apache.batik.bridge.BridgeContext r6;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "edgeMode");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r11 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode REPLICATE>;

        return $r11;

     label1:
        $r2 = "duplicate";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r10 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode REPLICATE>;

        return $r10;

     label2:
        $r3 = "wrap";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $r9 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode WRAP>;

        return $r9;

     label3:
        $r4 = "none";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label4;

        $r8 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        return $r8;

     label4:
        $r5 = new org.apache.batik.bridge.BridgeException;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = "edgeMode";

        $r7[1] = $r1;

        specialinvoke $r5.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r6, r0, "attribute.malformed", $r7);

        throw $r5;
    }

    protected static boolean convertPreserveAlpha(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.BridgeException $r4;
        org.apache.batik.bridge.BridgeContext r5;
        org.w3c.dom.Element r0;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "preserveAlpha");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = "false";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "preserveAlpha";

        $r6[1] = $r1;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r6);

        throw $r4;
    }
}
