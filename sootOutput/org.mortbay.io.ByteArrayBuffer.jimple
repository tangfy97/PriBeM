public class org.mortbay.io.ByteArrayBuffer extends org.mortbay.io.AbstractBuffer
{
    protected byte[] _bytes;

    protected void <init>(int, boolean)
    {
        int i0;
        org.mortbay.io.ByteArrayBuffer r0;
        boolean z0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.mortbay.io.AbstractBuffer: void <init>(int,boolean)>(i0, z0);

        return;
    }

    public void <init>(byte[])
    {
        int $i0;
        byte[] r1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.mortbay.io.ByteArrayBuffer: void <init>(byte[],int,int,int)>(r1, 0, $i0, 2);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.mortbay.io.ByteArrayBuffer: void <init>(byte[],int,int,int)>(r1, i0, i1, 2);

        return;
    }

    public void <init>(byte[], int, int, int)
    {
        byte[] r1;
        int i0, i1, $i2, i3;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<org.mortbay.io.AbstractBuffer: void <init>(int,boolean)>(2, 0);

        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = r1;

        $i2 = i0 + i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i2);

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(i0);

        r0.<org.mortbay.io.ByteArrayBuffer: int _access> = i3;

        return;
    }

    public void <init>(byte[], int, int, int, boolean)
    {
        byte[] r1;
        int i0, i1, $i2, i3;
        org.mortbay.io.ByteArrayBuffer r0;
        boolean z0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.mortbay.io.AbstractBuffer: void <init>(int,boolean)>(2, z0);

        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = r1;

        $i2 = i0 + i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i2);

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(i0);

        r0.<org.mortbay.io.ByteArrayBuffer: int _access> = i3;

        return;
    }

    public void <init>(int)
    {
        int i0;
        byte[] $r1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i0 := @parameter0: int;

        $r1 = newarray (byte)[i0];

        specialinvoke r0.<org.mortbay.io.ByteArrayBuffer: void <init>(byte[],int,int,int)>($r1, 0, i0, 2);

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>(0);

        return;
    }

    public void <init>(java.lang.String)
    {
        byte[] $r2, $r3;
        int $i0;
        java.lang.String r1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.mortbay.io.AbstractBuffer: void <init>(int,boolean)>(2, 0);

        $r2 = staticinvoke <org.mortbay.io.Portable: byte[] getBytes(java.lang.String)>(r1);

        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = $r2;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(0);

        $r3 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = lengthof $r3;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i0);

        r0.<org.mortbay.io.ByteArrayBuffer: int _access> = 0;

        r0.<org.mortbay.io.ByteArrayBuffer: java.lang.String _string> = r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        byte[] $r3, $r4;
        int $i0;
        java.lang.String r1, r2;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.mortbay.io.AbstractBuffer: void <init>(int,boolean)>(2, 0);

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r2);

        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = $r3;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(0);

        $r4 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = lengthof $r4;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i0);

        r0.<org.mortbay.io.ByteArrayBuffer: int _access> = 0;

        r0.<org.mortbay.io.ByteArrayBuffer: java.lang.String _string> = r1;

        return;
    }

    public byte[] array()
    {
        byte[] $r1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        return $r1;
    }

    public int capacity()
    {
        int $i0;
        byte[] $r1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void compact()
    {
        byte[] $r1, $r2;
        java.lang.IllegalStateException $r3;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.mortbay.io.ByteArrayBuffer r0;
        boolean $z0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $z0 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r3;

     label1:
        $i0 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int markIndex()>();

        if $i0 < 0 goto label2;

        $i11 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int markIndex()>();

        goto label3;

     label2:
        $i11 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

     label3:
        i1 = $i11;

        if $i11 <= 0 goto label6;

        $i2 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

        i3 = $i2 - $i11;

        if i3 <= 0 goto label4;

        $r2 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        staticinvoke <org.mortbay.io.Portable: void arraycopy(byte[],int,byte[],int,int)>($r2, $i11, $r1, 0, i3);

     label4:
        $i4 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int markIndex()>();

        if $i4 <= 0 goto label5;

        $i9 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int markIndex()>();

        $i10 = $i9 - i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setMarkIndex(int)>($i10);

     label5:
        $i5 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

        $i6 = $i5 - i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>($i6);

        $i7 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

        $i8 = $i7 - i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i8);

     label6:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3;
        org.mortbay.io.AbstractBuffer r5;
        byte b3, $b4;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, i9, i10, $i11, $i13, $i15, $i16, $i17;
        org.mortbay.io.ByteArrayBuffer r1;
        boolean $z0, $z1, $z2, $z3;
        org.mortbay.io.Buffer r2, $r4;
        java.lang.Object r0;

        r1 := @this: org.mortbay.io.ByteArrayBuffer;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        $z0 = r0 instanceof org.mortbay.io.Buffer;

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        $z1 = r0 instanceof org.mortbay.io.Buffer$CaseInsensitve;

        if $z1 == 0 goto label4;

        $r4 = (org.mortbay.io.Buffer) r0;

        $z3 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: boolean equalsIgnoreCase(org.mortbay.io.Buffer)>($r4);

        return $z3;

     label4:
        r2 = (org.mortbay.io.Buffer) r0;

        $i0 = interfaceinvoke r2.<org.mortbay.io.Buffer: int length()>();

        $i1 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int length()>();

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        $i2 = r1.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        if $i2 == 0 goto label6;

        $z2 = r0 instanceof org.mortbay.io.AbstractBuffer;

        if $z2 == 0 goto label6;

        r5 = (org.mortbay.io.AbstractBuffer) r0;

        $i5 = r5.<org.mortbay.io.AbstractBuffer: int _hash>;

        if $i5 == 0 goto label6;

        $i7 = r1.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        $i6 = r5.<org.mortbay.io.AbstractBuffer: int _hash>;

        if $i7 == $i6 goto label6;

        return 0;

     label6:
        $i8 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

        i9 = interfaceinvoke r2.<org.mortbay.io.Buffer: int putIndex()>();

        i10 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

     label7:
        $i11 = i10;

        $i13 = (int) -1;

        i10 = i10 + $i13;

        if $i11 <= $i8 goto label9;

        $r3 = r1.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        b3 = $r3[i10];

        $i15 = (int) -1;

        i9 = i9 + $i15;

        $b4 = interfaceinvoke r2.<org.mortbay.io.Buffer: byte peek(int)>(i9);

        $i16 = (int) b3;

        $i17 = (int) $b4;

        if $i16 == $i17 goto label8;

        return 0;

     label8:
        goto label7;

     label9:
        return 1;
    }

    public boolean equalsIgnoreCase(org.mortbay.io.Buffer)
    {
        byte[] $r2, $r3, $r5;
        byte $b9, b20, b21, b23, b24;
        boolean $z0;
        org.mortbay.io.AbstractBuffer r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i22, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        org.mortbay.io.ByteArrayBuffer r1;
        org.mortbay.io.Buffer r0;

        r1 := @this: org.mortbay.io.ByteArrayBuffer;

        r0 := @parameter0: org.mortbay.io.Buffer;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        $i0 = interfaceinvoke r0.<org.mortbay.io.Buffer: int length()>();

        $i1 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int length()>();

        if $i0 == $i1 goto label03;

     label02:
        return 0;

     label03:
        $i2 = r1.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        if $i2 == 0 goto label04;

        $z0 = r0 instanceof org.mortbay.io.AbstractBuffer;

        if $z0 == 0 goto label04;

        r4 = (org.mortbay.io.AbstractBuffer) r0;

        $i14 = r4.<org.mortbay.io.AbstractBuffer: int _hash>;

        if $i14 == 0 goto label04;

        $i16 = r1.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        $i15 = r4.<org.mortbay.io.AbstractBuffer: int _hash>;

        if $i16 == $i15 goto label04;

        return 0;

     label04:
        $i17 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

        i18 = interfaceinvoke r0.<org.mortbay.io.Buffer: int putIndex()>();

        $r5 = interfaceinvoke r0.<org.mortbay.io.Buffer: byte[] array()>();

        if $r5 != null goto label10;

        i19 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

     label05:
        $i8 = i19;

        $i26 = (int) -1;

        i19 = i19 + $i26;

        if $i8 <= $i17 goto label09;

        $r3 = r1.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        b20 = $r3[i19];

        $i28 = (int) -1;

        i18 = i18 + $i28;

        $b9 = interfaceinvoke r0.<org.mortbay.io.Buffer: byte peek(int)>(i18);

        b21 = $b9;

        $i29 = (int) b20;

        $i30 = (int) $b9;

        if $i29 == $i30 goto label08;

        $i31 = (int) b20;

        if 97 > $i31 goto label06;

        $i32 = (int) b20;

        if $i32 > 122 goto label06;

        $i33 = (int) b20;

        $i12 = $i33 - 97;

        $i13 = $i12 + 65;

        b20 = (byte) $i13;

     label06:
        $i34 = (int) $b9;

        if 97 > $i34 goto label07;

        $i35 = (int) $b9;

        if $i35 > 122 goto label07;

        $i36 = (int) $b9;

        $i10 = $i36 - 97;

        $i11 = $i10 + 65;

        b21 = (byte) $i11;

     label07:
        $i37 = (int) b20;

        $i38 = (int) b21;

        if $i37 == $i38 goto label08;

        return 0;

     label08:
        goto label05;

     label09:
        goto label15;

     label10:
        i22 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

     label11:
        $i3 = i22;

        $i40 = (int) -1;

        i22 = i22 + $i40;

        if $i3 <= $i17 goto label15;

        $r2 = r1.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        b23 = $r2[i22];

        $i42 = (int) -1;

        i18 = i18 + $i42;

        b24 = $r5[i18];

        $i43 = (int) b23;

        $i44 = (int) b24;

        if $i43 == $i44 goto label14;

        $i45 = (int) b23;

        if 97 > $i45 goto label12;

        $i46 = (int) b23;

        if $i46 > 122 goto label12;

        $i47 = (int) b23;

        $i6 = $i47 - 97;

        $i7 = $i6 + 65;

        b23 = (byte) $i7;

     label12:
        $i48 = (int) b24;

        if 97 > $i48 goto label13;

        $i49 = (int) b24;

        if $i49 > 122 goto label13;

        $i50 = (int) b24;

        $i4 = $i50 - 97;

        $i5 = $i4 + 65;

        b24 = (byte) $i5;

     label13:
        $i51 = (int) b23;

        $i52 = (int) b24;

        if $i51 == $i52 goto label14;

        return 0;

     label14:
        goto label11;

     label15:
        return 1;
    }

    public byte get()
    {
        byte[] $r1;
        byte $b2;
        int $i0, $i1;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = r0.<org.mortbay.io.ByteArrayBuffer: int _get>;

        $i1 = $i0 + 1;

        r0.<org.mortbay.io.ByteArrayBuffer: int _get> = $i1;

        $b2 = $r1[$i0];

        return $b2;
    }

    public int hashCode()
    {
        byte[] $r1;
        byte b13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i25;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $i0 = r0.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        if $i0 == 0 goto label1;

        $i7 = r0.<org.mortbay.io.ByteArrayBuffer: int _hashGet>;

        $i6 = r0.<org.mortbay.io.ByteArrayBuffer: int _get>;

        if $i7 != $i6 goto label1;

        $i9 = r0.<org.mortbay.io.ByteArrayBuffer: int _hashPut>;

        $i8 = r0.<org.mortbay.io.ByteArrayBuffer: int _put>;

        if $i9 == $i8 goto label6;

     label1:
        $i10 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

        i11 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

     label2:
        $i12 = i11;

        $i19 = (int) -1;

        i11 = i11 + $i19;

        if $i12 <= $i10 goto label4;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        b13 = $r1[i11];

        $i20 = (int) b13;

        if 97 > $i20 goto label3;

        $i21 = (int) b13;

        if $i21 > 122 goto label3;

        $i22 = (int) b13;

        $i4 = $i22 - 97;

        $i5 = $i4 + 65;

        b13 = (byte) $i5;

     label3:
        $i14 = r0.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        $i15 = 31 * $i14;

        $i23 = (int) b13;

        $i16 = $i15 + $i23;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hash> = $i16;

        goto label2;

     label4:
        $i1 = r0.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        if $i1 != 0 goto label5;

        $i25 = (int) -1;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hash> = $i25;

     label5:
        $i2 = r0.<org.mortbay.io.ByteArrayBuffer: int _get>;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hashGet> = $i2;

        $i3 = r0.<org.mortbay.io.ByteArrayBuffer: int _put>;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hashPut> = $i3;

     label6:
        $i17 = r0.<org.mortbay.io.ByteArrayBuffer: int _hash>;

        return $i17;
    }

    public byte peek(int)
    {
        byte[] $r1;
        byte $b1;
        int i0;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $b1 = $r1[i0];

        return $b1;
    }

    public int peek(int, byte[], int, int)
    {
        byte[] r1, $r2;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i8, $i10;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i1 := @parameter0: int;

        r1 := @parameter1: byte[];

        i4 := @parameter2: int;

        i0 := @parameter3: int;

        i6 = i0;

        $i2 = i1 + i0;

        $i3 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        if $i2 <= $i3 goto label1;

        $i5 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        i6 = $i5 - i1;

        if i6 != 0 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        if i6 >= 0 goto label2;

        $i10 = (int) -1;

        return $i10;

     label2:
        $r2 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        staticinvoke <org.mortbay.io.Portable: void arraycopy(byte[],int,byte[],int,int)>($r2, i1, r1, i4, i6);

        return i6;
    }

    public void poke(int, byte)
    {
        byte[] $r1;
        byte b1;
        int i0;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $r1[i0] = b1;

        return;
    }

    public int poke(int, org.mortbay.io.Buffer)
    {
        byte[] $r2, $r3, $r4;
        byte $b5, $b8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, i11, i12, i13, i14, i15, i16;
        org.mortbay.io.ByteArrayBuffer r0;
        org.mortbay.io.Buffer r1;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i11 := @parameter0: int;

        r1 := @parameter1: org.mortbay.io.Buffer;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hash> = 0;

        $i0 = interfaceinvoke r1.<org.mortbay.io.Buffer: int length()>();

        i12 = $i0;

        $i1 = i11 + $i0;

        $i2 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        if $i1 <= $i2 goto label1;

        $i10 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        i12 = $i10 - i11;

     label1:
        $r2 = interfaceinvoke r1.<org.mortbay.io.Buffer: byte[] array()>();

        if $r2 == null goto label2;

        $i9 = interfaceinvoke r1.<org.mortbay.io.Buffer: int getIndex()>();

        $r4 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        staticinvoke <org.mortbay.io.Portable: void arraycopy(byte[],int,byte[],int,int)>($r2, $i9, $r4, i11, i12);

        goto label7;

     label2:
        if $r2 == null goto label5;

        i13 = interfaceinvoke r1.<org.mortbay.io.Buffer: int getIndex()>();

        i14 = 0;

     label3:
        if i14 >= i12 goto label4;

        $i6 = i11;

        i11 = i11 + 1;

        $i7 = i13;

        i13 = i13 + 1;

        $b8 = $r2[$i7];

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void poke(int,byte)>($i6, $b8);

        i14 = i14 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        i15 = interfaceinvoke r1.<org.mortbay.io.Buffer: int getIndex()>();

        i16 = 0;

     label6:
        if i16 >= i12 goto label7;

        $r3 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i3 = i11;

        i11 = i11 + 1;

        $i4 = i15;

        i15 = i15 + 1;

        $b5 = interfaceinvoke r1.<org.mortbay.io.Buffer: byte peek(int)>($i4);

        $r3[$i3] = $b5;

        i16 = i16 + 1;

        goto label6;

     label7:
        return i12;
    }

    public int poke(int, byte[], int, int)
    {
        byte[] r1, $r2;
        int i0, $i1, $i2, i3, $i4, i5;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i3 := @parameter2: int;

        i5 := @parameter3: int;

        r0.<org.mortbay.io.ByteArrayBuffer: int _hash> = 0;

        $i1 = i0 + i5;

        $i2 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        if $i1 <= $i2 goto label1;

        $i4 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int capacity()>();

        i5 = $i4 - i0;

     label1:
        $r2 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        staticinvoke <org.mortbay.io.Portable: void arraycopy(byte[],int,byte[],int,int)>(r1, i3, $r2, i0, i5);

        return i5;
    }

    public void wrap(byte[], int, int)
    {
        byte[] r1;
        java.lang.IllegalStateException $r2, $r3;
        int i0, i1, $i2;
        org.mortbay.io.ByteArrayBuffer r0;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r3;

     label1:
        $z1 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: boolean isImmutable()>();

        if $z1 == 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("IMMUTABLE");

        throw $r2;

     label2:
        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = r1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void clear()>();

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(i0);

        $i2 = i0 + i1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i2);

        return;
    }

    public void wrap(byte[])
    {
        byte[] r1;
        java.lang.IllegalStateException $r2, $r3;
        int $i0;
        org.mortbay.io.ByteArrayBuffer r0;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: byte[];

        $z0 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r3;

     label1:
        $z1 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: boolean isImmutable()>();

        if $z1 == 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("IMMUTABLE");

        throw $r2;

     label2:
        r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes> = r1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setGetIndex(int)>(0);

        $i0 = lengthof r1;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>($i0);

        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2;
        int $i0, $i1;
        org.mortbay.io.ByteArrayBuffer r1;

        r1 := @this: org.mortbay.io.ByteArrayBuffer;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int getIndex()>();

        $i1 = virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: int length()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i0, $i1);

        virtualinvoke r1.<org.mortbay.io.ByteArrayBuffer: void clear()>();

        return;
    }

    public int readFrom(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r2;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, $i9;
        org.mortbay.io.ByteArrayBuffer r0;
        java.io.InputStream r1;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        r1 := @parameter0: java.io.InputStream;

        i3 := @parameter1: int;

        if i3 < 0 goto label1;

        $i2 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int space()>();

        if i3 <= $i2 goto label2;

     label1:
        i3 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int space()>();

     label2:
        i4 = virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: int putIndex()>();

        i5 = 0;

        i6 = 0;

        i7 = i3;

     label3:
        if i6 >= i3 goto label6;

        $r2 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>($r2, i4, i7);

        i5 = $i0;

        if $i0 >= 0 goto label4;

        goto label6;

     label4:
        if $i0 <= 0 goto label5;

        i4 = i4 + $i0;

        i6 = i6 + $i0;

        i7 = i7 - $i0;

        virtualinvoke r0.<org.mortbay.io.ByteArrayBuffer: void setPutIndex(int)>(i4);

     label5:
        $i1 = virtualinvoke r1.<java.io.InputStream: int available()>();

        if $i1 > 0 goto label3;

        goto label6;

     label6:
        if i5 >= 0 goto label7;

        if i6 != 0 goto label7;

        $i9 = (int) -1;

        return $i9;

     label7:
        return i6;
    }

    public int space()
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        org.mortbay.io.ByteArrayBuffer r0;

        r0 := @this: org.mortbay.io.ByteArrayBuffer;

        $r1 = r0.<org.mortbay.io.ByteArrayBuffer: byte[] _bytes>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.mortbay.io.ByteArrayBuffer: int _put>;

        $i2 = $i1 - $i0;

        return $i2;
    }
}
