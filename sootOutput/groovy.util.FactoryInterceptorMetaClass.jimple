class groovy.util.FactoryInterceptorMetaClass extends groovy.lang.DelegatingMetaClass
{
    groovy.util.FactoryBuilderSupport factory;

    public void <init>(groovy.lang.MetaClass, groovy.util.FactoryBuilderSupport)
    {
        groovy.util.FactoryBuilderSupport r2;
        groovy.lang.MetaClass r1;
        groovy.util.FactoryInterceptorMetaClass r0;

        r0 := @this: groovy.util.FactoryInterceptorMetaClass;

        r1 := @parameter0: groovy.lang.MetaClass;

        r2 := @parameter1: groovy.util.FactoryBuilderSupport;

        specialinvoke r0.<groovy.lang.DelegatingMetaClass: void <init>(groovy.lang.MetaClass)>(r1);

        r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory> = r2;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object)
    {
        groovy.util.FactoryInterceptorMetaClass r0;
        java.lang.String r2;
        boolean $z0;
        groovy.util.FactoryBuilderSupport $r8, $r10, $r12, $r14;
        groovy.lang.MetaClass $r4, $r9;
        groovy.lang.MissingMethodException $r6, $r7;
        java.util.List $r11;
        java.lang.Object r1, r3, $r5, $r13, $r15;

        r0 := @this: groovy.util.FactoryInterceptorMetaClass;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

     label1:
        $r4 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.lang.MetaClass delegate>;

        $r5 = interfaceinvoke $r4.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r1, r2, r3);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r9 = virtualinvoke $r8.<groovy.util.FactoryBuilderSupport: groovy.lang.MetaClass getMetaClass()>();

        $r10 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r11 = interfaceinvoke $r9.<groovy.lang.MetaClass: java.util.List respondsTo(java.lang.Object,java.lang.String)>($r10, r2);

        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r14 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r15 = virtualinvoke $r14.<groovy.util.FactoryBuilderSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r2, r3);

     label5:
        return $r15;

     label6:
        $r12 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r12, r2, r3);

     label7:
        return $r13;

     label8:
        $r6 := @caughtexception;

        throw $r7;

        catch groovy.lang.MissingMethodException from label1 to label2 with label3;
        catch groovy.lang.MissingMethodException from label4 to label5 with label8;
        catch groovy.lang.MissingMethodException from label6 to label7 with label8;
    }

    public java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        groovy.util.FactoryInterceptorMetaClass r0;
        java.lang.String r2;
        boolean $z0;
        groovy.util.FactoryBuilderSupport $r8, $r10, $r12, $r14;
        groovy.lang.MetaClass $r4, $r9;
        groovy.lang.MissingMethodException $r6, $r7;
        java.util.List $r11;
        java.lang.Object r1, $r5, $r13, $r15;

        r0 := @this: groovy.util.FactoryInterceptorMetaClass;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

     label1:
        $r4 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.lang.MetaClass delegate>;

        $r5 = interfaceinvoke $r4.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r2, r3);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r9 = virtualinvoke $r8.<groovy.util.FactoryBuilderSupport: groovy.lang.MetaClass getMetaClass()>();

        $r10 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r11 = interfaceinvoke $r9.<groovy.lang.MetaClass: java.util.List respondsTo(java.lang.Object,java.lang.String)>($r10, r2);

        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r14 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r15 = virtualinvoke $r14.<groovy.util.FactoryBuilderSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r2, r3);

     label5:
        return $r15;

     label6:
        $r12 = r0.<groovy.util.FactoryInterceptorMetaClass: groovy.util.FactoryBuilderSupport factory>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r12, r2, r3);

     label7:
        return $r13;

     label8:
        $r6 := @caughtexception;

        throw $r7;

        catch groovy.lang.MissingMethodException from label1 to label2 with label3;
        catch groovy.lang.MissingMethodException from label4 to label5 with label8;
        catch groovy.lang.MissingMethodException from label6 to label7 with label8;
    }
}
