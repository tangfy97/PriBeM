public class org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList extends org.apache.batik.dom.svg.AbstractSVGTransformList
{
    protected boolean missing;
    protected boolean malformed;
    private final org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0;

    public void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGTransformList: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0> = r1;

        return;
    }

    protected org.w3c.dom.DOMException createDOMException(short, java.lang.String, java.lang.Object[])
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        short s0;
        java.lang.Object[] r3;
        org.w3c.dom.DOMException $r5;
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractElement $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r4 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(s0, r2, r3);

        return $r5;
    }

    protected org.w3c.dom.svg.SVGException createSVGException(short, java.lang.String, java.lang.Object[])
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1;
        java.lang.Object[] r4;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;
        short s0;
        org.w3c.dom.svg.SVGException $r6;
        java.lang.String r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMElement $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = (org.apache.batik.dom.svg.SVGOMElement) $r2;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.svg.SVGException createSVGException(short,java.lang.String,java.lang.Object[])>(s0, r3, r4);

        return $r6;
    }

    protected java.lang.String getValueAsString()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1, $r2, $r3, $r9;
        org.w3c.dom.Attr $r7;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;
        java.lang.String $r4, $r5, $r8, $r10;
        org.apache.batik.dom.svg.AbstractElement $r6;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r6 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r5 = $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r4 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r7 = virtualinvoke $r6.<org.apache.batik.dom.AbstractElement: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>($r5, $r4);

        if $r7 != null goto label1;

        $r9 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r10 = $r9.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: java.lang.String defaultValue>;

        return $r10;

     label1:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.Attr: java.lang.String getValue()>();

        return $r8;
    }

    protected void setAttributeValue(java.lang.String)
    {
        java.lang.Throwable $r10;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList $r1, $r2, $r3, $r4, $r9, $r11;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;
        java.lang.String r5, $r6, $r7;
        org.apache.batik.dom.svg.AbstractElement $r8;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        r5 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r1.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing> = 1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r8 = $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r7 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r6 = $r4.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        virtualinvoke $r8.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r7, $r6, r5);

        goto label6;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        goto label7;

     label4:
        throw $r10;

     label5:
        return;

     label6:
        $r9 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r9.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing> = 0;

        goto label2;

     label7:
        $r11 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList this$0>;

        $r11.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing> = 0;

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    protected void resetAttribute()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: void resetAttribute()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean missing> = 0;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean malformed> = 0;

        return;
    }

    protected void resetAttribute(org.apache.batik.dom.svg.SVGItem)
    {
        org.apache.batik.dom.svg.SVGItem r1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGItem;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: void resetAttribute(org.apache.batik.dom.svg.SVGItem)>(r1);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean missing> = 0;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean malformed> = 0;

        return;
    }

    protected void revalidate()
    {
        org.apache.batik.dom.svg.AbstractSVGList$ListBuilder $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList r0;
        java.util.ArrayList $r7;
        java.util.List $r3, $r4, $r5;
        java.lang.String $r1;
        boolean $z0;
        org.apache.batik.parser.ParseException $r6;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGList: boolean valid>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.apache.batik.dom.svg.AbstractSVGList: boolean valid> = 1;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean missing> = 0;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean malformed> = 0;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: java.lang.String getValueAsString()>();

        if $r1 != null goto label2;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean missing> = 1;

        return;

     label2:
        $r2 = new org.apache.batik.dom.svg.AbstractSVGList$ListBuilder;

        specialinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList$ListBuilder: void <init>(org.apache.batik.dom.svg.AbstractSVGList)>(r0);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGTransformList: void doParse(java.lang.String,org.apache.batik.dom.svg.ListHandler)>($r1, $r2);

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList$ListBuilder: java.util.List getList()>();

        if $r3 == null goto label3;

        $r5 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: void clear(java.util.List)>($r5);

     label3:
        $r4 = virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList$ListBuilder: java.util.List getList()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList> = $r4;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(1);

        r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList> = $r7;

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean malformed> = 1;

     label6:
        return;

        catch org.apache.batik.parser.ParseException from label2 to label4 with label5;
    }
}
