public class org.bouncycastle.crypto.examples.DESExample extends java.lang.Object
{
    private boolean encrypt;
    private org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher;
    private java.io.BufferedInputStream in;
    private java.io.BufferedOutputStream out;
    private byte[] key;

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, $i1;
        java.lang.String $r7, $r10, $r11, $r12, r13;
        boolean z0;
        java.io.PrintStream $r4;
        org.bouncycastle.crypto.examples.DESExample $r1, $r2;
        java.lang.StringBuilder $r3, $r5, $r8, $r9;
        java.lang.Class $r6;

        r0 := @parameter0: java.lang.String[];

        z0 = 1;

        $i0 = lengthof r0;

        if $i0 >= 2 goto label1;

        $r2 = new org.bouncycastle.crypto.examples.DESExample;

        specialinvoke $r2.<org.bouncycastle.crypto.examples.DESExample: void <init>()>();

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: java ");

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" infile outfile [keyfile]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        r13 = "deskey.dat";

        $r11 = r0[0];

        $r12 = r0[1];

        $i1 = lengthof r0;

        if $i1 <= 2 goto label2;

        z0 = 0;

        r13 = r0[2];

     label2:
        $r1 = new org.bouncycastle.crypto.examples.DESExample;

        specialinvoke $r1.<org.bouncycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>($r11, $r12, r13, z0);

        specialinvoke $r1.<org.bouncycastle.crypto.examples.DESExample: void process()>();

        return;
    }

    public void <init>()
    {
        org.bouncycastle.crypto.examples.DESExample r0;

        r0 := @this: org.bouncycastle.crypto.examples.DESExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.examples.DESExample: boolean encrypt> = 1;

        r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        byte[] $r10, $r13, $r16, $r19, $r20, r52;
        java.io.BufferedInputStream $r1, $r7;
        java.security.SecureRandom $r11, r51;
        boolean z0;
        org.bouncycastle.crypto.KeyGenerationParameters $r14;
        java.lang.Exception $r35;
        java.io.FileNotFoundException $r44;
        org.bouncycastle.crypto.examples.DESExample r0;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r29, $r31, $r32, $r33, $r38, $r40, $r41, $r42, $r45, $r47, $r48, $r49;
        java.io.BufferedOutputStream $r4, $r17;
        int $i0, $i1;
        java.lang.String r3, r6, r9, $r12, $r27, $r34, $r43, $r50;
        java.io.PrintStream $r23, $r30, $r36, $r39, $r46;
        java.io.FileOutputStream $r5, $r18;
        java.io.IOException $r21, $r28, $r37;
        java.io.FileInputStream $r2, $r8;
        org.bouncycastle.crypto.generators.DESedeKeyGenerator $r15;

        r0 := @this: org.bouncycastle.crypto.examples.DESExample;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.examples.DESExample: boolean encrypt> = 1;

        r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key> = null;

        r0.<org.bouncycastle.crypto.examples.DESExample: boolean encrypt> = z0;

     label01:
        $r1 = new java.io.BufferedInputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2);

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = $r1;

     label02:
        goto label04;

     label03:
        $r44 := @caughtexception;

        $r46 = <java.lang.System: java.io.PrintStream err>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input file not found [");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r50);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label04:
        $r4 = new java.io.BufferedOutputStream;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r6);

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r5);

        r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = $r4;

     label05:
        goto label07;

     label06:
        $r37 := @caughtexception;

        $r39 = <java.lang.System: java.io.PrintStream err>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output file not created [");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r43);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label07:
        if z0 == 0 goto label15;

     label08:
        r51 = null;

     label09:
        $r11 = new java.security.SecureRandom;

        specialinvoke $r11.<java.security.SecureRandom: void <init>()>();

        r51 = $r11;

        $r12 = "www.bouncycastle.org";

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r11.<java.security.SecureRandom: void setSeed(byte[])>($r13);

     label10:
        goto label12;

     label11:
        $r35 := @caughtexception;

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("Hmmm, no SHA1PRNG, you need the Sun implementation");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label12:
        $r14 = new org.bouncycastle.crypto.KeyGenerationParameters;

        specialinvoke $r14.<org.bouncycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>(r51, 192);

        $r15 = new org.bouncycastle.crypto.generators.DESedeKeyGenerator;

        specialinvoke $r15.<org.bouncycastle.crypto.generators.DESedeKeyGenerator: void <init>()>();

        virtualinvoke $r15.<org.bouncycastle.crypto.generators.DESedeKeyGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>($r14);

        $r16 = virtualinvoke $r15.<org.bouncycastle.crypto.generators.DESedeKeyGenerator: byte[] generateKey()>();

        r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key> = $r16;

        $r17 = new java.io.BufferedOutputStream;

        $r18 = new java.io.FileOutputStream;

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.lang.String)>(r9);

        specialinvoke $r17.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r18);

        $r19 = r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key>;

        $r20 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[])>($r19);

        $i1 = lengthof $r20;

        virtualinvoke $r17.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r20, 0, $i1);

        virtualinvoke $r17.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r17.<java.io.BufferedOutputStream: void close()>();

     label13:
        goto label18;

     label14:
        $r28 := @caughtexception;

        $r30 = <java.lang.System: java.io.PrintStream err>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not decryption create key file [");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label18;

     label15:
        $r7 = new java.io.BufferedInputStream;

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.lang.String)>(r9);

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

        $i0 = virtualinvoke $r7.<java.io.BufferedInputStream: int available()>();

        r52 = newarray (byte)[$i0];

        virtualinvoke $r7.<java.io.BufferedInputStream: int read(byte[],int,int)>(r52, 0, $i0);

        $r10 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] decode(byte[])>(r52);

        r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key> = $r10;

     label16:
        goto label18;

     label17:
        $r21 := @caughtexception;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decryption key file not found, or not valid [");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label18:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.io.IOException from label08 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
    }

    private void process()
    {
        byte[] $r4, $r8;
        java.io.BufferedInputStream $r5;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r2;
        java.io.IOException $r9;
        org.bouncycastle.crypto.engines.DESedeEngine $r3;
        java.io.BufferedOutputStream $r6, $r7;
        org.bouncycastle.crypto.examples.DESExample r0;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.examples.DESExample;

        $r1 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r2 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r3 = new org.bouncycastle.crypto.engines.DESedeEngine;

        specialinvoke $r3.<org.bouncycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke $r2.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r3);

        specialinvoke $r1.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r2);

        r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = $r1;

        $z0 = r0.<org.bouncycastle.crypto.examples.DESExample: boolean encrypt>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key>;

        specialinvoke r0.<org.bouncycastle.crypto.examples.DESExample: void performEncrypt(byte[])>($r8);

        goto label2;

     label1:
        $r4 = r0.<org.bouncycastle.crypto.examples.DESExample: byte[] key>;

        specialinvoke r0.<org.bouncycastle.crypto.examples.DESExample: void performDecrypt(byte[])>($r4);

     label2:
        $r5 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

        virtualinvoke $r5.<java.io.BufferedInputStream: void close()>();

        $r6 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r6.<java.io.BufferedOutputStream: void flush()>();

        $r7 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r7.<java.io.BufferedOutputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private void performEncrypt(byte[])
    {
        byte[] r2, r5, r6, $r8, $r12;
        java.io.BufferedInputStream $r17;
        org.bouncycastle.crypto.CryptoException $r16;
        java.io.BufferedOutputStream $r9, $r10, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.crypto.params.KeyParameter $r1;
        java.io.IOException $r15;
        org.bouncycastle.crypto.examples.DESExample r0;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r3, $r4, $r7, $r11;

        r0 := @this: org.bouncycastle.crypto.examples.DESExample;

        r2 := @parameter0: byte[];

        $r3 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $r1 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r1.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>(r2);

        virtualinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r1);

        $r4 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r4.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int getOutputSize(int)>(47);

        r5 = newarray (byte)[47];

        r6 = newarray (byte)[$i0];

     label1:
        $r17 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

        $i5 = virtualinvoke $r17.<java.io.BufferedInputStream: int read(byte[],int,int)>(r5, 0, 47);

        if $i5 <= 0 goto label2;

        $r11 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i3 = virtualinvoke $r11.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r5, 0, $i5, r6, 0);

        if $i3 <= 0 goto label1;

        $r12 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>(r6, 0, $i3);

        $r13 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        $i4 = lengthof $r12;

        virtualinvoke $r13.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r12, 0, $i4);

        $r14 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r14.<java.io.BufferedOutputStream: void write(int)>(10);

        goto label1;

     label2:
        $r7 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i1 = virtualinvoke $r7.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>(r6, 0);

        if $i1 <= 0 goto label3;

        $r8 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>(r6, 0, $i1);

        $r9 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        $i2 = lengthof $r8;

        virtualinvoke $r9.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r8, 0, $i2);

        $r10 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r10.<java.io.BufferedOutputStream: void write(int)>(10);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

     label7:
        return;

        catch org.bouncycastle.crypto.CryptoException from label2 to label3 with label4;
        catch java.io.IOException from label1 to label5 with label6;
    }

    private void performDecrypt(byte[])
    {
        byte[] r2, $r9, r15;
        java.io.BufferedInputStream $r6;
        org.bouncycastle.crypto.CryptoException $r14;
        java.io.BufferedOutputStream $r8, $r12;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r16;
        org.bouncycastle.crypto.params.KeyParameter $r1;
        java.io.IOException $r13;
        java.io.InputStreamReader $r5;
        org.bouncycastle.crypto.examples.DESExample r0;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r3, $r7, $r10, $r11;
        java.io.BufferedReader $r4;

        r0 := @this: org.bouncycastle.crypto.examples.DESExample;

        r2 := @parameter0: byte[];

        $r3 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $r1 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r1.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>(r2);

        virtualinvoke $r3.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r1);

        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

     label1:
        r15 = null;

     label2:
        $r16 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r16 == null goto label3;

        $r9 = staticinvoke <org.bouncycastle.util.encoders.Hex: byte[] decode(java.lang.String)>($r16);

        $r10 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i1 = lengthof $r9;

        $i2 = virtualinvoke $r10.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int getOutputSize(int)>($i1);

        r15 = newarray (byte)[$i2];

        $r11 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i3 = lengthof $r9;

        $i4 = virtualinvoke $r11.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r9, 0, $i3, r15, 0);

        if $i4 <= 0 goto label2;

        $r12 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r12.<java.io.BufferedOutputStream: void write(byte[],int,int)>(r15, 0, $i4);

        goto label2;

     label3:
        $r7 = r0.<org.bouncycastle.crypto.examples.DESExample: org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r7.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>(r15, 0);

        if $i0 <= 0 goto label4;

        $r8 = r0.<org.bouncycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(byte[],int,int)>(r15, 0, $i0);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

     label8:
        return;

        catch org.bouncycastle.crypto.CryptoException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label6 with label7;
    }
}
