public class bsh.JavaCharStream extends java.lang.Object
{
    public static final boolean staticFlag;
    public int bufpos;
    int bufsize;
    int available;
    int tokenBegin;
    protected int[] bufline;
    protected int[] bufcolumn;
    protected int column;
    protected int line;
    protected boolean prevCharIsCR;
    protected boolean prevCharIsLF;
    protected java.io.Reader inputStream;
    protected char[] nextCharBuf;
    protected char[] buffer;
    protected int maxNextCharInd;
    protected int nextCharInd;
    protected int inBuf;

    static final int hexval(char) throws java.io.IOException
    {
        int $i1;
        char c0;
        java.io.IOException $r1;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        tableswitch($i1)
        {
            case 48: goto label01;
            case 49: goto label02;
            case 50: goto label03;
            case 51: goto label04;
            case 52: goto label05;
            case 53: goto label06;
            case 54: goto label07;
            case 55: goto label08;
            case 56: goto label09;
            case 57: goto label10;
            case 58: goto label17;
            case 59: goto label17;
            case 60: goto label17;
            case 61: goto label17;
            case 62: goto label17;
            case 63: goto label17;
            case 64: goto label17;
            case 65: goto label11;
            case 66: goto label12;
            case 67: goto label13;
            case 68: goto label14;
            case 69: goto label15;
            case 70: goto label16;
            case 71: goto label17;
            case 72: goto label17;
            case 73: goto label17;
            case 74: goto label17;
            case 75: goto label17;
            case 76: goto label17;
            case 77: goto label17;
            case 78: goto label17;
            case 79: goto label17;
            case 80: goto label17;
            case 81: goto label17;
            case 82: goto label17;
            case 83: goto label17;
            case 84: goto label17;
            case 85: goto label17;
            case 86: goto label17;
            case 87: goto label17;
            case 88: goto label17;
            case 89: goto label17;
            case 90: goto label17;
            case 91: goto label17;
            case 92: goto label17;
            case 93: goto label17;
            case 94: goto label17;
            case 95: goto label17;
            case 96: goto label17;
            case 97: goto label11;
            case 98: goto label12;
            case 99: goto label13;
            case 100: goto label14;
            case 101: goto label15;
            case 102: goto label16;
            default: goto label17;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 7;

     label09:
        return 8;

     label10:
        return 9;

     label11:
        return 10;

     label12:
        return 11;

     label13:
        return 12;

     label14:
        return 13;

     label15:
        return 14;

     label16:
        return 15;

     label17:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;
    }

    protected void ExpandBuff(boolean)
    {
        java.lang.Throwable $r13;
        java.lang.Error $r14;
        java.lang.String $r15;
        char[] r1, $r4, $r7, $r8;
        int[] r2, r3, $r5, $r6, $r9, $r10, $r11, $r12;
        boolean z0;
        bsh.JavaCharStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51;

        r0 := @this: bsh.JavaCharStream;

        z0 := @parameter0: boolean;

        $i0 = r0.<bsh.JavaCharStream: int bufsize>;

        $i1 = $i0 + 2048;

        r1 = newarray (char)[$i1];

        $i2 = r0.<bsh.JavaCharStream: int bufsize>;

        $i3 = $i2 + 2048;

        r2 = newarray (int)[$i3];

        $i4 = r0.<bsh.JavaCharStream: int bufsize>;

        $i5 = $i4 + 2048;

        r3 = newarray (int)[$i5];

     label1:
        if z0 == 0 goto label2;

        $r7 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i26 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i24 = r0.<bsh.JavaCharStream: int bufsize>;

        $i23 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i25 = $i24 - $i23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i26, r1, 0, $i25);

        $r8 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i28 = r0.<bsh.JavaCharStream: int bufsize>;

        $i27 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i30 = $i28 - $i27;

        $i29 = r0.<bsh.JavaCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r1, $i30, $i29);

        r0.<bsh.JavaCharStream: char[] buffer> = r1;

        $r9 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i34 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i32 = r0.<bsh.JavaCharStream: int bufsize>;

        $i31 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i33 = $i32 - $i31;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i34, r2, 0, $i33);

        $r10 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i36 = r0.<bsh.JavaCharStream: int bufsize>;

        $i35 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i38 = $i36 - $i35;

        $i37 = r0.<bsh.JavaCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r2, $i38, $i37);

        r0.<bsh.JavaCharStream: int[] bufline> = r2;

        $r11 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i42 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i40 = r0.<bsh.JavaCharStream: int bufsize>;

        $i39 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i41 = $i40 - $i39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i42, r3, 0, $i41);

        $r12 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i44 = r0.<bsh.JavaCharStream: int bufsize>;

        $i43 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i46 = $i44 - $i43;

        $i45 = r0.<bsh.JavaCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r3, $i46, $i45);

        r0.<bsh.JavaCharStream: int[] bufcolumn> = r3;

        $i50 = r0.<bsh.JavaCharStream: int bufpos>;

        $i48 = r0.<bsh.JavaCharStream: int bufsize>;

        $i47 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i49 = $i48 - $i47;

        $i51 = $i50 + $i49;

        r0.<bsh.JavaCharStream: int bufpos> = $i51;

        goto label3;

     label2:
        $r4 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i9 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i7 = r0.<bsh.JavaCharStream: int bufsize>;

        $i6 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i8 = $i7 - $i6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i9, r1, 0, $i8);

        r0.<bsh.JavaCharStream: char[] buffer> = r1;

        $r5 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i13 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i11 = r0.<bsh.JavaCharStream: int bufsize>;

        $i10 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i12 = $i11 - $i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i13, r2, 0, $i12);

        r0.<bsh.JavaCharStream: int[] bufline> = r2;

        $r6 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i17 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i15 = r0.<bsh.JavaCharStream: int bufsize>;

        $i14 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i16 = $i15 - $i14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i17, r3, 0, $i16);

        r0.<bsh.JavaCharStream: int[] bufcolumn> = r3;

        $i19 = r0.<bsh.JavaCharStream: int bufpos>;

        $i18 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i20 = $i19 - $i18;

        r0.<bsh.JavaCharStream: int bufpos> = $i20;

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.Error;

        $r15 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r14.<java.lang.Error: void <init>(java.lang.String)>($r15);

        throw $r14;

     label5:
        $i21 = r0.<bsh.JavaCharStream: int bufsize>;

        $i22 = $i21 + 2048;

        r0.<bsh.JavaCharStream: int bufsize> = $i22;

        r0.<bsh.JavaCharStream: int available> = $i22;

        r0.<bsh.JavaCharStream: int tokenBegin> = 0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    protected void FillBuff() throws java.io.IOException
    {
        bsh.JavaCharStream r0;
        int[] $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        java.io.IOException $r5, $r8;
        java.io.Reader $r2, $r3;
        char[] $r1;

        r0 := @this: bsh.JavaCharStream;

        $i0 = r0.<bsh.JavaCharStream: int maxNextCharInd>;

        if $i0 != 4096 goto label1;

        r0.<bsh.JavaCharStream: int nextCharInd> = 0;

        r0.<bsh.JavaCharStream: int maxNextCharInd> = 0;

     label1:
        $r2 = r0.<bsh.JavaCharStream: java.io.Reader inputStream>;

        $r1 = r0.<bsh.JavaCharStream: char[] nextCharBuf>;

        $i3 = r0.<bsh.JavaCharStream: int maxNextCharInd>;

        $i1 = r0.<bsh.JavaCharStream: int maxNextCharInd>;

        $i2 = 4096 - $i1;

        $i4 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>($r1, $i3, $i2);

        $i15 = (int) -1;

        if $i4 != $i15 goto label2;

        $r3 = r0.<bsh.JavaCharStream: java.io.Reader inputStream>;

        virtualinvoke $r3.<java.io.Reader: void close()>();

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>()>();

        throw $r8;

     label2:
        $i5 = r0.<bsh.JavaCharStream: int maxNextCharInd>;

        $i6 = $i5 + $i4;

        r0.<bsh.JavaCharStream: int maxNextCharInd> = $i6;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        $i7 = r0.<bsh.JavaCharStream: int bufpos>;

        if $i7 == 0 goto label5;

        $i12 = r0.<bsh.JavaCharStream: int bufpos>;

        $i13 = $i12 - 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i13;

        virtualinvoke r0.<bsh.JavaCharStream: void backup(int)>(0);

        goto label6;

     label5:
        $r6 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i9 = r0.<bsh.JavaCharStream: int bufpos>;

        $i8 = r0.<bsh.JavaCharStream: int line>;

        $r6[$i9] = $i8;

        $r7 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i11 = r0.<bsh.JavaCharStream: int bufpos>;

        $i10 = r0.<bsh.JavaCharStream: int column>;

        $r7[$i11] = $i10;

     label6:
        throw $r5;

        catch java.io.IOException from label1 to label3 with label4;
    }

    protected char ReadByte() throws java.io.IOException
    {
        bsh.JavaCharStream r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        char $c4;

        r0 := @this: bsh.JavaCharStream;

        $i0 = r0.<bsh.JavaCharStream: int nextCharInd>;

        $i1 = $i0 + 1;

        r0.<bsh.JavaCharStream: int nextCharInd> = $i1;

        $i2 = r0.<bsh.JavaCharStream: int maxNextCharInd>;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<bsh.JavaCharStream: void FillBuff()>();

     label1:
        $r1 = r0.<bsh.JavaCharStream: char[] nextCharBuf>;

        $i3 = r0.<bsh.JavaCharStream: int nextCharInd>;

        $c4 = $r1[$i3];

        return $c4;
    }

    public char BeginToken() throws java.io.IOException
    {
        char $c1, $c9;
        bsh.JavaCharStream r0;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11;
        char[] $r1;

        r0 := @this: bsh.JavaCharStream;

        $i0 = r0.<bsh.JavaCharStream: int inBuf>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<bsh.JavaCharStream: int inBuf>;

        $i3 = $i2 - 1;

        r0.<bsh.JavaCharStream: int inBuf> = $i3;

        $i4 = r0.<bsh.JavaCharStream: int bufpos>;

        $i5 = $i4 + 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i5;

        $i6 = r0.<bsh.JavaCharStream: int bufsize>;

        if $i5 != $i6 goto label1;

        r0.<bsh.JavaCharStream: int bufpos> = 0;

     label1:
        $i7 = r0.<bsh.JavaCharStream: int bufpos>;

        r0.<bsh.JavaCharStream: int tokenBegin> = $i7;

        $r1 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i8 = r0.<bsh.JavaCharStream: int bufpos>;

        $c9 = $r1[$i8];

        return $c9;

     label2:
        r0.<bsh.JavaCharStream: int tokenBegin> = 0;

        $i11 = (int) -1;

        r0.<bsh.JavaCharStream: int bufpos> = $i11;

        $c1 = virtualinvoke r0.<bsh.JavaCharStream: char readChar()>();

        return $c1;
    }

    protected void AdjustBuffSize()
    {
        bsh.JavaCharStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: bsh.JavaCharStream;

        $i1 = r0.<bsh.JavaCharStream: int available>;

        $i0 = r0.<bsh.JavaCharStream: int bufsize>;

        if $i1 != $i0 goto label2;

        $i9 = r0.<bsh.JavaCharStream: int tokenBegin>;

        if $i9 <= 2048 goto label1;

        r0.<bsh.JavaCharStream: int bufpos> = 0;

        $i10 = r0.<bsh.JavaCharStream: int tokenBegin>;

        r0.<bsh.JavaCharStream: int available> = $i10;

        goto label5;

     label1:
        virtualinvoke r0.<bsh.JavaCharStream: void ExpandBuff(boolean)>(0);

        goto label5;

     label2:
        $i3 = r0.<bsh.JavaCharStream: int available>;

        $i2 = r0.<bsh.JavaCharStream: int tokenBegin>;

        if $i3 <= $i2 goto label3;

        $i8 = r0.<bsh.JavaCharStream: int bufsize>;

        r0.<bsh.JavaCharStream: int available> = $i8;

        goto label5;

     label3:
        $i5 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i4 = r0.<bsh.JavaCharStream: int available>;

        $i6 = $i5 - $i4;

        if $i6 >= 2048 goto label4;

        virtualinvoke r0.<bsh.JavaCharStream: void ExpandBuff(boolean)>(1);

        goto label5;

     label4:
        $i7 = r0.<bsh.JavaCharStream: int tokenBegin>;

        r0.<bsh.JavaCharStream: int available> = $i7;

     label5:
        return;
    }

    protected void UpdateLineColumn(char)
    {
        bsh.JavaCharStream r0;
        int[] $r1, $r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0, $z1;
        char c2;

        r0 := @this: bsh.JavaCharStream;

        c2 := @parameter0: char;

        $i0 = r0.<bsh.JavaCharStream: int column>;

        $i1 = $i0 + 1;

        r0.<bsh.JavaCharStream: int column> = $i1;

        $z0 = r0.<bsh.JavaCharStream: boolean prevCharIsLF>;

        if $z0 == 0 goto label1;

        r0.<bsh.JavaCharStream: boolean prevCharIsLF> = 0;

        $i12 = r0.<bsh.JavaCharStream: int line>;

        r0.<bsh.JavaCharStream: int column> = 1;

        $i13 = $i12 + 1;

        r0.<bsh.JavaCharStream: int line> = $i13;

        goto label3;

     label1:
        $z1 = r0.<bsh.JavaCharStream: boolean prevCharIsCR>;

        if $z1 == 0 goto label3;

        r0.<bsh.JavaCharStream: boolean prevCharIsCR> = 0;

        $i18 = (int) c2;

        if $i18 != 10 goto label2;

        r0.<bsh.JavaCharStream: boolean prevCharIsLF> = 1;

        goto label3;

     label2:
        $i10 = r0.<bsh.JavaCharStream: int line>;

        r0.<bsh.JavaCharStream: int column> = 1;

        $i11 = $i10 + 1;

        r0.<bsh.JavaCharStream: int line> = $i11;

     label3:
        $i19 = (int) c2;

        tableswitch($i19)
        {
            case 9: goto label6;
            case 10: goto label5;
            case 11: goto label7;
            case 12: goto label7;
            case 13: goto label4;
            default: goto label7;
        };

     label4:
        r0.<bsh.JavaCharStream: boolean prevCharIsCR> = 1;

        goto label7;

     label5:
        r0.<bsh.JavaCharStream: boolean prevCharIsLF> = 1;

        goto label7;

     label6:
        $i3 = r0.<bsh.JavaCharStream: int column>;

        $i4 = $i3 - 1;

        r0.<bsh.JavaCharStream: int column> = $i4;

        $i8 = r0.<bsh.JavaCharStream: int column>;

        $i5 = r0.<bsh.JavaCharStream: int column>;

        $i6 = $i5 & 7;

        $i7 = 8 - $i6;

        $i9 = $i8 + $i7;

        r0.<bsh.JavaCharStream: int column> = $i9;

        goto label7;

     label7:
        $r1 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i14 = r0.<bsh.JavaCharStream: int bufpos>;

        $i15 = r0.<bsh.JavaCharStream: int line>;

        $r1[$i14] = $i15;

        $r2 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i16 = r0.<bsh.JavaCharStream: int bufpos>;

        $i17 = r0.<bsh.JavaCharStream: int column>;

        $r2[$i16] = $i17;

        return;
    }

    public char readChar() throws java.io.IOException
    {
        java.lang.Error $r16;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r12, $r15;
        java.lang.String $r13;
        java.io.IOException $r5, $r14;
        char[] $r1, $r2, $r3, $r4;
        bsh.JavaCharStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, i46, $i47, $i48, $i49, $i50;
        char $c5, $c10, $c14, $c20, $c24, $c28, $c31, $c43;

        r0 := @this: bsh.JavaCharStream;

        $i0 = r0.<bsh.JavaCharStream: int inBuf>;

        if $i0 <= 0 goto label02;

        $i37 = r0.<bsh.JavaCharStream: int inBuf>;

        $i38 = $i37 - 1;

        r0.<bsh.JavaCharStream: int inBuf> = $i38;

        $i39 = r0.<bsh.JavaCharStream: int bufpos>;

        $i40 = $i39 + 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i40;

        $i41 = r0.<bsh.JavaCharStream: int bufsize>;

        if $i40 != $i41 goto label01;

        r0.<bsh.JavaCharStream: int bufpos> = 0;

     label01:
        $r4 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i42 = r0.<bsh.JavaCharStream: int bufpos>;

        $c43 = $r4[$i42];

        return $c43;

     label02:
        $i1 = r0.<bsh.JavaCharStream: int bufpos>;

        $i2 = $i1 + 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i2;

        $i3 = r0.<bsh.JavaCharStream: int available>;

        if $i2 != $i3 goto label03;

        virtualinvoke r0.<bsh.JavaCharStream: void AdjustBuffSize()>();

     label03:
        $r1 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i4 = r0.<bsh.JavaCharStream: int bufpos>;

        $c5 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $r1[$i4] = $c5;

        $i47 = (int) $c5;

        if $i47 != 92 goto label20;

        virtualinvoke r0.<bsh.JavaCharStream: void UpdateLineColumn(char)>($c5);

        i46 = 1;

        goto label04;

     label04:
        $i6 = r0.<bsh.JavaCharStream: int bufpos>;

        $i7 = $i6 + 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i7;

        $i8 = r0.<bsh.JavaCharStream: int available>;

        if $i7 != $i8 goto label05;

        virtualinvoke r0.<bsh.JavaCharStream: void AdjustBuffSize()>();

     label05:
        $r2 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i9 = r0.<bsh.JavaCharStream: int bufpos>;

        $c10 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $r2[$i9] = $c10;

        $i48 = (int) $c10;

        if $i48 == 92 goto label09;

        virtualinvoke r0.<bsh.JavaCharStream: void UpdateLineColumn(char)>($c10);

        $i49 = (int) $c10;

        if $i49 != 117 goto label07;

        $i11 = i46 & 1;

        if $i11 != 1 goto label07;

        $i12 = r0.<bsh.JavaCharStream: int bufpos>;

        $i13 = $i12 - 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i13;

        if $i13 >= 0 goto label06;

        $i35 = r0.<bsh.JavaCharStream: int bufsize>;

        $i36 = $i35 - 1;

        r0.<bsh.JavaCharStream: int bufpos> = $i36;

     label06:
        goto label13;

     label07:
        virtualinvoke r0.<bsh.JavaCharStream: void backup(int)>(i46);

     label08:
        return 92;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        if i46 <= 1 goto label11;

        virtualinvoke r0.<bsh.JavaCharStream: void backup(int)>(i46);

     label11:
        return 92;

     label12:
        virtualinvoke r0.<bsh.JavaCharStream: void UpdateLineColumn(char)>($c10);

        i46 = i46 + 1;

        goto label04;

     label13:
        goto label15;

     label14:
        $i15 = r0.<bsh.JavaCharStream: int column>;

        $i16 = $i15 + 1;

        r0.<bsh.JavaCharStream: int column> = $i16;

     label15:
        $c14 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $i50 = (int) $c14;

        if $i50 == 117 goto label14;

        $r3 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i17 = r0.<bsh.JavaCharStream: int bufpos>;

        $i18 = staticinvoke <bsh.JavaCharStream: int hexval(char)>($c14);

        $i19 = $i18 << 12;

        $c20 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $i21 = staticinvoke <bsh.JavaCharStream: int hexval(char)>($c20);

        $i22 = $i21 << 8;

        $i23 = $i19 | $i22;

        $c24 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $i25 = staticinvoke <bsh.JavaCharStream: int hexval(char)>($c24);

        $i26 = $i25 << 4;

        $i27 = $i23 | $i26;

        $c28 = virtualinvoke r0.<bsh.JavaCharStream: char ReadByte()>();

        $i29 = staticinvoke <bsh.JavaCharStream: int hexval(char)>($c28);

        $i30 = $i27 | $i29;

        $c31 = (char) $i30;

        $r3[$i17] = $c31;

        $i32 = r0.<bsh.JavaCharStream: int column>;

        $i33 = $i32 + 4;

        r0.<bsh.JavaCharStream: int column> = $i33;

     label16:
        goto label18;

     label17:
        $r5 := @caughtexception;

        $r16 = new java.lang.Error;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid escape character at line ");

        $i44 = r0.<bsh.JavaCharStream: int line>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i44);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" column ");

        $i45 = r0.<bsh.JavaCharStream: int column>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i45);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>($r13);

        throw $r16;

     label18:
        if i46 != 1 goto label19;

        return $c31;

     label19:
        $i34 = i46 - 1;

        virtualinvoke r0.<bsh.JavaCharStream: void backup(int)>($i34);

        return 92;

     label20:
        virtualinvoke r0.<bsh.JavaCharStream: void UpdateLineColumn(char)>($c5);

        return $c5;

        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
        catch java.io.IOException from label13 to label16 with label17;
    }

    public int getColumn()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i0 = r0.<bsh.JavaCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int getLine()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i0 = r0.<bsh.JavaCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int getEndColumn()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i0 = r0.<bsh.JavaCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int getEndLine()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i0 = r0.<bsh.JavaCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int getBeginColumn()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i0 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int getBeginLine()
    {
        bsh.JavaCharStream r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: bsh.JavaCharStream;

        $r1 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i0 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public void backup(int)
    {
        bsh.JavaCharStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: bsh.JavaCharStream;

        i0 := @parameter0: int;

        $i1 = r0.<bsh.JavaCharStream: int inBuf>;

        $i2 = $i1 + i0;

        r0.<bsh.JavaCharStream: int inBuf> = $i2;

        $i3 = r0.<bsh.JavaCharStream: int bufpos>;

        $i4 = $i3 - i0;

        r0.<bsh.JavaCharStream: int bufpos> = $i4;

        if $i4 >= 0 goto label1;

        $i6 = r0.<bsh.JavaCharStream: int bufpos>;

        $i5 = r0.<bsh.JavaCharStream: int bufsize>;

        $i7 = $i6 + $i5;

        r0.<bsh.JavaCharStream: int bufpos> = $i7;

     label1:
        return;
    }

    public void <init>(java.io.Reader, int, int, int)
    {
        java.io.Reader r1;
        bsh.JavaCharStream r0;
        int[] $r3, $r4;
        int i0, i1, $i2, i3, $i5, $i7;
        char[] $r2, $r5;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i5 = (int) -1;

        r0.<bsh.JavaCharStream: int bufpos> = $i5;

        r0.<bsh.JavaCharStream: int column> = 0;

        r0.<bsh.JavaCharStream: int line> = 1;

        r0.<bsh.JavaCharStream: boolean prevCharIsCR> = 0;

        r0.<bsh.JavaCharStream: boolean prevCharIsLF> = 0;

        r0.<bsh.JavaCharStream: int maxNextCharInd> = 0;

        $i7 = (int) -1;

        r0.<bsh.JavaCharStream: int nextCharInd> = $i7;

        r0.<bsh.JavaCharStream: int inBuf> = 0;

        r0.<bsh.JavaCharStream: java.io.Reader inputStream> = r1;

        r0.<bsh.JavaCharStream: int line> = i0;

        $i2 = i1 - 1;

        r0.<bsh.JavaCharStream: int column> = $i2;

        r0.<bsh.JavaCharStream: int bufsize> = i3;

        r0.<bsh.JavaCharStream: int available> = i3;

        $r2 = newarray (char)[i3];

        r0.<bsh.JavaCharStream: char[] buffer> = $r2;

        $r3 = newarray (int)[i3];

        r0.<bsh.JavaCharStream: int[] bufline> = $r3;

        $r4 = newarray (int)[i3];

        r0.<bsh.JavaCharStream: int[] bufcolumn> = $r4;

        $r5 = newarray (char)[4096];

        r0.<bsh.JavaCharStream: char[] nextCharBuf> = $r5;

        return;
    }

    public void <init>(java.io.Reader, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1;
        java.io.Reader r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<bsh.JavaCharStream: void <init>(java.io.Reader,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.Reader)
    {
        java.io.Reader r1;
        bsh.JavaCharStream r0;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<bsh.JavaCharStream: void <init>(java.io.Reader,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void ReInit(java.io.Reader, int, int, int)
    {
        java.io.Reader r1;
        bsh.JavaCharStream r0;
        int[] $r4, $r5;
        int i0, i1, $i2, i3, $i4, $i6, $i8;
        char[] $r2, $r3, $r6, $r7;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<bsh.JavaCharStream: java.io.Reader inputStream> = r1;

        r0.<bsh.JavaCharStream: int line> = i0;

        $i2 = i1 - 1;

        r0.<bsh.JavaCharStream: int column> = $i2;

        $r2 = r0.<bsh.JavaCharStream: char[] buffer>;

        if $r2 == null goto label1;

        $r7 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i4 = lengthof $r7;

        if i3 == $i4 goto label2;

     label1:
        r0.<bsh.JavaCharStream: int bufsize> = i3;

        r0.<bsh.JavaCharStream: int available> = i3;

        $r3 = newarray (char)[i3];

        r0.<bsh.JavaCharStream: char[] buffer> = $r3;

        $r4 = newarray (int)[i3];

        r0.<bsh.JavaCharStream: int[] bufline> = $r4;

        $r5 = newarray (int)[i3];

        r0.<bsh.JavaCharStream: int[] bufcolumn> = $r5;

        $r6 = newarray (char)[4096];

        r0.<bsh.JavaCharStream: char[] nextCharBuf> = $r6;

     label2:
        r0.<bsh.JavaCharStream: boolean prevCharIsCR> = 0;

        r0.<bsh.JavaCharStream: boolean prevCharIsLF> = 0;

        r0.<bsh.JavaCharStream: int maxNextCharInd> = 0;

        r0.<bsh.JavaCharStream: int inBuf> = 0;

        r0.<bsh.JavaCharStream: int tokenBegin> = 0;

        $i6 = (int) -1;

        r0.<bsh.JavaCharStream: int bufpos> = $i6;

        $i8 = (int) -1;

        r0.<bsh.JavaCharStream: int nextCharInd> = $i8;

        return;
    }

    public void ReInit(java.io.Reader, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1;
        java.io.Reader r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<bsh.JavaCharStream: void ReInit(java.io.Reader,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void ReInit(java.io.Reader)
    {
        java.io.Reader r1;
        bsh.JavaCharStream r0;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.Reader;

        virtualinvoke r0.<bsh.JavaCharStream: void ReInit(java.io.Reader,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1, i2;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: bsh.JavaCharStream;

        r2 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<bsh.JavaCharStream: void <init>(java.io.Reader,int,int,int)>($r1, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1;
        java.io.InputStream r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<bsh.JavaCharStream: void <init>(java.io.InputStream,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.InputStream)
    {
        bsh.JavaCharStream r0;
        java.io.InputStream r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<bsh.JavaCharStream: void <init>(java.io.InputStream,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream, int, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1, i2;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: bsh.JavaCharStream;

        r2 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        virtualinvoke r0.<bsh.JavaCharStream: void ReInit(java.io.Reader,int,int,int)>($r1, i0, i1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream, int, int)
    {
        bsh.JavaCharStream r0;
        int i0, i1;
        java.io.InputStream r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<bsh.JavaCharStream: void ReInit(java.io.InputStream,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream)
    {
        bsh.JavaCharStream r0;
        java.io.InputStream r1;

        r0 := @this: bsh.JavaCharStream;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<bsh.JavaCharStream: void ReInit(java.io.InputStream,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public java.lang.String GetImage()
    {
        bsh.JavaCharStream r0;
        java.lang.StringBuffer $r1, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r2, $r5, $r8, $r9;
        char[] $r3, $r6, $r10;

        r0 := @this: bsh.JavaCharStream;

        $i1 = r0.<bsh.JavaCharStream: int bufpos>;

        $i0 = r0.<bsh.JavaCharStream: int tokenBegin>;

        if $i1 < $i0 goto label1;

        $r9 = new java.lang.String;

        $r10 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i12 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i9 = r0.<bsh.JavaCharStream: int bufpos>;

        $i8 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i10 = $i9 - $i8;

        $i11 = $i10 + 1;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r10, $i12, $i11);

        return $r9;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = new java.lang.String;

        $r3 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i5 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i3 = r0.<bsh.JavaCharStream: int bufsize>;

        $i2 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i4 = $i3 - $i2;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i5, $i4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = new java.lang.String;

        $r6 = r0.<bsh.JavaCharStream: char[] buffer>;

        $i6 = r0.<bsh.JavaCharStream: int bufpos>;

        $i7 = $i6 + 1;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r6, 0, $i7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public char[] GetSuffix(int)
    {
        bsh.JavaCharStream r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        char[] r0, $r2, $r3, $r4;

        r1 := @this: bsh.JavaCharStream;

        i0 := @parameter0: int;

        r0 = newarray (char)[i0];

        $i1 = r1.<bsh.JavaCharStream: int bufpos>;

        $i2 = $i1 + 1;

        if $i2 < i0 goto label1;

        $r4 = r1.<bsh.JavaCharStream: char[] buffer>;

        $i16 = r1.<bsh.JavaCharStream: int bufpos>;

        $i17 = $i16 - i0;

        $i18 = $i17 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i18, r0, 0, i0);

        goto label2;

     label1:
        $r2 = r1.<bsh.JavaCharStream: char[] buffer>;

        $i6 = r1.<bsh.JavaCharStream: int bufsize>;

        $i3 = r1.<bsh.JavaCharStream: int bufpos>;

        $i4 = i0 - $i3;

        $i5 = $i4 - 1;

        $i10 = $i6 - $i5;

        $i7 = r1.<bsh.JavaCharStream: int bufpos>;

        $i8 = i0 - $i7;

        $i9 = $i8 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i10, r0, 0, $i9);

        $r3 = r1.<bsh.JavaCharStream: char[] buffer>;

        $i11 = r1.<bsh.JavaCharStream: int bufpos>;

        $i12 = i0 - $i11;

        $i15 = $i12 - 1;

        $i13 = r1.<bsh.JavaCharStream: int bufpos>;

        $i14 = $i13 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r0, $i15, $i14);

     label2:
        return r0;
    }

    public void Done()
    {
        bsh.JavaCharStream r0;

        r0 := @this: bsh.JavaCharStream;

        r0.<bsh.JavaCharStream: char[] nextCharBuf> = null;

        r0.<bsh.JavaCharStream: char[] buffer> = null;

        r0.<bsh.JavaCharStream: int[] bufline> = null;

        r0.<bsh.JavaCharStream: int[] bufcolumn> = null;

        return;
    }

    public void adjustBeginLineColumn(int, int)
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        bsh.JavaCharStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40, i41, i42, $i43;

        r0 := @this: bsh.JavaCharStream;

        i35 := @parameter0: int;

        i11 := @parameter1: int;

        i36 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i1 = r0.<bsh.JavaCharStream: int bufpos>;

        $i0 = r0.<bsh.JavaCharStream: int tokenBegin>;

        if $i1 < $i0 goto label1;

        $i31 = r0.<bsh.JavaCharStream: int bufpos>;

        $i30 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i33 = $i31 - $i30;

        $i32 = r0.<bsh.JavaCharStream: int inBuf>;

        $i34 = $i33 + $i32;

        i37 = $i34 + 1;

        goto label2;

     label1:
        $i3 = r0.<bsh.JavaCharStream: int bufsize>;

        $i2 = r0.<bsh.JavaCharStream: int tokenBegin>;

        $i5 = $i3 - $i2;

        $i4 = r0.<bsh.JavaCharStream: int bufpos>;

        $i6 = $i5 + $i4;

        $i8 = $i6 + 1;

        $i7 = r0.<bsh.JavaCharStream: int inBuf>;

        i37 = $i8 + $i7;

     label2:
        i38 = 0;

        i39 = 0;

        i40 = 0;

        goto label4;

     label3:
        $r11 = r0.<bsh.JavaCharStream: int[] bufline>;

        $r11[$i21] = i35;

        $r12 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i26 = $r12[$i23];

        $i28 = i40 + $i26;

        $r13 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i27 = $r13[$i21];

        i41 = $i28 - $i27;

        $r14 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i29 = i11 + i40;

        $r14[$i21] = $i29;

        i40 = i41;

        i38 = i38 + 1;

     label4:
        if i38 >= i37 goto label5;

        $r9 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i20 = r0.<bsh.JavaCharStream: int bufsize>;

        $i21 = i36 % $i20;

        i39 = $i21;

        $i25 = $r9[$i21];

        $r10 = r0.<bsh.JavaCharStream: int[] bufline>;

        i36 = i36 + 1;

        $i22 = r0.<bsh.JavaCharStream: int bufsize>;

        $i23 = i36 % $i22;

        $i24 = $r10[$i23];

        if $i25 == $i24 goto label3;

     label5:
        if i38 >= i37 goto label9;

        $r3 = r0.<bsh.JavaCharStream: int[] bufline>;

        i42 = i35 + 1;

        $r3[i39] = i35;

        $r4 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i12 = i11 + i40;

        $r4[i39] = $i12;

        goto label8;

     label6:
        $r5 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i13 = r0.<bsh.JavaCharStream: int bufsize>;

        $i14 = i36 % $i13;

        i39 = $i14;

        $i18 = $r5[$i14];

        $r6 = r0.<bsh.JavaCharStream: int[] bufline>;

        i36 = i36 + 1;

        $i15 = r0.<bsh.JavaCharStream: int bufsize>;

        $i16 = i36 % $i15;

        $i17 = $r6[$i16];

        if $i18 == $i17 goto label7;

        $r8 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i19 = i42;

        i42 = i42 + 1;

        $r8[$i14] = $i19;

        goto label8;

     label7:
        $r7 = r0.<bsh.JavaCharStream: int[] bufline>;

        $r7[$i14] = i42;

     label8:
        $i43 = i38;

        i38 = i38 + 1;

        if $i43 < i37 goto label6;

     label9:
        $r1 = r0.<bsh.JavaCharStream: int[] bufline>;

        $i9 = $r1[i39];

        r0.<bsh.JavaCharStream: int line> = $i9;

        $r2 = r0.<bsh.JavaCharStream: int[] bufcolumn>;

        $i10 = $r2[i39];

        r0.<bsh.JavaCharStream: int column> = $i10;

        return;
    }

    public static void <clinit>()
    {
        <bsh.JavaCharStream: boolean staticFlag> = 0;

        return;
    }
}
