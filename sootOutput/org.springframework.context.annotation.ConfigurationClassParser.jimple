class org.springframework.context.'annotation'.ConfigurationClassParser extends java.lang.Object
{
    private final org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory;
    private final org.springframework.beans.factory.parsing.ProblemReporter problemReporter;
    private final java.util.Stack importStack;
    private final java.util.Set configurationClasses;

    public void <init>(org.springframework.core.type.classreading.MetadataReaderFactory, org.springframework.beans.factory.parsing.ProblemReporter)
    {
        org.springframework.core.type.classreading.MetadataReaderFactory r3;
        org.springframework.beans.factory.parsing.ProblemReporter r4;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;
        java.util.LinkedHashSet $r2;
        org.springframework.context.'annotation'.ConfigurationClassParser$ImportStack $r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r3 := @parameter0: org.springframework.core.type.classreading.MetadataReaderFactory;

        r4 := @parameter1: org.springframework.beans.factory.parsing.ProblemReporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.context.'annotation'.ConfigurationClassParser$ImportStack;

        specialinvoke $r1.<org.springframework.context.'annotation'.ConfigurationClassParser$ImportStack: void <init>(org.springframework.context.'annotation'.ConfigurationClassParser$ImportStack)>(null);

        r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Stack importStack> = $r1;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses> = $r2;

        r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory> = r3;

        r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.beans.factory.parsing.ProblemReporter problemReporter> = r4;

        return;
    }

    public void parse(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.springframework.core.type.classreading.MetadataReaderFactory $r2;
        org.springframework.core.type.classreading.MetadataReader $r3;
        java.lang.String r1, r5;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;
        org.springframework.context.'annotation'.ConfigurationClass $r4;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $r3 = interfaceinvoke $r2.<org.springframework.core.type.classreading.MetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(java.lang.String)>(r1);

        $r4 = new org.springframework.context.'annotation'.ConfigurationClass;

        specialinvoke $r4.<org.springframework.context.'annotation'.ConfigurationClass: void <init>(org.springframework.core.type.classreading.MetadataReader,java.lang.String)>($r3, r5);

        virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassParser: void processConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass)>($r4);

        return;
    }

    public void parse(java.lang.Class, java.lang.String) throws java.io.IOException
    {
        java.lang.Class r2;
        java.lang.String r3;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;
        org.springframework.context.'annotation'.ConfigurationClass $r1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        $r1 = new org.springframework.context.'annotation'.ConfigurationClass;

        specialinvoke $r1.<org.springframework.context.'annotation'.ConfigurationClass: void <init>(java.lang.Class,java.lang.String)>(r2, r3);

        virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassParser: void processConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass)>($r1);

        return;
    }

    protected void processConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass) throws java.io.IOException
    {
        org.springframework.context.'annotation'.ConfigurationClass r0;
        org.springframework.core.type.classreading.MetadataReader $r6;
        java.lang.String $r2, $r4, $r12;
        org.springframework.context.'annotation'.ConfigurationClassParser r1;
        boolean $z0, $z1, $z2;
        org.springframework.core.type.AnnotationMetadata r14;
        java.util.Set $r11, $r13, $r15;
        org.springframework.core.type.StandardAnnotationMetadata $r7, $r9;
        org.springframework.core.type.classreading.MetadataReaderFactory $r5;
        java.lang.Class $r3, $r8, $r10;

        r1 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r0 := @parameter0: org.springframework.context.'annotation'.ConfigurationClass;

        r14 = virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        goto label4;

     label1:
        virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClassParser: void doProcessConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass,org.springframework.core.type.AnnotationMetadata)>(r0, r14);

        $r2 = interfaceinvoke r14.<org.springframework.core.type.AnnotationMetadata: java.lang.String getSuperClassName()>();

        if $r2 == null goto label3;

        $r3 = class "Ljava/lang/Object;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        $z1 = r14 instanceof org.springframework.core.type.StandardAnnotationMetadata;

        if $z1 == 0 goto label2;

        $r7 = (org.springframework.core.type.StandardAnnotationMetadata) r14;

        $r8 = virtualinvoke $r7.<org.springframework.core.type.StandardAnnotationMetadata: java.lang.Class getIntrospectedClass()>();

        $r9 = new org.springframework.core.type.StandardAnnotationMetadata;

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.Class getSuperclass()>();

        specialinvoke $r9.<org.springframework.core.type.StandardAnnotationMetadata: void <init>(java.lang.Class)>($r10);

        r14 = $r9;

        goto label4;

     label2:
        $r5 = r1.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $r6 = interfaceinvoke $r5.<org.springframework.core.type.classreading.MetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(java.lang.String)>($r2);

        r14 = interfaceinvoke $r6.<org.springframework.core.type.classreading.MetadataReader: org.springframework.core.type.AnnotationMetadata getAnnotationMetadata()>();

        goto label4;

     label3:
        r14 = null;

     label4:
        if r14 != null goto label1;

        $r11 = r1.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses>;

        $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z2 == 0 goto label5;

        $r12 = virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClass: java.lang.String getBeanName()>();

        if $r12 == null goto label5;

        $r13 = r1.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses>;

        interfaceinvoke $r13.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label5:
        $r15 = r1.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r0);

        return;
    }

    protected void doProcessConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass, org.springframework.core.type.AnnotationMetadata) throws java.io.IOException
    {
        java.lang.IllegalStateException $r20;
        org.springframework.context.'annotation'.ConfigurationClassMethod $r11;
        org.springframework.context.'annotation'.ConfigurationClass r10;
        java.util.Map $r14, $r18, $r28;
        boolean $z0, $z1, $z2;
        org.springframework.core.type.MethodMetadata r34;
        org.springframework.core.type.AnnotationMetadata r0;
        java.util.Set $r7;
        java.lang.StringBuilder $r21, $r23;
        java.lang.String[] $r30, r31;
        int i0, i1;
        java.lang.String $r2, $r4, $r6, $r13, $r17, $r22, $r24, $r27, r33;
        org.springframework.context.'annotation'.ConfigurationClassParser r25;
        java.util.Iterator $r8;
        java.lang.Class $r1, $r3, $r5, $r12, $r16, $r26, r32;
        java.lang.Object $r9, $r15, $r19, $r29;

        r25 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r10 := @parameter0: org.springframework.context.'annotation'.ConfigurationClass;

        r0 := @parameter1: org.springframework.core.type.AnnotationMetadata;

        $r1 = class "Lorg/springframework/context/annotation/Import;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r26 = class "Lorg/springframework/context/annotation/Import;";

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>($r27, 1);

        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        $r30 = (java.lang.String[]) $r29;

        specialinvoke r25.<org.springframework.context.'annotation'.ConfigurationClassParser: void processImport(org.springframework.context.'annotation'.ConfigurationClass,java.lang.String[])>(r10, $r30);

     label1:
        $r3 = class "Lorg/springframework/context/annotation/ImportResource;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z1 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r4);

        if $z1 == 0 goto label5;

        $r12 = class "Lorg/springframework/context/annotation/ImportResource;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r13);

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        r31 = (java.lang.String[]) $r15;

        $r16 = class "Lorg/springframework/context/annotation/ImportResource;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r17);

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("reader");

        r32 = (java.lang.Class) $r19;

        if r32 != null goto label2;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("No reader class associated with imported resources: ");

        $r22 = staticinvoke <org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>(r31);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label2:
        i0 = lengthof r31;

        i1 = 0;

        goto label4;

     label3:
        r33 = r31[i1];

        virtualinvoke r10.<org.springframework.context.'annotation'.ConfigurationClass: void addImportedResource(java.lang.String,java.lang.Class)>(r33, r32);

        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label3;

     label5:
        $r5 = class "Lorg/springframework/context/annotation/Bean;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = interfaceinvoke r0.<org.springframework.core.type.AnnotationMetadata: java.util.Set getAnnotatedMethods(java.lang.String)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label7;

     label6:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.springframework.core.type.MethodMetadata) $r9;

        $r11 = new org.springframework.context.'annotation'.ConfigurationClassMethod;

        specialinvoke $r11.<org.springframework.context.'annotation'.ConfigurationClassMethod: void <init>(org.springframework.core.type.MethodMetadata,org.springframework.context.'annotation'.ConfigurationClass)>(r34, r10);

        virtualinvoke r10.<org.springframework.context.'annotation'.ConfigurationClass: void addMethod(org.springframework.context.'annotation'.ConfigurationClassMethod)>($r11);

     label7:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label6;

        return;
    }

    private void processImport(org.springframework.context.'annotation'.ConfigurationClass, java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r4;
        org.springframework.beans.factory.parsing.ProblemReporter $r11;
        org.springframework.context.'annotation'.ConfigurationClass r1, $r8;
        java.util.Stack $r2, $r3, $r9, $r12;
        org.springframework.core.type.classreading.MetadataReader $r7;
        int i0, i1;
        java.lang.String r5;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;
        boolean $z0;
        org.springframework.core.type.AnnotationMetadata $r13;
        org.springframework.core.type.classreading.MetadataReaderFactory $r6;
        org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem $r10;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        r1 := @parameter0: org.springframework.context.'annotation'.ConfigurationClass;

        r4 := @parameter1: java.lang.String[];

        $r2 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Stack importStack>;

        $z0 = virtualinvoke $r2.<java.util.Stack: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r11 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.beans.factory.parsing.ProblemReporter problemReporter>;

        $r10 = new org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem;

        $r12 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Stack importStack>;

        $r13 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClass: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        specialinvoke $r10.<org.springframework.context.'annotation'.ConfigurationClassParser$CircularImportProblem: void <init>(org.springframework.context.'annotation'.ConfigurationClass,java.util.Stack,org.springframework.core.type.AnnotationMetadata)>(r1, $r12, $r13);

        interfaceinvoke $r11.<org.springframework.beans.factory.parsing.ProblemReporter: void error(org.springframework.beans.factory.parsing.Problem)>($r10);

        goto label4;

     label1:
        $r3 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Stack importStack>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        i0 = lengthof r4;

        i1 = 0;

        goto label3;

     label2:
        r5 = r4[i1];

        $r6 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $r7 = interfaceinvoke $r6.<org.springframework.core.type.classreading.MetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(java.lang.String)>(r5);

        $r8 = new org.springframework.context.'annotation'.ConfigurationClass;

        specialinvoke $r8.<org.springframework.context.'annotation'.ConfigurationClass: void <init>(org.springframework.core.type.classreading.MetadataReader,java.lang.String)>($r7, null);

        virtualinvoke r0.<org.springframework.context.'annotation'.ConfigurationClassParser: void processConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass)>($r8);

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label2;

        $r9 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Stack importStack>;

        virtualinvoke $r9.<java.util.Stack: java.lang.Object pop()>();

     label4:
        return;
    }

    public void validate()
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.Object $r3;
        org.springframework.beans.factory.parsing.ProblemReporter $r5;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;
        org.springframework.context.'annotation'.ConfigurationClass r4;
        boolean $z0;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.context.'annotation'.ConfigurationClass) $r3;

        $r5 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: org.springframework.beans.factory.parsing.ProblemReporter problemReporter>;

        virtualinvoke r4.<org.springframework.context.'annotation'.ConfigurationClass: void validate(org.springframework.beans.factory.parsing.ProblemReporter)>($r5);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.util.Set getConfigurationClasses()
    {
        java.util.Set $r1;
        org.springframework.context.'annotation'.ConfigurationClassParser r0;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassParser;

        $r1 = r0.<org.springframework.context.'annotation'.ConfigurationClassParser: java.util.Set configurationClasses>;

        return $r1;
    }
}
