public class org.apache.velocity.runtime.log.Log4JLogChute extends java.lang.Object implements org.apache.velocity.runtime.log.LogChute
{
    public static final java.lang.String RUNTIME_LOG_LOG4J_LOGGER;
    public static final java.lang.String RUNTIME_LOG_LOG4J_LOGGER_LEVEL;
    private org.apache.velocity.runtime.RuntimeServices rsvc;
    private boolean hasTrace;
    private org.apache.log4j.RollingFileAppender appender;
    protected org.apache.log4j.Logger logger;
    static java.lang.Class class$org$apache$log4j$Level;

    public void <init>()
    {
        org.apache.velocity.runtime.log.Log4JLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: boolean hasTrace> = 0;

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender> = null;

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger> = null;

        return;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        org.apache.velocity.runtime.RuntimeServices r1, $r2, $r8, $r20;
        org.apache.log4j.Logger $r7, $r12, $r13;
        java.lang.NoSuchFieldException $r19;
        org.apache.velocity.runtime.log.Log4JLogChute r0;
        java.lang.StringBuffer $r14, $r15, $r16, $r17;
        org.apache.log4j.Level $r11;
        int $i0;
        java.lang.String r4, $r6, $r9, $r18, $r21;
        java.lang.Object $r3;
        java.lang.Class $r5, $r10, $r22;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log.logsystem.log4j.logger");

        r4 = (java.lang.String) $r3;

        if r4 == null goto label1;

        $r13 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>(r4);

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger> = $r13;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Log4JLogChute using logger \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.velocity.runtime.log.Log4JLogChute: void log(int,java.lang.String)>(0, $r18);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>($r6);

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger> = $r7;

        $r8 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r9 = interfaceinvoke $r8.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String)>("runtime.log");

        if $r9 == null goto label2;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        specialinvoke r0.<org.apache.velocity.runtime.log.Log4JLogChute: void initAppender(java.lang.String)>($r9);

     label2:
        $r20 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r21 = interfaceinvoke $r20.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String)>("runtime.log.logsystem.log4j.logger.level");

        if $r21 == null goto label3;

        $r11 = staticinvoke <org.apache.log4j.Level: org.apache.log4j.Level toLevel(java.lang.String)>($r21);

        $r12 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r12.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r11);

     label3:
        $r10 = <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.Class class$org$apache$log4j$Level>;

        if $r10 != null goto label4;

        $r22 = staticinvoke <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.Class class$(java.lang.String)>("org.apache.log4j.Level");

        <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.Class class$org$apache$log4j$Level> = $r22;

        goto label5;

     label4:
        $r22 = <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.Class class$org$apache$log4j$Level>;

     label5:
        virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("TRACE");

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: boolean hasTrace> = 1;

     label6:
        goto label8;

     label7:
        $r19 := @caughtexception;

        virtualinvoke r0.<org.apache.velocity.runtime.log.Log4JLogChute: void log(int,java.lang.String)>(0, "The version of log4j being used does not support the \"trace\" level.");

     label8:
        return;

        catch java.lang.NoSuchFieldException from label3 to label6 with label7;
    }

    private void initAppender(java.lang.String) throws java.lang.Exception
    {
        org.apache.velocity.runtime.RuntimeServices $r15;
        org.apache.log4j.Logger $r6, $r8;
        org.apache.velocity.runtime.log.Log4JLogChute r1;
        java.lang.StringBuffer $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20;
        java.lang.String r3, $r13, $r21;
        java.io.IOException $r14;
        java.lang.RuntimeException $r22;
        org.apache.velocity.runtime.log.Log $r16;
        org.apache.log4j.PatternLayout $r0;
        org.apache.log4j.RollingFileAppender $r2, $r4, $r5, $r7;

        r1 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        r3 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.log4j.PatternLayout;

        specialinvoke $r0.<org.apache.log4j.PatternLayout: void <init>(java.lang.String)>("%d - %m%n");

        $r2 = new org.apache.log4j.RollingFileAppender;

        specialinvoke $r2.<org.apache.log4j.RollingFileAppender: void <init>(org.apache.log4j.Layout,java.lang.String,boolean)>($r0, r3, 1);

        r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender> = $r2;

        $r4 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        virtualinvoke $r4.<org.apache.log4j.RollingFileAppender: void setMaxBackupIndex(int)>(1);

        $r5 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        virtualinvoke $r5.<org.apache.log4j.RollingFileAppender: void setMaximumFileSize(long)>(100000L);

        $r6 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r6.<org.apache.log4j.Logger: void setAdditivity(boolean)>(0);

        $r8 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $r7 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        virtualinvoke $r8.<org.apache.log4j.Logger: void addAppender(org.apache.log4j.Appender)>($r7);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Log4JLogChute initialized using file \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.velocity.runtime.log.Log4JLogChute: void log(int,java.lang.String)>(0, $r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = r1.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r16 = interfaceinvoke $r15.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not create file appender \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r21, $r14);

        $r22 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.RuntimeException createRuntimeException(java.lang.String,java.lang.Throwable)>("Error configuring Log4JLogChute : ", $r14);

        throw $r22;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void log(int, java.lang.String)
    {
        org.apache.log4j.Logger $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.velocity.runtime.log.Log4JLogChute r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label6;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r3 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void warn(java.lang.Object)>(r1);

        goto label7;

     label2:
        $r4 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void info(java.lang.Object)>(r1);

        goto label7;

     label3:
        $z0 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: boolean hasTrace>;

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r6.<org.apache.log4j.Logger: void trace(java.lang.Object)>(r1);

        goto label7;

     label4:
        $r5 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void debug(java.lang.Object)>(r1);

        goto label7;

     label5:
        $r2 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r2.<org.apache.log4j.Logger: void error(java.lang.Object)>(r1);

        goto label7;

     label6:
        $r7 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void debug(java.lang.Object)>(r1);

     label7:
        return;
    }

    public void log(int, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.apache.log4j.Logger $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.velocity.runtime.log.Log4JLogChute r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label6;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r4 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void warn(java.lang.Object,java.lang.Throwable)>(r1, r2);

        goto label7;

     label2:
        $r5 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void info(java.lang.Object,java.lang.Throwable)>(r1, r2);

        goto label7;

     label3:
        $z0 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: boolean hasTrace>;

        if $z0 == 0 goto label4;

        $r7 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r7.<org.apache.log4j.Logger: void trace(java.lang.Object,java.lang.Throwable)>(r1, r2);

        goto label7;

     label4:
        $r6 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r6.<org.apache.log4j.Logger: void debug(java.lang.Object,java.lang.Throwable)>(r1, r2);

        goto label7;

     label5:
        $r3 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void error(java.lang.Object,java.lang.Throwable)>(r1, r2);

        goto label7;

     label6:
        $r8 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        virtualinvoke $r8.<org.apache.log4j.Logger: void debug(java.lang.Object,java.lang.Throwable)>(r1, r2);

     label7:
        return;
    }

    public boolean isLevelEnabled(int)
    {
        org.apache.log4j.Logger $r2, $r4, $r5, $r6, $r7, $r8;
        org.apache.velocity.runtime.log.Log4JLogChute r0;
        org.apache.log4j.Level $r1, $r3;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        $r6 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $z3 = virtualinvoke $r6.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        return $z3;

     label2:
        $r5 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $z2 = virtualinvoke $r5.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        return $z2;

     label3:
        $z4 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: boolean hasTrace>;

        if $z4 == 0 goto label4;

        $r8 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $z6 = virtualinvoke $r8.<org.apache.log4j.Logger: boolean isTraceEnabled()>();

        return $z6;

     label4:
        $r7 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $z5 = virtualinvoke $r7.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        return $z5;

     label5:
        $r4 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z1 = virtualinvoke $r4.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r3);

        return $z1;

     label6:
        $r2 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        return $z0;

     label7:
        return 1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.velocity.runtime.log.Log4JLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        virtualinvoke r0.<org.apache.velocity.runtime.log.Log4JLogChute: void shutdown()>();

        return;
    }

    public void shutdown()
    {
        org.apache.log4j.Logger $r3;
        org.apache.velocity.runtime.log.Log4JLogChute r0;
        org.apache.log4j.RollingFileAppender $r1, $r2, $r4;

        r0 := @this: org.apache.velocity.runtime.log.Log4JLogChute;

        $r1 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.Logger logger>;

        $r2 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        virtualinvoke $r3.<org.apache.log4j.Logger: void removeAppender(org.apache.log4j.Appender)>($r2);

        $r4 = r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender>;

        virtualinvoke $r4.<org.apache.log4j.RollingFileAppender: void close()>();

        r0.<org.apache.velocity.runtime.log.Log4JLogChute: org.apache.log4j.RollingFileAppender appender> = null;

     label1:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.String RUNTIME_LOG_LOG4J_LOGGER_LEVEL> = "runtime.log.logsystem.log4j.logger.level";

        <org.apache.velocity.runtime.log.Log4JLogChute: java.lang.String RUNTIME_LOG_LOG4J_LOGGER> = "runtime.log.logsystem.log4j.logger";

        return;
    }
}
