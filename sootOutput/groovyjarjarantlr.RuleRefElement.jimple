class groovyjarjarantlr.RuleRefElement extends groovyjarjarantlr.AlternativeElement
{
    protected java.lang.String targetRule;
    protected java.lang.String args;
    protected java.lang.String idAssign;
    protected java.lang.String label;

    public void <init>(groovyjarjarantlr.Grammar, groovyjarjarantlr.Token, int)
    {
        groovyjarjarantlr.Grammar r1;
        int i0, $i1;
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String $r3, $r4, $r5;
        groovyjarjarantlr.Token r2;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        r1 := @parameter0: groovyjarjarantlr.Grammar;

        r2 := @parameter1: groovyjarjarantlr.Token;

        i0 := @parameter2: int;

        specialinvoke r0.<groovyjarjarantlr.AlternativeElement: void <init>(groovyjarjarantlr.Grammar,groovyjarjarantlr.Token,int)>(r1, r2, i0);

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String args> = null;

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String idAssign> = null;

        $r3 = virtualinvoke r2.<groovyjarjarantlr.Token: java.lang.String getText()>();

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule> = $r3;

        $i1 = r2.<groovyjarjarantlr.Token: int type>;

        if $i1 != 24 goto label1;

        $r4 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r5 = staticinvoke <groovyjarjarantlr.CodeGenerator: java.lang.String encodeLexerRuleName(java.lang.String)>($r4);

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule> = $r5;

     label1:
        return;
    }

    public void generate()
    {
        groovyjarjarantlr.RuleRefElement r0;
        groovyjarjarantlr.Grammar $r1;
        groovyjarjarantlr.CodeGenerator $r2;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.CodeGenerator generator>;

        virtualinvoke $r2.<groovyjarjarantlr.CodeGenerator: void gen(groovyjarjarantlr.RuleRefElement)>(r0);

        return;
    }

    public java.lang.String getArgs()
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        return $r1;
    }

    public java.lang.String getIdAssign()
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String idAssign>;

        return $r1;
    }

    public java.lang.String getLabel()
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String label>;

        return $r1;
    }

    public groovyjarjarantlr.Lookahead look(int)
    {
        groovyjarjarantlr.Lookahead $r3;
        int i0;
        groovyjarjarantlr.LLkGrammarAnalyzer $r2;
        groovyjarjarantlr.RuleRefElement r0;
        groovyjarjarantlr.Grammar $r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: groovyjarjarantlr.Grammar grammar>;

        $r2 = $r1.<groovyjarjarantlr.Grammar: groovyjarjarantlr.LLkGrammarAnalyzer theLLkAnalyzer>;

        $r3 = interfaceinvoke $r2.<groovyjarjarantlr.LLkGrammarAnalyzer: groovyjarjarantlr.Lookahead look(int,groovyjarjarantlr.RuleRefElement)>(i0, r0);

        return $r3;
    }

    public void setArgs(java.lang.String)
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String args> = r1;

        return;
    }

    public void setIdAssign(java.lang.String)
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String idAssign> = r1;

        return;
    }

    public void setLabel(java.lang.String)
    {
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.RuleRefElement: java.lang.String label> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r2, $r3, $r5, $r7, $r8, $r10, $r12;
        groovyjarjarantlr.RuleRefElement r0;
        java.lang.String $r1, $r4, $r6, $r9, $r11, $r13;

        r0 := @this: groovyjarjarantlr.RuleRefElement;

        $r1 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        if $r1 == null goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String args>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r4 = r0.<groovyjarjarantlr.RuleRefElement: java.lang.String targetRule>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
