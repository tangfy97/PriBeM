final class org.apache.jena.riot.web.HttpResponseLib$1 extends java.lang.Object implements org.apache.jena.riot.web.HttpResponseHandler
{

    void <init>()
    {
        org.apache.jena.riot.web.HttpResponseLib$1 r0;

        r0 := @this: org.apache.jena.riot.web.HttpResponseLib$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handle(java.lang.String, org.apache.http.HttpResponse)
    {
        byte[] r10;
        int $i0, $i2;
        java.lang.String $r7, r16, $r18;
        java.io.PrintStream $r4, $r8, $r12, $r14;
        org.apache.http.HttpEntity $r1;
        org.apache.http.entity.ContentType $r2;
        java.io.IOException $r13;
        org.apache.jena.riot.web.HttpResponseLib$1 r15;
        org.apache.http.HttpResponse r0;
        java.lang.StringBuilder $r5, $r6, $r17;
        java.io.InputStream $r9;

        r15 := @this: org.apache.jena.riot.web.HttpResponseLib$1;

        r16 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.http.HttpResponse;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r2 = staticinvoke <org.apache.http.entity.ContentType: org.apache.http.entity.ContentType get(org.apache.http.HttpEntity)>($r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-type: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println()>();

        $r9 = interfaceinvoke $r1.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        r10 = newarray (byte)[1024];

     label2:
        $i0 = virtualinvoke $r9.<java.io.InputStream: int read(byte[])>(r10);

        $i2 = (int) -1;

        if $i0 == $i2 goto label3;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r10, 0, $i0, "UTF-8");

        virtualinvoke $r12.<java.io.PrintStream: void print(java.lang.String)>($r18);

        goto label2;

     label3:
        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r14);

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }
}
