class org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder extends org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder
{
    private final org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1;

    private void <init>(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)
    {
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder r0;
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder r1;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder;

        r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1> = r1;

        specialinvoke r0.<org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder: void <init>(org.tukaani.xz.lzma.LZMACoder$LiteralCoder)>(r1);

        return;
    }

    void decode() throws java.io.IOException
    {
        byte $b11;
        int[] $r9;
        boolean $z0;
        org.tukaani.xz.lz.LZDecoder $r6, $r16;
        short[] $r13, $r23;
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder r0;
        org.tukaani.xz.lzma.State $r3, $r19;
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder $r1, $r4, $r7, $r10, $r14, $r17, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, i15, i16, i17, $i19;
        org.tukaani.xz.lzma.LZMADecoder $r2, $r5, $r8, $r11, $r15, $r18, $r21;
        org.tukaani.xz.rangecoder.RangeDecoder $r12, $r22;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder;

        i15 = 1;

        $r1 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r2 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r1);

        $r3 = $r2.<org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.lzma.State state>;

        $z0 = virtualinvoke $r3.<org.tukaani.xz.lzma.State: boolean isLiteral()>();

        if $z0 == 0 goto label2;

     label1:
        $i12 = i15 << 1;

        $r20 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r21 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r20);

        $r22 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r21);

        $r23 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: short[] probs>;

        $i13 = virtualinvoke $r22.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>($r23, i15);

        $i14 = $i12 | $i13;

        i15 = $i14;

        if $i14 < 256 goto label1;

        goto label4;

     label2:
        $r4 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r5 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r4);

        $r6 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.lz.LZDecoder access$200(org.tukaani.xz.lzma.LZMADecoder)>($r5);

        $r7 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r8 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r7);

        $r9 = $r8.<org.tukaani.xz.lzma.LZMADecoder: int[] reps>;

        $i0 = $r9[0];

        i16 = virtualinvoke $r6.<org.tukaani.xz.lz.LZDecoder: int getByte(int)>($i0);

        i17 = 256;

     label3:
        $i8 = i16 << 1;

        i16 = $i8;

        $i9 = $i8 & i17;

        $r10 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r11 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r10);

        $r12 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.rangecoder.RangeDecoder access$400(org.tukaani.xz.lzma.LZMADecoder)>($r11);

        $r13 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: short[] probs>;

        $i1 = i17 + $i9;

        $i2 = $i1 + i15;

        $i3 = virtualinvoke $r12.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>($r13, $i2);

        $i4 = i15 << 1;

        $i10 = $i4 | $i3;

        i15 = $i10;

        $i6 = 0 - $i3;

        $i19 = (int) -1;

        $i5 = $i9 ^ $i19;

        $i7 = $i6 ^ $i5;

        i17 = i17 & $i7;

        if $i10 < 256 goto label3;

     label4:
        $r14 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r15 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r14);

        $r16 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.lz.LZDecoder access$200(org.tukaani.xz.lzma.LZMADecoder)>($r15);

        $b11 = (byte) i15;

        virtualinvoke $r16.<org.tukaani.xz.lz.LZDecoder: void putByte(byte)>($b11);

        $r17 = r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder this$1>;

        $r18 = staticinvoke <org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder: org.tukaani.xz.lzma.LZMADecoder access$300(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>($r17);

        $r19 = $r18.<org.tukaani.xz.lzma.LZMADecoder: org.tukaani.xz.lzma.State state>;

        virtualinvoke $r19.<org.tukaani.xz.lzma.State: void updateLiteral()>();

        return;
    }

    void <init>(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder, org.tukaani.xz.lzma.LZMADecoder$1)
    {
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder r0;
        org.tukaani.xz.lzma.LZMADecoder$1 r2;
        org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder r1;

        r0 := @this: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder;

        r1 := @parameter0: org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder;

        r2 := @parameter1: org.tukaani.xz.lzma.LZMADecoder$1;

        specialinvoke r0.<org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder: void <init>(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder)>(r1);

        return;
    }
}
