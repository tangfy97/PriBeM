final class org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableSingleton$Listener
{
    private final org.waveprotocol.wave.model.wave.ObservableWavelet wavelet;
    private final org.waveprotocol.wave.model.adt.ObservableSingleton manifestContainer;
    private org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation;
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveBasedConversationView, org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.adt.ObservableSingleton)
    {
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView r1;
        org.waveprotocol.wave.model.adt.ObservableSingleton r3;
        org.waveprotocol.wave.model.wave.ObservableWavelet r2;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveBasedConversationView;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r3 := @parameter2: org.waveprotocol.wave.model.adt.ObservableSingleton;

        r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet> = r2;

        r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.adt.ObservableSingleton manifestContainer> = r3;

        return;
    }

    org.waveprotocol.wave.model.wave.ObservableWavelet getWavelet()
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet $r1;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet>;

        return $r1;
    }

    org.waveprotocol.wave.model.conversation.WaveletBasedConversation getConversation()
    {
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView $r4, $r7;
        org.waveprotocol.wave.model.adt.ObservableSingleton $r2, $r3;
        org.waveprotocol.wave.model.conversation.ObservableManifest $r8;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer r0;
        org.waveprotocol.wave.model.id.IdGenerator $r9;
        org.waveprotocol.wave.model.wave.ObservableWavelet $r5;
        java.lang.Object $r6;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1, $r10, $r11;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.adt.ObservableSingleton manifestContainer>;

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.adt.ObservableSingleton: boolean hasValue()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r5 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet>;

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.adt.ObservableSingleton manifestContainer>;

        $r6 = interfaceinvoke $r3.<org.waveprotocol.wave.model.adt.ObservableSingleton: java.lang.Object get()>();

        $r8 = (org.waveprotocol.wave.model.conversation.ObservableManifest) $r6;

        $r7 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r9 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: org.waveprotocol.wave.model.id.IdGenerator access$000(org.waveprotocol.wave.model.conversation.WaveBasedConversationView)>($r7);

        $r10 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.conversation.WaveletBasedConversation create(org.waveprotocol.wave.model.conversation.WaveBasedConversationView,org.waveprotocol.wave.model.wave.ObservableWavelet,org.waveprotocol.wave.model.conversation.ObservableManifest,org.waveprotocol.wave.model.id.IdGenerator)>($r4, $r5, $r8, $r9);

        r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation> = $r10;

     label1:
        $r11 = r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        return $r11;
    }

    public void onValueChanged(org.waveprotocol.wave.model.conversation.DocumentBasedManifest, org.waveprotocol.wave.model.conversation.DocumentBasedManifest)
    {
        java.lang.AssertionError $r15, $r23;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer r2;
        java.util.Map $r9, $r17;
        org.waveprotocol.wave.model.wave.ObservableWavelet $r5, $r11, $r18;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r7, $r10, $r12, $r14, $r19, $r20, $r22;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest r0, r1;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView $r3, $r4, $r8, $r13, $r16, $r21;
        org.waveprotocol.wave.model.id.IdGenerator $r6;

        r2 := @this: org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer;

        r0 := @parameter0: org.waveprotocol.wave.model.conversation.DocumentBasedManifest;

        r1 := @parameter1: org.waveprotocol.wave.model.conversation.DocumentBasedManifest;

        if r0 == null goto label2;

        $z1 = <org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r22 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        if $r22 != null goto label1;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label1:
        $r16 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r17 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: java.util.Map access$100(org.waveprotocol.wave.model.conversation.WaveBasedConversationView)>($r16);

        $r18 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r18);

        $r19 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        virtualinvoke $r19.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation: void destroy()>();

        $r21 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r20 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: void access$200(org.waveprotocol.wave.model.conversation.WaveBasedConversationView,org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r21, $r20);

        r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation> = null;

     label2:
        if r1 == null goto label4;

        $z0 = <org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r14 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        if $r14 == null goto label3;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label3:
        $r4 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r5 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet>;

        $r3 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: org.waveprotocol.wave.model.id.IdGenerator access$000(org.waveprotocol.wave.model.conversation.WaveBasedConversationView)>($r3);

        $r7 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.conversation.WaveletBasedConversation create(org.waveprotocol.wave.model.conversation.WaveBasedConversationView,org.waveprotocol.wave.model.wave.ObservableWavelet,org.waveprotocol.wave.model.conversation.ObservableManifest,org.waveprotocol.wave.model.id.IdGenerator)>($r4, $r5, r1, $r6);

        r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation> = $r7;

        $r8 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r9 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: java.util.Map access$100(org.waveprotocol.wave.model.conversation.WaveBasedConversationView)>($r8);

        $r11 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.wave.ObservableWavelet wavelet>;

        $r10 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        $r13 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveBasedConversationView this$0>;

        $r12 = r2.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: org.waveprotocol.wave.model.conversation.WaveletBasedConversation conversation>;

        staticinvoke <org.waveprotocol.wave.model.conversation.WaveBasedConversationView: void access$300(org.waveprotocol.wave.model.conversation.WaveBasedConversationView,org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r13, $r12);

     label4:
        return;
    }

    public volatile void onValueChanged(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifest $r3, $r4;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.model.conversation.DocumentBasedManifest) r1;

        $r3 = (org.waveprotocol.wave.model.conversation.DocumentBasedManifest) r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: void onValueChanged(org.waveprotocol.wave.model.conversation.DocumentBasedManifest,org.waveprotocol.wave.model.conversation.DocumentBasedManifest)>($r4, $r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/conversation/WaveBasedConversationView;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.conversation.WaveBasedConversationView$ConversationContainer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
