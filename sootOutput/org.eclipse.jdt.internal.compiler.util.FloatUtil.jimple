public class org.eclipse.jdt.internal.compiler.util.FloatUtil extends java.lang.Object
{
    private static final int DOUBLE_FRACTION_WIDTH;
    private static final int DOUBLE_PRECISION;
    private static final int MAX_DOUBLE_EXPONENT;
    private static final int MIN_NORMALIZED_DOUBLE_EXPONENT;
    private static final int MIN_UNNORMALIZED_DOUBLE_EXPONENT;
    private static final int DOUBLE_EXPONENT_BIAS;
    private static final int DOUBLE_EXPONENT_SHIFT;
    private static final int SINGLE_FRACTION_WIDTH;
    private static final int SINGLE_PRECISION;
    private static final int MAX_SINGLE_EXPONENT;
    private static final int MIN_NORMALIZED_SINGLE_EXPONENT;
    private static final int MIN_UNNORMALIZED_SINGLE_EXPONENT;
    private static final int SINGLE_EXPONENT_BIAS;
    private static final int SINGLE_EXPONENT_SHIFT;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.FloatUtil r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.FloatUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float valueOfHexFloatLiteral(char[])
    {
        int $i1;
        char[] r0;
        float $f0;
        long $l0;

        r0 := @parameter0: char[];

        $l0 = staticinvoke <org.eclipse.jdt.internal.compiler.util.FloatUtil: long convertHexFloatingPointLiteralToBits(char[])>(r0);

        $i1 = (int) $l0;

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;
    }

    public static double valueOfHexDoubleLiteral(char[])
    {
        char[] r0;
        long $l0;
        double $d0;

        r0 := @parameter0: char[];

        $l0 = staticinvoke <org.eclipse.jdt.internal.compiler.util.FloatUtil: long convertHexFloatingPointLiteralToBits(char[])>(r0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    private static long convertHexFloatingPointLiteralToBits(char[])
    {
        byte $b8, $b24, $b38, $b40, $b42, b58, $b62, b94, b95, b96, b97;
        long $l2, l6, $l7, $l17, $l23, $l32, $l37, $l39, $l41, l44, l55, l65, l66, l67, l68, l75, l76, l77, l78, l80, l81, l82, l83, l90, l91, l92, l93;
        int i0, $i1, $i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, i48, i49, i51, i52, i54, i56, i57, i60, i63, i64, i69, i70, i71, $i72, $i73, $i74, i79, i84, i85, i86, $i87, $i88, $i89, $i98, $i99, $i100, $i102, $i103, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i118, $i120, $i122, $i124, $i126, $i128, $i130, $i132, $i134, $i136, $i138, $i140;
        java.lang.NumberFormatException $r5, $r6, $r7, $r8;
        char[] r0;
        boolean z0;
        char $c43, c45, c46, c47, $c50, $c53, c59, c61;

        r0 := @parameter0: char[];

        i0 = lengthof r0;

        l44 = 0L;

        c45 = r0[0];

        c46 = r0[0];

        $i98 = (int) c46;

        if $i98 != 48 goto label01;

        goto label02;

     label01:
        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>()>();

        throw $r5;

     label02:
        c47 = r0[1];

        $i99 = (int) c47;

        if $i99 == 88 goto label03;

        $i100 = (int) c47;

        if $i100 != 120 goto label04;

     label03:
        i48 = 2;

        goto label05;

     label04:
        $r6 = new java.lang.NumberFormatException;

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>()>();

        throw $r6;

     label05:
        $i102 = (int) -1;

        i49 = $i102;

     label06:
        $c50 = r0[i48];

        $i103 = (int) $c50;

        tableswitch($i103)
        {
            case 46: goto label08;
            case 47: goto label09;
            case 48: goto label07;
            default: goto label09;
        };

     label07:
        i48 = i48 + 1;

        goto label06;

     label08:
        i49 = i48;

        i48 = i48 + 1;

        goto label06;

     label09:
        i51 = 0;

        $i105 = (int) -1;

        i52 = $i105;

     label10:
        $c53 = r0[i48];

        $i106 = (int) $c53;

        tableswitch($i106)
        {
            case 46: goto label14;
            case 47: goto label15;
            case 48: goto label11;
            case 49: goto label11;
            case 50: goto label11;
            case 51: goto label11;
            case 52: goto label11;
            case 53: goto label11;
            case 54: goto label11;
            case 55: goto label11;
            case 56: goto label11;
            case 57: goto label11;
            case 58: goto label15;
            case 59: goto label15;
            case 60: goto label15;
            case 61: goto label15;
            case 62: goto label15;
            case 63: goto label15;
            case 64: goto label15;
            case 65: goto label13;
            case 66: goto label13;
            case 67: goto label13;
            case 68: goto label13;
            case 69: goto label13;
            case 70: goto label13;
            case 71: goto label15;
            case 72: goto label15;
            case 73: goto label15;
            case 74: goto label15;
            case 75: goto label15;
            case 76: goto label15;
            case 77: goto label15;
            case 78: goto label15;
            case 79: goto label15;
            case 80: goto label15;
            case 81: goto label15;
            case 82: goto label15;
            case 83: goto label15;
            case 84: goto label15;
            case 85: goto label15;
            case 86: goto label15;
            case 87: goto label15;
            case 88: goto label15;
            case 89: goto label15;
            case 90: goto label15;
            case 91: goto label15;
            case 92: goto label15;
            case 93: goto label15;
            case 94: goto label15;
            case 95: goto label15;
            case 96: goto label15;
            case 97: goto label12;
            case 98: goto label12;
            case 99: goto label12;
            case 100: goto label12;
            case 101: goto label12;
            case 102: goto label12;
            default: goto label15;
        };

     label11:
        $i107 = (int) $c53;

        i54 = $i107 - 48;

        goto label16;

     label12:
        $i108 = (int) $c53;

        $i1 = $i108 - 97;

        i54 = $i1 + 10;

        goto label16;

     label13:
        $i109 = (int) $c53;

        $i3 = $i109 - 65;

        i54 = $i3 + 10;

        goto label16;

     label14:
        i49 = i48;

        i48 = i48 + 1;

        goto label10;

     label15:
        if i49 >= 0 goto label19;

        i49 = i48;

        goto label19;

     label16:
        if i51 != 0 goto label17;

        i52 = i48;

        l44 = (long) i54;

        i51 = 4;

        goto label18;

     label17:
        if i51 >= 60 goto label18;

        l55 = l44 << 4;

        $l2 = (long) i54;

        l44 = l55 | $l2;

        i51 = i51 + 4;

     label18:
        i48 = i48 + 1;

        goto label10;

     label19:
        $c43 = r0[i48];

        $i110 = (int) $c43;

        if $i110 == 80 goto label20;

        $i111 = (int) $c43;

        if $i111 != 112 goto label21;

     label20:
        i56 = i48 + 1;

        goto label22;

     label21:
        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>()>();

        throw $r7;

     label22:
        i57 = 0;

        b58 = 1;

        b97 = 1;

        b96 = 1;

        goto label28;

     label23:
        c59 = r0[i56];

        $i112 = (int) c59;

        tableswitch($i112)
        {
            case 43: goto label24;
            case 44: goto label27;
            case 45: goto label25;
            case 46: goto label27;
            case 47: goto label27;
            case 48: goto label26;
            case 49: goto label26;
            case 50: goto label26;
            case 51: goto label26;
            case 52: goto label26;
            case 53: goto label26;
            case 54: goto label26;
            case 55: goto label26;
            case 56: goto label26;
            case 57: goto label26;
            default: goto label27;
        };

     label24:
        b58 = 1;

        b97 = 1;

        b96 = 1;

        i56 = i56 + 1;

        goto label28;

     label25:
        b58 = -1;

        b97 = -1;

        b96 = -1;

        i56 = i56 + 1;

        goto label28;

     label26:
        $i113 = (int) c59;

        i60 = $i113 - 48;

        $i4 = i57 * 10;

        i57 = $i4 + i60;

        i56 = i56 + 1;

        goto label28;

     label27:
        goto label29;

     label28:
        if i56 < i0 goto label23;

     label29:
        z0 = 1;

        if i56 >= i0 goto label33;

        c61 = r0[i56];

        $i114 = (int) c61;

        lookupswitch($i114)
        {
            case 68: goto label31;
            case 70: goto label30;
            case 100: goto label31;
            case 102: goto label30;
            default: goto label32;
        };

     label30:
        z0 = 0;

        goto label33;

     label31:
        z0 = 1;

        goto label33;

     label32:
        $r8 = new java.lang.NumberFormatException;

        specialinvoke $r8.<java.lang.NumberFormatException: void <init>()>();

        throw $r8;

     label33:
        $b62 = l44 cmp 0L;

        if $b62 != 0 goto label34;

        return 0L;

     label34:
        i63 = 0;

        b95 = 0;

        b94 = 0;

        $i5 = i51 - 4;

        l6 = l44 >>> $i5;

        $l7 = l6 & 8L;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label35;

        $i116 = (int) -1;

        i51 = i51 + $i116;

        i63 = 1;

        b95 = 1;

        b94 = 1;

        $l39 = l6 & 4L;

        $b40 = $l39 cmp 0L;

        if $b40 != 0 goto label35;

        $i118 = (int) -1;

        i51 = i51 + $i118;

        i63 = 2;

        b95 = 2;

        b94 = 2;

        $l41 = l6 & 2L;

        $b42 = $l41 cmp 0L;

        if $b42 != 0 goto label35;

        $i120 = (int) -1;

        i51 = i51 + $i120;

        i63 = 3;

        b95 = 3;

        b94 = 3;

     label35:
        if z0 == 0 goto label44;

        if i51 <= 53 goto label36;

        i64 = i51 - 53;

        $i36 = i64 - 1;

        l65 = l44 >>> $i36;

        l66 = l65 & 1L;

        l67 = l65 + l66;

        l68 = l67 >>> 1;

        $l37 = l68 & 9007199254740992L;

        $b38 = $l37 cmp 0L;

        if $b38 == 0 goto label37;

        l68 = l68 >>> 1;

        $i122 = (int) -1;

        i63 = b95 + $i122;

        goto label37;

     label36:
        $i25 = 53 - i51;

        l68 = l44 << $i25;

     label37:
        i69 = 0;

        if i51 <= 0 goto label39;

        if i52 >= i49 goto label38;

        $i35 = i49 - i52;

        i70 = 4 * $i35;

        i69 = i70 - i63;

        goto label39;

     label38:
        $i33 = i52 - i49;

        $i34 = $i33 - 1;

        $i124 = (int) -4;

        i71 = $i124 * $i34;

        i69 = i71 - i63;

     label39:
        $i72 = b96 * i57;

        $i73 = $i72 + i69;

        $i74 = $i73 - 1;

        if $i74 <= 1023 goto label40;

        l75 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(#Infinity);

        goto label43;

     label40:
        $i26 = $i73 - 1;

        $i126 = (int) -1022;

        if $i26 < $i126 goto label41;

        $i30 = $i73 - 1;

        $i31 = $i30 + 1023;

        l76 = (long) $i31;

        l77 = l68 & -4503599627370497L;

        $l32 = l76 << 52;

        l75 = l77 | $l32;

        goto label43;

     label41:
        $i27 = $i73 - 1;

        $i128 = (int) -1075;

        if $i27 <= $i128 goto label42;

        $i130 = (int) -1022;

        $i28 = $i130 - $i73;

        $i29 = $i28 + 1;

        l78 = l68 >>> $i29;

        l75 = l78 | 0L;

        goto label43;

     label42:
        l75 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(#NaN);

     label43:
        return l75;

     label44:
        if i51 <= 24 goto label45;

        i79 = i51 - 24;

        $i22 = i79 - 1;

        l80 = l44 >>> $i22;

        l81 = l80 & 1L;

        l82 = l80 + l81;

        l83 = l82 >>> 1;

        $l23 = l83 & 16777216L;

        $b24 = $l23 cmp 0L;

        if $b24 == 0 goto label46;

        l83 = l83 >>> 1;

        $i132 = (int) -1;

        i63 = b94 + $i132;

        goto label46;

     label45:
        $i9 = 24 - i51;

        l83 = l44 << $i9;

     label46:
        i84 = 0;

        if i51 <= 0 goto label48;

        if i52 >= i49 goto label47;

        $i21 = i49 - i52;

        i85 = 4 * $i21;

        i84 = i85 - i63;

        goto label48;

     label47:
        $i19 = i52 - i49;

        $i20 = $i19 - 1;

        $i134 = (int) -4;

        i86 = $i134 * $i20;

        i84 = i86 - i63;

     label48:
        $i87 = b97 * i57;

        $i88 = $i87 + i84;

        $i89 = $i88 - 1;

        if $i89 <= 127 goto label49;

        $i18 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(#InfinityF);

        l90 = (long) $i18;

        goto label52;

     label49:
        $i10 = $i88 - 1;

        $i136 = (int) -126;

        if $i10 < $i136 goto label50;

        $i15 = $i88 - 1;

        $i16 = $i15 + 127;

        l91 = (long) $i16;

        l92 = l83 & -8388609L;

        $l17 = l91 << 23;

        l90 = l92 | $l17;

        goto label52;

     label50:
        $i11 = $i88 - 1;

        $i138 = (int) -150;

        if $i11 <= $i138 goto label51;

        $i140 = (int) -126;

        $i13 = $i140 - $i88;

        $i14 = $i13 + 1;

        l93 = l83 >>> $i14;

        l90 = l93 | 0L;

        goto label52;

     label51:
        $i12 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(#NaNF);

        l90 = (long) $i12;

     label52:
        return l90;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int SINGLE_EXPONENT_SHIFT> = 23;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int SINGLE_EXPONENT_BIAS> = 127;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MIN_UNNORMALIZED_SINGLE_EXPONENT> = -150;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MIN_NORMALIZED_SINGLE_EXPONENT> = -126;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MAX_SINGLE_EXPONENT> = 127;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int SINGLE_PRECISION> = 24;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int SINGLE_FRACTION_WIDTH> = 23;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int DOUBLE_EXPONENT_SHIFT> = 52;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int DOUBLE_EXPONENT_BIAS> = 1023;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MIN_UNNORMALIZED_DOUBLE_EXPONENT> = -1075;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MIN_NORMALIZED_DOUBLE_EXPONENT> = -1022;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int MAX_DOUBLE_EXPONENT> = 1023;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int DOUBLE_PRECISION> = 53;

        <org.eclipse.jdt.internal.compiler.util.FloatUtil: int DOUBLE_FRACTION_WIDTH> = 52;

        return;
    }
}
