public class ucar.ma2.ArrayByte$D7 extends ucar.ma2.ArrayByte
{
    protected ucar.ma2.Index7D ix;

    public void <init>(int, int, int, int, int, int, int)
    {
        ucar.ma2.Index7D $r3;
        int[] $r1;
        ucar.ma2.Index $r2;
        int i0, i1, i2, i3, i4, i5, i6;
        ucar.ma2.ArrayByte$D7 r0;

        r0 := @this: ucar.ma2.ArrayByte$D7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $r1 = newarray (int)[7];

        $r1[0] = i0;

        $r1[1] = i1;

        $r1[2] = i2;

        $r1[3] = i3;

        $r1[4] = i4;

        $r1[5] = i5;

        $r1[6] = i6;

        specialinvoke r0.<ucar.ma2.ArrayByte: void <init>(int[])>($r1);

        $r2 = r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index indexCalc>;

        $r3 = (ucar.ma2.Index7D) $r2;

        r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index7D ix> = $r3;

        return;
    }

    private void <init>(ucar.ma2.Index, byte[])
    {
        byte[] r2;
        ucar.ma2.Index r1, $r3;
        ucar.ma2.Index7D $r4;
        ucar.ma2.ArrayByte$D7 r0;

        r0 := @this: ucar.ma2.ArrayByte$D7;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: byte[];

        specialinvoke r0.<ucar.ma2.ArrayByte: void <init>(ucar.ma2.Index,byte[])>(r1, r2);

        $r3 = r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index indexCalc>;

        $r4 = (ucar.ma2.Index7D) $r3;

        r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index7D ix> = $r4;

        return;
    }

    public byte get(int, int, int, int, int, int, int)
    {
        byte[] $r2;
        ucar.ma2.Index7D $r1;
        byte $b8;
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        ucar.ma2.ArrayByte$D7 r0;

        r0 := @this: ucar.ma2.ArrayByte$D7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        $r2 = r0.<ucar.ma2.ArrayByte$D7: byte[] storage>;

        $r1 = r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index7D ix>;

        $i7 = virtualinvoke $r1.<ucar.ma2.Index7D: int setDirect(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6);

        $b8 = $r2[$i7];

        return $b8;
    }

    public void set(int, int, int, int, int, int, int, byte)
    {
        byte[] $r2;
        ucar.ma2.Index7D $r1;
        byte b8;
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        ucar.ma2.ArrayByte$D7 r0;

        r0 := @this: ucar.ma2.ArrayByte$D7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        b8 := @parameter7: byte;

        $r2 = r0.<ucar.ma2.ArrayByte$D7: byte[] storage>;

        $r1 = r0.<ucar.ma2.ArrayByte$D7: ucar.ma2.Index7D ix>;

        $i7 = virtualinvoke $r1.<ucar.ma2.Index7D: int setDirect(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6);

        $r2[$i7] = b8;

        return;
    }

    void <init>(ucar.ma2.Index, byte[], ucar.ma2.ArrayByte$1)
    {
        byte[] r2;
        ucar.ma2.Index r1;
        ucar.ma2.ArrayByte$1 r3;
        ucar.ma2.ArrayByte$D7 r0;

        r0 := @this: ucar.ma2.ArrayByte$D7;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: byte[];

        r3 := @parameter2: ucar.ma2.ArrayByte$1;

        specialinvoke r0.<ucar.ma2.ArrayByte$D7: void <init>(ucar.ma2.Index,byte[])>(r1, r2);

        return;
    }
}
