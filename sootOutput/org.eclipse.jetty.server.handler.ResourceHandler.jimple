public class org.eclipse.jetty.server.handler.ResourceHandler extends org.eclipse.jetty.server.handler.HandlerWrapper
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    org.eclipse.jetty.server.handler.ContextHandler _context;
    org.eclipse.jetty.util.resource.Resource _baseResource;
    org.eclipse.jetty.util.resource.Resource _defaultStylesheet;
    org.eclipse.jetty.util.resource.Resource _stylesheet;
    java.lang.String[] _welcomeFiles;
    org.eclipse.jetty.http.MimeTypes _mimeTypes;
    org.eclipse.jetty.io.ByteArrayBuffer _cacheControl;
    boolean _aliases;
    boolean _directory;
    boolean _etags;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String[] $r1;
        org.eclipse.jetty.http.MimeTypes $r2;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.HandlerWrapper: void <init>()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "index.html";

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: java.lang.String[] _welcomeFiles> = $r1;

        $r2 = new org.eclipse.jetty.http.MimeTypes;

        specialinvoke $r2.<org.eclipse.jetty.http.MimeTypes: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.http.MimeTypes _mimeTypes> = $r2;

        return;
    }

    public org.eclipse.jetty.http.MimeTypes getMimeTypes()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        org.eclipse.jetty.http.MimeTypes $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        return $r1;
    }

    public void setMimeTypes(org.eclipse.jetty.http.MimeTypes)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        org.eclipse.jetty.http.MimeTypes r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: org.eclipse.jetty.http.MimeTypes;

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.http.MimeTypes _mimeTypes> = r1;

        return;
    }

    public boolean isAliases()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $z0 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _aliases>;

        return $z0;
    }

    public void setAliases(boolean)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _aliases> = z0;

        return;
    }

    public boolean isDirectoriesListed()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $z0 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _directory>;

        return $z0;
    }

    public void setDirectoriesListed(boolean)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _directory> = z0;

        return;
    }

    public boolean isEtags()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $z0 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _etags>;

        return $z0;
    }

    public void setEtags(boolean)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _etags> = z0;

        return;
    }

    public void doStart() throws java.lang.Exception
    {
        java.lang.IllegalStateException $r3;
        org.eclipse.jetty.server.handler.ResourceHandler r1;
        org.eclipse.jetty.server.handler.ContextHandler $r2, $r4, $r5;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r0 = staticinvoke <org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getCurrentContext()>();

        if $r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke $r0.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

     label2:
        r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.server.handler.ContextHandler _context> = $r5;

        $r2 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.server.handler.ContextHandler _context>;

        if $r2 == null goto label3;

        $r4 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.server.handler.ContextHandler _context>;

        $z2 = virtualinvoke $r4.<org.eclipse.jetty.server.handler.ContextHandler: boolean isAliases()>();

        r1.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _aliases> = $z2;

     label3:
        $z0 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _aliases>;

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <org.eclipse.jetty.util.resource.FileResource: boolean getCheckAliases()>();

        if $z1 != 0 goto label4;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Alias checking disabled");

        throw $r3;

     label4:
        specialinvoke r1.<org.eclipse.jetty.server.handler.HandlerWrapper: void doStart()>();

        return;
    }

    public org.eclipse.jetty.util.resource.Resource getBaseResource()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        org.eclipse.jetty.util.resource.Resource $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource>;

        return $r2;
    }

    public java.lang.String getResourceBase()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        org.eclipse.jetty.util.resource.Resource $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public void setBaseResource(org.eclipse.jetty.util.resource.Resource)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        org.eclipse.jetty.util.resource.Resource r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: org.eclipse.jetty.util.resource.Resource;

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource> = r1;

        return;
    }

    public void setResourceBase(java.lang.String)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.Object[] $r6;
        java.lang.IllegalArgumentException $r8;
        java.lang.Exception $r3;
        org.eclipse.jetty.util.resource.Resource $r2;
        java.lang.String r1, $r5;
        org.eclipse.jetty.util.log.Logger $r4, $r7;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>(r1);

        virtualinvoke r0.<org.eclipse.jetty.server.handler.ResourceHandler: void setBaseResource(org.eclipse.jetty.util.resource.Resource)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r5 = virtualinvoke $r3.<java.lang.Exception: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r5, $r6);

        $r7 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r3);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r8;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.eclipse.jetty.util.resource.Resource getStylesheet()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.Object[] $r10;
        java.net.URL $r4;
        java.io.IOException $r7;
        org.eclipse.jetty.util.resource.Resource $r1, $r2, $r5, $r6, $r12;
        java.lang.Class $r3;
        org.eclipse.jetty.util.log.Logger $r8, $r11;
        java.lang.String $r9;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _stylesheet>;

        if $r1 == null goto label1;

        $r6 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _stylesheet>;

        return $r6;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _defaultStylesheet>;

        if $r2 != null goto label5;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/jetty-dir.css");

        $r5 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.net.URL)>($r4);

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _defaultStylesheet> = $r5;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r9 = virtualinvoke $r7.<java.io.IOException: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r9, $r10);

        $r11 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r7);

     label5:
        $r12 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _defaultStylesheet>;

        return $r12;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void setStylesheet(java.lang.String)
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.Object[] $r9, $r13;
        java.lang.String r1, $r8, $r12, $r16;
        boolean $z0;
        java.lang.IllegalArgumentException $r15;
        java.lang.Exception $r10;
        org.eclipse.jetty.util.resource.Resource $r2, $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        org.eclipse.jetty.util.log.Logger $r5, $r11, $r14;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>(r1);

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _stylesheet> = $r2;

        $r3 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _stylesheet>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z0 != 0 goto label2;

        $r5 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find custom stylesheet: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r8, $r9);

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _stylesheet> = null;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r12, $r13);

        $r14 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r10);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getCacheControl()
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1;
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String $r2;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.io.ByteArrayBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void setCacheControl(java.lang.String)
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r2;
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r2.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>(r1);

     label2:
        r0.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl> = $r2;

        return;
    }

    public org.eclipse.jetty.util.resource.Resource getResource(java.lang.String) throws java.net.MalformedURLException
    {
        org.eclipse.jetty.server.handler.ResourceHandler r1;
        java.net.MalformedURLException $r0;
        org.eclipse.jetty.server.handler.ContextHandler $r4, $r5;
        java.lang.Exception $r7;
        org.eclipse.jetty.util.resource.Resource $r3, $r6, r10;
        java.lang.String $r2, r9;
        org.eclipse.jetty.util.log.Logger $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r9 := @parameter0: java.lang.String;

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

     label1:
        $r0 = new java.net.MalformedURLException;

        specialinvoke $r0.<java.net.MalformedURLException: void <init>(java.lang.String)>(r9);

        throw $r0;

     label2:
        r10 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource _baseResource>;

        if r10 != null goto label4;

        $r4 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.server.handler.ContextHandler _context>;

        if $r4 != null goto label3;

        return null;

     label3:
        $r5 = r1.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.server.handler.ContextHandler _context>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r10 = $r6;

        if $r6 != null goto label4;

        return null;

     label4:
        $r2 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String canonicalPath(java.lang.String)>(r9);

        $r3 = virtualinvoke r10.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>($r2);

     label5:
        return $r3;

     label6:
        $r7 := @caughtexception;

        $r8 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r7);

        return null;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected org.eclipse.jetty.util.resource.Resource getResource(javax.servlet.http.HttpServletRequest) throws java.net.MalformedURLException
    {
        org.eclipse.jetty.server.handler.ResourceHandler r3;
        javax.servlet.http.HttpServletRequest r0;
        org.eclipse.jetty.util.resource.Resource $r9;
        java.lang.Boolean $r2;
        java.lang.Object $r1, $r4, $r5;
        java.lang.String r6, r7, $r8;
        boolean $z0, $z1;

        r3 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.request_uri");

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.servlet_path");

        r6 = (java.lang.String) $r4;

        $r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.include.path_info");

        r7 = (java.lang.String) $r5;

        if r6 != null goto label4;

        if r7 != null goto label4;

        r6 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        r7 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        goto label4;

     label3:
        r6 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>();

        r7 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

     label4:
        $r8 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>(r6, r7);

        $r9 = virtualinvoke r3.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource getResource(java.lang.String)>($r8);

        return $r9;
    }

    public java.lang.String[] getWelcomeFiles()
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String[] $r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: java.lang.String[] _welcomeFiles>;

        return $r1;
    }

    public void setWelcomeFiles(java.lang.String[])
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String[] r1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r1 := @parameter0: java.lang.String[];

        r0.<org.eclipse.jetty.server.handler.ResourceHandler: java.lang.String[] _welcomeFiles> = r1;

        return;
    }

    protected org.eclipse.jetty.util.resource.Resource getWelcome(org.eclipse.jetty.util.resource.Resource) throws java.net.MalformedURLException, java.io.IOException
    {
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        java.lang.String[] $r1, $r3;
        org.eclipse.jetty.util.resource.Resource r2, $r5;
        int $i0, i1;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r2 := @parameter0: org.eclipse.jetty.util.resource.Resource;

        i1 = 0;

     label1:
        $r1 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: java.lang.String[] _welcomeFiles>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: java.lang.String[] _welcomeFiles>;

        $r4 = $r3[i1];

        $r5 = virtualinvoke r2.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>($r4);

        $z0 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r0;
        byte $b3, $b6, $b7;
        java.io.PrintWriter $r40;
        java.lang.StringBuilder $r30, $r31, $r33, $r49;
        org.eclipse.jetty.http.MimeTypes $r15, $r43;
        org.eclipse.jetty.server.Response $r11, $r19;
        java.lang.Object[] $r35;
        long $l0, $l1, $l2, $l4, $l5;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String $r2, $r3, r6, $r16, $r17, $r18, $r22, $r24, $r25, $r26, $r34, $r36, $r37, r42, $r44, $r47;
        org.eclipse.jetty.util.resource.Resource $r5, $r8, $r14, $r23, r41;
        java.lang.IllegalStateException $r38;
        java.net.URL $r27, $r32;
        org.eclipse.jetty.io.Buffer $r13, $r21, $r45, r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;
        org.eclipse.jetty.server.handler.ResourceHandler r4;
        int $i8, $i9, $i10;
        org.eclipse.jetty.http.HttpFields $r12, $r20;
        java.io.OutputStream r48;
        javax.servlet.http.HttpServletResponse r7;
        org.eclipse.jetty.io.WriterOutputStream $r50;
        org.eclipse.jetty.server.AbstractHttpConnection$Output $r9;
        org.eclipse.jetty.util.log.Logger $r29;
        java.io.InputStream $r10;

        r4 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r6 := @parameter0: java.lang.String;

        r0 := @parameter1: org.eclipse.jetty.server.Request;

        r1 := @parameter2: javax.servlet.http.HttpServletRequest;

        r7 := @parameter3: javax.servlet.http.HttpServletResponse;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.Request: boolean isHandled()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        z13 = 0;

        $r2 = "GET";

        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label03;

        $r36 = "HEAD";

        $r37 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z12 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z12 != 0 goto label02;

        specialinvoke r4.<org.eclipse.jetty.server.handler.HandlerWrapper: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r6, r0, r1, r7);

        return;

     label02:
        z13 = 1;

     label03:
        $r5 = virtualinvoke r4.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource getResource(javax.servlet.http.HttpServletRequest)>(r1);

        r41 = $r5;

        if $r5 == null goto label04;

        $z11 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z11 != 0 goto label07;

     label04:
        $z2 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>("/jetty-dir.css");

        if $z2 == 0 goto label06;

        $r8 = virtualinvoke r4.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource getStylesheet()>();

        r41 = $r8;

        if $r8 != null goto label05;

        return;

     label05:
        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/css");

        goto label07;

     label06:
        specialinvoke r4.<org.eclipse.jetty.server.handler.HandlerWrapper: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r6, r0, r1, r7);

        return;

     label07:
        $z3 = r4.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _aliases>;

        if $z3 != 0 goto label08;

        $r27 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: java.net.URL getAlias()>();

        if $r27 == null goto label08;

        $r29 = <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aliased to ");

        $r32 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: java.net.URL getAlias()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = newarray (java.lang.Object)[0];

        interfaceinvoke $r29.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r34, $r35);

        return;

     label08:
        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        $z4 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z4 == 0 goto label11;

        $r22 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $z9 = virtualinvoke $r22.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z9 != 0 goto label09;

        $r24 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r25 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String addPaths(java.lang.String,java.lang.String)>($r24, "/");

        $r26 = interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>($r25);

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>($r26);

        return;

     label09:
        $r23 = virtualinvoke r4.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.resource.Resource getWelcome(org.eclipse.jetty.util.resource.Resource)>(r41);

        if $r23 == null goto label10;

        $z10 = virtualinvoke $r23.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z10 == 0 goto label10;

        r41 = $r23;

        goto label11;

     label10:
        virtualinvoke r4.<org.eclipse.jetty.server.handler.ResourceHandler: void doDirectory(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource)>(r1, r7, r41);

        virtualinvoke r0.<org.eclipse.jetty.server.Request: void setHandled(boolean)>(1);

        return;

     label11:
        $l0 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        r42 = null;

        $z5 = r4.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _etags>;

        if $z5 == 0 goto label12;

        $r17 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("If-None-Match");

        $r18 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: java.lang.String getWeakETag()>();

        r42 = $r18;

        if $r17 == null goto label12;

        if r41 == null goto label12;

        $z8 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z8 == 0 goto label12;

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(304);

        $r19 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Response getResponse()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r21 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        virtualinvoke $r20.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,java.lang.String)>($r21, $r18);

        return;

     label12:
        $b7 = $l0 cmp 0L;

        $i8 = (int) $b7;

        if $i8 <= 0 goto label13;

        $l2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("If-Modified-Since");

        $b3 = $l2 cmp 0L;

        $i9 = (int) $b3;

        if $i9 <= 0 goto label13;

        $l5 = $l0 / 1000L;

        $l4 = $l2 / 1000L;

        $b6 = $l5 cmp $l4;

        $i10 = (int) $b6;

        if $i10 > 0 goto label13;

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(304);

        return;

     label13:
        $r43 = r4.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        $r44 = virtualinvoke r41.<java.lang.Object: java.lang.String toString()>();

        $r45 = virtualinvoke $r43.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r44);

        r46 = $r45;

        if $r45 != null goto label14;

        $r15 = r4.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.http.MimeTypes _mimeTypes>;

        $r16 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        r46 = virtualinvoke $r15.<org.eclipse.jetty.http.MimeTypes: org.eclipse.jetty.io.Buffer getMimeByExtension(java.lang.String)>($r16);

     label14:
        $r14 = r41;

        if r46 == null goto label15;

        $r47 = virtualinvoke r46.<java.lang.Object: java.lang.String toString()>();

        goto label16;

     label15:
        $r47 = null;

     label16:
        virtualinvoke r4.<org.eclipse.jetty.server.handler.ResourceHandler: void doResponseHeaders(javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource,java.lang.String)>(r7, $r14, $r47);

        interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>("Last-Modified", $l0);

        $z6 = r4.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _etags>;

        if $z6 == 0 goto label17;

        $r11 = virtualinvoke r0.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.Response getResponse()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $r13 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer ETAG_BUFFER>;

        virtualinvoke $r12.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,java.lang.String)>($r13, r42);

     label17:
        if z13 == 0 goto label18;

        return;

     label18:
        r48 = interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

     label19:
        goto label21;

     label20:
        $r38 := @caughtexception;

        $r50 = new org.eclipse.jetty.io.WriterOutputStream;

        $r40 = interfaceinvoke r7.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        specialinvoke $r50.<org.eclipse.jetty.io.WriterOutputStream: void <init>(java.io.Writer)>($r40);

        r48 = $r50;

     label21:
        $z7 = r48 instanceof org.eclipse.jetty.server.AbstractHttpConnection$Output;

        if $z7 == 0 goto label22;

        $r9 = (org.eclipse.jetty.server.AbstractHttpConnection$Output) r48;

        $r10 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        virtualinvoke $r9.<org.eclipse.jetty.server.AbstractHttpConnection$Output: void sendContent(java.lang.Object)>($r10);

        goto label23;

     label22:
        $l1 = virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: long length()>();

        virtualinvoke r41.<org.eclipse.jetty.util.resource.Resource: void writeTo(java.io.OutputStream,long,long)>(r48, 0L, $l1);

     label23:
        return;

        catch java.lang.IllegalStateException from label18 to label19 with label20;
    }

    protected void doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource) throws java.io.IOException
    {
        java.io.PrintWriter $r7;
        org.eclipse.jetty.server.handler.ResourceHandler r0;
        javax.servlet.http.HttpServletResponse r1;
        javax.servlet.http.HttpServletRequest r3;
        org.eclipse.jetty.util.resource.Resource r2;
        int $i0;
        java.lang.String $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        r2 := @parameter2: org.eclipse.jetty.util.resource.Resource;

        $z0 = r0.<org.eclipse.jetty.server.handler.ResourceHandler: boolean _directory>;

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r3.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r5 = interfaceinvoke r3.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r6 = virtualinvoke r2.<org.eclipse.jetty.util.resource.Resource: java.lang.String getListHTML(java.lang.String,boolean)>($r4, $z1);

        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/html; charset=UTF-8");

        $r7 = interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        virtualinvoke $r7.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        goto label4;

     label3:
        interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

     label4:
        return;
    }

    protected void doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)
    {
        org.eclipse.jetty.server.Response $r8;
        org.eclipse.jetty.server.handler.ResourceHandler r3;
        long $l0;
        org.eclipse.jetty.io.ByteArrayBuffer $r4, $r5, $r10, $r11;
        byte $b1, $b2;
        int $i3, $i4;
        java.lang.String r0, $r6, $r7;
        org.eclipse.jetty.http.HttpFields $r9;
        org.eclipse.jetty.io.Buffer $r12, $r13;
        boolean $z0;
        javax.servlet.http.HttpServletResponse r2;
        org.eclipse.jetty.util.resource.Resource r1;

        r3 := @this: org.eclipse.jetty.server.handler.ResourceHandler;

        r2 := @parameter0: javax.servlet.http.HttpServletResponse;

        r1 := @parameter1: org.eclipse.jetty.util.resource.Resource;

        r0 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>(r0);

     label1:
        $l0 = virtualinvoke r1.<org.eclipse.jetty.util.resource.Resource: long length()>();

        $z0 = r2 instanceof org.eclipse.jetty.server.Response;

        if $z0 == 0 goto label4;

        $r8 = (org.eclipse.jetty.server.Response) r2;

        $r9 = virtualinvoke $r8.<org.eclipse.jetty.server.Response: org.eclipse.jetty.http.HttpFields getHttpFields()>();

        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        $r13 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CONTENT_LENGTH_BUFFER>;

        virtualinvoke $r9.<org.eclipse.jetty.http.HttpFields: void putLongField(org.eclipse.jetty.io.Buffer,long)>($r13, $l0);

     label2:
        $r10 = r3.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        if $r10 == null goto label3;

        $r12 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.io.Buffer CACHE_CONTROL_BUFFER>;

        $r11 = r3.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        virtualinvoke $r9.<org.eclipse.jetty.http.HttpFields: void put(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>($r12, $r11);

     label3:
        goto label6;

     label4:
        $b1 = $l0 cmp 0L;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label5;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Content-Length", $r7);

     label5:
        $r4 = r3.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        if $r4 == null goto label6;

        $r5 = r3.<org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.io.ByteArrayBuffer _cacheControl>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.io.ByteArrayBuffer: java.lang.String toString()>();

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Cache-Control", $r6);

     label6:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ResourceHandler;");

        <org.eclipse.jetty.server.handler.ResourceHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
