public class com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTable
{
    protected final com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable;

    protected void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable> = r1;

        return;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;
        com.hp.hpl.jena.graph.Node r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;
        com.hp.hpl.jena.tdb.store.NodeId r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;
        com.hp.hpl.jena.graph.Node $r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.store.NodeId allocOffset()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId allocOffset()>();

        return $r2;
    }

    public java.util.Iterator all()
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: java.util.Iterator all()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: boolean isEmpty()>();

        return $z0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void sync()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: void close()>();

        return;
    }
}
