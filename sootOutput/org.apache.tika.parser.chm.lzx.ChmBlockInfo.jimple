public class org.apache.tika.parser.chm.lzx.ChmBlockInfo extends java.lang.Object
{
    private int iniBlock;
    private int startBlock;
    private int endBlock;
    private int startOffset;
    private int endOffset;
    private static org.apache.tika.parser.chm.lzx.ChmBlockInfo chmBlockInfo;

    private void <init>()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo(org.apache.tika.parser.chm.accessor.DirectoryListingEntry, int, org.apache.tika.parser.chm.accessor.ChmLzxcControlData, org.apache.tika.parser.chm.lzx.ChmBlockInfo) throws org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r1;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData r2;
        long $l16;
        org.apache.tika.parser.chm.exception.ChmParsingException $r4;
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        r1 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.tika.parser.chm.accessor.ChmLzxcControlData;

        r3 := @parameter3: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $z0 = specialinvoke r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: boolean validateParameters(org.apache.tika.parser.chm.accessor.DirectoryListingEntry,int,org.apache.tika.parser.chm.accessor.ChmLzxcControlData,org.apache.tika.parser.chm.lzx.ChmBlockInfo)>(r1, i0, r2, r3);

        if $z0 != 0 goto label1;

        $r4 = new org.apache.tika.parser.chm.exception.ChmParsingException;

        specialinvoke $r4.<org.apache.tika.parser.chm.exception.ChmParsingException: void <init>(java.lang.String)>("Please check you parameters");

        throw $r4;

     label1:
        $i1 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i2 = $i1 / i0;

        specialinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setStartBlock(int)>($i2);

        $i3 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i4 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 / i0;

        specialinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setEndBlock(int)>($i6);

        $i7 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i8 = $i7 % i0;

        specialinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setStartOffset(int)>($i8);

        $i9 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i10 = virtualinvoke r1.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i11 = $i9 + $i10;

        $i12 = $i11 % i0;

        specialinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setEndOffset(int)>($i12);

        $i14 = r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock>;

        $i13 = r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock>;

        $i15 = $i14 - $i13;

        $l16 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmLzxcControlData: long getResetInterval()>();

        $i17 = (int) $l16;

        $i18 = $i15 % $i17;

        specialinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setIniBlock(int)>($i18);

        return r3;
    }

    public static org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfoInstance(org.apache.tika.parser.chm.accessor.DirectoryListingEntry, int, org.apache.tika.parser.chm.accessor.ChmLzxcControlData)
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r2;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData r9;
        long $l16;
        org.apache.tika.parser.chm.lzx.ChmBlockInfo $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18;

        r2 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        i1 := @parameter1: int;

        r9 := @parameter2: org.apache.tika.parser.chm.accessor.ChmLzxcControlData;

        $r0 = new org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        specialinvoke $r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void <init>()>();

        staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setChmBlockInfo(org.apache.tika.parser.chm.lzx.ChmBlockInfo)>($r0);

        $r1 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i0 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i2 = $i0 / i1;

        specialinvoke $r1.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setStartBlock(int)>($i2);

        $r3 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i3 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i4 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 / i1;

        specialinvoke $r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setEndBlock(int)>($i6);

        $r4 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i7 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i8 = $i7 % i1;

        specialinvoke $r4.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setStartOffset(int)>($i8);

        $r5 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i9 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getOffset()>();

        $i10 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.DirectoryListingEntry: int getLength()>();

        $i11 = $i9 + $i10;

        $i12 = $i11 % i1;

        specialinvoke $r5.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setEndOffset(int)>($i12);

        $r6 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $r7 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i13 = $r7.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock>;

        $r8 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        $i14 = $r8.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock>;

        $i15 = $i13 - $i14;

        $l16 = virtualinvoke r9.<org.apache.tika.parser.chm.accessor.ChmLzxcControlData: long getResetInterval()>();

        $i17 = (int) $l16;

        $i18 = $i15 % $i17;

        specialinvoke $r6.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: void setIniBlock(int)>($i18);

        $r10 = staticinvoke <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()>();

        return $r10;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r26;
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r11, $r16, $r21, $r25, $r27, $r28;

        r3 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iniBlock:=");

        $i0 = virtualinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getIniBlock()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startBlock:=");

        $i1 = virtualinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartBlock()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endBlock:=");

        $i2 = virtualinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndBlock()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startOffset:=");

        $i3 = virtualinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getStartOffset()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("endOffset:=");

        $i4 = virtualinvoke r3.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int getEndOffset()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r28 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r28;
    }

    private boolean validateParameters(org.apache.tika.parser.chm.accessor.DirectoryListingEntry, int, org.apache.tika.parser.chm.accessor.ChmLzxcControlData, org.apache.tika.parser.chm.lzx.ChmBlockInfo)
    {
        org.apache.tika.parser.chm.accessor.DirectoryListingEntry r0;
        org.apache.tika.parser.chm.accessor.ChmLzxcControlData r1;
        int i0, i1;
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r2, r3;
        boolean $z0;

        r3 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        r0 := @parameter0: org.apache.tika.parser.chm.accessor.DirectoryListingEntry;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.tika.parser.chm.accessor.ChmLzxcControlData;

        r2 := @parameter3: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i1 = 0;

        if r0 == null goto label1;

        i1 = 1;

     label1:
        if i0 <= 0 goto label2;

        i1 = i1 + 1;

     label2:
        if r1 == null goto label3;

        i1 = i1 + 1;

     label3:
        if r2 == null goto label4;

        i1 = i1 + 1;

     label4:
        if i1 != 4 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }

    public int getIniBlock()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int $i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $i0 = r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int iniBlock>;

        return $i0;
    }

    private void setIniBlock(int)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int iniBlock> = i0;

        return;
    }

    public int getStartBlock()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int $i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $i0 = r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock>;

        return $i0;
    }

    private void setStartBlock(int)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startBlock> = i0;

        return;
    }

    public int getEndBlock()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int $i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $i0 = r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int endBlock>;

        return $i0;
    }

    private void setEndBlock(int)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int endBlock> = i0;

        return;
    }

    public int getStartOffset()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int $i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $i0 = r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startOffset>;

        return $i0;
    }

    private void setStartOffset(int)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int startOffset> = i0;

        return;
    }

    public int getEndOffset()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int $i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        $i0 = r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int endOffset>;

        return $i0;
    }

    private void setEndOffset(int)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;
        int i0;

        r0 := @this: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.lzx.ChmBlockInfo: int endOffset> = i0;

        return;
    }

    public static void setChmBlockInfo(org.apache.tika.parser.chm.lzx.ChmBlockInfo)
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo r0;

        r0 := @parameter0: org.apache.tika.parser.chm.lzx.ChmBlockInfo;

        <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo chmBlockInfo> = r0;

        return;
    }

    public static org.apache.tika.parser.chm.lzx.ChmBlockInfo getChmBlockInfo()
    {
        org.apache.tika.parser.chm.lzx.ChmBlockInfo $r0;

        $r0 = <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo chmBlockInfo>;

        return $r0;
    }

    static void <clinit>()
    {
        <org.apache.tika.parser.chm.lzx.ChmBlockInfo: org.apache.tika.parser.chm.lzx.ChmBlockInfo chmBlockInfo> = null;

        return;
    }
}
