public class org.codehaus.groovy.tools.shell.commands.SetCommand extends org.codehaus.groovy.tools.shell.CommandSupport
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697149;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences;

    public void <init>(org.codehaus.groovy.tools.shell.Shell)
    {
        java.lang.Object[] $r15;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r10;
        java.lang.IllegalArgumentException $r11;
        org.codehaus.groovy.tools.shell.commands.SetCommand r4;
        java.lang.Class $r0, $r1, $r3, $r13, $r14, $r16;
        java.lang.Object $r5, $r7, $r9, $r12;
        org.codehaus.groovy.tools.shell.Shell r2, $r6;

        r4 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r2 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.SetCommand");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0> = $r13;

        goto label02;

     label01:
        $r13 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

     label02:
        $r1 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label04;

     label03:
        $r14 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = r2;

        $r15[1] = "set";

        $r15[2] = "\\=";

        $r3 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r3 != null goto label05;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r16;

        goto label06;

     label05:
        $r16 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r15, 1, $r16);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r12 = $r15[0];

        $r15 = (java.lang.Object[]) $r12;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r5 = $r15[0];

        $r6 = (org.codehaus.groovy.tools.shell.Shell) $r5;

        $r7 = $r15[1];

        $r8 = (java.lang.String) $r7;

        $r9 = $r15[2];

        $r10 = (java.lang.String) $r9;

        specialinvoke r4.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r6, $r8, $r10);

        goto label10;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r11;

     label10:
        return;
    }

    protected java.util.List createCompletors()
    {
        java.lang.Object[] $r5, $r7;
        org.codehaus.groovy.tools.shell.commands.SetCommand r4;
        java.util.List $r9, $r12;
        org.codehaus.groovy.tools.shell.commands.SetCommand$_createCompletors_closure1 $r3;
        java.lang.Class $r0, r1, $r2, $r6, $r10, $r13, $r14, $r15, $r16;
        java.lang.Object $r8, $r11;

        r4 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.SetCommand");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0> = $r13;

        goto label2;

     label1:
        $r13 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

     label2:
        r1 = $r13;

        $r2 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass> = $r14;

        goto label4;

     label3:
        $r14 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = new org.codehaus.groovy.tools.shell.commands.SetCommand$_createCompletors_closure1;

        specialinvoke $r3.<org.codehaus.groovy.tools.shell.commands.SetCommand$_createCompletors_closure1: void <init>(java.lang.Object,java.lang.Object)>(r4, r4);

        $r5 = newarray (java.lang.Object)[2];

        $r6 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

        if $r6 != null goto label5;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.SimpleCompletor");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor> = $r15;

        goto label6;

     label5:
        $r15 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$SimpleCompletor>;

     label6:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r7);

        $r5[0] = $r8;

        $r5[1] = null;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r5);

        $r10 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$util$List>;

        if $r10 != null goto label7;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$util$List> = $r16;

        goto label8;

     label7:
        $r16 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$util$List>;

     label8:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, $r16);

        $r12 = (java.util.List) $r11;

        return $r12;
    }

    public java.lang.Object execute(java.util.List)
    {
        java.lang.Integer $r6, $r8, $r10, $r13, $r15, $r36;
        org.codehaus.groovy.tools.shell.commands.SetCommand$_execute_closure2 $r41;
        java.lang.Object[] $r9, $r14, $r18, $r20, $r28, $r30, $r39, $r40, $r47, $r58, $r61;
        java.lang.StringBuffer $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.runtime.GStringImpl $r19, $r29;
        org.codehaus.groovy.tools.shell.commands.SetCommand r16;
        java.util.List r3;
        java.lang.String[] $r21, $r32;
        java.lang.Class $r0, r1, $r2, $r22, $r23, $r27, $r33, $r42, $r48, $r51, $r52, $r53, $r54, $r55, $r57, $r59, $r60, $r63, $r64;
        java.lang.Object $r5, $r7, $r11, $r12, $r17, $r24, $r25, $r26, $r31, $r34, $r35, $r37, $r38, $r43, $r44, $r45, $r46, $r49, $r50, r56, $r62;

        r16 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r51 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.SetCommand");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0> = $r51;

        goto label02;

     label01:
        $r51 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

     label02:
        r1 = $r51;

        $r2 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r52 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass> = $r52;

        goto label04;

     label03:
        $r52 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label06:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z1 == 0 goto label14;

        $r33 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r33 != null goto label07;

        $r53 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r53;

        goto label08;

     label07:
        $r53 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label08:
        $r34 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r53, "keys");

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r34, "size");

        $r36 = new java.lang.Integer;

        specialinvoke $r36.<java.lang.Integer: void <init>(int)>(0);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r35, $r36);

        if $z4 == 0 goto label11;

        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r16, "io");

        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r45, "out");

        $r47 = newarray (java.lang.Object)[1];

        $r47[0] = "No preferences are set";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r46, "println", $r47);

        $r48 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

        if $r48 != null goto label09;

        $r54 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object> = $r54;

        goto label10;

     label09:
        $r54 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

     label10:
        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r54);

        $r50 = (java.lang.Object) $r49;

        return $r50;

     label11:
        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r16, "io");

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r37, "out");

        $r39 = newarray (java.lang.Object)[1];

        $r39[0] = "Preferences:";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r38, "println", $r39);

        $r40 = newarray (java.lang.Object)[1];

        $r41 = new org.codehaus.groovy.tools.shell.commands.SetCommand$_execute_closure2;

        specialinvoke $r41.<org.codehaus.groovy.tools.shell.commands.SetCommand$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>(r16, r16);

        $r40[0] = $r41;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r34, "each", $r40);

        $r42 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

        if $r42 != null goto label12;

        $r55 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object> = $r55;

        goto label13;

     label12:
        $r55 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

     label13:
        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r55);

        $r44 = (java.lang.Object) $r43;

        return $r44;

     label14:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r8 = new java.lang.Integer;

        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(2);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 == 0 goto label15;

        $r28 = newarray (java.lang.Object)[1];

        $r29 = new org.codehaus.groovy.runtime.GStringImpl;

        $r30 = newarray (java.lang.Object)[1];

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r16, "name");

        $r30[0] = $r31;

        $r32 = newarray (java.lang.String)[2];

        $r32[0] = "Command \'";

        $r32[1] = "\' requires arguments: <name> [<value>]";

        specialinvoke $r29.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r30, $r32);

        $r28[0] = $r29;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r16, "fail", $r28);

        goto label15;

     label15:
        $r9 = newarray (java.lang.Object)[1];

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(0);

        $r9[0] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r9);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(1);

        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r12, $r13);

        if $z3 == 0 goto label16;

        r56 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label17;

     label16:
        $r14 = newarray (java.lang.Object)[1];

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(1);

        $r14[0] = $r15;

        r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "getAt", $r14);

     label17:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r16, "log");

        $r18 = newarray (java.lang.Object)[1];

        $r19 = new org.codehaus.groovy.runtime.GStringImpl;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = $r11;

        $r20[1] = r56;

        $r21 = newarray (java.lang.String)[3];

        $r21[0] = "Setting preference: ";

        $r21[1] = "=";

        $r21[2] = "";

        specialinvoke $r19.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r20, $r21);

        $r18[0] = $r19;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r17, "debug", $r18);

        $r22 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r22 != null goto label18;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        $r57 = $r27;

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r27;

        goto label19;

     label18:
        $r57 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label19:
        $r58 = newarray (java.lang.Object)[2];

        $r58[0] = $r11;

        $r23 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$String>;

        if $r23 != null goto label20;

        $r59 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("java.lang.String");

        $r60 = $r59;

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$String> = $r59;

        goto label21;

     label20:
        $r60 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$String>;

     label21:
        $r61 = newarray (java.lang.Object)[1];

        $r61[0] = r56;

        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r60, "valueOf", $r61);

        $r58[1] = $r62;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r57, "put", $r58);

        $r63 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

        if $r63 != null goto label22;

        $r64 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object> = $r64;

        goto label23;

     label22:
        $r64 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$java$lang$Object>;

     label23:
        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r24, $r64);

        $r26 = (java.lang.Object) $r25;

        return $r26;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.SetCommand");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697149L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.commands.SetCommand: java.lang.Long __timeStamp__239_neverHappen1239119697149> = $r5;

        return;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        org.codehaus.groovy.tools.shell.BufferManager $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        jline.History $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        groovy.lang.MetaClass $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        groovy.lang.MetaClass r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Throwable r2;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.List r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String r1, r2;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        jline.Completor $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Object $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        int i1;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        groovy.lang.Binding $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        long l0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.SetCommand r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.SetCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
