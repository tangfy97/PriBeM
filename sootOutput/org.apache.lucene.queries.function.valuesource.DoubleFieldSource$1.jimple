class org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 extends org.apache.lucene.queries.function.docvalues.DoubleDocValues
{
    final org.apache.lucene.search.FieldCache$Doubles val$arr;
    final org.apache.lucene.util.Bits val$valid;
    final org.apache.lucene.queries.function.valuesource.DoubleFieldSource this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource, org.apache.lucene.queries.function.ValueSource, org.apache.lucene.search.FieldCache$Doubles, org.apache.lucene.util.Bits)
    {
        org.apache.lucene.queries.function.ValueSource r4;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource r1;
        org.apache.lucene.search.FieldCache$Doubles r2;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r0;
        org.apache.lucene.util.Bits r3;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.DoubleFieldSource;

        r4 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        r2 := @parameter2: org.apache.lucene.search.FieldCache$Doubles;

        r3 := @parameter3: org.apache.lucene.util.Bits;

        r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.queries.function.valuesource.DoubleFieldSource this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.search.FieldCache$Doubles val$arr> = r2;

        r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.util.Bits val$valid> = r3;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.DoubleDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r4);

        return;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.search.FieldCache$Doubles $r1;
        int i0;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r0;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.search.FieldCache$Doubles val$arr>;

        $d0 = virtualinvoke $r1.<org.apache.lucene.search.FieldCache$Doubles: double get(int)>(i0);

        return $d0;
    }

    public boolean exists(int)
    {
        int i0;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r0;
        org.apache.lucene.util.Bits $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1: org.apache.lucene.util.Bits val$valid>;

        $z0 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        return $z0;
    }

    public org.apache.lucene.queries.function.ValueSourceScorer getRangeScorer(org.apache.lucene.index.IndexReader, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$2 $r6;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$1 $r7;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$4 $r2;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$3 $r5;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r3;
        java.lang.String r0, r1;
        org.apache.lucene.index.IndexReader r4;
        double d0, d1, d2, d3;
        boolean z0, z1;

        r3 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        r4 := @parameter0: org.apache.lucene.index.IndexReader;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 != null goto label1;

        d2 = #-Infinity;

        goto label2;

     label1:
        d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

     label2:
        if r1 != null goto label3;

        d3 = #Infinity;

        goto label4;

     label3:
        d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);

     label4:
        d0 = d2;

        d1 = d3;

        if z0 == 0 goto label5;

        if z1 == 0 goto label5;

        $r7 = new org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$1;

        specialinvoke $r7.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$1: void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1,org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues,double,double)>(r3, r4, r3, d2, d3);

        return $r7;

     label5:
        if z0 == 0 goto label6;

        if z1 != 0 goto label6;

        $r6 = new org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$2;

        specialinvoke $r6.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$2: void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1,org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues,double,double)>(r3, r4, r3, d0, d1);

        return $r6;

     label6:
        if z0 != 0 goto label7;

        if z1 == 0 goto label7;

        $r5 = new org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$3;

        specialinvoke $r5.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$3: void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1,org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues,double,double)>(r3, r4, r3, d0, d1);

        return $r5;

     label7:
        $r2 = new org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$4;

        specialinvoke $r2.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$4: void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1,org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues,double,double)>(r3, r4, r3, d0, d1);

        return $r2;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1 r1;
        org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5 $r0;

        r1 := @this: org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1;

        $r0 = new org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5;

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1$5: void <init>(org.apache.lucene.queries.function.valuesource.DoubleFieldSource$1)>(r1);

        return $r0;
    }
}
