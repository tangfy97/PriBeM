public class com.hp.hpl.jena.util.Tokenizer extends java.lang.Object
{
    protected java.lang.String source;
    protected int p;
    protected java.lang.String delim;
    protected boolean returnDelims;
    protected java.lang.String literalDelim;
    protected int state;
    protected java.lang.String lookahead;
    protected static final int NORMAL;
    protected static final int LITERAL_START;
    protected static final int LITERAL_END;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        com.hp.hpl.jena.util.Tokenizer r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.util.Tokenizer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source> = r1;

        r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String delim> = r2;

        r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String literalDelim> = r3;

        r0.<com.hp.hpl.jena.util.Tokenizer: boolean returnDelims> = z0;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = 0;

        r0.<com.hp.hpl.jena.util.Tokenizer: int state> = 1;

        return;
    }

    public java.lang.String nextToken()
    {
        com.hp.hpl.jena.util.Tokenizer r0;
        int $i0, $i2, $i3, $i4, $i6, $i7, $i9;
        java.lang.String $r1, $r2, $r3, $r4, r6;
        java.util.NoSuchElementException $r7;
        boolean $z0;
        char $c1;

        r0 := @this: com.hp.hpl.jena.util.Tokenizer;

        $r1 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead>;

        if $r1 == null goto label1;

        r6 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead>;

        r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead> = null;

        goto label2;

     label1:
        r6 = specialinvoke r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String getNextToken()>();

     label2:
        if r6 != null goto label3;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No more elements in tokenized string");

        throw $r7;

     label3:
        $z0 = r0.<com.hp.hpl.jena.util.Tokenizer: boolean returnDelims>;

        if $z0 != 0 goto label5;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 != 1 goto label5;

        $c1 = virtualinvoke r6.<java.lang.String: char charAt(int)>(0);

        $r2 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String delim>;

        $i4 = (int) $c1;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($i4);

        $i6 = (int) -1;

        if $i2 != $i6 goto label4;

        $r4 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String literalDelim>;

        $i7 = (int) $c1;

        $i3 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>($i7);

        $i9 = (int) -1;

        if $i3 == $i9 goto label5;

     label4:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String nextToken()>();

        return $r3;

     label5:
        return r6;
    }

    public boolean hasMoreTokens()
    {
        com.hp.hpl.jena.util.Tokenizer r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.Tokenizer;

        $r1 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String getNextToken()>();

        r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead> = $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String lookahead>;

        if $r2 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private java.lang.String getNextToken()
    {
        com.hp.hpl.jena.util.Tokenizer r0;
        java.lang.StringBuffer $r21;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, $i41, $i42, $i43;
        char $c10, $c14, c40;

        r0 := @this: com.hp.hpl.jena.util.Tokenizer;

        $i0 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r1 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < $i1 goto label01;

        return null;

     label01:
        $i2 = r0.<com.hp.hpl.jena.util.Tokenizer: int state>;

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label13;
            default: goto label14;
        };

     label02:
        $r10 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String literalDelim>;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.util.Tokenizer: boolean is(java.lang.String)>($r10);

        if $z0 == 0 goto label03;

        r0.<com.hp.hpl.jena.util.Tokenizer: int state> = 2;

        $i34 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i35 = $i34 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i35;

        $r18 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i36 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i38 = $i36 - 1;

        $i37 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>($i38, $i37);

        return $r19;

     label03:
        $r11 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String delim>;

        $z1 = specialinvoke r0.<com.hp.hpl.jena.util.Tokenizer: boolean is(java.lang.String)>($r11);

        if $z1 == 0 goto label04;

        $i29 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i30 = $i29 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i30;

        $r16 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i31 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i33 = $i31 - 1;

        $i32 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>($i33, $i32);

        return $r17;

     label04:
        i39 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i22 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i23 = $i22 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i23;

     label05:
        $i24 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r12 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i25 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i24 >= $i25 goto label06;

        $r15 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String delim>;

        $z2 = specialinvoke r0.<com.hp.hpl.jena.util.Tokenizer: boolean is(java.lang.String)>($r15);

        if $z2 != 0 goto label06;

        $i27 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i28 = $i27 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i28;

        goto label05;

     label06:
        $r13 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i26 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int,int)>(i39, $i26);

        return $r14;

     label07:
        $r4 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i8 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i9 = $i8 - 1;

        $c10 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i9);

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

     label08:
        $i11 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r6 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i12 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i11 >= $i12 goto label12;

        $r7 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i13 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $c14 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i13);

        c40 = $c14;

        $i41 = (int) $c14;

        if $i41 != 92 goto label10;

        $i17 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i18 = $i17 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i18;

        $i19 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r8 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i20 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i19 < $i20 goto label09;

        goto label12;

     label09:
        $r9 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i21 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        c40 = virtualinvoke $r9.<java.lang.String: char charAt(int)>($i21);

        goto label11;

     label10:
        $i42 = (int) $c14;

        $i43 = (int) $c10;

        if $i42 != $i43 goto label11;

        goto label12;

     label11:
        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c40);

        $i15 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i16 = $i15 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i16;

        goto label08;

     label12:
        r0.<com.hp.hpl.jena.util.Tokenizer: int state> = 3;

        $r20 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;

     label13:
        r0.<com.hp.hpl.jena.util.Tokenizer: int state> = 1;

        $i3 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i4 = $i3 + 1;

        r0.<com.hp.hpl.jena.util.Tokenizer: int p> = $i4;

        $r2 = r0.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i5 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $i7 = $i5 - 1;

        $i6 = r0.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i7, $i6);

        return $r3;

     label14:
        return null;
    }

    private boolean is(java.lang.String)
    {
        com.hp.hpl.jena.util.Tokenizer r1;
        char $c1;
        int $i0, $i2, $i3, $i5;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.util.Tokenizer;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<com.hp.hpl.jena.util.Tokenizer: java.lang.String source>;

        $i0 = r1.<com.hp.hpl.jena.util.Tokenizer: int p>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i3 = (int) $c1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>($i3);

        $i5 = (int) -1;

        if $i2 == $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r0, $r4;
        com.hp.hpl.jena.util.Tokenizer $r1;
        java.lang.String[] r9;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.String $r2, $r8;
        boolean $z0;

        r9 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Starting");

        $r1 = new com.hp.hpl.jena.util.Tokenizer;

        specialinvoke $r1.<com.hp.hpl.jena.util.Tokenizer: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>("foo     \'\'  \'a literal\' \"a double literal\" \'literal with \\\" in it\' \'literal with unquoted\"in it\'", "()[], \t\n\r", "\'\"", 1);

     label1:
        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.util.Tokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.util.Tokenizer: java.lang.String nextToken()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token: [");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.util.Tokenizer: int LITERAL_END> = 3;

        <com.hp.hpl.jena.util.Tokenizer: int LITERAL_START> = 2;

        <com.hp.hpl.jena.util.Tokenizer: int NORMAL> = 1;

        return;
    }
}
