class org.apache.lucene.store.NativeFSLock extends org.apache.lucene.store.Lock
{
    private java.io.RandomAccessFile f;
    private java.nio.channels.FileChannel channel;
    private java.nio.channels.FileLock lock;
    private java.io.File path;
    private java.io.File lockDir;
    private static java.util.HashSet LOCK_HELD;

    public void <init>(java.io.File, java.lang.String)
    {
        org.apache.lucene.store.NativeFSLock r0;
        java.lang.String r3;
        java.io.File r1, $r2;

        r0 := @this: org.apache.lucene.store.NativeFSLock;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.store.Lock: void <init>()>();

        r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir> = r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r3);

        r0.<org.apache.lucene.store.NativeFSLock: java.io.File path> = $r2;

        return;
    }

    private synchronized boolean lockExists()
    {
        org.apache.lucene.store.NativeFSLock r0;
        java.nio.channels.FileLock $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.NativeFSLock;

        $r1 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public synchronized boolean obtain() throws java.io.IOException
    {
        java.io.RandomAccessFile $r8, $r10, $r14, $r19, $r48;
        java.lang.StringBuilder $r25, $r26, $r29, $r33, $r34, $r37;
        java.lang.Throwable $r39, $r40, $r44, $r45, $r46, $r49, $r50, $r51, $r54, $r58, $r60, $r61;
        java.lang.String $r4, $r28, $r30, $r36, $r38;
        java.io.IOException $r24, $r32, $r55, $r59;
        java.io.File $r1, $r2, $r3, $r9, $r27, $r31, $r35;
        java.nio.channels.FileLock $r17, $r18, $r52, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12;
        java.util.HashSet $r5, $r6, $r7, $r11, $r12, $r13, $r21, $r22, $r23, $r41, $r42, $r43;
        org.apache.lucene.store.NativeFSLock r0;
        java.nio.channels.FileChannel $r15, $r16, $r20, $r47, $r53, $r57, $r62;

        r0 := @this: org.apache.lucene.store.NativeFSLock;

        $z0 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r1 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir>;

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label02;

        $r31 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir>;

        $z8 = virtualinvoke $r31.<java.io.File: boolean mkdirs()>();

        if $z8 != 0 goto label03;

        $r32 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create directory: ");

        $r35 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir>;

        $r36 = virtualinvoke $r35.<java.io.File: java.lang.String getAbsolutePath()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r32;

     label02:
        $r2 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir>;

        $z2 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label03;

        $r24 = new java.io.IOException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found regular file where directory expected: ");

        $r27 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File lockDir>;

        $r28 = virtualinvoke $r27.<java.io.File: java.lang.String getAbsolutePath()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw $r24;

     label03:
        $r3 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getCanonicalPath()>();

        z11 = 0;

     label04:
        $r5 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r5;

     label05:
        $r6 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $z3 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z3 == 0 goto label13;

        exitmonitor $r5;

     label06:
        if 0 == 0 goto label12;

        $z6 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z6 != 0 goto label12;

        $r21 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r21;

     label07:
        $r22 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $z7 = virtualinvoke $r22.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z7 == 0 goto label08;

        $r23 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        virtualinvoke $r23.<java.util.HashSet: boolean remove(java.lang.Object)>($r4);

     label08:
        exitmonitor $r21;

     label09:
        goto label12;

     label10:
        $r61 := @caughtexception;

        exitmonitor $r21;

     label11:
        throw $r61;

     label12:
        return 0;

     label13:
        $r7 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>($r4);

        z11 = 1;

        exitmonitor $r5;

     label14:
        goto label17;

     label15:
        $r60 := @caughtexception;

        exitmonitor $r5;

     label16:
        throw $r60;

     label17:
        $r8 = new java.io.RandomAccessFile;

        $r9 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        specialinvoke $r8.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r9, "rw");

        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = $r8;

     label18:
        goto label20;

     label19:
        $r59 := @caughtexception;

        r0.<org.apache.lucene.store.NativeFSLock: java.lang.Throwable failureReason> = $r59;

        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

     label20:
        $r10 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        if $r10 == null goto label56;

     label21:
        $r14 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        $r15 = virtualinvoke $r14.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = $r15;

     label22:
        $r16 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        $r17 = virtualinvoke $r16.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>();

        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock> = $r17;

     label23:
        $r18 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock>;

        if $r18 != null goto label43;

     label24:
        $r20 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        virtualinvoke $r20.<java.nio.channels.FileChannel: void close()>();

     label25:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        goto label28;

     label26:
        $r58 := @caughtexception;

     label27:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        throw $r58;

     label28:
        goto label43;

     label29:
        $r55 := @caughtexception;

        r0.<org.apache.lucene.store.NativeFSLock: java.lang.Throwable failureReason> = $r55;

     label30:
        $r56 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock>;

        if $r56 != null goto label43;

     label31:
        $r57 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        virtualinvoke $r57.<java.nio.channels.FileChannel: void close()>();

     label32:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        goto label35;

     label33:
        $r54 := @caughtexception;

     label34:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        throw $r54;

     label35:
        goto label43;

     label36:
        $r51 := @caughtexception;

     label37:
        $r52 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock>;

        if $r52 != null goto label42;

     label38:
        $r53 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        virtualinvoke $r53.<java.nio.channels.FileChannel: void close()>();

     label39:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        goto label42;

     label40:
        $r50 := @caughtexception;

     label41:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

        throw $r50;

     label42:
        throw $r51;

     label43:
        $r62 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        if $r62 != null goto label56;

     label44:
        $r19 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r19.<java.io.RandomAccessFile: void close()>();

     label45:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        goto label48;

     label46:
        $r49 := @caughtexception;

     label47:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        throw $r49;

     label48:
        goto label56;

     label49:
        $r46 := @caughtexception;

     label50:
        $r47 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        if $r47 != null goto label55;

     label51:
        $r48 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r48.<java.io.RandomAccessFile: void close()>();

     label52:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        goto label55;

     label53:
        $r45 := @caughtexception;

     label54:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        throw $r45;

     label55:
        throw $r46;

     label56:
        if 1 == 0 goto label71;

        $z4 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z4 != 0 goto label71;

        $r11 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r11;

     label57:
        $r12 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $z5 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z5 == 0 goto label58;

        $r13 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        virtualinvoke $r13.<java.util.HashSet: boolean remove(java.lang.Object)>($r4);

     label58:
        exitmonitor $r11;

     label59:
        goto label62;

     label60:
        $r44 := @caughtexception;

        exitmonitor $r11;

     label61:
        throw $r44;

     label62:
        goto label71;

     label63:
        $r40 := @caughtexception;

     label64:
        if z11 == 0 goto label70;

        $z9 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z9 != 0 goto label70;

        $r41 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r41;

     label65:
        $r42 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $z10 = virtualinvoke $r42.<java.util.HashSet: boolean contains(java.lang.Object)>($r4);

        if $z10 == 0 goto label66;

        $r43 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        virtualinvoke $r43.<java.util.HashSet: boolean remove(java.lang.Object)>($r4);

     label66:
        exitmonitor $r41;

     label67:
        goto label70;

     label68:
        $r39 := @caughtexception;

        exitmonitor $r41;

     label69:
        throw $r39;

     label70:
        throw $r40;

     label71:
        $z12 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        return $z12;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.io.IOException from label22 to label23 with label29;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label40 to label41 with label40;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label21 to label43 with label49;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch java.lang.Throwable from label49 to label50 with label49;
        catch java.lang.Throwable from label57 to label59 with label60;
        catch java.lang.Throwable from label60 to label61 with label60;
        catch java.lang.Throwable from label04 to label06 with label63;
        catch java.lang.Throwable from label13 to label56 with label63;
        catch java.lang.Throwable from label65 to label67 with label68;
        catch java.lang.Throwable from label68 to label69 with label68;
        catch java.lang.Throwable from label63 to label64 with label63;
    }

    public synchronized void release() throws java.io.IOException
    {
        java.io.RandomAccessFile $r9, $r24, $r38, $r51;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Throwable $r15, $r16, $r17, $r22, $r23, $r29, $r30, $r35, $r36, $r43, $r44, $r49, $r50, $r56, $r57, $r62;
        java.lang.String $r6, $r13, $r21, $r28, $r34, $r42, $r48, $r55, $r61;
        java.io.File $r4, $r11, $r14, $r19, $r26, $r32, $r40, $r46, $r53, $r59;
        java.nio.channels.FileLock $r7;
        boolean $z0, $z1, z2;
        org.apache.lucene.store.LockReleaseFailedException $r1;
        java.util.HashSet $r10, $r12, $r18, $r20, $r25, $r27, $r31, $r33, $r39, $r41, $r45, $r47, $r52, $r54, $r58, $r60;
        org.apache.lucene.store.NativeFSLock r0;
        java.nio.channels.FileChannel $r8, $r37;

        r0 := @this: org.apache.lucene.store.NativeFSLock;

        $z0 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z0 == 0 goto label76;

     label01:
        $r7 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock>;

        virtualinvoke $r7.<java.nio.channels.FileLock: void release()>();

     label02:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock> = null;

     label03:
        $r8 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        virtualinvoke $r8.<java.nio.channels.FileChannel: void close()>();

     label04:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

     label05:
        $r9 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r9.<java.io.RandomAccessFile: void close()>();

     label06:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r10 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r10;

     label07:
        $r12 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r11 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r13 = virtualinvoke $r11.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r12.<java.util.HashSet: boolean remove(java.lang.Object)>($r13);

        exitmonitor $r10;

     label08:
        goto label11;

     label09:
        $r62 := @caughtexception;

        exitmonitor $r10;

     label10:
        throw $r62;

     label11:
        goto label19;

     label12:
        $r57 := @caughtexception;

     label13:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r58 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r58;

     label14:
        $r60 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r59 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r61 = virtualinvoke $r59.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r60.<java.util.HashSet: boolean remove(java.lang.Object)>($r61);

        exitmonitor $r58;

     label15:
        goto label18;

     label16:
        $r56 := @caughtexception;

        exitmonitor $r58;

     label17:
        throw $r56;

     label18:
        throw $r57;

     label19:
        goto label37;

     label20:
        $r50 := @caughtexception;

     label21:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

     label22:
        $r51 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r51.<java.io.RandomAccessFile: void close()>();

     label23:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r52 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r52;

     label24:
        $r54 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r53 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r55 = virtualinvoke $r53.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r54.<java.util.HashSet: boolean remove(java.lang.Object)>($r55);

        exitmonitor $r52;

     label25:
        goto label28;

     label26:
        $r49 := @caughtexception;

        exitmonitor $r52;

     label27:
        throw $r49;

     label28:
        goto label36;

     label29:
        $r44 := @caughtexception;

     label30:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r45 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r45;

     label31:
        $r47 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r46 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r48 = virtualinvoke $r46.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r47.<java.util.HashSet: boolean remove(java.lang.Object)>($r48);

        exitmonitor $r45;

     label32:
        goto label35;

     label33:
        $r43 := @caughtexception;

        exitmonitor $r45;

     label34:
        throw $r43;

     label35:
        throw $r44;

     label36:
        throw $r50;

     label37:
        goto label75;

     label38:
        $r36 := @caughtexception;

     label39:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileLock lock> = null;

     label40:
        $r37 = r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel>;

        virtualinvoke $r37.<java.nio.channels.FileChannel: void close()>();

     label41:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

     label42:
        $r38 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r38.<java.io.RandomAccessFile: void close()>();

     label43:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r39 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r39;

     label44:
        $r41 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r40 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r42 = virtualinvoke $r40.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r41.<java.util.HashSet: boolean remove(java.lang.Object)>($r42);

        exitmonitor $r39;

     label45:
        goto label48;

     label46:
        $r35 := @caughtexception;

        exitmonitor $r39;

     label47:
        throw $r35;

     label48:
        goto label56;

     label49:
        $r30 := @caughtexception;

     label50:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r31 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r31;

     label51:
        $r33 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r32 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r34 = virtualinvoke $r32.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r33.<java.util.HashSet: boolean remove(java.lang.Object)>($r34);

        exitmonitor $r31;

     label52:
        goto label55;

     label53:
        $r29 := @caughtexception;

        exitmonitor $r31;

     label54:
        throw $r29;

     label55:
        throw $r30;

     label56:
        goto label74;

     label57:
        $r23 := @caughtexception;

     label58:
        r0.<org.apache.lucene.store.NativeFSLock: java.nio.channels.FileChannel channel> = null;

     label59:
        $r24 = r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f>;

        virtualinvoke $r24.<java.io.RandomAccessFile: void close()>();

     label60:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r25 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r25;

     label61:
        $r27 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r26 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r28 = virtualinvoke $r26.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r27.<java.util.HashSet: boolean remove(java.lang.Object)>($r28);

        exitmonitor $r25;

     label62:
        goto label65;

     label63:
        $r22 := @caughtexception;

        exitmonitor $r25;

     label64:
        throw $r22;

     label65:
        goto label73;

     label66:
        $r17 := @caughtexception;

     label67:
        r0.<org.apache.lucene.store.NativeFSLock: java.io.RandomAccessFile f> = null;

        $r18 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        entermonitor $r18;

     label68:
        $r20 = <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD>;

        $r19 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r21 = virtualinvoke $r19.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $r20.<java.util.HashSet: boolean remove(java.lang.Object)>($r21);

        exitmonitor $r18;

     label69:
        goto label72;

     label70:
        $r16 := @caughtexception;

        exitmonitor $r18;

     label71:
        throw $r16;

     label72:
        throw $r17;

     label73:
        throw $r23;

     label74:
        throw $r36;

     label75:
        $r14 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        virtualinvoke $r14.<java.io.File: boolean delete()>();

        goto label82;

     label76:
        z2 = 0;

     label77:
        $z1 = virtualinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean obtain()>();

        z2 = $z1;

        if $z1 != 0 goto label78;

        $r1 = new org.apache.lucene.store.LockReleaseFailedException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot forcefully unlock a NativeFSLock which is held by another indexer component: ");

        $r4 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.lucene.store.LockReleaseFailedException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label78:
        if $z1 == 0 goto label82;

        virtualinvoke r0.<org.apache.lucene.store.NativeFSLock: void release()>();

        goto label82;

     label79:
        $r15 := @caughtexception;

     label80:
        if z2 == 0 goto label81;

        virtualinvoke r0.<org.apache.lucene.store.NativeFSLock: void release()>();

     label81:
        throw $r15;

     label82:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label29 to label30 with label29;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label46 to label47 with label46;
        catch java.lang.Throwable from label42 to label43 with label49;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch java.lang.Throwable from label49 to label50 with label49;
        catch java.lang.Throwable from label40 to label41 with label57;
        catch java.lang.Throwable from label61 to label62 with label63;
        catch java.lang.Throwable from label63 to label64 with label63;
        catch java.lang.Throwable from label59 to label60 with label66;
        catch java.lang.Throwable from label68 to label69 with label70;
        catch java.lang.Throwable from label70 to label71 with label70;
        catch java.lang.Throwable from label66 to label67 with label66;
        catch java.lang.Throwable from label57 to label58 with label57;
        catch java.lang.Throwable from label38 to label39 with label38;
        catch java.lang.Throwable from label77 to label78 with label79;
        catch java.lang.Throwable from label79 to label80 with label79;
    }

    public synchronized boolean isLocked()
    {
        org.apache.lucene.store.NativeFSLock r0;
        java.io.IOException $r2;
        java.io.File $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.lucene.store.NativeFSLock;

        $z0 = specialinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean lockExists()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r0.<org.apache.lucene.store.NativeFSLock: boolean obtain()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.lucene.store.NativeFSLock: void release()>();

     label3:
        if $z2 != 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        $r2 := @caughtexception;

        return 0;

        catch java.io.IOException from label2 to label5 with label6;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.store.NativeFSLock r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;
        java.io.File $r3;

        r2 := @this: org.apache.lucene.store.NativeFSLock;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NativeFSLock@");

        $r3 = r2.<org.apache.lucene.store.NativeFSLock: java.io.File path>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.apache.lucene.store.NativeFSLock: java.util.HashSet LOCK_HELD> = $r0;

        return;
    }
}
