public class org.apache.commons.configuration.HierarchicalConfiguration extends org.apache.commons.configuration.AbstractConfiguration implements java.io.Serializable, java.lang.Cloneable
{
    public static final int EVENT_CLEAR_TREE;
    public static final int EVENT_ADD_NODES;
    public static final int EVENT_SUBNODE_CHANGED;
    private static final long serialVersionUID;
    private static org.apache.commons.configuration.tree.ExpressionEngine defaultExpressionEngine;
    private org.apache.commons.configuration.HierarchicalConfiguration$Node root;
    private org.apache.commons.configuration.tree.ConfigurationNode rootNode;
    private transient org.apache.commons.configuration.tree.ExpressionEngine expressionEngine;

    public void <init>()
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        $r1 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke $r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r1);

        return;
    }

    public void <init>(org.apache.commons.configuration.HierarchicalConfiguration)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r0, r1;
        org.apache.commons.configuration.tree.ConfigurationNode $r3, $r4;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void <init>()>();

        if r1 == null goto label1;

        $r2 = new org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor;

        specialinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: void <init>()>();

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        interfaceinvoke $r3.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r2);

        $r4 = virtualinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: org.apache.commons.configuration.tree.ConfigurationNode getClone()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r4);

     label1:
        return;
    }

    public org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r1, $r2, $r4;
        org.apache.commons.configuration.tree.ConfigurationNode $r3, $r5;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r1 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node root>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode>;

        if $r3 == null goto label1;

        $r4 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $r5 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode>;

        specialinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        return $r4;

     label1:
        $r2 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node root>;

        return $r2;
    }

    public void setRoot(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root node must not be null!");

        throw $r2;

     label1:
        r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node root> = r0;

        r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode> = null;

        return;
    }

    public org.apache.commons.configuration.tree.ConfigurationNode getRootNode()
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.tree.ConfigurationNode $r1, $r2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r1 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode>;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node root>;

     label2:
        return $r2;
    }

    public void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3;
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.configuration.tree.ConfigurationNode r0;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root node must not be null!");

        throw $r2;

     label1:
        r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode rootNode> = r0;

        $z0 = r0 instanceof org.apache.commons.configuration.HierarchicalConfiguration$Node;

        if $z0 == 0 goto label2;

        $r3 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) r0;

        goto label3;

     label2:
        $r3 = null;

     label3:
        r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node root> = $r3;

        return;
    }

    public static synchronized org.apache.commons.configuration.tree.ExpressionEngine getDefaultExpressionEngine()
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r0, $r1;
        org.apache.commons.configuration.tree.DefaultExpressionEngine $r2;

        $r0 = <org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine defaultExpressionEngine>;

        if $r0 != null goto label1;

        $r2 = new org.apache.commons.configuration.tree.DefaultExpressionEngine;

        specialinvoke $r2.<org.apache.commons.configuration.tree.DefaultExpressionEngine: void <init>()>();

        <org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine defaultExpressionEngine> = $r2;

     label1:
        $r1 = <org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine defaultExpressionEngine>;

        return $r1;
    }

    public static synchronized void setDefaultExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)
    {
        org.apache.commons.configuration.tree.ExpressionEngine r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.commons.configuration.tree.ExpressionEngine;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Default expression engine must not be null!");

        throw $r1;

     label1:
        <org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine defaultExpressionEngine> = r0;

        return;
    }

    public org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r1, $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r1 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine expressionEngine>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine expressionEngine>;

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getDefaultExpressionEngine()>();

     label2:
        return $r2;
    }

    public void setExpressionEngine(org.apache.commons.configuration.tree.ExpressionEngine)
    {
        org.apache.commons.configuration.tree.ExpressionEngine r1;
        org.apache.commons.configuration.HierarchicalConfiguration r0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.tree.ExpressionEngine;

        r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine expressionEngine> = r1;

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.util.Iterator $r4;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.util.ArrayList $r3;
        org.apache.commons.configuration.tree.ConfigurationNode r6;
        java.util.List $r2;
        int $i0, $i1, $i2;
        java.lang.Object $r5, $r7, $r8, $r9;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r7 = interfaceinvoke r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        if $r7 == null goto label3;

        $r8 = interfaceinvoke r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        goto label2;

     label4:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 >= 1 goto label5;

        return null;

     label5:
        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i2 != 1 goto label6;

        $r9 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        goto label7;

     label6:
        $r9 = $r3;

     label7:
        return $r9;
    }

    protected void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r1;
        org.apache.commons.configuration.tree.NodeAddData $r4;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.Object r6;
        java.lang.String r3;
        org.apache.commons.configuration.tree.ConfigurationNode $r2, $r5;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r4 = interfaceinvoke $r1.<org.apache.commons.configuration.tree.ExpressionEngine: org.apache.commons.configuration.tree.NodeAddData prepareAdd(org.apache.commons.configuration.tree.ConfigurationNode,java.lang.String)>($r2, r3);

        $r5 = specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode processNodeAddData(org.apache.commons.configuration.tree.NodeAddData)>($r4);

        interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: void setValue(java.lang.Object)>(r6);

        return;
    }

    public void addNodes(java.lang.String, java.util.Collection)
    {
        int $i0;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.configuration.tree.ExpressionEngine $r4;
        java.util.Iterator $r7;
        java.util.Collection r0;
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        java.lang.IllegalArgumentException $r10;
        org.apache.commons.configuration.tree.ConfigurationNode $r5, r9, r12;
        java.util.List $r3;
        org.apache.commons.configuration.tree.NodeAddData $r6;
        java.lang.Object $r8, $r11;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Collection;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(11, r2, r0, 1);

        $r3 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r11 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r12 = (org.apache.commons.configuration.tree.ConfigurationNode) $r11;

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        $r5 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r6 = interfaceinvoke $r4.<org.apache.commons.configuration.tree.ExpressionEngine: org.apache.commons.configuration.tree.NodeAddData prepareAdd(org.apache.commons.configuration.tree.ConfigurationNode,java.lang.String)>($r5, r2);

        r12 = specialinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode processNodeAddData(org.apache.commons.configuration.tree.NodeAddData)>($r6);

     label4:
        $z1 = interfaceinvoke r12.<org.apache.commons.configuration.tree.ConfigurationNode: boolean isAttribute()>();

        if $z1 == 0 goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot add nodes to an attribute node!");

        throw $r10;

     label5:
        $r7 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.commons.configuration.tree.ConfigurationNode) $r8;

        $z3 = interfaceinvoke r9.<org.apache.commons.configuration.tree.ConfigurationNode: boolean isAttribute()>();

        if $z3 == 0 goto label7;

        interfaceinvoke r12.<org.apache.commons.configuration.tree.ConfigurationNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>(r9);

        goto label8;

     label7:
        interfaceinvoke r12.<org.apache.commons.configuration.tree.ConfigurationNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r9);

     label8:
        staticinvoke <org.apache.commons.configuration.HierarchicalConfiguration: void clearReferences(org.apache.commons.configuration.tree.ConfigurationNode)>(r9);

        goto label6;

     label9:
        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(11, r2, r0, 0);

        return;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.tree.ConfigurationNode $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: boolean nodeDefined(org.apache.commons.configuration.tree.ConfigurationNode)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.commons.configuration.Configuration subset(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor $r4;
        int i0;
        java.lang.String r1;
        org.apache.commons.configuration.HierarchicalConfiguration$1 $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r5, $r12, $r15;
        org.apache.commons.configuration.HierarchicalConfiguration r0, $r22, $r24;
        org.apache.commons.configuration.tree.ConfigurationNode $r6, r8, $r10, $r13, $r16, $r18, $r19, $r21;
        java.util.List $r2, $r11, $r14;
        java.lang.Object $r7, $r9, $r17, $r20, r23;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r22 = new org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke $r22.<org.apache.commons.configuration.HierarchicalConfiguration: void <init>()>();

        return $r22;

     label01:
        $r3 = new org.apache.commons.configuration.HierarchicalConfiguration$1;

        specialinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration$1: void <init>(org.apache.commons.configuration.HierarchicalConfiguration,org.apache.commons.configuration.HierarchicalConfiguration)>(r0, r0);

        $r4 = new org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor;

        specialinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: void <init>()>();

        r23 = null;

        i0 = 0;

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7;

        $r9 = interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        if $r9 == null goto label03;

        r23 = interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        i0 = i0 + 1;

     label03:
        interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r4);

        $r10 = virtualinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: org.apache.commons.configuration.tree.ConfigurationNode getClone()>();

        $r11 = interfaceinvoke $r10.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r19 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r20 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (org.apache.commons.configuration.tree.ConfigurationNode) $r20;

        interfaceinvoke $r19.<org.apache.commons.configuration.tree.ConfigurationNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>($r21);

        goto label04;

     label05:
        $r13 = virtualinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: org.apache.commons.configuration.tree.ConfigurationNode getClone()>();

        $r14 = interfaceinvoke $r13.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r16 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r17 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (org.apache.commons.configuration.tree.ConfigurationNode) $r17;

        interfaceinvoke $r16.<org.apache.commons.configuration.tree.ConfigurationNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>($r18);

        goto label06;

     label07:
        goto label02;

     label08:
        if i0 != 1 goto label09;

        $r6 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: void setValue(java.lang.Object)>(r23);

     label09:
        $z2 = virtualinvoke $r3.<org.apache.commons.configuration.HierarchicalConfiguration: boolean isEmpty()>();

        if $z2 == 0 goto label10;

        $r24 = new org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke $r24.<org.apache.commons.configuration.HierarchicalConfiguration: void <init>()>();

        goto label11;

     label10:
        $r24 = $r3;

     label11:
        return $r24;
    }

    public org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String, boolean)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.IllegalArgumentException $r7;
        org.apache.commons.configuration.tree.ConfigurationNode $r4, $r6;
        java.util.List $r2;
        java.lang.StringBuffer $r8, $r9, $r10;
        int $i0;
        java.lang.Object $r3, $r5;
        java.lang.String r1, $r11;
        boolean z0;
        org.apache.commons.configuration.SubnodeConfiguration $r12;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Passed in key must select exactly one node: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        if z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode,java.lang.String)>($r6, r1);

        goto label3;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r3;

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)>($r4);

     label3:
        return $r12;
    }

    public org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.String r1;
        org.apache.commons.configuration.SubnodeConfiguration $r2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.SubnodeConfiguration configurationAt(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public java.util.List configurationsAt(java.lang.String)
    {
        java.util.Iterator $r4;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.util.ArrayList $r3;
        org.apache.commons.configuration.tree.ConfigurationNode $r6;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r1;
        boolean $z0;
        org.apache.commons.configuration.SubnodeConfiguration $r7;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.commons.configuration.tree.ConfigurationNode) $r5;

        $r7 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)>($r6);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r3;
    }

    protected org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.SubnodeConfiguration $r0;
        org.apache.commons.configuration.tree.ConfigurationNode r2;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r2 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r0 = new org.apache.commons.configuration.SubnodeConfiguration;

        specialinvoke $r0.<org.apache.commons.configuration.SubnodeConfiguration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration,org.apache.commons.configuration.tree.ConfigurationNode)>(r1, r2);

        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: void registerSubnodeConfiguration(org.apache.commons.configuration.SubnodeConfiguration)>($r0);

        return $r0;
    }

    protected org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode, java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.String r3;
        org.apache.commons.configuration.tree.ConfigurationNode r1;
        org.apache.commons.configuration.SubnodeConfiguration $r2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.SubnodeConfiguration createSubnodeConfiguration(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        virtualinvoke $r2.<org.apache.commons.configuration.SubnodeConfiguration: void setSubnodeKey(java.lang.String)>(r3);

        return $r2;
    }

    protected void subnodeConfigurationChanged(org.apache.commons.configuration.event.ConfigurationEvent)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.event.ConfigurationEvent r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.event.ConfigurationEvent;

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.event.ConfigurationEvent: boolean isBeforeUpdate()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(12, null, r1, $z0);

        return;
    }

    void registerSubnodeConfiguration(org.apache.commons.configuration.SubnodeConfiguration)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r2;
        org.apache.commons.configuration.SubnodeConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$2 $r1;

        r2 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.SubnodeConfiguration;

        $r1 = new org.apache.commons.configuration.HierarchicalConfiguration$2;

        specialinvoke $r1.<org.apache.commons.configuration.HierarchicalConfiguration$2: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r2);

        virtualinvoke r0.<org.apache.commons.configuration.SubnodeConfiguration: void addConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>($r1);

        return;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.String r1;
        org.apache.commons.collections.iterators.SingletonIterator $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4, r12;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        char $c0;
        org.apache.commons.configuration.tree.ConfigurationNode $r7, $r10;
        java.util.List $r3;
        java.lang.Object r2, $r6, $r8, $r9, $r11;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r1, r2, 1);

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z0 != 0 goto label1;

        $c0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: char getListDelimiter()>();

        r12 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>(r2, $c0);

        goto label2;

     label1:
        $r5 = new org.apache.commons.collections.iterators.SingletonIterator;

        specialinvoke $r5.<org.apache.commons.collections.iterators.SingletonIterator: void <init>(java.lang.Object)>(r2);

        r12 = $r5;

     label2:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r9 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.commons.configuration.tree.ConfigurationNode) $r9;

        $r11 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r10.<org.apache.commons.configuration.tree.ConfigurationNode: void setValue(java.lang.Object)>($r11);

        goto label2;

     label3:
        $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r1, $r8);

        goto label3;

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void clearNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r7);

        goto label4;

     label5:
        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r1, r2, 0);

        return;
    }

    public void clearTree(java.lang.String)
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.Object $r4;
        java.lang.String r1;
        boolean $z0;
        org.apache.commons.configuration.tree.ConfigurationNode $r5;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(10, r1, null, 1);

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r4;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void removeNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(10, r1, $r2, 0);

        return;
    }

    public void clearProperty(java.lang.String)
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.Object $r4;
        java.lang.String r1;
        boolean $z0;
        org.apache.commons.configuration.tree.ConfigurationNode $r5;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(2, r1, null, 1);

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r4;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void clearNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(2, r1, null, 0);

        return;
    }

    public java.util.Iterator getKeys()
    {
        java.util.Iterator $r4;
        org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor $r0;
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        java.util.Set $r3;
        org.apache.commons.configuration.tree.ConfigurationNode $r2;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r0 = new org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor;

        specialinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r1);

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        interfaceinvoke $r2.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r0);

        $r3 = virtualinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor: java.util.Set getKeyList()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public java.util.Iterator getKeys(java.lang.String)
    {
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4, $r6, $r10, $r12;
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        java.util.Set $r5, $r17;
        org.apache.commons.configuration.tree.ConfigurationNode r8, $r14, $r16;
        java.util.List $r3, $r9, $r11;
        org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor $r0;
        java.lang.Object $r7, $r13, $r15;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor;

        specialinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor: void <init>(org.apache.commons.configuration.HierarchicalConfiguration,java.lang.String)>(r1, r2);

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: boolean containsKey(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r17 = virtualinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor: java.util.Set getKeyList()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label1:
        $r3 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7;

        $r9 = interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (org.apache.commons.configuration.tree.ConfigurationNode) $r15;

        interfaceinvoke $r16.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r0);

        goto label3;

     label4:
        $r11 = interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (org.apache.commons.configuration.tree.ConfigurationNode) $r13;

        interfaceinvoke $r14.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r0);

        goto label5;

     label6:
        goto label2;

     label7:
        $r5 = virtualinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedKeysVisitor: java.util.Set getKeyList()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

        return $r6;
    }

    public int getMaxIndex(java.lang.String)
    {
        java.util.List $r2;
        int $i0, $i1;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.util.List fetchNodeList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0, r7;
        java.lang.CloneNotSupportedException $r5;
        org.apache.commons.configuration.tree.ConfigurationNode $r3, $r4;
        org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor $r2;
        org.apache.commons.configuration.ConfigurationRuntimeException $r6;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: java.lang.Object clone()>();

        r7 = (org.apache.commons.configuration.HierarchicalConfiguration) $r1;

        $r2 = new org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor;

        specialinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        interfaceinvoke $r3.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r2);

        $r4 = virtualinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration$CloneVisitor: org.apache.commons.configuration.tree.ConfigurationNode getClone()>();

        virtualinvoke r7.<org.apache.commons.configuration.HierarchicalConfiguration: void setRootNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r4);

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public org.apache.commons.configuration.Configuration interpolatedConfiguration()
    {
        org.apache.commons.configuration.HierarchicalConfiguration$3 $r4;
        org.apache.commons.configuration.HierarchicalConfiguration r0, r2;
        java.lang.Object $r1;
        org.apache.commons.configuration.tree.ConfigurationNode $r3;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: java.lang.Object clone()>();

        r2 = (org.apache.commons.configuration.HierarchicalConfiguration) $r1;

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r4 = new org.apache.commons.configuration.HierarchicalConfiguration$3;

        specialinvoke $r4.<org.apache.commons.configuration.HierarchicalConfiguration$3: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r0);

        interfaceinvoke $r3.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r4);

        return r2;
    }

    protected java.util.List fetchNodeList(java.lang.String)
    {
        org.apache.commons.configuration.tree.ExpressionEngine $r1;
        java.util.List $r4;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        java.lang.String r3;
        org.apache.commons.configuration.tree.ConfigurationNode $r2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ExpressionEngine getExpressionEngine()>();

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>();

        $r4 = interfaceinvoke $r1.<org.apache.commons.configuration.tree.ExpressionEngine: java.util.List query(org.apache.commons.configuration.tree.ConfigurationNode,java.lang.String)>($r2, r3);

        return $r4;
    }

    protected void findPropertyNodes(org.apache.commons.configuration.ConfigurationKey$KeyIterator, org.apache.commons.configuration.HierarchicalConfiguration$Node, java.util.Collection)
    {
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;
        java.util.Collection r3;
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r2 := @parameter1: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r3 := @parameter2: java.util.Collection;

        return;
    }

    protected boolean nodeDefined(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: boolean nodeDefined(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        return $z0;
    }

    protected boolean nodeDefined(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor $r0;
        org.apache.commons.configuration.HierarchicalConfiguration r2;
        org.apache.commons.configuration.tree.ConfigurationNode r1;
        boolean $z0;

        r2 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r0 = new org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor;

        specialinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor: void <init>()>();

        interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r0);

        $z0 = virtualinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$DefinedVisitor: boolean isDefined()>();

        return $z0;
    }

    protected void removeNode(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void removeNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        return;
    }

    protected void removeNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r2;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r1;
        boolean $z0;

        r2 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        if $r1 == null goto label1;

        interfaceinvoke $r1.<org.apache.commons.configuration.tree.ConfigurationNode: boolean removeChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

        $z0 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration: boolean nodeDefined(org.apache.commons.configuration.tree.ConfigurationNode)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration: void removeNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r1);

     label1:
        return;
    }

    protected void clearNode(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration: void clearNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        return;
    }

    protected void clearNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.tree.ConfigurationNode r0;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: void setValue(java.lang.Object)>(null);

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: boolean nodeDefined(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

        if $z0 != 0 goto label1;

        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration: void removeNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

     label1:
        return;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node fetchAddNode(org.apache.commons.configuration.ConfigurationKey$KeyIterator, org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r2 := @parameter1: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        return null;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node findLastPathNode(org.apache.commons.configuration.ConfigurationKey$KeyIterator, org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r2 := @parameter1: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        return null;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node createAddPath(org.apache.commons.configuration.ConfigurationKey$KeyIterator, org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r0;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2;
        org.apache.commons.configuration.ConfigurationKey$KeyIterator r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.ConfigurationKey$KeyIterator;

        r2 := @parameter1: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        return null;
    }

    protected org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r2;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r0;
        java.lang.String r1;

        r2 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke $r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    private org.apache.commons.configuration.tree.ConfigurationNode processNodeAddData(org.apache.commons.configuration.tree.NodeAddData)
    {
        java.util.Iterator $r2;
        org.apache.commons.configuration.HierarchicalConfiguration r3;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r5, $r8;
        org.apache.commons.configuration.tree.ConfigurationNode r9;
        java.util.List $r1;
        org.apache.commons.configuration.tree.NodeAddData r0;
        java.lang.Object $r6;
        java.lang.String $r4, $r7;
        boolean $z0, $z1;

        r3 := @this: org.apache.commons.configuration.HierarchicalConfiguration;

        r0 := @parameter0: org.apache.commons.configuration.tree.NodeAddData;

        r9 = virtualinvoke r0.<org.apache.commons.configuration.tree.NodeAddData: org.apache.commons.configuration.tree.ConfigurationNode getParent()>();

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.tree.NodeAddData: java.util.List getPathNodes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke r3.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)>($r7);

        interfaceinvoke r9.<org.apache.commons.configuration.tree.ConfigurationNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>($r8);

        r9 = $r8;

        goto label1;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.tree.NodeAddData: java.lang.String getNewNodeName()>();

        $r5 = virtualinvoke r3.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node createNode(java.lang.String)>($r4);

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.tree.NodeAddData: boolean isAttribute()>();

        if $z1 == 0 goto label3;

        interfaceinvoke r9.<org.apache.commons.configuration.tree.ConfigurationNode: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

        goto label4;

     label3:
        interfaceinvoke r9.<org.apache.commons.configuration.tree.ConfigurationNode: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>($r5);

     label4:
        return $r5;
    }

    protected static void clearReferences(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$4 $r1;
        org.apache.commons.configuration.tree.ConfigurationNode r0;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r1 = new org.apache.commons.configuration.HierarchicalConfiguration$4;

        specialinvoke $r1.<org.apache.commons.configuration.HierarchicalConfiguration$4: void <init>()>();

        interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: void visit(org.apache.commons.configuration.tree.ConfigurationNodeVisitor)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.HierarchicalConfiguration: long serialVersionUID> = 3373812230395363192L;

        <org.apache.commons.configuration.HierarchicalConfiguration: int EVENT_SUBNODE_CHANGED> = 12;

        <org.apache.commons.configuration.HierarchicalConfiguration: int EVENT_ADD_NODES> = 11;

        <org.apache.commons.configuration.HierarchicalConfiguration: int EVENT_CLEAR_TREE> = 10;

        return;
    }
}
