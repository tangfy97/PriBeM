public class org.apache.xalan.lib.sql.ObjectArray extends java.lang.Object
{
    private int m_minArraySize;
    private java.util.Vector m_Arrays;
    private org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray;
    private int m_nextSlot;

    public void <init>()
    {
        java.util.Vector $r1;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize> = 10;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(200);

        r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays> = $r1;

        specialinvoke r0.<org.apache.xalan.lib.sql.ObjectArray: void init(int)>(10);

        return;
    }

    public void <init>(int)
    {
        int i0;
        java.util.Vector $r1;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize> = 10;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(200);

        r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays> = $r1;

        specialinvoke r0.<org.apache.xalan.lib.sql.ObjectArray: void init(int)>(i0);

        return;
    }

    private void init(int)
    {
        int i0, $i1;
        org.apache.xalan.lib.sql.ObjectArray$_ObjectArray $r1;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize> = i0;

        $r1 = new org.apache.xalan.lib.sql.ObjectArray$_ObjectArray;

        $i1 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        specialinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: void <init>(org.apache.xalan.lib.sql.ObjectArray,int)>(r0, $i1);

        r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray> = $r1;

        return;
    }

    public java.lang.Object getAt(int)
    {
        java.lang.Object[] $r3, $r8;
        org.apache.xalan.lib.sql.ObjectArray$_ObjectArray $r2, r7;
        java.util.Vector $r1, $r5;
        int i0, $i1, i2, $i3, $i4, i5, $i6;
        java.lang.Object $r4, $r6, $r9;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        i2 = i0 / $i1;

        $i3 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        $i4 = i2 * $i3;

        i5 = i0 - $i4;

        $r1 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $i6 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i2 >= $i6 goto label1;

        $r5 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r7 = (org.apache.xalan.lib.sql.ObjectArray$_ObjectArray) $r6;

        $r8 = r7.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: java.lang.Object[] objects>;

        $r9 = $r8[i5];

        return $r9;

     label1:
        $r2 = r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray>;

        $r3 = $r2.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: java.lang.Object[] objects>;

        $r4 = $r3[i5];

        return $r4;
    }

    public void setAt(int, java.lang.Object)
    {
        java.lang.Object[] $r4, $r8;
        org.apache.xalan.lib.sql.ObjectArray$_ObjectArray $r2, r7;
        java.util.Vector $r1, $r5;
        int i0, $i1, i2, $i3, $i4, i5, $i6;
        java.lang.Object r3, $r6;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.Object;

        $i1 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        i2 = i0 / $i1;

        $i3 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        $i4 = i2 * $i3;

        i5 = i0 - $i4;

        $r1 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $i6 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i2 >= $i6 goto label1;

        $r5 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r7 = (org.apache.xalan.lib.sql.ObjectArray$_ObjectArray) $r6;

        $r8 = r7.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: java.lang.Object[] objects>;

        $r8[i5] = r3;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray>;

        $r4 = $r2.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: java.lang.Object[] objects>;

        $r4[i5] = r3;

     label2:
        return;
    }

    public int append(java.lang.Object)
    {
        java.lang.Object[] $r3;
        org.apache.xalan.lib.sql.ObjectArray$_ObjectArray $r1, $r5, $r7;
        java.util.Vector $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object r2;
        org.apache.xalan.lib.sql.ObjectArray r0;

        r0 := @this: org.apache.xalan.lib.sql.ObjectArray;

        r2 := @parameter0: java.lang.Object;

        $i1 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot>;

        $i0 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        if $i1 < $i0 goto label1;

        $r6 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $r5 = r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray>;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot> = 0;

        $r7 = new org.apache.xalan.lib.sql.ObjectArray$_ObjectArray;

        $i9 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        specialinvoke $r7.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: void <init>(org.apache.xalan.lib.sql.ObjectArray,int)>(r0, $i9);

        r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray> = $r7;

     label1:
        $r1 = r0.<org.apache.xalan.lib.sql.ObjectArray: org.apache.xalan.lib.sql.ObjectArray$_ObjectArray m_currentArray>;

        $r3 = $r1.<org.apache.xalan.lib.sql.ObjectArray$_ObjectArray: java.lang.Object[] objects>;

        $i2 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot>;

        $r3[$i2] = r2;

        $r4 = r0.<org.apache.xalan.lib.sql.ObjectArray: java.util.Vector m_Arrays>;

        $i3 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $i4 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_minArraySize>;

        $i6 = $i3 * $i4;

        $i5 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot>;

        $i10 = $i6 + $i5;

        $i7 = r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot>;

        $i8 = $i7 + 1;

        r0.<org.apache.xalan.lib.sql.ObjectArray: int m_nextSlot> = $i8;

        return $i10;
    }

    public static void main(java.lang.String[])
    {
        org.apache.xalan.lib.sql.ObjectArray $r1;
        java.lang.String[] $r0, r39;
        java.lang.StringBuffer $r2, $r4, $r6;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r5, $r7, r10, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38;
        java.io.PrintStream $r3, $r8, $r11, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36;
        java.lang.Object $r9, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37;

        r39 := @parameter0: java.lang.String[];

        $r0 = newarray (java.lang.String)[40];

        $r0[0] = "Zero";

        $r0[1] = "One";

        $r0[2] = "Two";

        $r0[3] = "Three";

        $r0[4] = "Four";

        $r0[5] = "Five";

        $r0[6] = "Six";

        $r0[7] = "Seven";

        $r0[8] = "Eight";

        $r0[9] = "Nine";

        $r0[10] = "Ten";

        $r0[11] = "Eleven";

        $r0[12] = "Twelve";

        $r0[13] = "Thirteen";

        $r0[14] = "Fourteen";

        $r0[15] = "Fifteen";

        $r0[16] = "Sixteen";

        $r0[17] = "Seventeen";

        $r0[18] = "Eighteen";

        $r0[19] = "Nineteen";

        $r0[20] = "Twenty";

        $r0[21] = "Twenty-One";

        $r0[22] = "Twenty-Two";

        $r0[23] = "Twenty-Three";

        $r0[24] = "Twenty-Four";

        $r0[25] = "Twenty-Five";

        $r0[26] = "Twenty-Six";

        $r0[27] = "Twenty-Seven";

        $r0[28] = "Twenty-Eight";

        $r0[29] = "Twenty-Nine";

        $r0[30] = "Thirty";

        $r0[31] = "Thirty-One";

        $r0[32] = "Thirty-Two";

        $r0[33] = "Thirty-Three";

        $r0[34] = "Thirty-Four";

        $r0[35] = "Thirty-Five";

        $r0[36] = "Thirty-Six";

        $r0[37] = "Thirty-Seven";

        $r0[38] = "Thirty-Eight";

        $r0[39] = "Thirty-Nine";

        $r1 = new org.apache.xalan.lib.sql.ObjectArray;

        specialinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: void <init>()>();

        i3 = 0;

        goto label2;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");

        $r5 = $r0[i3];

        $i1 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: int append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>($r7);

        i3 = i3 + 1;

     label2:
        $i0 = lengthof $r0;

        if i3 < $i0 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("\n");

        i4 = 0;

        goto label4;

     label3:
        $r9 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(i4);

        r10 = (java.lang.String) $r9;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>(r10);

        i4 = i4 + 1;

     label4:
        $i2 = lengthof $r0;

        if i4 < $i2 goto label3;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(5);

        $r14 = (java.lang.String) $r13;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r16 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(10);

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(20);

        $r20 = (java.lang.String) $r19;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r22 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(2);

        $r23 = (java.lang.String) $r22;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r25 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(15);

        $r26 = (java.lang.String) $r25;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r28 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(30);

        $r29 = (java.lang.String) $r28;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r31 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(6);

        $r32 = (java.lang.String) $r31;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r34 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(8);

        $r35 = (java.lang.String) $r34;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r37 = virtualinvoke $r1.<org.apache.xalan.lib.sql.ObjectArray: java.lang.Object getAt(int)>(40);

        $r38 = (java.lang.String) $r37;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r38);

        return;
    }
}
