public class groovy.util.XmlNodePrinter extends java.lang.Object
{
    protected final groovy.util.IndentPrinter out;
    private java.lang.String quote;
    private boolean namespaceAware;

    public void <init>(java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<groovy.util.XmlNodePrinter: void <init>(java.io.PrintWriter,java.lang.String)>(r1, "  ");

        return;
    }

    public void <init>(java.io.PrintWriter, java.lang.String)
    {
        java.io.PrintWriter r1;
        java.lang.String r2;
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<groovy.util.XmlNodePrinter: void <init>(java.io.PrintWriter,java.lang.String,java.lang.String)>(r1, r2, "\"");

        return;
    }

    public void <init>(java.io.PrintWriter, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter r2;
        groovy.util.XmlNodePrinter r0;
        groovy.util.IndentPrinter $r1;
        java.lang.String r3, r4;

        r0 := @this: groovy.util.XmlNodePrinter;

        r2 := @parameter0: java.io.PrintWriter;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = new groovy.util.IndentPrinter;

        specialinvoke $r1.<groovy.util.IndentPrinter: void <init>(java.io.PrintWriter,java.lang.String)>(r2, r3);

        specialinvoke r0.<groovy.util.XmlNodePrinter: void <init>(groovy.util.IndentPrinter,java.lang.String)>($r1, r4);

        return;
    }

    public void <init>(groovy.util.IndentPrinter, java.lang.String)
    {
        groovy.util.XmlNodePrinter r0;
        groovy.util.IndentPrinter r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: groovy.util.IndentPrinter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.util.XmlNodePrinter: boolean namespaceAware> = 1;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument \'IndentPrinter out\' must not be null!");

        throw $r3;

     label1:
        r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out> = r1;

        r0.<groovy.util.XmlNodePrinter: java.lang.String quote> = r2;

        return;
    }

    public void <init>()
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream $r3;
        groovy.util.XmlNodePrinter r0;
        java.io.OutputStreamWriter $r2;

        r0 := @this: groovy.util.XmlNodePrinter;

        $r1 = new java.io.PrintWriter;

        $r2 = new java.io.OutputStreamWriter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r3);

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);

        specialinvoke r0.<groovy.util.XmlNodePrinter: void <init>(java.io.PrintWriter)>($r1);

        return;
    }

    public void print(groovy.util.Node)
    {
        groovy.util.XmlNodePrinter$NamespaceContext $r2;
        groovy.util.XmlNodePrinter r0;
        groovy.util.Node r1;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: groovy.util.Node;

        $r2 = new groovy.util.XmlNodePrinter$NamespaceContext;

        specialinvoke $r2.<groovy.util.XmlNodePrinter$NamespaceContext: void <init>(groovy.util.XmlNodePrinter,groovy.util.XmlNodePrinter$1)>(r0, null);

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void print(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext)>(r1, $r2);

        return;
    }

    public boolean isNamespaceAware()
    {
        groovy.util.XmlNodePrinter r0;
        boolean $z0;

        r0 := @this: groovy.util.XmlNodePrinter;

        $z0 = r0.<groovy.util.XmlNodePrinter: boolean namespaceAware>;

        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        groovy.util.XmlNodePrinter r0;
        boolean z0;

        r0 := @this: groovy.util.XmlNodePrinter;

        z0 := @parameter0: boolean;

        r0.<groovy.util.XmlNodePrinter: boolean namespaceAware> = z0;

        return;
    }

    public java.lang.String getQuote()
    {
        java.lang.String $r1;
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        $r1 = r0.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        return $r1;
    }

    public void setQuote(java.lang.String)
    {
        java.lang.String r1;
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: java.lang.String;

        r0.<groovy.util.XmlNodePrinter: java.lang.String quote> = r1;

        return;
    }

    protected void print(groovy.util.Node, groovy.util.XmlNodePrinter$NamespaceContext)
    {
        groovy.util.XmlNodePrinter r0;
        java.util.Map $r11;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        groovy.util.IndentPrinter $r4, $r6, $r7, $r8, $r9, $r12, $r13;
        groovy.util.XmlNodePrinter$NamespaceContext r3;
        groovy.util.Node r1;
        java.util.List $r5;
        java.lang.Object $r2;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: groovy.util.Node;

        r3 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        $z0 = specialinvoke r0.<groovy.util.XmlNodePrinter: boolean isEmptyElement(groovy.util.Node)>(r1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printLineBegin()>();

        $r8 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r8.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        $r9 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r10 = specialinvoke r0.<groovy.util.XmlNodePrinter: java.lang.String getName(java.lang.Object)>(r1);

        virtualinvoke $r9.<groovy.util.IndentPrinter: void print(java.lang.String)>($r10);

        if r3 == null goto label1;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printNamespace(java.lang.Object,groovy.util.XmlNodePrinter$NamespaceContext)>(r1, r3);

     label1:
        $r11 = virtualinvoke r1.<groovy.util.Node: java.util.Map attributes()>();

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printNameAttributes(java.util.Map,groovy.util.XmlNodePrinter$NamespaceContext)>($r11, r3);

        $r12 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r12.<groovy.util.IndentPrinter: void print(java.lang.String)>("/>");

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printLineEnd()>();

        $r13 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r13.<groovy.util.IndentPrinter: void flush()>();

        return;

     label2:
        $z1 = virtualinvoke r0.<groovy.util.XmlNodePrinter: boolean printSpecialNode(groovy.util.Node)>(r1);

        if $z1 == 0 goto label3;

        $r7 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void flush()>();

        return;

     label3:
        $r2 = virtualinvoke r1.<groovy.util.Node: java.lang.Object value()>();

        $z2 = $r2 instanceof java.util.List;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printName(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext,boolean)>(r1, r3, 1);

        $r5 = (java.util.List) $r2;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printList(java.util.List,groovy.util.XmlNodePrinter$NamespaceContext)>($r5, r3);

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printName(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext,boolean)>(r1, r3, 0);

        $r6 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r6.<groovy.util.IndentPrinter: void flush()>();

        return;

     label4:
        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printName(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext,boolean)>(r1, r3, 1);

        specialinvoke r0.<groovy.util.XmlNodePrinter: void printSimpleItemWithIndent(java.lang.Object)>($r2);

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printName(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext,boolean)>(r1, r3, 0);

        $r4 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r4.<groovy.util.IndentPrinter: void flush()>();

        return;
    }

    protected void printLineBegin()
    {
        groovy.util.XmlNodePrinter r0;
        groovy.util.IndentPrinter $r1;

        r0 := @this: groovy.util.XmlNodePrinter;

        $r1 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r1.<groovy.util.IndentPrinter: void printIndent()>();

        return;
    }

    protected void printLineEnd()
    {
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printLineEnd(java.lang.String)>(null);

        return;
    }

    protected void printLineEnd(java.lang.String)
    {
        groovy.util.XmlNodePrinter r1;
        groovy.util.IndentPrinter $r2, $r3, $r4, $r5;
        java.lang.String r0;

        r1 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r3 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void print(java.lang.String)>(" <!-- ");

        $r4 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r4.<groovy.util.IndentPrinter: void print(java.lang.String)>(r0);

        $r5 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r5.<groovy.util.IndentPrinter: void print(java.lang.String)>(" -->");

     label1:
        $r2 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void print(java.lang.String)>("\n");

        return;
    }

    protected void printList(java.util.List, groovy.util.XmlNodePrinter$NamespaceContext)
    {
        groovy.util.XmlNodePrinter r0;
        groovy.util.IndentPrinter $r1, $r4;
        java.util.Iterator $r3;
        groovy.util.XmlNodePrinter$NamespaceContext $r5, r6;
        groovy.util.Node $r8;
        java.util.List r2;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: groovy.util.XmlNodePrinter;

        r2 := @parameter0: java.util.List;

        r6 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        $r1 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r1.<groovy.util.IndentPrinter: void incrementIndent()>();

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = new groovy.util.XmlNodePrinter$NamespaceContext;

        specialinvoke $r5.<groovy.util.XmlNodePrinter$NamespaceContext: void <init>(groovy.util.XmlNodePrinter,groovy.util.XmlNodePrinter$NamespaceContext,groovy.util.XmlNodePrinter$1)>(r0, r6, null);

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r7 instanceof groovy.util.Node;

        if $z0 == 0 goto label2;

        $r8 = (groovy.util.Node) $r7;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void print(groovy.util.Node,groovy.util.XmlNodePrinter$NamespaceContext)>($r8, $r5);

        goto label1;

     label2:
        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printSimpleItem(java.lang.Object)>($r7);

        goto label1;

     label3:
        $r4 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r4.<groovy.util.IndentPrinter: void decrementIndent()>();

        return;
    }

    protected void printSimpleItem(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r2;
        groovy.util.XmlNodePrinter r0;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printLineBegin()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>(r1);

        specialinvoke r0.<groovy.util.XmlNodePrinter: void printEscaped(java.lang.String)>($r2);

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printLineEnd()>();

        return;
    }

    protected void printName(groovy.util.Node, groovy.util.XmlNodePrinter$NamespaceContext, boolean)
    {
        groovy.util.XmlNodePrinter r2;
        groovy.util.IndentPrinter $r3, $r4, $r7, $r9;
        groovy.util.XmlNodePrinter$NamespaceContext r6;
        groovy.util.Node r0;
        java.lang.NullPointerException $r10, $r11;
        java.util.Map $r8;
        java.lang.Object $r1;
        java.lang.String $r5;
        boolean z0;

        r2 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: groovy.util.Node;

        r6 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("Node must not be null.");

        throw $r11;

     label1:
        $r1 = virtualinvoke r0.<groovy.util.Node: java.lang.Object name()>();

        if $r1 != null goto label2;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Name must not be null.");

        throw $r10;

     label2:
        virtualinvoke r2.<groovy.util.XmlNodePrinter: void printLineBegin()>();

        $r3 = r2.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void print(java.lang.String)>("<");

        if z0 != 0 goto label3;

        $r9 = r2.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r9.<groovy.util.IndentPrinter: void print(java.lang.String)>("/");

     label3:
        $r4 = r2.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r5 = specialinvoke r2.<groovy.util.XmlNodePrinter: java.lang.String getName(java.lang.Object)>(r0);

        virtualinvoke $r4.<groovy.util.IndentPrinter: void print(java.lang.String)>($r5);

        if r6 == null goto label4;

        virtualinvoke r2.<groovy.util.XmlNodePrinter: void printNamespace(java.lang.Object,groovy.util.XmlNodePrinter$NamespaceContext)>(r0, r6);

     label4:
        if z0 == 0 goto label5;

        $r8 = virtualinvoke r0.<groovy.util.Node: java.util.Map attributes()>();

        virtualinvoke r2.<groovy.util.XmlNodePrinter: void printNameAttributes(java.util.Map,groovy.util.XmlNodePrinter$NamespaceContext)>($r8, r6);

     label5:
        $r7 = r2.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void print(java.lang.String)>(">");

        virtualinvoke r2.<groovy.util.XmlNodePrinter: void printLineEnd()>();

        return;
    }

    protected boolean printSpecialNode(groovy.util.Node)
    {
        groovy.util.XmlNodePrinter r0;
        groovy.util.Node r1;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: groovy.util.Node;

        return 0;
    }

    protected void printNamespace(java.lang.Object, groovy.util.XmlNodePrinter$NamespaceContext)
    {
        groovy.util.XmlNodePrinter r0;
        java.lang.StringBuffer $r8, $r10, $r12;
        int $i0;
        java.lang.String $r3, $r4, $r11, $r13, $r15;
        boolean $z0, $z1, $z2, $z3;
        groovy.util.IndentPrinter $r6, $r7, $r9, $r14, $r16, $r17, $r18;
        groovy.util.XmlNodePrinter$NamespaceContext r5;
        groovy.util.Node $r19;
        java.lang.Object r1, $r20;
        groovy.xml.QName r2;

        r0 := @this: groovy.util.XmlNodePrinter;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        $z0 = r0.<groovy.util.XmlNodePrinter: boolean namespaceAware>;

        if $z0 == 0 goto label3;

        $z1 = r1 instanceof groovy.util.Node;

        if $z1 == 0 goto label1;

        $r19 = (groovy.util.Node) r1;

        $r20 = virtualinvoke $r19.<groovy.util.Node: java.lang.Object name()>();

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printNamespace(java.lang.Object,groovy.util.XmlNodePrinter$NamespaceContext)>($r20, r5);

        goto label3;

     label1:
        $z2 = r1 instanceof groovy.xml.QName;

        if $z2 == 0 goto label3;

        r2 = (groovy.xml.QName) r1;

        $r3 = virtualinvoke r2.<groovy.xml.QName: java.lang.String getNamespaceURI()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r2.<groovy.xml.QName: java.lang.String getPrefix()>();

        $z3 = virtualinvoke r5.<groovy.util.XmlNodePrinter$NamespaceContext: boolean isPrefixRegistered(java.lang.String,java.lang.String)>($r4, $r3);

        if $z3 != 0 goto label3;

        virtualinvoke r5.<groovy.util.XmlNodePrinter$NamespaceContext: void registerNamespacePrefix(java.lang.String,java.lang.String)>($r4, $r3);

        $r6 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r6.<groovy.util.IndentPrinter: void print(java.lang.String)>(" ");

        $r7 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void print(java.lang.String)>("xmlns");

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r17 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r17.<groovy.util.IndentPrinter: void print(java.lang.String)>(":");

        $r18 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r18.<groovy.util.IndentPrinter: void print(java.lang.String)>($r4);

     label2:
        $r9 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r11 = r0.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<groovy.util.IndentPrinter: void print(java.lang.String)>($r13);

        $r14 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r14.<groovy.util.IndentPrinter: void print(java.lang.String)>($r3);

        $r16 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r15 = r0.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        virtualinvoke $r16.<groovy.util.IndentPrinter: void print(java.lang.String)>($r15);

     label3:
        return;
    }

    protected void printNameAttributes(java.util.Map, groovy.util.XmlNodePrinter$NamespaceContext)
    {
        groovy.util.XmlNodePrinter r5;
        java.util.Map r0;
        java.lang.String $r9, $r12, $r14, $r15, $r19;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        groovy.util.IndentPrinter $r6, $r7, $r10, $r13, $r16;
        java.util.Set $r1;
        groovy.util.XmlNodePrinter$NamespaceContext r18;
        java.lang.Object $r3, $r8, $r11, $r17;

        r5 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: java.util.Map;

        r18 := @parameter1: groovy.util.XmlNodePrinter$NamespaceContext;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = r5.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r6.<groovy.util.IndentPrinter: void print(java.lang.String)>(" ");

        $r7 = r5.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = specialinvoke r5.<groovy.util.XmlNodePrinter: java.lang.String getName(java.lang.Object)>($r8);

        virtualinvoke $r7.<groovy.util.IndentPrinter: void print(java.lang.String)>($r9);

        $r10 = r5.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r10.<groovy.util.IndentPrinter: void print(java.lang.String)>("=");

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = r5.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r12 = r5.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        virtualinvoke $r13.<groovy.util.IndentPrinter: void print(java.lang.String)>($r12);

        $z2 = $r11 instanceof java.lang.String;

        if $z2 == 0 goto label4;

        $r19 = (java.lang.String) $r11;

        specialinvoke r5.<groovy.util.XmlNodePrinter: void printEscaped(java.lang.String)>($r19);

        goto label5;

     label4:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.String toString(java.lang.Object)>($r11);

        specialinvoke r5.<groovy.util.XmlNodePrinter: void printEscaped(java.lang.String)>($r14);

     label5:
        $r16 = r5.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        $r15 = r5.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        virtualinvoke $r16.<groovy.util.IndentPrinter: void print(java.lang.String)>($r15);

        $r17 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r5.<groovy.util.XmlNodePrinter: void printNamespace(java.lang.Object,groovy.util.XmlNodePrinter$NamespaceContext)>($r17, r18);

        goto label3;

     label6:
        return;
    }

    private boolean isEmptyElement(groovy.util.Node)
    {
        groovy.util.XmlNodePrinter r4;
        groovy.util.Node r0;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r4 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: groovy.util.Node;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Node must not be null!");

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<groovy.util.Node: java.util.List children()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<groovy.util.Node: java.lang.String text()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    private java.lang.String getName(java.lang.Object)
    {
        groovy.util.XmlNodePrinter r4;
        groovy.util.Node $r2;
        java.lang.Object r0, $r3;
        java.lang.String $r1, $r5, $r6, $r7, $r8;
        groovy.xml.QName r9;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r8 = (java.lang.String) r0;

        return $r8;

     label1:
        $z1 = r0 instanceof groovy.xml.QName;

        if $z1 == 0 goto label3;

        r9 = (groovy.xml.QName) r0;

        $z3 = r4.<groovy.util.XmlNodePrinter: boolean namespaceAware>;

        if $z3 != 0 goto label2;

        $r7 = virtualinvoke r9.<groovy.xml.QName: java.lang.String getLocalPart()>();

        return $r7;

     label2:
        $r6 = virtualinvoke r9.<groovy.xml.QName: java.lang.String getQualifiedName()>();

        return $r6;

     label3:
        $z2 = r0 instanceof groovy.util.Node;

        if $z2 == 0 goto label4;

        $r2 = (groovy.util.Node) r0;

        $r3 = virtualinvoke $r2.<groovy.util.Node: java.lang.Object name()>();

        $r5 = specialinvoke r4.<groovy.util.XmlNodePrinter: java.lang.String getName(java.lang.Object)>($r3);

        return $r5;

     label4:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    private void printSimpleItemWithIndent(java.lang.Object)
    {
        groovy.util.XmlNodePrinter r0;
        groovy.util.IndentPrinter $r1, $r3;
        java.lang.Object r2;

        r0 := @this: groovy.util.XmlNodePrinter;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r1.<groovy.util.IndentPrinter: void incrementIndent()>();

        virtualinvoke r0.<groovy.util.XmlNodePrinter: void printSimpleItem(java.lang.Object)>(r2);

        $r3 = r0.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void decrementIndent()>();

        return;
    }

    private void printEscaped(java.lang.String)
    {
        groovy.util.XmlNodePrinter r1;
        int $i0, i2, $i3;
        java.lang.String r0, $r4, $r8;
        boolean $z0, $z1;
        groovy.util.IndentPrinter $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11;
        char $c1;

        r1 := @this: groovy.util.XmlNodePrinter;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label11;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 34: goto label07;
            case 38: goto label04;
            case 39: goto label05;
            case 60: goto label02;
            case 62: goto label03;
            default: goto label09;
        };

     label02:
        $r3 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r3.<groovy.util.IndentPrinter: void print(java.lang.String)>("&lt;");

        goto label10;

     label03:
        $r2 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r2.<groovy.util.IndentPrinter: void print(java.lang.String)>("&gt;");

        goto label10;

     label04:
        $r7 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r7.<groovy.util.IndentPrinter: void print(java.lang.String)>("&amp;");

        goto label10;

     label05:
        $r4 = r1.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("\'");

        if $z0 == 0 goto label06;

        $r6 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r6.<groovy.util.IndentPrinter: void print(java.lang.String)>("&apos;");

        goto label10;

     label06:
        $r5 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r5.<groovy.util.IndentPrinter: void print(char)>($c1);

        goto label10;

     label07:
        $r8 = r1.<groovy.util.XmlNodePrinter: java.lang.String quote>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("\"");

        if $z1 == 0 goto label08;

        $r10 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r10.<groovy.util.IndentPrinter: void print(java.lang.String)>("&quot;");

        goto label10;

     label08:
        $r9 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r9.<groovy.util.IndentPrinter: void print(char)>($c1);

        goto label10;

     label09:
        $r11 = r1.<groovy.util.XmlNodePrinter: groovy.util.IndentPrinter out>;

        virtualinvoke $r11.<groovy.util.IndentPrinter: void print(char)>($c1);

     label10:
        i2 = i2 + 1;

        goto label01;

     label11:
        return;
    }
}
