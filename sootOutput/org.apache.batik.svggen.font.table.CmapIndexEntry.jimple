public class org.apache.batik.svggen.font.table.CmapIndexEntry extends java.lang.Object
{
    private int platformId;
    private int encodingId;
    private int offset;

    protected void <init>(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        org.apache.batik.svggen.font.table.CmapIndexEntry r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.batik.svggen.font.table.CmapIndexEntry;

        r1 := @parameter0: java.io.RandomAccessFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int platformId> = $i0;

        $i1 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int encodingId> = $i1;

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readInt()>();

        r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int offset> = $i2;

        return;
    }

    public int getEncodingId()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapIndexEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapIndexEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int encodingId>;

        return $i0;
    }

    public int getOffset()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapIndexEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapIndexEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int offset>;

        return $i0;
    }

    public int getPlatformId()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapIndexEntry r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapIndexEntry;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int platformId>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.batik.svggen.font.table.CmapIndexEntry r0;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r1, r2, $r12;

        r0 := @this: org.apache.batik.svggen.font.table.CmapIndexEntry;

        r1 = "";

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int platformId>;

        lookupswitch($i0)
        {
            case 1: goto label01;
            case 3: goto label02;
            default: goto label03;
        };

     label01:
        r2 = " (Macintosh)";

        goto label04;

     label02:
        r2 = " (Windows)";

        goto label04;

     label03:
        r2 = "";

     label04:
        $i2 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int platformId>;

        if $i2 != 3 goto label13;

        $i1 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int encodingId>;

        tableswitch($i1)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            default: goto label12;
        };

     label05:
        r1 = " (Symbol)";

        goto label13;

     label06:
        r1 = " (Unicode)";

        goto label13;

     label07:
        r1 = " (ShiftJIS)";

        goto label13;

     label08:
        r1 = " (Big5)";

        goto label13;

     label09:
        r1 = " (PRC)";

        goto label13;

     label10:
        r1 = " (Wansung)";

        goto label13;

     label11:
        r1 = " (Johab)";

        goto label13;

     label12:
        r1 = "";

     label13:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("platform id: ");

        $i3 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int platformId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", encoding id: ");

        $i4 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int encodingId>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", offset: ");

        $i5 = r0.<org.apache.batik.svggen.font.table.CmapIndexEntry: int offset>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }
}
