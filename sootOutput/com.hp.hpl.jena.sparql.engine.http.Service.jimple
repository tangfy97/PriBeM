public class com.hp.hpl.jena.sparql.engine.http.Service extends java.lang.Object
{
    public static final java.lang.String base;
    public static final com.hp.hpl.jena.sparql.util.Symbol queryDeflate;
    public static final com.hp.hpl.jena.sparql.util.Symbol queryGzip;
    public static final com.hp.hpl.jena.sparql.util.Symbol queryAuthUser;
    public static final com.hp.hpl.jena.sparql.util.Symbol queryAuthPwd;
    public static final com.hp.hpl.jena.sparql.util.Symbol serviceContext;
    public static final com.hp.hpl.jena.sparql.util.Symbol queryTimeout;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.engine.http.Service r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.http.Service;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryIterator exec(com.hp.hpl.jena.sparql.algebra.op.OpService, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query $r4;
        com.hp.hpl.jena.graph.Node $r1, $r6, $r16;
        com.hp.hpl.jena.query.QueryExecException $r13;
        java.lang.String $r7, $r18;
        com.hp.hpl.jena.sparql.algebra.Op $r2, $r3;
        boolean $z0;
        com.hp.hpl.jena.sparql.algebra.op.OpService r0;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery $r8;
        com.hp.hpl.jena.query.ResultSet $r10;
        com.hp.hpl.jena.sparql.util.Context r5;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorResultSet $r11;
        java.lang.StringBuilder $r14, $r15, $r17;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r12;
        java.io.InputStream $r9;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpService;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.graph.Node getService()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r13 = new com.hp.hpl.jena.query.QueryExecException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service URI not bound: ");

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.graph.Node getService()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.Rename: com.hp.hpl.jena.sparql.algebra.Op reverseVarRename(com.hp.hpl.jena.sparql.algebra.Op,boolean)>($r2, 1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.algebra.OpAsQuery: com.hp.hpl.jena.query.Query asQuery(com.hp.hpl.jena.sparql.algebra.Op)>($r3);

        staticinvoke <com.hp.hpl.jena.sparql.mgt.Explain: void explain(java.lang.String,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>("HTTP", $r4, r5);

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpService: com.hp.hpl.jena.graph.Node getService()>();

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.engine.http.HttpQuery configureQuery(java.lang.String,com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.query.Query)>($r7, r5, $r4);

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: java.io.InputStream exec()>();

        $r10 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSet fromXML(java.io.InputStream)>($r9);

        $r11 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorResultSet;

        specialinvoke $r11.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorResultSet: void <init>(com.hp.hpl.jena.query.ResultSet)>($r10);

        $r12 = staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIter: com.hp.hpl.jena.sparql.engine.QueryIterator materialize(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r11);

        staticinvoke <org.apache.jena.atlas.io.IO: void close(java.io.Closeable)>($r9);

        return $r12;
    }

    private static com.hp.hpl.jena.sparql.engine.http.HttpQuery configureQuery(java.lang.String, com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r7;
        java.util.Map r6;
        java.lang.String r1, $r12, $r16, $r18, $r19, r20, $r21;
        com.hp.hpl.jena.sparql.util.Symbol $r4, $r13, $r14, $r15, $r17;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery $r0;
        com.hp.hpl.jena.sparql.util.Context $r2, r3, r10;
        char[] $r8;
        java.lang.Object $r5, $r9;
        com.hp.hpl.jena.sparql.engine.http.Params $r11;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        r7 := @parameter2: com.hp.hpl.jena.query.Query;

        $r0 = new com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void <init>(java.lang.String)>(r1);

        $r2 = new com.hp.hpl.jena.sparql.util.Context;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: void <init>(com.hp.hpl.jena.sparql.util.Context)>(r3);

        $r4 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol serviceContext>;

        $r5 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r4);

        r6 = (java.util.Map) $r5;

        if r6 == null goto label1;

        $r9 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (com.hp.hpl.jena.sparql.util.Context) $r9;

        if r10 == null goto label1;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: void putAll(com.hp.hpl.jena.sparql.util.Context)>(r10);

     label1:
        $r11 = staticinvoke <com.hp.hpl.jena.sparql.engine.http.QueryEngineHTTP: com.hp.hpl.jena.sparql.engine.http.Params getServiceParams(java.lang.String,com.hp.hpl.jena.sparql.util.Context)>(r1, $r2);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void merge(com.hp.hpl.jena.sparql.engine.http.Params)>($r11);

        $r12 = virtualinvoke r7.<com.hp.hpl.jena.query.Query: java.lang.String toString()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void addParam(java.lang.String,java.lang.String)>("query", $r12);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setAccept(java.lang.String)>("application/sparql-results+xml");

        $r13 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryGzip>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: boolean isTrueOrUndef(com.hp.hpl.jena.sparql.util.Symbol)>($r13);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setAllowGZip(boolean)>($z0);

        $r14 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryDeflate>;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: boolean isTrueOrUndef(com.hp.hpl.jena.sparql.util.Symbol)>($r14);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setAllowDeflate(boolean)>($z1);

        $r15 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryAuthUser>;

        $r16 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.String getAsString(com.hp.hpl.jena.sparql.util.Symbol)>($r15);

        $r17 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryAuthPwd>;

        $r18 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.String getAsString(com.hp.hpl.jena.sparql.util.Symbol)>($r17);

        if $r16 != null goto label2;

        if $r18 == null goto label7;

     label2:
        if $r16 != null goto label3;

        $r19 = "";

        goto label4;

     label3:
        $r19 = $r16;

     label4:
        r20 = $r19;

        if $r18 != null goto label5;

        $r21 = "";

        goto label6;

     label5:
        $r21 = $r18;

     label6:
        $r8 = virtualinvoke $r21.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setBasicAuthentication(java.lang.String,char[])>(r20, $r8);

     label7:
        staticinvoke <com.hp.hpl.jena.sparql.engine.http.Service: void setAnyTimeouts(com.hp.hpl.jena.sparql.engine.http.HttpQuery,com.hp.hpl.jena.sparql.util.Context)>($r0, $r2);

        return $r0;
    }

    private static void setAnyTimeouts(com.hp.hpl.jena.sparql.engine.http.HttpQuery, com.hp.hpl.jena.sparql.util.Context)
    {
        java.lang.String[] $r11;
        com.hp.hpl.jena.query.QueryExecException $r4, $r16;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r9, $r12, $r13, $r20;
        java.lang.Number $r14;
        com.hp.hpl.jena.sparql.util.Symbol $r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.sparql.engine.http.HttpQuery r10;
        java.lang.NumberFormatException $r15;
        com.hp.hpl.jena.sparql.util.Context r0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r17, $r18, $r19;

        r10 := @parameter0: com.hp.hpl.jena.sparql.engine.http.HttpQuery;

        r0 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        $r1 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryTimeout>;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: boolean isDefined(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        if $z0 == 0 goto label7;

        $r2 = <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryTimeout>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r2);

        $z1 = $r3 instanceof java.lang.Number;

        if $z1 == 0 goto label1;

        $r14 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r14.<java.lang.Number: int intValue()>();

        virtualinvoke r10.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setConnectTimeout(int)>($i3);

        goto label7;

     label1:
        $z2 = $r3 instanceof java.lang.String;

        if $z2 == 0 goto label6;

     label2:
        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $z3 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z3 == 0 goto label3;

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r12 = $r11[0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        $r13 = $r11[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        virtualinvoke r10.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setConnectTimeout(int)>($i1);

        virtualinvoke r10.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setReadTimeout(int)>($i2);

        goto label4;

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke r10.<com.hp.hpl.jena.sparql.engine.http.HttpQuery: void setConnectTimeout(int)>($i0);

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        $r16 = new com.hp.hpl.jena.query.QueryExecException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t interpret string for timeout: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label6:
        $r4 = new com.hp.hpl.jena.query.QueryExecException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t interpret timeout: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label7:
        return;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.util.Symbol $r0, $r1, $r2, $r3, $r4, $r5;

        <com.hp.hpl.jena.sparql.engine.http.Service: java.lang.String base> = "http://jena.hpl.hp.com/Service#";

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "queryDeflate");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryDeflate> = $r0;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "queryGzip");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryGzip> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "queryAuthUser");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryAuthUser> = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "queryAuthPwd");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryAuthPwd> = $r3;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "serviceContext");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol serviceContext> = $r4;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol allocSymbol(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/Service#", "queryTimeout");

        <com.hp.hpl.jena.sparql.engine.http.Service: com.hp.hpl.jena.sparql.util.Symbol queryTimeout> = $r5;

        return;
    }
}
