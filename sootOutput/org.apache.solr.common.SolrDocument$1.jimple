class org.apache.solr.common.SolrDocument$1 extends java.lang.Object implements java.util.Map
{
    final org.apache.solr.common.SolrDocument this$0;

    void <init>(org.apache.solr.common.SolrDocument)
    {
        org.apache.solr.common.SolrDocument$1 r0;
        org.apache.solr.common.SolrDocument r1;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r1 := @parameter0: org.apache.solr.common.SolrDocument;

        r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Collection get(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument $r3;
        java.util.Collection $r4;
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = (java.lang.String) r1;

        $r4 = virtualinvoke $r3.<org.apache.solr.common.SolrDocument: java.util.Collection getFieldValues(java.lang.String)>($r2);

        return $r4;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument $r1;
        java.util.Map $r2;
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = staticinvoke <org.apache.solr.common.SolrDocument: java.util.Map access$000(org.apache.solr.common.SolrDocument)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        return $z0;
    }

    public java.util.Set keySet()
    {
        org.apache.solr.common.SolrDocument $r1;
        java.util.Map $r2;
        org.apache.solr.common.SolrDocument$1 r0;
        java.util.Set $r3;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        $r1 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = staticinvoke <org.apache.solr.common.SolrDocument: java.util.Map access$000(org.apache.solr.common.SolrDocument)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r3;
    }

    public int size()
    {
        org.apache.solr.common.SolrDocument $r1;
        java.util.Map $r2;
        int $i0;
        org.apache.solr.common.SolrDocument$1 r0;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        $r1 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = staticinvoke <org.apache.solr.common.SolrDocument: java.util.Map access$000(org.apache.solr.common.SolrDocument)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.solr.common.SolrDocument $r1;
        java.util.Map $r2;
        org.apache.solr.common.SolrDocument$1 r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        $r1 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = staticinvoke <org.apache.solr.common.SolrDocument: java.util.Map access$000(org.apache.solr.common.SolrDocument)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;
        java.lang.Object r2;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Set entrySet()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void putAll(java.util.Map)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;
        java.util.Map r2;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Collection values()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Collection put(java.lang.String, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r3;
        org.apache.solr.common.SolrDocument$1 r1;
        java.lang.String r2;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Collection remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.SolrDocument$1 r1;
        java.lang.Object r2;

        r1 := @this: org.apache.solr.common.SolrDocument$1;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.String toString()
    {
        org.apache.solr.common.SolrDocument $r1;
        java.util.Map $r2;
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.String $r3;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        $r1 = r0.<org.apache.solr.common.SolrDocument$1: org.apache.solr.common.SolrDocument this$0>;

        $r2 = staticinvoke <org.apache.solr.common.SolrDocument: java.util.Map access$000(org.apache.solr.common.SolrDocument)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrDocument$1: java.util.Collection remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Collection $r3, $r5;
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.Object r1, r2;
        java.lang.String $r4;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.util.Collection) r2;

        $r5 = virtualinvoke r0.<org.apache.solr.common.SolrDocument$1: java.util.Collection put(java.lang.String,java.util.Collection)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument$1 r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.common.SolrDocument$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrDocument$1: java.util.Collection get(java.lang.Object)>(r1);

        return $r2;
    }
}
