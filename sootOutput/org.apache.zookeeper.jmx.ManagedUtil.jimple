public class org.apache.zookeeper.jmx.ManagedUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.zookeeper.jmx.ManagedUtil r0;

        r0 := @this: org.apache.zookeeper.jmx.ManagedUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerLog4jMBeans() throws javax.management.JMException
    {
        java.util.Enumeration $r7;
        org.apache.zookeeper.jmx.MBeanRegistry $r0;
        javax.management.ObjectName $r3;
        org.apache.log4j.Logger $r4, r10;
        org.apache.log4j.jmx.HierarchyDynamicMBean $r2;
        javax.management.MBeanServer $r1;
        org.apache.log4j.spi.LoggerRepository $r6;
        java.lang.Object $r8;
        java.lang.String $r5, $r9;
        boolean $z0, $z1;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("zookeeper.jmx.log4j.disable");

        if $z0 != 1 goto label1;

        return;

     label1:
        $r0 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r1 = virtualinvoke $r0.<org.apache.zookeeper.jmx.MBeanRegistry: javax.management.MBeanServer getPlatformMBeanServer()>();

        $r2 = new org.apache.log4j.jmx.HierarchyDynamicMBean;

        specialinvoke $r2.<org.apache.log4j.jmx.HierarchyDynamicMBean: void <init>()>();

        $r3 = new javax.management.ObjectName;

        specialinvoke $r3.<javax.management.ObjectName: void <init>(java.lang.String)>("log4j:hiearchy=default");

        interfaceinvoke $r1.<javax.management.MBeanServer: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>($r2, $r3);

        $r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>();

        $r5 = virtualinvoke $r4.<org.apache.log4j.Logger: java.lang.String getName()>();

        virtualinvoke $r2.<org.apache.log4j.jmx.HierarchyDynamicMBean: javax.management.ObjectName addLoggerMBean(java.lang.String)>($r5);

        $r6 = staticinvoke <org.apache.log4j.LogManager: org.apache.log4j.spi.LoggerRepository getLoggerRepository()>();

        $r7 = interfaceinvoke $r6.<org.apache.log4j.spi.LoggerRepository: java.util.Enumeration getCurrentLoggers()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = (org.apache.log4j.Logger) $r8;

        $r9 = virtualinvoke r10.<org.apache.log4j.Logger: java.lang.String getName()>();

        virtualinvoke $r2.<org.apache.log4j.jmx.HierarchyDynamicMBean: javax.management.ObjectName addLoggerMBean(java.lang.String)>($r9);

        goto label2;

     label3:
        return;
    }
}
