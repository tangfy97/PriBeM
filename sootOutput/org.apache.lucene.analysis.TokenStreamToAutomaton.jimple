public class org.apache.lucene.analysis.TokenStreamToAutomaton extends java.lang.Object
{
    public static final int POS_SEP;
    public static final int HOLE;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.analysis.TokenStreamToAutomaton r0;

        r0 := @this: org.apache.lucene.analysis.TokenStreamToAutomaton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected org.apache.lucene.util.BytesRef changeToken(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r0;
        org.apache.lucene.analysis.TokenStreamToAutomaton r1;

        r1 := @this: org.apache.lucene.analysis.TokenStreamToAutomaton;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        return r0;
    }

    public org.apache.lucene.util.automaton.Automaton toAutomaton(org.apache.lucene.analysis.TokenStream) throws java.io.IOException
    {
        byte[] $r23;
        org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute r7;
        org.apache.lucene.analysis.TokenStreamToAutomaton$Positions $r45;
        byte $b8;
        org.apache.lucene.util.RollingBuffer$Resettable $r12, $r20, $r25;
        org.apache.lucene.analysis.TokenStreamToAutomaton$Position $r31, r39, r43;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute r5;
        org.apache.lucene.util.automaton.Automaton $r44;
        org.apache.lucene.util.Attribute $r2, $r4, $r6, $r8;
        java.lang.AssertionError $r46, $r47;
        short $s9, $s21;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.util.automaton.State $r13, $r14, $r16, $r21, $r26, $r29, $r30, $r32, $r34, $r35, $r36, r40, $r41, r42, $r48, $r49, $r51, $r52, $r54;
        boolean $z0, $z1, $z2, z3;
        org.apache.lucene.util.BytesRef $r10, $r19;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, i11, i12, i13, $i14, i15, $i16, $i18, $i20, $i22;
        org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute r3;
        org.apache.lucene.analysis.TokenStreamToAutomaton r18;
        org.apache.lucene.util.automaton.Transition $r50, $r53, $r55;

        r18 := @this: org.apache.lucene.analysis.TokenStreamToAutomaton;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r44 = new org.apache.lucene.util.automaton.Automaton;

        specialinvoke $r44.<org.apache.lucene.util.automaton.Automaton: void <init>()>();

        z3 = 1;

        $r2 = virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute;");

        r3 = (org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute) $r2;

        $r4 = virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        r5 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r4;

        $r6 = virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionLengthAttribute;");

        r7 = (org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute) $r6;

        $r8 = virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        r9 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r8;

        $r10 = interfaceinvoke r3.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: org.apache.lucene.util.BytesRef getBytesRef()>();

        virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: void reset()>();

        $r45 = new org.apache.lucene.analysis.TokenStreamToAutomaton$Positions;

        specialinvoke $r45.<org.apache.lucene.analysis.TokenStreamToAutomaton$Positions: void <init>(org.apache.lucene.analysis.TokenStreamToAutomaton$1)>(null);

        $i18 = (int) -1;

        i11 = $i18;

        r39 = null;

        i12 = 0;

     label01:
        $z0 = virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label14;

        $i1 = interfaceinvoke r5.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: int getPositionIncrement()>();

        $z1 = <org.apache.lucene.analysis.TokenStreamToAutomaton: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i20 = (int) -1;

        if i11 > $i20 goto label02;

        if $i1 > 0 goto label02;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label02:
        if $i1 <= 0 goto label07;

        i11 = i11 + $i1;

        $r25 = virtualinvoke $r45.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>(i11);

        r39 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r25;

        $z2 = <org.apache.lucene.analysis.TokenStreamToAutomaton: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r36 = r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        if $r36 == null goto label03;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label03:
        $r26 = r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r26 != null goto label05;

        if i11 != 0 goto label04;

        $r35 = virtualinvoke $r44.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State getInitialState()>();

        r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving> = $r35;

        goto label06;

     label04:
        $r48 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r48.<org.apache.lucene.util.automaton.State: void <init>()>();

        r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving> = $r48;

        $r34 = virtualinvoke $r44.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State getInitialState()>();

        staticinvoke <org.apache.lucene.analysis.TokenStreamToAutomaton: void addHoles(org.apache.lucene.util.automaton.State,org.apache.lucene.util.RollingBuffer,int)>($r34, $r45, i11);

        goto label06;

     label05:
        $r49 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r49.<org.apache.lucene.util.automaton.State: void <init>()>();

        r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving> = $r49;

        $r30 = r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        $r50 = new org.apache.lucene.util.automaton.Transition;

        $r29 = r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        specialinvoke $r50.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(256, $r29);

        virtualinvoke $r30.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r50);

        if $i1 <= 1 goto label06;

        $r32 = virtualinvoke $r44.<org.apache.lucene.util.automaton.Automaton: org.apache.lucene.util.automaton.State getInitialState()>();

        staticinvoke <org.apache.lucene.analysis.TokenStreamToAutomaton: void addHoles(org.apache.lucene.util.automaton.State,org.apache.lucene.util.RollingBuffer,int)>($r32, $r45, i11);

     label06:
        virtualinvoke $r45.<org.apache.lucene.util.RollingBuffer: void freeBefore(int)>(i11);

        goto label08;

     label07:
        z3 = 0;

     label08:
        $i2 = interfaceinvoke r7.<org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute: int getPositionLength()>();

        $i10 = i11 + $i2;

        interfaceinvoke r3.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: int fillBytesRef()>();

        $r19 = virtualinvoke r18.<org.apache.lucene.analysis.TokenStreamToAutomaton: org.apache.lucene.util.BytesRef changeToken(org.apache.lucene.util.BytesRef)>($r10);

        $r20 = virtualinvoke $r45.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>($i10);

        $r31 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r20;

        $r21 = $r31.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r21 != null goto label09;

        $r51 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r51.<org.apache.lucene.util.automaton.State: void <init>()>();

        $r31.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving> = $r51;

     label09:
        r40 = r39.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        i13 = 0;

     label10:
        $i14 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        if i13 >= $i14 goto label13;

        $i4 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        $i5 = $i4 - 1;

        if i13 != $i5 goto label11;

        $r41 = $r31.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        goto label12;

     label11:
        $r52 = new org.apache.lucene.util.automaton.State;

        $r41 = $r52;

        specialinvoke $r52.<org.apache.lucene.util.automaton.State: void <init>()>();

     label12:
        $r53 = new org.apache.lucene.util.automaton.Transition;

        $r23 = $r19.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i6 = $r19.<org.apache.lucene.util.BytesRef: int offset>;

        $i7 = $i6 + i13;

        $b8 = $r23[$i7];

        $s21 = (short) $b8;

        $s9 = $s21 & 255;

        $i22 = (int) $s9;

        specialinvoke $r53.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>($i22, $r41);

        virtualinvoke r40.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r53);

        r40 = $r41;

        i13 = i13 + 1;

        goto label10;

     label13:
        $i3 = interfaceinvoke r9.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(i12, $i3);

        goto label01;

     label14:
        virtualinvoke r1.<org.apache.lucene.analysis.TokenStream: void end()>();

        r42 = null;

        $i0 = interfaceinvoke r9.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        if $i0 <= i12 goto label15;

        $r54 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r54.<org.apache.lucene.util.automaton.State: void <init>()>();

        r42 = $r54;

        virtualinvoke $r54.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

     label15:
        i15 = i11 + 1;

     label16:
        $i16 = virtualinvoke $r45.<org.apache.lucene.util.RollingBuffer: int getMaxPos()>();

        if i15 > $i16 goto label19;

        $r12 = virtualinvoke $r45.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>(i15);

        r43 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r12;

        $r13 = r43.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r13 == null goto label18;

        if r42 == null goto label17;

        $r16 = r43.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        $r55 = new org.apache.lucene.util.automaton.Transition;

        specialinvoke $r55.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(256, r42);

        virtualinvoke $r16.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r55);

        goto label18;

     label17:
        $r14 = r43.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        virtualinvoke $r14.<org.apache.lucene.util.automaton.State: void setAccept(boolean)>(1);

     label18:
        i15 = i15 + 1;

        goto label16;

     label19:
        virtualinvoke $r44.<org.apache.lucene.util.automaton.Automaton: void setDeterministic(boolean)>(z3);

        return $r44;
    }

    private static void addHoles(org.apache.lucene.util.automaton.State, org.apache.lucene.util.RollingBuffer, int)
    {
        org.apache.lucene.util.RollingBuffer$Resettable $r1, $r2, $r6;
        int $i0, $i1, i2, $i4;
        org.apache.lucene.analysis.TokenStreamToAutomaton$Position r18, r19;
        org.apache.lucene.util.automaton.Transition $r24, $r26, $r27;
        org.apache.lucene.util.RollingBuffer r0;
        org.apache.lucene.util.automaton.State $r3, $r4, $r5, $r8, $r10, $r11, r12, $r15, $r16, $r17, $r20, $r22, $r23, $r25;

        r12 := @parameter0: org.apache.lucene.util.automaton.State;

        r0 := @parameter1: org.apache.lucene.util.RollingBuffer;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>(i2);

        r18 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r1;

        $i0 = i2 - 1;

        $r2 = virtualinvoke r0.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>($i0);

        r19 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r2;

     label1:
        $r3 = r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r3 == null goto label2;

        $r17 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        if $r17 != null goto label8;

     label2:
        $r4 = r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r4 != null goto label3;

        $r23 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r23.<org.apache.lucene.util.automaton.State: void <init>()>();

        r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving> = $r23;

        $r16 = r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        $r24 = new org.apache.lucene.util.automaton.Transition;

        $r15 = r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        specialinvoke $r24.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(256, $r15);

        virtualinvoke $r16.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r24);

     label3:
        $r5 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        if $r5 != null goto label6;

        if i2 != 1 goto label4;

        r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving> = r12;

        goto label5;

     label4:
        $r25 = new org.apache.lucene.util.automaton.State;

        specialinvoke $r25.<org.apache.lucene.util.automaton.State: void <init>()>();

        r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving> = $r25;

     label5:
        $r8 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        if $r8 == null goto label6;

        $r11 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        $r26 = new org.apache.lucene.util.automaton.Transition;

        $r10 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        specialinvoke $r26.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(256, $r10);

        virtualinvoke $r11.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r26);

     label6:
        $r20 = r19.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State leaving>;

        $r27 = new org.apache.lucene.util.automaton.Transition;

        $r22 = r18.<org.apache.lucene.analysis.TokenStreamToAutomaton$Position: org.apache.lucene.util.automaton.State arriving>;

        specialinvoke $r27.<org.apache.lucene.util.automaton.Transition: void <init>(int,org.apache.lucene.util.automaton.State)>(257, $r22);

        virtualinvoke $r20.<org.apache.lucene.util.automaton.State: void addTransition(org.apache.lucene.util.automaton.Transition)>($r27);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 > 0 goto label7;

        goto label8;

     label7:
        r18 = r19;

        $i1 = i2 - 1;

        $r6 = virtualinvoke r0.<org.apache.lucene.util.RollingBuffer: org.apache.lucene.util.RollingBuffer$Resettable get(int)>($i1);

        r19 = (org.apache.lucene.analysis.TokenStreamToAutomaton$Position) $r6;

        goto label1;

     label8:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.analysis.TokenStreamToAutomaton: int HOLE> = 257;

        <org.apache.lucene.analysis.TokenStreamToAutomaton: int POS_SEP> = 256;

        $r0 = class "Lorg/apache/lucene/analysis/TokenStreamToAutomaton;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.TokenStreamToAutomaton: boolean $assertionsDisabled> = $z1;

        return;
    }
}
