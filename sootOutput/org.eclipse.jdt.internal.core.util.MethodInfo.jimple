public class org.eclipse.jdt.internal.core.util.MethodInfo extends org.eclipse.jdt.internal.core.util.ClassFileStruct implements org.eclipse.jdt.core.util.IMethodInfo
{
    private int accessFlags;
    private int attributeBytes;
    private org.eclipse.jdt.core.util.IClassFileAttribute[] attributes;
    private int attributesCount;
    private org.eclipse.jdt.core.util.ICodeAttribute codeAttribute;
    private char[] descriptor;
    private int descriptorIndex;
    private org.eclipse.jdt.core.util.IExceptionAttribute exceptionAttribute;
    private boolean isDeprecated;
    private boolean isSynthetic;
    private char[] name;
    private int nameIndex;

    public void <init>(byte[], org.eclipse.jdt.core.util.IConstantPool, int, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        byte[] r1;
        org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute $r57;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        java.lang.Throwable $r63, $r64, $r65;
        java.lang.Object[] $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r36, $r39, $r41, $r43;
        org.eclipse.jdt.internal.core.util.SignatureAttribute $r56;
        org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute $r61;
        long $l44, $l46, $l47, $l48;
        org.eclipse.jdt.core.util.IExceptionAttribute $r35;
        char[] $r4, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        org.eclipse.jdt.internal.core.util.ExceptionAttribute $r55;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r7, $r45, $r48;
        org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute $r60;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.eclipse.jdt.core.util.IConstantPool r2;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r3, $r5, $r8;
        org.eclipse.jdt.core.util.ClassFormatException $r49, $r50, $r51;
        org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute $r59;
        org.eclipse.jdt.core.util.ICodeAttribute $r38;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43, $i45, $i49;
        org.eclipse.jdt.internal.core.util.ClassFileAttribute $r52, $r53, $r62;
        org.eclipse.jdt.internal.core.util.CodeAttribute $r54;
        org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute $r58;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.eclipse.jdt.core.util.IConstantPool;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileStruct: void <init>()>();

        $i1 = i0 & 32;

        if $i1 != 0 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        z0 = $z13;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int u2At(byte[],int,int)>(r1, 0, i2);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int accessFlags> = $i3;

        $i4 = $i3 & 4096;

        if $i4 == 0 goto label03;

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isSynthetic> = 1;

     label03:
        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int u2At(byte[],int,int)>(r1, 2, i2);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int nameIndex> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int nameIndex>;

        $r3 = interfaceinvoke r2.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i6);

        $i7 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        if $i7 == 1 goto label04;

        $r49 = new org.eclipse.jdt.core.util.ClassFormatException;

        specialinvoke $r49.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(int)>(3);

        $r63 = (java.lang.Throwable) $r49;

        throw $r63;

     label04:
        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name> = $r4;

        $i8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int u2At(byte[],int,int)>(r1, 4, i2);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int descriptorIndex> = $i8;

        $i9 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int descriptorIndex>;

        $r5 = interfaceinvoke r2.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i9);

        $i10 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        if $i10 == 1 goto label05;

        $r50 = new org.eclipse.jdt.core.util.ClassFormatException;

        specialinvoke $r50.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(int)>(3);

        $r64 = (java.lang.Throwable) $r50;

        throw $r64;

     label05:
        $r6 = interfaceinvoke $r5.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] descriptor> = $r6;

        $i11 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int u2At(byte[],int,int)>(r1, 6, i2);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount> = $i11;

        $r7 = <org.eclipse.jdt.internal.core.util.ClassFileAttribute: org.eclipse.jdt.core.util.IClassFileAttribute[] NO_ATTRIBUTES>;

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes> = $r7;

        $i12 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        if $i12 == 0 goto label07;

        if z0 == 0 goto label06;

        $z11 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isAbstract()>();

        if $z11 != 0 goto label06;

        $z12 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isNative()>();

        if $z12 != 0 goto label06;

        $i37 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        if $i37 == 1 goto label07;

        $i38 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        $i39 = $i38 - 1;

        $r45 = newarray (org.eclipse.jdt.core.util.IClassFileAttribute)[$i39];

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes> = $r45;

        goto label07;

     label06:
        $i40 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        $r48 = newarray (org.eclipse.jdt.core.util.IClassFileAttribute)[$i40];

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes> = $r48;

     label07:
        i41 = 0;

        i42 = 8;

        i43 = 0;

        goto label21;

     label08:
        $i13 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int u2At(byte[],int,int)>(r1, i42, i2);

        $r8 = interfaceinvoke r2.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i13);

        $i14 = interfaceinvoke $r8.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        if $i14 == 1 goto label09;

        $r51 = new org.eclipse.jdt.core.util.ClassFormatException;

        specialinvoke $r51.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(int)>(3);

        $r65 = (java.lang.Throwable) $r51;

        throw $r65;

     label09:
        $r9 = interfaceinvoke $r8.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        $r10 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] DEPRECATED>;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r10);

        if $z1 == 0 goto label10;

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isDeprecated> = 1;

        $r43 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i35 = i41;

        i41 = i41 + 1;

        $r52 = new org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $i36 = i2 + i42;

        specialinvoke $r52.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i36);

        $r43[$i35] = $r52;

        goto label20;

     label10:
        $r11 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SYNTHETIC>;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r11);

        if $z2 == 0 goto label11;

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isSynthetic> = 1;

        $r41 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i33 = i41;

        i41 = i41 + 1;

        $r53 = new org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $i34 = i2 + i42;

        specialinvoke $r53.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i34);

        $r41[$i33] = $r53;

        goto label20;

     label11:
        $r12 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] CODE>;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r12);

        if $z3 == 0 goto label12;

        if z0 != 0 goto label20;

        $r54 = new org.eclipse.jdt.internal.core.util.CodeAttribute;

        $i31 = i2 + i42;

        specialinvoke $r54.<org.eclipse.jdt.internal.core.util.CodeAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i31);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.ICodeAttribute codeAttribute> = $r54;

        $r39 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i32 = i41;

        i41 = i41 + 1;

        $r38 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.ICodeAttribute codeAttribute>;

        $r39[$i32] = $r38;

        goto label20;

     label12:
        $r13 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] EXCEPTIONS>;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r13);

        if $z4 == 0 goto label13;

        $r55 = new org.eclipse.jdt.internal.core.util.ExceptionAttribute;

        $i29 = i2 + i42;

        specialinvoke $r55.<org.eclipse.jdt.internal.core.util.ExceptionAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i29);

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IExceptionAttribute exceptionAttribute> = $r55;

        $r36 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i30 = i41;

        i41 = i41 + 1;

        $r35 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IExceptionAttribute exceptionAttribute>;

        $r36[$i30] = $r35;

        goto label20;

     label13:
        $r14 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] SIGNATURE>;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r14);

        if $z5 == 0 goto label14;

        $r33 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i27 = i41;

        i41 = i41 + 1;

        $r56 = new org.eclipse.jdt.internal.core.util.SignatureAttribute;

        $i28 = i2 + i42;

        specialinvoke $r56.<org.eclipse.jdt.internal.core.util.SignatureAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i28);

        $r33[$i27] = $r56;

        goto label20;

     label14:
        $r15 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_ANNOTATIONS>;

        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r15);

        if $z6 == 0 goto label15;

        $r31 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i25 = i41;

        i41 = i41 + 1;

        $r57 = new org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute;

        $i26 = i2 + i42;

        specialinvoke $r57.<org.eclipse.jdt.internal.core.util.RuntimeVisibleAnnotationsAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i26);

        $r31[$i25] = $r57;

        goto label20;

     label15:
        $r16 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_ANNOTATIONS>;

        $z7 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r16);

        if $z7 == 0 goto label16;

        $r29 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i23 = i41;

        i41 = i41 + 1;

        $r58 = new org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute;

        $i24 = i2 + i42;

        specialinvoke $r58.<org.eclipse.jdt.internal.core.util.RuntimeInvisibleAnnotationsAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i24);

        $r29[$i23] = $r58;

        goto label20;

     label16:
        $r17 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS>;

        $z8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r17);

        if $z8 == 0 goto label17;

        $r27 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i21 = i41;

        i41 = i41 + 1;

        $r59 = new org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute;

        $i22 = i2 + i42;

        specialinvoke $r59.<org.eclipse.jdt.internal.core.util.RuntimeVisibleParameterAnnotationsAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i22);

        $r27[$i21] = $r59;

        goto label20;

     label17:
        $r18 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS>;

        $z9 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r18);

        if $z9 == 0 goto label18;

        $r25 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i19 = i41;

        i41 = i41 + 1;

        $r60 = new org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute;

        $i20 = i2 + i42;

        specialinvoke $r60.<org.eclipse.jdt.internal.core.util.RuntimeInvisibleParameterAnnotationsAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i20);

        $r25[$i19] = $r60;

        goto label20;

     label18:
        $r19 = <org.eclipse.jdt.core.util.IAttributeNamesConstants: char[] ANNOTATION_DEFAULT>;

        $z10 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean equals(char[],char[])>($r9, $r19);

        if $z10 == 0 goto label19;

        $r23 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i17 = i41;

        i41 = i41 + 1;

        $r61 = new org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute;

        $i18 = i2 + i42;

        specialinvoke $r61.<org.eclipse.jdt.internal.core.util.AnnotationDefaultAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i18);

        $r23[$i17] = $r61;

        goto label20;

     label19:
        $r21 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        $i15 = i41;

        i41 = i41 + 1;

        $r62 = new org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $i16 = i2 + i42;

        specialinvoke $r62.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i16);

        $r21[$i15] = $r62;

     label20:
        $l44 = (long) i42;

        $i45 = i42 + 2;

        $l46 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.MethodInfo: long u4At(byte[],int,int)>(r1, $i45, i2);

        $l47 = 6L + $l46;

        $l48 = $l44 + $l47;

        i42 = (int) $l48;

        i43 = i43 + 1;

     label21:
        $i49 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        if i43 < $i49 goto label08;

        r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributeBytes> = i42;

        return;
    }

    public int getAccessFlags()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int accessFlags>;

        return $i0;
    }

    public int getAttributeCount()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributesCount>;

        return $i0;
    }

    public org.eclipse.jdt.core.util.IClassFileAttribute[] getAttributes()
    {
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IClassFileAttribute[] attributes>;

        return $r1;
    }

    public org.eclipse.jdt.core.util.ICodeAttribute getCodeAttribute()
    {
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        org.eclipse.jdt.core.util.ICodeAttribute $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.ICodeAttribute codeAttribute>;

        return $r1;
    }

    public char[] getDescriptor()
    {
        char[] $r1;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] descriptor>;

        return $r1;
    }

    public int getDescriptorIndex()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int descriptorIndex>;

        return $i0;
    }

    public org.eclipse.jdt.core.util.IExceptionAttribute getExceptionAttribute()
    {
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        org.eclipse.jdt.core.util.IExceptionAttribute $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: org.eclipse.jdt.core.util.IExceptionAttribute exceptionAttribute>;

        return $r1;
    }

    public char[] getName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name>;

        return $r1;
    }

    public int getNameIndex()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int nameIndex>;

        return $i0;
    }

    private boolean isAbstract()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int accessFlags>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClinit()
    {
        int $i1, $i2;
        char[] $r1, $r2;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        char $c0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name>;

        $c0 = $r1[0];

        $i2 = (int) $c0;

        if $i2 != 60 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name>;

        $i1 = lengthof $r2;

        if $i1 != 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isConstructor()
    {
        int $i1, $i2;
        char[] $r1, $r2;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        char $c0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name>;

        $c0 = $r1[0];

        $i2 = (int) $c0;

        if $i2 != 60 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: char[] name>;

        $i1 = lengthof $r2;

        if $i1 != 6 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDeprecated()
    {
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isDeprecated>;

        return $z0;
    }

    private boolean isNative()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int accessFlags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSynthetic()
    {
        org.eclipse.jdt.internal.core.util.MethodInfo r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $z0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: boolean isSynthetic>;

        return $z0;
    }

    int sizeInBytes()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.MethodInfo: int attributeBytes>;

        return $i0;
    }
}
