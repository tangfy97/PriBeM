public class org.apache.http.impl.client.DefaultRedirectHandler extends java.lang.Object implements org.apache.http.client.RedirectHandler
{
    private final org.apache.commons.logging.Log log;
    private static final java.lang.String REDIRECT_LOCATIONS;

    public void <init>()
    {
        org.apache.http.impl.client.DefaultRedirectHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public boolean isRedirectRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        java.lang.IllegalArgumentException $r7;
        org.apache.http.StatusLine $r1;
        org.apache.http.HttpRequest r4;
        org.apache.http.RequestLine $r5;
        org.apache.http.protocol.HttpContext r2;
        int $i0;
        org.apache.http.HttpResponse r0;
        java.lang.Object $r3;
        org.apache.http.impl.client.DefaultRedirectHandler r8;
        java.lang.String $r6;
        boolean $z0, $z1, $z2;

        r8 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r7;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r1.<org.apache.http.StatusLine: int getStatusCode()>();

        tableswitch($i0)
        {
            case 301: goto label2;
            case 302: goto label2;
            case 303: goto label6;
            case 304: goto label7;
            case 305: goto label7;
            case 306: goto label7;
            case 307: goto label2;
            default: goto label7;
        };

     label2:
        $r3 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request");

        r4 = (org.apache.http.HttpRequest) $r3;

        $r5 = interfaceinvoke r4.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GET");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HEAD");

        if $z1 == 0 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        return 1;

     label7:
        return 0;
    }

    public java.net.URI getLocationURI(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.ProtocolException
    {
        org.apache.http.StatusLine $r42;
        org.apache.http.RequestLine $r23;
        org.apache.http.HttpRequest r61;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r28, $r29, $r30, $r31, $r33, $r35, $r36, $r37, $r40, $r41, $r43, $r44, $r55, $r56, $r57;
        java.lang.String $r2, $r9, $r15, $r17, $r18, $r24, $r32, $r38, $r45, $r49, $r52, $r58;
        org.apache.http.protocol.HttpContext r7;
        org.apache.http.params.HttpParams $r6;
        org.apache.http.HttpResponse r0;
        org.apache.http.HttpHost $r16, r60;
        org.apache.http.ProtocolException $r27, $r39, $r48, $r51, $r54;
        java.lang.IllegalStateException $r26;
        java.net.URISyntaxException $r47, $r50, $r53;
        org.apache.http.Header $r1;
        java.net.URI $r5, $r22, $r25, r59, r63;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.http.impl.client.RedirectLocations $r19, r62;
        org.apache.http.client.CircularRedirectException $r10;
        int $i0;
        org.apache.http.impl.client.DefaultRedirectHandler r3;
        java.lang.IllegalArgumentException $r46;
        org.apache.commons.logging.Log $r4, $r34;
        java.lang.Object $r8, $r20, $r21;

        r3 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r7 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label01;

        $r46 = new java.lang.IllegalArgumentException;

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r46;

     label01:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("location");

        if $r1 != null goto label02;

        $r39 = new org.apache.http.ProtocolException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received redirect response ");

        $r42 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but no location header");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r45);

        throw $r39;

     label02:
        $r2 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getValue()>();

        $r4 = r3.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r34 = r3.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirect requested to location \'");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r38);

     label03:
        $r5 = new java.net.URI;

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r2);

        r59 = $r5;

     label04:
        goto label06;

     label05:
        $r53 := @caughtexception;

        $r54 = new org.apache.http.ProtocolException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid redirect URI: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r58, $r53);

        throw $r54;

     label06:
        $r6 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        $z1 = virtualinvoke $r5.<java.net.URI: boolean isAbsolute()>();

        if $z1 != 0 goto label12;

        $z4 = interfaceinvoke $r6.<org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>("http.protocol.reject-relative-redirect");

        if $z4 == 0 goto label07;

        $r27 = new org.apache.http.ProtocolException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative redirect location \'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label07:
        $r20 = interfaceinvoke r7.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r60 = (org.apache.http.HttpHost) $r20;

        if r60 != null goto label08;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Target host not available in the HTTP context");

        throw $r26;

     label08:
        $r21 = interfaceinvoke r7.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request");

        r61 = (org.apache.http.HttpRequest) $r21;

     label09:
        $r22 = new java.net.URI;

        $r23 = interfaceinvoke r61.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r24 = interfaceinvoke $r23.<org.apache.http.RequestLine: java.lang.String getUri()>();

        specialinvoke $r22.<java.net.URI: void <init>(java.lang.String)>($r24);

        $r25 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>($r22, r60, 1);

        r59 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>($r25, $r5);

     label10:
        goto label12;

     label11:
        $r50 := @caughtexception;

        $r51 = new org.apache.http.ProtocolException;

        $r52 = virtualinvoke $r50.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r51.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r52, $r50);

        throw $r51;

     label12:
        $z2 = interfaceinvoke $r6.<org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>("http.protocol.allow-circular-redirects");

        if $z2 == 0 goto label20;

        $r8 = interfaceinvoke r7.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.protocol.redirect-locations");

        r62 = (org.apache.http.impl.client.RedirectLocations) $r8;

        if r62 != null goto label13;

        $r19 = new org.apache.http.impl.client.RedirectLocations;

        specialinvoke $r19.<org.apache.http.impl.client.RedirectLocations: void <init>()>();

        r62 = $r19;

        interfaceinvoke r7.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.protocol.redirect-locations", $r19);

     label13:
        $r9 = virtualinvoke r59.<java.net.URI: java.lang.String getFragment()>();

        if $r9 == null goto label17;

     label14:
        $r16 = new org.apache.http.HttpHost;

        $r17 = virtualinvoke r59.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r59.<java.net.URI: int getPort()>();

        $r18 = virtualinvoke r59.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke $r16.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r17, $i0, $r18);

        r63 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>(r59, $r16, 1);

     label15:
        goto label18;

     label16:
        $r47 := @caughtexception;

        $r48 = new org.apache.http.ProtocolException;

        $r49 = virtualinvoke $r47.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r48.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r49, $r47);

        throw $r48;

     label17:
        r63 = r59;

     label18:
        $z3 = virtualinvoke r62.<org.apache.http.impl.client.RedirectLocations: boolean contains(java.net.URI)>(r63);

        if $z3 == 0 goto label19;

        $r10 = new org.apache.http.client.CircularRedirectException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Circular redirect to \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r63);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.http.client.CircularRedirectException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label19:
        virtualinvoke r62.<org.apache.http.impl.client.RedirectLocations: void add(java.net.URI)>(r63);

     label20:
        return r59;

        catch java.net.URISyntaxException from label03 to label04 with label05;
        catch java.net.URISyntaxException from label09 to label10 with label11;
        catch java.net.URISyntaxException from label14 to label15 with label16;
    }

    public static void <clinit>()
    {
        <org.apache.http.impl.client.DefaultRedirectHandler: java.lang.String REDIRECT_LOCATIONS> = "http.protocol.redirect-locations";

        return;
    }
}
