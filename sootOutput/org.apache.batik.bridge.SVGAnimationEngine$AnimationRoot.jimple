public class org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot extends org.apache.batik.anim.timing.TimedDocumentRoot
{
    private final org.apache.batik.bridge.SVGAnimationEngine this$0;

    public void <init>(org.apache.batik.bridge.SVGAnimationEngine)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        org.apache.batik.bridge.SVGAnimationEngine r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r1 := @parameter0: org.apache.batik.bridge.SVGAnimationEngine;

        $z0 = r1.<org.apache.batik.bridge.SVGAnimationEngine: boolean isSVG12>;

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $z1 = r1.<org.apache.batik.bridge.SVGAnimationEngine: boolean isSVG12>;

        specialinvoke r0.<org.apache.batik.anim.timing.TimedDocumentRoot: void <init>(boolean,boolean)>($z2, $z1);

        r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0> = r1;

        return;
    }

    protected java.lang.String getEventNamespaceURI(java.lang.String)
    {
        java.util.Set $r3;
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        org.apache.batik.bridge.SVGAnimationEngine $r1;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $z0 = $r1.<org.apache.batik.bridge.SVGAnimationEngine: boolean isSVG12>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("focusin");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("focusout");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("activate");

        if $z3 != 0 goto label2;

        $r3 = <org.apache.batik.bridge.SVGAnimationEngine: java.util.Set animationEventNames12>;

        $z4 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z4 == 0 goto label3;

     label2:
        return "http://www.w3.org/2001/xml-events";

     label3:
        return null;
    }

    protected java.lang.String getEventType(java.lang.String)
    {
        java.util.Set $r3, $r4;
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r1;
        org.apache.batik.bridge.SVGAnimationEngine $r2;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r1 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("focusin");

        if $z0 == 0 goto label1;

        return "DOMFocusIn";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("focusout");

        if $z1 == 0 goto label2;

        return "DOMFocusOut";

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("activate");

        if $z2 == 0 goto label3;

        return "DOMActivate";

     label3:
        $r2 = r1.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $z3 = $r2.<org.apache.batik.bridge.SVGAnimationEngine: boolean isSVG12>;

        if $z3 == 0 goto label4;

        $r4 = <org.apache.batik.bridge.SVGAnimationEngine: java.util.Set animationEventNames12>;

        $z5 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z5 == 0 goto label5;

        return r0;

     label4:
        $r3 = <org.apache.batik.bridge.SVGAnimationEngine: java.util.Set animationEventNames11>;

        $z4 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        return r0;

     label5:
        return null;
    }

    protected java.lang.String getRepeatEventName()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        return "repeatEvent";
    }

    protected void fireTimeEvent(java.lang.String, java.util.Calendar, int)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        java.util.Calendar r4;
        org.apache.batik.bridge.SVGAnimationEngine $r1;
        org.w3c.dom.events.EventTarget $r5;
        org.w3c.dom.Document $r2;
        int i0;
        java.lang.String r3;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Calendar;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r2 = staticinvoke <org.apache.batik.bridge.SVGAnimationEngine: org.w3c.dom.Document access$001(org.apache.batik.bridge.SVGAnimationEngine)>($r1);

        $r5 = (org.w3c.dom.events.EventTarget) $r2;

        staticinvoke <org.apache.batik.bridge.AnimationSupport: void fireTimeEvent(org.w3c.dom.events.EventTarget,java.lang.String,java.util.Calendar,int)>($r5, r3, r4, i0);

        return;
    }

    protected void toActive(float)
    {
        float f0;
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        f0 := @parameter0: float;

        return;
    }

    protected void toInactive(boolean, boolean)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        return;
    }

    protected void removeFill()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        return;
    }

    protected void sampledAt(float, float, int)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        int i0;
        float f0, f1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        return;
    }

    protected void sampledLastValue(int)
    {
        int i0;
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        i0 := @parameter0: int;

        return;
    }

    protected org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r1;
        org.apache.batik.bridge.SVGAnimationEngine $r2;
        org.apache.batik.anim.timing.TimedElement $r4;
        org.w3c.dom.Document $r3;
        java.lang.String r0;

        r1 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r3 = staticinvoke <org.apache.batik.bridge.SVGAnimationEngine: org.w3c.dom.Document access$101(org.apache.batik.bridge.SVGAnimationEngine)>($r2);

        $r4 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String,org.w3c.dom.Node)>(r0, $r3);

        return $r4;
    }

    protected org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r1;
        org.apache.batik.bridge.SVGAnimationEngine $r2;
        org.w3c.dom.events.EventTarget $r4;
        org.w3c.dom.Document $r3;
        java.lang.String r0;

        r1 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r3 = staticinvoke <org.apache.batik.bridge.SVGAnimationEngine: org.w3c.dom.Document access$201(org.apache.batik.bridge.SVGAnimationEngine)>($r2);

        $r4 = staticinvoke <org.apache.batik.bridge.AnimationSupport: org.w3c.dom.events.EventTarget getEventTargetById(java.lang.String,org.w3c.dom.Node)>(r0, $r3);

        return $r4;
    }

    protected org.w3c.dom.events.EventTarget getAnimationEventTarget()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        return null;
    }

    protected org.w3c.dom.events.EventTarget getRootEventTarget()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        org.apache.batik.bridge.SVGAnimationEngine $r1;
        org.w3c.dom.events.EventTarget $r3;
        org.w3c.dom.Document $r2;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r2 = staticinvoke <org.apache.batik.bridge.SVGAnimationEngine: org.w3c.dom.Document access$301(org.apache.batik.bridge.SVGAnimationEngine)>($r1);

        $r3 = (org.w3c.dom.events.EventTarget) $r2;

        return $r3;
    }

    public org.w3c.dom.Element getElement()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        return null;
    }

    public boolean isBefore(org.apache.batik.anim.timing.TimedElement)
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        org.apache.batik.anim.timing.TimedElement r1;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        return 0;
    }

    protected void currentIntervalWillUpdate()
    {
        org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot r0;
        org.apache.batik.bridge.SVGAnimationEngine $r1, $r3;
        org.apache.batik.bridge.SVGAnimationEngine$AnimationTickRunnable $r2, $r4;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot;

        $r1 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r2 = $r1.<org.apache.batik.bridge.SVGAnimationEngine: org.apache.batik.bridge.SVGAnimationEngine$AnimationTickRunnable animationTickRunnable>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimationRoot: org.apache.batik.bridge.SVGAnimationEngine this$0>;

        $r4 = $r3.<org.apache.batik.bridge.SVGAnimationEngine: org.apache.batik.bridge.SVGAnimationEngine$AnimationTickRunnable animationTickRunnable>;

        virtualinvoke $r4.<org.apache.batik.bridge.SVGAnimationEngine$AnimationTickRunnable: void resume()>();

     label1:
        return;
    }
}
