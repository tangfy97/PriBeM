public class org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor extends org.apache.cxf.interceptor.AbstractInDatabindingInterceptor
{
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>()
    {
        org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor r0;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor;

        specialinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor: void <init>(java.lang.String)>("unmarshal");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor r0;
        java.lang.Class $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: void <init>(java.lang.String)>(r1);

        $r2 = class "Lorg/apache/cxf/interceptor/ClientFaultConverter;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor: void addBefore(java.lang.String)>($r3);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.binding.xml.XMLFault $r5;
        java.lang.Object[] $r11, $r16;
        org.apache.cxf.common.i18n.Message $r10, $r15;
        org.apache.cxf.staxutils.FragmentStreamReader $r6;
        org.apache.cxf.interceptor.Fault $r9, $r14;
        java.util.ResourceBundle $r12, $r17;
        javax.xml.stream.XMLStreamReader r2;
        org.apache.cxf.staxutils.DepthXMLStreamReader $r3;
        org.w3c.dom.Document $r7;
        javax.xml.stream.XMLStreamException $r13;
        java.lang.String $r4;
        boolean $z0, $z1;
        org.apache.cxf.message.Message r0;
        org.w3c.dom.Element $r8;
        org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor r18;
        java.lang.Object $r1;

        r18 := @this: org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        r2 = (javax.xml.stream.XMLStreamReader) $r1;

        $r3 = new org.apache.cxf.staxutils.DepthXMLStreamReader;

        specialinvoke $r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: void <init>(javax.xml.stream.XMLStreamReader)>(r2);

     label1:
        virtualinvoke $r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: int nextTag()>();

        $z0 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>($r3);

        if $z0 != 0 goto label2;

        $r9 = new org.apache.cxf.interceptor.Fault;

        $r10 = new org.apache.cxf.common.i18n.Message;

        $r12 = <org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor: java.util.ResourceBundle BUNDLE>;

        $r11 = newarray (java.lang.Object)[0];

        specialinvoke $r10.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("ILLEGAL_XMLFAULT_FORMAT", $r12, $r11);

        specialinvoke $r9.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r10);

        throw $r9;

     label2:
        $r4 = virtualinvoke $r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: java.lang.String getElementText()>();

        $r5 = new org.apache.cxf.binding.xml.XMLFault;

        specialinvoke $r5.<org.apache.cxf.binding.xml.XMLFault: void <init>(java.lang.String)>($r4);

        virtualinvoke $r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: int nextTag()>();

        $z1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>($r3);

        if $z1 == 0 goto label3;

        $r6 = new org.apache.cxf.staxutils.FragmentStreamReader;

        specialinvoke $r6.<org.apache.cxf.staxutils.FragmentStreamReader: void <init>(javax.xml.stream.XMLStreamReader)>($r3);

        $r7 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)>($r6);

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        virtualinvoke $r5.<org.apache.cxf.interceptor.Fault: void setDetail(org.w3c.dom.Element)>($r8);

     label3:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Exception;", $r5);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new org.apache.cxf.interceptor.Fault;

        $r15 = new org.apache.cxf.common.i18n.Message;

        $r17 = <org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor: java.util.ResourceBundle BUNDLE>;

        $r16 = newarray (java.lang.Object)[0];

        specialinvoke $r15.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STAX_READ_EXC", $r17, $r16);

        specialinvoke $r14.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message)>($r15);

        throw $r14;

     label6:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/binding/xml/interceptor/XMLFaultInInterceptor;");

        <org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
