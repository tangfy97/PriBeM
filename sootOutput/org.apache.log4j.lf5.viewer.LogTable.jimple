public class org.apache.log4j.lf5.viewer.LogTable extends javax.swing.JTable
{
    private static final long serialVersionUID;
    protected int _rowHeight;
    protected javax.swing.JTextArea _detailTextArea;
    protected int _numCols;
    protected javax.swing.table.TableColumn[] _tableColumns;
    protected int[] _colWidths;
    protected org.apache.log4j.lf5.viewer.LogTableColumn[] _colNames;
    protected int _colDate;
    protected int _colThread;
    protected int _colMessageNum;
    protected int _colLevel;
    protected int _colNDC;
    protected int _colCategory;
    protected int _colMessage;
    protected int _colLocation;
    protected int _colThrown;
    protected org.apache.log4j.lf5.util.DateFormatManager _dateFormatManager;

    public void <init>(javax.swing.JTextArea)
    {
        javax.swing.ListSelectionModel $r8;
        javax.swing.table.TableColumnModel $r6;
        java.util.Enumeration $r7;
        org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener $r9;
        int[] $r2, $r12;
        org.apache.log4j.lf5.viewer.LogTable r0;
        int $i0, $i1, i2;
        boolean $z0;
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r5;
        javax.swing.table.TableColumn r14;
        org.apache.log4j.lf5.viewer.LogTableRowRenderer $r11;
        javax.swing.table.TableColumn[] $r1, $r13;
        java.lang.Object $r10;
        javax.swing.JTextArea r4;
        org.apache.log4j.lf5.viewer.LogTableColumn[] $r3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        r4 := @parameter0: javax.swing.JTextArea;

        specialinvoke r0.<javax.swing.JTable: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _rowHeight> = 30;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _numCols> = 9;

        $i0 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _numCols>;

        $r1 = newarray (javax.swing.table.TableColumn)[$i0];

        r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns> = $r1;

        $r2 = newarray (int)[9];

        $r2[0] = 40;

        $r2[1] = 40;

        $r2[2] = 40;

        $r2[3] = 70;

        $r2[4] = 70;

        $r2[5] = 360;

        $r2[6] = 440;

        $r2[7] = 200;

        $r2[8] = 60;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int[] _colWidths> = $r2;

        $r3 = staticinvoke <org.apache.log4j.lf5.viewer.LogTableColumn: org.apache.log4j.lf5.viewer.LogTableColumn[] getLogTableColumnArray()>();

        r0.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.LogTableColumn[] _colNames> = $r3;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colDate> = 0;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colThread> = 1;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colMessageNum> = 2;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colLevel> = 3;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colNDC> = 4;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colCategory> = 5;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colMessage> = 6;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colLocation> = 7;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _colThrown> = 8;

        r0.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.util.DateFormatManager _dateFormatManager> = null;

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogTable: void init()>();

        r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.JTextArea _detailTextArea> = r4;

        $r5 = new org.apache.log4j.lf5.viewer.FilteredLogTableModel;

        specialinvoke $r5.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void <init>()>();

        virtualinvoke r0.<javax.swing.JTable: void setModel(javax.swing.table.TableModel)>($r5);

        $r6 = virtualinvoke r0.<javax.swing.JTable: javax.swing.table.TableColumnModel getColumnModel()>();

        $r7 = interfaceinvoke $r6.<javax.swing.table.TableColumnModel: java.util.Enumeration getColumns()>();

        i2 = 0;

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r14 = (javax.swing.table.TableColumn) $r10;

        $r11 = new org.apache.log4j.lf5.viewer.LogTableRowRenderer;

        specialinvoke $r11.<org.apache.log4j.lf5.viewer.LogTableRowRenderer: void <init>()>();

        virtualinvoke r14.<javax.swing.table.TableColumn: void setCellRenderer(javax.swing.table.TableCellRenderer)>($r11);

        $r12 = r0.<org.apache.log4j.lf5.viewer.LogTable: int[] _colWidths>;

        $i1 = $r12[i2];

        virtualinvoke r14.<javax.swing.table.TableColumn: void setPreferredWidth(int)>($i1);

        $r13 = r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns>;

        $r13[i2] = r14;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r0.<javax.swing.JTable: javax.swing.ListSelectionModel getSelectionModel()>();

        $r9 = new org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener;

        specialinvoke $r9.<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void <init>(org.apache.log4j.lf5.viewer.LogTable,javax.swing.JTable)>(r0, r0);

        interfaceinvoke $r8.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r9);

        return;
    }

    public org.apache.log4j.lf5.util.DateFormatManager getDateFormatManager()
    {
        org.apache.log4j.lf5.viewer.LogTable r0;
        org.apache.log4j.lf5.util.DateFormatManager $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $r1 = r0.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.util.DateFormatManager _dateFormatManager>;

        return $r1;
    }

    public void setDateFormatManager(org.apache.log4j.lf5.util.DateFormatManager)
    {
        org.apache.log4j.lf5.viewer.LogTable r0;
        org.apache.log4j.lf5.util.DateFormatManager r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        r1 := @parameter0: org.apache.log4j.lf5.util.DateFormatManager;

        r0.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.util.DateFormatManager _dateFormatManager> = r1;

        return;
    }

    public synchronized void clearLogRecords()
    {
        org.apache.log4j.lf5.viewer.LogTable r0;
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()>();

        virtualinvoke $r1.<org.apache.log4j.lf5.viewer.FilteredLogTableModel: void clear()>();

        return;
    }

    public org.apache.log4j.lf5.viewer.FilteredLogTableModel getFilteredLogTableModel()
    {
        org.apache.log4j.lf5.viewer.LogTable r0;
        org.apache.log4j.lf5.viewer.FilteredLogTableModel $r2;
        javax.swing.table.TableModel $r1;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $r1 = virtualinvoke r0.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        $r2 = (org.apache.log4j.lf5.viewer.FilteredLogTableModel) $r1;

        return $r2;
    }

    public void setDetailedView()
    {
        javax.swing.table.TableColumnModel $r1;
        javax.swing.table.TableColumn $r3, $r5;
        javax.swing.table.TableColumn[] $r2, $r4;
        org.apache.log4j.lf5.viewer.LogTable r0;
        int $i0, $i1, i2, i3, $i5;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $r1 = virtualinvoke r0.<javax.swing.JTable: javax.swing.table.TableColumnModel getColumnModel()>();

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _numCols>;

        if i2 >= $i0 goto label2;

        $r4 = r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns>;

        $r5 = $r4[i2];

        interfaceinvoke $r1.<javax.swing.table.TableColumnModel: void removeColumn(javax.swing.table.TableColumn)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i1 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _numCols>;

        if i3 >= $i1 goto label4;

        $r2 = r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns>;

        $r3 = $r2[i3];

        interfaceinvoke $r1.<javax.swing.table.TableColumnModel: void addColumn(javax.swing.table.TableColumn)>($r3);

        i3 = i3 + 1;

        goto label3;

     label4:
        $i5 = (int) -1;

        virtualinvoke r0.<javax.swing.JTable: void sizeColumnsToFit(int)>($i5);

        return;
    }

    public void setView(java.util.List)
    {
        javax.swing.table.TableColumnModel $r1;
        java.util.Iterator $r3;
        javax.swing.table.TableColumn $r7, $r9;
        java.util.List r2;
        java.util.Vector $r4;
        javax.swing.table.TableColumn[] $r5, $r8;
        org.apache.log4j.lf5.viewer.LogTable r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        r2 := @parameter0: java.util.List;

        $r1 = virtualinvoke r0.<javax.swing.JTable: javax.swing.table.TableColumnModel getColumnModel()>();

        i2 = 0;

     label1:
        $i0 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _numCols>;

        if i2 >= $i0 goto label2;

        $r8 = r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns>;

        $r9 = $r8[i2];

        interfaceinvoke $r1.<javax.swing.table.TableColumnModel: void removeColumn(javax.swing.table.TableColumn)>($r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        $r4 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogTable: java.util.Vector getColumnNameAndNumber()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.log4j.lf5.viewer.LogTable: javax.swing.table.TableColumn[] _tableColumns>;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i1 = virtualinvoke $r4.<java.util.Vector: int indexOf(java.lang.Object)>($r6);

        $r7 = $r5[$i1];

        interfaceinvoke $r1.<javax.swing.table.TableColumnModel: void addColumn(javax.swing.table.TableColumn)>($r7);

        goto label3;

     label4:
        $i4 = (int) -1;

        virtualinvoke r0.<javax.swing.JTable: void sizeColumnsToFit(int)>($i4);

        return;
    }

    public void setFont(java.awt.Font)
    {
        java.awt.Font r1;
        java.awt.FontMetrics $r3;
        org.apache.log4j.lf5.viewer.LogTable r0;
        java.awt.Graphics $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        r1 := @parameter0: java.awt.Font;

        specialinvoke r0.<javax.swing.JComponent: void setFont(java.awt.Font)>(r1);

        $r2 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Graphics getGraphics()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r1);

        $i0 = virtualinvoke $r3.<java.awt.FontMetrics: int getHeight()>();

        $i1 = $i0 / 3;

        $i2 = $i0 + $i1;

        r0.<org.apache.log4j.lf5.viewer.LogTable: int _rowHeight> = $i2;

        $i3 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _rowHeight>;

        virtualinvoke r0.<javax.swing.JTable: void setRowHeight(int)>($i3);

     label1:
        return;
    }

    protected void init()
    {
        org.apache.log4j.lf5.viewer.LogTable r0;
        int $i0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $i0 = r0.<org.apache.log4j.lf5.viewer.LogTable: int _rowHeight>;

        virtualinvoke r0.<javax.swing.JTable: void setRowHeight(int)>($i0);

        virtualinvoke r0.<javax.swing.JTable: void setSelectionMode(int)>(0);

        return;
    }

    protected java.util.Vector getColumnNameAndNumber()
    {
        java.util.Vector $r0;
        org.apache.log4j.lf5.viewer.LogTable r1;
        int $i0, i1;
        org.apache.log4j.lf5.viewer.LogTableColumn[] $r2, $r3;
        org.apache.log4j.lf5.viewer.LogTableColumn $r4;

        r1 := @this: org.apache.log4j.lf5.viewer.LogTable;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.LogTableColumn[] _colNames>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r1.<org.apache.log4j.lf5.viewer.LogTable: org.apache.log4j.lf5.viewer.LogTableColumn[] _colNames>;

        $r4 = $r3[i1];

        virtualinvoke $r0.<java.util.Vector: void add(int,java.lang.Object)>(i1, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.lf5.viewer.LogTable: long serialVersionUID> = 4867085140195148458L;

        return;
    }
}
