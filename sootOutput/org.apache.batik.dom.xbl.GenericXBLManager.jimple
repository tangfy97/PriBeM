public class org.apache.batik.dom.xbl.GenericXBLManager extends java.lang.Object implements org.apache.batik.dom.xbl.XBLManager
{
    protected boolean isProcessing;

    public void <init>()
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void startProcessing()
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0.<org.apache.batik.dom.xbl.GenericXBLManager: boolean isProcessing> = 1;

        return;
    }

    public void stopProcessing()
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0.<org.apache.batik.dom.xbl.GenericXBLManager: boolean isProcessing> = 0;

        return;
    }

    public boolean isProcessing()
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        $z0 = r0.<org.apache.batik.dom.xbl.GenericXBLManager: boolean isProcessing>;

        return $z0;
    }

    public org.w3c.dom.Node getXblParentNode(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.Node r0, $r1;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        return $r1;
    }

    public org.w3c.dom.NodeList getXblChildNodes(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Node r0;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        return $r1;
    }

    public org.w3c.dom.NodeList getXblScopedChildNodes(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Node r0;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        return $r1;
    }

    public org.w3c.dom.Node getXblFirstChild(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.Node r0, $r1;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        return $r1;
    }

    public org.w3c.dom.Node getXblLastChild(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.Node r0, $r1;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        return $r1;
    }

    public org.w3c.dom.Node getXblPreviousSibling(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.Node r0, $r1;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        return $r1;
    }

    public org.w3c.dom.Node getXblNextSibling(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        org.w3c.dom.Node r0, $r1;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        return $r1;
    }

    public org.w3c.dom.Element getXblFirstElementChild(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        short $s0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Node r0, r3;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label2;

     label1:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label2:
        if r3 == null goto label3;

        $s0 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

     label3:
        $r1 = (org.w3c.dom.Element) r3;

        return $r1;
    }

    public org.w3c.dom.Element getXblLastElementChild(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r2;
        short $s0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Node r0, r3;

        r2 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>();

        goto label2;

     label1:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label2:
        if r3 == null goto label3;

        $s0 = interfaceinvoke r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

     label3:
        $r1 = (org.w3c.dom.Element) r3;

        return $r1;
    }

    public org.w3c.dom.Element getXblPreviousElementSibling(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r3;
        short $s0;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node r0, $r1, r4;

        r3 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        r4 = r0;

     label1:
        $r1 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        r4 = $r1;

        if $r1 == null goto label2;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

     label2:
        $r2 = (org.w3c.dom.Element) $r1;

        return $r2;
    }

    public org.w3c.dom.Element getXblNextElementSibling(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r3;
        short $s0;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node r0, $r1, r4;

        r3 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r0 := @parameter0: org.w3c.dom.Node;

        r4 = r0;

     label1:
        $r1 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        r4 = $r1;

        if $r1 == null goto label2;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

     label2:
        $r2 = (org.w3c.dom.Element) $r1;

        return $r2;
    }

    public org.w3c.dom.Element getXblBoundElement(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r1 := @parameter0: org.w3c.dom.Node;

        return null;
    }

    public org.w3c.dom.Element getXblShadowTree(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r1 := @parameter0: org.w3c.dom.Node;

        return null;
    }

    public org.w3c.dom.NodeList getXblDefinitions(org.w3c.dom.Node)
    {
        org.apache.batik.dom.xbl.GenericXBLManager r1;
        org.w3c.dom.NodeList $r0;
        org.w3c.dom.Node r2;

        r1 := @this: org.apache.batik.dom.xbl.GenericXBLManager;

        r2 := @parameter0: org.w3c.dom.Node;

        $r0 = <org.apache.batik.dom.AbstractNode: org.w3c.dom.NodeList EMPTY_NODE_LIST>;

        return $r0;
    }
}
