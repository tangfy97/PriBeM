public abstract class groovy.swing.factory.SwingBorderFactory extends groovy.util.AbstractFactory implements groovy.lang.GroovyObject
{
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696994;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$RuntimeException;

    public void <init>()
    {
        groovy.lang.MetaClass $r9, $r11;
        java.lang.Object[] $r6;
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r12, $r13, $r14;
        java.lang.Object $r7, $r8, $r10;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        specialinvoke r0.<groovy.util.AbstractFactory: void <init>()>();

        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r12 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        r2 = $r12;

        $r3 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label3;

        $r13 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r4 = $r13;

        $r5 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label5;

        $r14 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r14;

        goto label6;

     label5:
        $r14 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r14, "initMetaClass", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, r4);

        $r9 = (groovy.lang.MetaClass) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, r4);

        $r11 = (groovy.lang.MetaClass) $r10;

        r0.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass metaClass> = $r11;

        return;
    }

    public boolean isLeaf()
    {
        groovy.swing.factory.SwingBorderFactory r6;
        java.lang.Boolean $r3, $r5;
        java.lang.Class $r0, $r1, $r2, $r7, $r8, $r9;
        java.lang.Object $r4;
        boolean $z0;

        r6 := @this: groovy.swing.factory.SwingBorderFactory;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean>;

        if $r2 != null goto label5;

        $r9 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        return $z0;
    }

    public boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r7;
        groovy.swing.factory.SwingBorderFactory r6;
        java.util.Map r9;
        java.lang.Boolean $r3, $r5;
        java.lang.Class $r0, $r1, $r2, $r10, $r11, $r12;
        java.lang.Object $r4, r8;
        boolean $z0;

        r6 := @this: groovy.swing.factory.SwingBorderFactory;

        r7 := @parameter0: groovy.util.FactoryBuilderSupport;

        r8 := @parameter1: java.lang.Object;

        r9 := @parameter2: java.util.Map;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r10 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r10;

        goto label2;

     label1:
        $r10 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r11 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r11;

        goto label4;

     label3:
        $r11 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r2 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean>;

        if $r2 != null goto label5;

        $r12 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean> = $r12;

        goto label6;

     label5:
        $r12 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r12);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        return $z0;
    }

    public void setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r8, $r12, $r15;
        boolean $z0, $z1, $z2;
        groovy.util.FactoryBuilderSupport r3;
        groovy.swing.factory.SwingBorderFactory r11;
        java.lang.Class $r0, r1, $r2, $r7, $r16, $r17, $r18;
        java.lang.Object $r4, $r5, r6, $r9, $r13, r14;

        r11 := @this: groovy.swing.factory.SwingBorderFactory;

        r3 := @parameter0: groovy.util.FactoryBuilderSupport;

        r6 := @parameter1: java.lang.Object;

        r14 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r16 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r16;

        goto label02;

     label01:
        $r16 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label02:
        r1 = $r16;

        $r2 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r17 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label04;

     label03:
        $r17 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "context");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "applyBorderToParent");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z0 == 0 goto label10;

        $z1 = r6 instanceof javax.swing.JComponent;

        if $z1 == 0 goto label05;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r14;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r6, "setBorder", $r15);

        goto label09;

     label05:
        $z2 = r6 instanceof javax.swing.RootPaneContainer;

        if $z2 == 0 goto label06;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = r3;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "contentPane");

        $r12[1] = $r13;

        $r12[2] = r14;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r11, "setParent", $r12);

        goto label09;

     label06:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r7 != null goto label07;

        $r18 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$RuntimeException> = $r18;

        goto label08;

     label07:
        $r18 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$java$lang$RuntimeException>;

     label08:
        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "Border cannot be applied to parent, it is neither a JComponent or a RootPaneContainer";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r18, $r8);

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;

     label09:
        goto label10;

     label10:
        return;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        groovy.swing.factory.SwingBorderFactory r4;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.swing.factory.SwingBorderFactory;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.swing.factory.SwingBorderFactory r2;
        groovy.lang.MetaClass r3;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: groovy.swing.factory.SwingBorderFactory;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.SwingBorderFactory r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.SwingBorderFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.SwingBorderFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.SwingBorderFactory;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.SwingBorderFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.SwingBorderFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.SwingBorderFactory");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.SwingBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696994L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.SwingBorderFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.SwingBorderFactory: java.lang.Long __timeStamp__239_neverHappen1239119696994> = $r5;

        return;
    }

    void super$1$wait()
    {
        groovy.swing.factory.SwingBorderFactory r0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.String $r1;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$2$isLeaf()
    {
        groovy.swing.factory.SwingBorderFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        groovy.swing.factory.SwingBorderFactory r0;
        long l0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.SwingBorderFactory r0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Class $r1;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.SwingBorderFactory r0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.SwingBorderFactory r0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        groovy.swing.factory.SwingBorderFactory r0;
        long l0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.SwingBorderFactory r0;
        java.util.Map r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Object $r1;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        groovy.swing.factory.SwingBorderFactory r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.SwingBorderFactory r0;

        r0 := @this: groovy.swing.factory.SwingBorderFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
