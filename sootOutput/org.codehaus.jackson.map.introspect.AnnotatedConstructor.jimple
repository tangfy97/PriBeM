public final class org.codehaus.jackson.map.introspect.AnnotatedConstructor extends org.codehaus.jackson.map.introspect.AnnotatedWithParams
{
    protected final java.lang.reflect.Constructor _constructor;

    public void <init>(java.lang.reflect.Constructor, org.codehaus.jackson.map.introspect.AnnotationMap, org.codehaus.jackson.map.introspect.AnnotationMap[])
    {
        org.codehaus.jackson.map.introspect.AnnotationMap[] r2;
        java.lang.IllegalArgumentException $r4;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;
        java.lang.reflect.Constructor r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r3 := @parameter0: java.lang.reflect.Constructor;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter2: org.codehaus.jackson.map.introspect.AnnotationMap[];

        specialinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>(r1, r2);

        if r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null constructor not allowed");

        throw $r4;

     label1:
        r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor> = r3;

        return;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotationMap[] $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r0, r1;
        org.codehaus.jackson.map.introspect.AnnotationMap r2;
        java.lang.reflect.Constructor $r4;

        r1 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r0 = new org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r4 = r1.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r3 = r1.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotationMap[] _paramAnnotations>;

        specialinvoke $r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>($r4, r2, $r3);

        return $r0;
    }

    public java.lang.reflect.Constructor getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        return $r1;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Constructor: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.reflect.Type getGenericType()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getRawType()>();

        return $r1;
    }

    public java.lang.Class getRawType()
    {
        java.lang.Class $r2;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    {
        java.lang.reflect.TypeVariable[] $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.type.TypeBindings r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r1 := @parameter0: org.codehaus.jackson.map.type.TypeBindings;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings,java.lang.reflect.TypeVariable[])>(r1, $r3);

        return $r4;
    }

    public int getParameterCount()
    {
        int $i0;
        java.lang.Class[] $r2;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        return $i0;
    }

    public java.lang.Class getParameterClass(int)
    {
        int i0, $i1;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = $r2[i0];

     label2:
        return $r3;
    }

    public java.lang.reflect.Type getParameterType(int)
    {
        java.lang.reflect.Type $r3;
        java.lang.reflect.Type[] $r2;
        int i0, $i1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = $r2[i0];

     label2:
        return $r3;
    }

    public final java.lang.Object call() throws java.lang.Exception
    {
        java.lang.Object[] $r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r1);

        return $r3;
    }

    public final java.lang.Object call(java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object[] r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r1);

        return $r3;
    }

    public final java.lang.Object call1(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r1;
        java.lang.Object r2, $r4;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r1);

        return $r4;
    }

    public java.lang.Class getDeclaringClass()
    {
        java.lang.Class $r2;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public java.lang.reflect.Member getMember()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor _constructor>;

        return $r1;
    }

    public void setValue(java.lang.Object, java.lang.Object) throws java.lang.UnsupportedOperationException
    {
        java.lang.UnsupportedOperationException $r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r3;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.Class $r4;
        java.lang.Object r8, r9;
        java.lang.String $r5, $r7;

        r3 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r8 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot call setValue() on constructor of ");

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r2;
        org.codehaus.jackson.map.introspect.AnnotationMap $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r9;

        r2 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[constructor for ");

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", annotations: ");

        $r6 = r2.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotationMap _annotations>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.reflect.AnnotatedElement getAnnotated()
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        return $r1;
    }

    public volatile org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0, $r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)>(r1);

        return $r2;
    }
}
