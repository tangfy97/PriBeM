public final class org.apache.jena.atlas.io.InStreamUTF8 extends java.io.Reader implements org.apache.jena.atlas.io.CharStream
{
    private org.apache.jena.atlas.io.InputStreamBuffered input;

    public void <init>(java.io.InputStream)
    {
        org.apache.jena.atlas.io.InputStreamBuffered $r2, $r3;
        org.apache.jena.atlas.io.InStreamUTF8 r0;
        java.io.InputStream r1;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        $z0 = r1 instanceof org.apache.jena.atlas.io.InputStreamBuffered;

        if $z0 == 0 goto label1;

        $r3 = (org.apache.jena.atlas.io.InputStreamBuffered) r1;

        r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input> = $r3;

        return;

     label1:
        $r2 = new org.apache.jena.atlas.io.InputStreamBuffered;

        specialinvoke $r2.<org.apache.jena.atlas.io.InputStreamBuffered: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input> = $r2;

        return;
    }

    public void <init>(org.apache.jena.atlas.io.InputStreamBuffered)
    {
        org.apache.jena.atlas.io.InputStreamBuffered r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        r1 := @parameter0: org.apache.jena.atlas.io.InputStreamBuffered;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input> = r1;

        return;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.jena.atlas.io.InputStreamBuffered $r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        $r1 = r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.InputStreamBuffered: int available()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.jena.atlas.io.InputStreamBuffered $r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        $r1 = r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.InputStreamBuffered: void close()>();

        return;
    }

    public void closeStream()
    {
        org.apache.jena.atlas.io.InputStreamBuffered $r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        $r1 = r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input>;

        staticinvoke <org.apache.jena.atlas.io.IO: void close(java.io.Closeable)>($r1);

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        char $c4;
        org.apache.jena.atlas.io.InStreamUTF8 r0;
        int i0, i1, $i2, $i3, $i5, i6, $i8, $i10;
        char[] r1;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i6 = i0;

     label1:
        $i2 = i0 + i1;

        if i6 >= $i2 goto label4;

        $i3 = virtualinvoke r0.<org.apache.jena.atlas.io.InStreamUTF8: int read()>();

        $i8 = (int) -1;

        if $i3 != $i8 goto label3;

        if i6 != i0 goto label2;

        $i10 = (int) -1;

        return $i10;

     label2:
        $i5 = i6 - i0;

        return $i5;

     label3:
        $c4 = (char) $i3;

        r1[i6] = $c4;

        i6 = i6 + 1;

        goto label1;

     label4:
        return i1;
    }

    public final int read() throws java.io.IOException
    {
        int $i0;
        org.apache.jena.atlas.io.InputStreamBuffered $r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        $r1 = r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input>;

        $i0 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int advance(org.apache.jena.atlas.io.InputStreamBuffered)>($r1);

        return $i0;
    }

    public final int advance()
    {
        int $i0;
        org.apache.jena.atlas.io.InputStreamBuffered $r1;
        org.apache.jena.atlas.io.InStreamUTF8 r0;

        r0 := @this: org.apache.jena.atlas.io.InStreamUTF8;

        $r1 = r0.<org.apache.jena.atlas.io.InStreamUTF8: org.apache.jena.atlas.io.InputStreamBuffered input>;

        $i0 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int advance(org.apache.jena.atlas.io.InputStreamBuffered)>($r1);

        return $i0;
    }

    public static final int advance(org.apache.jena.atlas.io.InputStreamBuffered)
    {
        org.apache.jena.atlas.io.InputStreamBuffered r0;
        int $i0, $i1, $i3, $i5;

        r0 := @parameter0: org.apache.jena.atlas.io.InputStreamBuffered;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.io.InputStreamBuffered: int advance()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $i1 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int advance(org.apache.jena.atlas.io.InputStreamBuffered,int)>(r0, $i0);

        return $i1;
    }

    public static final int advance(org.apache.jena.atlas.io.InputStreamBuffered, int)
    {
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11, $i13, $i15;
        java.lang.String $r4, $r8;
        boolean $z0;
        java.io.IOException $r12;
        org.apache.jena.atlas.AtlasException $r13, $r14;
        org.apache.jena.atlas.io.InputStreamBuffered r10;
        java.lang.StringBuilder $r2, $r3, $r11;

        r10 := @parameter0: org.apache.jena.atlas.io.InputStreamBuffered;

        i0 := @parameter1: int;

        $i11 = (int) -1;

        if i0 == $i11 goto label1;

        if i0 > 127 goto label2;

     label1:
        return i0;

     label2:
        $i1 = i0 & 224;

        if $i1 != 192 goto label3;

        $i7 = i0 & 31;

        $i8 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int readMultiBytes(org.apache.jena.atlas.io.InputStreamBuffered,int,int)>(r10, $i7, 2);

        return $i8;

     label3:
        $i2 = i0 & 240;

        if $i2 != 224 goto label4;

        $i5 = i0 & 15;

        $i6 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int readMultiBytes(org.apache.jena.atlas.io.InputStreamBuffered,int,int)>(r10, $i5, 3);

        return $i6;

     label4:
        $i13 = (int) -2;

        i9 = $i13;

        $i3 = i0 & 248;

        if $i3 != 240 goto label5;

        $i4 = i0 & 8;

        i9 = staticinvoke <org.apache.jena.atlas.io.InStreamUTF8: int readMultiBytes(org.apache.jena.atlas.io.InputStreamBuffered,int,int)>(r10, $i4, 4);

        goto label6;

     label5:
        $r12 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal UTF-8: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r4);

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r12);

     label6:
        $i15 = (int) 65535;

        if i9 <= $i15 goto label7;

        $r13 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r13.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>("Out of range character (must use a surrogate pair)");

        throw $r13;

     label7:
        $z0 = staticinvoke <java.lang.Character: boolean isDefined(int)>(i9);

        if $z0 != 0 goto label8;

        $r14 = new org.apache.jena.atlas.AtlasException;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Undefined codepoint: 0x%04X", $r6);

        specialinvoke $r14.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>($r8);

        throw $r14;

     label8:
        return i9;
    }

    private static int readMultiBytes(org.apache.jena.atlas.io.InputStreamBuffered, int, int)
    {
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i10;
        java.lang.String $r4;
        org.apache.jena.atlas.AtlasException $r6, $r7;
        org.apache.jena.atlas.io.InputStreamBuffered r0;

        r0 := @parameter0: org.apache.jena.atlas.io.InputStreamBuffered;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i7 = i0;

        i8 = 0;

     label1:
        $i2 = i1 - 1;

        if i8 >= $i2 goto label4;

        $i3 = virtualinvoke r0.<org.apache.jena.atlas.io.InputStreamBuffered: int advance()>();

        $i10 = (int) -1;

        if $i3 != $i10 goto label2;

        $r6 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r6.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>("Premature end to UTF-8 sequence at end of input");

        throw $r6;

     label2:
        $i4 = $i3 & 192;

        if $i4 == 128 goto label3;

        $r7 = new org.apache.jena.atlas.AtlasException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Illegal UTF-8 processing character: 0x%04X", $r2);

        specialinvoke $r7.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label3:
        $i6 = i7 << 6;

        $i5 = $i3 & 63;

        i7 = $i6 | $i5;

        i8 = i8 + 1;

        goto label1;

     label4:
        return i7;
    }

    private static void p(int)
    {
        java.io.PrintStream $r1, $r3;
        java.lang.Object[] $r0;
        int i0, $i2;
        java.lang.Integer $r2;

        i0 := @parameter0: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r2;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" %02X", $r0);

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println()>();

     label1:
        return;
    }

    public static java.lang.String decode(byte[])
    {
        byte[] r0;
        java.io.IOException $r5;
        java.io.ByteArrayInputStream $r1;
        org.apache.jena.atlas.io.InStreamUTF8 $r3;
        int $i0, $i1;
        char[] r6;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @parameter0: byte[];

     label1:
        $i0 = lengthof r0;

        r6 = newarray (char)[$i0];

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = new org.apache.jena.atlas.io.InStreamUTF8;

        specialinvoke $r3.<org.apache.jena.atlas.io.InStreamUTF8: void <init>(java.io.InputStream)>($r1);

        $i1 = virtualinvoke $r3.<java.io.Reader: int read(char[])>(r6);

        staticinvoke <org.apache.jena.atlas.io.IO: void close(java.io.Closeable)>($r3);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r6, 0, $i1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.IO: void exception(java.io.IOException)>($r5);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
