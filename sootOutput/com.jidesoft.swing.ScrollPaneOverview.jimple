public class com.jidesoft.swing.ScrollPaneOverview extends javax.swing.JComponent
{
    private static final int MAX_SIZE;
    private static final int MAX_SCALE;
    private java.awt.Component _owner;
    private javax.swing.JScrollPane _scrollPane;
    private java.awt.Component _viewComponent;
    protected javax.swing.JPopupMenu _popupMenu;
    private java.awt.image.BufferedImage _image;
    private java.awt.Rectangle _startRectangle;
    private java.awt.Rectangle _rectangle;
    private java.awt.Point _startPoint;
    private double _scale;
    private int xOffset;
    private int yOffset;
    private java.awt.Color _selectionBorder;

    public void <init>(javax.swing.JScrollPane, java.awt.Component)
    {
        java.awt.Color $r1;
        java.awt.Cursor $r5;
        javax.swing.JPopupMenu $r7, $r9, $r10;
        com.jidesoft.swing.ScrollPaneOverview r0;
        java.awt.Component r3;
        javax.swing.border.Border $r4;
        javax.swing.JScrollPane r2;
        com.jidesoft.swing.ScrollPaneOverview$1 $r6;
        java.awt.BorderLayout $r8;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        r2 := @parameter0: javax.swing.JScrollPane;

        r3 := @parameter1: java.awt.Component;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Color _selectionBorder> = $r1;

        r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane> = r2;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _owner> = r3;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image> = null;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle> = null;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle> = null;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Point _startPoint> = null;

        r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale> = 0.0;

        $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void setBorder(javax.swing.border.Border)>($r4);

        $r5 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(13);

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void setCursor(java.awt.Cursor)>($r5);

        $r6 = new com.jidesoft.swing.ScrollPaneOverview$1;

        specialinvoke $r6.<com.jidesoft.swing.ScrollPaneOverview$1: void <init>(com.jidesoft.swing.ScrollPaneOverview)>(r0);

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void addMouseListener(java.awt.event.MouseListener)>($r6);

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r6);

        $r7 = new javax.swing.JPopupMenu;

        specialinvoke $r7.<javax.swing.JPopupMenu: void <init>()>();

        r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JPopupMenu _popupMenu> = $r7;

        $r9 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JPopupMenu _popupMenu>;

        $r8 = new java.awt.BorderLayout;

        specialinvoke $r8.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r9.<javax.swing.JPopupMenu: void setLayout(java.awt.LayoutManager)>($r8);

        $r10 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JPopupMenu _popupMenu>;

        virtualinvoke $r10.<javax.swing.JPopupMenu: void add(java.awt.Component,java.lang.Object)>(r0, "Center");

        return;
    }

    public void setSelectionBorderColor(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Color _selectionBorder> = r1;

        return;
    }

    public java.awt.Color getSelectionBorder()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Color _selectionBorder>;

        return $r1;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r9, $r15, $r16, $r17;
        java.awt.geom.Area $r11, $r13;
        com.jidesoft.swing.ScrollPaneOverview r0;
        java.awt.image.BufferedImage $r1, $r10;
        java.awt.Component $r8;
        java.awt.Graphics r3;
        java.awt.Rectangle $r2, $r12, $r14, $r18, $r19, $r20, $r21;
        java.awt.Insets $r5;
        java.awt.Graphics2D r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17;
        javax.swing.JScrollPane $r6;
        javax.swing.JViewport $r7;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        r3 := @parameter0: java.awt.Graphics;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        r4 = (java.awt.Graphics2D) r3;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Insets getInsets()>();

        i0 = $r5.<java.awt.Insets: int left>;

        i1 = $r5.<java.awt.Insets: int top>;

        $r6 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r7 = virtualinvoke $r6.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r8 = virtualinvoke $r7.<javax.swing.JViewport: java.awt.Component getView()>();

        $r9 = virtualinvoke $r8.<java.awt.Component: java.awt.Color getBackground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i2 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getWidth()>();

        $i3 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getHeight()>();

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i2, $i3);

        $r10 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        virtualinvoke r3.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r10, i0, i1, null);

        $i4 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getWidth()>();

        $i5 = $r5.<java.awt.Insets: int left>;

        $i7 = $i4 - $i5;

        $i6 = $r5.<java.awt.Insets: int right>;

        i8 = $i7 - $i6;

        $i9 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getHeight()>();

        $i10 = $r5.<java.awt.Insets: int top>;

        $i12 = $i9 - $i10;

        $i11 = $r5.<java.awt.Insets: int bottom>;

        i13 = $i12 - $i11;

        $r11 = new java.awt.geom.Area;

        $r12 = new java.awt.Rectangle;

        specialinvoke $r12.<java.awt.Rectangle: void <init>(int,int,int,int)>(i0, i1, i8, i13);

        specialinvoke $r11.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r12);

        $r13 = new java.awt.geom.Area;

        $r14 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        specialinvoke $r13.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r14);

        virtualinvoke $r11.<java.awt.geom.Area: void subtract(java.awt.geom.Area)>($r13);

        $r15 = new java.awt.Color;

        specialinvoke $r15.<java.awt.Color: void <init>(int,int,int,int)>(255, 255, 255, 128);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        virtualinvoke r4.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r11);

        $r16 = virtualinvoke r3.<java.awt.Graphics: java.awt.Color getColor()>();

        $r17 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Color _selectionBorder>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r17);

        $r18 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i17 = $r18.<java.awt.Rectangle: int x>;

        $r19 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i16 = $r19.<java.awt.Rectangle: int y>;

        $r20 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i15 = $r20.<java.awt.Rectangle: int width>;

        $r21 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i14 = $r21.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics: void drawRect(int,int,int,int)>($i17, $i16, $i15, $i14);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r16);

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Rectangle $r3;
        java.awt.Insets $r4;
        com.jidesoft.swing.ScrollPaneOverview r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.awt.image.BufferedImage $r1, $r6, $r7;
        java.awt.Dimension $r2, $r5;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        if $r3 != null goto label2;

     label1:
        $r2 = new java.awt.Dimension;

        specialinvoke $r2.<java.awt.Dimension: void <init>()>();

        return $r2;

     label2:
        $r4 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Insets getInsets()>();

        $r5 = new java.awt.Dimension;

        $r6 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        $i0 = virtualinvoke $r6.<java.awt.image.BufferedImage: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = $r4.<java.awt.Insets: int left>;

        $i3 = $i0 + $i1;

        $i2 = $r4.<java.awt.Insets: int right>;

        $i4 = $i3 + $i2;

        $r7 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        $i5 = virtualinvoke $r7.<java.awt.image.BufferedImage: int getHeight(java.awt.image.ImageObserver)>(null);

        $i6 = $r4.<java.awt.Insets: int top>;

        $i8 = $i5 + $i6;

        $i7 = $r4.<java.awt.Insets: int bottom>;

        $i9 = $i8 + $i7;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>($i4, $i9);

        return $r5;
    }

    public void display()
    {
        com.jidesoft.swing.ScrollPaneOverview r0;
        java.awt.Component $r3, $r4, $r7, $r10, $r16, $r17, $r18, $r19, $r36, $r37, $r39, $r42, $r43;
        java.lang.Throwable $r41;
        javax.swing.JScrollPane $r1, $r5, $r6, $r8, $r11, $r20;
        java.awt.Point $r31;
        boolean $z0, $z1, $z2, $z3;
        java.awt.image.BufferedImage $r13, $r14;
        java.awt.Rectangle $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35;
        java.awt.Insets $r23;
        java.awt.Graphics2D $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31;
        javax.swing.JComponent $r38, $r40, $r44;
        javax.swing.JViewport $r2, $r9, $r12, $r21;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r2 = virtualinvoke $r1.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r3 = virtualinvoke $r2.<javax.swing.JViewport: java.awt.Component getView()>();

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent> = $r3;

        $r4 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        if $r4 != null goto label01;

        return;

     label01:
        $r5 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $i0 = virtualinvoke $r5.<javax.swing.JScrollPane: int getWidth()>();

        $r6 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $i1 = virtualinvoke $r6.<javax.swing.JScrollPane: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = $i2 / 2;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(400, $i3);

        $r7 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $i5 = virtualinvoke $r7.<java.awt.Component: int getWidth()>();

        $r8 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r9 = virtualinvoke $r8.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $i6 = virtualinvoke $r9.<javax.swing.JViewport: int getWidth()>();

        $i7 = $i6 * 20;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i7);

        if $i8 > 0 goto label02;

        return;

     label02:
        $r10 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $i9 = virtualinvoke $r10.<java.awt.Component: int getHeight()>();

        $r11 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r12 = virtualinvoke $r11.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $i10 = virtualinvoke $r12.<javax.swing.JViewport: int getHeight()>();

        $i11 = $i10 * 20;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i11);

        if $i12 > 0 goto label03;

        return;

     label03:
        $d1 = (double) $i4;

        $d0 = (double) $i8;

        d2 = $d1 / $d0;

        $d4 = (double) $i4;

        $d3 = (double) $i12;

        d5 = $d4 / $d3;

        $d6 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d5);

        $d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.05, $d6);

        r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale> = $d7;

        $r13 = new java.awt.image.BufferedImage;

        $d9 = (double) $i8;

        $d8 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $d10 = $d9 * $d8;

        $i14 = (int) $d10;

        $d12 = (double) $i12;

        $d11 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $d13 = $d12 * $d11;

        $i13 = (int) $d13;

        specialinvoke $r13.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i14, $i13, 1);

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image> = $r13;

        $r14 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.image.BufferedImage _image>;

        $r15 = virtualinvoke $r14.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $d15 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $d14 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        virtualinvoke $r15.<java.awt.Graphics2D: void scale(double,double)>($d15, $d14);

        $i16 = r0.<com.jidesoft.swing.ScrollPaneOverview: int xOffset>;

        $i15 = r0.<com.jidesoft.swing.ScrollPaneOverview: int yOffset>;

        virtualinvoke $r15.<java.awt.Graphics2D: void setClip(int,int,int,int)>($i16, $i15, $i8, $i12);

        $r16 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $z0 = virtualinvoke $r16.<java.awt.Component: boolean isDoubleBuffered()>();

     label04:
        $r17 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $z1 = $r17 instanceof javax.swing.JComponent;

        if $z1 == 0 goto label05;

        $r39 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $r40 = (javax.swing.JComponent) $r39;

        virtualinvoke $r40.<javax.swing.JComponent: void setDoubleBuffered(boolean)>(0);

     label05:
        $r18 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        virtualinvoke $r18.<java.awt.Component: void paint(java.awt.Graphics)>($r15);

     label06:
        $r19 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $z2 = $r19 instanceof javax.swing.JComponent;

        if $z2 == 0 goto label07;

        $r37 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $r38 = (javax.swing.JComponent) $r37;

        virtualinvoke $r38.<javax.swing.JComponent: void setDoubleBuffered(boolean)>($z0);

     label07:
        virtualinvoke $r15.<java.awt.Graphics2D: void dispose()>();

        goto label11;

     label08:
        $r41 := @caughtexception;

     label09:
        $r42 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $z3 = $r42 instanceof javax.swing.JComponent;

        if $z3 == 0 goto label10;

        $r43 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _viewComponent>;

        $r44 = (javax.swing.JComponent) $r43;

        virtualinvoke $r44.<javax.swing.JComponent: void setDoubleBuffered(boolean)>($z0);

     label10:
        virtualinvoke $r15.<java.awt.Graphics2D: void dispose()>();

        throw $r41;

     label11:
        $r20 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r21 = virtualinvoke $r20.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r22 = virtualinvoke $r21.<javax.swing.JViewport: java.awt.Rectangle getViewRect()>();

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle> = $r22;

        $r23 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Insets getInsets()>();

        $r25 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $d17 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $r24 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $i17 = $r24.<java.awt.Rectangle: int x>;

        $d16 = (double) $i17;

        $d19 = $d17 * $d16;

        $i18 = $r23.<java.awt.Insets: int left>;

        $d18 = (double) $i18;

        $d20 = $d19 + $d18;

        $i19 = (int) $d20;

        $r25.<java.awt.Rectangle: int x> = $i19;

        $r27 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $d22 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $r26 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $i20 = $r26.<java.awt.Rectangle: int y>;

        $d21 = (double) $i20;

        $d24 = $d22 * $d21;

        $i21 = $r23.<java.awt.Insets: int right>;

        $d23 = (double) $i21;

        $d25 = $d24 + $d23;

        $i22 = (int) $d25;

        $r27.<java.awt.Rectangle: int y> = $i22;

        $r28 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $i23 = $r28.<java.awt.Rectangle: int width>;

        $d27 = (double) $i23;

        $d26 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $d28 = $d27 * $d26;

        $i24 = (int) $d28;

        $r28.<java.awt.Rectangle: int width> = $i24;

        $r29 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        $i25 = $r29.<java.awt.Rectangle: int height>;

        $d30 = (double) $i25;

        $d29 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        $d31 = $d30 * $d29;

        $i26 = (int) $d31;

        $r29.<java.awt.Rectangle: int height> = $i26;

        $r30 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle> = $r30;

        $r31 = new java.awt.Point;

        $r32 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i29 = $r32.<java.awt.Rectangle: int x>;

        $r33 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i27 = $r33.<java.awt.Rectangle: int width>;

        $i28 = $i27 / 2;

        $i34 = $i29 + $i28;

        $r34 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i32 = $r34.<java.awt.Rectangle: int y>;

        $r35 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        $i30 = $r35.<java.awt.Rectangle: int height>;

        $i31 = $i30 / 2;

        $i33 = $i32 + $i31;

        specialinvoke $r31.<java.awt.Point: void <init>(int,int)>($i34, $i33);

        $i35 = $r31.<java.awt.Point: int x>;

        $i38 = neg $i35;

        $i36 = $r31.<java.awt.Point: int y>;

        $i37 = neg $i36;

        $r36 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Component _owner>;

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void showPopup(int,int,java.awt.Component)>($i38, $i37, $r36);

        return;

        catch java.lang.Throwable from label04 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void showPopup(int, int, java.awt.Component)
    {
        javax.swing.JPopupMenu $r2;
        int i0, i1;
        com.jidesoft.swing.ScrollPaneOverview r0;
        java.awt.Component r1;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Component;

        $r2 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JPopupMenu _popupMenu>;

        virtualinvoke $r2.<javax.swing.JPopupMenu: void show(java.awt.Component,int,int)>(r1, i0, i1);

        return;
    }

    private void moveRectangle(int, int)
    {
        java.awt.Rectangle $r1, $r3, $r4, $r5, $r6;
        java.awt.Insets $r2;
        com.jidesoft.swing.ScrollPaneOverview r0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Insets getInsets()>();

        $r3 = new java.awt.Rectangle;

        $r4 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle>;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r4);

        $i1 = $r3.<java.awt.Rectangle: int x>;

        $i2 = $i1 + i0;

        $r3.<java.awt.Rectangle: int x> = $i2;

        $i4 = $r3.<java.awt.Rectangle: int y>;

        $i5 = $i4 + i3;

        $r3.<java.awt.Rectangle: int y> = $i5;

        $i7 = $r3.<java.awt.Rectangle: int x>;

        $i6 = $r2.<java.awt.Insets: int left>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        $i9 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getWidth()>();

        $i10 = $r2.<java.awt.Insets: int right>;

        $i12 = $i9 - $i10;

        $i11 = $r3.<java.awt.Rectangle: int width>;

        $i13 = $i12 - $i11;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i13);

        $r3.<java.awt.Rectangle: int x> = $i14;

        $i16 = $r3.<java.awt.Rectangle: int y>;

        $i15 = $r2.<java.awt.Insets: int right>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);

        $i18 = virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: int getHeight()>();

        $i19 = $r2.<java.awt.Insets: int bottom>;

        $i21 = $i18 - $i19;

        $i20 = $r3.<java.awt.Rectangle: int height>;

        $i22 = $i21 - $i20;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i22);

        $r3.<java.awt.Rectangle: int y> = $i23;

        $r5 = new java.awt.Rectangle;

        specialinvoke $r5.<java.awt.Rectangle: void <init>()>();

        $r6 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        staticinvoke <java.awt.Rectangle: void union(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>($r6, $r3, $r5);

        virtualinvoke $r5.<java.awt.Rectangle: void grow(int,int)>(2, 2);

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle> = $r3;

        virtualinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void paintImmediately(java.awt.Rectangle)>($r5);

        return;
    }

    private void scroll(int, int)
    {
        java.awt.Rectangle $r5;
        com.jidesoft.swing.ScrollPaneOverview r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        javax.swing.JComponent r4;
        javax.swing.JPopupMenu $r6;
        java.awt.Component $r3;
        javax.swing.JScrollPane $r1;
        javax.swing.JViewport $r2;

        r0 := @this: com.jidesoft.swing.ScrollPaneOverview;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JScrollPane _scrollPane>;

        $r2 = virtualinvoke $r1.<javax.swing.JScrollPane: javax.swing.JViewport getViewport()>();

        $r3 = virtualinvoke $r2.<javax.swing.JViewport: java.awt.Component getView()>();

        r4 = (javax.swing.JComponent) $r3;

        $r5 = virtualinvoke r4.<javax.swing.JComponent: java.awt.Rectangle getVisibleRect()>();

        $i3 = $r5.<java.awt.Rectangle: int x>;

        $i1 = r0.<com.jidesoft.swing.ScrollPaneOverview: int xOffset>;

        $i2 = $i1 + i0;

        $i4 = $i3 + $i2;

        $r5.<java.awt.Rectangle: int x> = $i4;

        $i8 = $r5.<java.awt.Rectangle: int y>;

        $i6 = r0.<com.jidesoft.swing.ScrollPaneOverview: int yOffset>;

        $i7 = $i6 + i5;

        $i9 = $i8 + $i7;

        $r5.<java.awt.Rectangle: int y> = $i9;

        virtualinvoke r4.<javax.swing.JComponent: void scrollRectToVisible(java.awt.Rectangle)>($r5);

        $r6 = r0.<com.jidesoft.swing.ScrollPaneOverview: javax.swing.JPopupMenu _popupMenu>;

        virtualinvoke $r6.<javax.swing.JPopupMenu: void setVisible(boolean)>(0);

        return;
    }

    static java.awt.Point access$000(com.jidesoft.swing.ScrollPaneOverview)
    {
        java.awt.Point $r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Point _startPoint>;

        return $r1;
    }

    static double access$100(com.jidesoft.swing.ScrollPaneOverview)
    {
        com.jidesoft.swing.ScrollPaneOverview r0;
        double $d0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        $d0 = r0.<com.jidesoft.swing.ScrollPaneOverview: double _scale>;

        return $d0;
    }

    static void access$200(com.jidesoft.swing.ScrollPaneOverview, int, int)
    {
        int i0, i1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void scroll(int,int)>(i0, i1);

        return;
    }

    static java.awt.Point access$002(com.jidesoft.swing.ScrollPaneOverview, java.awt.Point)
    {
        java.awt.Point r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        r1 := @parameter1: java.awt.Point;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Point _startPoint> = r1;

        return r1;
    }

    static java.awt.Rectangle access$302(com.jidesoft.swing.ScrollPaneOverview, java.awt.Rectangle)
    {
        java.awt.Rectangle r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        r1 := @parameter1: java.awt.Rectangle;

        r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _startRectangle> = r1;

        return r1;
    }

    static java.awt.Rectangle access$400(com.jidesoft.swing.ScrollPaneOverview)
    {
        java.awt.Rectangle $r1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        $r1 = r0.<com.jidesoft.swing.ScrollPaneOverview: java.awt.Rectangle _rectangle>;

        return $r1;
    }

    static void access$500(com.jidesoft.swing.ScrollPaneOverview, int, int)
    {
        int i0, i1;
        com.jidesoft.swing.ScrollPaneOverview r0;

        r0 := @parameter0: com.jidesoft.swing.ScrollPaneOverview;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.jidesoft.swing.ScrollPaneOverview: void moveRectangle(int,int)>(i0, i1);

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.ScrollPaneOverview: int MAX_SCALE> = 20;

        <com.jidesoft.swing.ScrollPaneOverview: int MAX_SIZE> = 400;

        return;
    }
}
