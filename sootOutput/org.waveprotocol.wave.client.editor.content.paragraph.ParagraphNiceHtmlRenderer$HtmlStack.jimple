class org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack extends java.lang.Object
{
    final com.google.gwt.dom.client.Element topParent;
    final java.util.List elementStack;
    static final boolean $assertionsDisabled;

    void <init>(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        r2 := @parameter0: com.google.gwt.dom.client.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack> = $r1;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: com.google.gwt.dom.client.Element topParent> = r2;

        return;
    }

    com.google.gwt.dom.client.Element currentParent()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        com.google.gwt.dom.client.Element $r5;
        java.lang.Object $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: com.google.gwt.dom.client.Element topParent>;

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (com.google.gwt.dom.client.Element) $r4;

     label2:
        return $r5;
    }

    void restack(org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$IndentType, int)
    {
        java.lang.AssertionError $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$IndentType r1;
        int i0, $i1, i2, $i3, i4;
        com.google.gwt.dom.client.Element $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$IndentType;

        i0 := @parameter1: int;

        $z0 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: int stackDepth()>();

        if i0 >= $i3 goto label2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: void pop()>();

        goto label1;

     label2:
        $i1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: int stackDepth()>();

        i2 = i0 - $i1;

        i4 = 0;

     label3:
        if i4 >= i2 goto label4;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$IndentType: com.google.gwt.dom.client.Element createElement()>();

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: void push(com.google.gwt.dom.client.Element)>($r2);

        i4 = i4 + 1;

        goto label3;

     label4:
        return;
    }

    void startListItem()
    {
        com.google.gwt.dom.client.LIElement $r2;
        com.google.gwt.dom.client.Element $r3;
        com.google.gwt.dom.client.Document $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        $r1 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r2 = virtualinvoke $r1.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.LIElement createLIElement()>();

        $r3 = (com.google.gwt.dom.client.Element) $r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: void push(com.google.gwt.dom.client.Element)>($r3);

        return;
    }

    void push(com.google.gwt.dom.client.Element)
    {
        java.util.List $r3;
        com.google.gwt.dom.client.Element $r1, r2;
        com.google.gwt.dom.client.Node $r4;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        r2 := @parameter0: com.google.gwt.dom.client.Element;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: com.google.gwt.dom.client.Element currentParent()>();

        $r4 = (com.google.gwt.dom.client.Node) r2;

        virtualinvoke $r1.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node appendChild(com.google.gwt.dom.client.Node)>($r4);

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    void maybeCloseListItemForParagraph(int)
    {
        int i0, $i1, $i2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $i2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: int stackDepth()>();

        if $i1 == $i2 goto label1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: void maybeCloseListItem()>();

     label1:
        return;
    }

    void maybeCloseListItem()
    {
        com.google.gwt.dom.client.Element $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: com.google.gwt.dom.client.Element currentParent()>();

        $r2 = virtualinvoke $r1.<com.google.gwt.dom.client.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("li");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: void pop()>();

     label1:
        return;
    }

    void pop()
    {
        java.util.List $r1, $r2;
        int $i0, $i1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        return;
    }

    int stackDepth()
    {
        int $i0;
        java.util.List $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: java.util.List elementStack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/paragraph/ParagraphNiceHtmlRenderer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphNiceHtmlRenderer$HtmlStack: boolean $assertionsDisabled> = $z1;

        return;
    }
}
