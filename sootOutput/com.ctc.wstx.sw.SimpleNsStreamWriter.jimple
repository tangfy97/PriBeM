public class com.ctc.wstx.sw.SimpleNsStreamWriter extends com.ctc.wstx.sw.BaseNsStreamWriter
{

    public void <init>(com.ctc.wstx.sw.XmlWriter, java.lang.String, com.ctc.wstx.api.WriterConfig)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        com.ctc.wstx.api.WriterConfig r3;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.ctc.wstx.api.WriterConfig;

        specialinvoke r0.<com.ctc.wstx.sw.BaseNsStreamWriter: void <init>(com.ctc.wstx.sw.XmlWriter,java.lang.String,com.ctc.wstx.api.WriterConfig,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r2;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        java.lang.String r1, $r3, r4, r5, $r10, $r11;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        $r11 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WERR_ATTR_NO_ELEM>;

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>($r11);

     label1:
        $r2 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getExplicitPrefix(java.lang.String)>(r1);

        if $r3 != null goto label2;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unbound namespace URI \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>($r10);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r4, r1, $r3, r5);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        java.lang.String r1, r2, r3, r4, $r5;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        $r5 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WERR_ATTR_NO_ELEM>;

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>($r5);

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void writeDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mStartElementOpen>;

        if $z0 != 0 goto label1;

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>("Trying to write a namespace declaration when there is no open start element.");

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setDefaultNamespace(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteDefaultNs(java.lang.String)>(r1);

        return;
    }

    public void writeNamespace(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleNsStreamWriter r1;
        int $i0, $i1;
        java.lang.String r0, r2, $r3;
        boolean $z0, $z1, $z2;

        r1 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeDefaultNamespace(java.lang.String)>(r2);

        return;

     label2:
        $z1 = r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mStartElementOpen>;

        if $z1 != 0 goto label3;

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>("Trying to write a namespace declaration when there is no open start element.");

     label3:
        $z2 = r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mXml11>;

        if $z2 != 0 goto label4;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        $r3 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_NS_EMPTY>;

        staticinvoke <com.ctc.wstx.sw.SimpleNsStreamWriter: void throwOutputError(java.lang.String)>($r3);

     label4:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r0, r2);

        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteNamespace(java.lang.String,java.lang.String)>(r0, r2);

        return;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r2;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r2.<com.ctc.wstx.sw.SimpleOutputElement: void setDefaultNsUri(java.lang.String)>(r1);

        return;
    }

    public void doSetPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r3;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        virtualinvoke $r3.<com.ctc.wstx.sw.SimpleOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void writeStartElement(javax.xml.stream.events.StartElement) throws javax.xml.stream.XMLStreamException
    {
        boolean $z0, $z1, $z2;
        com.ctc.wstx.sw.SimpleNsStreamWriter r5;
        javax.xml.stream.events.Namespace r26, r27;
        javax.xml.namespace.QName $r1, $r10;
        javax.xml.stream.events.Attribute r28;
        int $i0, $i1, $i2;
        javax.xml.stream.events.StartElement r0;
        java.lang.String $r3, $r4, $r6, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25;
        java.util.Iterator $r2, $r7, $r8;
        java.lang.Object $r9, $r17, $r22;

        r5 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r0 := @parameter0: javax.xml.stream.events.StartElement;

        $r1 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r2 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r22 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r26 = (javax.xml.stream.events.Namespace) $r22;

        $r23 = interfaceinvoke r26.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        if $r23 == null goto label02;

        $i2 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i2 != 0 goto label03;

     label02:
        $r24 = interfaceinvoke r26.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setDefaultNamespace(java.lang.String)>($r24);

        goto label04;

     label03:
        $r25 = interfaceinvoke r26.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setPrefix(java.lang.String,java.lang.String)>($r23, $r25);

     label04:
        goto label01;

     label05:
        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r3 != null goto label06;

        $r21 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeStartElement(java.lang.String)>($r21);

        goto label07;

     label06:
        $r4 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r6 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, $r3);

     label07:
        $r7 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label08:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r17 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r27 = (javax.xml.stream.events.Namespace) $r17;

        $r18 = interfaceinvoke r27.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        if $r18 == null goto label09;

        $i1 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i1 != 0 goto label10;

     label09:
        $r19 = interfaceinvoke r27.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeDefaultNamespace(java.lang.String)>($r19);

        goto label11;

     label10:
        $r20 = interfaceinvoke r27.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r18, $r20);

     label11:
        goto label08;

     label12:
        $r8 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label13:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r28 = (javax.xml.stream.events.Attribute) $r9;

        $r10 = interfaceinvoke r28.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r11 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r11 == null goto label14;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 <= 0 goto label14;

        $r14 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r15 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r16 = interfaceinvoke r28.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, $r11, $r15, $r16);

        goto label15;

     label14:
        $r12 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = interfaceinvoke r28.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        virtualinvoke r5.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r12, $r13);

     label15:
        goto label13;

     label16:
        return;
    }

    protected void writeStartOrEmpty(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r2, $r6, $r7, $r8, r9, $r10, $r11;
        java.lang.StringBuffer $r14, $r15, $r16, $r17;
        javax.xml.stream.XMLStreamException $r13;
        int $i0, $i1;
        java.lang.String r1, $r3, r4, $r18;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        org.codehaus.stax2.validation.XMLValidator $r5, $r12;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.sw.SimpleOutputElement: java.lang.String getPrefix(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r13 = new javax.xml.stream.XMLStreamException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unbound namespace URI \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void checkStartElement(java.lang.String,java.lang.String)>(r4, $r3);

        $r5 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r5 == null goto label2;

        $r12 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r12.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r4, r1, $r3);

     label2:
        $r6 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        if $r6 == null goto label3;

        r9 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        $r10 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r11 = virtualinvoke r9.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement reuseAsChild(com.ctc.wstx.sw.SimpleOutputElement,java.lang.String,java.lang.String,java.lang.String)>($r10, $r3, r4, r1);

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool> = $r11;

        $i0 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: int mPoolSize>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: int mPoolSize> = $i1;

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = r9;

        goto label4;

     label3:
        $r7 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r8 = virtualinvoke $r7.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement createChild(java.lang.String,java.lang.String,java.lang.String)>($r3, r4, r1);

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = $r8;

     label4:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>($r3, r4);

        return;
    }

    protected void writeStartOrEmpty(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.SimpleOutputElement $r4, $r6, $r7, r8, $r9, $r10;
        com.ctc.wstx.sw.SimpleNsStreamWriter r0;
        org.codehaus.stax2.validation.XMLValidator $r3, $r11;
        int $i0, $i1;
        java.lang.String r1, r2, r5;

        r0 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void checkStartElement(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        if $r3 == null goto label1;

        $r11 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: org.codehaus.stax2.validation.XMLValidator mValidator>;

        virtualinvoke $r11.<org.codehaus.stax2.validation.XMLValidator: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>(r1, r5, r2);

     label1:
        $r4 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        if $r4 == null goto label2;

        r8 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool>;

        $r9 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r10 = virtualinvoke r8.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement reuseAsChild(com.ctc.wstx.sw.SimpleOutputElement,java.lang.String,java.lang.String,java.lang.String)>($r9, r2, r1, r5);

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mOutputElemPool> = $r10;

        $i0 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: int mPoolSize>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: int mPoolSize> = $i1;

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = r8;

        goto label3;

     label2:
        $r6 = r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem>;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.sw.SimpleOutputElement: com.ctc.wstx.sw.SimpleOutputElement createChild(java.lang.String,java.lang.String,java.lang.String)>(r2, r1, r5);

        r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.SimpleOutputElement mCurrElem> = $r7;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sw.SimpleNsStreamWriter: void doWriteStartTag(java.lang.String,java.lang.String)>(r2, r1);

        return;
    }

    public final void copyStartElement(com.ctc.wstx.sr.InputElementStack, com.ctc.wstx.sr.AttributeCollector) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.XmlWriter $r6;
        com.ctc.wstx.sr.InputElementStack r0;
        int $i0, $i1, $i2, i3, i4, $i5, i6, i7;
        java.lang.String $r2, $r3, $r4, $r7, $r8, $r9, $r10;
        boolean $z0;
        com.ctc.wstx.sw.SimpleNsStreamWriter r1;
        com.ctc.wstx.sr.AttributeCollector r5;

        r1 := @this: com.ctc.wstx.sw.SimpleNsStreamWriter;

        r0 := @parameter0: com.ctc.wstx.sr.InputElementStack;

        r5 := @parameter1: com.ctc.wstx.sr.AttributeCollector;

        $i0 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: int getCurrentNsCount()>();

        if $i0 <= 0 goto label05;

        i3 = 0;

     label01:
        if i3 >= $i0 goto label05;

        $r9 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsPrefix(int)>(i3);

        $r10 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsURI(int)>(i3);

        if $r9 == null goto label02;

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i2 != 0 goto label03;

     label02:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setDefaultNamespace(java.lang.String)>($r10);

        goto label04;

     label03:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void setPrefix(java.lang.String,java.lang.String)>($r9, $r10);

     label04:
        i3 = i3 + 1;

        goto label01;

     label05:
        $r2 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getPrefix()>();

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalName()>();

        $r4 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getNsURI()>();

        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        if $i0 <= 0 goto label10;

        i4 = 0;

     label06:
        if i4 >= $i0 goto label10;

        $r7 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsPrefix(int)>(i4);

        $r8 = virtualinvoke r0.<com.ctc.wstx.sr.InputElementStack: java.lang.String getLocalNsURI(int)>(i4);

        if $r7 == null goto label07;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 != 0 goto label08;

     label07:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeDefaultNamespace(java.lang.String)>($r8);

        goto label09;

     label08:
        virtualinvoke r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r7, $r8);

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        $z0 = r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: boolean mCfgCopyDefaultAttrs>;

        if $z0 == 0 goto label11;

        $i5 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: int getCount()>();

        goto label12;

     label11:
        $i5 = virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: int getSpecifiedCount()>();

     label12:
        i6 = $i5;

        if $i5 <= 0 goto label14;

        i7 = 0;

     label13:
        if i7 >= i6 goto label14;

        $r6 = r1.<com.ctc.wstx.sw.SimpleNsStreamWriter: com.ctc.wstx.sw.XmlWriter mWriter>;

        virtualinvoke r5.<com.ctc.wstx.sr.AttributeCollector: void writeAttribute(int,com.ctc.wstx.sw.XmlWriter)>(i7, $r6);

        i7 = i7 + 1;

        goto label13;

     label14:
        return;
    }
}
