public class com.google.gxp.compiler.base.ThrowsDeclaration extends com.google.gxp.compiler.base.AbstractNode
{
    private final java.lang.String exceptionType;

    public void <init>(com.google.gxp.compiler.base.Node, java.lang.String)
    {
        com.google.gxp.compiler.base.ThrowsDeclaration r0;
        com.google.gxp.compiler.base.Node r1;
        java.lang.Object $r3;
        java.lang.String r2, $r4;

        r0 := @this: com.google.gxp.compiler.base.ThrowsDeclaration;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.gxp.compiler.base.AbstractNode: void <init>(com.google.gxp.compiler.base.Node)>(r1);

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String exceptionType> = $r4;

        return;
    }

    public java.lang.String getExceptionType()
    {
        com.google.gxp.compiler.base.ThrowsDeclaration r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.base.ThrowsDeclaration;

        $r1 = r0.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String exceptionType>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.ThrowsDeclaration r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.ThrowsDeclaration;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.base.ThrowsDeclaration;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.base.ThrowsDeclaration) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.base.ThrowsDeclaration: boolean equals(com.google.gxp.compiler.base.ThrowsDeclaration)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.ThrowsDeclaration)
    {
        com.google.gxp.compiler.base.ThrowsDeclaration r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.ThrowsDeclaration;

        r1 := @parameter0: com.google.gxp.compiler.base.ThrowsDeclaration;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.ThrowsDeclaration: boolean equalsAbstractNode(com.google.gxp.compiler.base.AbstractNode)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String getExceptionType()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String getExceptionType()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        com.google.gxp.compiler.base.ThrowsDeclaration r1;
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.String $r3;
        java.lang.Integer $r2;

        r1 := @this: com.google.gxp.compiler.base.ThrowsDeclaration;

        $r0 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.ThrowsDeclaration: int abstractNodeHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.ThrowsDeclaration: java.lang.String getExceptionType()>();

        $r0[1] = $r3;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
