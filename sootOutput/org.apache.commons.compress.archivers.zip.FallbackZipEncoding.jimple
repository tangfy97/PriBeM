class org.apache.commons.compress.archivers.zip.FallbackZipEncoding extends java.lang.Object implements org.apache.commons.compress.archivers.zip.ZipEncoding
{
    private final java.lang.String charsetName;

    public void <init>()
    {
        org.apache.commons.compress.archivers.zip.FallbackZipEncoding r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.FallbackZipEncoding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.compress.archivers.zip.FallbackZipEncoding r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.FallbackZipEncoding;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName> = r1;

        return;
    }

    public boolean canEncode(java.lang.String)
    {
        org.apache.commons.compress.archivers.zip.FallbackZipEncoding r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.FallbackZipEncoding;

        r1 := @parameter0: java.lang.String;

        return 1;
    }

    public java.nio.ByteBuffer encode(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.zip.FallbackZipEncoding r0;
        byte[] $r4, $r6;
        java.nio.ByteBuffer $r5, $r7;
        java.lang.String $r1, r2, $r3;

        r0 := @this: org.apache.commons.compress.archivers.zip.FallbackZipEncoding;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName>;

        if $r1 != null goto label1;

        $r6 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r6);

        return $r7;

     label1:
        $r3 = r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName>;

        $r4 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r4);

        return $r5;
    }

    public java.lang.String decode(byte[]) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.zip.FallbackZipEncoding r0;
        byte[] r3;
        java.lang.String $r1, $r2, $r4, $r5;

        r0 := @this: org.apache.commons.compress.archivers.zip.FallbackZipEncoding;

        r3 := @parameter0: byte[];

        $r1 = r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName>;

        if $r1 != null goto label1;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r3);

        return $r5;

     label1:
        $r2 = new java.lang.String;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.FallbackZipEncoding: java.lang.String charsetName>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r3, $r4);

        return $r2;
    }
}
