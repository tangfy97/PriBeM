public class ucar.util.prefs.PreferencesExt extends java.util.prefs.AbstractPreferences implements ucar.util.prefs.PersistenceManager
{
    static java.util.prefs.Preferences userRoot;
    static java.util.prefs.Preferences systemRoot;
    private boolean isBackingStoreAvailable;
    private ucar.util.prefs.PreferencesExt parent;
    private java.util.HashMap keyValues;
    private java.util.HashMap children;
    private ucar.util.prefs.PreferencesExt storedDefaults;

    public static void setUserRoot(ucar.util.prefs.PreferencesExt)
    {
        ucar.util.prefs.PreferencesExt r0;

        r0 := @parameter0: ucar.util.prefs.PreferencesExt;

        <ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences userRoot> = r0;

        return;
    }

    public static void setSystemRoot(ucar.util.prefs.PreferencesExt)
    {
        ucar.util.prefs.PreferencesExt r0;

        r0 := @parameter0: ucar.util.prefs.PreferencesExt;

        <ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences systemRoot> = r0;

        return;
    }

    public void <init>(ucar.util.prefs.PreferencesExt, java.lang.String)
    {
        ucar.util.prefs.PreferencesExt r0, r1;
        java.util.HashMap $r3, $r4;
        java.lang.String r2;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: ucar.util.prefs.PreferencesExt;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.prefs.AbstractPreferences: void <init>(java.util.prefs.AbstractPreferences,java.lang.String)>(r1, r2);

        r0.<ucar.util.prefs.PreferencesExt: boolean isBackingStoreAvailable> = 1;

        r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt storedDefaults> = null;

        r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt parent> = r1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(20);

        r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(10);

        r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap children> = $r4;

        return;
    }

    void setStoredDefaults(ucar.util.prefs.PreferencesExt)
    {
        ucar.util.prefs.PreferencesExt r0, r1;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: ucar.util.prefs.PreferencesExt;

        r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt storedDefaults> = r1;

        return;
    }

    private ucar.util.prefs.PreferencesExt getStoredDefaults()
    {
        ucar.util.prefs.PreferencesExt r0, $r1, $r2, $r3;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        $r1 = r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt parent>;

        if $r1 != null goto label1;

        $r3 = r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt storedDefaults>;

        goto label2;

     label1:
        $r2 = r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt parent>;

        $r3 = specialinvoke $r2.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

     label2:
        return $r3;
    }

    public boolean isUserNode()
    {
        ucar.util.prefs.PreferencesExt r0;
        java.util.prefs.Preferences $r1;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        $r1 = <ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences systemRoot>;

        if r0 == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object getBean(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.lang.IllegalStateException $r7;
        ucar.util.prefs.Bean$Collection $r6;
        java.lang.NullPointerException $r8;
        ucar.util.prefs.Bean $r5;
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r10;
        ucar.util.prefs.PreferencesExt r1;
        java.lang.Object $r2, $r3, r4, r11, $r12;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null key");

        throw $r8;

     label01:
        $z0 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: boolean isRemoved()>();

        if $z0 == 0 goto label02;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Node has been removed.");

        throw $r7;

     label02:
        $r2 = r1.<ucar.util.prefs.PreferencesExt: java.lang.Object lock>;

        entermonitor $r2;

     label03:
        r11 = null;

     label04:
        $r3 = specialinvoke r1.<ucar.util.prefs.PreferencesExt: java.lang.Object _getObject(java.lang.String)>(r0);

        r11 = $r3;

        if $r3 == null goto label06;

        $z1 = $r3 instanceof ucar.util.prefs.Bean$Collection;

        if $z1 == 0 goto label05;

        $r6 = (ucar.util.prefs.Bean$Collection) $r3;

        r11 = virtualinvoke $r6.<ucar.util.prefs.Bean$Collection: java.util.Collection getCollection()>();

        goto label06;

     label05:
        $z2 = $r3 instanceof ucar.util.prefs.Bean;

        if $z2 == 0 goto label06;

        $r5 = (ucar.util.prefs.Bean) $r3;

        r11 = virtualinvoke $r5.<ucar.util.prefs.Bean: java.lang.Object getObject()>();

     label06:
        goto label08;

     label07:
        $r10 := @caughtexception;

     label08:
        if r11 != null goto label09;

        $r12 = r4;

        goto label10;

     label09:
        $r12 = r11;

     label10:
        exitmonitor $r2;

     label11:
        return $r12;

     label12:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r9;

        catch java.lang.Exception from label04 to label06 with label07;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void putBean(java.lang.String, java.lang.Object)
    {
        ucar.util.prefs.PreferencesExt r0;
        ucar.util.prefs.Bean $r3;
        java.lang.Object $r2, r4;
        java.util.HashMap $r5;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object getBean(java.lang.String,java.lang.Object)>(r1, null);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

     label1:
        $r5 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = new ucar.util.prefs.Bean;

        specialinvoke $r3.<ucar.util.prefs.Bean: void <init>(java.lang.Object)>(r4);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

     label2:
        return;
    }

    public void putBeanCollection(java.lang.String, java.util.Collection)
    {
        ucar.util.prefs.PreferencesExt r0;
        java.util.Collection r4;
        java.lang.Object $r2;
        java.util.HashMap $r5;
        java.lang.String r1;
        ucar.util.prefs.Bean$Collection $r3;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Collection;

        $r2 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object getBean(java.lang.String,java.lang.Object)>(r1, null);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

     label1:
        $r5 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = new ucar.util.prefs.Bean$Collection;

        specialinvoke $r3.<ucar.util.prefs.Bean$Collection: void <init>(java.util.Collection)>(r4);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

     label2:
        return;
    }

    public void putBeanObject(java.lang.String, java.lang.Object)
    {
        ucar.util.prefs.PreferencesExt r0;
        java.lang.Object $r2, r3;
        java.util.HashMap $r4;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object getBean(java.lang.String,java.lang.Object)>(r1, null);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

     label1:
        $r4 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        return;
    }

    public java.util.List getList(java.lang.String, java.util.List)
    {
        java.util.List r2, $r4;
        ucar.util.prefs.PreferencesExt r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Exception $r5;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

     label1:
        $r3 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object getBean(java.lang.String,java.lang.Object)>(r1, r2);

        $r4 = (java.util.List) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void putList(java.lang.String, java.util.List)
    {
        java.util.List r2;
        ucar.util.prefs.PreferencesExt r0;
        java.lang.String r1;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        virtualinvoke r0.<ucar.util.prefs.PreferencesExt: void putBeanObject(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    protected java.lang.String[] childrenNamesSpi()
    {
        java.util.Collection $r9;
        java.util.Set $r3;
        java.util.HashMap $r2;
        java.lang.String[] $r10;
        java.util.ArrayList $r5;
        java.util.HashSet $r0;
        ucar.util.prefs.PreferencesExt r1, $r4;
        int $i0, i1, $i2;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        $r0 = new java.util.HashSet;

        $r2 = r1.<ucar.util.prefs.PreferencesExt: java.util.HashMap children>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r4 = specialinvoke r1.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if $r4 == null goto label1;

        $r8 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: java.lang.String absolutePath()>();

        $r9 = virtualinvoke $r4.<ucar.util.prefs.PreferencesExt: java.util.Collection childrenNamesSpi(java.lang.String)>($r8);

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r9);

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r10 = newarray (java.lang.String)[$i0];

        i1 = 0;

     label2:
        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r10[i1] = $r7;

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r10;
    }

    protected java.util.Collection childrenNamesSpi(java.lang.String)
    {
        java.util.Collection $r4;
        java.util.Set $r7;
        java.util.HashMap $r6;
        java.util.prefs.BackingStoreException $r8;
        java.util.prefs.Preferences $r5;
        java.util.HashSet $r0;
        ucar.util.prefs.PreferencesExt r1, $r3, r9;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: boolean nodeExists(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences node(java.lang.String)>(r2);

        r9 = (ucar.util.prefs.PreferencesExt) $r5;

        $r6 = r9.<ucar.util.prefs.PreferencesExt: java.util.HashMap children>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r3 = specialinvoke r1.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<ucar.util.prefs.PreferencesExt: java.util.Collection childrenNamesSpi(java.lang.String)>(r2);

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r4);

     label5:
        return $r0;

        catch java.util.prefs.BackingStoreException from label1 to label2 with label3;
    }

    java.lang.String[] keysNoDefaults() throws java.util.prefs.BackingStoreException
    {
        java.util.Set $r3;
        java.util.HashMap $r2;
        java.lang.String[] r5;
        java.util.ArrayList $r4;
        java.util.HashSet $r0;
        ucar.util.prefs.PreferencesExt r1;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        java.lang.String $r7;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        $r0 = new java.util.HashSet;

        $r2 = r1.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        r5[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r5;
    }

    protected java.lang.String[] keysSpi() throws java.util.prefs.BackingStoreException
    {
        java.util.Collection $r9;
        java.util.Set $r3;
        java.util.HashMap $r2;
        java.lang.String[] $r10;
        java.util.ArrayList $r5;
        java.util.HashSet $r0;
        ucar.util.prefs.PreferencesExt r1, $r4;
        int $i0, i1, $i2;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        $r0 = new java.util.HashSet;

        $r2 = r1.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r4 = specialinvoke r1.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if $r4 == null goto label1;

        $r8 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: java.lang.String absolutePath()>();

        $r9 = virtualinvoke $r4.<ucar.util.prefs.PreferencesExt: java.util.Collection keysSpi(java.lang.String)>($r8);

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r9);

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r5);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r10 = newarray (java.lang.String)[$i0];

        i1 = 0;

     label2:
        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r10[i1] = $r7;

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r10;
    }

    protected java.util.Collection keysSpi(java.lang.String)
    {
        java.util.Collection $r4;
        java.util.Set $r7;
        java.util.HashMap $r6;
        java.util.prefs.BackingStoreException $r8;
        java.util.prefs.Preferences $r5;
        java.util.HashSet $r0;
        ucar.util.prefs.PreferencesExt r1, $r3, r9;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: boolean nodeExists(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r1.<ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences node(java.lang.String)>(r2);

        r9 = (ucar.util.prefs.PreferencesExt) $r5;

        $r6 = r9.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r3 = specialinvoke r1.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<ucar.util.prefs.PreferencesExt: java.util.Collection keysSpi(java.lang.String)>(r2);

        virtualinvoke $r0.<java.util.HashSet: boolean addAll(java.util.Collection)>($r4);

     label5:
        return $r0;

        catch java.util.prefs.BackingStoreException from label1 to label2 with label3;
    }

    void dump() throws java.util.prefs.BackingStoreException
    {
        java.lang.String[] $r1, $r2;
        int $i0, $i1, i2, i3;
        java.lang.String $r3, $r9, $r12, $r13, $r15;
        java.io.PrintStream $r7;
        java.util.prefs.Preferences $r4;
        ucar.util.prefs.PreferencesExt r0, $r5;
        java.lang.StringBuilder $r6, $r8, $r10, $r11, $r14;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        $r1 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String[] keys()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key = ");

        $r9 = $r1[i2];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value= ");

        $r12 = $r1[i2];

        $r13 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String get(java.lang.String,java.lang.String)>($r12, null);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r15);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String[] childrenNames()>();

        i3 = 0;

     label3:
        $i1 = lengthof $r2;

        if i3 >= $i1 goto label4;

        $r3 = $r2[i3];

        $r4 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences node(java.lang.String)>($r3);

        $r5 = (ucar.util.prefs.PreferencesExt) $r4;

        virtualinvoke $r5.<ucar.util.prefs.PreferencesExt: void dump()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    void show(java.lang.String, java.util.Collection)
    {
        java.lang.String r3, $r6, $r14, $r18, $r20;
        boolean $z0;
        java.io.PrintStream $r1, $r9, $r12, $r22;
        java.util.Iterator $r8;
        java.util.Collection r7;
        java.lang.Exception $r21;
        ucar.util.prefs.PreferencesExt r23;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r11, $r13, $r15, $r16, $r19;
        java.lang.Object $r10;
        java.lang.Class $r17;

        r23 := @this: ucar.util.prefs.PreferencesExt;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.Collection;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r14 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r20);

        goto label2;

     label3:
        goto label5;

     label4:
        $r21 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.Object)>($r21);

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label5:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("***");

        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    protected java.util.prefs.AbstractPreferences childSpi(java.lang.String)
    {
        ucar.util.prefs.PreferencesExt r0, $r4, $r5;
        java.util.HashMap $r2, $r6;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap children>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (ucar.util.prefs.PreferencesExt) $r3;

        if null == $r4 goto label1;

        return $r4;

     label1:
        $r5 = new ucar.util.prefs.PreferencesExt;

        specialinvoke $r5.<ucar.util.prefs.PreferencesExt: void <init>(ucar.util.prefs.PreferencesExt,java.lang.String)>(r0, r1);

        $r6 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap children>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        $r5.<ucar.util.prefs.PreferencesExt: boolean newNode> = 1;

        return $r5;
    }

    protected void flushSpi() throws java.util.prefs.BackingStoreException
    {
        ucar.util.prefs.PreferencesExt r0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        return;
    }

    protected java.lang.String getSpi(java.lang.String)
    {
        ucar.util.prefs.PreferencesExt r0;
        java.lang.Object $r2;
        java.lang.String r1, $r3;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object _getObject(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r3;
    }

    protected void putSpi(java.lang.String, java.lang.String)
    {
        ucar.util.prefs.PreferencesExt r0;
        java.util.HashMap $r4;
        java.lang.String r1, $r2, r3;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String getSpi(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

     label1:
        $r4 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label2:
        return;
    }

    protected void removeNodeSpi() throws java.util.prefs.BackingStoreException
    {
        java.io.PrintStream $r7;
        java.util.HashMap $r3;
        ucar.util.prefs.PreferencesExt r0, $r1, $r2;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r8, $r10;
        java.lang.String $r4, $r9, $r11;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        $r1 = r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt parent>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt parent>;

        $r3 = $r2.<ucar.util.prefs.PreferencesExt: java.util.HashMap children>;

        $r4 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String name()>();

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        if null != $r5 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR PreferencesExt.removeNodeSpi :");

        $r9 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String name()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label1:
        return;
    }

    protected void removeSpi(java.lang.String)
    {
        java.util.HashMap $r2;
        ucar.util.prefs.PreferencesExt r0;
        java.lang.String r1;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    protected void syncSpi() throws java.util.prefs.BackingStoreException
    {
        ucar.util.prefs.PreferencesExt r0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        return;
    }

    java.lang.Object getObjectNoDefaults(java.lang.String)
    {
        ucar.util.prefs.PreferencesExt r0;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void putObject(java.lang.String, java.lang.Object)
    {
        ucar.util.prefs.PreferencesExt r1;
        java.lang.Object r2;
        java.util.HashMap $r3;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: ucar.util.prefs.PreferencesExt;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PreferencesExt try to store null keyname");

        throw $r4;

     label1:
        $r3 = r1.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        return;
    }

    public java.lang.Object getObject(java.lang.String)
    {
        java.lang.Throwable $r3;
        ucar.util.prefs.PreferencesExt r0;
        java.lang.Object $r1, r5;
        java.lang.String r2;
        java.lang.Exception $r4;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.util.prefs.PreferencesExt: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        r5 = null;

     label2:
        r5 = specialinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.Object _getObject(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        return r5;

     label7:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r3;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private java.lang.Object _getObject(java.lang.String)
    {
        java.util.HashMap $r2;
        java.lang.Exception $r6;
        ucar.util.prefs.PreferencesExt r0, $r4;
        java.lang.Object $r3, r7;
        java.lang.String r1, $r5;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r7 = null;

     label1:
        $r2 = r0.<ucar.util.prefs.PreferencesExt: java.util.HashMap keyValues>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = $r3;

        if $r3 != null goto label2;

        $r4 = specialinvoke r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.lang.String absolutePath()>();

        r7 = specialinvoke $r4.<ucar.util.prefs.PreferencesExt: java.lang.Object getObjectFromNode(java.lang.String,java.lang.String)>($r5, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.Object getObjectFromNode(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r5, $r7;
        java.util.prefs.BackingStoreException $r6;
        java.util.prefs.Preferences $r4;
        ucar.util.prefs.PreferencesExt r0, $r2, r9;
        java.lang.Object r8;
        java.lang.String r1, r3;
        boolean $z0;

        r0 := @this: ucar.util.prefs.PreferencesExt;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r8 = null;

     label01:
        $z0 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: boolean nodeExists(java.lang.String)>(r1);

        if $z0 == 0 goto label06;

        $r4 = virtualinvoke r0.<ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences node(java.lang.String)>(r1);

        r9 = (ucar.util.prefs.PreferencesExt) $r4;

        entermonitor r9;

     label02:
        r8 = specialinvoke r9.<ucar.util.prefs.PreferencesExt: java.lang.Object _getObject(java.lang.String)>(r3);

        exitmonitor r9;

     label03:
        goto label06;

     label04:
        $r7 := @caughtexception;

        exitmonitor r9;

     label05:
        throw $r7;

     label06:
        goto label08;

     label07:
        $r6 := @caughtexception;

     label08:
        $r2 = specialinvoke r0.<ucar.util.prefs.PreferencesExt: ucar.util.prefs.PreferencesExt getStoredDefaults()>();

        if r8 != null goto label13;

        if $r2 == null goto label13;

        entermonitor $r2;

     label09:
        r8 = specialinvoke $r2.<ucar.util.prefs.PreferencesExt: java.lang.Object getObjectFromNode(java.lang.String,java.lang.String)>(r1, r3);

        exitmonitor $r2;

     label10:
        goto label13;

     label11:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label12:
        throw $r5;

     label13:
        return r8;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.util.prefs.BackingStoreException from label01 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static void <clinit>()
    {
        ucar.util.prefs.PreferencesExt $r0, $r1;

        $r0 = new ucar.util.prefs.PreferencesExt;

        specialinvoke $r0.<ucar.util.prefs.PreferencesExt: void <init>(ucar.util.prefs.PreferencesExt,java.lang.String)>(null, "");

        <ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences userRoot> = $r0;

        $r1 = new ucar.util.prefs.PreferencesExt;

        specialinvoke $r1.<ucar.util.prefs.PreferencesExt: void <init>(ucar.util.prefs.PreferencesExt,java.lang.String)>(null, "");

        <ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences systemRoot> = $r1;

        return;
    }
}
