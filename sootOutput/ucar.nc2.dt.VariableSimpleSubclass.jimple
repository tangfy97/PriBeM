public class ucar.nc2.dt.VariableSimpleSubclass extends java.lang.Object implements ucar.nc2.VariableSimpleIF
{
    protected ucar.nc2.VariableSimpleIF v;

    public void <init>(ucar.nc2.VariableSimpleIF)
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        ucar.nc2.VariableSimpleIF r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        r1 := @parameter0: ucar.nc2.VariableSimpleIF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v> = r1;

        return;
    }

    public java.lang.String getName()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getShortName()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        return $r2;
    }

    public ucar.ma2.DataType getDataType()
    {
        ucar.ma2.DataType $r2;
        ucar.nc2.dt.VariableSimpleSubclass r0;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getInfo()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.lang.String getUnitsString()>();

        return $r2;
    }

    public int getRank()
    {
        int $i0;
        ucar.nc2.dt.VariableSimpleSubclass r0;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $i0 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: int getRank()>();

        return $i0;
    }

    public int[] getShape()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        int[] $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: int[] getShape()>();

        return $r2;
    }

    public java.util.List getDimensions()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.util.List $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        return $r2;
    }

    public java.util.List getAttributes()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.util.List $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.VariableSimpleIF: java.util.List getAttributes()>();

        return $r2;
    }

    public ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)
    {
        ucar.nc2.Attribute $r3;
        ucar.nc2.VariableSimpleIF $r2;
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r3 = interfaceinvoke $r2.<ucar.nc2.VariableSimpleIF: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r2;
        ucar.nc2.VariableSimpleIF $r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        $r1 = r0.<ucar.nc2.dt.VariableSimpleSubclass: ucar.nc2.VariableSimpleIF v>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int compareTo(ucar.nc2.VariableSimpleIF)
    {
        ucar.nc2.VariableSimpleIF r2;
        int $i0;
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.String $r1, $r3;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        r2 := @parameter0: ucar.nc2.VariableSimpleIF;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.VariableSimpleSubclass: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.VariableSimpleIF $r2;
        int $i0;
        ucar.nc2.dt.VariableSimpleSubclass r0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.dt.VariableSimpleSubclass;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.VariableSimpleIF) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.dt.VariableSimpleSubclass: int compareTo(ucar.nc2.VariableSimpleIF)>($r2);

        return $i0;
    }
}
