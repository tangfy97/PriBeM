final class com.mycila.inject.internal.guava.collect.EmptyImmutableSet extends com.mycila.inject.internal.guava.collect.ImmutableSet
{
    static final com.mycila.inject.internal.guava.collect.EmptyImmutableSet INSTANCE;
    private static final java.lang.Object[] EMPTY_ARRAY;
    private static final long serialVersionUID;

    private void <init>()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableSet: void <init>()>();

        return;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return 0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return 1;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()
    {
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator emptyIterator()>();

        return $r0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return 0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        $r0 = <com.mycila.inject.internal.guava.collect.EmptyImmutableSet: java.lang.Object[] EMPTY_ARRAY>;

        return $r0;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        r0[0] = null;

     label1:
        return r0;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r1;
        java.util.Collection r0;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r2;
        java.util.Set r1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        r1 = (java.util.Set) r0;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        return $z1;

     label1:
        return 0;
    }

    public final int hashCode()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return 0;
    }

    boolean isHashCodeFast()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return 1;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        return "[]";
    }

    java.lang.Object readResolve()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet $r0, r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        $r0 = <com.mycila.inject.internal.guava.collect.EmptyImmutableSet: com.mycila.inject.internal.guava.collect.EmptyImmutableSet INSTANCE>;

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSet: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1;
        com.mycila.inject.internal.guava.collect.EmptyImmutableSet $r0;

        <com.mycila.inject.internal.guava.collect.EmptyImmutableSet: long serialVersionUID> = 0L;

        $r0 = new com.mycila.inject.internal.guava.collect.EmptyImmutableSet;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.EmptyImmutableSet: void <init>()>();

        <com.mycila.inject.internal.guava.collect.EmptyImmutableSet: com.mycila.inject.internal.guava.collect.EmptyImmutableSet INSTANCE> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <com.mycila.inject.internal.guava.collect.EmptyImmutableSet: java.lang.Object[] EMPTY_ARRAY> = $r1;

        return;
    }
}
