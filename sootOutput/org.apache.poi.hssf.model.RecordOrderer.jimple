final class org.apache.poi.hssf.model.RecordOrderer extends java.lang.Object
{

    private void <init>()
    {
        org.apache.poi.hssf.model.RecordOrderer r0;

        r0 := @this: org.apache.poi.hssf.model.RecordOrderer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addNewSheetRecord(java.util.List, org.apache.poi.hssf.record.RecordBase)
    {
        java.util.List r0;
        int $i0;
        java.lang.Class $r2;
        org.apache.poi.hssf.record.RecordBase r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.apache.poi.hssf.record.RecordBase;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int findSheetInsertPos(java.util.List,java.lang.Class)>(r0, $r2);

        interfaceinvoke r0.<java.util.List: void add(int,java.lang.Object)>($i0, r1);

        return;
    }

    private static int findSheetInsertPos(java.util.List, java.lang.Class)
    {
        java.lang.RuntimeException $r1;
        java.util.List r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r8 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.Class;

        if r0 != class "Lorg/apache/poi/hssf/record/aggregates/DataValidityTable;" goto label1;

        $i5 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int findDataValidationTableInsertPos(java.util.List)>(r8);

        return $i5;

     label1:
        if r0 != class "Lorg/apache/poi/hssf/record/aggregates/MergedCellsTable;" goto label2;

        $i4 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int findInsertPosForNewMergedRecordTable(java.util.List)>(r8);

        return $i4;

     label2:
        if r0 != class "Lorg/apache/poi/hssf/record/aggregates/ConditionalFormattingTable;" goto label3;

        $i3 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int findInsertPosForNewCondFormatTable(java.util.List)>(r8);

        return $i3;

     label3:
        if r0 != class "Lorg/apache/poi/hssf/record/GutsRecord;" goto label4;

        $i2 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getGutsRecordInsertPos(java.util.List)>(r8);

        return $i2;

     label4:
        if r0 != class "Lorg/apache/poi/hssf/record/aggregates/PageSettingsBlock;" goto label5;

        $i1 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getPageBreakRecordInsertPos(java.util.List)>(r8);

        return $i1;

     label5:
        if r0 != class "Lorg/apache/poi/hssf/record/aggregates/WorksheetProtectionBlock;" goto label6;

        $i0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getWorksheetProtectionBlockInsertPos(java.util.List)>(r8);

        return $i0;

     label6:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected record class (");

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    private static int getWorksheetProtectionBlockInsertPos(java.util.List)
    {
        java.lang.IllegalStateException $r3;
        java.util.List r0;
        int $i0, i1, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        i1 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getDimensionsIndex(java.util.List)>(r0);

     label1:
        if i1 <= 0 goto label3;

        $i3 = (int) -1;

        i1 = i1 + $i3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isProtectionSubsequentRecord(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $i0 = i1 + 1;

        return $i0;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("did not find insert pos for protection block");

        throw $r3;
    }

    private static boolean isProtectionSubsequentRecord(java.lang.Object)
    {
        short $s0;
        org.apache.poi.hssf.record.Record r1;
        int $i1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0 instanceof org.apache.poi.hssf.record.Record;

        if $z1 == 0 goto label3;

        r1 = (org.apache.poi.hssf.record.Record) r0;

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 85: goto label2;
            case 144: goto label2;
            default: goto label3;
        };

     label2:
        return 1;

     label3:
        return 0;
    }

    private static int getPageBreakRecordInsertPos(java.util.List)
    {
        java.lang.RuntimeException $r3;
        java.util.List r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $i0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getDimensionsIndex(java.util.List)>(r0);

        i2 = $i0 - 1;

     label1:
        if i2 <= 0 goto label3;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $z0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isPageBreakPriorRecord(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $i1 = i2 + 1;

        return $i1;

     label2:
        goto label1;

     label3:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Did not find insert point for GUTS");

        throw $r3;
    }

    private static boolean isPageBreakPriorRecord(java.lang.Object)
    {
        short $s0;
        org.apache.poi.hssf.record.Record r1;
        int $i1;
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.poi.hssf.record.Record;

        if $z0 == 0 goto label2;

        r1 = (org.apache.poi.hssf.record.Record) r0;

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            case 15: goto label1;
            case 16: goto label1;
            case 17: goto label1;
            case 34: goto label1;
            case 42: goto label1;
            case 43: goto label1;
            case 94: goto label1;
            case 95: goto label1;
            case 129: goto label1;
            case 130: goto label1;
            case 523: goto label1;
            case 549: goto label1;
            case 2057: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private static int findInsertPosForNewCondFormatTable(java.util.List)
    {
        org.apache.poi.hssf.record.Record r3;
        java.lang.RuntimeException $r4;
        java.util.List r0;
        short $s1;
        int $i0, $i2, $i3, i4, $i5, $i7;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i4 = $i0 - 2;

     label1:
        if i4 < 0 goto label6;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $z0 = $r2 instanceof org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        if $z0 == 0 goto label2;

        $i3 = i4 + 1;

        return $i3;

     label2:
        $z1 = $r2 instanceof org.apache.poi.hssf.record.aggregates.DataValidityTable;

        if $z1 == 0 goto label3;

        goto label5;

     label3:
        r3 = (org.apache.poi.hssf.record.Record) $r2;

        $s1 = virtualinvoke r3.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i5 = (int) $s1;

        lookupswitch($i5)
        {
            case 29: goto label4;
            case 65: goto label4;
            case 153: goto label4;
            case 160: goto label4;
            case 239: goto label4;
            case 351: goto label4;
            case 574: goto label4;
            default: goto label5;
        };

     label4:
        $i2 = i4 + 1;

        return $i2;

     label5:
        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label1;

     label6:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Did not find Window2 record");

        throw $r4;
    }

    private static int findInsertPosForNewMergedRecordTable(java.util.List)
    {
        org.apache.poi.hssf.record.Record r3;
        java.lang.RuntimeException $r4;
        java.util.List r0;
        short $s1;
        int $i0, $i2, i3, $i4, $i6;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i3 = $i0 - 2;

     label1:
        if i3 < 0 goto label5;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = $r2 instanceof org.apache.poi.hssf.record.Record;

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        r3 = (org.apache.poi.hssf.record.Record) $r2;

        $s1 = virtualinvoke r3.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i4 = (int) $s1;

        lookupswitch($i4)
        {
            case 29: goto label3;
            case 65: goto label3;
            case 153: goto label3;
            case 160: goto label3;
            case 574: goto label3;
            default: goto label4;
        };

     label3:
        $i2 = i3 + 1;

        return $i2;

     label4:
        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label1;

     label5:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Did not find Window2 record");

        throw $r4;
    }

    private static int findDataValidationTableInsertPos(java.util.List)
    {
        java.lang.IllegalStateException $r28, $r30, $r32;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.hssf.record.Record r26, r27;
        java.util.List r0;
        java.lang.StringBuilder $r6, $r9, $r10, $r15, $r18, $r19, $r22, $r23, $r29, $r31;
        org.apache.poi.hssf.record.RecordBase r3;
        short $s1, $s3;
        int $i0, $i2, $i4, i5, $i7;
        java.lang.String $r8, $r11, $r17, $r21, $r24;
        java.lang.Object $r1, $r2, $r12;
        java.lang.Class $r7, $r16, $r20;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i5 = $i0 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $z0 = $r1 instanceof org.apache.poi.hssf.record.EOFRecord;

        if $z0 != 0 goto label1;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Last sheet record should be EOFRecord");

        throw $r28;

     label1:
        if i5 <= 0 goto label5;

        $i7 = (int) -1;

        i5 = i5 + $i7;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (org.apache.poi.hssf.record.RecordBase) $r2;

        $z1 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isDVTPriorRecord(org.apache.poi.hssf.record.RecordBase)>(r3);

        if $z1 == 0 goto label3;

        $i2 = i5 + 1;

        $r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        r26 = (org.apache.poi.hssf.record.Record) $r12;

        $s3 = virtualinvoke r26.<org.apache.poi.hssf.record.Record: short getSid()>();

        $z3 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isDVTSubsequentRecord(short)>($s3);

        if $z3 != 0 goto label2;

        $r30 = new java.lang.IllegalStateException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected (");

        $r16 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") found after (");

        $r20 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r30;

     label2:
        $i4 = i5 + 1;

        return $i4;

     label3:
        r27 = (org.apache.poi.hssf.record.Record) r3;

        $s1 = virtualinvoke r27.<org.apache.poi.hssf.record.Record: short getSid()>();

        $z2 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isDVTSubsequentRecord(short)>($s1);

        if $z2 != 0 goto label4;

        $r32 = new java.lang.IllegalStateException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected (");

        $r7 = virtualinvoke r27.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") while looking for DV Table insert pos");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r32;

     label4:
        goto label1;

     label5:
        return 0;
    }

    private static boolean isDVTPriorRecord(org.apache.poi.hssf.record.RecordBase)
    {
        short $s0;
        org.apache.poi.hssf.record.Record $r1;
        int $i1;
        org.apache.poi.hssf.record.RecordBase r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.hssf.record.RecordBase;

        $z0 = r0 instanceof org.apache.poi.hssf.record.aggregates.MergedCellsTable;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.apache.poi.hssf.record.aggregates.ConditionalFormattingTable;

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r1 = (org.apache.poi.hssf.record.Record) r0;

        $s0 = virtualinvoke $r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 29: goto label3;
            case 65: goto label3;
            case 153: goto label3;
            case 160: goto label3;
            case 239: goto label3;
            case 351: goto label3;
            case 440: goto label3;
            case 442: goto label3;
            case 574: goto label3;
            case 2048: goto label3;
            default: goto label4;
        };

     label3:
        return 1;

     label4:
        return 0;
    }

    private static boolean isDVTSubsequentRecord(short)
    {
        int $i1;
        short s0;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        lookupswitch($i1)
        {
            case 10: goto label1;
            case 2146: goto label1;
            case 2151: goto label1;
            case 2152: goto label1;
            case 2248: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private static int getDimensionsIndex(java.util.List)
    {
        java.util.List r0;
        int $i0, i1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = $r2 instanceof org.apache.poi.hssf.record.DimensionsRecord;

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("DimensionsRecord not found");

        throw $r1;
    }

    private static int getGutsRecordInsertPos(java.util.List)
    {
        java.lang.RuntimeException $r4;
        java.util.List r0;
        int $i0, $i1, i2, $i4;
        java.lang.Object $r2;
        org.apache.poi.hssf.record.RecordBase r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $i0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: int getDimensionsIndex(java.util.List)>(r0);

        i2 = $i0 - 1;

     label1:
        if i2 <= 0 goto label3;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.apache.poi.hssf.record.RecordBase) $r2;

        $z0 = staticinvoke <org.apache.poi.hssf.model.RecordOrderer: boolean isGutsPriorRecord(org.apache.poi.hssf.record.RecordBase)>(r3);

        if $z0 == 0 goto label2;

        $i1 = i2 + 1;

        return $i1;

     label2:
        goto label1;

     label3:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Did not find insert point for GUTS");

        throw $r4;
    }

    private static boolean isGutsPriorRecord(org.apache.poi.hssf.record.RecordBase)
    {
        short $s0;
        org.apache.poi.hssf.record.Record r1;
        int $i1;
        org.apache.poi.hssf.record.RecordBase r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hssf.record.RecordBase;

        $z0 = r0 instanceof org.apache.poi.hssf.record.Record;

        if $z0 == 0 goto label2;

        r1 = (org.apache.poi.hssf.record.Record) r0;

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            case 15: goto label1;
            case 16: goto label1;
            case 17: goto label1;
            case 34: goto label1;
            case 42: goto label1;
            case 43: goto label1;
            case 94: goto label1;
            case 95: goto label1;
            case 130: goto label1;
            case 523: goto label1;
            case 2057: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isEndOfRowBlock(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        boolean $z0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 10: goto label3;
            case 61: goto label1;
            case 93: goto label1;
            case 125: goto label1;
            case 128: goto label1;
            case 176: goto label1;
            case 236: goto label1;
            case 237: goto label1;
            case 434: goto label2;
            case 438: goto label1;
            case 574: goto label1;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        return 1;

     label3:
        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Found EOFRecord before WindowTwoRecord was encountered");

        throw $r0;

     label4:
        $z0 = staticinvoke <org.apache.poi.hssf.record.aggregates.PageSettingsBlock: boolean isComponentRecord(int)>(i0);

        return $z0;
    }

    public static boolean isRowBlockRecord(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 6: goto label1;
            case 253: goto label1;
            case 513: goto label1;
            case 515: goto label1;
            case 516: goto label1;
            case 517: goto label1;
            case 520: goto label1;
            case 545: goto label1;
            case 566: goto label1;
            case 638: goto label1;
            case 1212: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }
}
