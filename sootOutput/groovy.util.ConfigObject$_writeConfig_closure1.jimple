class groovy.util.ConfigObject$_writeConfig_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$util$ConfigObject;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;
        groovy.util.ConfigObject$_writeConfig_closure1 r2;

        r2 := @this: groovy.util.ConfigObject$_writeConfig_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigObject$_writeConfig_closure1");

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.lang.Object[] $r15;
        java.lang.Integer $r20;
        int $i1;
        java.lang.Boolean $r18;
        boolean $z0;
        groovy.util.ConfigObject$_writeConfig_closure1 r7;
        groovy.lang.Reference $r19;
        java.lang.Object r0, $r13, $r14, $r16;
        java.lang.Class $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12;

        r7 := @this: groovy.util.ConfigObject$_writeConfig_closure1;

        r0 := @parameter0: java.lang.Object;

        $r19 = new groovy.lang.Reference;

        specialinvoke $r19.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r8 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigObject$_writeConfig_closure1");

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0> = $r8;

        goto label02;

     label01:
        $r8 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$0>;

     label02:
        $r3 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r9 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label04;

     label03:
        $r9 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject>;

        if $r4 != null goto label05;

        $r6 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigObject");

        $r10 = $r6;

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject> = $r6;

        goto label06;

     label05:
        $r10 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject>;

     label06:
        $r5 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject>;

        if $r5 != null goto label07;

        $r11 = staticinvoke <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.ConfigObject");

        $r12 = $r11;

        <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject> = $r11;

        goto label08;

     label07:
        $r12 = <groovy.util.ConfigObject$_writeConfig_closure1: java.lang.Class class$groovy$util$ConfigObject>;

     label08:
        $r13 = virtualinvoke $r19.<groovy.lang.Reference: java.lang.Object get()>();

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r12, $r13, "key");

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = ".";

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r10, $r14, "indexOf", $r15);

        $r20 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>($i1);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareGreaterThan(java.lang.Object,java.lang.Object)>($r16, $r20);

        if $z0 == 0 goto label09;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label10;

     label09:
        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label10:
        return $r18;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
