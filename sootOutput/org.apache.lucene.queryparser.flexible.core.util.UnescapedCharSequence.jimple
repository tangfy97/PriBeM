public final class org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence extends java.lang.Object implements java.lang.CharSequence
{
    private char[] chars;
    private boolean[] wasEscaped;

    public void <init>(char[], boolean[], int, int)
    {
        boolean[] $r2, r5, $r6;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0;
        int i0, i1;
        char[] $r1, r3, $r4;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        r3 := @parameter0: char[];

        r5 := @parameter1: boolean[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[i0];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars> = $r1;

        $r2 = newarray (boolean)[i0];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped> = $r2;

        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i1, $r4, 0, i0);

        $r6 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, i1, $r6, 0, i0);

        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        boolean[] $r3, $r5;
        char $c3;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0;
        int $i0, $i1, $i2, i4;
        char[] $r2, $r4;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = newarray (char)[$i0];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars> = $r2;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r3 = newarray (boolean)[$i1];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped> = $r3;

        i4 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i4 >= $i2 goto label2;

        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i4);

        $r4[i4] = $c3;

        $r5 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $r5[i4] = 0;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private void <init>(org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence)
    {
        boolean[] $r3, $r6, $r7;
        char $c3;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0, r1;
        int $i0, $i1, $i2, i4;
        char[] $r2, $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: int length()>();

        $r2 = newarray (char)[$i0];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars> = $r2;

        $i1 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: int length()>();

        $r3 = newarray (boolean)[$i1];

        r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped> = $r3;

        i4 = 0;

     label1:
        $i2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: int length()>();

        if i4 > $i2 goto label2;

        $r5 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $r4 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c3 = $r4[i4];

        $r5[i4] = $c3;

        $r7 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $r6 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $z0 = $r6[i4];

        $r7[i4] = $z0;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public char charAt(int)
    {
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0;
        int i0;
        char[] $r1;
        char $c1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c1 = $r1[i0];

        return $c1;
    }

    public int length()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0;
        char[] $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence $r0, r1;
        int i0, i1, i2;
        boolean[] $r2;
        char[] $r3;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 = i0 - i1;

        $r0 = new org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $r3 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $r2 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        specialinvoke $r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: void <init>(char[],boolean[],int,int)>($r3, $r2, i1, i2);

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r1;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        return $r0;
    }

    public java.lang.String toStringEscaped()
    {
        boolean[] $r4;
        char $c1, $c3;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r1;
        int $i0, i2, $i4;
        char[] $r3, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r2;
        boolean $z0;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: int length()>();

        if i2 < $i0 goto label4;

        $r3 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c1 = $r3[i2];

        $i4 = (int) $c1;

        if $i4 != 92 goto label2;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label3;

     label2:
        $r4 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $z0 = $r4[i2];

        if $z0 == 0 goto label3;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label3:
        $r5 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c3 = $r5[i2];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toStringEscaped(char[])
    {
        int $i0, i2, i5, i6, $i8, $i9, $i10;
        java.lang.String $r2;
        boolean $z0;
        boolean[] $r6;
        char $c1, c3, $c4, $c7;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r1;
        char[] $r3, r4, $r5, $r7;
        java.lang.StringBuilder $r8;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        r4 := @parameter0: char[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        i5 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: int length()>();

        if i5 >= $i0 goto label6;

        $r3 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c1 = $r3[i5];

        $i8 = (int) $c1;

        if $i8 != 92 goto label2;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label5;

     label2:
        i2 = lengthof r4;

        i6 = 0;

     label3:
        if i6 >= i2 goto label5;

        c3 = r4[i6];

        $r5 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c4 = $r5[i5];

        $i9 = (int) $c4;

        $i10 = (int) c3;

        if $i9 != $i10 goto label4;

        $r6 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $z0 = $r6[i5];

        if $z0 == 0 goto label4;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        $r7 = r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: char[] chars>;

        $c7 = $r7[i5];

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i5 = i5 + 1;

        goto label1;

     label6:
        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public boolean wasEscaped(int)
    {
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence r0;
        int i0;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $z0 = $r1[i0];

        return $z0;
    }

    public static final boolean wasEscaped(java.lang.CharSequence, int)
    {
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence $r1;
        java.lang.CharSequence r0;
        int i0;
        boolean[] $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence) r0;

        $r2 = $r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $z1 = $r2[i0];

        return $z1;

     label1:
        return 0;
    }

    public static java.lang.CharSequence toLowerCase(java.lang.CharSequence, java.util.Locale)
    {
        java.lang.CharSequence r0;
        boolean[] r9;
        org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence $r1, $r8, $r10;
        java.util.Locale r3;
        int $i0;
        char[] $r7;
        java.lang.String $r2, $r4, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        r3 := @parameter1: java.util.Locale;

        $z0 = r0 instanceof org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        $r8 = (org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence) r0;

        r9 = $r8.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: boolean[] wasEscaped>;

        $r10 = new org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $i0 = lengthof $r7;

        specialinvoke $r10.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: void <init>(char[],boolean[],int,int)>($r7, r9, 0, $i0);

        return $r10;

     label1:
        $r1 = new org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r3);

        specialinvoke $r1.<org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: void <init>(java.lang.CharSequence)>($r4);

        return $r1;
    }
}
