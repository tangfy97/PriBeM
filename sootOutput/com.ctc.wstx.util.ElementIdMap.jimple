public final class com.ctc.wstx.util.ElementIdMap extends java.lang.Object
{
    protected static final int DEFAULT_SIZE;
    protected static final int MIN_SIZE;
    protected static final int FILL_PCT;
    protected com.ctc.wstx.util.ElementId[] mTable;
    protected int mSize;
    protected int mSizeThreshold;
    protected int mIndexMask;
    protected com.ctc.wstx.util.ElementId mHead;
    protected com.ctc.wstx.util.ElementId mTail;

    public void <init>()
    {
        com.ctc.wstx.util.ElementIdMap r0;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        specialinvoke r0.<com.ctc.wstx.util.ElementIdMap: void <init>(int)>(128);

        return;
    }

    public void <init>(int)
    {
        int i0, $i1, $i2, $i3, i4;
        com.ctc.wstx.util.ElementIdMap r0;
        com.ctc.wstx.util.ElementId[] $r1;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i4 = 16;

     label1:
        if i4 >= i0 goto label2;

        i4 = i4 + i4;

        goto label1;

     label2:
        $r1 = newarray (com.ctc.wstx.util.ElementId)[i4];

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable> = $r1;

        $i1 = i4 - 1;

        r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask> = $i1;

        r0.<com.ctc.wstx.util.ElementIdMap: int mSize> = 0;

        $i2 = i4 * 80;

        $i3 = $i2 / 100;

        r0.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold> = $i3;

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = null;

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead> = null;

        return;
    }

    public com.ctc.wstx.util.ElementId getFirstUndefined()
    {
        com.ctc.wstx.util.ElementId $r1;
        com.ctc.wstx.util.ElementIdMap r0;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        $r1 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        return $r1;
    }

    public com.ctc.wstx.util.ElementId addReferenced(char[], int, int, int, javax.xml.stream.Location, com.ctc.wstx.util.PrefixedName, com.ctc.wstx.util.PrefixedName)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9;
        java.lang.String $r2;
        com.ctc.wstx.util.ElementId[] $r1, $r8, $r10;
        boolean $z0;
        com.ctc.wstx.util.PrefixedName r6, r7;
        com.ctc.wstx.util.ElementId $r4, $r9, $r11, $r12, r13;
        javax.xml.stream.Location r5;
        char[] r3;
        com.ctc.wstx.util.ElementIdMap r0;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        r3 := @parameter0: char[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i0 := @parameter3: int;

        r5 := @parameter4: javax.xml.stream.Location;

        r6 := @parameter5: com.ctc.wstx.util.PrefixedName;

        r7 := @parameter6: com.ctc.wstx.util.PrefixedName;

        $i1 = r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i9 = i0 & $i1;

        $r1 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        r13 = $r1[i9];

     label1:
        if r13 == null goto label3;

        $z0 = virtualinvoke r13.<com.ctc.wstx.util.ElementId: boolean idMatches(char[],int,int)>(r3, i6, i7);

        if $z0 == 0 goto label2;

        return r13;

     label2:
        r13 = virtualinvoke r13.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextColliding()>();

        goto label1;

     label3:
        $i3 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i2 = r0.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold>;

        if $i3 < $i2 goto label4;

        specialinvoke r0.<com.ctc.wstx.util.ElementIdMap: void rehash()>();

        $i8 = r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i9 = i0 & $i8;

     label4:
        $i4 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.util.ElementIdMap: int mSize> = $i5;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r3, i6, i7);

        $r4 = new com.ctc.wstx.util.ElementId;

        specialinvoke $r4.<com.ctc.wstx.util.ElementId: void <init>(java.lang.String,javax.xml.stream.Location,boolean,com.ctc.wstx.util.PrefixedName,com.ctc.wstx.util.PrefixedName)>($r2, r5, 0, r6, r7);

        $r8 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r9 = $r8[i9];

        virtualinvoke $r4.<com.ctc.wstx.util.ElementId: void setNextColliding(com.ctc.wstx.util.ElementId)>($r9);

        $r10 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r10[i9] = $r4;

        $r11 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r11 != null goto label5;

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = $r4;

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead> = $r4;

        goto label6;

     label5:
        $r12 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail>;

        virtualinvoke $r12.<com.ctc.wstx.util.ElementId: void linkUndefined(com.ctc.wstx.util.ElementId)>($r4);

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = $r4;

     label6:
        return $r4;
    }

    public com.ctc.wstx.util.ElementId addReferenced(java.lang.String, javax.xml.stream.Location, com.ctc.wstx.util.PrefixedName, com.ctc.wstx.util.PrefixedName)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String r0;
        com.ctc.wstx.util.ElementId[] $r2, $r7, $r9;
        boolean $z0;
        com.ctc.wstx.util.PrefixedName r5, r6;
        com.ctc.wstx.util.ElementId $r3, $r8, $r10, $r11, r12;
        javax.xml.stream.Location r4;
        com.ctc.wstx.util.ElementIdMap r1;

        r1 := @this: com.ctc.wstx.util.ElementIdMap;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: javax.xml.stream.Location;

        r5 := @parameter2: com.ctc.wstx.util.PrefixedName;

        r6 := @parameter3: com.ctc.wstx.util.PrefixedName;

        $i0 = staticinvoke <com.ctc.wstx.util.ElementIdMap: int calcHash(java.lang.String)>(r0);

        $i1 = r1.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i7 = $i0 & $i1;

        $r2 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        r12 = $r2[i7];

     label1:
        if r12 == null goto label3;

        $z0 = virtualinvoke r12.<com.ctc.wstx.util.ElementId: boolean idMatches(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        return r12;

     label2:
        r12 = virtualinvoke r12.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextColliding()>();

        goto label1;

     label3:
        $i3 = r1.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i2 = r1.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold>;

        if $i3 < $i2 goto label4;

        specialinvoke r1.<com.ctc.wstx.util.ElementIdMap: void rehash()>();

        $i6 = r1.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i7 = $i0 & $i6;

     label4:
        $i4 = r1.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i5 = $i4 + 1;

        r1.<com.ctc.wstx.util.ElementIdMap: int mSize> = $i5;

        $r3 = new com.ctc.wstx.util.ElementId;

        specialinvoke $r3.<com.ctc.wstx.util.ElementId: void <init>(java.lang.String,javax.xml.stream.Location,boolean,com.ctc.wstx.util.PrefixedName,com.ctc.wstx.util.PrefixedName)>(r0, r4, 0, r5, r6);

        $r7 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r8 = $r7[i7];

        virtualinvoke $r3.<com.ctc.wstx.util.ElementId: void setNextColliding(com.ctc.wstx.util.ElementId)>($r8);

        $r9 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r9[i7] = $r3;

        $r10 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r10 != null goto label5;

        r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = $r3;

        r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead> = $r3;

        goto label6;

     label5:
        $r11 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail>;

        virtualinvoke $r11.<com.ctc.wstx.util.ElementId: void linkUndefined(com.ctc.wstx.util.ElementId)>($r3);

        r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = $r3;

     label6:
        return $r3;
    }

    public com.ctc.wstx.util.ElementId addDefined(char[], int, int, int, javax.xml.stream.Location, com.ctc.wstx.util.PrefixedName, com.ctc.wstx.util.PrefixedName)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9;
        java.lang.String $r9;
        com.ctc.wstx.util.ElementId[] $r1, $r14, $r16;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.util.PrefixedName r12, r13;
        com.ctc.wstx.util.ElementId $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r15, r17;
        javax.xml.stream.Location r2;
        char[] r10;
        com.ctc.wstx.util.ElementIdMap r0;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        r10 := @parameter0: char[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: javax.xml.stream.Location;

        r12 := @parameter5: com.ctc.wstx.util.PrefixedName;

        r13 := @parameter6: com.ctc.wstx.util.PrefixedName;

        $i1 = r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i9 = i0 & $i1;

        $r1 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        r17 = $r1[i9];

     label1:
        if r17 == null goto label3;

        $z2 = virtualinvoke r17.<com.ctc.wstx.util.ElementId: boolean idMatches(char[],int,int)>(r10, i6, i7);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        r17 = virtualinvoke r17.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextColliding()>();

        goto label1;

     label3:
        if r17 != null goto label5;

        $i3 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i2 = r0.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold>;

        if $i3 < $i2 goto label4;

        specialinvoke r0.<com.ctc.wstx.util.ElementIdMap: void rehash()>();

        $i8 = r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i9 = i0 & $i8;

     label4:
        $i4 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.util.ElementIdMap: int mSize> = $i5;

        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r10, i6, i7);

        $r11 = new com.ctc.wstx.util.ElementId;

        specialinvoke $r11.<com.ctc.wstx.util.ElementId: void <init>(java.lang.String,javax.xml.stream.Location,boolean,com.ctc.wstx.util.PrefixedName,com.ctc.wstx.util.PrefixedName)>($r9, r2, 1, r12, r13);

        r17 = $r11;

        $r14 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r15 = $r14[i9];

        virtualinvoke $r11.<com.ctc.wstx.util.ElementId: void setNextColliding(com.ctc.wstx.util.ElementId)>($r15);

        $r16 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r16[i9] = $r11;

        goto label9;

     label5:
        $z0 = virtualinvoke r17.<com.ctc.wstx.util.ElementId: boolean isDefined()>();

        if $z0 == 0 goto label6;

        goto label9;

     label6:
        virtualinvoke r17.<com.ctc.wstx.util.ElementId: void markDefined(javax.xml.stream.Location)>(r2);

        $r3 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if r17 != $r3 goto label9;

     label7:
        $r4 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        $r5 = virtualinvoke $r4.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextUndefined()>();

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead> = $r5;

        $r6 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r6 == null goto label8;

        $r8 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        $z1 = virtualinvoke $r8.<com.ctc.wstx.util.ElementId: boolean isDefined()>();

        if $z1 != 0 goto label7;

     label8:
        $r7 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r7 != null goto label9;

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = null;

     label9:
        return r17;
    }

    public com.ctc.wstx.util.ElementId addDefined(java.lang.String, javax.xml.stream.Location, com.ctc.wstx.util.PrefixedName, com.ctc.wstx.util.PrefixedName)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String r0;
        com.ctc.wstx.util.ElementId[] $r2, $r13, $r15;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.util.PrefixedName r11, r12;
        com.ctc.wstx.util.ElementId $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, r16;
        javax.xml.stream.Location r3;
        com.ctc.wstx.util.ElementIdMap r1;

        r1 := @this: com.ctc.wstx.util.ElementIdMap;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.stream.Location;

        r11 := @parameter2: com.ctc.wstx.util.PrefixedName;

        r12 := @parameter3: com.ctc.wstx.util.PrefixedName;

        $i0 = staticinvoke <com.ctc.wstx.util.ElementIdMap: int calcHash(java.lang.String)>(r0);

        $i1 = r1.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i7 = $i0 & $i1;

        $r2 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        r16 = $r2[i7];

     label1:
        if r16 == null goto label3;

        $z2 = virtualinvoke r16.<com.ctc.wstx.util.ElementId: boolean idMatches(java.lang.String)>(r0);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        r16 = virtualinvoke r16.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextColliding()>();

        goto label1;

     label3:
        if r16 != null goto label5;

        $i3 = r1.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i2 = r1.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold>;

        if $i3 < $i2 goto label4;

        specialinvoke r1.<com.ctc.wstx.util.ElementIdMap: void rehash()>();

        $i6 = r1.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i7 = $i0 & $i6;

     label4:
        $i4 = r1.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $i5 = $i4 + 1;

        r1.<com.ctc.wstx.util.ElementIdMap: int mSize> = $i5;

        $r10 = new com.ctc.wstx.util.ElementId;

        specialinvoke $r10.<com.ctc.wstx.util.ElementId: void <init>(java.lang.String,javax.xml.stream.Location,boolean,com.ctc.wstx.util.PrefixedName,com.ctc.wstx.util.PrefixedName)>(r0, r3, 1, r11, r12);

        r16 = $r10;

        $r13 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r14 = $r13[i7];

        virtualinvoke $r10.<com.ctc.wstx.util.ElementId: void setNextColliding(com.ctc.wstx.util.ElementId)>($r14);

        $r15 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r15[i7] = $r10;

        goto label9;

     label5:
        $z0 = virtualinvoke r16.<com.ctc.wstx.util.ElementId: boolean isDefined()>();

        if $z0 == 0 goto label6;

        goto label9;

     label6:
        virtualinvoke r16.<com.ctc.wstx.util.ElementId: void markDefined(javax.xml.stream.Location)>(r3);

        $r4 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if r16 != $r4 goto label9;

     label7:
        $r5 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        $r6 = virtualinvoke $r5.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextUndefined()>();

        r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead> = $r6;

        $r7 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r7 == null goto label8;

        $r9 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        $z1 = virtualinvoke $r9.<com.ctc.wstx.util.ElementId: boolean isDefined()>();

        if $z1 != 0 goto label7;

     label8:
        $r8 = r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mHead>;

        if $r8 != null goto label9;

        r1.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId mTail> = null;

     label9:
        return r16;
    }

    public static int calcHash(char[], int, int)
    {
        char $c1;
        int i0, $i2, i3, i4, i5, $i6;
        char[] r0;

        r0 := @parameter0: char[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i4 = r0[0];

        i5 = 1;

     label1:
        if i5 >= i0 goto label2;

        $i2 = i4 * 31;

        $c1 = r0[i5];

        $i6 = (int) $c1;

        i4 = $i2 + $i6;

        i5 = i5 + 1;

        goto label1;

     label2:
        return i4;
    }

    public static int calcHash(java.lang.String)
    {
        char $c2, $c5;
        int $i0, $i1, i3, i4, $i6, $i7;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i6 = (int) $c5;

        i3 = $i6;

        i4 = 1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i0 goto label2;

        $i1 = i3 * 31;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i7 = (int) $c2;

        i3 = $i1 + $i7;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    private void rehash()
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.lang.String $r10, $r11;
        com.ctc.wstx.util.ElementId[] $r1, r2, $r3, $r13, $r15;
        com.ctc.wstx.util.ElementId $r12, $r14, r16;
        com.ctc.wstx.util.ElementIdMap r0;

        r0 := @this: com.ctc.wstx.util.ElementIdMap;

        $r1 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        i0 = lengthof $r1;

        i1 = i0 << 2;

        r2 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r3 = newarray (com.ctc.wstx.util.ElementId)[i1];

        r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable> = $r3;

        $i2 = i1 - 1;

        r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask> = $i2;

        $i3 = r0.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold>;

        $i4 = $i3 << 2;

        r0.<com.ctc.wstx.util.ElementIdMap: int mSizeThreshold> = $i4;

        i10 = 0;

        i11 = 0;

     label1:
        if i11 >= i0 goto label4;

        r16 = r2[i11];

     label2:
        if r16 == null goto label3;

        i10 = i10 + 1;

        $r11 = virtualinvoke r16.<com.ctc.wstx.util.ElementId: java.lang.String getId()>();

        $i7 = staticinvoke <com.ctc.wstx.util.ElementIdMap: int calcHash(java.lang.String)>($r11);

        $i8 = r0.<com.ctc.wstx.util.ElementIdMap: int mIndexMask>;

        i9 = $i7 & $i8;

        $r12 = virtualinvoke r16.<com.ctc.wstx.util.ElementId: com.ctc.wstx.util.ElementId nextColliding()>();

        $r13 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r14 = $r13[i9];

        virtualinvoke r16.<com.ctc.wstx.util.ElementId: void setNextColliding(com.ctc.wstx.util.ElementId)>($r14);

        $r15 = r0.<com.ctc.wstx.util.ElementIdMap: com.ctc.wstx.util.ElementId[] mTable>;

        $r15[i9] = r16;

        r16 = $r12;

        goto label2;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        $i5 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        if i10 == $i5 goto label5;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("on rehash(): had ");

        $i6 = r0.<com.ctc.wstx.util.ElementIdMap: int mSize>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" entries; now have ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <com.ctc.wstx.util.ExceptionUtil: void throwInternal(java.lang.String)>($r10);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.util.ElementIdMap: int FILL_PCT> = 80;

        <com.ctc.wstx.util.ElementIdMap: int MIN_SIZE> = 16;

        <com.ctc.wstx.util.ElementIdMap: int DEFAULT_SIZE> = 128;

        return;
    }
}
