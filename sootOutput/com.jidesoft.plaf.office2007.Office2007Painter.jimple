public class com.jidesoft.plaf.office2007.Office2007Painter extends com.jidesoft.plaf.basic.BasicPainter
{
    public static final java.lang.String IS_MENU_PART_BUTTON;
    private static com.jidesoft.plaf.office2007.Office2007Painter _instance;
    private com.jidesoft.plaf.basic.ThemePainter _defaultPainter;
    private static final java.awt.Color[] STATUS_BAR_BG;
    private static final java.awt.Color[] SPECIAL_STATUS_BAR_BG;
    private static final java.awt.Color[] DOCKABLE_FRAME_TITLE_BAR_BG;
    private static final java.awt.Color[] ACTIVE_DOCKABLE_FRAME_TITLE_BAR_BG;
    private static final java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_BG;
    private static final java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_BG;
    private static final java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG;
    private static final java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG;
    static final boolean $assertionsDisabled;

    public static com.jidesoft.plaf.basic.ThemePainter getInstance()
    {
        com.jidesoft.plaf.office2007.Office2007Painter $r0, $r1, $r2;

        $r0 = <com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.office2007.Office2007Painter _instance>;

        if $r0 != null goto label1;

        $r2 = new com.jidesoft.plaf.office2007.Office2007Painter;

        specialinvoke $r2.<com.jidesoft.plaf.office2007.Office2007Painter: void <init>()>();

        <com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.office2007.Office2007Painter _instance> = $r2;

     label1:
        $r1 = <com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.office2007.Office2007Painter _instance>;

        return $r1;
    }

    protected void <init>()
    {
        com.jidesoft.plaf.office2007.Office2007Painter r0;

        r0 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicPainter: void <init>()>();

        return;
    }

    protected com.jidesoft.plaf.basic.ThemePainter createDefaultPainter()
    {
        com.jidesoft.plaf.basic.ThemePainter $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = staticinvoke <com.jidesoft.plaf.office2003.Office2003Painter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        return $r0;
    }

    public com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()
    {
        com.jidesoft.plaf.office2007.Office2007Painter r0;
        com.jidesoft.plaf.basic.ThemePainter $r1, $r2, $r3;

        r0 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r1 = r0.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter _defaultPainter>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter createDefaultPainter()>();

        r0.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter _defaultPainter> = $r3;

     label1:
        $r2 = r0.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter _defaultPainter>;

        return $r2;
    }

    public void installDefaults()
    {
        java.lang.Boolean $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void installDefaults()>();

     label1:
        return;
    }

    public void uninstallDefaults()
    {
        java.lang.Boolean $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        boolean $z0, $z1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void uninstallDefaults()>();

     label1:
        return;
    }

    public java.awt.Color getMenuItemBorderColor()
    {
        java.awt.Color $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(100, 100, 100);

        return $r0;
    }

    public void paintContentBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r7;
        java.awt.Rectangle r4;
        java.awt.Graphics2D r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Boolean $r3;
        boolean $z0, $z1;
        javax.swing.JComponent r6;
        com.jidesoft.plaf.office2007.Office2007Painter r5;
        java.awt.Graphics r0, $r1;

        r5 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r6 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

        r2 = (java.awt.Graphics2D) $r1;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Content.background");

        goto label2;

     label1:
        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(12573695);

     label2:
        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $i3 = r4.<java.awt.Rectangle: int x>;

        $i2 = r4.<java.awt.Rectangle: int y>;

        $i1 = r4.<java.awt.Rectangle: int width>;

        $i0 = r4.<java.awt.Rectangle: int height>;

        virtualinvoke r2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    private void paintButtonBorder(java.awt.Component, java.awt.Graphics, java.awt.Rectangle, int)
    {
        java.awt.Color $r3, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r27, $r28, $r29;
        float[] $r19, $r25;
        java.awt.Color[] $r20, $r26;
        java.awt.Paint $r24, $r30;
        java.awt.Graphics2D r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157;
        java.awt.Component r8;
        java.awt.GradientPaint $r4, $r14;
        com.jidesoft.swing.JideButton $r11;
        boolean $z0, $z1, $z2;
        com.jidesoft.plaf.office2007.Office2007Painter r31;
        java.awt.Graphics r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        java.awt.Rectangle r0;

        r31 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r8 := @parameter0: java.awt.Component;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i0 = r0.<java.awt.Rectangle: int x>;

        i1 = r0.<java.awt.Rectangle: int y>;

        i2 = r0.<java.awt.Rectangle: int width>;

        i3 = r0.<java.awt.Rectangle: int height>;

        r2 = (java.awt.Graphics2D) r1;

        if i4 == 3 goto label1;

        if i4 != 1 goto label2;

     label1:
        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int)>(9139796);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);

        $i7 = i0 + 1;

        $i5 = i0 + i2;

        $i6 = $i5 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i7, i1, $i6, i1);

        $r4 = new java.awt.GradientPaint;

        $f0 = (float) i0;

        $i8 = i1 + 1;

        $f1 = (float) $i8;

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int)>(9139796);

        $f2 = (float) i0;

        $i9 = i1 + i3;

        $i10 = $i9 - 3;

        $f3 = (float) $i10;

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int)>(12892584);

        specialinvoke $r4.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>($f0, $f1, $r5, $f2, $f3, $r6);

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        $i13 = i1 + 1;

        $i11 = i1 + i3;

        $i12 = $i11 - 3;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i13, i0, $i12);

        $i14 = i0 + i2;

        $i20 = $i14 - 1;

        $i19 = i1 + 1;

        $i15 = i0 + i2;

        $i18 = $i15 - 1;

        $i16 = i1 + i3;

        $i17 = $i16 - 3;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i20, $i19, $i18, $i17);

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(15977082);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $i21 = i1 + i3;

        $i24 = $i21 - 3;

        $i22 = i1 + i3;

        $i23 = $i22 - 3;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i24, i0, $i23);

        $i25 = i0 + i2;

        $i32 = $i25 - 1;

        $i26 = i1 + i3;

        $i31 = $i26 - 3;

        $i27 = i0 + i2;

        $i30 = $i27 - 1;

        $i28 = i1 + i3;

        $i29 = $i28 - 3;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i32, $i31, $i30, $i29);

        $z0 = r8 instanceof com.jidesoft.swing.JideSplitButton;

        if $z0 == 0 goto label7;

        $z1 = staticinvoke <com.jidesoft.plaf.basic.BasicJideButtonUI: boolean shouldWrapText(java.awt.Component)>(r8);

        if $z1 == 0 goto label7;

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int)>(13680517);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r9);

        $i33 = i1 + i3;

        $i37 = $i33 - 30;

        $i36 = i0 + i2;

        $i34 = i1 + i3;

        $i35 = $i34 - 30;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i37, $i36, $i35);

        goto label7;

     label2:
        if i4 != 2 goto label5;

        if i3 == 0 goto label3;

        $f12 = (float) i0;

        $f13 = (float) i1;

        $f14 = (float) i0;

        $i157 = i1 + i3;

        $f15 = (float) $i157;

        $r25 = newarray (float)[3];

        $r25[0] = 0.0F;

        $r25[1] = 0.5F;

        $r25[2] = 1.0F;

        $r26 = newarray (java.awt.Color)[3];

        $r27 = new java.awt.Color;

        specialinvoke $r27.<java.awt.Color: void <init>(int)>(14207638);

        $r26[0] = $r27;

        $r28 = new java.awt.Color;

        specialinvoke $r28.<java.awt.Color: void <init>(int)>(12165236);

        $r26[1] = $r28;

        $r29 = new java.awt.Color;

        specialinvoke $r29.<java.awt.Color: void <init>(int)>(12102030);

        $r26[2] = $r29;

        $r30 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f12, $f13, $f14, $f15, $r25, $r26);

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r30);

     label3:
        $i104 = i1 + 1;

        $i103 = i3 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i104, i0, $i103);

        $r13 = new java.awt.Color;

        specialinvoke $r13.<java.awt.Color: void <init>(int)>(14405273);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r13);

        $i107 = i0 + 1;

        $i105 = i0 + i2;

        $i106 = $i105 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i107, i1, $i106, i1);

        $r14 = new java.awt.GradientPaint;

        $f4 = (float) i0;

        $i108 = i1 + i3;

        $f5 = (float) $i108;

        $r15 = new java.awt.Color;

        specialinvoke $r15.<java.awt.Color: void <init>(int)>(12299927);

        $i109 = i2 >> 1;

        $i110 = i0 + $i109;

        $f6 = (float) $i110;

        $i111 = i1 + i3;

        $f7 = (float) $i111;

        $r16 = new java.awt.Color;

        specialinvoke $r16.<java.awt.Color: void <init>(int)>(13353898);

        specialinvoke $r14.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>($f4, $f5, $r15, $f6, $f7, $r16, 1);

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14);

        $i118 = i0 + 1;

        $i112 = i1 + i3;

        $i117 = $i112 - 1;

        $i113 = i0 + i2;

        $i116 = $i113 - 2;

        $i114 = i1 + i3;

        $i115 = $i114 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i118, $i117, $i116, $i115);

        $i119 = i3 - 1;

        if $i119 == 0 goto label4;

        $i151 = i0 + i2;

        $i152 = $i151 - 1;

        $f8 = (float) $i152;

        $f9 = (float) i1;

        $i153 = i0 + i2;

        $i154 = $i153 - 1;

        $f10 = (float) $i154;

        $i155 = i1 + i3;

        $i156 = $i155 - 1;

        $f11 = (float) $i156;

        $r19 = newarray (float)[3];

        $r19[0] = 0.0F;

        $r19[1] = 0.5F;

        $r19[2] = 1.0F;

        $r20 = newarray (java.awt.Color)[3];

        $r21 = new java.awt.Color;

        specialinvoke $r21.<java.awt.Color: void <init>(int)>(14470810);

        $r20[0] = $r21;

        $r22 = new java.awt.Color;

        specialinvoke $r22.<java.awt.Color: void <init>(int)>(12823418);

        $r20[1] = $r22;

        $r23 = new java.awt.Color;

        specialinvoke $r23.<java.awt.Color: void <init>(int)>(13815481);

        $r20[2] = $r23;

        $r24 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f8, $f9, $f10, $f11, $r19, $r20);

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r24);

     label4:
        $i120 = i0 + i2;

        $i126 = $i120 - 1;

        $i125 = i1 + 1;

        $i121 = i0 + i2;

        $i124 = $i121 - 1;

        $i122 = i1 + i3;

        $i123 = $i122 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i126, $i125, $i124, $i123);

        $r17 = new java.awt.Color;

        specialinvoke $r17.<java.awt.Color: void <init>(int)>(15393448);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r17);

        $i130 = i0 + 1;

        $i129 = i1 + 1;

        $i128 = i0 + 1;

        $i127 = i1 + 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i130, $i129, $i128, $i127);

        $i131 = i0 + i2;

        $i136 = $i131 - 2;

        $i135 = i1 + 1;

        $i132 = i0 + i2;

        $i134 = $i132 - 2;

        $i133 = i1 + 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i136, $i135, $i134, $i133);

        $r18 = new java.awt.Color;

        specialinvoke $r18.<java.awt.Color: void <init>(int)>(15786940);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r18);

        $i142 = i0 + 1;

        $i137 = i1 + i3;

        $i141 = $i137 - 2;

        $i140 = i0 + 1;

        $i138 = i1 + i3;

        $i139 = $i138 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i142, $i141, $i140, $i139);

        $i143 = i0 + i2;

        $i150 = $i143 - 2;

        $i144 = i1 + i3;

        $i149 = $i144 - 2;

        $i145 = i0 + i2;

        $i148 = $i145 - 2;

        $i146 = i1 + i3;

        $i147 = $i146 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i150, $i149, $i148, $i147);

        goto label7;

     label5:
        if i4 != 0 goto label7;

        $r10 = new java.awt.Color;

        specialinvoke $r10.<java.awt.Color: void <init>(int)>(7836601);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r10);

        $z2 = r8 instanceof com.jidesoft.swing.JideButton;

        if $z2 == 0 goto label6;

        $r11 = (com.jidesoft.swing.JideButton) r8;

        $i58 = virtualinvoke $r11.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i58 != 0 goto label6;

        $i61 = i0 + 1;

        $i59 = i0 + i2;

        $i60 = $i59 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i61, i1, $i60, i1);

        $i64 = i1 + 1;

        $i62 = i1 + i3;

        $i63 = $i62 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i64, i0, $i63);

        $i65 = i0 + i2;

        $i71 = $i65 - 1;

        $i70 = i1 + 1;

        $i66 = i0 + i2;

        $i69 = $i66 - 1;

        $i67 = i1 + i3;

        $i68 = $i67 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i71, $i70, $i69, $i68);

        $i78 = i0 + 1;

        $i72 = i1 + i3;

        $i77 = $i72 - 1;

        $i73 = i0 + i2;

        $i76 = $i73 - 2;

        $i74 = i1 + i3;

        $i75 = $i74 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i78, $i77, $i76, $i75);

        $r12 = new java.awt.Color;

        specialinvoke $r12.<java.awt.Color: void <init>(int)>(10269908);

        virtualinvoke r2.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);

        $i82 = i0 + 1;

        $i81 = i1 + 1;

        $i80 = i0 + 1;

        $i79 = i1 + 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i82, $i81, $i80, $i79);

        $i88 = i0 + 1;

        $i83 = i1 + i3;

        $i87 = $i83 - 2;

        $i86 = i0 + 1;

        $i84 = i1 + i3;

        $i85 = $i84 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i88, $i87, $i86, $i85);

        $i89 = i0 + i2;

        $i94 = $i89 - 2;

        $i93 = i1 + 1;

        $i90 = i0 + i2;

        $i92 = $i90 - 2;

        $i91 = i1 + 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i94, $i93, $i92, $i91);

        $i95 = i0 + i2;

        $i102 = $i95 - 2;

        $i96 = i1 + i3;

        $i101 = $i96 - 2;

        $i97 = i0 + i2;

        $i100 = $i97 - 2;

        $i98 = i1 + i3;

        $i99 = $i98 - 2;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i102, $i101, $i100, $i99);

        goto label7;

     label6:
        $i40 = i0 + 1;

        $i38 = i0 + i2;

        $i39 = $i38 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i40, i1, $i39, i1);

        $i43 = i1 + 1;

        $i41 = i1 + i3;

        $i42 = $i41 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i0, $i43, i0, $i42);

        $i44 = i0 + i2;

        $i50 = $i44 - 1;

        $i49 = i1 + 1;

        $i45 = i0 + i2;

        $i48 = $i45 - 1;

        $i46 = i1 + i3;

        $i47 = $i46 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i50, $i49, $i48, $i47);

        $i57 = i0 + 1;

        $i51 = i1 + i3;

        $i56 = $i51 - 1;

        $i52 = i0 + i2;

        $i55 = $i52 - 1;

        $i53 = i1 + i3;

        $i54 = $i53 - 1;

        virtualinvoke r2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i57, $i56, $i55, $i54);

     label7:
        return;
    }

    public void paintButtonBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int, boolean)
    {
        java.awt.Color $r23, $r24, $r25, $r26, r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r90, $r91, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115;
        float[] $r7, $r44, $r52;
        java.awt.AlphaComposite $r5;
        java.awt.Color[] $r8, $r14, $r19, $r27, $r32, $r45, $r53, $r59, $r64;
        com.jidesoft.swing.ComponentStateSupport $r70, $r71, $r72, $r73;
        java.awt.Paint $r13, $r51, $r58;
        java.awt.Graphics2D $r68;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, $i57, $i59;
        java.lang.Boolean $r0, $r37;
        java.lang.Object $r36;
        java.awt.GradientPaint $r89, $r92;
        com.jidesoft.plaf.basic.ThemePainter $r69, $r74;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8;
        com.jidesoft.plaf.office2007.Office2007Painter r6;
        java.awt.Graphics r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        java.awt.Rectangle r2;
        javax.swing.JComponent r1;

        r6 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Rectangle;

        i47 := @parameter3: int;

        i0 := @parameter4: int;

        z4 := @parameter5: boolean;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label01;

        specialinvoke r6.<com.jidesoft.plaf.basic.BasicPainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r1, r3, r2, i47, i0, z4);

        return;

     label01:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label02;

        $r74 = virtualinvoke r6.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r74.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r1, r3, r2, i47, i0, z4);

        return;

     label02:
        r75 = null;

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label07;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label08;
            case 5: goto label06;
            default: goto label08;
        };

     label03:
        r75 = virtualinvoke r1.<javax.swing.JComponent: java.awt.Color getBackground()>();

        goto label08;

     label04:
        $z7 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z7 == 0 goto label08;

        $r72 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r75 = interfaceinvoke $r72.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

        goto label08;

     label05:
        $z6 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z6 == 0 goto label08;

        $r71 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r75 = interfaceinvoke $r71.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

        goto label08;

     label06:
        $z3 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z3 == 0 goto label08;

        $r70 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r75 = interfaceinvoke $r70.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

        goto label08;

     label07:
        $z8 = r1 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z8 == 0 goto label08;

        $r73 = (com.jidesoft.swing.ComponentStateSupport) r1;

        r75 = interfaceinvoke $r73.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getBackgroundOfState(int)>(i0);

     label08:
        if r75 == null goto label09;

        $z5 = r75 instanceof javax.swing.plaf.UIResource;

        if $z5 != 0 goto label09;

        $r69 = virtualinvoke r6.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r69.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r1, r3, r2, i47, i0, z4);

        return;

     label09:
        $i43 = r2.<java.awt.Rectangle: int x>;

        i48 = $i43;

        $i44 = r2.<java.awt.Rectangle: int y>;

        i49 = $i44;

        $i45 = r2.<java.awt.Rectangle: int width>;

        i50 = $i45;

        $i46 = r2.<java.awt.Rectangle: int height>;

        i51 = $i46;

        if z4 != 0 goto label10;

        $i57 = (int) -1;

        i48 = $i43 + $i57;

        $i59 = (int) -1;

        i49 = $i44 + $i59;

        i50 = $i45 + 2;

        i51 = $i46 + 2;

     label10:
        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        $r68 = (java.awt.Graphics2D) $r4;

        if i0 != 1 goto label11;

        $r59 = newarray (java.awt.Color)[4];

        $r76 = new java.awt.Color;

        specialinvoke $r76.<java.awt.Color: void <init>(int)>(16624913);

        $r59[0] = $r76;

        $r77 = new java.awt.Color;

        specialinvoke $r77.<java.awt.Color: void <init>(int)>(16161816);

        $r59[1] = $r77;

        $r78 = new java.awt.Color;

        specialinvoke $r78.<java.awt.Color: void <init>(int)>(16229415);

        $r59[2] = $r78;

        $r79 = new java.awt.Color;

        specialinvoke $r79.<java.awt.Color: void <init>(int)>(15771740);

        $r59[3] = $r79;

        $r64 = newarray (java.awt.Color)[3];

        $r80 = new java.awt.Color;

        specialinvoke $r80.<java.awt.Color: void <init>(int)>(16623720);

        $r64[0] = $r80;

        $r81 = new java.awt.Color;

        specialinvoke $r81.<java.awt.Color: void <init>(int)>(16551741);

        $r64[1] = $r81;

        $r82 = new java.awt.Color;

        specialinvoke $r82.<java.awt.Color: void <init>(int)>(16560957);

        $r64[2] = $r82;

        staticinvoke <com.jidesoft.plaf.office2007.Office2007Painter: void paintShadowedButtonBackground(java.awt.Graphics2D,java.awt.Rectangle,java.awt.Color[],java.awt.Color[])>($r68, r2, $r59, $r64);

        goto label23;

     label11:
        if i0 != 2 goto label15;

        $r36 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("isMenuPartButton");

        $r37 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r36 != $r37 goto label13;

        $i33 = i51 - 2;

        if 1 == $i33 goto label12;

        $i38 = i48 + 1;

        $f16 = (float) $i38;

        $i39 = i49 + 1;

        $f17 = (float) $i39;

        $i40 = i48 + 1;

        $f18 = (float) $i40;

        $i41 = i49 + i51;

        $i42 = $i41 - 2;

        $f19 = (float) $i42;

        $r52 = newarray (float)[4];

        $r52[0] = 0.0F;

        $r52[1] = 0.5F;

        $r52[2] = 0.51F;

        $r52[3] = 1.0F;

        $r53 = newarray (java.awt.Color)[4];

        $r83 = new java.awt.Color;

        specialinvoke $r83.<java.awt.Color: void <init>(int)>(16776930);

        $r53[0] = $r83;

        $r84 = new java.awt.Color;

        specialinvoke $r84.<java.awt.Color: void <init>(int)>(16768115);

        $r53[1] = $r84;

        $r85 = new java.awt.Color;

        specialinvoke $r85.<java.awt.Color: void <init>(int)>(16766560);

        $r53[2] = $r85;

        $r86 = new java.awt.Color;

        specialinvoke $r86.<java.awt.Color: void <init>(int)>(16771752);

        $r53[3] = $r86;

        $r58 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f16, $f17, $f18, $f19, $r52, $r53);

        virtualinvoke $r68.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r58);

     label12:
        $i37 = i48 + 1;

        $i36 = i49 + 1;

        $i35 = i50 - 2;

        $i34 = i51 - 2;

        virtualinvoke $r68.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i37, $i36, $i35, $i34);

        goto label23;

     label13:
        $r89 = new java.awt.GradientPaint;

        $f4 = (float) i48;

        $f5 = (float) i49;

        $r87 = new java.awt.Color;

        specialinvoke $r87.<java.awt.Color: void <init>(int)>(16777215);

        $f6 = (float) i48;

        $i11 = i49 + i51;

        $f7 = (float) $i11;

        $r88 = new java.awt.Color;

        specialinvoke $r88.<java.awt.Color: void <init>(int)>(16773982);

        specialinvoke $r89.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>($f4, $f5, $r87, $f6, $f7, $r88);

        virtualinvoke $r68.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r89);

        $i15 = i48 + 1;

        $i14 = i49 + 1;

        $i13 = i50 - 2;

        $i12 = i51 - 2;

        virtualinvoke $r68.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i15, $i14, $i13, $i12);

        $r92 = new java.awt.GradientPaint;

        $f8 = (float) i48;

        $f9 = (float) i49;

        $r90 = new java.awt.Color;

        specialinvoke $r90.<java.awt.Color: void <init>(int)>(16775058);

        $i16 = i48 + i50;

        $i17 = $i16 >> 1;

        $f10 = (float) $i17;

        $f11 = (float) i49;

        $r91 = new java.awt.Color;

        specialinvoke $r91.<java.awt.Color: void <init>(int)>(16777215);

        specialinvoke $r92.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>($f8, $f9, $r90, $f10, $f11, $r91, 1);

        virtualinvoke $r68.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r92);

        $i18 = i49 + i51;

        $i22 = $i18 - 2;

        $i21 = i48 + i50;

        $i19 = i49 + i51;

        $i20 = $i19 - 2;

        virtualinvoke $r68.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i48, $i22, $i21, $i20);

        $i23 = i51 - 4;

        if 2 == $i23 goto label14;

        $i28 = i48 + 2;

        $f12 = (float) $i28;

        $i29 = i49 + 2;

        $f13 = (float) $i29;

        $i30 = i48 + 2;

        $f14 = (float) $i30;

        $i31 = i49 + i51;

        $i32 = $i31 - 4;

        $f15 = (float) $i32;

        $r44 = newarray (float)[5];

        $r44[0] = 0.0F;

        $r44[1] = 0.36F;

        $r44[2] = 0.37F;

        $r44[3] = 0.38F;

        $r44[4] = 1.0F;

        $r45 = newarray (java.awt.Color)[5];

        $r93 = new java.awt.Color;

        specialinvoke $r93.<java.awt.Color: void <init>(int)>(16776671);

        $r45[0] = $r93;

        $r94 = new java.awt.Color;

        specialinvoke $r94.<java.awt.Color: void <init>(int)>(16770964);

        $r45[1] = $r94;

        $r95 = new java.awt.Color;

        specialinvoke $r95.<java.awt.Color: void <init>(int)>(16699744);

        $r45[2] = $r95;

        $r96 = new java.awt.Color;

        specialinvoke $r96.<java.awt.Color: void <init>(int)>(16698712);

        $r45[3] = $r96;

        $r97 = new java.awt.Color;

        specialinvoke $r97.<java.awt.Color: void <init>(int)>(16770964);

        $r45[4] = $r97;

        $r51 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f12, $f13, $f14, $f15, $r44, $r45);

        virtualinvoke $r68.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r51);

     label14:
        $i27 = i48 + 2;

        $i26 = i49 + 2;

        $i25 = i50 - 4;

        $i24 = i51 - 4;

        virtualinvoke $r68.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i27, $i26, $i25, $i24);

        goto label23;

     label15:
        if i0 != 3 goto label16;

        $r27 = newarray (java.awt.Color)[4];

        $r98 = new java.awt.Color;

        specialinvoke $r98.<java.awt.Color: void <init>(int)>(15978405);

        $r27[0] = $r98;

        $r99 = new java.awt.Color;

        specialinvoke $r99.<java.awt.Color: void <init>(int)>(15774041);

        $r27[1] = $r99;

        $r100 = new java.awt.Color;

        specialinvoke $r100.<java.awt.Color: void <init>(int)>(15839569);

        $r27[2] = $r100;

        $r101 = new java.awt.Color;

        specialinvoke $r101.<java.awt.Color: void <init>(int)>(16500832);

        $r27[3] = $r101;

        $r32 = newarray (java.awt.Color)[3];

        $r102 = new java.awt.Color;

        specialinvoke $r102.<java.awt.Color: void <init>(int)>(16633240);

        $r32[0] = $r102;

        $r103 = new java.awt.Color;

        specialinvoke $r103.<java.awt.Color: void <init>(int)>(16298843);

        $r32[1] = $r103;

        $r104 = new java.awt.Color;

        specialinvoke $r104.<java.awt.Color: void <init>(int)>(16504194);

        $r32[2] = $r104;

        staticinvoke <com.jidesoft.plaf.office2007.Office2007Painter: void paintShadowedButtonBackground(java.awt.Graphics2D,java.awt.Rectangle,java.awt.Color[],java.awt.Color[])>($r68, r2, $r27, $r32);

        goto label23;

     label16:
        if i0 != 5 goto label21;

        $r14 = newarray (java.awt.Color)[4];

        $r105 = new java.awt.Color;

        specialinvoke $r105.<java.awt.Color: void <init>(int)>(15978405);

        $r14[0] = $r105;

        $r106 = new java.awt.Color;

        specialinvoke $r106.<java.awt.Color: void <init>(int)>(15774041);

        $r14[1] = $r106;

        $r107 = new java.awt.Color;

        specialinvoke $r107.<java.awt.Color: void <init>(int)>(15839569);

        $r14[2] = $r107;

        $r108 = new java.awt.Color;

        specialinvoke $r108.<java.awt.Color: void <init>(int)>(16500832);

        $r14[3] = $r108;

        $r19 = newarray (java.awt.Color)[3];

        $r109 = new java.awt.Color;

        specialinvoke $r109.<java.awt.Color: void <init>(int)>(16633240);

        $r19[0] = $r109;

        $r110 = new java.awt.Color;

        specialinvoke $r110.<java.awt.Color: void <init>(int)>(16298843);

        $r19[1] = $r110;

        $r111 = new java.awt.Color;

        specialinvoke $r111.<java.awt.Color: void <init>(int)>(16504194);

        $r19[2] = $r111;

        i52 = 0;

        i53 = lengthof $r14;

     label17:
        if i52 >= i53 goto label18;

        $r25 = $r14[i52];

        $r26 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r25);

        $r14[i52] = $r26;

        i52 = i52 + 1;

        goto label17;

     label18:
        i54 = 0;

        i55 = lengthof $r19;

     label19:
        if i54 >= i55 goto label20;

        $r23 = $r19[i54];

        $r24 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color toGrayscale(java.awt.Color)>($r23);

        $r19[i54] = $r24;

        i54 = i54 + 1;

        goto label19;

     label20:
        staticinvoke <com.jidesoft.plaf.office2007.Office2007Painter: void paintShadowedButtonBackground(java.awt.Graphics2D,java.awt.Rectangle,java.awt.Color[],java.awt.Color[])>($r68, r2, $r14, $r19);

        goto label23;

     label21:
        if i0 != 0 goto label23;

        $i1 = i51 - 2;

        if 1 == $i1 goto label22;

        $i6 = i48 + 1;

        $f0 = (float) $i6;

        $i7 = i49 + 1;

        $f1 = (float) $i7;

        $i8 = i48 + 1;

        $f2 = (float) $i8;

        $i9 = i49 + i51;

        $i10 = $i9 - 2;

        $f3 = (float) $i10;

        $r7 = newarray (float)[4];

        $r7[0] = 0.0F;

        $r7[1] = 0.5F;

        $r7[2] = 0.51F;

        $r7[3] = 1.0F;

        $r8 = newarray (java.awt.Color)[4];

        $r112 = new java.awt.Color;

        specialinvoke $r112.<java.awt.Color: void <init>(int)>(15266300);

        $r8[0] = $r112;

        $r113 = new java.awt.Color;

        specialinvoke $r113.<java.awt.Color: void <init>(int)>(15266300);

        $r8[1] = $r113;

        $r114 = new java.awt.Color;

        specialinvoke $r114.<java.awt.Color: void <init>(int)>(13820404);

        $r8[2] = $r114;

        $r115 = new java.awt.Color;

        specialinvoke $r115.<java.awt.Color: void <init>(int)>(15463421);

        $r8[3] = $r115;

        $r13 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f0, $f1, $f2, $f3, $r7, $r8);

        virtualinvoke $r68.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13);

     label22:
        $i5 = i48 + 1;

        $i4 = i49 + 1;

        $i3 = i50 - 2;

        $i2 = i51 - 2;

        virtualinvoke $r68.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i4, $i3, $i2);

     label23:
        if z4 == 0 goto label24;

        $r5 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int)>(10);

        virtualinvoke $r68.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r5);

        specialinvoke r6.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBorder(java.awt.Component,java.awt.Graphics,java.awt.Rectangle,int)>(r1, $r68, r2, i0);

     label24:
        virtualinvoke $r68.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    static void paintShadowedButtonBackground(java.awt.Graphics2D, java.awt.Rectangle, java.awt.Color[], java.awt.Color[])
    {
        java.awt.geom.Area $r2, $r4, $r6;
        boolean $z0;
        java.awt.Paint $r10, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.awt.Rectangle r0, $r3, $r5, $r7;
        float[] $r8, $r11;
        java.lang.AssertionError $r14;
        java.awt.Graphics2D r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        java.awt.Color[] r9, r12;

        r1 := @parameter0: java.awt.Graphics2D;

        r0 := @parameter1: java.awt.Rectangle;

        r12 := @parameter2: java.awt.Color[];

        r9 := @parameter3: java.awt.Color[];

        $z0 = <com.jidesoft.plaf.office2007.Office2007Painter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i28 = lengthof r12;

        if $i28 != 4 goto label1;

        $i29 = lengthof r9;

        if $i29 == 3 goto label2;

     label1:
        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label2:
        $i30 = r0.<java.awt.Rectangle: int x>;

        $i31 = r0.<java.awt.Rectangle: int y>;

        $i32 = r0.<java.awt.Rectangle: int width>;

        $i33 = r0.<java.awt.Rectangle: int height>;

        $i0 = $i33 - 2;

        if 1 == $i0 goto label3;

        $i22 = $i30 + 1;

        $f7 = (float) $i22;

        $i23 = $i31 + 1;

        $f6 = (float) $i23;

        $i24 = $i30 + $i32;

        $i25 = $i24 - 2;

        $f5 = (float) $i25;

        $i26 = $i31 + $i33;

        $i27 = $i26 - 2;

        $f4 = (float) $i27;

        $r11 = newarray (float)[4];

        $r11[0] = 0.0F;

        $r11[1] = 0.6F;

        $r11[2] = 0.61F;

        $r11[3] = 1.0F;

        $r13 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f7, $f6, $f5, $f4, $r11, r12);

        virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13);

     label3:
        $i4 = $i30 + 1;

        $i3 = $i31 + 1;

        $i2 = $i32 - 2;

        $i1 = $i33 - 2;

        virtualinvoke r1.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i4, $i3, $i2, $i1);

        $r2 = new java.awt.geom.Area;

        $r3 = new java.awt.Rectangle;

        $i8 = $i30 + 2;

        $i7 = $i31 + 1;

        $i6 = $i32 - 4;

        $i5 = $i33 - 3;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        specialinvoke $r2.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r3);

        $r4 = new java.awt.geom.Area;

        $r5 = new java.awt.Rectangle;

        $i11 = $i30 + 2;

        $i9 = $i31 + $i33;

        $i10 = $i9 - 3;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(int,int,int,int)>($i11, $i10, 1, 1);

        specialinvoke $r4.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r5);

        virtualinvoke $r2.<java.awt.geom.Area: void subtract(java.awt.geom.Area)>($r4);

        $r6 = new java.awt.geom.Area;

        $r7 = new java.awt.Rectangle;

        $i12 = $i30 + $i32;

        $i15 = $i12 - 3;

        $i13 = $i31 + $i33;

        $i14 = $i13 - 3;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>($i15, $i14, 1, 1);

        specialinvoke $r6.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r7);

        virtualinvoke $r2.<java.awt.geom.Area: void subtract(java.awt.geom.Area)>($r6);

        $i16 = $i33 - 4;

        if 2 == $i16 goto label4;

        $i17 = $i30 + 2;

        $f3 = (float) $i17;

        $i18 = $i31 + 2;

        $f2 = (float) $i18;

        $i19 = $i30 + 2;

        $f1 = (float) $i19;

        $i20 = $i31 + $i33;

        $i21 = $i20 - 4;

        $f0 = (float) $i21;

        $r8 = newarray (float)[3];

        $r8[0] = 0.39F;

        $r8[1] = 0.4F;

        $r8[2] = 1.0F;

        $r10 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r8, r9);

        virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

     label4:
        virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r2);

        return;
    }

    public void paintStatusBarBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        boolean $z0;
        com.jidesoft.plaf.office2007.Office2007Painter r14;
        java.awt.Graphics r1, $r2;
        java.awt.Rectangle r3, $r6;
        java.awt.Graphics2D $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, i34, i35, i36;
        javax.swing.JComponent r0;
        java.awt.Color[] $r15;

        r14 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Rectangle;

        i33 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = virtualinvoke r0.<javax.swing.JComponent: boolean isOpaque()>();

        if $z0 == 0 goto label3;

        if i0 != 0 goto label1;

        $r15 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] STATUS_BAR_BG>;

        goto label2;

     label1:
        $r15 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] SPECIAL_STATUS_BAR_BG>;

     label2:
        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();

        $r13 = (java.awt.Graphics2D) $r2;

        $i31 = r3.<java.awt.Rectangle: int y>;

        $r4 = $r15[0];

        virtualinvoke $r13.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r4);

        $i4 = r3.<java.awt.Rectangle: int x>;

        $i2 = r3.<java.awt.Rectangle: int x>;

        $i1 = r3.<java.awt.Rectangle: int width>;

        $i3 = $i2 + $i1;

        virtualinvoke $r13.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i4, $i31, $i3, $i31);

        i34 = $i31 + 1;

        $r5 = $r15[1];

        virtualinvoke $r13.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r5);

        $i8 = r3.<java.awt.Rectangle: int x>;

        $i6 = r3.<java.awt.Rectangle: int x>;

        $i5 = r3.<java.awt.Rectangle: int width>;

        $i7 = $i6 + $i5;

        virtualinvoke $r13.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i8, i34, $i7, i34);

        i35 = i34 + 1;

        $r6 = new java.awt.Rectangle;

        $i13 = r3.<java.awt.Rectangle: int x>;

        $i12 = r3.<java.awt.Rectangle: int width>;

        $i9 = r3.<java.awt.Rectangle: int height>;

        $i10 = $i9 - 4;

        $i11 = $i10 / 3;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i13, i35, $i12, $i11);

        $r8 = $r15[2];

        $r7 = $r15[3];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r13, $r6, $r8, $r7, 1);

        $i15 = $r6.<java.awt.Rectangle: int y>;

        $i14 = $r6.<java.awt.Rectangle: int height>;

        $i16 = $i15 + $i14;

        $r6.<java.awt.Rectangle: int y> = $i16;

        $i18 = r3.<java.awt.Rectangle: int height>;

        $i17 = $r6.<java.awt.Rectangle: int y>;

        $i19 = $i18 - $i17;

        $i20 = $i19 - 2;

        $r6.<java.awt.Rectangle: int height> = $i20;

        $r10 = $r15[4];

        $r9 = $r15[5];

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r13, $r6, $r10, $r9, 1);

        $i22 = $r6.<java.awt.Rectangle: int y>;

        $i21 = $r6.<java.awt.Rectangle: int height>;

        $i32 = $i22 + $i21;

        $r11 = $r15[6];

        virtualinvoke $r13.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r11);

        $i26 = r3.<java.awt.Rectangle: int x>;

        $i24 = r3.<java.awt.Rectangle: int x>;

        $i23 = r3.<java.awt.Rectangle: int width>;

        $i25 = $i24 + $i23;

        virtualinvoke $r13.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i26, $i32, $i25, $i32);

        i36 = $i32 + 1;

        $r12 = $r15[7];

        virtualinvoke $r13.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r12);

        $i30 = r3.<java.awt.Rectangle: int x>;

        $i28 = r3.<java.awt.Rectangle: int x>;

        $i27 = r3.<java.awt.Rectangle: int width>;

        $i29 = $i28 + $i27;

        virtualinvoke $r13.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i30, i36, $i29, i36);

        virtualinvoke $r13.<java.awt.Graphics2D: void dispose()>();

     label3:
        return;
    }

    public void paintStatusBarSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r1, $r3;
        java.awt.Rectangle r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        javax.swing.JComponent r5;
        com.jidesoft.plaf.office2007.Office2007Painter r4;
        java.awt.Graphics r0;

        r4 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r5 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Rectangle;

        i14 := @parameter3: int;

        i15 := @parameter4: int;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int)>(9284821);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        $i5 = r2.<java.awt.Rectangle: int x>;

        $i4 = r2.<java.awt.Rectangle: int y>;

        $i3 = r2.<java.awt.Rectangle: int x>;

        $i1 = r2.<java.awt.Rectangle: int y>;

        $i0 = r2.<java.awt.Rectangle: int height>;

        $i2 = $i1 + $i0;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i5, $i4, $i3, $i2);

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int)>(16777215);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i6 = r2.<java.awt.Rectangle: int x>;

        $i13 = $i6 + 1;

        $i12 = r2.<java.awt.Rectangle: int y>;

        $i7 = r2.<java.awt.Rectangle: int x>;

        $i11 = $i7 + 1;

        $i9 = r2.<java.awt.Rectangle: int y>;

        $i8 = r2.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i13, $i12, $i11, $i10);

        return;
    }

    public void paintMenuShadow(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r7;
        java.awt.Rectangle r6;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Boolean $r2;
        javax.swing.JComponent r0;
        com.jidesoft.plaf.office2007.Office2007Painter r4;
        java.awt.Graphics r3;
        java.lang.Object $r1;

        r4 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r6 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i5 := @parameter4: int;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("vsnet.paintShadow");

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r1 == $r2 goto label1;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicPainter: void paintMenuShadow(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r3, r6, i4, i5);

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(12961221);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i7 = r6.<java.awt.Rectangle: int x>;

        $i6 = r6.<java.awt.Rectangle: int width>;

        $i15 = $i7 + $i6;

        $i14 = r6.<java.awt.Rectangle: int y>;

        $i9 = r6.<java.awt.Rectangle: int x>;

        $i8 = r6.<java.awt.Rectangle: int width>;

        $i13 = $i9 + $i8;

        $i11 = r6.<java.awt.Rectangle: int y>;

        $i10 = r6.<java.awt.Rectangle: int height>;

        $i12 = $i11 + $i10;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i15, $i14, $i13, $i12);

        goto label2;

     label1:
        $r5 = virtualinvoke r4.<com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color getMenuItemBackground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i3 = r6.<java.awt.Rectangle: int x>;

        $i2 = r6.<java.awt.Rectangle: int y>;

        $i1 = r6.<java.awt.Rectangle: int width>;

        $i0 = r6.<java.awt.Rectangle: int height>;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

     label2:
        return;
    }

    public void paintMenuItemBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int, boolean)
    {
        javax.swing.JComponent r0;
        java.awt.Rectangle r5;
        java.awt.Insets $r6;
        com.jidesoft.plaf.office2007.Office2007Painter r7;
        java.awt.Graphics r3;
        int i0, i1;
        java.lang.Boolean $r2;
        javax.swing.ImageIcon $r4;
        java.lang.Object $r1;
        boolean z0;

        r7 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r5 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("isMenuPartButton");

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r1 != $r2 goto label1;

        virtualinvoke r7.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r0, r3, r5, i0, i1, z0);

        goto label2;

     label1:
        $r4 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/office2007/Office2007Painter;", "icons/menu_item_bg.png");

        $r6 = new java.awt.Insets;

        specialinvoke $r6.<java.awt.Insets: void <init>(int,int,int,int)>(2, 2, 2, 2);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawImageBorder(java.awt.Graphics,javax.swing.ImageIcon,java.awt.Rectangle,java.awt.Insets,boolean)>(r3, $r4, r5, $r6, 1);

     label2:
        return;
    }

    public void paintPopupMenuSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        javax.swing.JComponent r1;
        java.awt.Color $r4;
        java.awt.Rectangle r3;
        com.jidesoft.plaf.office2007.Office2007Painter r0;
        java.awt.Graphics r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<com.jidesoft.plaf.basic.BasicPainter: void paintPopupMenuSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r2, r3, i0, i1);

        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int)>(12961221);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i2 = r3.<java.awt.Rectangle: int x>;

        $i9 = $i2 + 24;

        $i8 = r3.<java.awt.Rectangle: int y>;

        $i3 = r3.<java.awt.Rectangle: int x>;

        $i7 = $i3 + 24;

        $i5 = r3.<java.awt.Rectangle: int y>;

        $i4 = r3.<java.awt.Rectangle: int height>;

        $i6 = $i5 + $i4;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i9, $i8, $i7, $i6);

        return;
    }

    public void paintDropDownIcon(java.awt.Graphics, int, int)
    {
        java.awt.Color $r1;
        com.jidesoft.plaf.office2007.Office2007Painter r2;
        java.awt.Graphics r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r2 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int)>(5668273);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        $i2 = i0 + 5;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, i1, $i2, i1);

        $i6 = i0 + 1;

        $i5 = i1 + 1;

        $i4 = i0 + 4;

        $i3 = i1 + 1;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i6, $i5, $i4, $i3);

        $i10 = i0 + 2;

        $i9 = i1 + 2;

        $i8 = i0 + 3;

        $i7 = i1 + 2;

        virtualinvoke r0.<java.awt.Graphics: void drawLine(int,int,int,int)>($i10, $i9, $i8, $i7);

        return;
    }

    public void paintCommandBarBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r6, $r7, $r8, $r9, r15, $r16;
        com.jidesoft.plaf.basic.ThemePainter $r17;
        boolean $z0, $z1, $z2, $z3;
        com.jidesoft.plaf.office2007.Office2007Painter r11;
        java.awt.Paint $r14;
        java.awt.Graphics r2, $r3;
        float $f0, $f1, $f2, $f3;
        java.awt.Rectangle r1;
        float[] $r13;
        java.awt.AlphaComposite $r10, $r18;
        java.awt.Graphics2D r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        java.lang.Boolean $r0;
        javax.swing.JComponent r12;
        java.awt.Color[] $r5;

        r11 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r12 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r1 := @parameter2: java.awt.Rectangle;

        i17 := @parameter3: int;

        i11 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r11.<com.jidesoft.plaf.basic.BasicPainter: void paintCommandBarBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r12, r2, r1, i17, i11);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r17 = virtualinvoke r11.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r17.<com.jidesoft.plaf.basic.ThemePainter: void paintCommandBarBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r12, r2, r1, i17, i11);

        return;

     label2:
        i0 = r1.<java.awt.Rectangle: int x>;

        i1 = r1.<java.awt.Rectangle: int y>;

        i2 = r1.<java.awt.Rectangle: int width>;

        i3 = r1.<java.awt.Rectangle: int height>;

        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.Graphics create()>();

        r4 = (java.awt.Graphics2D) $r3;

        $r5 = newarray (java.awt.Color)[4];

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int)>(15266300);

        $r5[0] = $r6;

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(15266300);

        $r5[1] = $r7;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int)>(13820404);

        $r5[2] = $r8;

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int)>(15463421);

        $r5[3] = $r9;

        i18 = 0;

     label3:
        $i4 = lengthof $r5;

        if i18 >= $i4 goto label4;

        r15 = $r5[i18];

        $r16 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r15, 0.47F);

        $r5[i18] = $r16;

        i18 = i18 + 1;

        goto label3;

     label4:
        $i5 = i3 - 2;

        if 1 == $i5 goto label5;

        $i12 = i0 + 1;

        $f3 = (float) $i12;

        $i13 = i1 + 1;

        $f2 = (float) $i13;

        $i14 = i0 + 1;

        $f1 = (float) $i14;

        $i15 = i1 + i3;

        $i16 = $i15 - 2;

        $f0 = (float) $i16;

        $r13 = newarray (float)[4];

        $r13[0] = 0.0F;

        $r13[1] = 0.5F;

        $r13[2] = 0.51F;

        $r13[3] = 1.0F;

        $r14 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r13, $r5);

        virtualinvoke r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14);

     label5:
        $i9 = i0 + 1;

        $i8 = i1 + 1;

        $i7 = i2 - 2;

        $i6 = i3 - 2;

        virtualinvoke r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i9, $i8, $i7, $i6);

        $r10 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int)>(10);

        $z3 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z3 == 0 goto label6;

        $r18 = virtualinvoke $r10.<java.awt.AlphaComposite: java.awt.AlphaComposite derive(float)>(0.1F);

        goto label7;

     label6:
        $i10 = virtualinvoke $r10.<java.awt.AlphaComposite: int getRule()>();

        $r18 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>($i10, 0.1F);

     label7:
        virtualinvoke r4.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r18);

        specialinvoke r11.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBorder(java.awt.Component,java.awt.Graphics,java.awt.Rectangle,int)>(r12, r4, r1, i11);

        virtualinvoke r4.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    public void paintFloatingCommandBarBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r5, $r6, $r7, $r8, r11, $r12;
        java.awt.Rectangle r0;
        float[] $r9;
        java.awt.Graphics2D r3;
        int i0, i1, i2, i3, $i4, $i5, i6, i7, i8;
        com.jidesoft.plaf.basic.ThemePainter $r14;
        boolean $z0;
        javax.swing.JComponent r15;
        com.jidesoft.plaf.office2007.Office2007Painter r13;
        java.awt.Paint $r10;
        java.awt.Graphics r1, $r2;
        float $f0, $f1, $f2, $f3;
        java.awt.Color[] $r4;

        r13 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r15 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i6 := @parameter3: int;

        i7 := @parameter4: int;

        $z0 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z0 != 0 goto label1;

        $r14 = virtualinvoke r13.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r14.<com.jidesoft.plaf.basic.ThemePainter: void paintFloatingCommandBarBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r15, r1, r0, i6, i7);

        return;

     label1:
        i0 = r0.<java.awt.Rectangle: int x>;

        i1 = r0.<java.awt.Rectangle: int y>;

        i2 = r0.<java.awt.Rectangle: int width>;

        i3 = r0.<java.awt.Rectangle: int height>;

        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();

        r3 = (java.awt.Graphics2D) $r2;

        $r4 = newarray (java.awt.Color)[4];

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int)>(15266300);

        $r4[0] = $r5;

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int)>(15266300);

        $r4[1] = $r6;

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(13820404);

        $r4[2] = $r7;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int)>(15463421);

        $r4[3] = $r8;

        i8 = 0;

     label2:
        $i4 = lengthof $r4;

        if i8 >= $i4 goto label3;

        r11 = $r4[i8];

        $r12 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r11, 0.48F);

        $r4[i8] = $r12;

        i8 = i8 + 1;

        goto label2;

     label3:
        if i3 == 0 goto label4;

        $f3 = (float) i0;

        $f2 = (float) i1;

        $f1 = (float) i0;

        $i5 = i1 + i3;

        $f0 = (float) $i5;

        $r9 = newarray (float)[4];

        $r9[0] = 0.0F;

        $r9[1] = 0.5F;

        $r9[2] = 0.51F;

        $r9[3] = 1.0F;

        $r10 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r9, $r4);

        virtualinvoke r3.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

     label4:
        virtualinvoke r3.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r3.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    public void paintDockableFrameTitlePane(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r6, $r7;
        javax.swing.border.Border $r3, $r11;
        com.jidesoft.plaf.basic.ThemePainter $r14;
        boolean $z0, $z1, $z2, $z3;
        com.jidesoft.plaf.office2007.Office2007Painter r13;
        java.awt.Paint $r9;
        java.awt.Graphics r4, $r5;
        float $f0, $f1, $f2, $f3;
        java.awt.Rectangle r1;
        java.awt.Insets $r12;
        float[] $r8;
        java.awt.Graphics2D $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24;
        java.lang.Boolean $r0;
        javax.swing.JComponent r2;
        java.awt.Color[] $r15;

        r13 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r4 := @parameter1: java.awt.Graphics;

        r1 := @parameter2: java.awt.Rectangle;

        i20 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r13.<com.jidesoft.plaf.basic.BasicPainter: void paintDockableFrameTitlePane(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r4, r1, i20, i0);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r14 = virtualinvoke r13.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r14.<com.jidesoft.plaf.basic.ThemePainter: void paintDockableFrameTitlePane(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r4, r1, i20, i0);

        return;

     label2:
        i21 = r1.<java.awt.Rectangle: int x>;

        i22 = r1.<java.awt.Rectangle: int y>;

        i23 = r1.<java.awt.Rectangle: int width>;

        i24 = r1.<java.awt.Rectangle: int height>;

        $r3 = virtualinvoke r2.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        if $r3 == null goto label3;

        $r11 = virtualinvoke r2.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        $r12 = interfaceinvoke $r11.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r2);

        $i12 = $r12.<java.awt.Insets: int left>;

        i21 = i21 + $i12;

        $i13 = $r12.<java.awt.Insets: int top>;

        i22 = i22 + $i13;

        $i15 = $r12.<java.awt.Insets: int right>;

        $i14 = $r12.<java.awt.Insets: int left>;

        $i16 = $i15 + $i14;

        i23 = i23 - $i16;

        $i18 = $r12.<java.awt.Insets: int top>;

        $i17 = $r12.<java.awt.Insets: int bottom>;

        $i19 = $i18 + $i17;

        i24 = i24 - $i19;

     label3:
        if i0 != 3 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        if $z3 == 0 goto label6;

        $r15 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] ACTIVE_DOCKABLE_FRAME_TITLE_BAR_BG>;

        goto label7;

     label6:
        $r15 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] DOCKABLE_FRAME_TITLE_BAR_BG>;

     label7:
        $r5 = virtualinvoke r4.<java.awt.Graphics: java.awt.Graphics create()>();

        $r10 = (java.awt.Graphics2D) $r5;

        $r6 = virtualinvoke $r10.<java.awt.Graphics2D: java.awt.Color getColor()>();

        $r7 = <java.awt.Color: java.awt.Color WHITE>;

        virtualinvoke $r10.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $i1 = i21 + i23;

        virtualinvoke $r10.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i21, i22, $i1, i22);

        $i2 = i22 + i24;

        virtualinvoke $r10.<java.awt.Graphics2D: void drawLine(int,int,int,int)>(i21, i22, i21, $i2);

        virtualinvoke $r10.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6);

        if i24 == 0 goto label8;

        $i7 = i21 + 1;

        $f3 = (float) $i7;

        $i8 = i22 + 1;

        $f2 = (float) $i8;

        $i9 = i21 + 1;

        $f1 = (float) $i9;

        $i10 = i22 + i24;

        $i11 = $i10 - 1;

        $f0 = (float) $i11;

        $r8 = newarray (float)[4];

        $r8[0] = 0.0F;

        $r8[1] = 0.333F;

        $r8[2] = 0.334F;

        $r8[3] = 1.0F;

        $r9 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r8, $r15);

        virtualinvoke $r10.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r9);

     label8:
        $i6 = i21 + 1;

        $i5 = i22 + 1;

        $i4 = i23 - 1;

        $i3 = i24 - 1;

        virtualinvoke $r10.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i6, $i5, $i4, $i3);

        virtualinvoke $r10.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r3;
        int i0, i1;
        java.lang.Boolean $r0;
        com.jidesoft.plaf.basic.ThemePainter $r6;
        java.awt.Color[] $r5;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i0, i1);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r6 = virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r6.<com.jidesoft.plaf.basic.ThemePainter: void paintCollapsiblePaneTitlePaneBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i0, i1);

        return;

     label2:
        $r5 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_BG>;

        specialinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintCollapsiblePaneTitlePane(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,java.awt.Color[],int,int)>(r2, r3, r4, $r5, i0, i1);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundEmphasized(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r3;
        int i0, i1;
        java.lang.Boolean $r0;
        com.jidesoft.plaf.basic.ThemePainter $r6;
        java.awt.Color[] $r5;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i0, i1);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r6 = virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r6.<com.jidesoft.plaf.basic.ThemePainter: void paintCollapsiblePaneTitlePaneBackgroundEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i0, i1);

        return;

     label2:
        $r5 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_BG>;

        specialinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintCollapsiblePaneTitlePane(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,java.awt.Color[],int,int)>(r2, r3, r4, $r5, i0, i1);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundSeparatorEmphasized(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r3;
        int i0, i1;
        java.lang.Boolean $r0;
        com.jidesoft.plaf.basic.ThemePainter $r6;
        java.awt.Color[] $r5;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundSeparatorEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i1, i0);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r6 = virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r6.<com.jidesoft.plaf.basic.ThemePainter: void paintCollapsiblePaneTitlePaneBackgroundSeparatorEmphasized(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i1, i0);

        return;

     label2:
        $r5 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG>;

        specialinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintCollapsiblePaneTitlePaneSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,java.awt.Color[],int)>(r2, r3, r4, $r5, i0);

        return;
    }

    public void paintCollapsiblePaneTitlePaneBackgroundSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        javax.swing.JComponent r2;
        java.awt.Rectangle r4;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r3;
        int i0, i1;
        java.lang.Boolean $r0;
        com.jidesoft.plaf.basic.ThemePainter $r6;
        java.awt.Color[] $r5;
        boolean $z0, $z1, $z2;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePaneTitlePaneBackgroundSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i1, i0);

        return;

     label1:
        $z2 = staticinvoke <com.jidesoft.utils.SystemInfo: boolean isJdk6Above()>();

        if $z2 != 0 goto label2;

        $r6 = virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: com.jidesoft.plaf.basic.ThemePainter getDefaultPainter()>();

        interfaceinvoke $r6.<com.jidesoft.plaf.basic.ThemePainter: void paintCollapsiblePaneTitlePaneBackgroundSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r2, r3, r4, i1, i0);

        return;

     label2:
        $r5 = <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG>;

        specialinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintCollapsiblePaneTitlePaneSeparator(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,java.awt.Color[],int)>(r2, r3, r4, $r5, i0);

        return;
    }

    private void paintCollapsiblePaneTitlePane(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, java.awt.Color[], int, int)
    {
        java.awt.Color $r8, $r11, $r14, $r17, r24, r26, r28, r30;
        javax.swing.border.Border $r2, $r18;
        float[] $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16;
        java.awt.Color[] r6, r23, r25, r27, r29;
        com.jidesoft.plaf.office2007.Office2007Painter r20;
        java.awt.Paint r22;
        java.awt.Graphics r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31;
        java.awt.Rectangle r0;
        java.awt.Insets $r19;
        java.awt.Graphics2D r21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30, i31, i32, i33;
        javax.swing.JComponent r1;

        r20 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        r6 := @parameter3: java.awt.Color[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i26 = r0.<java.awt.Rectangle: int x>;

        i27 = r0.<java.awt.Rectangle: int y>;

        i28 = r0.<java.awt.Rectangle: int width>;

        i29 = r0.<java.awt.Rectangle: int height>;

        $r2 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        if $r2 == null goto label01;

        $r18 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        $r19 = interfaceinvoke $r18.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $i18 = $r19.<java.awt.Insets: int left>;

        i26 = i26 + $i18;

        $i19 = $r19.<java.awt.Insets: int top>;

        i27 = i27 + $i19;

        $i21 = $r19.<java.awt.Insets: int right>;

        $i20 = $r19.<java.awt.Insets: int left>;

        $i22 = $i21 + $i20;

        i28 = i28 - $i22;

        $i24 = $r19.<java.awt.Insets: int top>;

        $i23 = $r19.<java.awt.Insets: int bottom>;

        $i25 = $i24 + $i23;

        i29 = i29 - $i25;

     label01:
        if i29 == 0 goto label19;

        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        r21 = (java.awt.Graphics2D) $r4;

        r22 = null;

        tableswitch(i0)
        {
            case 1: goto label10;
            case 2: goto label18;
            case 3: goto label02;
            case 4: goto label18;
            case 5: goto label14;
            case 6: goto label18;
            case 7: goto label06;
            default: goto label18;
        };

     label02:
        if i1 != 2 goto label05;

        $i11 = lengthof r6;

        r23 = newarray (java.awt.Color)[$i11];

        i30 = 0;

     label03:
        $i12 = lengthof r6;

        if i30 >= $i12 goto label04;

        r24 = r6[i30];

        $r14 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r24, 0.6F);

        r23[i30] = $r14;

        i30 = i30 + 1;

        goto label03;

     label04:
        $f23 = (float) i26;

        $f22 = (float) i27;

        $i13 = i26 + i28;

        $f21 = (float) $i13;

        $f20 = (float) i27;

        $r13 = newarray (float)[4];

        $r13[0] = 0.0F;

        $r13[1] = 0.333F;

        $r13[2] = 0.334F;

        $r13[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f23, $f22, $f21, $f20, $r13, r23);

        goto label18;

     label05:
        $f19 = (float) i26;

        $f18 = (float) i27;

        $i10 = i26 + i28;

        $f17 = (float) $i10;

        $f16 = (float) i27;

        $r12 = newarray (float)[4];

        $r12[0] = 0.0F;

        $r12[1] = 0.333F;

        $r12[2] = 0.334F;

        $r12[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f19, $f18, $f17, $f16, $r12, r6);

        goto label18;

     label06:
        if i1 != 2 goto label09;

        $i3 = lengthof r6;

        r25 = newarray (java.awt.Color)[$i3];

        i31 = 0;

     label07:
        $i4 = lengthof r6;

        if i31 >= $i4 goto label08;

        r26 = r6[i31];

        $r8 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r26, 0.6F);

        r25[i31] = $r8;

        i31 = i31 + 1;

        goto label07;

     label08:
        $i5 = i26 + i28;

        $f7 = (float) $i5;

        $f6 = (float) i27;

        $f5 = (float) i26;

        $f4 = (float) i27;

        $r7 = newarray (float)[4];

        $r7[0] = 0.0F;

        $r7[1] = 0.333F;

        $r7[2] = 0.334F;

        $r7[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f7, $f6, $f5, $f4, $r7, r25);

        goto label18;

     label09:
        $i2 = i26 + i28;

        $f3 = (float) $i2;

        $f2 = (float) i27;

        $f1 = (float) i26;

        $f0 = (float) i27;

        $r5 = newarray (float)[4];

        $r5[0] = 0.0F;

        $r5[1] = 0.333F;

        $r5[2] = 0.334F;

        $r5[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r5, r6);

        goto label18;

     label10:
        if i1 != 2 goto label13;

        $i15 = lengthof r6;

        r27 = newarray (java.awt.Color)[$i15];

        i32 = 0;

     label11:
        $i16 = lengthof r6;

        if i32 >= $i16 goto label12;

        r28 = r6[i32];

        $r17 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r28, 0.6F);

        r27[i32] = $r17;

        i32 = i32 + 1;

        goto label11;

     label12:
        $f31 = (float) i26;

        $i17 = i27 + i29;

        $f30 = (float) $i17;

        $f29 = (float) i26;

        $f28 = (float) i27;

        $r16 = newarray (float)[4];

        $r16[0] = 0.0F;

        $r16[1] = 0.333F;

        $r16[2] = 0.334F;

        $r16[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f31, $f30, $f29, $f28, $r16, r27);

        goto label18;

     label13:
        $f27 = (float) i26;

        $i14 = i27 + i29;

        $f26 = (float) $i14;

        $f25 = (float) i26;

        $f24 = (float) i27;

        $r15 = newarray (float)[4];

        $r15[0] = 0.0F;

        $r15[1] = 0.333F;

        $r15[2] = 0.334F;

        $r15[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f27, $f26, $f25, $f24, $r15, r6);

        goto label18;

     label14:
        if i1 != 2 goto label17;

        $i7 = lengthof r6;

        r29 = newarray (java.awt.Color)[$i7];

        i33 = 0;

     label15:
        $i8 = lengthof r6;

        if i33 >= $i8 goto label16;

        r30 = r6[i33];

        $r11 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r30, 0.6F);

        r29[i33] = $r11;

        i33 = i33 + 1;

        goto label15;

     label16:
        $f15 = (float) i26;

        $f14 = (float) i27;

        $f13 = (float) i26;

        $i9 = i27 + i29;

        $f12 = (float) $i9;

        $r10 = newarray (float)[4];

        $r10[0] = 0.0F;

        $r10[1] = 0.333F;

        $r10[2] = 0.334F;

        $r10[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f15, $f14, $f13, $f12, $r10, r29);

        goto label18;

     label17:
        $f11 = (float) i26;

        $f10 = (float) i27;

        $f9 = (float) i26;

        $i6 = i27 + i29;

        $f8 = (float) $i6;

        $r9 = newarray (float)[4];

        $r9[0] = 0.0F;

        $r9[1] = 0.333F;

        $r9[2] = 0.334F;

        $r9[3] = 1.0F;

        r22 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f11, $f10, $f9, $f8, $r9, r6);

     label18:
        virtualinvoke r21.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r22);

        virtualinvoke r21.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i26, i27, i28, i29);

        virtualinvoke r21.<java.awt.Graphics2D: void dispose()>();

     label19:
        return;
    }

    private void paintCollapsiblePaneTitlePaneSeparator(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, java.awt.Color[], int)
    {
        java.awt.Color r11, $r12;
        javax.swing.border.Border $r2, $r13;
        com.jidesoft.plaf.office2007.Office2007Painter r15;
        java.awt.Paint $r7, $r10;
        java.awt.Graphics r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.awt.Rectangle r0;
        java.awt.Insets $r14;
        float[] $r5, $r9;
        java.awt.Graphics2D r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        javax.swing.JComponent r1;
        java.awt.Color[] r6, r8;

        r15 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r1 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        r6 := @parameter3: java.awt.Color[];

        i0 := @parameter4: int;

        i13 = r0.<java.awt.Rectangle: int x>;

        i14 = r0.<java.awt.Rectangle: int y>;

        i15 = r0.<java.awt.Rectangle: int width>;

        i16 = r0.<java.awt.Rectangle: int height>;

        $r2 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        if $r2 == null goto label1;

        $r13 = virtualinvoke r1.<javax.swing.JComponent: javax.swing.border.Border getBorder()>();

        $r14 = interfaceinvoke $r13.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r1);

        $i5 = $r14.<java.awt.Insets: int left>;

        i13 = i13 + $i5;

        $i6 = $r14.<java.awt.Insets: int top>;

        i14 = i14 + $i6;

        $i8 = $r14.<java.awt.Insets: int right>;

        $i7 = $r14.<java.awt.Insets: int left>;

        $i9 = $i8 + $i7;

        i15 = i15 - $i9;

        $i11 = $r14.<java.awt.Insets: int top>;

        $i10 = $r14.<java.awt.Insets: int bottom>;

        $i12 = $i11 + $i10;

        i16 = i16 - $i12;

     label1:
        if i16 == 0 goto label6;

        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        r16 = (java.awt.Graphics2D) $r4;

        if i0 != 2 goto label4;

        $i2 = lengthof r6;

        r8 = newarray (java.awt.Color)[$i2];

        i17 = 0;

     label2:
        $i3 = lengthof r6;

        if i17 >= $i3 goto label3;

        r11 = r6[i17];

        $r12 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r11, 0.6F);

        r8[i17] = $r12;

        i17 = i17 + 1;

        goto label2;

     label3:
        $f7 = (float) i13;

        $f6 = (float) i14;

        $i4 = i13 + i15;

        $f5 = (float) $i4;

        $f4 = (float) i14;

        $r9 = newarray (float)[3];

        $r9[0] = 0.0F;

        $r9[1] = 0.5F;

        $r9[2] = 1.0F;

        $r10 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f7, $f6, $f5, $f4, $r9, r8);

        virtualinvoke r16.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

        goto label5;

     label4:
        $f3 = (float) i13;

        $f2 = (float) i14;

        $i1 = i13 + i15;

        $f1 = (float) $i1;

        $f0 = (float) i14;

        $r5 = newarray (float)[3];

        $r5[0] = 0.0F;

        $r5[1] = 0.5F;

        $r5[2] = 1.0F;

        $r7 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.awt.Paint getLinearGradientPaint(float,float,float,float,float[],java.awt.Color[])>($f3, $f2, $f1, $f0, $r5, r6);

        virtualinvoke r16.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r7);

     label5:
        virtualinvoke r16.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(i13, i14, i15, i16);

        virtualinvoke r16.<java.awt.Graphics2D: void dispose()>();

     label6:
        return;
    }

    public void paintCollapsiblePanesBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r7, $r8, $r10, $r11, $r12;
        java.awt.Rectangle $r5, r6, $r9;
        java.awt.Graphics2D r3;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Boolean $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.swing.JComponent r0;
        com.jidesoft.plaf.office2007.Office2007Painter r13;
        java.awt.Graphics r2;

        r13 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r6 := @parameter2: java.awt.Rectangle;

        i4 := @parameter3: int;

        i9 := @parameter4: int;

        $z0 = virtualinvoke r0.<javax.swing.JComponent: boolean isOpaque()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $z2 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label2;

        specialinvoke r13.<com.jidesoft.plaf.basic.BasicPainter: void paintCollapsiblePanesBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r2, r6, i4, i9);

        return;

     label2:
        r3 = (java.awt.Graphics2D) r2;

        $r4 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $z3 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z3 != 0 goto label5;

        $r9 = new java.awt.Rectangle;

        $i8 = r6.<java.awt.Rectangle: int x>;

        $i7 = r6.<java.awt.Rectangle: int y>;

        $i6 = r6.<java.awt.Rectangle: int width>;

        $i5 = r6.<java.awt.Rectangle: int height>;

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        $r10 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $r11 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Color getBackground()>();

        $r12 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r11, 0.6F);

        if i4 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r9, $r10, $r12, $z4);

        goto label8;

     label5:
        $r5 = new java.awt.Rectangle;

        $i3 = r6.<java.awt.Rectangle: int x>;

        $i2 = r6.<java.awt.Rectangle: int y>;

        $i1 = r6.<java.awt.Rectangle: int width>;

        $i0 = r6.<java.awt.Rectangle: int height>;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("CollapsiblePanes.backgroundLt");

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("CollapsiblePanes.backgroundDk");

        if i4 != 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>(r3, $r5, $r7, $r8, $z5);

     label8:
        return;
    }

    public void paintSidePaneItemBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, java.awt.Color[], int, int)
    {
        java.awt.Color $r7, $r8;
        java.awt.Rectangle r4, $r6;
        java.awt.Graphics2D $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Boolean $r0;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r3, $r9;
        java.awt.Color[] r5;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r2 := @parameter0: javax.swing.JComponent;

        r3 := @parameter1: java.awt.Graphics;

        r4 := @parameter2: java.awt.Rectangle;

        r5 := @parameter3: java.awt.Color[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label1;

        if r5 == null goto label2;

        $i9 = lengthof r5;

        if $i9 < 1 goto label2;

        $r7 = r5[0];

        if $r7 == null goto label2;

        $r8 = r5[0];

        $z2 = $r8 instanceof javax.swing.plaf.UIResource;

        if $z2 != 0 goto label2;

     label1:
        specialinvoke r1.<com.jidesoft.plaf.basic.BasicPainter: void paintSidePaneItemBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,java.awt.Color[],int,int)>(r2, r3, r4, r5, i0, i1);

        return;

     label2:
        $r9 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        $r10 = (java.awt.Graphics2D) $r9;

        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label3;
            default: goto label5;
        };

     label3:
        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(90.0);

        $d3 = neg $d0;

        $i2 = r4.<java.awt.Rectangle: int x>;

        $d2 = (double) $i2;

        $i3 = r4.<java.awt.Rectangle: int y>;

        $d1 = (double) $i3;

        virtualinvoke $r10.<java.awt.Graphics2D: void rotate(double,double,double)>($d3, $d2, $d1);

        $i4 = r4.<java.awt.Rectangle: int height>;

        $i6 = neg $i4;

        $i5 = r4.<java.awt.Rectangle: int y>;

        virtualinvoke $r10.<java.awt.Graphics2D: void translate(int,int)>($i6, $i5);

        $r6 = new java.awt.Rectangle;

        $i8 = r4.<java.awt.Rectangle: int height>;

        $i7 = r4.<java.awt.Rectangle: int width>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i8, $i7);

        virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r2, $r10, $r6, 0, i1, 0);

        goto label5;

     label4:
        virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r2, $r10, r4, 0, i1, 0);

     label5:
        virtualinvoke $r10.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    public void paintHeaderBoxBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r4, $r5;
        boolean $z0, $z1, $z3, $z4;
        com.jidesoft.plaf.office2007.Office2007Painter r1;
        java.awt.Graphics r2;
        java.awt.Rectangle r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        javax.swing.AbstractButton $r6;
        javax.swing.JComponent r0;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r0 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $z0 = r0 instanceof javax.swing.AbstractButton;

        if $z0 == 0 goto label1;

        $r6 = (javax.swing.AbstractButton) r0;

        $z1 = virtualinvoke $r6.<javax.swing.AbstractButton: boolean isBorderPainted()>();

        if $z1 == 0 goto label2;

     label1:
        $z4 = 1;

        $z3 = 1;

        goto label3;

     label2:
        $z4 = 0;

        $z3 = 0;

     label3:
        virtualinvoke r1.<com.jidesoft.plaf.office2007.Office2007Painter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int,boolean)>(r0, r2, r3, i0, i1, $z3);

        if $z4 != 0 goto label4;

        $r4 = virtualinvoke r2.<java.awt.Graphics: java.awt.Color getColor()>();

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Table.gridColor");

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $i3 = r3.<java.awt.Rectangle: int x>;

        $i2 = r3.<java.awt.Rectangle: int width>;

        $i4 = $i3 + $i2;

        $i14 = $i4 - 1;

        $i13 = r3.<java.awt.Rectangle: int y>;

        $i6 = r3.<java.awt.Rectangle: int x>;

        $i5 = r3.<java.awt.Rectangle: int width>;

        $i7 = $i6 + $i5;

        $i12 = $i7 - 1;

        $i9 = r3.<java.awt.Rectangle: int y>;

        $i8 = r3.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        $i11 = $i10 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i14, $i13, $i12, $i11);

        $i27 = r3.<java.awt.Rectangle: int x>;

        $i16 = r3.<java.awt.Rectangle: int y>;

        $i15 = r3.<java.awt.Rectangle: int height>;

        $i17 = $i16 + $i15;

        $i26 = $i17 - 1;

        $i19 = r3.<java.awt.Rectangle: int x>;

        $i18 = r3.<java.awt.Rectangle: int width>;

        $i20 = $i19 + $i18;

        $i25 = $i20 - 1;

        $i22 = r3.<java.awt.Rectangle: int y>;

        $i21 = r3.<java.awt.Rectangle: int height>;

        $i23 = $i22 + $i21;

        $i24 = $i23 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i27, $i26, $i25, $i24);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

     label4:
        return;
    }

    public void paintGripper(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int)
    {
        java.awt.Color $r3, $r4, $r5, $r6;
        com.jidesoft.plaf.office2007.Office2007Painter r2;
        java.awt.Graphics r1;
        java.awt.Rectangle r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, $i27, i28, i29, i30;
        javax.swing.JComponent r7;

        r2 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r7 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.awt.Graphics;

        r0 := @parameter2: java.awt.Rectangle;

        i26 := @parameter3: int;

        i25 := @parameter4: int;

        $i0 = r0.<java.awt.Rectangle: int width>;

        if $i0 <= 30 goto label01;

        i26 = 1;

        goto label02;

     label01:
        $i1 = r0.<java.awt.Rectangle: int height>;

        if $i1 <= 30 goto label02;

        i26 = 0;

     label02:
        if i26 != 0 goto label03;

        $i27 = r0.<java.awt.Rectangle: int height>;

        goto label04;

     label03:
        $i27 = r0.<java.awt.Rectangle: int width>;

     label04:
        $i2 = $i27 - 6;

        $i3 = $i2 / 4;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(9, $i3);

        $i23 = r0.<java.awt.Rectangle: int y>;

        $i24 = r0.<java.awt.Rectangle: int x>;

        if i26 != 0 goto label05;

        $i16 = r0.<java.awt.Rectangle: int height>;

        $i18 = $i16 / 2;

        $i17 = $i4 * 2;

        $i19 = $i18 - $i17;

        i28 = $i23 + $i19;

        $i20 = r0.<java.awt.Rectangle: int width>;

        $i21 = $i20 / 2;

        $i22 = $i21 - 1;

        i29 = $i24 + $i22;

        goto label06;

     label05:
        $i5 = r0.<java.awt.Rectangle: int width>;

        $i7 = $i5 / 2;

        $i6 = $i4 * 2;

        $i8 = $i7 - $i6;

        i29 = $i24 + $i8;

        $i9 = r0.<java.awt.Rectangle: int height>;

        $i10 = $i9 / 2;

        $i11 = $i10 - 1;

        i28 = $i23 + $i11;

     label06:
        i30 = 0;

     label07:
        if i30 >= $i4 goto label10;

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color getGripperForegroundLt()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i13 = i29 + 1;

        $i12 = i28 + 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i13, $i12, 2, 2);

        $r4 = virtualinvoke r2.<com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color getGripperForeground()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(i29, i28, 2, 2);

        $r5 = virtualinvoke r2.<com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color getGripperForeground()>();

        $r6 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r5, 0.55F);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i15 = i29 + 1;

        $i14 = i28 + 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i15, $i14, 1, 1);

        if i26 != 0 goto label08;

        i28 = i28 + 4;

        goto label09;

     label08:
        i29 = i29 + 4;

     label09:
        i30 = i30 + 1;

        goto label07;

     label10:
        return;
    }

    public java.awt.Color getGripperForegroundLt()
    {
        java.awt.Color $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Gripper.light");

        return $r0;
    }

    public java.awt.Color getSelectionSelectedDk()
    {
        javax.swing.plaf.ColorUIResource $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r0.<javax.swing.plaf.ColorUIResource: void <init>(int)>(16305011);

        return $r0;
    }

    public java.awt.Color getSelectionSelectedLt()
    {
        javax.swing.plaf.ColorUIResource $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r0.<javax.swing.plaf.ColorUIResource: void <init>(int)>(16710613);

        return $r0;
    }

    public java.awt.Color getBackgroundDk()
    {
        java.awt.Color $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.background");

        return $r0;
    }

    public java.awt.Color getBackgroundLt()
    {
        java.awt.Color $r0;
        com.jidesoft.plaf.office2007.Office2007Painter r1;

        r1 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideTabbedPane.background");

        return $r0;
    }

    public void fillBackground(javax.swing.JComponent, java.awt.Graphics, java.awt.Rectangle, int, int, java.awt.Color)
    {
        java.awt.Color r6, $r7, $r8, $r11, $r14, $r15, $r18;
        com.jidesoft.plaf.office2007.Office2007Painter r19;
        java.awt.Graphics r0, $r1;
        java.awt.Rectangle r3, $r4, $r9, $r12, $r16;
        java.awt.Graphics2D r2, $r5, $r10, $r13, $r17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23;
        javax.swing.JComponent r20;

        r19 := @this: com.jidesoft.plaf.office2007.Office2007Painter;

        r20 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: java.awt.Rectangle;

        i0 := @parameter3: int;

        i21 := @parameter4: int;

        r6 := @parameter5: java.awt.Color;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

        r2 = (java.awt.Graphics2D) $r1;

        if i0 != 0 goto label1;

        $i11 = r3.<java.awt.Rectangle: int height>;

        i22 = $i11 / 3;

        $r13 = (java.awt.Graphics2D) r0;

        $r12 = new java.awt.Rectangle;

        $i14 = r3.<java.awt.Rectangle: int x>;

        $i13 = r3.<java.awt.Rectangle: int y>;

        $i12 = r3.<java.awt.Rectangle: int width>;

        specialinvoke $r12.<java.awt.Rectangle: void <init>(int,int,int,int)>($i14, $i13, $i12, i22);

        $r14 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.74F);

        $r15 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.64F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r13, $r12, $r14, $r15, 1);

        $r17 = (java.awt.Graphics2D) r0;

        $r16 = new java.awt.Rectangle;

        $i20 = r3.<java.awt.Rectangle: int x>;

        $i15 = r3.<java.awt.Rectangle: int y>;

        $i19 = $i15 + i22;

        $i18 = r3.<java.awt.Rectangle: int width>;

        $i16 = r3.<java.awt.Rectangle: int height>;

        $i17 = $i16 - i22;

        specialinvoke $r16.<java.awt.Rectangle: void <init>(int,int,int,int)>($i20, $i19, $i18, $i17);

        $r18 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.64F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r17, $r16, r6, $r18, 1);

        goto label2;

     label1:
        $i1 = r3.<java.awt.Rectangle: int width>;

        i23 = $i1 / 3;

        $r5 = (java.awt.Graphics2D) r0;

        $r4 = new java.awt.Rectangle;

        $i4 = r3.<java.awt.Rectangle: int x>;

        $i3 = r3.<java.awt.Rectangle: int y>;

        $i2 = r3.<java.awt.Rectangle: int height>;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>($i4, $i3, i23, $i2);

        $r7 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.74F);

        $r8 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.64F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r5, $r4, $r7, $r8, 0);

        $r10 = (java.awt.Graphics2D) r0;

        $r9 = new java.awt.Rectangle;

        $i5 = r3.<java.awt.Rectangle: int x>;

        $i10 = $i5 + i23;

        $i9 = r3.<java.awt.Rectangle: int y>;

        $i6 = r3.<java.awt.Rectangle: int width>;

        $i8 = $i6 - i23;

        $i7 = r3.<java.awt.Rectangle: int height>;

        specialinvoke $r9.<java.awt.Rectangle: void <init>(int,int,int,int)>($i10, $i9, $i8, $i7);

        $r11 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r6, 0.64F);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r10, $r9, r6, $r11, 0);

     label2:
        virtualinvoke r2.<java.awt.Graphics2D: void dispose()>();

        return;
    }

    static void <clinit>()
    {
        java.awt.Color $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r46;
        boolean $z0, $z1;
        java.lang.Class $r0;
        java.awt.Color[] $r1, $r10, $r19, $r24, $r29, $r34, $r39, $r43;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.lang.String IS_MENU_PART_BUTTON> = "isMenuPartButton";

        $r0 = class "Lcom/jidesoft/plaf/office2007/Office2007Painter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.jidesoft.plaf.office2007.Office2007Painter: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (java.awt.Color)[8];

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int)>(5668272);

        $r1[0] = $r2;

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int)>(16777215);

        $r1[1] = $r3;

        $r4 = new java.awt.Color;

        specialinvoke $r4.<java.awt.Color: void <init>(int)>(14149369);

        $r1[2] = $r4;

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int)>(13098232);

        $r1[3] = $r5;

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int)>(11784437);

        $r1[4] = $r6;

        $r7 = new java.awt.Color;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>(14149111);

        $r1[5] = $r7;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int)>(13492471);

        $r1[6] = $r8;

        $r9 = new java.awt.Color;

        specialinvoke $r9.<java.awt.Color: void <init>(int)>(12244215);

        $r1[7] = $r9;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] STATUS_BAR_BG> = $r1;

        $r10 = newarray (java.awt.Color)[8];

        $r11 = new java.awt.Color;

        specialinvoke $r11.<java.awt.Color: void <init>(int)>(5668272);

        $r10[0] = $r11;

        $r12 = new java.awt.Color;

        specialinvoke $r12.<java.awt.Color: void <init>(int)>(12967160);

        $r10[1] = $r12;

        $r13 = new java.awt.Color;

        specialinvoke $r13.<java.awt.Color: void <init>(int)>(12769783);

        $r10[2] = $r13;

        $r14 = new java.awt.Color;

        specialinvoke $r14.<java.awt.Color: void <init>(int)>(11127543);

        $r10[3] = $r14;

        $r15 = new java.awt.Color;

        specialinvoke $r15.<java.awt.Color: void <init>(int)>(9484010);

        $r10[4] = $r15;

        $r16 = new java.awt.Color;

        specialinvoke $r16.<java.awt.Color: void <init>(int)>(7772357);

        $r10[5] = $r16;

        $r17 = new java.awt.Color;

        specialinvoke $r17.<java.awt.Color: void <init>(int)>(7640514);

        $r10[6] = $r17;

        $r18 = new java.awt.Color;

        specialinvoke $r18.<java.awt.Color: void <init>(int)>(9809358);

        $r10[7] = $r18;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] SPECIAL_STATUS_BAR_BG> = $r10;

        $r19 = newarray (java.awt.Color)[4];

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int)>(15070461);

        $r19[0] = $r20;

        $r21 = new java.awt.Color;

        specialinvoke $r21.<java.awt.Color: void <init>(int)>(14217212);

        $r19[1] = $r21;

        $r22 = new java.awt.Color;

        specialinvoke $r22.<java.awt.Color: void <init>(int)>(12510973);

        $r19[2] = $r22;

        $r23 = new java.awt.Color;

        specialinvoke $r23.<java.awt.Color: void <init>(int)>(10934772);

        $r19[3] = $r23;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] DOCKABLE_FRAME_TITLE_BAR_BG> = $r19;

        $r24 = newarray (java.awt.Color)[4];

        $r25 = new java.awt.Color;

        specialinvoke $r25.<java.awt.Color: void <init>(int)>(16769959);

        $r24[0] = $r25;

        $r26 = new java.awt.Color;

        specialinvoke $r26.<java.awt.Color: void <init>(int)>(16764785);

        $r24[1] = $r26;

        $r27 = new java.awt.Color;

        specialinvoke $r27.<java.awt.Color: void <init>(int)>(16761679);

        $r24[2] = $r27;

        $r28 = new java.awt.Color;

        specialinvoke $r28.<java.awt.Color: void <init>(int)>(16762964);

        $r24[3] = $r28;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] ACTIVE_DOCKABLE_FRAME_TITLE_BAR_BG> = $r24;

        $r29 = newarray (java.awt.Color)[4];

        $r30 = new java.awt.Color;

        specialinvoke $r30.<java.awt.Color: void <init>(int)>(14149369);

        $r29[0] = $r30;

        $r31 = new java.awt.Color;

        specialinvoke $r31.<java.awt.Color: void <init>(int)>(13098232);

        $r29[1] = $r31;

        $r32 = new java.awt.Color;

        specialinvoke $r32.<java.awt.Color: void <init>(int)>(11784437);

        $r29[2] = $r32;

        $r33 = new java.awt.Color;

        specialinvoke $r33.<java.awt.Color: void <init>(int)>(14149111);

        $r29[3] = $r33;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_BG> = $r29;

        $r34 = newarray (java.awt.Color)[4];

        $r35 = new java.awt.Color;

        specialinvoke $r35.<java.awt.Color: void <init>(int)>(15200510);

        $r34[0] = $r35;

        $r36 = new java.awt.Color;

        specialinvoke $r36.<java.awt.Color: void <init>(int)>(12178423);

        $r34[1] = $r36;

        $r37 = new java.awt.Color;

        specialinvoke $r37.<java.awt.Color: void <init>(int)>(10863853);

        $r34[2] = $r37;

        $r38 = new java.awt.Color;

        specialinvoke $r38.<java.awt.Color: void <init>(int)>(9415117);

        $r34[3] = $r38;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_BG> = $r34;

        $r39 = newarray (java.awt.Color)[3];

        $r40 = new java.awt.Color;

        specialinvoke $r40.<java.awt.Color: void <init>(int)>(13098232);

        $r39[0] = $r40;

        $r41 = new java.awt.Color;

        specialinvoke $r41.<java.awt.Color: void <init>(int)>(14149369);

        $r39[1] = $r41;

        $r42 = new java.awt.Color;

        specialinvoke $r42.<java.awt.Color: void <init>(int)>(13098232);

        $r39[2] = $r42;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG> = $r39;

        $r43 = newarray (java.awt.Color)[3];

        $r44 = new java.awt.Color;

        specialinvoke $r44.<java.awt.Color: void <init>(int)>(12178423);

        $r43[0] = $r44;

        $r45 = new java.awt.Color;

        specialinvoke $r45.<java.awt.Color: void <init>(int)>(15200510);

        $r43[1] = $r45;

        $r46 = new java.awt.Color;

        specialinvoke $r46.<java.awt.Color: void <init>(int)>(12178423);

        $r43[2] = $r46;

        <com.jidesoft.plaf.office2007.Office2007Painter: java.awt.Color[] EMPHASIZED_COLLAPSIBLE_PANE_TITLE_BAR_SEPARATOR_BG> = $r43;

        return;
    }
}
