class org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1 extends java.lang.Object implements java.beans.PropertyChangeListener
{
    java.awt.Point rollover;
    final org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0;

    void <init>(org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1 r0;
        int $i1, $i3;
        java.awt.Point $r3;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.awt.Point;

        $i1 = (int) -1;

        $i3 = (int) -1;

        specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i1, $i3);

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: java.awt.Point rollover> = $r3;

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1 r0;
        java.lang.Boolean $r13;
        java.lang.String $r7, $r8, $r9, $r10;
        java.beans.PropertyChangeEvent r4;
        boolean $z0, $z1, $z2;
        org.jdesktop.swingx.JXTreeTable $r2, $r5;
        java.lang.Object $r6, $r12;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r1, $r3, $r11;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1;

        r4 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r2 = $r1.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        if $r2 == null goto label1;

        $r3 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r5 = $r3.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        $r6 = virtualinvoke r4.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        if $r5 == $r6 goto label2;

     label1:
        return;

     label2:
        $r7 = "rolloverEnabled";

        $r8 = virtualinvoke r4.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label3;

        $r11 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r12 = virtualinvoke r4.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r13 = (java.lang.Boolean) $r12;

        $z2 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r11.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void setRolloverEnabled(boolean)>($z2);

     label3:
        $r9 = "swingx.rollover";

        $r10 = virtualinvoke r4.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label4;

        specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: void rollover(java.beans.PropertyChangeEvent)>(r4);

     label4:
        return;
    }

    private void rollover(java.beans.PropertyChangeEvent)
    {
        java.awt.Point $r3, $r7, $r8;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1 r0;
        java.lang.Object $r2, $r6;
        java.lang.String $r5;
        java.beans.PropertyChangeEvent r1;
        boolean $z0;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r4;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1;

        r1 := @parameter0: java.beans.PropertyChangeEvent;

        $r2 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r3 = (java.awt.Point) $r2;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: boolean isHierarchical(java.awt.Point)>($r3);

        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r5 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        if $z0 == 0 goto label1;

        $r8 = new java.awt.Point;

        $r6 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r7 = (java.awt.Point) $r6;

        specialinvoke $r8.<java.awt.Point: void <init>(java.awt.Point)>($r7);

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke $r4.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void putClientProperty(java.lang.Object,java.lang.Object)>($r5, $r8);

        return;
    }

    private boolean isHierarchical(java.awt.Point)
    {
        int i0;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1 r1;
        java.awt.Point r0;
        org.jdesktop.swingx.JXTreeTable $r3;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r2;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1;

        r0 := @parameter0: java.awt.Point;

        if r0 == null goto label1;

        i0 = r0.<java.awt.Point: int x>;

        if i0 < 0 goto label1;

        $r2 = r1.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r3 = $r2.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        $z0 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>(i0);

        return $z0;

     label1:
        return 0;
    }
}
