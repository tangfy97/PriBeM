class org.joda.time.convert.ConverterSet extends java.lang.Object
{
    private final org.joda.time.convert.Converter[] iConverters;
    private org.joda.time.convert.ConverterSet$Entry[] iSelectEntries;

    void <init>(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet$Entry[] $r2;
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] r1;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters> = r1;

        $r2 = newarray (org.joda.time.convert.ConverterSet$Entry)[16];

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = $r2;

        return;
    }

    org.joda.time.convert.Converter select(java.lang.Class) throws java.lang.IllegalStateException
    {
        org.joda.time.convert.Converter $r1, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, $i10, i11;
        org.joda.time.convert.ConverterSet$Entry $r2, $r5, $r10, r12, $r14;
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.ConverterSet$Entry[] r4, r9, r11;
        java.lang.Object $r3;
        java.lang.Class $r6, r8, r13;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r8 := @parameter0: java.lang.Class;

        r9 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries>;

        i0 = lengthof r9;

        if r8 != null goto label01;

        $i5 = 0;

        goto label02;

     label01:
        $i1 = virtualinvoke r8.<java.lang.Object: int hashCode()>();

        $i2 = i0 - 1;

        $i5 = $i1 & $i2;

     label02:
        i6 = $i5;

     label03:
        $r10 = r9[i6];

        if $r10 == null goto label05;

        $r6 = $r10.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if $r6 != r8 goto label04;

        $r7 = $r10.<org.joda.time.convert.ConverterSet$Entry: org.joda.time.convert.Converter iConverter>;

        return $r7;

     label04:
        i6 = i6 + 1;

        if i6 < i0 goto label03;

        i6 = 0;

        goto label03;

     label05:
        $r1 = staticinvoke <org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)>(r0, r8);

        $r2 = new org.joda.time.convert.ConverterSet$Entry;

        specialinvoke $r2.<org.joda.time.convert.ConverterSet$Entry: void <init>(java.lang.Class,org.joda.time.convert.Converter)>(r8, $r1);

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.Object clone()>();

        r11 = (org.joda.time.convert.ConverterSet$Entry[]) $r3;

        r11[i6] = $r2;

        i7 = 0;

     label06:
        if i7 >= i0 goto label08;

        $r5 = r11[i7];

        if $r5 != null goto label07;

        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = r11;

        return $r1;

     label07:
        i7 = i7 + 1;

        goto label06;

     label08:
        i8 = i0 << 1;

        r4 = newarray (org.joda.time.convert.ConverterSet$Entry)[i8];

        i9 = 0;

     label09:
        if i9 >= i0 goto label14;

        r12 = r11[i9];

        r13 = r12.<org.joda.time.convert.ConverterSet$Entry: java.lang.Class iType>;

        if r13 != null goto label10;

        $i10 = 0;

        goto label11;

     label10:
        $i3 = virtualinvoke r13.<java.lang.Object: int hashCode()>();

        $i4 = i8 - 1;

        $i10 = $i3 & $i4;

     label11:
        i11 = $i10;

     label12:
        $r14 = r4[i11];

        if $r14 == null goto label13;

        i11 = i11 + 1;

        if i11 < i8 goto label12;

        i11 = 0;

        goto label12;

     label13:
        r4[i11] = r12;

        i9 = i9 + 1;

        goto label09;

     label14:
        r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet$Entry[] iSelectEntries> = r4;

        return $r1;
    }

    int size()
    {
        int $i0;
        org.joda.time.convert.ConverterSet r0;
        org.joda.time.convert.Converter[] $r1;

        r0 := @this: org.joda.time.convert.ConverterSet;

        $r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    void copyInto(org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0;
        int $i0;
        org.joda.time.convert.Converter[] r1, $r2, $r3;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r1 := @parameter0: org.joda.time.convert.Converter[];

        $r3 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $r2 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i0);

        return;
    }

    org.joda.time.convert.ConverterSet add(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.Converter r2, r5, $r10;
        int i0, $i1, i2, i3;
        boolean $z0;
        org.joda.time.convert.ConverterSet r0, $r4, $r9;
        java.lang.Class $r6, $r7;
        org.joda.time.convert.Converter[] r1, r3, r8, r11;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r2 := @parameter0: org.joda.time.convert.Converter;

        r3 := @parameter1: org.joda.time.convert.Converter[];

        r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r1;

        i2 = 0;

     label01:
        if i2 >= i0 goto label10;

        r5 = r1[i2];

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label03;

        if r3 == null goto label02;

        r3[0] = null;

     label02:
        return r0;

     label03:
        $r6 = interfaceinvoke r2.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r7 = interfaceinvoke r5.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if $r6 != $r7 goto label09;

        r8 = newarray (org.joda.time.convert.Converter)[i0];

        i3 = 0;

     label04:
        if i3 >= i0 goto label07;

        if i3 == i2 goto label05;

        $r10 = r1[i3];

        r8[i3] = $r10;

        goto label06;

     label05:
        r8[i3] = r2;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        if r3 == null goto label08;

        r3[0] = r5;

     label08:
        $r9 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r9.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>(r8);

        return $r9;

     label09:
        i2 = i2 + 1;

        goto label01;

     label10:
        $i1 = i0 + 1;

        r11 = newarray (org.joda.time.convert.Converter)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r11, 0, i0);

        r11[i0] = r2;

        if r3 == null goto label11;

        r3[0] = null;

     label11:
        $r4 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r4.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>(r11);

        return $r4;
    }

    org.joda.time.convert.ConverterSet remove(org.joda.time.convert.Converter, org.joda.time.convert.Converter[])
    {
        org.joda.time.convert.ConverterSet r0, $r5;
        org.joda.time.convert.Converter r3, $r4;
        int i0, i1;
        org.joda.time.convert.Converter[] r1, r2;
        boolean $z0;

        r0 := @this: org.joda.time.convert.ConverterSet;

        r3 := @parameter0: org.joda.time.convert.Converter;

        r2 := @parameter1: org.joda.time.convert.Converter[];

        r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r1[i1];

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i1, r2);

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r2 == null goto label4;

        r2[0] = null;

     label4:
        return r0;
    }

    org.joda.time.convert.ConverterSet remove(int, org.joda.time.convert.Converter[])
    {
        java.lang.IndexOutOfBoundsException $r7;
        org.joda.time.convert.ConverterSet r0, $r3;
        org.joda.time.convert.Converter $r4, $r5;
        int i0, i1, $i2, $i3, i4, i5;
        org.joda.time.convert.Converter[] r1, r2, $r6;

        r0 := @this: org.joda.time.convert.ConverterSet;

        i1 := @parameter0: int;

        r2 := @parameter1: org.joda.time.convert.Converter[];

        r1 = r0.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r1;

        if i1 < i0 goto label1;

        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label1:
        if r2 == null goto label2;

        $r5 = r1[i1];

        r2[0] = $r5;

     label2:
        $i2 = i0 - 1;

        $r6 = newarray (org.joda.time.convert.Converter)[$i2];

        i4 = 0;

        i5 = 0;

     label3:
        if i5 >= i0 goto label5;

        if i5 == i1 goto label4;

        $i3 = i4;

        i4 = i4 + 1;

        $r4 = r1[i5];

        $r6[$i3] = $r4;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        $r3 = new org.joda.time.convert.ConverterSet;

        specialinvoke $r3.<org.joda.time.convert.ConverterSet: void <init>(org.joda.time.convert.Converter[])>($r6);

        return $r3;
    }

    private static org.joda.time.convert.Converter selectSlow(org.joda.time.convert.ConverterSet, java.lang.Class)
    {
        java.lang.IllegalStateException $r24;
        org.joda.time.convert.Converter $r8, $r10, $r13, r19, r20, r21;
        boolean $z0, $z1;
        java.lang.StringBuffer $r23;
        int i0, i1, i2, i3, i4, $i6, $i8, $i10;
        java.lang.String $r2, $r4, $r7, $r22;
        org.joda.time.convert.ConverterSet $r12, $r15, r17;
        java.lang.Class r0, $r5, $r6, $r9, $r11, $r14;
        org.joda.time.convert.Converter[] $r16, r18;

        r17 := @parameter0: org.joda.time.convert.ConverterSet;

        r0 := @parameter1: java.lang.Class;

        r18 = r17.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r18;

        i1 = i0;

     label01:
        $i6 = (int) -1;

        i1 = i1 + $i6;

        if i1 < 0 goto label04;

        r19 = r18[i1];

        $r14 = interfaceinvoke r19.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        if $r14 != r0 goto label02;

        return r19;

     label02:
        if $r14 == null goto label03;

        if r0 == null goto label01;

        $z1 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label01;

     label03:
        $r15 = virtualinvoke r17.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i1, null);

        r17 = $r15;

        $r16 = $r15.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        r18 = $r16;

        i0 = lengthof $r16;

        goto label01;

     label04:
        if r0 == null goto label05;

        if i0 != 0 goto label06;

     label05:
        return null;

     label06:
        if i0 != 1 goto label07;

        $r13 = r18[0];

        return $r13;

     label07:
        i2 = i0;

     label08:
        $i8 = (int) -1;

        i2 = i2 + $i8;

        if i2 < 0 goto label10;

        r20 = r18[i2];

        $r9 = interfaceinvoke r20.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        i3 = i0;

     label09:
        $i10 = (int) -1;

        i3 = i3 + $i10;

        if i3 < 0 goto label08;

        if i3 == i2 goto label09;

        $r10 = r18[i3];

        $r11 = interfaceinvoke $r10.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 == 0 goto label09;

        $r12 = virtualinvoke r17.<org.joda.time.convert.ConverterSet: org.joda.time.convert.ConverterSet remove(int,org.joda.time.convert.Converter[])>(i3, null);

        r17 = $r12;

        r18 = $r12.<org.joda.time.convert.ConverterSet: org.joda.time.convert.Converter[] iConverters>;

        i0 = lengthof r18;

        i2 = i0 - 1;

        goto label09;

     label10:
        if i0 != 1 goto label11;

        $r8 = r18[0];

        return $r8;

     label11:
        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find best converter for type \"");

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" from remaining set: ");

        i4 = 0;

     label12:
        if i4 >= i0 goto label15;

        r21 = r18[i4];

        $r5 = interfaceinvoke r21.<org.joda.time.convert.Converter: java.lang.Class getSupportedType()>();

        $r6 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        if $r5 != null goto label13;

        $r22 = null;

        goto label14;

     label13:
        $r22 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

     label14:
        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("], ");

        i4 = i4 + 1;

        goto label12;

     label15:
        $r24 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r24;
    }
}
