class thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter extends java.lang.Object implements thredds.crawlabledataset.CrawlableDatasetFilter
{
    private thredds.crawlabledataset.CrawlableDatasetFilter filter1;
    private thredds.crawlabledataset.CrawlableDatasetFilter filter2;

    void <init>(thredds.crawlabledataset.CrawlableDatasetFilter, thredds.crawlabledataset.CrawlableDatasetFilter)
    {
        thredds.crawlabledataset.CrawlableDatasetFilter r1, r2;
        thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter r0;

        r0 := @this: thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetFilter;

        r2 := @parameter1: thredds.crawlabledataset.CrawlableDatasetFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter: thredds.crawlabledataset.CrawlableDatasetFilter filter1> = r1;

        r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter: thredds.crawlabledataset.CrawlableDatasetFilter filter2> = r2;

        return;
    }

    public boolean accept(thredds.crawlabledataset.CrawlableDataset)
    {
        thredds.crawlabledataset.CrawlableDataset r1;
        thredds.crawlabledataset.CrawlableDatasetFilter $r2, $r3;
        thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter r0;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r2 = r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter: thredds.crawlabledataset.CrawlableDatasetFilter filter1>;

        $z0 = interfaceinvoke $r2.<thredds.crawlabledataset.CrawlableDatasetFilter: boolean accept(thredds.crawlabledataset.CrawlableDataset)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter: thredds.crawlabledataset.CrawlableDatasetFilter filter2>;

        $z1 = interfaceinvoke $r3.<thredds.crawlabledataset.CrawlableDatasetFilter: boolean accept(thredds.crawlabledataset.CrawlableDataset)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Object getConfigObject()
    {
        thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter r0;

        r0 := @this: thredds.crawlabledataset.filter.LogicalFilterComposer$AndFilter;

        return null;
    }
}
