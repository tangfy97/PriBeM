public abstract class com.google.gxp.compiler.base.TemplateName extends java.lang.Object implements java.io.Serializable
{
    private final java.lang.String packageName;
    private final java.lang.String baseName;
    private final boolean isValid;
    private static final java.util.regex.Pattern PACKAGE_NAME_PATTERN;
    private static final java.util.regex.Pattern BASE_NAME_PATTERN;
    private static final java.util.regex.Pattern DOTTED_NAME_PATTERN;
    private static final java.util.regex.Pattern WHITESPACE_REMOVER_PATTERN;

    public static com.google.gxp.compiler.base.TemplateName create(java.lang.String, java.lang.String)
    {
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r1;
        java.lang.String r0, r2;
        com.google.gxp.compiler.base.TemplateName$Unqualified $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new com.google.gxp.compiler.base.TemplateName$Unqualified;

        specialinvoke $r3.<com.google.gxp.compiler.base.TemplateName$Unqualified: void <init>(java.lang.String)>(r2);

        return $r3;

     label1:
        $r1 = new com.google.gxp.compiler.base.TemplateName$FullyQualified;

        specialinvoke $r1.<com.google.gxp.compiler.base.TemplateName$FullyQualified: void <init>(java.lang.String,java.lang.String)>(r0, r2);

        return $r1;
    }

    private void <init>(java.lang.String, java.lang.String)
    {
        com.google.gxp.compiler.base.TemplateName r0;
        java.lang.Object $r3;
        java.lang.String r1, r2, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String packageName> = r1;

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String baseName> = $r4;

        $z0 = staticinvoke <com.google.gxp.compiler.base.TemplateName: boolean isValidPackageName(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.google.gxp.compiler.base.TemplateName: boolean isValidBaseName(java.lang.String)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<com.google.gxp.compiler.base.TemplateName: boolean isValid> = $z2;

        return;
    }

    public java.lang.String getPackageName()
    {
        com.google.gxp.compiler.base.TemplateName r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        $r1 = r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String packageName>;

        return $r1;
    }

    public java.lang.String getBaseName()
    {
        com.google.gxp.compiler.base.TemplateName r0;
        java.lang.String $r1;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        $r1 = r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String baseName>;

        return $r1;
    }

    public boolean isValid()
    {
        com.google.gxp.compiler.base.TemplateName r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        $z0 = r0.<com.google.gxp.compiler.base.TemplateName: boolean isValid>;

        return $z0;
    }

    private static boolean isValidPackageName(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern PACKAGE_NAME_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isValidBaseName(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern BASE_NAME_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static com.google.gxp.compiler.base.TemplateName parseDottedName(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String)
    {
        com.google.gxp.compiler.alerts.SourcePosition r7;
        com.google.gxp.compiler.alerts.common.InvalidNameError $r6;
        com.google.gxp.compiler.base.TemplateName $r11;
        java.util.regex.Matcher $r1, $r4;
        com.google.gxp.compiler.alerts.AlertSink r5;
        java.util.regex.Pattern $r0, $r3;
        java.lang.String $r2, r8, r9, r10;
        boolean $z0, $z1, $z2;

        r5 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r7 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r8 := @parameter2: java.lang.String;

        $r0 = <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern WHITESPACE_REMOVER_PATTERN>;

        $r1 = virtualinvoke $r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r8);

        $r2 = virtualinvoke $r1.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(".");

        $r3 = <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern DOTTED_NAME_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        r9 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r10 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        goto label2;

     label1:
        r9 = null;

        r10 = $r2;

     label2:
        $z1 = staticinvoke <com.google.gxp.compiler.base.TemplateName: boolean isValidPackageName(java.lang.String)>(r9);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <com.google.gxp.compiler.base.TemplateName: boolean isValidBaseName(java.lang.String)>(r10);

        if $z2 != 0 goto label4;

     label3:
        if r5 == null goto label4;

        $r6 = new com.google.gxp.compiler.alerts.common.InvalidNameError;

        specialinvoke $r6.<com.google.gxp.compiler.alerts.common.InvalidNameError: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r7, $r2);

        interfaceinvoke r5.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r6);

     label4:
        $r11 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName create(java.lang.String,java.lang.String)>(r9, r10);

        return $r11;
    }

    public static com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String)
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r4;
        com.google.gxp.compiler.alerts.AlertSink r0;
        com.google.gxp.compiler.base.TemplateName $r3;
        java.lang.String r2;
        com.google.gxp.compiler.alerts.common.UnqualifiedNameError $r5;
        boolean $z0;

        r0 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName parseDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r0, r1, r2);

        $z0 = $r3 instanceof com.google.gxp.compiler.base.TemplateName$FullyQualified;

        if $z0 != 0 goto label1;

        if $r3 != null goto label2;

     label1:
        $r4 = (com.google.gxp.compiler.base.TemplateName$FullyQualified) $r3;

        return $r4;

     label2:
        if r0 == null goto label3;

        $r5 = new com.google.gxp.compiler.alerts.common.UnqualifiedNameError;

        specialinvoke $r5.<com.google.gxp.compiler.alerts.common.UnqualifiedNameError: void <init>(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(r1, r2);

        interfaceinvoke r0.<com.google.gxp.compiler.alerts.AlertSink: void add(com.google.gxp.compiler.alerts.Alert)>($r5);

     label3:
        return null;
    }

    public static com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(java.lang.String)
    {
        java.lang.String r0;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.gxp.compiler.base.TemplateName: com.google.gxp.compiler.base.TemplateName$FullyQualified parseFullyQualifiedDottedName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.alerts.SourcePosition,java.lang.String)>(null, null, r0);

        return $r1;
    }

    public abstract java.lang.String toString();

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.TemplateName r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.base.TemplateName;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.base.TemplateName) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.base.TemplateName: boolean equals(com.google.gxp.compiler.base.TemplateName)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.TemplateName)
    {
        com.google.gxp.compiler.base.TemplateName r0, r1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        r1 := @parameter0: com.google.gxp.compiler.base.TemplateName;

        $r3 = r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String packageName>;

        $r2 = r1.<com.google.gxp.compiler.base.TemplateName: java.lang.String packageName>;

        $z0 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.gxp.compiler.base.TemplateName: java.lang.String baseName>;

        $r4 = r1.<com.google.gxp.compiler.base.TemplateName: java.lang.String baseName>;

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        int $i0;
        com.google.gxp.compiler.base.TemplateName r1;
        java.lang.String $r2, $r3;

        r1 := @this: com.google.gxp.compiler.base.TemplateName;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = r1.<com.google.gxp.compiler.base.TemplateName: java.lang.String packageName>;

        $r0[0] = $r2;

        $r3 = r1.<com.google.gxp.compiler.base.TemplateName: java.lang.String baseName>;

        $r0[1] = $r3;

        $i0 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i0;
    }

    void <init>(java.lang.String, java.lang.String, com.google.gxp.compiler.base.TemplateName$1)
    {
        com.google.gxp.compiler.base.TemplateName$1 r3;
        com.google.gxp.compiler.base.TemplateName r0;
        java.lang.String r1, r2;

        r0 := @this: com.google.gxp.compiler.base.TemplateName;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.gxp.compiler.base.TemplateName$1;

        specialinvoke r0.<com.google.gxp.compiler.base.TemplateName: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\p{Alpha}\\w*(?:\\.\\p{Alpha}\\w*)*");

        <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern PACKAGE_NAME_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\p{Alpha}\\w*");

        <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern BASE_NAME_PATTERN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(.*)\\.([^\\.]*)", 32);

        <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern DOTTED_NAME_PATTERN> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\s*)\\.(\\s*)");

        <com.google.gxp.compiler.base.TemplateName: java.util.regex.Pattern WHITESPACE_REMOVER_PATTERN> = $r3;

        return;
    }
}
