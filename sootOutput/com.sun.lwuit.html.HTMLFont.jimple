class com.sun.lwuit.html.HTMLFont extends java.lang.Object
{
    boolean systemFont;
    com.sun.lwuit.Font font;
    java.lang.String family;
    int size;
    int style;
    boolean bold;
    boolean italic;
    java.lang.String tagFont;
    static final int BOLD;
    static final int ITALIC;
    static final int BIG;
    static final int SMALL;
    private com.sun.lwuit.html.HTMLFont[] counterpartFonts;
    private static int[] SPECIAL_FONT_TAGS_ID;
    private static final char TOKEN;
    static java.util.Vector SPECIAL_FONT_TAGS;

    void <init>(java.lang.String, com.sun.lwuit.Font)
    {
        java.util.Vector $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12;
        com.sun.lwuit.html.HTMLFont r0;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r23, $r24;
        com.sun.lwuit.html.HTMLFont[] $r1, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i19;
        java.lang.String $r3, $r13, $r14, $r20, r22;
        java.util.Hashtable $r21;
        java.io.PrintStream $r9;
        java.lang.NumberFormatException $r18;
        com.sun.lwuit.Font r2;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r22 := @parameter0: java.lang.String;

        r2 := @parameter1: com.sun.lwuit.Font;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (com.sun.lwuit.html.HTMLFont)[4];

        r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts> = $r1;

        r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font> = r2;

        $r3 = virtualinvoke r2.<com.sun.lwuit.Font: java.lang.String getCharset()>();

        if $r3 != null goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        r0.<com.sun.lwuit.html.HTMLFont: boolean systemFont> = $z8;

        $z0 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSystemFont()>();

        if $z0 == 0 goto label09;

        $i7 = virtualinvoke r2.<com.sun.lwuit.Font: int getStyle()>();

        $i8 = $i7 & 1;

        if $i8 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        r0.<com.sun.lwuit.html.HTMLFont: boolean bold> = $z9;

        $i9 = virtualinvoke r2.<com.sun.lwuit.Font: int getStyle()>();

        $i10 = $i9 & 2;

        if $i10 == 0 goto label05;

        $z10 = 1;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        r0.<com.sun.lwuit.html.HTMLFont: boolean italic> = $z10;

        $i11 = virtualinvoke r2.<com.sun.lwuit.Font: int getSize()>();

        r0.<com.sun.lwuit.html.HTMLFont: int size> = $i11;

        $i12 = virtualinvoke r2.<com.sun.lwuit.Font: int getFace()>();

        if $i12 != 0 goto label07;

        r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family> = "system";

        goto label21;

     label07:
        $i13 = virtualinvoke r2.<com.sun.lwuit.Font: int getFace()>();

        if $i13 != 32 goto label08;

        r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family> = "monospace";

        goto label21;

     label08:
        $i14 = virtualinvoke r2.<com.sun.lwuit.Font: int getFace()>();

        if $i14 != 64 goto label21;

        r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family> = "proportional";

        goto label21;

     label09:
        if r22 == null goto label21;

        z11 = 0;

        i15 = 0;

        $z3 = virtualinvoke r22.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z3 != 0 goto label10;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        i16 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(46);

     label11:
        $i19 = (int) -1;

        if i16 == $i19 goto label20;

        $r14 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(i15, i16);

     label12:
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        r0.<com.sun.lwuit.html.HTMLFont: int size> = $i6;

     label13:
        goto label19;

     label14:
        $r18 := @caughtexception;

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("bold");

        if $z4 == 0 goto label15;

        r0.<com.sun.lwuit.html.HTMLFont: boolean bold> = 1;

        goto label19;

     label15:
        $z5 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("italic");

        if $z5 == 0 goto label16;

        r0.<com.sun.lwuit.html.HTMLFont: boolean italic> = 1;

        goto label19;

     label16:
        $z6 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("plain");

        if $z6 == 0 goto label17;

        goto label19;

     label17:
        $r19 = <com.sun.lwuit.html.HTMLFont: java.util.Vector SPECIAL_FONT_TAGS>;

        $z7 = virtualinvoke $r19.<java.util.Vector: boolean contains(java.lang.Object)>($r14);

        if $z7 == 0 goto label18;

        $r21 = <com.sun.lwuit.html.HTMLComponent: java.util.Hashtable fonts>;

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r0);

        z11 = 1;

        goto label19;

     label18:
        $r20 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family> = $r20;

        z11 = 1;

     label19:
        $i17 = i16 + 1;

        i15 = $i17;

        i16 = virtualinvoke r22.<java.lang.String: int indexOf(int,int)>(46, $i17);

        goto label11;

     label20:
        if z11 != 0 goto label21;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING: Font was added with key \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' which doesn\'t contain info on the font\'s family or attributes it to a special tag. The font will probably be unusable by the font engine.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label21:
        $z12 = r0.<com.sun.lwuit.html.HTMLFont: boolean bold>;

        if $z12 == 0 goto label22;

        $i4 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i5 = $i4 + 1;

        r0.<com.sun.lwuit.html.HTMLFont: int style> = $i5;

        $r7 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r7[0] = r0;

     label22:
        $z1 = r0.<com.sun.lwuit.html.HTMLFont: boolean italic>;

        if $z1 == 0 goto label23;

        $i2 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i3 = $i2 + 2;

        r0.<com.sun.lwuit.html.HTMLFont: int style> = $i3;

        $r6 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r6[1] = r0;

     label23:
        $z2 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSystemFont()>();

        if $z2 == 0 goto label25;

        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        if $i0 != 16 goto label24;

        $r5 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r5[2] = r0;

        goto label25;

     label24:
        $i1 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        if $i1 != 8 goto label25;

        $r4 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r4[3] = r0;

     label25:
        return;

        catch java.lang.NumberFormatException from label12 to label13 with label14;
    }

    boolean isSystemFont()
    {
        com.sun.lwuit.html.HTMLFont r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean systemFont>;

        return $z0;
    }

    boolean isBold()
    {
        com.sun.lwuit.html.HTMLFont r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean bold>;

        return $z0;
    }

    boolean isItalic()
    {
        com.sun.lwuit.html.HTMLFont r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean italic>;

        return $z0;
    }

    boolean isCounterpart(int, com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r1;
        int i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.html.HTMLFont;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $z3 = specialinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isBoldCounterpart(com.sun.lwuit.html.HTMLFont)>(r1);

        return $z3;

     label2:
        $z2 = specialinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isItalicCounterpart(com.sun.lwuit.html.HTMLFont)>(r1);

        return $z2;

     label3:
        $z1 = specialinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isBigCounterpart(com.sun.lwuit.html.HTMLFont)>(r1);

        return $z1;

     label4:
        $z0 = specialinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSmallCounterpart(com.sun.lwuit.html.HTMLFont)>(r1);

        return $z0;

     label5:
        return 0;
    }

    boolean isSameFamily(com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r2;
        java.lang.String $r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r2 := @parameter0: com.sun.lwuit.html.HTMLFont;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family>;

        if $r1 == null goto label1;

        $r3 = virtualinvoke r2.<com.sun.lwuit.html.HTMLFont: java.lang.String getFamily()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family>;

        $r5 = virtualinvoke r2.<com.sun.lwuit.html.HTMLFont: java.lang.String getFamily()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isBigCounterpart(com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r1 := @parameter0: com.sun.lwuit.html.HTMLFont;

        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $i1 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getSize()>();

        if $i0 > $i1 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSameFamily(com.sun.lwuit.html.HTMLFont)>(r1);

        if $z0 == 0 goto label2;

        $i2 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i3 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getStyle()>();

        if $i2 != $i3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isSmallCounterpart(com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r1 := @parameter0: com.sun.lwuit.html.HTMLFont;

        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $i1 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getSize()>();

        if $i0 < $i1 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSameFamily(com.sun.lwuit.html.HTMLFont)>(r1);

        if $z0 == 0 goto label2;

        $i2 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i3 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getStyle()>();

        if $i2 != $i3 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isBoldCounterpart(com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r1 := @parameter0: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean bold>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $i1 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getSize()>();

        if $i0 != $i1 goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSameFamily(com.sun.lwuit.html.HTMLFont)>(r1);

        if $z1 == 0 goto label2;

        $z2 = r0.<com.sun.lwuit.html.HTMLFont: boolean italic>;

        $z3 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: boolean isItalic()>();

        if $z2 != $z3 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    private boolean isItalicCounterpart(com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont r0, r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r1 := @parameter0: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean italic>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $i1 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: int getSize()>();

        if $i0 != $i1 goto label2;

        $z1 = virtualinvoke r0.<com.sun.lwuit.html.HTMLFont: boolean isSameFamily(com.sun.lwuit.html.HTMLFont)>(r1);

        if $z1 == 0 goto label2;

        $z2 = r0.<com.sun.lwuit.html.HTMLFont: boolean bold>;

        $z3 = virtualinvoke r1.<com.sun.lwuit.html.HTMLFont: boolean isBold()>();

        if $z2 != $z3 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    java.lang.String getFamily()
    {
        com.sun.lwuit.html.HTMLFont r0;
        java.lang.String $r1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: java.lang.String family>;

        return $r1;
    }

    com.sun.lwuit.Font getFont()
    {
        com.sun.lwuit.html.HTMLFont r0;
        com.sun.lwuit.Font $r1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        return $r1;
    }

    com.sun.lwuit.html.HTMLFont getCounterpartFont(int)
    {
        byte $b15, $b16;
        boolean $z0;
        com.sun.lwuit.html.HTMLFont r0, $r2, $r3, $r7, $r11, $r15, $r20;
        com.sun.lwuit.html.HTMLFont[] $r1, $r5, $r9, $r13, $r17, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.sun.lwuit.Font $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        i0 := @parameter0: int;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean systemFont>;

        if $z0 == 0 goto label9;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r2 = $r1[i0];

        if $r2 != null goto label9;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label6;
            default: goto label9;
        };

     label1:
        $r17 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r15 = new com.sun.lwuit.html.HTMLFont;

        $r16 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i11 = virtualinvoke $r16.<com.sun.lwuit.Font: int getFace()>();

        $i12 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i14 = $i12 + 1;

        $i13 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $r18 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i11, $i14, $i13);

        specialinvoke $r15.<com.sun.lwuit.html.HTMLFont: void <init>(java.lang.String,com.sun.lwuit.Font)>(null, $r18);

        $r17[i0] = $r15;

        goto label9;

     label2:
        $r13 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r11 = new com.sun.lwuit.html.HTMLFont;

        $r12 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i7 = virtualinvoke $r12.<com.sun.lwuit.Font: int getFace()>();

        $i8 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $i10 = $i8 + 2;

        $i9 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        $r14 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i7, $i10, $i9);

        specialinvoke $r11.<com.sun.lwuit.html.HTMLFont: void <init>(java.lang.String,com.sun.lwuit.Font)>(null, $r14);

        $r13[i0] = $r11;

        goto label9;

     label3:
        $i4 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        if $i4 != 8 goto label4;

        $b15 = 0;

        goto label5;

     label4:
        $b15 = 16;

     label5:
        $r9 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r7 = new com.sun.lwuit.html.HTMLFont;

        $r8 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i5 = virtualinvoke $r8.<com.sun.lwuit.Font: int getFace()>();

        $i6 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $r10 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i5, $i6, $b15);

        specialinvoke $r7.<com.sun.lwuit.html.HTMLFont: void <init>(java.lang.String,com.sun.lwuit.Font)>(null, $r10);

        $r9[i0] = $r7;

        goto label9;

     label6:
        $i1 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        if $i1 != 16 goto label7;

        $b16 = 0;

        goto label8;

     label7:
        $b16 = 8;

     label8:
        $r5 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r3 = new com.sun.lwuit.html.HTMLFont;

        $r4 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i2 = virtualinvoke $r4.<com.sun.lwuit.Font: int getFace()>();

        $i3 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        $r6 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i2, $i3, $b16);

        specialinvoke $r3.<com.sun.lwuit.html.HTMLFont: void <init>(java.lang.String,com.sun.lwuit.Font)>(null, $r6);

        $r5[i0] = $r3;

     label9:
        $r19 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r20 = $r19[i0];

        return $r20;
    }

    void setCounterpartFont(int, com.sun.lwuit.html.HTMLFont)
    {
        com.sun.lwuit.html.HTMLFont[] $r2;
        com.sun.lwuit.html.HTMLFont r0, r1;
        int i0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        i0 := @parameter0: int;

        r1 := @parameter1: com.sun.lwuit.html.HTMLFont;

        $r2 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.html.HTMLFont[] counterpartFonts>;

        $r2[i0] = r1;

        return;
    }

    int getHeight()
    {
        int $i0;
        com.sun.lwuit.html.HTMLFont r0;
        com.sun.lwuit.Font $r1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.Font: int getHeight()>();

        return $i0;
    }

    int stringWidth(java.lang.String)
    {
        com.sun.lwuit.html.HTMLFont r0;
        int $i0;
        java.lang.String r1;
        com.sun.lwuit.Font $r2;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i0 = virtualinvoke $r2.<com.sun.lwuit.Font: int stringWidth(java.lang.String)>(r1);

        return $i0;
    }

    int getFace()
    {
        int $i0;
        com.sun.lwuit.html.HTMLFont r0;
        com.sun.lwuit.Font $r1;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.Font: int getFace()>();

        return $i0;
    }

    int getStyle()
    {
        int $i0;
        com.sun.lwuit.html.HTMLFont r0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int style>;

        return $i0;
    }

    int getSize()
    {
        int $i0;
        com.sun.lwuit.html.HTMLFont r0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        return $i0;
    }

    int getSizeInPixels()
    {
        com.sun.lwuit.html.HTMLFont r0;
        int $i0, $i1, $i2;
        com.sun.lwuit.Font $r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.html.HTMLFont;

        $z0 = r0.<com.sun.lwuit.html.HTMLFont: boolean systemFont>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.sun.lwuit.html.HTMLFont: com.sun.lwuit.Font font>;

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Font: int getHeight()>();

        $i2 = $i1 - 2;

        return $i2;

     label1:
        $i0 = r0.<com.sun.lwuit.html.HTMLFont: int size>;

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r4;
        java.util.Vector $r1, $r6;
        int[] $r0, $r2, $r3;
        int $i0, $i1, i2;
        java.lang.String $r5;

        <com.sun.lwuit.html.HTMLFont: char TOKEN> = 46;

        <com.sun.lwuit.html.HTMLFont: int SMALL> = 3;

        <com.sun.lwuit.html.HTMLFont: int BIG> = 2;

        <com.sun.lwuit.html.HTMLFont: int ITALIC> = 1;

        <com.sun.lwuit.html.HTMLFont: int BOLD> = 0;

        $r0 = newarray (int)[14];

        $r0[0] = 13;

        $r0[1] = 26;

        $r0[2] = 11;

        $r0[3] = 10;

        $r0[4] = 24;

        $r0[5] = 20;

        $r0[6] = 27;

        $r0[7] = 9;

        $r0[8] = 14;

        $r0[9] = 15;

        $r0[10] = 16;

        $r0[11] = 17;

        $r0[12] = 18;

        $r0[13] = 19;

        <com.sun.lwuit.html.HTMLFont: int[] SPECIAL_FONT_TAGS_ID> = $r0;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        <com.sun.lwuit.html.HTMLFont: java.util.Vector SPECIAL_FONT_TAGS> = $r1;

        i2 = 0;

     label1:
        $r2 = <com.sun.lwuit.html.HTMLFont: int[] SPECIAL_FONT_TAGS_ID>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label2;

        $r6 = <com.sun.lwuit.html.HTMLFont: java.util.Vector SPECIAL_FONT_TAGS>;

        $r4 = <com.sun.lwuit.html.Element: java.lang.String[] TAG_NAMES>;

        $r3 = <com.sun.lwuit.html.HTMLFont: int[] SPECIAL_FONT_TAGS_ID>;

        $i1 = $r3[i2];

        $r5 = $r4[$i1];

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
