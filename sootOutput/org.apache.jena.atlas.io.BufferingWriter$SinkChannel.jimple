public class org.apache.jena.atlas.io.BufferingWriter$SinkChannel extends java.lang.Object implements org.apache.jena.atlas.lib.Sink
{
    private java.nio.channels.WritableByteChannel out;

    public void <init>(java.nio.channels.WritableByteChannel)
    {
        java.nio.channels.WritableByteChannel r1;
        org.apache.jena.atlas.io.BufferingWriter$SinkChannel r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkChannel;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.atlas.io.BufferingWriter$SinkChannel: java.nio.channels.WritableByteChannel out> = r1;

        return;
    }

    public void send(java.nio.ByteBuffer)
    {
        org.apache.jena.atlas.io.BufferingWriter$SinkChannel r0;
        java.nio.channels.WritableByteChannel $r2;
        java.io.IOException $r3;
        java.nio.ByteBuffer r1;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkChannel;

        r1 := @parameter0: java.nio.ByteBuffer;

     label1:
        $r2 = r0.<org.apache.jena.atlas.io.BufferingWriter$SinkChannel: java.nio.channels.WritableByteChannel out>;

        interfaceinvoke $r2.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.BufferingWriter: void access$000(java.io.IOException)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        java.nio.channels.WritableByteChannel $r1;
        java.io.IOException $r2;
        org.apache.jena.atlas.io.BufferingWriter$SinkChannel r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkChannel;

     label1:
        $r1 = r0.<org.apache.jena.atlas.io.BufferingWriter$SinkChannel: java.nio.channels.WritableByteChannel out>;

        interfaceinvoke $r1.<java.nio.channels.WritableByteChannel: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.io.BufferingWriter: void access$000(java.io.IOException)>($r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void flush()
    {
        org.apache.jena.atlas.io.BufferingWriter$SinkChannel r0;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkChannel;

        return;
    }

    public volatile void send(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.jena.atlas.io.BufferingWriter$SinkChannel r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: org.apache.jena.atlas.io.BufferingWriter$SinkChannel;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.nio.ByteBuffer) r1;

        virtualinvoke r0.<org.apache.jena.atlas.io.BufferingWriter$SinkChannel: void send(java.nio.ByteBuffer)>($r2);

        return;
    }
}
