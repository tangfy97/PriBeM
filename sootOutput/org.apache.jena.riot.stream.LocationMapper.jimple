public class org.apache.jena.riot.stream.LocationMapper extends java.lang.Object
{
    static org.slf4j.Logger log;
    java.util.Map altLocations;
    java.util.Map altPrefixes;

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        org.apache.jena.riot.stream.LocationMapper r0;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes> = $r2;

        return;
    }

    public org.apache.jena.riot.stream.LocationMapper clone()
    {
        org.apache.jena.riot.stream.LocationMapper r0, $r1;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r1 = staticinvoke <org.apache.jena.riot.stream.LocationMapper: org.apache.jena.riot.stream.LocationMapper clone(org.apache.jena.riot.stream.LocationMapper)>(r0);

        return $r1;
    }

    private static org.apache.jena.riot.stream.LocationMapper clone(org.apache.jena.riot.stream.LocationMapper)
    {
        org.apache.jena.riot.stream.LocationMapper $r0, r1;
        java.util.Map $r2, $r3, $r4, $r5;

        r1 := @parameter0: org.apache.jena.riot.stream.LocationMapper;

        $r0 = new org.apache.jena.riot.stream.LocationMapper;

        specialinvoke $r0.<org.apache.jena.riot.stream.LocationMapper: void <init>()>();

        $r3 = $r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r2 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r2);

        $r5 = $r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r4 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        return $r0;
    }

    public void copyFrom(org.apache.jena.riot.stream.LocationMapper)
    {
        org.apache.jena.riot.stream.LocationMapper r0, r1;
        java.util.Map $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: org.apache.jena.riot.stream.LocationMapper;

        $r3 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r2 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r2);

        $r5 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r4 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        return;
    }

    public java.lang.String altMapping(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.jena.riot.stream.LocationMapper r0;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.stream.LocationMapper: java.lang.String altMapping(java.lang.String,java.lang.String)>(r1, r1);

        return $r2;
    }

    public java.lang.String altMapping(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r2, $r3, $r14, $r17;
        int $i0, $i1, $i2;
        java.lang.String r1, r6, $r9, $r11, r13, r16, $r19, r20, r21;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Object $r12, $r15, $r18;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r17 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r19 = (java.lang.String) $r18;

        return $r19;

     label1:
        r20 = null;

        r21 = null;

        $r3 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r13);

        if $z2 == 0 goto label4;

        $r14 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r16 = (java.lang.String) $r15;

        if r20 == null goto label3;

        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        $i2 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

     label3:
        r21 = r13;

        r20 = r16;

     label4:
        goto label2;

     label5:
        if r20 == null goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label6:
        return r6;
    }

    public void addAltEntry(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addAltPrefix(java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator listAltEntries()
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r1 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Iterator listAltPrefixes()
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r1 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public void removeAltEntry(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void removeAltPrefix(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r2;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getAltEntry(java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getAltPrefix(java.lang.String)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int hashCode()
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r1, $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r1 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        i2 = 0 ^ $i0;

        $r2 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        i3 = i2 ^ $i1;

        return i3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.jena.riot.stream.LocationMapper r1, r2;
        java.util.Map $r3, $r4, $r5, $r6;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.jena.riot.stream.LocationMapper;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.jena.riot.stream.LocationMapper;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.jena.riot.stream.LocationMapper) r0;

        $r4 = r2.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r3 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r6 = r2.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r5 = r1.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $z2 = interfaceinvoke $r6.<java.util.Map: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public java.lang.String toString()
    {
        java.util.Map $r1, $r4, $r8, $r18;
        boolean $z0, $z1;
        java.util.Set $r2, $r5;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        org.apache.jena.riot.stream.LocationMapper r0;
        java.lang.String r27, r28, r29, r30, r31;
        java.util.Iterator $r3, $r6;
        java.lang.Object $r7, $r9, $r17, $r19;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r27 = "";

        $r1 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r17;

        $r18 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        r29 = (java.lang.String) $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Loc:");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r4 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r7;

        $r8 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        r31 = (java.lang.String) $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Prefix:");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        r27 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label4:
        return r27;
    }

    public com.hp.hpl.jena.rdf.model.Model toModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r0;
        org.apache.jena.riot.stream.LocationMapper r1;

        r1 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("lmap", "http://jena.hpl.hp.com/2004/08/location-mapping#");

        virtualinvoke r1.<org.apache.jena.riot.stream.LocationMapper: void toModel(com.hp.hpl.jena.rdf.model.Model)>($r0);

        return $r0;
    }

    public void toModel(com.hp.hpl.jena.rdf.model.Model)
    {
        org.apache.jena.riot.stream.LocationMapper r0;
        java.util.Map $r1, $r4, $r12, $r20;
        com.hp.hpl.jena.rdf.model.Property $r10, $r14, $r15, $r18, $r22, $r23;
        java.lang.String r24, r25, r26, r27;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r6;
        java.util.Set $r2, $r5;
        com.hp.hpl.jena.rdf.model.Resource $r8, $r9, $r16, $r17;
        com.hp.hpl.jena.rdf.model.Model r7;
        java.lang.Object $r11, $r13, $r19, $r21;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r17 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r18 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property mapping>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r16, $r18, $r17);

        $r19 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r19;

        $r20 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altLocations>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        r25 = (java.lang.String) $r21;

        $r22 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property name>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r17, $r22, r24);

        $r23 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altName>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r17, $r23, r25);

        goto label1;

     label2:
        $r4 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r9 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r10 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property mapping>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r8, $r10, $r9);

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r11;

        $r12 = r0.<org.apache.jena.riot.stream.LocationMapper: java.util.Map altPrefixes>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (java.lang.String) $r13;

        $r14 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property prefix>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r9, $r14, r26);

        $r15 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altPrefix>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r9, $r15, r27);

        goto label3;

     label4:
        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.jena.riot.stream.LocationMapper r0, $r1;

        r0 := @this: org.apache.jena.riot.stream.LocationMapper;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.stream.LocationMapper: org.apache.jena.riot.stream.LocationMapper clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jena/riot/stream/LocationMapper;");

        <org.apache.jena.riot.stream.LocationMapper: org.slf4j.Logger log> = $r0;

        return;
    }
}
