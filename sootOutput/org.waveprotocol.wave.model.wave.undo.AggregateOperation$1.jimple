final class org.waveprotocol.wave.model.wave.undo.AggregateOperation$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        org.waveprotocol.wave.model.wave.undo.AggregateOperation$1 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.AggregateOperation$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        int $i0;
        org.waveprotocol.wave.model.wave.ParticipantId r0, r2;
        java.lang.String $r1, $r3;
        org.waveprotocol.wave.model.wave.undo.AggregateOperation$1 r4;

        r4 := @this: org.waveprotocol.wave.model.wave.undo.AggregateOperation$1;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.wave.undo.AggregateOperation$1 r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.AggregateOperation$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.model.wave.ParticipantId) r1;

        $r3 = (org.waveprotocol.wave.model.wave.ParticipantId) r2;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.undo.AggregateOperation$1: int compare(org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.wave.ParticipantId)>($r4, $r3);

        return $i0;
    }
}
