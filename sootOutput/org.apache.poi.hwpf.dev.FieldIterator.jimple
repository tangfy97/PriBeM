public class org.apache.poi.hwpf.dev.FieldIterator extends java.lang.Object
{
    protected int offset;

    public void <init>()
    {
        org.apache.poi.hwpf.dev.FieldIterator r0;

        r0 := @this: org.apache.poi.hwpf.dev.FieldIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String calcSize(int, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26;
        org.apache.poi.hwpf.dev.FieldIterator r28;
        int i0;
        java.lang.String r0, r1, $r2, $r3, $r7, r8, $r9, $r14, $r15, $r21, $r22, $r27;

        r28 := @this: org.apache.poi.hwpf.dev.FieldIterator;

        i0 := @parameter0: int;

        r8 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r0 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("custom:");

        if $z0 == 0 goto label1;

        $r22 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(int,java.lang.String,int)>(i0, r8, 0);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getSize()");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;

     label1:
        $r2 = "var";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r15 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(int,java.lang.String,int)>(i0, r8, 0);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".length() *2)");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label2:
        $r3 = "varword";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r9 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(int,java.lang.String,int)>(i0, r8, 0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".length * 2 + 2");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String fillDecoder(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r56, $r57, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r68, $r69, $r70, $r71;
        java.lang.String r0, r1, $r5, $r10, $r15, $r20, $r25, $r30, $r35, $r40, $r45, $r50, $r55, $r60, $r67, r73;
        java.lang.NumberFormatException $r72;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.poi.hwpf.dev.FieldIterator r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r2 := @this: org.apache.poi.hwpf.dev.FieldIterator;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r73 = "";

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("short[]");

        if $z0 == 0 goto label01;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getShortArray( data, 0x");

        $i12 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label01:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("byte[]");

        if $z1 == 0 goto label02;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getByteArray( data, 0x");

        $i11 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r60 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset,");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        r73 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("BorderCode");

        if $z2 == 0 goto label03;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new BorderCode( data, 0x");

        $i10 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label03:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Colorref");

        if $z3 == 0 goto label04;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new Colorref( data, 0x");

        $i9 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DateAndTime");

        if $z4 == 0 goto label05;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new DateAndTime( data, 0x");

        $i8 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label05:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Grfhic");

        if $z5 == 0 goto label06;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new Grfhic( data, 0x");

        $i7 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z6 == 0 goto label07;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getShort( data, 0x");

        $i6 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label07:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("4");

        if $z7 == 0 goto label09;

        $z13 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z13 == 0 goto label08;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getUInt( data, 0x");

        $i5 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label08:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getInt( data, 0x");

        $i4 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z8 == 0 goto label13;

        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z10 == 0 goto label10;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getUByte( data, 0x");

        $i3 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label10:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z11 != 0 goto label11;

        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z12 == 0 goto label12;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getUnsignedByte( data, 0x");

        $i1 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label12:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data[ 0x");

        $i2 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset ]");

        r73 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label13:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z9 == 0 goto label14;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.getDouble(data, 0x");

        $i0 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset )");

        r73 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $i13 = r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $i15 = $i13 + $i14;

        r2.<org.apache.poi.hwpf.dev.FieldIterator: int offset> = $i15;

     label15:
        goto label17;

     label16:
        $r72 := @caughtexception;

     label17:
        return r73;

        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    public java.lang.String serialiseEncoder(int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r74, $r75, $r77, $r78, $r79, $r80, $r81, $r83, $r84, $r85, $r86, $r87, $r88, $r90, $r91, $r92, $r93, $r94, $r95, $r97, $r98, $r99, $r100;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String r0, $r1, r2, r3, $r7, $r14, $r21, $r28, $r35, $r42, $r49, $r56, $r64, $r70, $r76, $r82, $r89, $r96, r102;
        java.lang.NumberFormatException $r101;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.apache.poi.hwpf.dev.FieldIterator r4;

        r4 := @this: org.apache.poi.hwpf.dev.FieldIterator;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r1 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(int,java.lang.String,int)>(i0, r0, 0);

        r102 = "";

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short[]");

        if $z0 == 0 goto label01;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putShortArray( data, 0x");

        $i14 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r96 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte[]");

        if $z1 == 0 goto label02;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System.arraycopy( ");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 0, data, 0x");

        $i13 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r89 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i13);

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".length );");

        r102 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label02:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("BorderCode");

        if $z2 == 0 goto label03;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".serialize( data, 0x");

        $i12 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r82 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset );");

        r102 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Colorref");

        if $z3 == 0 goto label04;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".serialize( data, 0x");

        $i11 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r76 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset );");

        r102 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DateAndTime");

        if $z4 == 0 goto label05;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".serialize( data, 0x");

        $i10 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r70 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset );");

        r102 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label05:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Grfhic");

        if $z5 == 0 goto label06;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".serialize( data, 0x");

        $i9 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset );");

        r102 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label06:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z6 == 0 goto label09;

        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z12 == 0 goto label07;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putShort( data, 0x");

        $i8 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label07:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z13 == 0 goto label08;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putUShort( data, 0x");

        $i7 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label08:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putShort( data, 0x");

        $i6 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, (short)");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label09:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("4");

        if $z7 == 0 goto label11;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z11 == 0 goto label10;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putUInt( data, 0x");

        $i5 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putInt( data, 0x");

        $i4 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label11:
        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z8 == 0 goto label13;

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z10 == 0 goto label12;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data[ 0x");

        $i3 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset ] = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r102 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label12:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putUByte( data, 0x");

        $i2 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label13:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z9 == 0 goto label14;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LittleEndian.putDouble(data, 0x");

        $i1 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + offset, ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" );");

        r102 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $i15 = r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset>;

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $i17 = $i15 + $i16;

        r4.<org.apache.poi.hwpf.dev.FieldIterator: int offset> = $i17;

     label15:
        goto label17;

     label16:
        $r101 := @caughtexception;

     label17:
        return r102;

        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }
}
