public class org.eclipse.jetty.server.handler.ShutdownHandler extends org.eclipse.jetty.server.handler.AbstractHandler
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final java.lang.String _shutdownToken;
    private final org.eclipse.jetty.server.Server _server;
    private boolean _exitJvm;

    public void <init>(org.eclipse.jetty.server.Server, java.lang.String)
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;
        java.lang.String r2;
        org.eclipse.jetty.server.Server r1;

        r0 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        r1 := @parameter0: org.eclipse.jetty.server.Server;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandler: void <init>()>();

        r0.<org.eclipse.jetty.server.handler.ShutdownHandler: boolean _exitJvm> = 0;

        r0.<org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.server.Server _server> = r1;

        r0.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String _shutdownToken> = r2;

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r27;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jetty.server.handler.ShutdownHandler r3;
        java.lang.StringBuilder $r4, $r6, $r8, $r12, $r14, $r16, $r20, $r22, $r24;
        java.lang.Object[] $r10, $r18, $r26;
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.server.handler.ShutdownHandler$1 $r11;
        java.lang.String r0, $r2, $r7, $r9, $r15, $r17, $r23, $r25;
        javax.servlet.http.HttpServletResponse r19;
        org.eclipse.jetty.util.log.Logger $r5, $r13, $r21;

        r3 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        r0 := @parameter0: java.lang.String;

        r27 := @parameter1: org.eclipse.jetty.server.Request;

        r1 := @parameter2: javax.servlet.http.HttpServletRequest;

        r19 := @parameter3: javax.servlet.http.HttpServletResponse;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("/shutdown");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if $z1 != 0 goto label2;

        interfaceinvoke r19.<javax.servlet.http.HttpServletResponse: void sendError(int)>(400);

        return;

     label2:
        $z2 = specialinvoke r3.<org.eclipse.jetty.server.handler.ShutdownHandler: boolean hasCorrectSecurityToken(javax.servlet.http.HttpServletRequest)>(r1);

        if $z2 != 0 goto label3;

        $r21 = <org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unauthorized shutdown attempt from ");

        $r23 = virtualinvoke r3.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String getRemoteAddr(javax.servlet.http.HttpServletRequest)>(r1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = newarray (java.lang.Object)[0];

        interfaceinvoke $r21.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r25, $r26);

        interfaceinvoke r19.<javax.servlet.http.HttpServletResponse: void sendError(int)>(401);

        return;

     label3:
        $z3 = specialinvoke r3.<org.eclipse.jetty.server.handler.ShutdownHandler: boolean requestFromLocalhost(javax.servlet.http.HttpServletRequest)>(r1);

        if $z3 != 0 goto label4;

        $r13 = <org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unauthorized shutdown attempt from ");

        $r15 = virtualinvoke r3.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String getRemoteAddr(javax.servlet.http.HttpServletRequest)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r17, $r18);

        interfaceinvoke r19.<javax.servlet.http.HttpServletResponse: void sendError(int)>(401);

        return;

     label4:
        $r5 = <org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shutting down by request from ");

        $r7 = virtualinvoke r3.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String getRemoteAddr(javax.servlet.http.HttpServletRequest)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r9, $r10);

        $r11 = new org.eclipse.jetty.server.handler.ShutdownHandler$1;

        specialinvoke $r11.<org.eclipse.jetty.server.handler.ShutdownHandler$1: void <init>(org.eclipse.jetty.server.handler.ShutdownHandler)>(r3);

        virtualinvoke $r11.<org.eclipse.jetty.server.handler.ShutdownHandler$1: void start()>();

        return;
    }

    private boolean requestFromLocalhost(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = "127.0.0.1";

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String getRemoteAddr(javax.servlet.http.HttpServletRequest)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    protected java.lang.String getRemoteAddr(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r2;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r1;

        r2 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>();

        return $r1;
    }

    private boolean hasCorrectSecurityToken(javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = r0.<org.eclipse.jetty.server.handler.ShutdownHandler: java.lang.String _shutdownToken>;

        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("token");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private void shutdownServer() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;
        org.eclipse.jetty.server.Server $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.server.Server _server>;

        virtualinvoke $r1.<org.eclipse.jetty.server.Server: void stop()>();

        $z0 = r0.<org.eclipse.jetty.server.handler.ShutdownHandler: boolean _exitJvm>;

        if $z0 == 0 goto label1;

        staticinvoke <java.lang.System: void exit(int)>(0);

     label1:
        return;
    }

    public void setExitJvm(boolean)
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.handler.ShutdownHandler;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.handler.ShutdownHandler: boolean _exitJvm> = z0;

        return;
    }

    static void access$000(org.eclipse.jetty.server.handler.ShutdownHandler) throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.ShutdownHandler r0;

        r0 := @parameter0: org.eclipse.jetty.server.handler.ShutdownHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.ShutdownHandler: void shutdownServer()>();

        return;
    }

    static org.eclipse.jetty.util.log.Logger access$100()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/handler/ShutdownHandler;");

        <org.eclipse.jetty.server.handler.ShutdownHandler: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
