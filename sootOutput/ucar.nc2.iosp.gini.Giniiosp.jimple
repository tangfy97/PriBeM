public class ucar.nc2.iosp.gini.Giniiosp extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    protected boolean readonly;
    private ucar.nc2.NetcdfFile ncfile;
    private ucar.unidata.io.RandomAccessFile myRaf;
    protected ucar.nc2.iosp.gini.Giniheader headerParser;
    static final int Z_DEFLATED;
    static final int DEF_WBITS;
    protected int fileUsed;
    protected int recStart;
    protected boolean debug;
    protected boolean debugSize;
    protected boolean debugSPIO;
    protected boolean showHeaderBytes;
    protected boolean fill;
    protected java.util.HashMap dimHash;

    public void <init>()
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        java.util.HashMap $r1;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        r0.<ucar.nc2.iosp.gini.Giniiosp: int fileUsed> = 0;

        r0.<ucar.nc2.iosp.gini.Giniiosp: int recStart> = 0;

        r0.<ucar.nc2.iosp.gini.Giniiosp: boolean debug> = 0;

        r0.<ucar.nc2.iosp.gini.Giniiosp: boolean debugSize> = 0;

        r0.<ucar.nc2.iosp.gini.Giniiosp: boolean debugSPIO> = 0;

        r0.<ucar.nc2.iosp.gini.Giniiosp: boolean showHeaderBytes> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(50);

        r0.<ucar.nc2.iosp.gini.Giniiosp: java.util.HashMap dimHash> = $r1;

        return;
    }

    public ucar.ma2.Array readNestedData(ucar.nc2.Variable, java.util.List) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.UnsupportedOperationException $r0;
        ucar.nc2.iosp.gini.Giniiosp r1;
        java.util.List r3;
        ucar.nc2.Variable r2;

        r1 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r2 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: java.util.List;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Gini IOSP does not support nested variables");

        throw $r0;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        ucar.nc2.iosp.gini.Giniheader $r0;
        ucar.nc2.iosp.gini.Giniiosp r2;
        ucar.unidata.io.RandomAccessFile r1;
        boolean $z0;

        r2 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r0 = new ucar.nc2.iosp.gini.Giniheader;

        specialinvoke $r0.<ucar.nc2.iosp.gini.Giniheader: void <init>()>();

        $z0 = virtualinvoke $r0.<ucar.nc2.iosp.gini.Giniheader: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r1);

        return $z0;
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        ucar.unidata.io.RandomAccessFile r2, $r5;
        ucar.nc2.iosp.gini.Giniheader $r3, $r6;
        ucar.nc2.util.CancelTask r8;
        ucar.nc2.NetcdfFile r1, $r4, $r7;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r1 := @parameter1: ucar.nc2.NetcdfFile;

        r8 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.NetcdfFile ncfile> = r1;

        r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf> = r2;

        $r3 = new ucar.nc2.iosp.gini.Giniheader;

        specialinvoke $r3.<ucar.nc2.iosp.gini.Giniheader: void <init>()>();

        r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.iosp.gini.Giniheader headerParser> = $r3;

        $r6 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.iosp.gini.Giniheader headerParser>;

        $r5 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $r4 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r6.<ucar.nc2.iosp.gini.Giniheader: void read(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile,java.io.PrintStream)>($r5, $r4, null);

        $r7 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r7.<ucar.nc2.NetcdfFile: void finish()>();

        return;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.iosp.gini.Giniiosp r8;
        ucar.ma2.Section r0;
        long $l5, $l6, $l7;
        int[] $r1, $r2, $r3, r7;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.Variable r4;
        ucar.ma2.Array $r12, $r13, $r14;
        ucar.nc2.iosp.gini.Giniheader $r9, $r10, $r11;
        java.lang.Object $r5;
        ucar.nc2.iosp.gini.Giniheader$Vinfo r6;

        r8 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r4 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        $r1 = virtualinvoke r0.<ucar.ma2.Section: int[] getOrigin()>();

        $r2 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        $r3 = virtualinvoke r0.<ucar.ma2.Section: int[] getStride()>();

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r6 = (ucar.nc2.iosp.gini.Giniheader$Vinfo) $r5;

        r7 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: int[] levels>;

        $r9 = r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.iosp.gini.Giniheader headerParser>;

        $i0 = virtualinvoke $r9.<ucar.nc2.iosp.gini.Giniheader: int gini_GetCompressType()>();

        if $i0 != 0 goto label1;

        $l7 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: long begin>;

        $r14 = specialinvoke r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.ma2.Array readData(ucar.nc2.Variable,long,int[],int[],int[],int[])>(r4, $l7, $r1, $r2, $r3, r7);

        return $r14;

     label1:
        $r10 = r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.iosp.gini.Giniheader headerParser>;

        $i1 = virtualinvoke $r10.<ucar.nc2.iosp.gini.Giniheader: int gini_GetCompressType()>();

        if $i1 != 2 goto label2;

        $l6 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: long begin>;

        $r13 = virtualinvoke r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.ma2.Array readCompressedData(ucar.nc2.Variable,long,int[],int[],int[],int[])>(r4, $l6, $r1, $r2, $r3, r7);

        return $r13;

     label2:
        $r11 = r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.nc2.iosp.gini.Giniheader headerParser>;

        $i2 = virtualinvoke $r11.<ucar.nc2.iosp.gini.Giniheader: int gini_GetCompressType()>();

        if $i2 != 1 goto label3;

        $l5 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: long begin>;

        $i4 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: int nx>;

        $i3 = r6.<ucar.nc2.iosp.gini.Giniheader$Vinfo: int ny>;

        $r12 = virtualinvoke r8.<ucar.nc2.iosp.gini.Giniiosp: ucar.ma2.Array readCompressedZlib(ucar.nc2.Variable,long,int,int,int[],int[],int[],int[])>(r4, $l5, $i4, $i3, $r1, $r2, $r3, r7);

        return $r12;

     label3:
        return null;
    }

    private ucar.ma2.Array readData(ucar.nc2.Variable, long, int[], int[], int[], int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r3;
        byte $b4;
        ucar.nc2.iosp.gini.Giniiosp r0;
        long $l0, l1, $l2;
        float[] r6, r7, r8;
        short $s5;
        ucar.ma2.Array $r13, $r17, $r21, $r22;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r4;
        int[] r5, $r12, r14, r15, r16, $r20;
        ucar.ma2.DataType $r9, $r18;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        int i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34, i35, i36, i37, i38, i39, $i41, $i42, $i43;
        ucar.nc2.Variable r11;
        java.lang.Class $r10, $r19;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r11 := @parameter0: ucar.nc2.Variable;

        l1 := @parameter1: long;

        r14 := @parameter2: int[];

        r15 := @parameter3: int[];

        r16 := @parameter4: int[];

        r5 := @parameter5: int[];

        $r1 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $l0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long length()>();

        $r2 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l1);

        $l2 = $l0 - l1;

        i3 = (int) $l2;

        r3 = newarray (byte)[i3];

        $r4 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        if r5 != null goto label01;

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        $r19 = virtualinvoke $r18.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r20 = virtualinvoke r11.<ucar.nc2.Variable: int[] getShape()>();

        $r21 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r19, $r20, r3);

        $r22 = virtualinvoke $r21.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r14, r15, r16);

        return $r22;

     label01:
        i32 = r5[0];

        r6 = newarray (float)[i32];

        r7 = newarray (float)[i32];

        r8 = newarray (float)[i3];

        i33 = 1;

        i34 = 0;

     label02:
        if i34 >= i32 goto label03;

        $i14 = 5 * i34;

        $i15 = 1 + $i14;

        $i19 = r5[$i15];

        $i16 = 5 * i34;

        $i17 = 2 + $i16;

        $i18 = r5[$i17];

        i35 = $i19 - $i18;

        $i20 = 5 * i34;

        $i21 = 3 + $i20;

        $i25 = r5[$i21];

        $i22 = 5 * i34;

        $i23 = 4 + $i22;

        $i24 = r5[$i23];

        i36 = $i25 - $i24;

        $f7 = (float) i35;

        $f10 = $f7 * 1.0F;

        $f8 = (float) i36;

        $f9 = 1.0F * $f8;

        $f11 = $f10 / $f9;

        r6[i34] = $f11;

        $i26 = 5 * i34;

        $i27 = 1 + $i26;

        $i28 = r5[$i27];

        $f15 = (float) $i28;

        $f13 = r6[i34];

        $i29 = 5 * i34;

        $i30 = 3 + $i29;

        $i31 = r5[$i30];

        $f12 = (float) $i31;

        $f14 = $f13 * $f12;

        $f16 = $f15 - $f14;

        r7[i34] = $f16;

        i34 = i34 + 1;

        goto label02;

     label03:
        i37 = 0;

     label04:
        if i37 >= i3 goto label10;

        $b4 = r3[i37];

        $s5 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: short convertUnsignedByte2Short(byte)>($b4);

        $i41 = (int) -1;

        i38 = $i41;

        i39 = 0;

     label05:
        if i39 >= i32 goto label07;

        $i6 = i39 * 5;

        $i7 = 3 + $i6;

        $i8 = r5[$i7];

        $i42 = (int) $s5;

        if $i8 > $i42 goto label06;

        $i9 = i39 * 5;

        $i10 = 4 + $i9;

        $i11 = r5[$i10];

        $i43 = (int) $s5;

        if $i43 > $i11 goto label06;

        i38 = i39;

        $i12 = i39 * 5;

        $i13 = 5 + $i12;

        i33 = r5[$i13];

     label06:
        i39 = i39 + 1;

        goto label05;

     label07:
        if i38 < 0 goto label08;

        $f1 = r6[i38];

        $f0 = (float) $s5;

        $f3 = $f1 * $f0;

        $f2 = r7[i38];

        $f5 = $f3 + $f2;

        $f4 = (float) i33;

        $f6 = $f5 / $f4;

        r8[i37] = $f6;

        goto label09;

     label08:
        r8[i37] = 0.0F;

     label09:
        i37 = i37 + 1;

        goto label04;

     label10:
        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r10 = virtualinvoke $r9.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r12 = virtualinvoke r11.<ucar.nc2.Variable: int[] getShape()>();

        $r13 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r10, $r12, r8);

        $r17 = virtualinvoke $r13.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r14, r15, r16);

        return $r17;
    }

    public ucar.ma2.Array readDataOld(ucar.nc2.Variable, long, int[], int[], int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] $r8;
        ucar.ma2.ArrayByte $r3;
        byte $b15;
        int[] r2, $r4, r12, r13;
        ucar.ma2.DataType $r6, $r10;
        ucar.nc2.iosp.gini.Giniiosp r7;
        long l12, $l13, $l17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33;
        ucar.nc2.Variable r0;
        ucar.ma2.Index $r5, $r9;
        java.lang.Object $r1;
        ucar.nc2.iosp.gini.Giniheader$Vinfo $r11;

        r7 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r0 := @parameter0: ucar.nc2.Variable;

        l12 := @parameter1: long;

        r12 := @parameter2: int[];

        r13 := @parameter3: int[];

        r2 := @parameter4: int[];

        if r12 != null goto label1;

        $i26 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        r12 = newarray (int)[$i26];

     label1:
        if r13 != null goto label2;

        r13 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

     label2:
        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        $r11 = (ucar.nc2.iosp.gini.Giniheader$Vinfo) $r1;

        virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $i18 = $r11.<ucar.nc2.iosp.gini.Giniheader$Vinfo: int nx>;

        $i19 = $r11.<ucar.nc2.iosp.gini.Giniheader$Vinfo: int ny>;

        $i20 = r12[0];

        i27 = $i20;

        $i21 = r2[0];

        i28 = $i21;

        $i1 = r12[0];

        $i0 = r13[0];

        $i2 = $i1 + $i0;

        $i22 = $i2 - 1;

        i29 = $i22;

        $i23 = r12[1];

        i30 = $i23;

        $i24 = r2[1];

        i31 = $i24;

        $i4 = r12[1];

        $i3 = r13[1];

        $i5 = $i4 + $i3;

        $i25 = $i5 - 1;

        $i6 = $i20 + $i22;

        $i7 = $i6 + $i21;

        if $i7 != 0 goto label3;

        i27 = 0;

        i28 = 1;

        i29 = $i19 - 1;

     label3:
        $i8 = $i23 + $i25;

        $i9 = $i8 + $i24;

        if $i9 != 0 goto label4;

        i30 = 0;

        i31 = 1;

     label4:
        $i16 = r13[1];

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        $r3 = new ucar.ma2.ArrayByte;

        $r4 = newarray (int)[2];

        $i10 = r13[0];

        $r4[0] = $i10;

        $i11 = r13[1];

        $r4[1] = $i11;

        specialinvoke $r3.<ucar.ma2.ArrayByte: void <init>(int[])>($r4);

        $r5 = virtualinvoke $r3.<ucar.ma2.ArrayByte: ucar.ma2.Index getIndex()>();

        $l13 = (long) i30;

        $l17 = l12 + $l13;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r10 != $r6 goto label8;

        i32 = i27;

     label5:
        if i32 > i29 goto label8;

        $r8 = specialinvoke r7.<ucar.nc2.iosp.gini.Giniiosp: byte[] getGiniLine(int,int,long,int,int,int)>($i18, $i19, $l17, i32, $i16, i31);

        i33 = 0;

     label6:
        if i33 >= $i16 goto label7;

        $i14 = i32 - i27;

        $r9 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>($i14, i33);

        $b15 = $r8[i33];

        virtualinvoke $r3.<ucar.ma2.ArrayByte: void setByte(ucar.ma2.Index,byte)>($r9, $b15);

        i33 = i33 + 1;

        goto label6;

     label7:
        i32 = i32 + i28;

        goto label5;

     label8:
        return $r3;
    }

    public ucar.ma2.Array readCompressedData(ucar.nc2.Variable, long, int[], int[], int[], int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r3, $r10;
        java.awt.image.DataBufferByte r9;
        byte $b3;
        ucar.nc2.iosp.gini.Giniiosp r0;
        long $l0, l1, $l2;
        float[] r12, r13, r14;
        short $s4;
        java.awt.image.Raster $r7;
        ucar.ma2.Array $r19, $r23, $r27, $r28;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r4;
        java.io.ByteArrayInputStream $r29;
        int[] r11, $r18, r20, r21, r22, $r26;
        boolean $z0;
        java.awt.image.BufferedImage $r6;
        ucar.ma2.DataType $r15, $r24;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        java.awt.image.DataBuffer $r8;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, $i42, $i43, $i44;
        ucar.nc2.Variable r17;
        java.lang.Class $r16, $r25;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r17 := @parameter0: ucar.nc2.Variable;

        l1 := @parameter1: long;

        r20 := @parameter2: int[];

        r21 := @parameter3: int[];

        r22 := @parameter4: int[];

        r11 := @parameter5: int[];

        $r1 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $l0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long length()>();

        $r2 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l1);

        $l2 = $l0 - l1;

        i31 = (int) $l2;

        r3 = newarray (byte)[i31];

        $r4 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        $r29 = new java.io.ByteArrayInputStream;

        specialinvoke $r29.<java.io.ByteArrayInputStream: void <init>(byte[])>(r3);

        $r6 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>($r29);

        $r7 = virtualinvoke $r6.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>();

        $r8 = virtualinvoke $r7.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $z0 = $r8 instanceof java.awt.image.DataBufferByte;

        if $z0 == 0 goto label11;

        r9 = (java.awt.image.DataBufferByte) $r8;

        virtualinvoke r9.<java.awt.image.DataBufferByte: int getNumBanks()>();

        $r10 = virtualinvoke r9.<java.awt.image.DataBufferByte: byte[] getData()>();

        if r11 != null goto label01;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        $r25 = virtualinvoke $r24.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r26 = virtualinvoke r17.<ucar.nc2.Variable: int[] getShape()>();

        $r27 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r25, $r26, $r10);

        virtualinvoke r17.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r27, 0);

        $r28 = virtualinvoke $r27.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r20, r21, r22);

        return $r28;

     label01:
        i32 = lengthof $r10;

        i33 = r11[0];

        r12 = newarray (float)[i33];

        r13 = newarray (float)[i33];

        r14 = newarray (float)[i32];

        i34 = 1;

        i35 = 0;

     label02:
        if i35 >= i33 goto label03;

        $i13 = 5 * i35;

        $i14 = 1 + $i13;

        $i18 = r11[$i14];

        $i15 = 5 * i35;

        $i16 = 2 + $i15;

        $i17 = r11[$i16];

        i36 = $i18 - $i17;

        $i19 = 5 * i35;

        $i20 = 3 + $i19;

        $i24 = r11[$i20];

        $i21 = 5 * i35;

        $i22 = 4 + $i21;

        $i23 = r11[$i22];

        i37 = $i24 - $i23;

        $f7 = (float) i36;

        $f10 = $f7 * 1.0F;

        $f8 = (float) i37;

        $f9 = 1.0F * $f8;

        $f11 = $f10 / $f9;

        r12[i35] = $f11;

        $i25 = 5 * i35;

        $i26 = 1 + $i25;

        $i27 = r11[$i26];

        $f15 = (float) $i27;

        $f13 = r12[i35];

        $i28 = 5 * i35;

        $i29 = 3 + $i28;

        $i30 = r11[$i29];

        $f12 = (float) $i30;

        $f14 = $f13 * $f12;

        $f16 = $f15 - $f14;

        r13[i35] = $f16;

        i35 = i35 + 1;

        goto label02;

     label03:
        i38 = 0;

     label04:
        if i38 >= i32 goto label10;

        $b3 = $r10[i38];

        $s4 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: short convertUnsignedByte2Short(byte)>($b3);

        $i42 = (int) -1;

        i39 = $i42;

        i40 = 0;

     label05:
        if i40 >= i33 goto label07;

        $i5 = i40 * 5;

        $i6 = 3 + $i5;

        $i7 = r11[$i6];

        $i43 = (int) $s4;

        if $i7 > $i43 goto label06;

        $i8 = i40 * 5;

        $i9 = 4 + $i8;

        $i10 = r11[$i9];

        $i44 = (int) $s4;

        if $i44 > $i10 goto label06;

        i39 = i40;

        $i11 = i40 * 5;

        $i12 = 5 + $i11;

        i34 = r11[$i12];

     label06:
        i40 = i40 + 1;

        goto label05;

     label07:
        if i39 < 0 goto label08;

        $f1 = r12[i39];

        $f0 = (float) $s4;

        $f3 = $f1 * $f0;

        $f2 = r13[i39];

        $f5 = $f3 + $f2;

        $f4 = (float) i34;

        $f6 = $f5 / $f4;

        r14[i38] = $f6;

        goto label09;

     label08:
        r14[i38] = 0.0F;

     label09:
        i38 = i38 + 1;

        goto label04;

     label10:
        $r15 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r16 = virtualinvoke $r15.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r18 = virtualinvoke r17.<ucar.nc2.Variable: int[] getShape()>();

        $r19 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r16, $r18, r14);

        $r23 = virtualinvoke $r19.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r20, r21, r22);

        return $r23;

     label11:
        return null;
    }

    public ucar.ma2.Array readCompressedZlib(ucar.nc2.Variable, long, int, int, int[], int[], int[], int[]) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r3, r5, r24, r34, r35;
        byte $b12, $b41;
        java.lang.StringBuilder $r28, $r30, $r38;
        ucar.nc2.iosp.gini.Giniiosp r0;
        long $l0, l1, $l2, $l40;
        float[] r8, r9, r36;
        short $s13;
        java.lang.String $r29, $r31, $r33;
        java.io.IOException $r39;
        ucar.ma2.Array $r14, $r18, $r22, $r23;
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r4;
        java.util.zip.Inflater $r37;
        int[] r7, $r13, r15, r16, r17, $r21;
        ucar.ma2.DataType $r10, $r19;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        int i3, i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i42, $i43, $i44, $i45, $i46, $i47, i48, i49, i50, i51, $i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, $i62, $i64, $i65, $i66;
        java.util.zip.DataFormatException $r25;
        ucar.nc2.Variable r12;
        java.io.PrintStream $r27;
        java.lang.Class $r11, $r20;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r12 := @parameter0: ucar.nc2.Variable;

        l1 := @parameter1: long;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        r15 := @parameter4: int[];

        r16 := @parameter5: int[];

        r17 := @parameter6: int[];

        r7 := @parameter7: int[];

        $r1 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $l0 = virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: long length()>();

        $r2 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l1);

        $l2 = $l0 - l1;

        i49 = (int) $l2;

        r3 = newarray (byte)[i49];

        $r4 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        i50 = 0;

        $i5 = i3 * i4;

        r5 = newarray (byte)[$i5];

        $i6 = i4 + 1;

        $i7 = i3 * $i6;

        $i8 = $i7 + 4000;

        r34 = newarray (byte)[$i8];

        $r37 = new java.util.zip.Inflater;

        specialinvoke $r37.<java.util.zip.Inflater: void <init>(boolean)>(0);

        virtualinvoke $r37.<java.util.zip.Inflater: void setInput(byte[],int,int)>(r3, 0, i49);

        i51 = 0;

        $i9 = i3 * i4;

        i10 = $i9 + i3;

     label01:
        $i52 = virtualinvoke $r37.<java.util.zip.Inflater: int getRemaining()>();

        if $i52 <= 0 goto label08;

     label02:
        $i42 = virtualinvoke $r37.<java.util.zip.Inflater: int inflate(byte[],int,int)>(r34, i51, 4000);

     label03:
        goto label05;

     label04:
        $r25 := @caughtexception;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR on inflation ");

        $r29 = virtualinvoke $r25.<java.util.zip.DataFormatException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r31);

        virtualinvoke $r25.<java.util.zip.DataFormatException: void printStackTrace()>();

        $r39 = new java.io.IOException;

        $r33 = virtualinvoke $r25.<java.util.zip.DataFormatException: java.lang.String getMessage()>();

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>($r33);

        throw $r39;

     label05:
        i51 = i51 + $i42;

        i50 = i50 + $i42;

        if i50 <= i10 goto label06;

        r24 = newarray (byte)[i50];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r34, 0, r24, 0, i50);

        i48 = i50 + 4000;

        r34 = newarray (byte)[i48];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r24, 0, r34, 0, i50);

     label06:
        if $i42 != 0 goto label01;

        $i43 = virtualinvoke $r37.<java.util.zip.Inflater: int getRemaining()>();

        r35 = newarray (byte)[2];

        $i44 = i49 - $i43;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i44, r35, 0, 2);

        $i45 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: int isZlibHed(byte[])>(r35);

        if $i45 != 0 goto label07;

        $i47 = i49 - $i43;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i47, r34, i50, $i43);

        goto label08;

     label07:
        virtualinvoke $r37.<java.util.zip.Inflater: void reset()>();

        $i46 = i49 - $i43;

        virtualinvoke $r37.<java.util.zip.Inflater: void setInput(byte[],int,int)>(r3, $i46, $i43);

        goto label01;

     label08:
        virtualinvoke $r37.<java.util.zip.Inflater: void end()>();

        $i11 = i3 * i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r34, 0, r5, 0, $i11);

        if r3 == null goto label20;

        if r7 != null goto label10;

        $r19 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        $r20 = virtualinvoke $r19.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r21 = virtualinvoke r12.<ucar.nc2.Variable: int[] getShape()>();

        $r22 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r20, $r21, r34);

        $l40 = virtualinvoke $r22.<ucar.ma2.Array: long getSize()>();

        $b41 = $l40 cmp 4000L;

        $i62 = (int) $b41;

        if $i62 >= 0 goto label09;

        virtualinvoke r12.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r22, 0);

     label09:
        $r23 = virtualinvoke $r22.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r15, r16, r17);

        return $r23;

     label10:
        i53 = lengthof r34;

        i54 = r7[0];

        r36 = newarray (float)[i54];

        r8 = newarray (float)[i54];

        r9 = newarray (float)[i53];

        i55 = 1;

        i56 = 0;

     label11:
        if i56 >= i54 goto label12;

        $i22 = 5 * i56;

        $i23 = 1 + $i22;

        $i27 = r7[$i23];

        $i24 = 5 * i56;

        $i25 = 2 + $i24;

        $i26 = r7[$i25];

        i57 = $i27 - $i26;

        $i28 = 5 * i56;

        $i29 = 3 + $i28;

        $i33 = r7[$i29];

        $i30 = 5 * i56;

        $i31 = 4 + $i30;

        $i32 = r7[$i31];

        i58 = $i33 - $i32;

        $f7 = (float) i57;

        $f10 = $f7 * 1.0F;

        $f8 = (float) i58;

        $f9 = 1.0F * $f8;

        $f11 = $f10 / $f9;

        r36[i56] = $f11;

        $i34 = 5 * i56;

        $i35 = 1 + $i34;

        $i36 = r7[$i35];

        $f15 = (float) $i36;

        $f13 = r36[i56];

        $i37 = 5 * i56;

        $i38 = 3 + $i37;

        $i39 = r7[$i38];

        $f12 = (float) $i39;

        $f14 = $f13 * $f12;

        $f16 = $f15 - $f14;

        r8[i56] = $f16;

        i56 = i56 + 1;

        goto label11;

     label12:
        i59 = 0;

     label13:
        if i59 >= i53 goto label19;

        $b12 = r34[i59];

        $s13 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: short convertUnsignedByte2Short(byte)>($b12);

        $i64 = (int) -1;

        i60 = $i64;

        i61 = 0;

     label14:
        if i61 >= i54 goto label16;

        $i14 = i61 * 5;

        $i15 = 3 + $i14;

        $i16 = r7[$i15];

        $i65 = (int) $s13;

        if $i16 > $i65 goto label15;

        $i17 = i61 * 5;

        $i18 = 4 + $i17;

        $i19 = r7[$i18];

        $i66 = (int) $s13;

        if $i66 > $i19 goto label15;

        i60 = i61;

        $i20 = i61 * 5;

        $i21 = 5 + $i20;

        i55 = r7[$i21];

     label15:
        i61 = i61 + 1;

        goto label14;

     label16:
        if i60 < 0 goto label17;

        $f1 = r36[i60];

        $f0 = (float) $s13;

        $f3 = $f1 * $f0;

        $f2 = r8[i60];

        $f5 = $f3 + $f2;

        $f4 = (float) i55;

        $f6 = $f5 / $f4;

        r9[i59] = $f6;

        goto label18;

     label17:
        r9[i59] = 0.0F;

     label18:
        i59 = i59 + 1;

        goto label13;

     label19:
        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r11 = virtualinvoke $r10.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r13 = virtualinvoke r12.<ucar.nc2.Variable: int[] getShape()>();

        $r14 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r11, $r13, r9);

        $r18 = virtualinvoke $r14.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>(r15, r16, r17);

        return $r18;

     label20:
        return null;

        catch java.util.zip.DataFormatException from label02 to label03 with label04;
    }

    private byte[] getGiniLine(int, int, long, int, int, int) throws java.io.IOException
    {
        byte[] r0;
        ucar.nc2.iosp.gini.Giniiosp r1;
        ucar.unidata.io.RandomAccessFile $r2, $r3, $r4;
        long l1, $l7;
        byte $b8;
        int i0, i2, i3, i4, $i5, $i6, i9, i10, i11;
        java.lang.String $r11;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r1 := @this: ucar.nc2.iosp.gini.Giniiosp;

        i4 := @parameter0: int;

        i3 := @parameter1: int;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        i9 := @parameter5: int;

        r0 = newarray (byte)[i0];

        $r2 = r1.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l1);

        if i2 < i3 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try to access the file at line number= ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" larger then last line number = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $i6 = i2 * i4;

        $i5 = (int) l1;

        i10 = $i6 + $i5;

        i11 = 0;

     label2:
        if i11 >= i0 goto label3;

        $r3 = r1.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $l7 = (long) i10;

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l7);

        $r4 = r1.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $b8 = virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0[i11] = $b8;

        i10 = i10 + i9;

        i11 = i11 + 1;

        goto label2;

     label3:
        return r0;
    }

    int issZlibed(byte[])
    {
        byte[] r0;
        ucar.nc2.iosp.gini.Giniiosp r1;
        byte $b0, $b1, $b2, $b5, $b6;
        int $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r1 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $b1 = $b0 & 15;

        $i10 = (int) $b1;

        if $i10 != 8 goto label1;

        $b2 = r0[0];

        $i11 = (int) $b2;

        $i3 = $i11 >> 4;

        $i4 = $i3 + 8;

        if $i4 > 15 goto label1;

        $b5 = r0[0];

        $i12 = (int) $b5;

        $i7 = $i12 << 8;

        $b6 = r0[1];

        $i13 = (int) $b6;

        $i8 = $i7 + $i13;

        $i9 = $i8 % 31;

        if $i9 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void flush() throws java.io.IOException
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        $r1 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        $r1 = r0.<ucar.nc2.iosp.gini.Giniiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    private short convertUnsignedByte2Short(byte)
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        short $s1, $s2, $s3, $s5;
        byte b0;
        int $i4, $i6, $i7;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        b0 := @parameter0: byte;

        $i6 = (int) b0;

        if $i6 >= 0 goto label1;

        $s2 = (short) b0;

        $i7 = (int) $s2;

        $i4 = $i7 + 256;

        $s3 = (short) $i4;

        return $s3;

     label1:
        $s5 = (short) b0;

        $s1 = (short) $s5;

        return $s1;
    }

    private int isZlibHed(byte[])
    {
        ucar.nc2.iosp.gini.Giniiosp r0;
        byte[] r1;
        short $s1, $s3, $s4;
        byte $b0, $b2;
        int $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        r1 := @parameter0: byte[];

        $b0 = r1[0];

        $s1 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: short convertUnsignedByte2Short(byte)>($b0);

        $b2 = r1[1];

        $s3 = specialinvoke r0.<ucar.nc2.iosp.gini.Giniiosp: short convertUnsignedByte2Short(byte)>($b2);

        $s4 = $s1 & 15;

        $i10 = (int) $s4;

        if $i10 != 8 goto label1;

        $i11 = (int) $s1;

        $i5 = $i11 >> 4;

        $i6 = $i5 + 8;

        if $i6 > 15 goto label1;

        $i12 = (int) $s1;

        $i7 = $i12 << 8;

        $i13 = (int) $s3;

        $i8 = $i7 + $i13;

        $i9 = $i8 % 31;

        if $i9 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.gini.Giniiosp r0;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        return "GINI";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.gini.Giniiosp r0;

        r0 := @this: ucar.nc2.iosp.gini.Giniiosp;

        return "GOES Ingest and NOAAPORT Interface";
    }

    public static void main(java.lang.String[]) throws java.lang.Exception, java.io.IOException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        int[] $r2, $r3;
        ucar.ma2.ArrayByte r5;
        ucar.nc2.Variable $r1;
        java.lang.String[] r6;
        ucar.nc2.NetcdfFile $r0;
        ucar.ma2.Array $r4;

        r6 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.NetcdfFile: void registerIOProvider(java.lang.Class)>(class "Lucar/nc2/iosp/gini/Giniiosp;");

        $r0 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>("c:/data/image/gini/n0r_20041013_1852");

        virtualinvoke $r0.<ucar.nc2.NetcdfFile: java.util.List getGlobalAttributes()>();

        $r1 = virtualinvoke $r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("BaseReflectivity");

        $r2 = newarray (int)[2];

        $r2[0] = 0;

        $r2[1] = 0;

        $r3 = newarray (int)[2];

        $r3[0] = 3000;

        $r3[1] = 4736;

        $r4 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>($r2, $r3);

        r5 = (ucar.ma2.ArrayByte) $r4;

        virtualinvoke $r0.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.gini.Giniiosp: int DEF_WBITS> = 15;

        <ucar.nc2.iosp.gini.Giniiosp: int Z_DEFLATED> = 8;

        return;
    }
}
