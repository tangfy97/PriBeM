public abstract class com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter extends java.lang.Object implements com.googlecode.mp4parser.authoring.adaptivestreaming.ManifestWriter
{
    private static final java.util.logging.Logger LOG;
    private com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;
    protected long[] audioFragmentsDurations;
    protected long[] videoFragmentsDurations;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/adaptivestreaming/AbstractManifestWriter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG> = $r2;

        return;
    }

    protected void <init>(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }

    public long[] calculateFragmentDurations(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        long l2, $l7, $l8, $l13, $l14;
        long[] $r3, r4, $r5;
        byte $b9;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r2;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r0;
        int $i0, i1, i3, $i4, $i5, $i6, i10, i11, i12;
        com.googlecode.mp4parser.authoring.Movie r6;

        r0 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r6 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r2 = r0.<com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        $r3 = interfaceinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)>(r1);

        $i0 = lengthof $r3;

        r4 = newarray (long)[$i0];

        i10 = 0;

        i11 = 1;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        i1 = lengthof $r5;

        i12 = 0;

        goto label5;

     label1:
        l2 = $r5[i12];

        i3 = i11 + 1;

        goto label4;

     label2:
        $i4 = lengthof $r3;

        $i5 = $i4 - 1;

        if i10 == $i5 goto label3;

        $l8 = (long) i11;

        $i6 = i10 + 1;

        $l7 = $r3[$i6];

        $b9 = $l8 cmp $l7;

        if $b9 != 0 goto label3;

        i10 = i10 + 1;

     label3:
        $l13 = r4[i10];

        $l14 = $l13 + l2;

        r4[i10] = $l14;

        i11 = i11 + 1;

     label4:
        if i11 < i3 goto label2;

        i12 = i12 + 1;

     label5:
        if i12 < i1 goto label1;

        return r4;
    }

    public long getBitrate(com.googlecode.mp4parser.authoring.Track)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        long $l0, $l1, $l2, l3, l4, l5;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r6;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;
        java.util.Iterator $r2;
        com.googlecode.mp4parser.authoring.Sample r4;
        java.util.List $r1;
        java.lang.Object $r3;
        com.googlecode.mp4parser.authoring.TrackMetaData $r5;

        r6 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        l3 = 0L;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.googlecode.mp4parser.authoring.Sample) $r3;

        $l0 = interfaceinvoke r4.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        l3 = l3 + $l0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $d0 = (double) l3;

        $l1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $d1 = (double) $l1;

        $r5 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l2 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $d2 = (double) $l2;

        $d3 = $d1 / $d2;

        $d4 = $d0 / $d3;

        l4 = (long) $d4;

        l5 = l4 * 8L;

        return l5;
    }

    protected long[] checkFragmentsAlign(long[], long[]) throws java.io.IOException
    {
        java.lang.Long $r14, $r32;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r41;
        boolean $z0;
        java.util.logging.Logger $r21, $r39;
        java.lang.StringBuilder $r4, $r6, $r8, $r10, $r11, $r16, $r17, $r19, $r22, $r24, $r26, $r28, $r29, $r34, $r35, $r37;
        java.lang.Object[] $r13, $r31;
        long l13, l16;
        long[] r0, r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i14, i15;
        java.lang.String $r5, $r7, $r9, $r12, $r15, $r18, $r20, $r23, $r25, $r27, $r30, $r33, $r36, $r38, r42, r43;
        java.io.IOException $r40;

        r41 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return r1;

     label2:
        $i1 = lengthof r0;

        $i2 = $i1 - 1;

        r2 = newarray (long)[$i2];

        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, $i4);

        $i5 = lengthof r1;

        $i6 = $i5 - 1;

        r3 = newarray (long)[$i6];

        $i7 = lengthof r1;

        $i8 = $i7 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, $i8);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>(r3, r2);

        if $z0 != 0 goto label7;

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $i9 = lengthof r0;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reference     :  [");

        r42 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i11 = lengthof r0;

        i12 = 0;

        goto label4;

     label3:
        l13 = r0[i12];

        $r11 = new java.lang.StringBuilder;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r42);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r13 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r13);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r42 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        i12 = i12 + 1;

     label4:
        if i12 < i11 goto label3;

        $r17 = new java.lang.StringBuilder;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r42);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG>;

        virtualinvoke $r21.<java.util.logging.Logger: void warning(java.lang.String)>($r20);

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $i10 = lengthof r1;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new java.lang.StringBuilder;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r27);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current       :  [");

        r43 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        i14 = lengthof r1;

        i15 = 0;

        goto label6;

     label5:
        l16 = r1[i15];

        $r29 = new java.lang.StringBuilder;

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r43);

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>($r30);

        $r31 = newarray (java.lang.Object)[1];

        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        $r31[0] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10d,", $r31);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r43 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        i15 = i15 + 1;

     label6:
        if i15 < i14 goto label5;

        $r35 = new java.lang.StringBuilder;

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r43);

        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r36);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = <com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter: java.util.logging.Logger LOG>;

        virtualinvoke $r39.<java.util.logging.Logger: void warning(java.lang.String)>($r38);

        $r40 = new java.io.IOException;

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>("Track does not have the same fragment borders as its predecessor.");

        throw $r40;

     label7:
        return r1;
    }

    protected java.lang.String getFormat(com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry)
    {
        com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry r0;
        com.coremedia.iso.boxes.OriginalFormatBox $r6;
        java.util.List $r4;
        com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter r2;
        java.lang.Object $r5;
        java.lang.String $r1, r3;
        boolean $z0, $z1, $z2;

        r2 := @this: com.googlecode.mp4parser.authoring.adaptivestreaming.AbstractManifestWriter;

        r0 := @parameter0: com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry;

        $r1 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.lang.String getType()>();

        r3 = $r1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("encv");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("enca");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("encv");

        if $z2 == 0 goto label2;

     label1:
        $r4 = virtualinvoke r0.<com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry: java.util.List getBoxes(java.lang.Class,boolean)>(class "Lcom/coremedia/iso/boxes/OriginalFormatBox;", 1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.coremedia.iso.boxes.OriginalFormatBox) $r5;

        r3 = virtualinvoke $r6.<com.coremedia.iso.boxes.OriginalFormatBox: java.lang.String getDataFormat()>();

     label2:
        return r3;
    }
}
