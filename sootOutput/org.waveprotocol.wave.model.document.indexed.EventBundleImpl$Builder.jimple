final class org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder extends java.lang.Object
{
    private final java.util.List components;
    private java.util.Collection inserted;
    private java.util.Collection deleted;

    void <init>()
    {
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.List components> = $r1;

        return;
    }

    void addComponent(org.waveprotocol.wave.model.document.indexed.DocumentEvent)
    {
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder r0;
        java.util.List $r2;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.DocumentEvent;

        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.List components>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addDeletedElement(java.lang.Object)
    {
        java.util.Collection $r1, $r3;
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder r0;
        java.lang.Object r2;
        java.util.LinkedHashSet $r4;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted> = $r4;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        return;
    }

    void addInsertedElement(java.lang.Object)
    {
        java.util.Collection $r1, $r3;
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder r0;
        java.lang.Object r2;
        java.util.ArrayList $r4;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted> = $r4;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        return;
    }

    org.waveprotocol.wave.model.document.indexed.EventBundleImpl build()
    {
        java.util.Collection $r1, $r2, $r4, $r5;
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder r0;
        java.util.Set $r7, $r8;
        java.util.List $r6;
        org.waveprotocol.wave.model.document.indexed.EventBundleImpl $r3;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted>;

        if $r1 != null goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted> = $r8;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted>;

        if $r2 != null goto label2;

        $r7 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted> = $r7;

     label2:
        $r3 = new org.waveprotocol.wave.model.document.indexed.EventBundleImpl;

        $r6 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.List components>;

        $r5 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection deleted>;

        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl$Builder: java.util.Collection inserted>;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.indexed.EventBundleImpl: void <init>(java.util.List,java.util.Collection,java.util.Collection)>($r6, $r5, $r4);

        return $r3;
    }
}
