public class com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl extends com.hp.hpl.jena.ontology.impl.RestrictionImpl implements com.hp.hpl.jena.ontology.QualifiedRestriction
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    private static boolean isValidQualifiedRestriction(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.Profile $r3;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.ontology.OntModel $r2;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $z0 = r0 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.ontology.OntModel) r0;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.ontology.Profile getProfile()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: boolean isSupported(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph,java.lang.Class)>(r1, r0, class "Lcom/hp/hpl/jena/ontology/QualifiedRestriction;");

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean isValid()
    {
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.enhanced.EnhGraph $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.graph.Node asNode()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.enhanced.EnhGraph getGraph()>();

        $z0 = staticinvoke <com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: boolean isValidQualifiedRestriction(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>($r1, $r2);

        return $z0;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.RestrictionImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setHasClassQ(com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.ontology.OntClass r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_CLASS_Q", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getHasClassQ()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r7, $r9, $r11;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource $r6;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        boolean $z0, $z1;
        com.hp.hpl.jena.ontology.OntResource $r8, $r10, $r12;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "HAS_CLASS_Q");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.rdf.model.Statement getProperty(com.hp.hpl.jena.rdf.model.Property)>($r4);

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        $z0 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: boolean canAs(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        if $z0 == 0 goto label1;

        $r11 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntClass;");

        $r12 = (com.hp.hpl.jena.ontology.OntResource) $r11;

        return $r12;

     label1:
        $z1 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: boolean canAs(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/DataRange;");

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/DataRange;");

        $r10 = (com.hp.hpl.jena.ontology.OntResource) $r9;

        return $r10;

     label2:
        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntResource;");

        $r8 = (com.hp.hpl.jena.ontology.OntResource) $r7;

        return $r8;
    }

    public boolean hasHasClassQ(com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.ontology.OntClass r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_CLASS_Q", r3);

        return $z0;
    }

    public boolean hasHasClassQ(com.hp.hpl.jena.ontology.DataRange)
    {
        com.hp.hpl.jena.ontology.DataRange r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.ontology.DataRange;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_CLASS_Q", r3);

        return $z0;
    }

    public void removeHasClassQ(com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;
        com.hp.hpl.jena.ontology.OntClass r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.ontology.OntClass;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_CLASS_Q", r3);

        return;
    }

    public void removeHasClassQ(com.hp.hpl.jena.ontology.DataRange)
    {
        com.hp.hpl.jena.ontology.DataRange r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl;

        r3 := @parameter0: com.hp.hpl.jena.ontology.DataRange;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "HAS_CLASS_Q", r3);

        return;
    }

    static boolean access$000(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.enhanced.EnhGraph r1;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        $z0 = staticinvoke <com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: boolean isValidQualifiedRestriction(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r0, r1);

        return $z0;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.QualifiedRestrictionImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
