public class ucar.nc2.ft.point.standard.PointConfigXML extends java.lang.Object
{
    private ucar.nc2.ft.point.standard.TableConfig tc;
    private java.lang.String tableConfigurerClass;
    private static boolean debugXML;
    private static boolean debugURL;
    private static boolean showParsedXML;

    public void <init>()
    {
        ucar.nc2.ft.point.standard.PointConfigXML r0;

        r0 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeConfigXML(ucar.nc2.ft.FeatureDatasetPoint, java.util.Formatter)
    {
        ucar.nc2.ft.point.standard.TableConfigurer $r4;
        java.lang.Object[] $r9, $r11, $r14;
        ucar.nc2.ft.point.standard.PointConfigXML $r5;
        ucar.nc2.ft.point.standard.TableAnalyzer $r2;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard r1;
        java.util.Formatter r8;
        ucar.nc2.ft.point.standard.TableConfig $r3;
        java.lang.String $r7, $r10, $r12, $r15, $r16;
        boolean $z0;
        java.io.IOException $r13;
        ucar.nc2.ft.FeatureDatasetPoint r0;
        java.lang.Class $r6;

        r0 := @parameter0: ucar.nc2.ft.FeatureDatasetPoint;

        r8 := @parameter1: java.util.Formatter;

        $z0 = r0 instanceof ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        if $z0 != 0 goto label1;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r11[0] = $r12;

        virtualinvoke r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s not instance of PointDatasetStandard%n", $r11);

        return;

     label1:
        r1 = (ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: ucar.nc2.ft.point.standard.TableAnalyzer getTableAnalyzer()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.TableAnalyzer: ucar.nc2.ft.point.standard.TableConfig getTableConfig()>();

        $r4 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.TableAnalyzer: ucar.nc2.ft.point.standard.TableConfigurer getTableConfigurer()>();

        if $r4 != null goto label2;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r9[0] = $r10;

        virtualinvoke r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s has no TableConfig%n", $r9);

        return;

     label2:
        $r5 = new ucar.nc2.ft.point.standard.PointConfigXML;

        specialinvoke $r5.<ucar.nc2.ft.point.standard.PointConfigXML: void <init>()>();

     label3:
        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r5.<ucar.nc2.ft.point.standard.PointConfigXML: void writeConfigXML(ucar.nc2.ft.point.standard.TableConfig,java.lang.String,java.util.Formatter)>($r3, $r7, r8);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = newarray (java.lang.Object)[2];

        $r15 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r14[0] = $r15;

        $r16 = virtualinvoke $r13.<java.io.IOException: java.lang.String getMessage()>();

        $r14[1] = $r16;

        virtualinvoke r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s error writing=%s%n", $r14);

        return;

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void writeConfigXML(ucar.nc2.ft.point.standard.TableConfig, java.lang.String, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r6;
        ucar.nc2.ft.point.standard.PointConfigXML r0;
        org.jdom.output.Format $r4;
        org.jdom.output.XMLOutputter $r3;
        java.util.Formatter r5;
        ucar.nc2.ft.point.standard.TableConfig r1;
        org.jdom.Document $r7;
        java.lang.String r2, $r8;

        r0 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: ucar.nc2.ft.point.standard.TableConfig;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.util.Formatter;

        r0.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig tc> = r1;

        r0.<ucar.nc2.ft.point.standard.PointConfigXML: java.lang.String tableConfigurerClass> = r2;

        $r3 = new org.jdom.output.XMLOutputter;

        $r4 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r3.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r4);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r0.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Document makeDocument()>();

        $r8 = virtualinvoke $r3.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r7);

        $r6[0] = $r8;

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r6);

        return;
    }

    public org.jdom.Document makeDocument()
    {
        ucar.nc2.ft.point.standard.PointConfigXML r2;
        ucar.nc2.ft.point.standard.TableConfig $r4, $r6, $r8;
        org.jdom.Document $r1;
        java.lang.String $r3, $r10, $r12;
        org.jdom.Element $r0, $r7, $r11, $r13;
        ucar.nc2.constants.FeatureType $r5, $r9;

        r2 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("pointConfig");

        $r1 = new org.jdom.Document;

        specialinvoke $r1.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r3 = r2.<ucar.nc2.ft.point.standard.PointConfigXML: java.lang.String tableConfigurerClass>;

        if $r3 == null goto label1;

        $r11 = new org.jdom.Element;

        specialinvoke $r11.<org.jdom.Element: void <init>(java.lang.String)>("tableConfigurer");

        $r12 = r2.<ucar.nc2.ft.point.standard.PointConfigXML: java.lang.String tableConfigurerClass>;

        $r13 = virtualinvoke $r11.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("class", $r12);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r13);

     label1:
        $r4 = r2.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig tc>;

        $r5 = $r4.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType>;

        if $r5 == null goto label2;

        $r8 = r2.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig tc>;

        $r9 = $r8.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("featureType", $r10);

     label2:
        $r6 = r2.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig tc>;

        $r7 = specialinvoke r2.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Element writeTable(ucar.nc2.ft.point.standard.TableConfig)>($r6);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        return $r1;
    }

    private org.jdom.Element writeTable(ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.Table$CoordName r30;
        ucar.nc2.ft.point.standard.TableConfig r1, r59;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r31, $r33, $r44;
        ucar.nc2.ft.point.standard.Table$CoordName[] $r8;
        ucar.nc2.ft.point.standard.JoinParentIndex $r20;
        ucar.nc2.ft.point.standard.Join r58;
        java.util.ArrayList r7, $r56;
        java.lang.String $r5, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r54, r57;
        org.jdom.Element $r0, $r16, $r21, $r23, $r25, $r28, $r29;
        ucar.nc2.ft.point.standard.JoinArray $r24;
        int[] $r4, $r34;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r6, $r9, $r10, $r11, $r12, $r17, $r55;
        ucar.nc2.ft.point.standard.PointConfigXML r15;
        ucar.nc2.ft.point.standard.Table$Type $r2, $r3, $r53;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.util.Iterator $r13, $r18, $r26;
        java.lang.Object $r14, $r19, $r27;

        r15 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: ucar.nc2.ft.point.standard.TableConfig;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("table");

        $r2 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.Table$Type type>;

        if $r2 == null goto label01;

        $r53 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.Table$Type type>;

        $r54 = virtualinvoke $r53.<ucar.nc2.ft.point.standard.Table$Type: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r54);

     label01:
        $r4 = <ucar.nc2.ft.point.standard.PointConfigXML$1: int[] $SwitchMap$ucar$nc2$ft$point$standard$Table$Type>;

        $r3 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.Table$Type type>;

        $i0 = virtualinvoke $r3.<ucar.nc2.ft.point.standard.Table$Type: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label20;
            default: goto label21;
        };

     label02:
        $r52 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dimension", $r52);

        goto label21;

     label03:
        goto label21;

     label04:
        $r49 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start>;

        if $r49 == null goto label05;

        $r51 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("start", $r51);

     label05:
        $r50 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String numRecords>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("numRecords", $r50);

        goto label21;

     label06:
        $r47 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("start", $r47);

        $r48 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String next>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("next", $r48);

        goto label21;

     label07:
        $r46 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structName", $r46);

     label08:
        $r42 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dim0", $r42);

        $r43 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dim1", $r43);

        $r44 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r45 = virtualinvoke $r44.<ucar.nc2.ft.point.standard.TableConfig$StructureType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("subtype", $r45);

        goto label21;

     label09:
        goto label21;

     label10:
        goto label21;

     label11:
        $r41 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structName", $r41);

        goto label21;

     label12:
        $r40 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structName", $r40);

        goto label21;

     label13:
        $r39 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String parentIndex>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("parentIndex", $r39);

        goto label21;

     label14:
        goto label21;

     label15:
        $r31 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r32 = virtualinvoke $r31.<ucar.nc2.ft.point.standard.TableConfig$StructureType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("subtype", $r32);

        $r34 = <ucar.nc2.ft.point.standard.PointConfigXML$1: int[] $SwitchMap$ucar$nc2$ft$point$standard$TableConfig$StructureType>;

        $r33 = r1.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $i3 = virtualinvoke $r33.<ucar.nc2.ft.point.standard.TableConfig$StructureType: int ordinal()>();

        $i4 = $r34[$i3];

        tableswitch($i4)
        {
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label18;
            default: goto label19;
        };

     label16:
        $r38 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structName", $r38);

        goto label19;

     label17:
        $r37 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dim", $r37);

        goto label19;

     label18:
        $r35 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dim0", $r35);

        $r36 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dim1", $r36);

     label19:
        goto label21;

     label20:
        $r5 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structName", $r5);

     label21:
        $r55 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        if $r55 != null goto label22;

        $r56 = new java.util.ArrayList;

        specialinvoke $r56.<java.util.ArrayList: void <init>()>();

        goto label23;

     label22:
        $r56 = new java.util.ArrayList;

        $r6 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        specialinvoke $r56.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

     label23:
        r7 = $r56;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.Table$CoordName: ucar.nc2.ft.point.standard.Table$CoordName[] values()>();

        $i2 = lengthof $r8;

        i5 = 0;

     label24:
        if i5 >= $i2 goto label25;

        r30 = $r8[i5];

        specialinvoke r15.<ucar.nc2.ft.point.standard.PointConfigXML: void addCoord(org.jdom.Element,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.ft.point.standard.Table$CoordName,java.util.List)>($r0, r1, r30, r7);

        i5 = i5 + 1;

        goto label24;

     label25:
        $r9 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        if $r9 == null goto label27;

        $r26 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z5 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label27;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.lang.String) $r27;

        $r28 = new org.jdom.Element;

        specialinvoke $r28.<org.jdom.Element: void <init>(java.lang.String)>("variable");

        $r29 = virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r57);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r29);

        goto label26;

     label27:
        $r10 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List extraJoin>;

        if $r10 == null goto label32;

        $r17 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List extraJoin>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label32;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r58 = (ucar.nc2.ft.point.standard.Join) $r19;

        $z2 = r58 instanceof ucar.nc2.ft.point.standard.JoinArray;

        if $z2 == 0 goto label29;

        $r24 = (ucar.nc2.ft.point.standard.JoinArray) r58;

        $r25 = specialinvoke r15.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Element writeJoinArray(ucar.nc2.ft.point.standard.JoinArray)>($r24);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        goto label31;

     label29:
        $z3 = r58 instanceof ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        if $z3 == 0 goto label30;

        $r22 = (ucar.nc2.ft.point.standard.JoinMuiltdimStructure) r58;

        $r23 = specialinvoke r15.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Element writeJoinMuiltdimStructure(ucar.nc2.ft.point.standard.JoinMuiltdimStructure)>($r22);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r23);

        goto label31;

     label30:
        $z4 = r58 instanceof ucar.nc2.ft.point.standard.JoinParentIndex;

        if $z4 == 0 goto label31;

        $r20 = (ucar.nc2.ft.point.standard.JoinParentIndex) r58;

        $r21 = specialinvoke r15.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Element writeJoinParentIndex(ucar.nc2.ft.point.standard.JoinParentIndex)>($r20);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

     label31:
        goto label28;

     label32:
        $r11 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List children>;

        if $r11 == null goto label34;

        $r12 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List children>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label33:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label34;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r59 = (ucar.nc2.ft.point.standard.TableConfig) $r14;

        $r16 = specialinvoke r15.<ucar.nc2.ft.point.standard.PointConfigXML: org.jdom.Element writeTable(ucar.nc2.ft.point.standard.TableConfig)>(r59);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r16);

        goto label33;

     label34:
        return $r0;
    }

    private void addCoord(org.jdom.Element, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.ft.point.standard.Table$CoordName, java.util.List)
    {
        ucar.nc2.ft.point.standard.Table$CoordName r1;
        ucar.nc2.ft.point.standard.PointConfigXML r8;
        ucar.nc2.ft.point.standard.TableConfig r0;
        java.util.List r7;
        java.lang.String $r2, $r4;
        org.jdom.Element $r3, $r5, r6;

        r8 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r6 := @parameter0: org.jdom.Element;

        r0 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r1 := @parameter2: ucar.nc2.ft.point.standard.Table$CoordName;

        r7 := @parameter3: java.util.List;

        $r2 = virtualinvoke r0.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String findCoordinateVariableName(ucar.nc2.ft.point.standard.Table$CoordName)>(r1);

        if $r2 == null goto label1;

        $r3 = new org.jdom.Element;

        specialinvoke $r3.<org.jdom.Element: void <init>(java.lang.String)>("coordinate");

        $r4 = virtualinvoke r1.<ucar.nc2.ft.point.standard.Table$CoordName: java.lang.String name()>();

        $r5 = virtualinvoke $r3.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r4);

        virtualinvoke $r5.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r2);

        virtualinvoke r6.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r5);

        interfaceinvoke r7.<java.util.List: boolean remove(java.lang.Object)>($r2);

     label1:
        return;
    }

    private org.jdom.Element writeJoinArray(ucar.nc2.ft.point.standard.JoinArray)
    {
        ucar.nc2.ft.point.standard.PointConfigXML r15;
        ucar.nc2.ft.point.standard.JoinArray r1;
        int $i0;
        java.lang.String $r3, $r7, $r11, $r14;
        ucar.nc2.dataset.VariableDS $r5, $r10;
        ucar.nc2.ft.point.standard.JoinArray$Type $r4, $r13;
        java.lang.Class $r2;
        org.jdom.Element $r0, $r6, $r8, $r9, $r12;

        r15 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: ucar.nc2.ft.point.standard.JoinArray;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("join");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("class", $r3);

        $r4 = r1.<ucar.nc2.ft.point.standard.JoinArray: ucar.nc2.ft.point.standard.JoinArray$Type type>;

        if $r4 == null goto label1;

        $r13 = r1.<ucar.nc2.ft.point.standard.JoinArray: ucar.nc2.ft.point.standard.JoinArray$Type type>;

        $r14 = virtualinvoke $r13.<ucar.nc2.ft.point.standard.JoinArray$Type: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r14);

     label1:
        $r5 = r1.<ucar.nc2.ft.point.standard.JoinArray: ucar.nc2.dataset.VariableDS v>;

        if $r5 == null goto label2;

        $r9 = new org.jdom.Element;

        specialinvoke $r9.<org.jdom.Element: void <init>(java.lang.String)>("variable");

        $r10 = r1.<ucar.nc2.ft.point.standard.JoinArray: ucar.nc2.dataset.VariableDS v>;

        $r11 = virtualinvoke $r10.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

     label2:
        $r6 = new org.jdom.Element;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String)>("param");

        $i0 = r1.<ucar.nc2.ft.point.standard.JoinArray: int param>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r8 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r7);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        return $r0;
    }

    private ucar.nc2.ft.point.standard.JoinArray readJoinArray(ucar.nc2.dataset.NetcdfDataset, org.jdom.Element)
    {
        ucar.nc2.dataset.VariableDS r10;
        ucar.nc2.ft.point.standard.PointConfigXML r12;
        java.lang.Integer $r5;
        ucar.nc2.ft.point.standard.JoinArray $r11;
        ucar.nc2.ft.point.standard.JoinArray$Type $r2;
        int $i0, $i1;
        ucar.nc2.Variable $r9;
        java.lang.String $r1, $r4, $r7;
        org.jdom.Element r0, $r3, $r6;
        ucar.nc2.dataset.NetcdfDataset r8;

        r12 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r8 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.JoinArray$Type: ucar.nc2.ft.point.standard.JoinArray$Type valueOf(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("param");

        $r4 = virtualinvoke $r3.<org.jdom.Element: java.lang.String getText()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("variable");

        $r7 = virtualinvoke $r6.<org.jdom.Element: java.lang.String getText()>();

        $r9 = virtualinvoke r8.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r7);

        r10 = (ucar.nc2.dataset.VariableDS) $r9;

        $r11 = new ucar.nc2.ft.point.standard.JoinArray;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        specialinvoke $r11.<ucar.nc2.ft.point.standard.JoinArray: void <init>(ucar.nc2.dataset.VariableDS,ucar.nc2.ft.point.standard.JoinArray$Type,int)>(r10, $r2, $i1);

        return $r11;
    }

    private org.jdom.Element writeJoinMuiltdimStructure(ucar.nc2.ft.point.standard.JoinMuiltdimStructure)
    {
        ucar.nc2.ft.point.standard.PointConfigXML r12;
        ucar.nc2.dataset.StructureDS $r4, $r9;
        int $i0;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r10;
        org.jdom.Element $r0, $r5, $r7, $r8, $r11;

        r12 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("join");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("class", $r3);

        $r4 = r1.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.nc2.dataset.StructureDS parentStructure>;

        if $r4 == null goto label1;

        $r8 = new org.jdom.Element;

        specialinvoke $r8.<org.jdom.Element: void <init>(java.lang.String)>("parentStructure");

        $r9 = r1.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.nc2.dataset.StructureDS parentStructure>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label1:
        $r5 = new org.jdom.Element;

        specialinvoke $r5.<org.jdom.Element: void <init>(java.lang.String)>("dimLength");

        $i0 = r1.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: int dimLength>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r7 = virtualinvoke $r5.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r6);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        return $r0;
    }

    private org.jdom.Element writeJoinParentIndex(ucar.nc2.ft.point.standard.JoinParentIndex)
    {
        ucar.nc2.ft.point.standard.PointConfigXML r13;
        ucar.nc2.dataset.StructureDS $r4, $r10;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r7, $r11;
        org.jdom.Element $r0, $r6, $r8, $r9, $r12;
        ucar.nc2.ft.point.standard.JoinParentIndex r1;

        r13 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: ucar.nc2.ft.point.standard.JoinParentIndex;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String)>("join");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("class", $r3);

        $r4 = r1.<ucar.nc2.ft.point.standard.JoinParentIndex: ucar.nc2.dataset.StructureDS parentStructure>;

        if $r4 == null goto label1;

        $r9 = new org.jdom.Element;

        specialinvoke $r9.<org.jdom.Element: void <init>(java.lang.String)>("parentStructure");

        $r10 = r1.<ucar.nc2.ft.point.standard.JoinParentIndex: ucar.nc2.dataset.StructureDS parentStructure>;

        $r11 = virtualinvoke $r10.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

     label1:
        $r5 = r1.<ucar.nc2.ft.point.standard.JoinParentIndex: java.lang.String parentIndex>;

        if $r5 == null goto label2;

        $r6 = new org.jdom.Element;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String)>("parentIndex");

        $r7 = r1.<ucar.nc2.ft.point.standard.JoinParentIndex: java.lang.String parentIndex>;

        $r8 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r7);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

     label2:
        return $r0;
    }

    public ucar.nc2.ft.point.standard.TableConfig readConfigXMLfromResource(java.lang.String, ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        org.jdom.output.XMLOutputter $r13;
        java.util.Formatter r46;
        ucar.nc2.ft.point.standard.TableConfig $r11;
        org.jdom.Document $r6;
        org.jdom.JDOMException $r42;
        ucar.nc2.constants.FeatureType $r12, r45;
        boolean $z0, $z1, $z2, $z3;
        java.io.FileNotFoundException $r41;
        java.lang.StringBuilder $r14, $r16, $r18, $r19, $r22, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r35, $r37, $r39;
        java.lang.ClassLoader $r2;
        org.jdom.input.SAXBuilder $r5;
        ucar.nc2.ft.point.standard.PointConfigXML r0;
        java.lang.String r3, $r8, $r17, $r20, $r27, $r33, $r38, $r40, $r44;
        java.io.PrintStream $r15, $r21, $r23, $r29, $r36;
        java.io.IOException $r43;
        java.lang.Class $r1;
        org.jdom.Element $r7, $r9;
        ucar.nc2.dataset.NetcdfDataset r10;
        java.io.InputStream $r4, $r34;

        r0 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r3 := @parameter0: java.lang.String;

        r45 := @parameter1: ucar.nc2.constants.FeatureType;

        r10 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        r46 := @parameter3: java.util.Formatter;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

        if $r4 != null goto label1;

        $r41 = new java.io.FileNotFoundException;

        specialinvoke $r41.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r3);

        throw $r41;

     label1:
        $z0 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugXML>;

        if $z0 == 0 goto label2;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PointConfig URL = <");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contents=\n");

        $r38 = staticinvoke <ucar.nc2.util.IO: java.lang.String readContents(java.io.InputStream)>($r34);

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label2:
        $r5 = new org.jdom.input.SAXBuilder;

        specialinvoke $r5.<org.jdom.input.SAXBuilder: void <init>(boolean)>(0);

        $z1 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugURL>;

        if $z1 == 0 goto label3;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PointConfig URL = <");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label3:
        $r6 = virtualinvoke $r5.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>($r4);

     label4:
        goto label6;

     label5:
        $r42 := @caughtexception;

        $r43 = new java.io.IOException;

        $r44 = virtualinvoke $r42.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>($r44);

        throw $r43;

     label6:
        $z2 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugXML>;

        if $z2 == 0 goto label7;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label7:
        $z3 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean showParsedXML>;

        if $z3 == 0 goto label8;

        $r13 = new org.jdom.output.XMLOutputter;

        specialinvoke $r13.<org.jdom.output.XMLOutputter: void <init>()>();

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** PointConfig/showParsedXML = \n");

        $r17 = virtualinvoke $r13.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r6);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label8:
        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r8 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("featureType");

        $r9 = virtualinvoke $r7.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("table");

        $r11 = specialinvoke r0.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig parseTableConfig(ucar.nc2.dataset.NetcdfDataset,org.jdom.Element,ucar.nc2.ft.point.standard.TableConfig)>(r10, $r9, null);

        $r12 = staticinvoke <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType valueOf(java.lang.String)>($r8);

        $r11.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r12;

        return $r11;

        catch org.jdom.JDOMException from label2 to label4 with label5;
    }

    public ucar.nc2.ft.point.standard.TableConfig readConfigXML(java.lang.String, ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        org.jdom.output.XMLOutputter $r10;
        java.util.Formatter r29;
        ucar.nc2.ft.point.standard.TableConfig $r8;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r25;
        ucar.nc2.constants.FeatureType $r9, r28;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r19, $r21, $r22, $r23;
        org.jdom.input.SAXBuilder $r0;
        ucar.nc2.ft.point.standard.PointConfigXML r6;
        java.lang.String r1, $r4, $r14, $r17, $r24, $r27;
        java.io.PrintStream $r12, $r18, $r20;
        java.io.IOException $r26;
        org.jdom.Element $r3, $r5;
        ucar.nc2.dataset.NetcdfDataset r7;

        r6 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r1 := @parameter0: java.lang.String;

        r28 := @parameter1: ucar.nc2.constants.FeatureType;

        r7 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        r29 := @parameter3: java.util.Formatter;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>(0);

        $z0 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugURL>;

        if $z0 == 0 goto label2;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PointConfig URL = <");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label2:
        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r25 := @caughtexception;

        $r26 = new java.io.IOException;

        $r27 = virtualinvoke $r25.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label5:
        $z1 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugXML>;

        if $z1 == 0 goto label6;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label6:
        $z2 = <ucar.nc2.ft.point.standard.PointConfigXML: boolean showParsedXML>;

        if $z2 == 0 goto label7;

        $r10 = new org.jdom.output.XMLOutputter;

        specialinvoke $r10.<org.jdom.output.XMLOutputter: void <init>()>();

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** PointConfig/showParsedXML = \n");

        $r14 = virtualinvoke $r10.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label7:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r4 = virtualinvoke $r3.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("featureType");

        $r5 = virtualinvoke $r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("table");

        $r8 = specialinvoke r6.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig parseTableConfig(ucar.nc2.dataset.NetcdfDataset,org.jdom.Element,ucar.nc2.ft.point.standard.TableConfig)>(r7, $r5, null);

        $r9 = staticinvoke <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType valueOf(java.lang.String)>($r4);

        $r8.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r9;

        return $r8;

        catch org.jdom.JDOMException from label1 to label3 with label4;
    }

    private ucar.nc2.ft.point.standard.TableConfig parseTableConfig(ucar.nc2.dataset.NetcdfDataset, org.jdom.Element, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.Table$CoordName $r19;
        ucar.nc2.ft.point.standard.TableConfig $r4, $r14, r37;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r22, $r23, $r36;
        ucar.nc2.ft.point.standard.JoinArray $r16;
        int[] $r5, $r24;
        boolean $z0, $z1, $z2;
        java.util.List $r7, $r9, $r44;
        ucar.nc2.ft.point.standard.PointConfigXML r12;
        ucar.nc2.ft.point.standard.Table$Type $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r3, $r6, $r18, $r20, $r21, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r42, $r43;
        java.util.Iterator $r8, $r10, $r45;
        java.lang.Object $r11, $r15, $r17;
        org.jdom.Element r0, r46, r47, r48;
        ucar.nc2.dataset.NetcdfDataset r13;

        r12 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r13 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: org.jdom.Element;

        r37 := @parameter2: ucar.nc2.ft.point.standard.TableConfig;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type valueOf(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r4 = new ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r2, $r3);

        $r5 = <ucar.nc2.ft.point.standard.PointConfigXML$1: int[] $SwitchMap$ucar$nc2$ft$point$standard$Table$Type>;

        $i0 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.Table$Type: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label11;
            case 13: goto label12;
            case 14: goto label13;
            case 15: goto label18;
            default: goto label19;
        };

     label01:
        $r43 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dimension");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r43;

        goto label19;

     label02:
        goto label19;

     label03:
        $r41 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("numRecords");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String numRecords> = $r41;

        $r42 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("start");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start> = $r42;

        goto label19;

     label04:
        $r39 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("start");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start> = $r39;

        $r40 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("next");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String next> = $r40;

        goto label19;

     label05:
        $r38 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structName");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r38;

     label06:
        $r32 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dim0");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName> = $r32;

        $r33 = $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r33;

        $r34 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dim1");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName> = $r34;

        $r35 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("subtype");

        $r36 = staticinvoke <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType valueOf(java.lang.String)>($r35);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r36;

        specialinvoke r12.<ucar.nc2.ft.point.standard.PointConfigXML: void makeMultidimInner(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig,ucar.nc2.ft.point.standard.TableConfig)>(r13, r37, $r4);

        goto label19;

     label07:
        goto label19;

     label08:
        goto label19;

     label09:
        $r31 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structName");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r31;

        goto label19;

     label10:
        $r30 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structName");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r30;

        goto label19;

     label11:
        $r29 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("parentIndex");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String parentIndex> = $r29;

        goto label19;

     label12:
        goto label19;

     label13:
        $r21 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("subtype");

        $r22 = staticinvoke <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType valueOf(java.lang.String)>($r21);

        $r4.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r22;

        $r24 = <ucar.nc2.ft.point.standard.PointConfigXML$1: int[] $SwitchMap$ucar$nc2$ft$point$standard$TableConfig$StructureType>;

        $r23 = $r4.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $i2 = virtualinvoke $r23.<ucar.nc2.ft.point.standard.TableConfig$StructureType: int ordinal()>();

        $i3 = $r24[$i2];

        tableswitch($i3)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            default: goto label17;
        };

     label14:
        $r28 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structName");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r28;

        goto label17;

     label15:
        $r27 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dim");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r27;

        goto label17;

     label16:
        $r25 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dim0");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r25;

        $r26 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dim1");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName> = $r26;

     label17:
        goto label19;

     label18:
        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structName");

        $r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = $r6;

     label19:
        $r44 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("coordinate");

        $r45 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z2 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label21;

        $r17 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (org.jdom.Element) $r17;

        $r18 = virtualinvoke r46.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r19 = staticinvoke <ucar.nc2.ft.point.standard.Table$CoordName: ucar.nc2.ft.point.standard.Table$CoordName valueOf(java.lang.String)>($r18);

        $r20 = virtualinvoke r46.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void setCoordinateVariableName(ucar.nc2.ft.point.standard.Table$CoordName,java.lang.String)>($r19, $r20);

        goto label20;

     label21:
        $r7 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("join");

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r15 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r47 = (org.jdom.Element) $r15;

        $r16 = specialinvoke r12.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.JoinArray readJoinArray(ucar.nc2.dataset.NetcdfDataset,org.jdom.Element)>(r13, r47);

        virtualinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void addJoin(ucar.nc2.ft.point.standard.Join)>($r16);

        goto label22;

     label23:
        $r9 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("table");

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r48 = (org.jdom.Element) $r11;

        $r14 = specialinvoke r12.<ucar.nc2.ft.point.standard.PointConfigXML: ucar.nc2.ft.point.standard.TableConfig parseTableConfig(ucar.nc2.dataset.NetcdfDataset,org.jdom.Element,ucar.nc2.ft.point.standard.TableConfig)>(r13, r48, $r4);

        virtualinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r14);

        goto label24;

     label25:
        return $r4;
    }

    private void makeMultidimInner(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.PointConfigXML r19;
        java.util.ArrayList $r8, $r9;
        ucar.nc2.ft.point.standard.TableConfig r1, r4;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.Variable r12;
        java.lang.String $r2, $r5, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r10;
        ucar.ma2.DataType $r17, $r18;
        java.util.List $r7;
        ucar.nc2.Dimension $r3, $r6, $r13, $r15;
        java.lang.Object $r11;
        ucar.nc2.dataset.NetcdfDataset r0;

        r19 := @this: ucar.nc2.ft.point.standard.PointConfigXML;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        r4 := @parameter2: ucar.nc2.ft.point.standard.TableConfig;

        $r2 = r1.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r2);

        $r5 = r4.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String innerName>;

        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        $r10 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.Variable) $r11;

        $z0 = r12 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r13 = virtualinvoke r12.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r13 == null goto label5;

        $z1 = virtualinvoke $r13.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label5;

        $i2 = virtualinvoke r12.<ucar.nc2.Variable: int getRank()>();

        if $i2 == 1 goto label3;

        $i3 = virtualinvoke r12.<ucar.nc2.Variable: int getRank()>();

        if $i3 != 2 goto label4;

        $r17 = virtualinvoke r12.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r17 != $r18 goto label4;

     label3:
        $r14 = virtualinvoke r12.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label5;

     label4:
        $r15 = virtualinvoke r12.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        if $r15 == null goto label5;

        $z2 = virtualinvoke $r15.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label5;

        $r16 = virtualinvoke r12.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r16);

     label5:
        goto label1;

     label6:
        r1.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r8;

        r4.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r9;

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugXML> = 0;

        <ucar.nc2.ft.point.standard.PointConfigXML: boolean debugURL> = 0;

        <ucar.nc2.ft.point.standard.PointConfigXML: boolean showParsedXML> = 0;

        return;
    }
}
