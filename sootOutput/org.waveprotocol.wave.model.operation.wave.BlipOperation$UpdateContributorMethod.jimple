final enum class org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod ADD;
    public static final enum org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod REMOVE;
    public static final enum org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod NONE;
    private static final org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] $VALUES;

    public static org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] values()
    {
        org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/model/operation/wave/BlipOperation$UpdateContributorMethod;", r0);

        $r2 = (org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod $r0, $r1, $r2, $r4, $r5, $r6;
        org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] $r3;

        $r0 = new org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod;

        specialinvoke $r0.<org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: void <init>(java.lang.String,int)>("ADD", 0);

        <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod ADD> = $r0;

        $r1 = new org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod;

        specialinvoke $r1.<org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: void <init>(java.lang.String,int)>("REMOVE", 1);

        <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod REMOVE> = $r1;

        $r2 = new org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod;

        specialinvoke $r2.<org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: void <init>(java.lang.String,int)>("NONE", 2);

        <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod NONE> = $r2;

        $r3 = newarray (org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod)[3];

        $r4 = <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod ADD>;

        $r3[0] = $r4;

        $r5 = <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod REMOVE>;

        $r3[1] = $r5;

        $r6 = <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod NONE>;

        $r3[2] = $r6;

        <org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod: org.waveprotocol.wave.model.operation.wave.BlipOperation$UpdateContributorMethod[] $VALUES> = $r3;

        return;
    }
}
