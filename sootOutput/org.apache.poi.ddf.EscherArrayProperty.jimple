public final class org.apache.poi.ddf.EscherArrayProperty extends org.apache.poi.ddf.EscherComplexProperty
{
    private static final int FIXED_SIZE;
    private boolean sizeIncludesHeaderSize;
    private boolean emptyComplexPart;

    public void <init>(short, byte[])
    {
        byte[] r1, $r2;
        short s0;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        s0 := @parameter0: short;

        r1 := @parameter1: byte[];

        $r2 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: byte[] checkComplexData(byte[])>(r1);

        specialinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: void <init>(short,byte[])>(s0, $r2);

        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean sizeIncludesHeaderSize> = 1;

        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean emptyComplexPart> = 0;

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean emptyComplexPart> = $z0;

        return;
    }

    public void <init>(short, boolean, byte[])
    {
        byte[] r1, $r2;
        short s0;
        org.apache.poi.ddf.EscherArrayProperty r0;
        boolean z0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        s0 := @parameter0: short;

        z0 := @parameter1: boolean;

        r1 := @parameter2: byte[];

        $r2 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: byte[] checkComplexData(byte[])>(r1);

        specialinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: void <init>(short,boolean,byte[])>(s0, z0, $r2);

        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean sizeIncludesHeaderSize> = 1;

        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean emptyComplexPart> = 0;

        return;
    }

    private static byte[] checkComplexData(byte[])
    {
        int $i0;
        byte[] r0, $r1;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $r1 = newarray (byte)[6];

        return $r1;

     label2:
        return r0;
    }

    public int getNumberOfElementsInArray()
    {
        byte[] $r1;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        $z0 = r0.<org.apache.poi.ddf.EscherArrayProperty: boolean emptyComplexPart>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r1, 0);

        return $i0;
    }

    public void setNumberOfElementsInArray(int)
    {
        byte[] $r1, $r2, r3, $r4, $r5;
        short $s1, $s6;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int i0, $i2, $i3, i4, $i5, $i7;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        i0 := @parameter0: int;

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i2 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s1);

        $i3 = i0 * $i2;

        i4 = $i3 + 6;

        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i5 = lengthof $r1;

        if i4 == $i5 goto label1;

        r3 = newarray (byte)[i4];

        $r5 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $r4 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i7 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i7);

        r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData> = r3;

     label1:
        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $s6 = (short) i0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, 0, $s6);

        return;
    }

    public int getNumberOfElementsInMemory()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.ddf.EscherArrayProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r1, 2);

        return $i0;
    }

    public void setNumberOfElementsInMemory(int)
    {
        byte[] $r1, $r2, r3, $r4;
        short $s1, $s6;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int i0, $i2, $i3, i4, $i5;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        i0 := @parameter0: int;

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i2 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s1);

        $i3 = i0 * $i2;

        i4 = $i3 + 6;

        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i5 = lengthof $r1;

        if i4 == $i5 goto label1;

        r3 = newarray (byte)[i4];

        $r4 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, i4);

        r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData> = r3;

     label1:
        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $s6 = (short) i0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, 2, $s6);

        return;
    }

    public short getSizeOfElements()
    {
        byte[] $r1;
        short $s0;
        org.apache.poi.ddf.EscherArrayProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $s0 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r1, 4);

        return $s0;
    }

    public void setSizeOfElements(int)
    {
        byte[] $r1, $r2, r3, $r4;
        short $s1, $s3;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int i0, $i2, $i4, $i5, i6, $i7;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $s1 = (short) i0;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, 4, $s1);

        $i2 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        $s3 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i4 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s3);

        $i5 = $i2 * $i4;

        i6 = $i5 + 6;

        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i7 = lengthof $r2;

        if i6 == $i7 goto label1;

        r3 = newarray (byte)[i6];

        $r4 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, 6);

        r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData> = r3;

     label1:
        return;
    }

    public byte[] getElement(int)
    {
        byte[] r1, $r2;
        short $s0;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int $i1, i2, $i3, $i4, $i5;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        i2 := @parameter0: int;

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i1 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s0);

        r1 = newarray (byte)[$i1];

        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i3 = i2 * $i1;

        $i5 = 6 + $i3;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, r1, 0, $i4);

        return r1;
    }

    public void setElement(int, byte[])
    {
        byte[] r1, $r2;
        short $s0;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int $i1, i2, $i3, $i4;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        i2 := @parameter0: int;

        r1 := @parameter1: byte[];

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i1 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s0);

        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i3 = i2 * $i1;

        $i4 = 6 + $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, $i4, $i1);

        return;
    }

    public java.lang.String toString()
    {
        byte[] $r36;
        org.apache.poi.ddf.EscherArrayProperty r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r33, $r34, $r35, $r38, $r39, $r42, $r43, $r44, $r45, $r46;
        short $s2, $s4, $s5;
        java.lang.StringBuffer $r41;
        int $i0, $i1, $i3, i6, $i7, $i8;
        java.lang.String $r6, $r11, $r16, $r21, $r29, $r31, $r37, $r40;

        r3 := @this: org.apache.poi.ddf.EscherArrayProperty;

        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    {EscherArrayProperty:\n");

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Num Elements: ");

        $i0 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Num Elements In Memory: ");

        $i1 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInMemory()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Size of elements: ");

        $s2 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: short getSizeOfElements()>();

        $i7 = (int) $s2;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        i6 = 0;

     label1:
        $i3 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        if i6 >= $i3 goto label2;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     Element ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r36 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i6);

        $r37 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r36);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        i6 = i6 + 1;

        goto label1;

     label2:
        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\n");

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("propNum: ");

        $s4 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: short getPropertyNumber()>();

        $i8 = (int) $s4;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", propName: ");

        $s5 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: short getPropertyNumber()>();

        $r21 = staticinvoke <org.apache.poi.ddf.EscherProperties: java.lang.String getPropertyName(short)>($s5);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", complex: ");

        $z0 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: boolean isComplex()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blipId: ");

        $z1 = virtualinvoke r3.<org.apache.poi.ddf.EscherArrayProperty: boolean isBlipId()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r29 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r31;
    }

    public java.lang.String toXml(java.lang.String)
    {
        byte[] $r25;
        org.apache.poi.ddf.EscherArrayProperty r4;
        boolean $z0;
        java.lang.StringBuilder $r0, $r2, $r3, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r20, $r22, $r23, $r24, $r27;
        short $s0;
        int $i1, i2;
        java.lang.String r1, $r6, $r9, $r12, $r19, $r21, $r26;
        java.lang.Class $r5, $r18;

        r4 := @this: org.apache.poi.ddf.EscherArrayProperty;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=\"0x");

        $s0 = virtualinvoke r4.<org.apache.poi.ddf.EscherArrayProperty: short getId()>();

        $r9 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" name=\"");

        $r12 = virtualinvoke r4.<org.apache.poi.ddf.EscherArrayProperty: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" blipId=\"");

        $z0 = virtualinvoke r4.<org.apache.poi.ddf.EscherArrayProperty: boolean isBlipId()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n");

        i2 = 0;

     label1:
        $i1 = virtualinvoke r4.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        if i2 >= $i1 goto label2;

        $r22 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Element>");

        $r25 = virtualinvoke r4.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i2);

        $r26 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[])>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Element>\n");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r18 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getSimpleName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public int setArrayData(byte[], int)
    {
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r7;
        short $s1, $s4;
        org.apache.poi.ddf.EscherArrayProperty r0;
        int i0, $i2, $i3, $i5, i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;

        r0 := @this: org.apache.poi.ddf.EscherArrayProperty;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $z0 = r0.<org.apache.poi.ddf.EscherArrayProperty: boolean emptyComplexPart>;

        if $z0 == 0 goto label1;

        $r6 = newarray (byte)[0];

        r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData> = $r6;

        goto label3;

     label1:
        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, i0);

        $i2 = i0 + 2;

        staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i2);

        $i3 = i0 + 4;

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i3);

        $i5 = staticinvoke <org.apache.poi.ddf.EscherArrayProperty: int getActualSizeOfElements(short)>($s4);

        $i11 = (int) $s1;

        i6 = $i5 * $i11;

        $r2 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i7 = lengthof $r2;

        if i6 != $i7 goto label2;

        $i9 = i6 + 6;

        $r5 = newarray (byte)[$i9];

        r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData> = $r5;

        r0.<org.apache.poi.ddf.EscherArrayProperty: boolean sizeIncludesHeaderSize> = 0;

     label2:
        $r4 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $r3 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i8 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r4, 0, $i8);

     label3:
        $r7 = r0.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        $i10 = lengthof $r7;

        return $i10;
    }

    public int serializeSimplePart(byte[], int)
    {
        byte[] r0, $r2;
        short $s1;
        org.apache.poi.ddf.EscherArrayProperty r1;
        int i0, $i2, i3, $i5;
        boolean $z0;

        r1 := @this: org.apache.poi.ddf.EscherArrayProperty;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherArrayProperty: short getId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, i0, $s1);

        $r2 = r1.<org.apache.poi.ddf.EscherArrayProperty: byte[] _complexData>;

        i3 = lengthof $r2;

        $z0 = r1.<org.apache.poi.ddf.EscherArrayProperty: boolean sizeIncludesHeaderSize>;

        if $z0 != 0 goto label1;

        $i5 = (int) -6;

        i3 = i3 + $i5;

     label1:
        $i2 = i0 + 2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i2, i3);

        return 6;
    }

    public static int getActualSizeOfElements(short)
    {
        short s0, $s3;
        int $i1, $i2, $i4, $i5, $i6, $i7;

        s0 := @parameter0: short;

        $i4 = (int) s0;

        if $i4 >= 0 goto label1;

        $i5 = (int) s0;

        $i1 = neg $i5;

        $i2 = $i1 >> 2;

        $s3 = (short) $i2;

        $i6 = (int) $s3;

        return $i6;

     label1:
        $i7 = (int) s0;

        return $i7;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ddf.EscherArrayProperty: int FIXED_SIZE> = 6;

        return;
    }
}
