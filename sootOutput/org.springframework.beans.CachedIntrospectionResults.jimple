public class org.springframework.beans.CachedIntrospectionResults extends java.lang.Object
{
    private static final org.apache.commons.logging.Log logger;
    static final java.util.Set acceptedClassLoaders;
    static final java.util.Map classCache;
    private final java.beans.BeanInfo beanInfo;
    private final java.util.Map propertyDescriptorCache;

    static void <clinit>()
    {
        java.util.HashSet $r1;
        java.util.Map $r4;
        java.util.Set $r2;
        org.apache.commons.logging.Log $r0;
        java.util.WeakHashMap $r3;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/beans/CachedIntrospectionResults;");

        <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r1);

        <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache> = $r4;

        return;
    }

    public static void acceptClassLoader(java.lang.ClassLoader)
    {
        java.util.Set $r1;
        java.lang.ClassLoader r0;

        r0 := @parameter0: java.lang.ClassLoader;

        if r0 == null goto label1;

        $r1 = <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public static void clearClassLoader(java.lang.ClassLoader)
    {
        java.lang.Throwable $r11, $r12;
        java.util.Map $r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4, $r9;
        java.util.Set $r3, $r7, $r8;
        java.lang.Object $r5, $r10;
        java.lang.Class r13;
        java.lang.ClassLoader r0, $r6, r14;

        r0 := @parameter0: java.lang.ClassLoader;

        if r0 != null goto label01;

        return;

     label01:
        $r1 = <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache>;

        entermonitor $r1;

     label02:
        $r2 = <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.Class) $r5;

        $r6 = virtualinvoke r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>($r6, r0);

        if $z0 == 0 goto label04;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

     label04:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label03;

        exitmonitor $r1;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label07:
        throw $r12;

     label08:
        $r7 = <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders>;

        entermonitor $r7;

     label09:
        $r8 = <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders>;

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label11;

     label10:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.ClassLoader) $r10;

        $z1 = staticinvoke <org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>(r14, r0);

        if $z1 == 0 goto label11;

        interfaceinvoke $r9.<java.util.Iterator: void remove()>();

     label11:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label10;

        exitmonitor $r7;

     label12:
        goto label15;

     label13:
        $r11 := @caughtexception;

        exitmonitor $r7;

     label14:
        throw $r11;

     label15:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    static org.springframework.beans.CachedIntrospectionResults forClass(java.lang.Class) throws org.springframework.beans.BeansException
    {
        java.util.Map $r1, $r6, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, z6, $z7, $z8;
        org.springframework.beans.CachedIntrospectionResults $r5, $r14, r26;
        java.lang.ref.Reference r25;
        java.lang.StringBuilder $r7, $r10, $r17, $r20, $r21;
        java.lang.ClassLoader $r4, $r12, $r23;
        java.lang.String $r8, $r9, $r11, $r19, $r22;
        java.lang.ref.WeakReference $r15;
        java.lang.Class r0, $r3;
        java.lang.Object $r2, $r24;
        org.apache.commons.logging.Log $r13, $r18;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $z0 = $r2 instanceof java.lang.ref.Reference;

        if $z0 == 0 goto label1;

        r25 = (java.lang.ref.Reference) $r2;

        $r24 = virtualinvoke r25.<java.lang.ref.Reference: java.lang.Object get()>();

        r26 = (org.springframework.beans.CachedIntrospectionResults) $r24;

        goto label2;

     label1:
        r26 = (org.springframework.beans.CachedIntrospectionResults) $r2;

     label2:
        if r26 != null goto label8;

        $r3 = class "Lorg/springframework/beans/CachedIntrospectionResults;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z1 = staticinvoke <org.springframework.util.ClassUtils: boolean isCacheSafe(java.lang.Class,java.lang.ClassLoader)>(r0, $r4);

        if $z1 != 0 goto label3;

        $r23 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z4 = staticinvoke <org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>($r23);

        if $z4 != 0 goto label3;

        $z8 = 0;

        $z7 = 0;

        goto label4;

     label3:
        $z8 = 1;

        $z7 = 1;

     label4:
        z6 = $z8;

        if $z7 != 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeanInfo");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z2 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>($r11, $r12);

        if $z2 != 0 goto label6;

     label5:
        $r5 = new org.springframework.beans.CachedIntrospectionResults;

        specialinvoke $r5.<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>(r0, z6);

        r26 = $r5;

        $r6 = <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

        goto label8;

     label6:
        $r13 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label7;

        $r18 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not strongly caching class [");

        $r19 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] because it is not cache-safe");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label7:
        $r14 = new org.springframework.beans.CachedIntrospectionResults;

        specialinvoke $r14.<org.springframework.beans.CachedIntrospectionResults: void <init>(java.lang.Class,boolean)>(r0, 1);

        r26 = $r14;

        $r16 = <org.springframework.beans.CachedIntrospectionResults: java.util.Map classCache>;

        $r15 = new java.lang.ref.WeakReference;

        specialinvoke $r15.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r14);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r15);

     label8:
        return r26;
    }

    private static boolean isClassLoaderAccepted(java.lang.ClassLoader)
    {
        java.lang.ClassLoader[] $r2, r4;
        java.lang.Object[] $r3;
        java.util.Set $r0, $r1;
        int $i0, i1, i2;
        java.lang.ClassLoader r5, r6;
        boolean $z0;

        r6 := @parameter0: java.lang.ClassLoader;

        $r1 = <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders>;

        $r0 = <org.springframework.beans.CachedIntrospectionResults: java.util.Set acceptedClassLoaders>;

        $i0 = interfaceinvoke $r0.<java.util.Set: int size()>();

        $r2 = newarray (java.lang.ClassLoader)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        r4 = (java.lang.ClassLoader[]) $r3;

        i1 = lengthof r4;

        i2 = 0;

        goto label3;

     label1:
        r5 = r4[i2];

        $z0 = staticinvoke <org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)>(r6, r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i1 goto label1;

        return 0;
    }

    private static boolean isUnderneathClassLoader(java.lang.ClassLoader, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r0, r1, $r2, r3;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r3 = r0;

        goto label4;

     label3:
        $r2 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        r3 = $r2;

        if $r2 != r1 goto label4;

        return 1;

     label4:
        if r3 != null goto label3;

        return 0;
    }

    private void <init>(java.lang.Class, boolean) throws org.springframework.beans.BeansException
    {
        java.beans.PropertyDescriptor[] $r7;
        java.util.Map $r10;
        org.springframework.beans.CachedIntrospectionResults r0;
        java.beans.IntrospectionException $r46;
        java.beans.PropertyDescriptor r55;
        java.lang.StringBuilder $r12, $r15, $r16, $r18, $r20, $r22, $r25, $r26, $r27, $r30, $r31, $r34, $r37, $r38, $r40, $r43, $r44, $r48, $r50, $r51;
        java.util.LinkedHashMap $r5;
        java.beans.BeanInfo $r3, $r6;
        java.lang.String $r11, $r14, $r21, $r24, $r29, $r32, $r33, $r36, $r39, $r42, $r45, $r49, $r52, $r56, $r57;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        int $i0, i1;
        org.springframework.beans.FatalBeanException $r47;
        org.apache.commons.logging.Log $r1, $r4, $r9, $r13, $r35, $r41;
        java.lang.Class r2, $r8, $r17, $r19, $r23, $r28, r53, $r54;

        r0 := @this: org.springframework.beans.CachedIntrospectionResults;

        r2 := @parameter0: java.lang.Class;

        z4 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label01:
        $r1 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label02;

        $r41 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("Getting BeanInfo for class [");

        $r42 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r41.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r45);

     label02:
        $r3 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>(r2);

        r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.BeanInfo beanInfo> = $r3;

        r53 = r2;

     label03:
        staticinvoke <java.beans.Introspector: void flushFromCaches(java.lang.Class)>(r53);

        $r54 = virtualinvoke r53.<java.lang.Class: java.lang.Class getSuperclass()>();

        r53 = $r54;

        if $r54 != null goto label03;

        $r4 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z1 == 0 goto label04;

        $r35 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("Caching PropertyDescriptors for class [");

        $r36 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r39);

     label04:
        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache> = $r5;

        $r6 = r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.BeanInfo beanInfo>;

        $r7 = interfaceinvoke $r6.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        $i0 = lengthof $r7;

        i1 = 0;

        goto label14;

     label05:
        r55 = $r7[i1];

        $r8 = class "Ljava/lang/Class;";

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label06;

        $r32 = "classLoader";

        $r33 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z5 == 0 goto label06;

        goto label13;

     label06:
        $r9 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $z3 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z3 == 0 goto label11;

        $r13 = <org.springframework.beans.CachedIntrospectionResults: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found bean property \'");

        $r14 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        if $r17 == null goto label07;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(" of type [");

        $r28 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>();

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r56 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $r56 = "";

     label08:
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r19 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.Class getPropertyEditorClass()>();

        if $r19 == null goto label09;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("; editor [");

        $r23 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.Class getPropertyEditorClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r57 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r57 = "";

     label10:
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r21);

     label11:
        if z4 == 0 goto label12;

        r55 = specialinvoke r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>(r2, r55);

     label12:
        $r10 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $r11 = virtualinvoke r55.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r55);

     label13:
        i1 = i1 + 1;

     label14:
        if i1 < $i0 goto label05;

     label15:
        goto label17;

     label16:
        $r46 := @caughtexception;

        $r47 = new org.springframework.beans.FatalBeanException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to obtain BeanInfo for class [");

        $r49 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<org.springframework.beans.FatalBeanException: void <init>(java.lang.String,java.lang.Throwable)>($r52, $r46);

        throw $r47;

     label17:
        return;

        catch java.beans.IntrospectionException from label01 to label15 with label16;
    }

    java.beans.BeanInfo getBeanInfo()
    {
        org.springframework.beans.CachedIntrospectionResults r0;
        java.beans.BeanInfo $r1;

        r0 := @this: org.springframework.beans.CachedIntrospectionResults;

        $r1 = r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.BeanInfo beanInfo>;

        return $r1;
    }

    java.lang.Class getBeanClass()
    {
        java.beans.BeanInfo $r1;
        org.springframework.beans.CachedIntrospectionResults r0;
        java.lang.Class $r3;
        java.beans.BeanDescriptor $r2;

        r0 := @this: org.springframework.beans.CachedIntrospectionResults;

        $r1 = r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.BeanInfo beanInfo>;

        $r2 = interfaceinvoke $r1.<java.beans.BeanInfo: java.beans.BeanDescriptor getBeanDescriptor()>();

        $r3 = virtualinvoke $r2.<java.beans.BeanDescriptor: java.lang.Class getBeanClass()>();

        return $r3;
    }

    java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)
    {
        java.util.Map $r2, $r6, $r15;
        java.lang.String r1, $r7, $r8, $r9, $r10, $r12, $r16, $r17, $r18, $r19, $r21;
        boolean $z0, $z1;
        org.springframework.beans.CachedIntrospectionResults r0;
        java.beans.PropertyDescriptor r23, $r24;
        java.lang.Object $r3, $r13, $r22;
        java.lang.Class $r4;
        java.lang.StringBuilder $r5, $r11, $r14, $r20;

        r0 := @this: org.springframework.beans.CachedIntrospectionResults;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r23 = (java.beans.PropertyDescriptor) $r3;

        if r23 != null goto label1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $r6 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $r5 = new java.lang.StringBuilder;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r23 = (java.beans.PropertyDescriptor) $r13;

        if r23 != null goto label1;

        $r15 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $r14 = new java.lang.StringBuilder;

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase()>();

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r17);

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);

        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r20 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r23 = (java.beans.PropertyDescriptor) $r22;

     label1:
        if r23 == null goto label2;

        $z0 = r23 instanceof org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        if $z0 == 0 goto label3;

     label2:
        $r24 = r23;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.springframework.beans.CachedIntrospectionResults: java.lang.Class getBeanClass()>();

        $r24 = specialinvoke r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>($r4, r23);

     label4:
        return $r24;
    }

    java.beans.PropertyDescriptor[] getPropertyDescriptors()
    {
        java.util.Iterator $r5;
        java.beans.PropertyDescriptor[] r2;
        java.util.Collection $r4;
        org.springframework.beans.CachedIntrospectionResults r0;
        java.beans.PropertyDescriptor r7, $r9;
        java.util.Map $r1, $r3;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        java.lang.Class $r8;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.CachedIntrospectionResults;

        $r1 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        r2 = newarray (java.beans.PropertyDescriptor)[$i0];

        i2 = 0;

        $r3 = r0.<org.springframework.beans.CachedIntrospectionResults: java.util.Map propertyDescriptorCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.beans.PropertyDescriptor) $r6;

        $i1 = i2;

        $z0 = r7 instanceof org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        if $z0 == 0 goto label2;

        $r9 = r7;

        goto label3;

     label2:
        $r8 = virtualinvoke r0.<org.springframework.beans.CachedIntrospectionResults: java.lang.Class getBeanClass()>();

        $r9 = specialinvoke r0.<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class,java.beans.PropertyDescriptor)>($r8, r7);

     label3:
        r2[$i1] = $r9;

        i2 = i2 + 1;

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return r2;
    }

    private java.beans.PropertyDescriptor buildGenericTypeAwarePropertyDescriptor(java.lang.Class, java.beans.PropertyDescriptor)
    {
        org.springframework.beans.FatalBeanException $r8;
        org.springframework.beans.CachedIntrospectionResults r14;
        java.beans.IntrospectionException $r7;
        java.beans.PropertyDescriptor r2;
        org.springframework.beans.GenericTypeAwarePropertyDescriptor $r0;
        java.lang.Class r1, $r6;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.String $r3, $r10, $r13;
        java.lang.reflect.Method $r4, $r5;

        r14 := @this: org.springframework.beans.CachedIntrospectionResults;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.beans.PropertyDescriptor;

     label1:
        $r0 = new org.springframework.beans.GenericTypeAwarePropertyDescriptor;

        $r3 = virtualinvoke r2.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r5 = virtualinvoke r2.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r6 = virtualinvoke r2.<java.beans.PropertyDescriptor: java.lang.Class getPropertyEditorClass()>();

        specialinvoke $r0.<org.springframework.beans.GenericTypeAwarePropertyDescriptor: void <init>(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class)>(r1, $r3, $r4, $r5, $r6);

     label2:
        return $r0;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.springframework.beans.FatalBeanException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to re-introspect class [");

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.springframework.beans.FatalBeanException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

        catch java.beans.IntrospectionException from label1 to label2 with label3;
    }
}
