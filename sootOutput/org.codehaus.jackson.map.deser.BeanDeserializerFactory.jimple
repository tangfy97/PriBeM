public class org.codehaus.jackson.map.deser.BeanDeserializerFactory extends org.codehaus.jackson.map.deser.BasicDeserializerFactory
{
    private static final java.lang.Class[] INIT_CAUSE_PARAMS;
    public static final org.codehaus.jackson.map.deser.BeanDeserializerFactory instance;
    protected final org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl $r1;
        org.codehaus.jackson.map.DeserializerFactory$Config r2;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r2 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: void <init>()>();

        if r2 != null goto label1;

        $r1 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        specialinvoke $r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>()>();

        r2 = $r1;

     label1:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig> = r2;

        return;
    }

    public final org.codehaus.jackson.map.DeserializerFactory$Config getConfig()
    {
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        return $r1;
    }

    public org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        java.lang.IllegalStateException $r5;
        java.lang.Class $r3, $r8;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config r1, $r2;
        java.lang.String $r9, $r13;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0, $r4;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "Lorg/codehaus/jackson/map/deser/BeanDeserializerFactory;" goto label2;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype of BeanDeserializerFactory (");

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has not properly overridden method \'withAdditionalDeserializers\': can not instantiate subtype with ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additional deserializer definitions");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label2:
        $r4 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(r1);

        return $r4;
    }

    public org.codehaus.jackson.map.KeyDeserializer createKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r19;
        java.util.HashMap $r6;
        org.codehaus.jackson.map.DeserializationConfig r4;
        java.lang.Iterable $r14;
        org.codehaus.jackson.type.JavaType r2;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r15;
        org.codehaus.jackson.map.BeanProperty r9;
        org.codehaus.jackson.map.KeyDeserializer $r5, $r8, $r10, $r18, r20;
        java.lang.Class $r3, $r11;
        java.lang.Object $r7, $r16;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1, $r13;
        org.codehaus.jackson.map.KeyDeserializers r17;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.BeanDescription $r12;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r4 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r9 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasKeyDeserializers()>();

        if $z0 == 0 goto label3;

        $r11 = virtualinvoke r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r12 = virtualinvoke r4.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>($r11);

        r19 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r12;

        $r13 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable keyDeserializers()>();

        $r15 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.codehaus.jackson.map.KeyDeserializers) $r16;

        $r18 = interfaceinvoke r17.<org.codehaus.jackson.map.KeyDeserializers: org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>(r2, r4, r19, r9);

        if $r18 == null goto label2;

        return $r18;

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r3 == class "Ljava/lang/String;" goto label4;

        if $r3 != class "Ljava/lang/Object;" goto label5;

     label4:
        $r5 = staticinvoke <org.codehaus.jackson.map.deser.std.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer constructStringKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r4, r2);

        return $r5;

     label5:
        $r6 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.util.HashMap _keyDeserializers>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r20 = (org.codehaus.jackson.map.KeyDeserializer) $r7;

        if r20 == null goto label6;

        return r20;

     label6:
        $z1 = virtualinvoke r2.<org.codehaus.jackson.type.JavaType: boolean isEnumType()>();

        if $z1 == 0 goto label7;

        $r10 = specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.KeyDeserializer _createEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r4, r2, r9);

        return $r10;

     label7:
        $r8 = staticinvoke <org.codehaus.jackson.map.deser.std.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r4, r2);

        return $r8;
    }

    private org.codehaus.jackson.map.KeyDeserializer _createEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        boolean $z0, $z1, $z2, $z3;
        java.lang.reflect.Member $r25;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r11;
        org.codehaus.jackson.map.AnnotationIntrospector $r12;
        java.util.List $r7;
        java.lang.reflect.Type $r23;
        org.codehaus.jackson.map.KeyDeserializer $r9, $r24;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r20, $r27, $r28, $r29, $r30;
        org.codehaus.jackson.map.BeanDescription $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r5;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        int $i0;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.String $r18, $r21, $r31;
        org.codehaus.jackson.map.util.EnumResolver $r6;
        java.util.Iterator $r8;
        java.lang.IllegalArgumentException $r13, $r26;
        org.codehaus.jackson.map.BeanProperty r32;
        java.lang.Class $r4, $r22;
        java.lang.Object $r10;

        r5 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        r32 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>(r1);

        r3 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r2;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.util.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig)>($r4, r0);

        $r7 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getFactoryMethods()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r10;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $z1 = virtualinvoke $r12.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r11);

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke r11.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 != 1 goto label4;

        $r22 = virtualinvoke r11.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $z2 = virtualinvoke $r22.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z2 == 0 goto label4;

        $r23 = virtualinvoke r11.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(0);

        if $r23 == class "Ljava/lang/String;" goto label2;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter #0 type for factory method (");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not suitable, must be java.lang.String");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label2:
        $z3 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        if $z3 == 0 goto label3;

        $r25 = virtualinvoke r11.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Member getMember()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r25);

     label3:
        $r24 = staticinvoke <org.codehaus.jackson.map.deser.std.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r6, r11);

        return $r24;

     label4:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsuitable method (");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") decorated with @JsonCreator (for Enum type ");

        $r18 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r13;

     label5:
        goto label1;

     label6:
        $r9 = staticinvoke <org.codehaus.jackson.map.deser.std.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.util.EnumResolver)>($r6);

        return $r9;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r9;
        org.codehaus.jackson.map.TypeDeserializer r10;
        org.codehaus.jackson.map.Deserializers r5;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonDeserializer r11, $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.type.ArrayType r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        r10 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        r11 := @parameter5: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r12 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>(r6, r7, r8, r9, r10, r11);

        if $r12 == null goto label2;

        return $r12;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.type.CollectionType r6;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r9;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.TypeDeserializer r11;
        org.codehaus.jackson.map.Deserializers r5;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonDeserializer r12, $r13;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.type.CollectionType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r13 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>(r6, r7, r8, r9, r10, r11, r12);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.CollectionLikeType r6;
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r9;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.TypeDeserializer r11;
        org.codehaus.jackson.map.Deserializers r5;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonDeserializer r12, $r13;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.type.CollectionLikeType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r13 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionLikeDeserializer(org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>(r6, r7, r8, r9, r10, r11, r12);

        if $r13 == null goto label2;

        return $r13;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r8;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r9;
        org.codehaus.jackson.map.Deserializers r5;
        java.lang.Object $r4;
        java.lang.Class r6;
        org.codehaus.jackson.map.JsonDeserializer $r10;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: java.lang.Class;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r9 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r10 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>(r6, r7, r8, r9);

        if $r10 == null goto label2;

        return $r10;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r9;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.Deserializers r5;
        org.codehaus.jackson.map.JsonDeserializer r13, $r14;
        boolean $z0;
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.TypeDeserializer r12;
        org.codehaus.jackson.map.KeyDeserializer r11;
        org.codehaus.jackson.map.type.MapType r6;
        java.lang.Object $r4;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.type.MapType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        r13 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r14 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>(r6, r7, r8, r9, r10, r11, r12, r13);

        if $r14 == null goto label2;

        return $r14;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r9;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.Deserializers r5;
        org.codehaus.jackson.map.type.MapLikeType r6;
        org.codehaus.jackson.map.JsonDeserializer r13, $r14;
        boolean $z0;
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.TypeDeserializer r12;
        org.codehaus.jackson.map.KeyDeserializer r11;
        java.lang.Object $r4;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.type.MapLikeType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        r11 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        r12 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        r13 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r14 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findMapLikeDeserializer(org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>(r6, r7, r8, r9, r10, r11, r12, r13);

        if $r14 == null goto label2;

        return $r14;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r8;
        org.codehaus.jackson.map.Deserializers r5;
        java.lang.Object $r4;
        java.lang.Class r6;
        org.codehaus.jackson.map.JsonDeserializer $r9;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: java.lang.Class;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r9 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>(r6, r7, r8);

        if $r9 == null goto label2;

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r3;
        org.codehaus.jackson.map.DeserializerProvider r8;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r9;
        org.codehaus.jackson.map.DeserializationConfig r7;
        java.lang.Iterable $r2;
        org.codehaus.jackson.map.BeanProperty r10;
        org.codehaus.jackson.map.Deserializers r5;
        org.codehaus.jackson.type.JavaType r6;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.type.JavaType;

        r7 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        r8 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r9 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.Deserializers) $r4;

        $r11 = interfaceinvoke r5.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>(r6, r7, r8, r9, r10);

        if $r11 == null goto label2;

        return $r11;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.IllegalArgumentException $r5;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.type.JavaType $r2, r13;
        java.lang.Class $r3, $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r13 := @parameter1: org.codehaus.jackson.type.JavaType;

     label1:
        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r1, r13);

        if $r2 != null goto label2;

        return r13;

     label2:
        $r3 = virtualinvoke r13.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r3 == $r4 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid abstract type resolution from ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": latter is not a subtype of former");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label4:
        r13 = $r2;

        goto label1;
    }

    public org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.IllegalStateException $r20, $r29;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r21, $r22, $r23, $r24, $r26, $r27, $r30, $r31, $r32, $r33;
        org.codehaus.jackson.map.DeserializerFactory$Config $r6, $r37;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r5;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.DeserializationConfig r2;
        java.lang.Iterable $r7;
        org.codehaus.jackson.map.JsonMappingException $r11;
        java.lang.String $r15, $r18, $r25, $r28, $r34;
        java.util.Iterator $r8;
        org.codehaus.jackson.map.deser.ValueInstantiator $r10, r35;
        java.lang.Object $r4, $r9;
        java.lang.Class $r14, $r19, r36;
        org.codehaus.jackson.map.deser.ValueInstantiators r38;

        r5 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r1);

        if $r4 == null goto label4;

        $z1 = $r4 instanceof org.codehaus.jackson.map.deser.ValueInstantiator;

        if $z1 == 0 goto label1;

        r35 = (org.codehaus.jackson.map.deser.ValueInstantiator) $r4;

        goto label5;

     label1:
        $z2 = $r4 instanceof java.lang.Class;

        if $z2 != 0 goto label2;

        $r29 = new java.lang.IllegalStateException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value instantiator returned for type ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": neither a Class nor ValueInstantiator");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r29;

     label2:
        r36 = (java.lang.Class) $r4;

        $r19 = class "Lorg/codehaus/jackson/map/deser/ValueInstantiator;";

        $z3 = virtualinvoke $r19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r36);

        if $z3 != 0 goto label3;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instantiator Class<?> returned for type ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke r36.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ValueInstantiator");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r20;

     label3:
        r35 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>($r1, r36);

        goto label5;

     label4:
        r35 = virtualinvoke r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r2, r0);

     label5:
        $r37 = r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z4 = virtualinvoke $r37.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasValueInstantiators()>();

        if $z4 == 0 goto label8;

        $r6 = r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable valueInstantiators()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.codehaus.jackson.map.deser.ValueInstantiators) $r9;

        $r10 = interfaceinvoke r38.<org.codehaus.jackson.map.deser.ValueInstantiators: org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.deser.ValueInstantiator)>(r2, r0, r35);

        r35 = $r10;

        if $r10 != null goto label7;

        $r11 = new org.codehaus.jackson.map.JsonMappingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken registered ValueInstantiators (of type ");

        $r14 = virtualinvoke r38.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): returned null ValueInstantiator");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label7:
        goto label6;

     label8:
        return r35;
    }

    public org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r20, r22, r23;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r3, $r6;
        org.codehaus.jackson.type.JavaType $r7, $r15, r21;
        org.codehaus.jackson.map.JsonDeserializer $r5, $r11, $r12, $r14, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.codehaus.jackson.map.DeserializerProvider r10;
        org.codehaus.jackson.map.BeanProperty r4;
        java.lang.Class $r8, $r9, $r13;
        org.codehaus.jackson.map.BeanDescription $r1, $r16, $r19;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r2;

        r2 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r10 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        r21 := @parameter2: org.codehaus.jackson.type.JavaType;

        r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $z0 = virtualinvoke r21.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label1;

        r21 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r0, r21);

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>(r21);

        $r20 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r1;

        r22 = $r20;

        $r3 = virtualinvoke $r20.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r5 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, $r3, r4);

        if $r5 == null goto label2;

        return $r5;

     label2:
        $r6 = virtualinvoke $r20.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r7 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, $r6, r21, null);

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r9 = virtualinvoke r21.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r8 == $r9 goto label3;

        r21 = $r7;

        $r19 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r7);

        r22 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r19;

     label3:
        $r11 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>(r21, r0, r10, r22, r4);

        if $r11 == null goto label4;

        return $r11;

     label4:
        $z1 = virtualinvoke r21.<org.codehaus.jackson.type.JavaType: boolean isThrowable()>();

        if $z1 == 0 goto label5;

        $r18 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>(r0, r21, r22, r4);

        return $r18;

     label5:
        $z2 = virtualinvoke r21.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z2 == 0 goto label6;

        $r15 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r0, r22);

        if $r15 == null goto label6;

        $r16 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r15);

        r23 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r16;

        $r17 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>(r0, $r15, r23, r4);

        return $r17;

     label6:
        $r12 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findStdBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r0, r10, r21, r4);

        if $r12 == null goto label7;

        return $r12;

     label7:
        $r13 = virtualinvoke r21.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z3 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isPotentialBeanType(java.lang.Class)>($r13);

        if $z3 != 0 goto label8;

        return null;

     label8:
        $r14 = virtualinvoke r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>(r0, r21, r22, r4);

        return $r14;
    }

    protected org.codehaus.jackson.type.JavaType _mapAbstractType2(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r6;
        org.codehaus.jackson.map.DeserializationConfig r9;
        java.lang.Iterable $r5;
        org.codehaus.jackson.map.AbstractTypeResolver r8;
        org.codehaus.jackson.type.JavaType r0, $r10;
        java.lang.Class $r1, $r11;
        java.lang.Object $r7;
        org.codehaus.jackson.map.DeserializerFactory$Config $r3, $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r2;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r9 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r3 = r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasAbstractTypeResolvers()>();

        if $z0 == 0 goto label3;

        $r4 = r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable abstractTypeResolvers()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.codehaus.jackson.map.AbstractTypeResolver) $r7;

        $r10 = virtualinvoke r8.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType findTypeMapping(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r9, r0);

        if $r10 == null goto label2;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r11 == $r1 goto label2;

        return $r10;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.codehaus.jackson.type.JavaType materializeAbstractType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.util.Iterator $r5;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.DeserializationConfig r8;
        java.lang.Iterable $r4;
        org.codehaus.jackson.map.AbstractTypeResolver r7;
        org.codehaus.jackson.type.JavaType $r1, $r9;
        java.lang.Object $r6;
        org.codehaus.jackson.map.DeserializerFactory$Config $r3;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r2;
        boolean $z0;

        r2 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r8 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        $r3 = r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable abstractTypeResolvers()>();

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.codehaus.jackson.map.AbstractTypeResolver) $r6;

        $r9 = virtualinvoke r7.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r8, $r1);

        if $r9 == null goto label2;

        return $r9;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerModifier r13, r20;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r2;
        org.codehaus.jackson.map.DeserializationConfig r1;
        java.lang.Iterable $r10, $r15;
        org.codehaus.jackson.map.deser.AbstractDeserializer $r18;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r5, r19;
        org.codehaus.jackson.type.JavaType r4;
        org.codehaus.jackson.map.JsonDeserializer r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r11, $r16;
        org.codehaus.jackson.map.deser.ValueInstantiator $r3;
        org.codehaus.jackson.map.BeanProperty r7;
        java.lang.Object $r12, $r17;
        org.codehaus.jackson.map.DeserializerFactory$Config $r6, $r8, $r9, $r14;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        r2 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r7 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r1, r2);

        $z0 = virtualinvoke r4.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label1;

        $z5 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canInstantiate()>();

        if $z5 != 0 goto label1;

        $r18 = new org.codehaus.jackson.map.deser.AbstractDeserializer;

        specialinvoke $r18.<org.codehaus.jackson.map.deser.AbstractDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>(r4);

        return $r18;

     label1:
        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r2);

        r19 = $r5;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator)>($r3);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r1, r2, $r5);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r1, r2, $r5);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addInjectables(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r1, r2, $r5);

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z1 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z1 == 0 goto label3;

        $r14 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r16 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r17;

        r19 = virtualinvoke r20.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r1, r2, r19);

        goto label2;

     label3:
        r21 = virtualinvoke r19.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>(r7);

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z2 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z2 == 0 goto label5;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r12;

        r21 = virtualinvoke r13.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>(r1, r2, r21);

        goto label4;

     label5:
        return r21;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerModifier r14, r25;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r21;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r2, r23;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r6;
        org.codehaus.jackson.map.DeserializerFactory$Config $r9, $r10, $r17, $r24;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r1;
        org.codehaus.jackson.map.DeserializationConfig r3;
        java.lang.Iterable $r11, $r18;
        org.codehaus.jackson.type.JavaType r22;
        org.codehaus.jackson.map.JsonDeserializer $r8, r26;
        java.util.Iterator $r12, $r19;
        java.lang.Class[] $r5;
        org.codehaus.jackson.map.deser.ValueInstantiator $r4;
        org.codehaus.jackson.map.BeanProperty r7;
        org.codehaus.jackson.map.deser.BeanDeserializer $r16;
        org.codehaus.jackson.map.deser.std.ThrowableDeserializer $r15;
        java.lang.Object $r13, $r20;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r22 := @parameter1: org.codehaus.jackson.type.JavaType;

        r1 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r7 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r1);

        r23 = $r2;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r3, r1);

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setValueInstantiator(org.codehaus.jackson.map.deser.ValueInstantiator)>($r4);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r3, r1, $r2);

        $r5 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS>;

        $r6 = virtualinvoke r1.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>("initCause", $r5);

        if $r6 == null goto label1;

        $r21 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r3, r1, "cause", $r6);

        if $r21 == null goto label1;

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean)>($r21, 1);

     label1:
        virtualinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("localizedMessage");

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("message");

        virtualinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("suppressed");

        $r24 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z4 = virtualinvoke $r24.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z4 == 0 goto label3;

        $r17 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r19 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r20;

        r23 = virtualinvoke r25.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>(r3, r1, r23);

        goto label2;

     label3:
        $r8 = virtualinvoke r23.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>(r7);

        r26 = $r8;

        $z0 = $r8 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z0 == 0 goto label4;

        $r15 = new org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        $r16 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r8;

        specialinvoke $r15.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>($r16);

        r26 = $r15;

     label4:
        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z1 = virtualinvoke $r9.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z1 == 0 goto label6;

        $r10 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r12 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r13;

        r26 = virtualinvoke r14.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>(r3, r1, r26);

        goto label5;

     label6:
        return r26;
    }

    protected org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r1;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r0;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r2;

        r2 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r0 = new org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription)>(r1);

        return $r0;
    }

    protected org.codehaus.jackson.map.deser.ValueInstantiator constructDefaultValueInstantiator(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r7;
        java.lang.reflect.Constructor $r8;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r11;
        org.codehaus.jackson.type.JavaType $r5;
        boolean $z0, $z1;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.deser.ValueInstantiator $r13;
        org.codehaus.jackson.map.AnnotationIntrospector $r4, $r10;
        org.codehaus.jackson.map.deser.impl.CreatorCollector $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r9, $r12;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r6;

        r6 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        $r2 = new org.codehaus.jackson.map.deser.impl.CreatorCollector;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription,boolean)>(r3, $z0);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r5 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        $z1 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: boolean isConcrete()>();

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor()>();

        if $r7 == null goto label2;

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r8);

     label1:
        virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void setDefaultConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>($r7);

     label2:
        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r11 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r12 = virtualinvoke $r10.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r11, $r9);

        virtualinvoke r6.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector)>(r0, r3, $r12, $r4, $r2);

        virtualinvoke r6.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector)>(r0, r3, $r12, $r4, $r2);

        $r13 = virtualinvoke $r2.<org.codehaus.jackson.map.deser.impl.CreatorCollector: org.codehaus.jackson.map.deser.ValueInstantiator constructValueInstantiator(org.codehaus.jackson.map.DeserializationConfig)>(r0);

        return $r13;
    }

    protected void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.impl.CreatorCollector) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.impl.CreatorProperty $r26, $r27;
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] $r28;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.AnnotationIntrospector r5;
        java.util.List $r1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r24;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r4;
        org.codehaus.jackson.map.DeserializationConfig r25;
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7;
        java.lang.String $r14, $r19, r22, $r30;
        java.util.Iterator $r2;
        java.lang.IllegalArgumentException $r7, $r15;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r21, r29;
        org.codehaus.jackson.map.deser.impl.CreatorCollector r20;
        org.codehaus.jackson.map.introspect.VisibilityChecker r6;
        java.lang.Object $r3, $r23;

        r24 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r25 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r6 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r5 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        r20 := @parameter4: org.codehaus.jackson.map.deser.impl.CreatorCollector;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getConstructors()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.codehaus.jackson.map.introspect.AnnotatedConstructor) $r3;

        $i0 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()>();

        if $i0 >= 1 goto label02;

        goto label01;

     label02:
        $z0 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r4);

        $z1 = interfaceinvoke r6.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r4);

        if $i0 != 1 goto label03;

        virtualinvoke r24.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean _handleSingleArgumentConstructor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean,boolean)>(r25, r0, r6, r5, r20, r4, $z0, $z1);

        goto label01;

     label03:
        if $z0 != 0 goto label04;

        if $z1 != 0 goto label04;

        goto label01;

     label04:
        r29 = null;

        i4 = 0;

        i5 = 0;

        $r28 = newarray (org.codehaus.jackson.map.deser.impl.CreatorProperty)[$i0];

        i6 = 0;

     label05:
        if i6 >= $i0 goto label11;

        $r21 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(i6);

        if $r21 != null goto label06;

        $r30 = null;

        goto label07;

     label06:
        $r30 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r21);

     label07:
        r22 = $r30;

        $r23 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r21);

        if $r30 == null goto label08;

        $i3 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i3 <= 0 goto label08;

        i4 = i4 + 1;

        $r27 = virtualinvoke r24.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object)>(r25, r0, $r30, i6, $r21, $r23);

        $r28[i6] = $r27;

        goto label10;

     label08:
        if $r23 == null goto label09;

        i5 = i5 + 1;

        $r26 = virtualinvoke r24.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object)>(r25, r0, r22, i6, $r21, $r23);

        $r28[i6] = $r26;

        goto label10;

     label09:
        if r29 != null goto label10;

        r29 = $r21;

     label10:
        i6 = i6 + 1;

        goto label05;

     label11:
        if $z0 != 0 goto label12;

        if i4 > 0 goto label12;

        if i5 <= 0 goto label15;

     label12:
        $i7 = i4 + i5;

        if $i7 != $i0 goto label13;

        virtualinvoke r20.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[])>(r4, $r28);

        goto label15;

     label13:
        if i4 != 0 goto label14;

        $i2 = i5 + 1;

        if $i2 != $i0 goto label14;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delegated constructor with Injectables not yet supported (see [JACKSON-712]) for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label14:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        $i1 = virtualinvoke r29.<org.codehaus.jackson.map.introspect.AnnotatedParameter: int getIndex()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of constructor ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label15:
        if 0 == 0 goto label16;

        virtualinvoke r20.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[])>(r4, $r28);

     label16:
        goto label01;

     label17:
        return;
    }

    protected boolean _handleSingleArgumentConstructor(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.impl.CreatorCollector, org.codehaus.jackson.map.introspect.AnnotatedConstructor, boolean, boolean) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r7;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r0;
        org.codehaus.jackson.map.DeserializationConfig r6;
        org.codehaus.jackson.map.deser.impl.CreatorProperty $r8;
        int $i0;
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] $r14;
        java.lang.String $r3;
        boolean z0, z1;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r1;
        org.codehaus.jackson.map.AnnotationIntrospector r2;
        org.codehaus.jackson.map.deser.impl.CreatorCollector r9;
        org.codehaus.jackson.map.introspect.VisibilityChecker r15;
        java.lang.Object $r4;
        java.lang.Class $r10, $r11, $r12, $r13;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r5;

        r5 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r6 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r7 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r15 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r2 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        r9 := @parameter4: org.codehaus.jackson.map.deser.impl.CreatorCollector;

        r0 := @parameter5: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        z0 := @parameter6: boolean;

        z1 := @parameter7: boolean;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1);

        $r4 = virtualinvoke r2.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r1);

        if $r4 != null goto label01;

        if $r3 == null goto label02;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

     label01:
        $r14 = newarray (org.codehaus.jackson.map.deser.impl.CreatorProperty)[1];

        $r8 = virtualinvoke r5.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object)>(r6, r7, $r3, 0, $r1, $r4);

        $r14[0] = $r8;

        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[])>(r0, $r14);

        return 1;

     label02:
        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getParameterClass(int)>(0);

        if $r10 != class "Ljava/lang/String;" goto label05;

        if z0 != 0 goto label03;

        if z1 == 0 goto label04;

     label03:
        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label04:
        return 1;

     label05:
        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r10 == $r11 goto label06;

        if $r10 != class "Ljava/lang/Integer;" goto label09;

     label06:
        if z0 != 0 goto label07;

        if z1 == 0 goto label08;

     label07:
        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label08:
        return 1;

     label09:
        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        if $r10 == $r12 goto label10;

        if $r10 != class "Ljava/lang/Long;" goto label13;

     label10:
        if z0 != 0 goto label11;

        if z1 == 0 goto label12;

     label11:
        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label12:
        return 1;

     label13:
        $r13 = <java.lang.Double: java.lang.Class TYPE>;

        if $r10 == $r13 goto label14;

        if $r10 != class "Ljava/lang/Double;" goto label17;

     label14:
        if z0 != 0 goto label15;

        if z1 == 0 goto label16;

     label15:
        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label16:
        return 1;

     label17:
        if z0 == 0 goto label18;

        virtualinvoke r9.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

        return 1;

     label18:
        return 0;
    }

    protected void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.impl.CreatorCollector) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.impl.CreatorProperty $r12;
        org.codehaus.jackson.map.deser.impl.CreatorProperty[] $r24;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r4;
        org.codehaus.jackson.map.AnnotationIntrospector r5;
        java.util.List $r1;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r10;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.DeserializationConfig r11;
        int $i0, $i1, $i2, i3;
        java.lang.String $r8, $r20, $r22;
        java.util.Iterator $r2;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r7, $r21;
        java.lang.IllegalArgumentException $r13;
        org.codehaus.jackson.map.deser.impl.CreatorCollector r6;
        org.codehaus.jackson.map.introspect.VisibilityChecker r25;
        java.lang.Object $r3, $r9, $r23;

        r10 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r11 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r25 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r5 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        r6 := @parameter4: org.codehaus.jackson.map.deser.impl.CreatorCollector;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getFactoryMethods()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r3;

        $i0 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 >= 1 goto label02;

        goto label01;

     label02:
        $z0 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r4);

        if $i0 != 1 goto label05;

        $r21 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r22 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r21);

        $r23 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r21);

        if $r23 != null goto label04;

        if $r22 == null goto label03;

        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i2 != 0 goto label04;

     label03:
        virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean _handleSingleArgumentFactory(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean)>(r11, r0, r25, r5, r6, r4, $z0);

        goto label01;

     label04:
        goto label06;

     label05:
        $z1 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r4);

        if $z1 != 0 goto label06;

        goto label01;

     label06:
        $r24 = newarray (org.codehaus.jackson.map.deser.impl.CreatorProperty)[$i0];

        i3 = 0;

     label07:
        if i3 >= $i0 goto label10;

        $r7 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(i3);

        $r8 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r7);

        $r9 = virtualinvoke r5.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r7);

        if $r8 == null goto label08;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label09;

     label08:
        if $r9 != null goto label09;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of factory method ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have when multiple-paramater static method annotated as Creator");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r13;

     label09:
        $r12 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter,java.lang.Object)>(r11, r0, $r8, i3, $r7, $r9);

        $r24[i3] = $r12;

        i3 = i3 + 1;

        goto label07;

     label10:
        virtualinvoke r6.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addPropertyCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams,org.codehaus.jackson.map.deser.impl.CreatorProperty[])>(r4, $r24);

        goto label01;

     label11:
        return;
    }

    protected boolean _handleSingleArgumentFactory(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.impl.CreatorCollector, org.codehaus.jackson.map.introspect.AnnotatedMethod, boolean) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r11;
        org.codehaus.jackson.map.DeserializationConfig r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r0;
        org.codehaus.jackson.map.AnnotationIntrospector r8;
        org.codehaus.jackson.map.deser.impl.CreatorCollector r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker r4;
        java.lang.Class $r1, $r2, $r5, $r6, $r7;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r9;

        r9 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r10 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r11 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r4 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r8 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        r3 := @parameter4: org.codehaus.jackson.map.deser.impl.CreatorCollector;

        r0 := @parameter5: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        z0 := @parameter6: boolean;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        if $r1 != class "Ljava/lang/String;" goto label03;

        if z0 != 0 goto label01;

        $z6 = interfaceinvoke r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r0);

        if $z6 == 0 goto label02;

     label01:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addStringCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label02:
        return 1;

     label03:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r1 == $r2 goto label04;

        if $r1 != class "Ljava/lang/Integer;" goto label07;

     label04:
        if z0 != 0 goto label05;

        $z1 = interfaceinvoke r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r0);

        if $z1 == 0 goto label06;

     label05:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addIntCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label06:
        return 1;

     label07:
        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        if $r1 == $r5 goto label08;

        if $r1 != class "Ljava/lang/Long;" goto label11;

     label08:
        if z0 != 0 goto label09;

        $z2 = interfaceinvoke r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r0);

        if $z2 == 0 goto label10;

     label09:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addLongCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label10:
        return 1;

     label11:
        $r6 = <java.lang.Double: java.lang.Class TYPE>;

        if $r1 == $r6 goto label12;

        if $r1 != class "Ljava/lang/Double;" goto label15;

     label12:
        if z0 != 0 goto label13;

        $z3 = interfaceinvoke r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r0);

        if $z3 == 0 goto label14;

     label13:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addDoubleCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label14:
        return 1;

     label15:
        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r1 == $r7 goto label16;

        if $r1 != class "Ljava/lang/Boolean;" goto label19;

     label16:
        if z0 != 0 goto label17;

        $z4 = interfaceinvoke r4.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r0);

        if $z4 == 0 goto label18;

     label17:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addBooleanCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

     label18:
        return 1;

     label19:
        $z5 = virtualinvoke r8.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r0);

        if $z5 == 0 goto label20;

        virtualinvoke r3.<org.codehaus.jackson.map.deser.impl.CreatorCollector: void addDelegatingCreator(org.codehaus.jackson.map.introspect.AnnotatedWithParams)>(r0);

        return 1;

     label20:
        return 0;
    }

    protected org.codehaus.jackson.map.deser.impl.CreatorProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, int, org.codehaus.jackson.map.introspect.AnnotatedParameter, java.lang.Object) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r4;
        org.codehaus.jackson.map.type.TypeBindings $r5;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.util.Annotations $r9, $r16;
        org.codehaus.jackson.map.deser.impl.CreatorProperty $r15, r21;
        int i0;
        org.codehaus.jackson.type.JavaType $r6, $r11, $r13;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String r8;
        org.codehaus.jackson.map.introspect.AnnotatedParameter r2;
        org.codehaus.jackson.map.TypeDeserializer $r18, r20;
        java.lang.reflect.Type $r3;
        java.lang.Object $r14, r17;
        org.codehaus.jackson.map.BeanProperty$Std $r7, r19;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r10;

        r10 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r4 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r8 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: org.codehaus.jackson.map.introspect.AnnotatedParameter;

        r17 := @parameter5: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.type.TypeFactory getTypeFactory()>();

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.reflect.Type getParameterType()>();

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>($r3, $r5);

        $r7 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r9 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(r8, $r6, $r9, r2);

        r19 = $r7;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>(r0, r4, $r6, r2, $r7);

        if $r11 == $r6 goto label1;

        r19 = virtualinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r11);

     label1:
        $r12 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, r2, r19);

        $r13 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, r2, $r11, r8);

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r18 = (org.codehaus.jackson.map.TypeDeserializer) $r14;

        r20 = $r18;

        if $r18 != null goto label2;

        r20 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r0, $r13, r19);

     label2:
        $r15 = new org.codehaus.jackson.map.deser.impl.CreatorProperty;

        $r16 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r15.<org.codehaus.jackson.map.deser.impl.CreatorProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedParameter,int,java.lang.Object)>(r8, $r13, r20, $r16, r2, i0, r17);

        r21 = $r15;

        if $r12 == null goto label3;

        r21 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.impl.CreatorProperty: org.codehaus.jackson.map.deser.impl.CreatorProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

     label3:
        return r21;
    }

    protected void addBeanProps(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r22, $r29, $r32;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r24;
        org.codehaus.jackson.map.BeanPropertyDefinition r39, r40;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder r17;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r10, $r18, $r30;
        java.util.Set $r37;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;
        java.util.List $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r21;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        java.lang.String[] $r7;
        java.util.HashMap $r11;
        org.codehaus.jackson.map.DeserializationConfig r2;
        java.util.HashSet $r8;
        java.lang.Boolean $r5;
        java.lang.String $r16, $r26, r36, r38;
        java.util.Iterator $r9, $r12, $r14, $r33;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r13;
        java.lang.Object $r15, $r25, $r34, $r35;
        java.lang.Class $r19, $r20, $r23, $r28, $r31;
        org.codehaus.jackson.map.introspect.AnnotatedField $r27;

        r21 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r17 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List findProperties()>();

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r4);

        if $r5 == null goto label01;

        $z15 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setIgnoreUnknownProperties(boolean)>($z15);

     label01:
        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r7 = virtualinvoke $r3.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r6);

        $r8 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r7);

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z16 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label03;

        $r35 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.lang.String) $r35;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r36);

        goto label02;

     label03:
        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter()>();

        if $r10 != null goto label04;

        $r37 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Set getIgnoredPropertyNames()>();

        goto label05;

     label04:
        $r37 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Set getIgnoredPropertyNamesForDeser()>();

     label05:
        if $r37 == null goto label07;

        $r33 = interfaceinvoke $r37.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z14 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label07;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.String) $r34;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r38);

        goto label06;

     label07:
        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z17 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label15;

        $r25 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r39 = (org.codehaus.jackson.map.BeanPropertyDefinition) $r25;

        $r26 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: java.lang.String getName()>();

        $z8 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r26);

        if $z8 == 0 goto label09;

        goto label08;

     label09:
        $z9 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: boolean hasConstructorParameter()>();

        if $z9 == 0 goto label10;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addCreatorProperty(org.codehaus.jackson.map.BeanPropertyDefinition)>(r39);

        goto label08;

     label10:
        $z10 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: boolean hasSetter()>();

        if $z10 == 0 goto label12;

        $r30 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: org.codehaus.jackson.map.introspect.AnnotatedMethod getSetter()>();

        $r31 = virtualinvoke $r30.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        $z13 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>(r2, r0, $r31, $r11);

        if $z13 == 0 goto label11;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r26);

        goto label08;

     label11:
        $r32 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r2, r0, $r26, $r30);

        if $r32 == null goto label08;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r32);

        goto label08;

     label12:
        $z11 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: boolean hasField()>();

        if $z11 == 0 goto label14;

        $r27 = virtualinvoke r39.<org.codehaus.jackson.map.BeanPropertyDefinition: org.codehaus.jackson.map.introspect.AnnotatedField getField()>();

        $r28 = virtualinvoke $r27.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getRawType()>();

        $z12 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>(r2, r0, $r28, $r11);

        if $z12 == 0 goto label13;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>($r26);

        goto label08;

     label13:
        $r29 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>(r2, r0, $r26, $r27);

        if $r29 == null goto label14;

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r29);

     label14:
        goto label08;

     label15:
        if $r10 == null goto label16;

        $r24 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r2, r0, $r10);

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty)>($r24);

     label16:
        $r13 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS>;

        $z0 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r13);

        if $z0 == 0 goto label21;

        $r14 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z18 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label21;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.codehaus.jackson.map.BeanPropertyDefinition) $r15;

        $z1 = virtualinvoke r40.<org.codehaus.jackson.map.BeanPropertyDefinition: boolean hasGetter()>();

        if $z1 == 0 goto label20;

        $r16 = virtualinvoke r40.<org.codehaus.jackson.map.BeanPropertyDefinition: java.lang.String getName()>();

        $z2 = virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>($r16);

        if $z2 != 0 goto label17;

        $z3 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r16);

        if $z3 == 0 goto label18;

        goto label17;

     label18:
        $r18 = virtualinvoke r40.<org.codehaus.jackson.map.BeanPropertyDefinition: org.codehaus.jackson.map.introspect.AnnotatedMethod getGetter()>();

        $r19 = virtualinvoke $r18.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $r20 = class "Ljava/util/Collection;";

        $z4 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r19);

        if $z4 != 0 goto label19;

        $r23 = class "Ljava/util/Map;";

        $z7 = virtualinvoke $r23.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r19);

        if $z7 == 0 goto label20;

     label19:
        $z5 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r16);

        if $z5 != 0 goto label20;

        $z6 = virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>($r16);

        if $z6 != 0 goto label20;

        $r22 = virtualinvoke r21.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r2, r0, $r16, $r18);

        virtualinvoke r17.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r22);

     label20:
        goto label17;

     label21:
        return;
    }

    protected void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r15, $r18;
        org.codehaus.jackson.map.DeserializationConfig r12;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder r10;
        org.codehaus.jackson.map.introspect.AnnotatedMember r9;
        java.util.Map $r1;
        java.lang.String r7, $r13, $r16;
        boolean $z0, $z1;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r17;
        java.util.Set $r2;
        java.lang.Object $r4, $r6, $r8;
        org.codehaus.jackson.map.introspect.AnnotatedField $r14;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r11;

        r11 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r12 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Map findBackReferenceProperties()>();

        if $r1 == null goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r8;

        $z1 = r9 instanceof org.codehaus.jackson.map.introspect.AnnotatedMethod;

        if $z1 == 0 goto label2;

        $r16 = virtualinvoke r9.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.String getName()>();

        $r17 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) r9;

        $r18 = virtualinvoke r11.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r12, r0, $r16, $r17);

        virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r7, $r18);

        goto label3;

     label2:
        $r13 = virtualinvoke r9.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.String getName()>();

        $r14 = (org.codehaus.jackson.map.introspect.AnnotatedField) r9;

        $r15 = virtualinvoke r11.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>(r12, r0, $r13, $r14);

        virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r7, $r15);

     label3:
        goto label1;

     label4:
        return;
    }

    protected void addInjectables(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r0;
        org.codehaus.jackson.map.DeserializationConfig r2;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder r10;
        org.codehaus.jackson.map.introspect.AnnotatedMember r9;
        org.codehaus.jackson.map.util.Annotations $r14;
        java.util.Map $r1;
        org.codehaus.jackson.type.JavaType $r13;
        java.lang.String $r11;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r3;
        java.util.Set $r4;
        java.lang.reflect.Type $r12;
        java.lang.Object $r6, $r8, $r15;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r16;

        r16 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r2 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r10 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Map findInjectables()>();

        if $r1 == null goto label3;

        $r3 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r3);

        $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r8;

        if $z0 == 0 goto label2;

        virtualinvoke r9.<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>();

     label2:
        $r11 = virtualinvoke r9.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.String getName()>();

        $r12 = virtualinvoke r9.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.reflect.Type getGenericType()>();

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r12);

        $r14 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addInjectable(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.Object)>($r11, $r13, $r14, r9, $r15);

        goto label1;

     label3:
        return;
    }

    protected org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r2;
        org.codehaus.jackson.map.type.TypeBindings $r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r15, $r16;
        org.codehaus.jackson.map.util.Annotations $r9;
        org.codehaus.jackson.type.JavaType $r6, $r11, $r14;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String $r8, $r13;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r4;
        java.lang.reflect.Type $r5;
        org.codehaus.jackson.map.BeanProperty$Std $r7;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r10;

        r10 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r4 := @parameter2: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(1);

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r5);

        $r7 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r8 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r9 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r8, $r6, $r9, r4);

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>(r0, r2, $r6, r4, $r7);

        $r12 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, r4, $r7);

        if $r12 == null goto label2;

        $r16 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke $r16.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>($r7, r4, $r11, $r12);

        return $r16;

     label2:
        $r13 = virtualinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: java.lang.String getName()>();

        $r14 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, r4, $r11, $r13);

        $r15 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke $r15.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer)>($r7, r4, $r14, null);

        return $r15;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty r22;
        org.codehaus.jackson.map.type.TypeBindings $r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r18;
        org.codehaus.jackson.map.util.Annotations $r9, $r16;
        org.codehaus.jackson.type.JavaType $r6, $r11, $r13;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String r8, $r19;
        boolean $z0, $z1;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r4;
        org.codehaus.jackson.map.AnnotationIntrospector $r17;
        org.codehaus.jackson.map.TypeDeserializer $r20;
        java.lang.reflect.Type $r5;
        org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty $r15;
        java.lang.Object $r14;
        org.codehaus.jackson.map.BeanProperty$Std $r7, r21;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r10;

        r10 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r8 := @parameter2: java.lang.String;

        r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(0);

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r5);

        $r7 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r9 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(r8, $r6, $r9, r4);

        r21 = $r7;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>(r0, r2, $r6, r4, $r7);

        if $r11 == $r6 goto label2;

        r21 = virtualinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r11);

     label2:
        $r12 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, r4, r21);

        $r13 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, r4, $r11, r8);

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r20 = (org.codehaus.jackson.map.TypeDeserializer) $r14;

        $r15 = new org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty;

        $r16 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r8, $r13, $r20, $r16, r4);

        r22 = $r15;

        if $r12 == null goto label3;

        r22 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

     label3:
        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r4);

        if $r18 == null goto label4;

        $z1 = virtualinvoke $r18.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z1 == 0 goto label4;

        $r19 = virtualinvoke $r18.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke r22.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r19);

     label4:
        return r22;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedField) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r2;
        org.codehaus.jackson.map.deser.SettableBeanProperty r22;
        org.codehaus.jackson.map.type.TypeBindings $r3;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r18;
        org.codehaus.jackson.map.util.Annotations $r9, $r16;
        org.codehaus.jackson.type.JavaType $r6, $r11, $r13;
        org.codehaus.jackson.map.JsonDeserializer $r12;
        java.lang.String r8, $r19;
        boolean $z0, $z1;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty $r15;
        org.codehaus.jackson.map.AnnotationIntrospector $r17;
        org.codehaus.jackson.map.TypeDeserializer $r20;
        java.lang.reflect.Type $r5;
        org.codehaus.jackson.map.introspect.AnnotatedField r4;
        java.lang.Object $r14;
        org.codehaus.jackson.map.BeanProperty$Std $r7, r21;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r10;

        r10 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r8 := @parameter2: java.lang.String;

        r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedField: void fixAccess()>();

     label1:
        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r5 = virtualinvoke r4.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Type getGenericType()>();

        $r6 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)>($r5);

        $r7 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r9 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(r8, $r6, $r9, r4);

        r21 = $r7;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>(r0, r2, $r6, r4, $r7);

        if $r11 == $r6 goto label2;

        r21 = virtualinvoke $r7.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r11);

     label2:
        $r12 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, r4, r21);

        $r13 = virtualinvoke r10.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, r4, $r11, r8);

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r20 = (org.codehaus.jackson.map.TypeDeserializer) $r14;

        $r15 = new org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty;

        $r16 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedField)>(r8, $r13, $r20, $r16, r4);

        r22 = $r15;

        if $r12 == null goto label3;

        r22 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

     label3:
        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r18 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r4);

        if $r18 == null goto label4;

        $z1 = virtualinvoke $r18.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z1 == 0 goto label4;

        $r19 = virtualinvoke $r18.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke r22.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r19);

     label4:
        return r22;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty $r13;
        org.codehaus.jackson.map.type.TypeBindings $r4;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.util.Annotations $r8, $r14;
        org.codehaus.jackson.type.JavaType $r5, $r11;
        org.codehaus.jackson.map.JsonDeserializer $r10;
        java.lang.String r7;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r2;
        org.codehaus.jackson.map.TypeDeserializer $r15;
        java.lang.Object $r12;
        org.codehaus.jackson.map.BeanProperty$Std $r6;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r9;

        r9 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r7 := @parameter2: java.lang.String;

        r2 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r5 = virtualinvoke r2.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>($r4);

        $r6 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r8 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r6.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>(r7, $r5, $r8, r2);

        $r10 = virtualinvoke r9.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>(r0, r2, $r6);

        $r11 = virtualinvoke r9.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>(r0, r2, $r5, r7);

        $r12 = virtualinvoke $r11.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        $r15 = (org.codehaus.jackson.map.TypeDeserializer) $r12;

        $r13 = new org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty;

        $r14 = virtualinvoke r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r7, $r11, $r15, $r14, r2);

        r16 = $r13;

        if $r10 == null goto label2;

        r16 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r10);

     label2:
        return r16;
    }

    protected boolean isPotentialBeanType(java.lang.Class)
    {
        java.lang.String $r1, $r2, $r6, $r11, $r15, $r18, $r22, $r27;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r12, $r19;
        java.lang.Class r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24, $r25, $r26;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r28;

        r28 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>(r0);

        if $r1 == null goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r22 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r19;

     label1:
        $z0 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: boolean isProxyType(java.lang.Class)>(r0);

        if $z0 == 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Proxy class ");

        $r15 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a Bean");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label2:
        $r2 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String isLocalType(java.lang.Class,boolean)>(r0, 1);

        if $r2 == null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label3:
        return 1;
    }

    protected boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.Class, java.util.Map)
    {
        org.codehaus.jackson.map.introspect.BasicBeanDescription r5, r10;
        org.codehaus.jackson.map.DeserializationConfig r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r6;
        java.util.Map r0;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r7;
        java.lang.Boolean $r8, r11;
        java.lang.Class r1;
        java.lang.Object $r2;
        org.codehaus.jackson.map.BeanDescription $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r9;
        boolean $z0;

        r9 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r3 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r10 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r1 := @parameter2: java.lang.Class;

        r0 := @parameter3: java.util.Map;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (java.lang.Boolean) $r2;

        if r11 != null goto label1;

        $r4 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>(r1);

        r5 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r4;

        $r6 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r7 = virtualinvoke r5.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke $r6.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r7);

        r11 = $r8;

        if $r8 != null goto label1;

        r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label1:
        $z0 = virtualinvoke r11.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    static org.codehaus.jackson.map.Deserializers[] access$000()
    {
        org.codehaus.jackson.map.Deserializers[] $r0;

        $r0 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory $r1;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/lang/Throwable;";

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS> = $r0;

        $r1 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke $r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerFactory instance> = $r1;

        return;
    }
}
