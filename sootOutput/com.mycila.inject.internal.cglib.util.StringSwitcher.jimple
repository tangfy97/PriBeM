public abstract class com.mycila.inject.internal.cglib.util.StringSwitcher extends java.lang.Object
{
    private static final com.mycila.inject.internal.asm.Type STRING_SWITCHER;
    private static final com.mycila.inject.internal.cglib.core.Signature INT_VALUE;
    private static final com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey KEY_FACTORY;
    static java.lang.Class class$net$sf$cglib$util$StringSwitcher$StringSwitcherKey;
    static java.lang.Class class$net$sf$cglib$util$StringSwitcher;

    public static com.mycila.inject.internal.cglib.util.StringSwitcher create(java.lang.String[], int[], boolean)
    {
        int[] r2;
        com.mycila.inject.internal.cglib.util.StringSwitcher $r3;
        com.mycila.inject.internal.cglib.util.StringSwitcher$Generator $r0;
        java.lang.String[] r1;
        boolean z0;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: int[];

        z0 := @parameter2: boolean;

        $r0 = new com.mycila.inject.internal.cglib.util.StringSwitcher$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: void setStrings(java.lang.String[])>(r1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: void setInts(int[])>(r2);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: void setFixedInput(boolean)>(z0);

        $r3 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.util.StringSwitcher$Generator: com.mycila.inject.internal.cglib.util.StringSwitcher create()>();

        return $r3;
    }

    protected void <init>()
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher r0;

        r0 := @this: com.mycila.inject.internal.cglib.util.StringSwitcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int intValue(java.lang.String);

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey access$000()
    {
        com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey $r0;

        $r0 = <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey KEY_FACTORY>;

        return $r0;
    }

    static com.mycila.inject.internal.asm.Type access$100()
    {
        com.mycila.inject.internal.asm.Type $r0;

        $r0 = <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.asm.Type STRING_SWITCHER>;

        return $r0;
    }

    static com.mycila.inject.internal.cglib.core.Signature access$200()
    {
        com.mycila.inject.internal.cglib.core.Signature $r0;

        $r0 = <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.core.Signature INT_VALUE>;

        return $r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r3;
        com.mycila.inject.internal.cglib.core.Signature $r1;
        com.mycila.inject.internal.asm.Type $r0;
        java.lang.Class $r2, $r5;
        com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey $r4;

        $r0 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.asm.Type parseType(java.lang.String)>("com.mycila.inject.internal.cglib.util.StringSwitcher");

        <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.asm.Type STRING_SWITCHER> = $r0;

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: com.mycila.inject.internal.cglib.core.Signature parseSignature(java.lang.String)>("int intValue(String)");

        <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.core.Signature INT_VALUE> = $r1;

        $r2 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher$StringSwitcherKey>;

        if $r2 != null goto label1;

        $r5 = staticinvoke <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey");

        <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher$StringSwitcherKey> = $r5;

        goto label2;

     label1:
        $r5 = <com.mycila.inject.internal.cglib.util.StringSwitcher: java.lang.Class class$net$sf$cglib$util$StringSwitcher$StringSwitcherKey>;

     label2:
        $r3 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class)>($r5);

        $r4 = (com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey) $r3;

        <com.mycila.inject.internal.cglib.util.StringSwitcher: com.mycila.inject.internal.cglib.util.StringSwitcher$StringSwitcherKey KEY_FACTORY> = $r4;

        return;
    }
}
