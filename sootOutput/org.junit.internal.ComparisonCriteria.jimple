public abstract class org.junit.internal.ComparisonCriteria extends java.lang.Object
{

    public void <init>()
    {
        org.junit.internal.ComparisonCriteria r0;

        r0 := @this: org.junit.internal.ComparisonCriteria;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void arrayEquals(java.lang.String, java.lang.Object, java.lang.Object) throws org.junit.internal.ArrayComparisonFailure
    {
        java.lang.AssertionError $r10;
        org.junit.internal.ComparisonCriteria r7;
        int $i0, i1;
        java.lang.String r2, r6, $r13;
        boolean $z0, $z1;
        org.junit.internal.ArrayComparisonFailure $r11, $r12;
        java.lang.Object r0, r1, $r8, $r9;
        java.lang.StringBuilder $r3, $r4, $r5;

        r7 := @this: org.junit.internal.ComparisonCriteria;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        if r0 != r1 goto label01;

        return;

     label01:
        if r2 != null goto label02;

        $r13 = "";

        goto label03;

     label02:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        r6 = $r13;

        $i0 = specialinvoke r7.<org.junit.internal.ComparisonCriteria: int assertArraysAreSameLength(java.lang.Object,java.lang.Object,java.lang.String)>(r0, r1, $r13);

        i1 = 0;

     label04:
        if i1 >= $i0 goto label12;

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r1, i1);

        $z0 = specialinvoke r7.<org.junit.internal.ComparisonCriteria: boolean isArray(java.lang.Object)>($r8);

        if $z0 == 0 goto label08;

        $z1 = specialinvoke r7.<org.junit.internal.ComparisonCriteria: boolean isArray(java.lang.Object)>($r9);

        if $z1 == 0 goto label08;

     label05:
        virtualinvoke r7.<org.junit.internal.ComparisonCriteria: void arrayEquals(java.lang.String,java.lang.Object,java.lang.Object)>(r2, $r8, $r9);

     label06:
        goto label11;

     label07:
        $r12 := @caughtexception;

        virtualinvoke $r12.<org.junit.internal.ArrayComparisonFailure: void addDimension(int)>(i1);

        throw $r12;

     label08:
        virtualinvoke r7.<org.junit.internal.ComparisonCriteria: void assertElementsEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r11 = new org.junit.internal.ArrayComparisonFailure;

        specialinvoke $r11.<org.junit.internal.ArrayComparisonFailure: void <init>(java.lang.String,java.lang.AssertionError,int)>(r6, $r10, i1);

        throw $r11;

     label11:
        i1 = i1 + 1;

        goto label04;

     label12:
        return;

        catch org.junit.internal.ArrayComparisonFailure from label05 to label06 with label07;
        catch java.lang.AssertionError from label08 to label09 with label10;
    }

    private boolean isArray(java.lang.Object)
    {
        org.junit.internal.ComparisonCriteria r2;
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0, $z1;

        r2 := @this: org.junit.internal.ComparisonCriteria;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private int assertArraysAreSameLength(java.lang.Object, java.lang.Object, java.lang.String)
    {
        org.junit.internal.ComparisonCriteria r18;
        int $i0, $i1;
        java.lang.String r3, $r9, $r13, $r17;
        java.lang.Object r0, r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16;

        r18 := @this: org.junit.internal.ComparisonCriteria;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected array was null");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r17);

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("actual array was null");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r13);

     label2:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r1);

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        if $i0 == $i1 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("array lengths differed, expected.length=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual.length=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r9);

     label3:
        return $i1;
    }

    protected abstract void assertElementsEqual(java.lang.Object, java.lang.Object);
}
