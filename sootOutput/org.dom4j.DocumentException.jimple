public class org.dom4j.DocumentException extends java.lang.Exception
{
    private java.lang.Throwable nestedException;

    public void <init>()
    {
        org.dom4j.DocumentException r0;

        r0 := @this: org.dom4j.DocumentException;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>("Error occurred in DOM4J application.");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.dom4j.DocumentException r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.DocumentException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.dom4j.DocumentException r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.DocumentException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException> = r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.dom4j.DocumentException r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.DocumentException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException> = r2;

        return;
    }

    public java.lang.Throwable getNestedException()
    {
        java.lang.Throwable $r1;
        org.dom4j.DocumentException r0;

        r0 := @this: org.dom4j.DocumentException;

        $r1 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        return $r1;
    }

    public java.lang.String getMessage()
    {
        java.lang.Throwable $r1, $r7;
        org.dom4j.DocumentException r0;
        java.lang.StringBuffer $r3, $r5, $r6, $r9;
        java.lang.String $r2, $r4, $r8, $r10;

        r0 := @this: org.dom4j.DocumentException;

        $r1 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        if $r1 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Nested exception: ");

        $r7 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label1:
        $r2 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        return $r2;
    }

    public void printStackTrace()
    {
        java.lang.Throwable $r1, $r3;
        java.io.PrintStream $r2;
        org.dom4j.DocumentException r0;

        r0 := @this: org.dom4j.DocumentException;

        specialinvoke r0.<java.lang.Exception: void printStackTrace()>();

        $r1 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        if $r1 == null goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>("Nested exception: ");

        $r3 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label1:
        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r1;
        java.lang.Throwable $r2, $r3;
        org.dom4j.DocumentException r0;

        r0 := @this: org.dom4j.DocumentException;

        r1 := @parameter0: java.io.PrintStream;

        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>(r1);

        $r2 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("Nested exception: ");

        $r3 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(r1);

     label1:
        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        java.lang.Throwable $r2, $r3;
        org.dom4j.DocumentException r0;

        r0 := @this: org.dom4j.DocumentException;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r1);

        $r2 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Nested exception: ");

        $r3 = r0.<org.dom4j.DocumentException: java.lang.Throwable nestedException>;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r1);

     label1:
        return;
    }
}
