public class com.jidesoft.swing.TransparentComponentWrapper extends javax.swing.JComponent
{
    private javax.swing.JComponent delegate;

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.BorderLayout $r2;
        com.jidesoft.swing.TransparentComponentWrapper r0;

        r0 := @this: com.jidesoft.swing.TransparentComponentWrapper;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.jidesoft.swing.TransparentComponentWrapper: javax.swing.JComponent delegate> = r1;

        virtualinvoke r0.<com.jidesoft.swing.TransparentComponentWrapper: void setOpaque(boolean)>(0);

        virtualinvoke r1.<javax.swing.JComponent: void setOpaque(boolean)>(0);

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.TransparentComponentWrapper: void setLayout(java.awt.LayoutManager)>($r2);

        virtualinvoke r0.<com.jidesoft.swing.TransparentComponentWrapper: void add(java.awt.Component,java.lang.Object)>(r1, "Center");

        return;
    }

    public void paintComponent(java.awt.Graphics)
    {
        javax.swing.JComponent $r3;
        java.awt.Color $r4;
        java.awt.Dimension $r1;
        java.awt.Graphics r2;
        int $i0, $i1;
        com.jidesoft.swing.TransparentComponentWrapper r0;

        r0 := @this: com.jidesoft.swing.TransparentComponentWrapper;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TransparentComponentWrapper: java.awt.Dimension getSize()>();

        $r3 = r0.<com.jidesoft.swing.TransparentComponentWrapper: javax.swing.JComponent delegate>;

        $r4 = virtualinvoke $r3.<javax.swing.JComponent: java.awt.Color getBackground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i1 = $r1.<java.awt.Dimension: int width>;

        $i0 = $r1.<java.awt.Dimension: int height>;

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i1, $i0);

        return;
    }
}
