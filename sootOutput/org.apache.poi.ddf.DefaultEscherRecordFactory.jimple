public class org.apache.poi.ddf.DefaultEscherRecordFactory extends java.lang.Object implements org.apache.poi.ddf.EscherRecordFactory
{
    private static java.lang.Class[] escherRecordClasses;
    private static java.util.Map recordsMap;

    public void <init>()
    {
        org.apache.poi.ddf.DefaultEscherRecordFactory r0;

        r0 := @this: org.apache.poi.ddf.DefaultEscherRecordFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.poi.ddf.EscherRecord createRecord(byte[], int)
    {
        byte[] r0;
        java.lang.Short $r2;
        java.util.Map $r1;
        org.apache.poi.ddf.UnknownEscherRecord $r21, $r22;
        boolean $z0;
        org.apache.poi.ddf.EscherContainerRecord $r17;
        org.apache.poi.ddf.EscherBitmapBlip $r18;
        java.lang.Exception $r10;
        org.apache.poi.ddf.DefaultEscherRecordFactory r12;
        org.apache.poi.ddf.EscherBlipRecord r14, $r20;
        org.apache.poi.ddf.EscherMetafileBlip $r19;
        java.lang.Object[] $r4;
        java.lang.reflect.Constructor $r7;
        org.apache.poi.ddf.EscherRecord r16;
        short $s1, $s3;
        int i0, $i2, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i25, $i27;
        java.lang.Object $r3, $r5;

        r12 := @this: org.apache.poi.ddf.DefaultEscherRecordFactory;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $s1 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, i0);

        $i2 = i0 + 2;

        $s3 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, $i2);

        $z0 = staticinvoke <org.apache.poi.ddf.DefaultEscherRecordFactory: boolean isContainer(short,short)>($s1, $s3);

        if $z0 == 0 goto label01;

        $r17 = new org.apache.poi.ddf.EscherContainerRecord;

        specialinvoke $r17.<org.apache.poi.ddf.EscherContainerRecord: void <init>()>();

        virtualinvoke $r17.<org.apache.poi.ddf.EscherContainerRecord: void setRecordId(short)>($s3);

        virtualinvoke $r17.<org.apache.poi.ddf.EscherContainerRecord: void setOptions(short)>($s1);

        return $r17;

     label01:
        $i4 = (int) $s3;

        $i6 = (int) -4072;

        if $i4 < $i6 goto label07;

        $i7 = (int) $s3;

        $i9 = (int) -3817;

        if $i7 > $i9 goto label07;

        $i10 = (int) $s3;

        $i12 = (int) -4065;

        if $i10 == $i12 goto label02;

        $i13 = (int) $s3;

        $i15 = (int) -4067;

        if $i13 == $i15 goto label02;

        $i16 = (int) $s3;

        $i18 = (int) -4066;

        if $i16 != $i18 goto label03;

     label02:
        $r18 = new org.apache.poi.ddf.EscherBitmapBlip;

        specialinvoke $r18.<org.apache.poi.ddf.EscherBitmapBlip: void <init>()>();

        r14 = $r18;

        goto label06;

     label03:
        $i19 = (int) $s3;

        $i21 = (int) -4070;

        if $i19 == $i21 goto label04;

        $i22 = (int) $s3;

        $i24 = (int) -4069;

        if $i22 == $i24 goto label04;

        $i25 = (int) $s3;

        $i27 = (int) -4068;

        if $i25 != $i27 goto label05;

     label04:
        $r19 = new org.apache.poi.ddf.EscherMetafileBlip;

        specialinvoke $r19.<org.apache.poi.ddf.EscherMetafileBlip: void <init>()>();

        r14 = $r19;

        goto label06;

     label05:
        $r20 = new org.apache.poi.ddf.EscherBlipRecord;

        specialinvoke $r20.<org.apache.poi.ddf.EscherBlipRecord: void <init>()>();

        r14 = $r20;

     label06:
        virtualinvoke r14.<org.apache.poi.ddf.EscherBlipRecord: void setRecordId(short)>($s3);

        virtualinvoke r14.<org.apache.poi.ddf.EscherBlipRecord: void setOptions(short)>($s1);

        return r14;

     label07:
        $r1 = <org.apache.poi.ddf.DefaultEscherRecordFactory: java.util.Map recordsMap>;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (java.lang.reflect.Constructor) $r3;

        if $r7 != null goto label08;

        $r21 = new org.apache.poi.ddf.UnknownEscherRecord;

        specialinvoke $r21.<org.apache.poi.ddf.UnknownEscherRecord: void <init>()>();

        return $r21;

     label08:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        r16 = (org.apache.poi.ddf.EscherRecord) $r5;

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r22 = new org.apache.poi.ddf.UnknownEscherRecord;

        specialinvoke $r22.<org.apache.poi.ddf.UnknownEscherRecord: void <init>()>();

        return $r22;

     label11:
        virtualinvoke r16.<org.apache.poi.ddf.EscherRecord: void setRecordId(short)>($s3);

        virtualinvoke r16.<org.apache.poi.ddf.EscherRecord: void setOptions(short)>($s1);

        return r16;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static java.util.Map recordsToMap(java.lang.Class[])
    {
        java.lang.NoSuchMethodException $r7;
        java.util.HashMap $r0;
        java.lang.reflect.Constructor $r5;
        short $s1;
        java.lang.NoSuchFieldException $r9;
        java.lang.Short $r6;
        int $i0, i2;
        java.lang.IllegalAccessException $r11;
        java.lang.Class[] r1, r2;
        java.lang.RuntimeException $r8, $r10, $r12, $r14;
        java.lang.reflect.Field $r4;
        java.lang.IllegalArgumentException $r13;
        java.lang.Class r3;

        r2 := @parameter0: java.lang.Class[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        r1 = newarray (java.lang.Class)[0];

        i2 = 0;

     label01:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label11;

        r3 = r2[i2];

     label02:
        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("RECORD_ID");

        $s1 = virtualinvoke $r4.<java.lang.reflect.Field: short getShort(java.lang.Object)>(null);

     label03:
        goto label07;

     label04:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label05:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r12;

     label06:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label07:
        $r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r1);

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label10:
        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        i2 = i2 + 1;

        goto label01;

     label11:
        return $r0;

        catch java.lang.IllegalArgumentException from label02 to label03 with label04;
        catch java.lang.IllegalAccessException from label02 to label03 with label05;
        catch java.lang.NoSuchFieldException from label02 to label03 with label06;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
    }

    public static boolean isContainer(short, short)
    {
        short s0, s1, $s2;
        int $i3, $i5, $i6, $i8, $i9, $i11, $i12;
        boolean $z0;

        s1 := @parameter0: short;

        s0 := @parameter1: short;

        $i3 = (int) s0;

        $i5 = (int) -4096;

        if $i3 < $i5 goto label1;

        $i6 = (int) s0;

        $i8 = (int) -4091;

        if $i6 > $i8 goto label1;

        return 1;

     label1:
        $i9 = (int) s0;

        $i11 = (int) -4083;

        if $i9 != $i11 goto label2;

        return 0;

     label2:
        $s2 = s1 & 15;

        $i12 = (int) $s2;

        if $i12 != 15 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0, $r1;
        java.util.Map $r2;

        $r0 = newarray (java.lang.Class)[12];

        $r0[0] = class "Lorg/apache/poi/ddf/EscherBSERecord;";

        $r0[1] = class "Lorg/apache/poi/ddf/EscherOptRecord;";

        $r0[2] = class "Lorg/apache/poi/ddf/EscherTertiaryOptRecord;";

        $r0[3] = class "Lorg/apache/poi/ddf/EscherClientAnchorRecord;";

        $r0[4] = class "Lorg/apache/poi/ddf/EscherDgRecord;";

        $r0[5] = class "Lorg/apache/poi/ddf/EscherSpgrRecord;";

        $r0[6] = class "Lorg/apache/poi/ddf/EscherSpRecord;";

        $r0[7] = class "Lorg/apache/poi/ddf/EscherClientDataRecord;";

        $r0[8] = class "Lorg/apache/poi/ddf/EscherDggRecord;";

        $r0[9] = class "Lorg/apache/poi/ddf/EscherSplitMenuColorsRecord;";

        $r0[10] = class "Lorg/apache/poi/ddf/EscherChildAnchorRecord;";

        $r0[11] = class "Lorg/apache/poi/ddf/EscherTextboxRecord;";

        <org.apache.poi.ddf.DefaultEscherRecordFactory: java.lang.Class[] escherRecordClasses> = $r0;

        $r1 = <org.apache.poi.ddf.DefaultEscherRecordFactory: java.lang.Class[] escherRecordClasses>;

        $r2 = staticinvoke <org.apache.poi.ddf.DefaultEscherRecordFactory: java.util.Map recordsToMap(java.lang.Class[])>($r1);

        <org.apache.poi.ddf.DefaultEscherRecordFactory: java.util.Map recordsMap> = $r2;

        return;
    }
}
