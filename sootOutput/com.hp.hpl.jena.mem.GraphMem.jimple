public class com.hp.hpl.jena.mem.GraphMem extends com.hp.hpl.jena.mem.GraphMemBase
{

    public void <init>()
    {
        com.hp.hpl.jena.mem.GraphMem r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        specialinvoke r0.<com.hp.hpl.jena.mem.GraphMemBase: void <init>()>();

        return;
    }

    protected com.hp.hpl.jena.graph.impl.TripleStore createTripleStore()
    {
        com.hp.hpl.jena.mem.GraphTripleStoreMem $r0;
        com.hp.hpl.jena.mem.GraphMem r1;

        r1 := @this: com.hp.hpl.jena.mem.GraphMem;

        $r0 = new com.hp.hpl.jena.mem.GraphTripleStoreMem;

        specialinvoke $r0.<com.hp.hpl.jena.mem.GraphTripleStoreMem: void <init>(com.hp.hpl.jena.graph.Graph)>(r1);

        return $r0;
    }

    protected void destroy()
    {
        com.hp.hpl.jena.graph.impl.TripleStore $r1;
        com.hp.hpl.jena.mem.GraphMem r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        $r1 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.TripleStore: void close()>();

        return;
    }

    public void performAdd(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.TripleStore $r2;
        com.hp.hpl.jena.mem.GraphMem r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.TripleStore: void add(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public void performDelete(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.TripleStore $r2;
        com.hp.hpl.jena.mem.GraphMem r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.TripleStore: void delete(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public int graphBaseSize()
    {
        int $i0;
        com.hp.hpl.jena.graph.impl.TripleStore $r1;
        com.hp.hpl.jena.mem.GraphMem r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        $r1 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        $i0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.TripleStore: int size()>();

        return $i0;
    }

    protected com.hp.hpl.jena.graph.GraphStatisticsHandler createStatisticsHandler()
    {
        com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler $r0;
        com.hp.hpl.jena.graph.impl.TripleStore $r2;
        com.hp.hpl.jena.mem.GraphMem r1;
        com.hp.hpl.jena.mem.GraphTripleStoreMem $r3;

        r1 := @this: com.hp.hpl.jena.mem.GraphMem;

        $r0 = new com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler;

        $r2 = r1.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        $r3 = (com.hp.hpl.jena.mem.GraphTripleStoreMem) $r2;

        specialinvoke $r0.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: void <init>(com.hp.hpl.jena.mem.GraphTripleStoreMem)>($r3);

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator graphBaseFind(com.hp.hpl.jena.graph.TripleMatch)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r4;
        com.hp.hpl.jena.graph.impl.TripleStore $r2;
        com.hp.hpl.jena.mem.GraphMem r0;
        com.hp.hpl.jena.graph.TripleMatch r1;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        r1 := @parameter0: com.hp.hpl.jena.graph.TripleMatch;

        $r2 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Triple asTriple()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.TripleStore: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.TripleMatch)>($r3);

        return $r4;
    }

    public boolean graphBaseContains(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.TripleStore $r2;
        com.hp.hpl.jena.mem.GraphMem r1;
        com.hp.hpl.jena.graph.Triple r0;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.mem.GraphMem;

        r0 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Triple: boolean isConcrete()>();

        if $z0 == 0 goto label1;

        $r2 = r1.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.graph.impl.TripleStore: boolean contains(com.hp.hpl.jena.graph.Triple)>(r0);

        goto label2;

     label1:
        $z1 = specialinvoke r1.<com.hp.hpl.jena.mem.GraphMemBase: boolean graphBaseContains(com.hp.hpl.jena.graph.Triple)>(r0);

     label2:
        return $z1;
    }

    public void clear()
    {
        com.hp.hpl.jena.graph.GraphEvents $r2;
        com.hp.hpl.jena.graph.GraphEventManager $r1;
        com.hp.hpl.jena.mem.GraphMem r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        virtualinvoke r0.<com.hp.hpl.jena.mem.GraphMem: void clearStore()>();

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.GraphEventManager getEventManager()>();

        $r2 = <com.hp.hpl.jena.graph.GraphEvents: com.hp.hpl.jena.graph.GraphEvents removeAll>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.GraphEventManager: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>(r0, $r2);

        return;
    }

    public void clearStore()
    {
        com.hp.hpl.jena.graph.impl.TripleStore $r1;
        com.hp.hpl.jena.mem.GraphMem r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem;

        $r1 = r0.<com.hp.hpl.jena.mem.GraphMem: com.hp.hpl.jena.graph.impl.TripleStore store>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.impl.TripleStore: void clear()>();

        return;
    }
}
