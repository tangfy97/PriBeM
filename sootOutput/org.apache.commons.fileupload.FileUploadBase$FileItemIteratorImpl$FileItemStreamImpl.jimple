class org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl extends java.lang.Object implements org.apache.commons.fileupload.FileItemStream
{
    private final java.lang.String contentType;
    private final java.lang.String fieldName;
    private final java.lang.String name;
    private final boolean formField;
    private final java.io.InputStream stream;
    private boolean opened;
    private org.apache.commons.fileupload.FileItemHeaders headers;
    private final org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl this$1;

    void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl, java.lang.String, java.lang.String, java.lang.String, boolean, long) throws java.io.IOException
    {
        byte $b1, $b3, $b6;
        org.apache.commons.fileupload.MultipartStream$ItemInputStream $r6;
        org.apache.commons.fileupload.FileUploadBase $r7, $r9, $r10, $r18, $r22;
        boolean z0;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl r1;
        org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException $r26;
        long $l0, l2, $l4, $l5, $l7, $l8;
        org.apache.commons.fileupload.FileUploadBase$FileUploadIOException $r27;
        java.lang.StringBuffer $r13, $r15, $r16, $r17, $r19, $r20, $r25;
        int $i9;
        java.lang.String r2, r3, r4, $r14, $r21;
        org.apache.commons.fileupload.MultipartStream $r5;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1 $r28;
        java.io.InputStream r24;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        r1 := @parameter0: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        l2 := @parameter5: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl this$1> = r1;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name> = r2;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName> = r3;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String contentType> = r4;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean formField> = z0;

        $r5 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.MultipartStream access$100(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $r6 = virtualinvoke $r5.<org.apache.commons.fileupload.MultipartStream: org.apache.commons.fileupload.MultipartStream$ItemInputStream newInputStream()>();

        r24 = $r6;

        $r7 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$200(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $l0 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$300(org.apache.commons.fileupload.FileUploadBase)>($r7);

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label2;

        $b3 = l2 cmp -1L;

        if $b3 == 0 goto label1;

        $r10 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$200(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $l5 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$300(org.apache.commons.fileupload.FileUploadBase)>($r10);

        $b6 = l2 cmp $l5;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label1;

        $r26 = new org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The field ");

        $r14 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" exceeds its maximum permitted ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" size of ");

        $r18 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$200(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $l7 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$300(org.apache.commons.fileupload.FileUploadBase)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" bytes.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$200(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $l8 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$300(org.apache.commons.fileupload.FileUploadBase)>($r22);

        specialinvoke $r26.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void <init>(java.lang.String,long,long)>($r21, l2, $l8);

        virtualinvoke $r26.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFileName(java.lang.String)>(r2);

        virtualinvoke $r26.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFieldName(java.lang.String)>(r3);

        $r27 = new org.apache.commons.fileupload.FileUploadBase$FileUploadIOException;

        specialinvoke $r27.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: void <init>(org.apache.commons.fileupload.FileUploadException)>($r26);

        throw $r27;

     label1:
        $r28 = new org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1;

        $r9 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl: org.apache.commons.fileupload.FileUploadBase access$200(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl)>(r1);

        $l4 = staticinvoke <org.apache.commons.fileupload.FileUploadBase: long access$300(org.apache.commons.fileupload.FileUploadBase)>($r9);

        specialinvoke $r28.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl,java.io.InputStream,long,org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl,org.apache.commons.fileupload.MultipartStream$ItemInputStream)>(r0, $r6, $l4, r1, $r6);

        r24 = $r28;

     label2:
        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream> = r24;

        return;
    }

    public java.lang.String getContentType()
    {
        java.lang.String $r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String contentType>;

        return $r1;
    }

    public java.lang.String getFieldName()
    {
        java.lang.String $r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1, $r2;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name>;

        $r2 = staticinvoke <org.apache.commons.fileupload.util.Streams: java.lang.String checkFileName(java.lang.String)>($r1);

        return $r2;
    }

    public boolean isFormField()
    {
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        boolean $z0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $z0 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean formField>;

        return $z0;
    }

    public java.io.InputStream openStream() throws java.io.IOException
    {
        java.lang.IllegalStateException $r5;
        org.apache.commons.fileupload.util.Closeable $r2;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        org.apache.commons.fileupload.FileItemStream$ItemSkippedException $r4;
        boolean $z0, $z1;
        java.io.InputStream $r1, $r3;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $z0 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: boolean opened>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The stream was already opened.");

        throw $r5;

     label1:
        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;

        $r2 = (org.apache.commons.fileupload.util.Closeable) $r1;

        $z1 = interfaceinvoke $r2.<org.apache.commons.fileupload.util.Closeable: boolean isClosed()>();

        if $z1 == 0 goto label2;

        $r4 = new org.apache.commons.fileupload.FileItemStream$ItemSkippedException;

        specialinvoke $r4.<org.apache.commons.fileupload.FileItemStream$ItemSkippedException: void <init>()>();

        throw $r4;

     label2:
        $r3 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;

        return $r3;
    }

    void close() throws java.io.IOException
    {
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.io.InputStream stream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public org.apache.commons.fileupload.FileItemHeaders getHeaders()
    {
        org.apache.commons.fileupload.FileItemHeaders $r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.commons.fileupload.FileItemHeaders headers>;

        return $r1;
    }

    public void setHeaders(org.apache.commons.fileupload.FileItemHeaders)
    {
        org.apache.commons.fileupload.FileItemHeaders r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        r1 := @parameter0: org.apache.commons.fileupload.FileItemHeaders;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: org.apache.commons.fileupload.FileItemHeaders headers> = r1;

        return;
    }

    static java.lang.String access$000(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)
    {
        java.lang.String $r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @parameter0: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String name>;

        return $r1;
    }

    static java.lang.String access$400(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)
    {
        java.lang.String $r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r0;

        r0 := @parameter0: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String fieldName>;

        return $r1;
    }
}
