public class org.apache.cxf.jaxrs.provider.FormEncodingProvider extends java.lang.Object implements javax.ws.rs.ext.MessageBodyReader, javax.ws.rs.ext.MessageBodyWriter
{
    private org.apache.cxf.jaxrs.provider.FormValidator validator;
    private org.apache.cxf.jaxrs.ext.MessageContext mc;
    private java.lang.String attachmentDir;
    private java.lang.String attachmentThreshold;
    private java.lang.String attachmentMaxSize;
    private boolean expectEncoded;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(boolean)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean expectEncoded> = z0;

        return;
    }

    public void setExpectedEncoded(boolean)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean expectEncoded> = z0;

        return;
    }

    public void setAttachmentDirectory(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentDir> = r1;

        return;
    }

    public void setAttachmentThreshold(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentThreshold> = r1;

        return;
    }

    public void setAttachmentMaxSize(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentMaxSize> = r1;

        return;
    }

    public void setValidator(org.apache.cxf.jaxrs.provider.FormValidator)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        org.apache.cxf.jaxrs.provider.FormValidator r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: org.apache.cxf.jaxrs.provider.FormValidator;

        r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.provider.FormValidator validator> = r1;

        return;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        return $z0;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.ext.multipart.Attachment $r12;
        java.lang.'annotation'.Annotation[] r6;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r3;
        javax.ws.rs.core.MediaType r1, $r2;
        org.apache.cxf.jaxrs.ext.MessageContext $r8;
        javax.ws.rs.BadRequestException $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r15;
        javax.ws.rs.core.MultivaluedMap $r5, r19;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r9;
        java.lang.reflect.Type r18;
        javax.ws.rs.WebApplicationException $r17;
        java.lang.Class r4, $r10, $r11;
        java.lang.Object $r7, $r13, $r14;
        java.io.InputStream r0;

        r3 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r4 := @parameter0: java.lang.Class;

        r18 := @parameter1: java.lang.reflect.Type;

        r6 := @parameter2: java.lang.'annotation'.Annotation[];

        r1 := @parameter3: javax.ws.rs.core.MediaType;

        r19 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter5: java.io.InputStream;

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE>;

        $z0 = virtualinvoke r1.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r2);

        if $z0 == 0 goto label05;

        $r8 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)>($r8);

        $r10 = class "Lorg/apache/cxf/jaxrs/ext/multipart/MultipartBody;";

        $z2 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label03;

        $r14 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r9);

     label02:
        return $r14;

     label03:
        $r11 = class "Lorg/apache/cxf/jaxrs/ext/multipart/Attachment;";

        $z3 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z3 == 0 goto label05;

        $r12 = virtualinvoke $r9.<org.apache.cxf.jaxrs.ext.multipart.MultipartBody: org.apache.cxf.jaxrs.ext.multipart.Attachment getRootAttachment()>();

        $r13 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r12);

     label04:
        return $r13;

     label05:
        $r5 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: javax.ws.rs.core.MultivaluedMap createMap(java.lang.Class)>(r4);

        $z1 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean keepEncoded(java.lang.'annotation'.Annotation[])>(r6);

        if $z1 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        virtualinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)>($r5, r6, r0, r1, $z4);

        virtualinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: void validateMap(javax.ws.rs.core.MultivaluedMap)>($r5);

        virtualinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)>($r5);

        $r7 = specialinvoke r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.Object getFormObject(java.lang.Class,javax.ws.rs.core.MultivaluedMap)>(r4, $r5);

     label08:
        return $r7;

     label09:
        $r17 := @caughtexception;

        throw $r17;

     label10:
        $r15 := @caughtexception;

        $r16 = new javax.ws.rs.BadRequestException;

        specialinvoke $r16.<javax.ws.rs.BadRequestException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

        catch javax.ws.rs.WebApplicationException from label01 to label02 with label09;
        catch javax.ws.rs.WebApplicationException from label03 to label04 with label09;
        catch javax.ws.rs.WebApplicationException from label05 to label08 with label09;
        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label08 with label10;
    }

    protected boolean keepEncoded(java.lang.'annotation'.Annotation[])
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r2;
        java.lang.Object $r1;
        java.lang.'annotation'.Annotation[] r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r0 := @parameter0: java.lang.'annotation'.Annotation[];

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/Encoded;");

        if $r1 != null goto label1;

        $z0 = r2.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean expectEncoded>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r2;
        org.apache.cxf.message.Message $r0;

        r2 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r0 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        if $r0 == null goto label1;

        interfaceinvoke $r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.form_data", r1);

     label1:
        return;
    }

    protected javax.ws.rs.core.MultivaluedMap createMap(java.lang.Class) throws java.lang.Exception
    {
        javax.ws.rs.core.MultivaluedMap $r3;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r4;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        java.lang.Class r0;
        java.lang.Object $r2;

        r4 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r0 := @parameter0: java.lang.Class;

        if r0 == class "Ljavax/ws/rs/core/MultivaluedMap;" goto label1;

        if r0 != class "Lorg/apache/cxf/jaxrs/ext/form/Form;" goto label2;

     label1:
        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        return $r1;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (javax.ws.rs.core.MultivaluedMap) $r2;

        return $r3;
    }

    private java.lang.Object getFormObject(java.lang.Class, javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r2;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r4;
        java.lang.Class r0, $r1;
        java.lang.Object $r3, $r5;
        org.apache.cxf.jaxrs.ext.form.Form $r6;
        boolean $z0;

        r4 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $r1 = class "Lorg/apache/cxf/jaxrs/ext/form/Form;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r6 = new org.apache.cxf.jaxrs.ext.form.Form;

        $r5 = $r6;

        specialinvoke $r6.<org.apache.cxf.jaxrs.ext.form.Form: void <init>(javax.ws.rs.core.MultivaluedMap)>(r2);

        goto label2;

     label1:
        $r5 = r2;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        return $r3;
    }

    protected void populateMap(javax.ws.rs.core.MultivaluedMap, java.lang.'annotation'.Annotation[], java.io.InputStream, javax.ws.rs.core.MediaType, boolean)
    {
        java.lang.'annotation'.Annotation[] r19;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r3;
        javax.ws.rs.core.MediaType r0, $r1;
        javax.servlet.http.HttpServletRequest $r9, $r20;
        org.apache.cxf.jaxrs.ext.MessageContext $r4, $r12, $r16;
        java.lang.String $r2, $r8, $r11, $r13, $r14, $r15;
        boolean $z0, z1;
        org.apache.cxf.message.Message $r6, $r10, $r18;
        javax.ws.rs.core.MultivaluedMap r5;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r17;
        java.io.InputStream r7;

        r3 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r5 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r19 := @parameter1: java.lang.'annotation'.Annotation[];

        r7 := @parameter2: java.io.InputStream;

        r0 := @parameter3: javax.ws.rs.core.MediaType;

        z1 := @parameter4: boolean;

        $r1 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE>;

        $z0 = virtualinvoke r0.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r1);

        if $z0 == 0 goto label1;

        $r16 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r15 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentDir>;

        $r14 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentThreshold>;

        $r13 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: java.lang.String attachmentMaxSize>;

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)>($r16, $r15, $r14, $r13);

        $r18 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)>(r5, $r17, $r18, z1);

        goto label5;

     label1:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)>(r0, "UTF-8");

        $r4 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        if $r4 == null goto label2;

        $r12 = r3.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r20 = interfaceinvoke $r12.<org.apache.cxf.jaxrs.ext.MessageContext: javax.servlet.http.HttpServletRequest getHttpServletRequest()>();

        goto label3;

     label2:
        $r20 = null;

     label3:
        if $r20 != null goto label4;

        $r10 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String readBody(java.io.InputStream,java.lang.String)>(r7, $r2);

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean)>(r5, $r10, $r11, $r2, z1);

        goto label5;

     label4:
        $r6 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String readBody(java.io.InputStream,java.lang.String)>(r7, $r2);

        $r9 = (javax.servlet.http.HttpServletRequest) $r20;

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)>(r5, $r6, $r8, $r2, z1, $r9);

     label5:
        return;
    }

    protected void validateMap(javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        javax.ws.rs.core.MultivaluedMap r2;
        org.apache.cxf.jaxrs.provider.FormValidator $r1, $r3;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.provider.FormValidator validator>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: org.apache.cxf.jaxrs.provider.FormValidator validator>;

        interfaceinvoke $r3.<org.apache.cxf.jaxrs.provider.FormValidator: void validate(javax.ws.rs.core.MultivaluedMap)>(r2);

     label1:
        return;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r0;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        return $z0;
    }

    private boolean isSupported(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        java.lang.'annotation'.Annotation[] r10;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r8;
        javax.ws.rs.core.MediaType r3, $r5;
        java.lang.String $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.reflect.Type r9;
        java.lang.Class r0, $r1, $r2, $r6, $r7;

        r8 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r0 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.reflect.Type;

        r10 := @parameter2: java.lang.'annotation'.Annotation[];

        r3 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Ljavax/ws/rs/core/MultivaluedMap;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Lorg/apache/cxf/jaxrs/ext/form/Form;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label1;

        $r4 = virtualinvoke r3.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("multipart");

        if $z2 == 0 goto label2;

        $r5 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE>;

        $z3 = virtualinvoke r3.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r5);

        if $z3 == 0 goto label2;

        $r6 = class "Ljavax/ws/rs/core/MultivaluedMap;";

        $z4 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z4 != 0 goto label1;

        $r7 = class "Lorg/apache/cxf/jaxrs/ext/form/Form;";

        $z5 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z5 == 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        return $z6;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r7;
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MultivaluedMap $r1, r5, $r9;
        org.apache.cxf.jaxrs.provider.FormEncodingProvider r2;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r11;
        java.lang.Object r0, $r12;
        java.lang.Class r10;
        java.lang.String $r6;
        org.apache.cxf.jaxrs.ext.form.Form $r8;
        boolean $z0, $z1;

        r2 := @this: org.apache.cxf.jaxrs.provider.FormEncodingProvider;

        r0 := @parameter0: java.lang.Object;

        r10 := @parameter1: java.lang.Class;

        r11 := @parameter2: java.lang.reflect.Type;

        r3 := @parameter3: java.lang.'annotation'.Annotation[];

        r4 := @parameter4: javax.ws.rs.core.MediaType;

        r5 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter6: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.ext.form.Form;

        if $z0 == 0 goto label1;

        $r8 = (org.apache.cxf.jaxrs.ext.form.Form) r0;

        $r12 = virtualinvoke $r8.<org.apache.cxf.jaxrs.ext.form.Form: javax.ws.rs.core.MultivaluedMap getData()>();

        goto label2;

     label1:
        $r12 = r0;

     label2:
        $r1 = (javax.ws.rs.core.MultivaluedMap) $r12;

        $r9 = (javax.ws.rs.core.MultivaluedMap) $r1;

        $z1 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.FormEncodingProvider: boolean keepEncoded(java.lang.'annotation'.Annotation[])>(r3);

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)>(r4, r5, "UTF-8");

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)>($r9, r7, $r6, $z1);

        return;
    }
}
