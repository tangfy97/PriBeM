class org.apache.lucene.util.fst.BytesStore$2 extends org.apache.lucene.util.fst.FST$BytesReader
{
    private byte[] current;
    private int nextBuffer;
    private int nextRead;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.util.fst.BytesStore this$0;

    void <init>(org.apache.lucene.util.fst.BytesStore)
    {
        byte[] $r7;
        org.apache.lucene.util.fst.BytesStore r1, $r2, $r4;
        org.apache.lucene.util.fst.BytesStore$2 r0;
        java.util.List $r3, $r5;
        int $i0, $i2;
        java.lang.Object $r6;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        r1 := @parameter0: org.apache.lucene.util.fst.BytesStore;

        r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0> = r1;

        specialinvoke r0.<org.apache.lucene.util.fst.FST$BytesReader: void <init>()>();

        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r4 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $r5 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (byte[]) $r6;

     label2:
        r0.<org.apache.lucene.util.fst.BytesStore$2: byte[] current> = $r7;

        $i2 = (int) -1;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextBuffer> = $i2;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead> = 0;

        return;
    }

    public byte readByte()
    {
        byte[] $r1, $r5;
        org.apache.lucene.util.fst.BytesStore $r2, $r6;
        byte $b3;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9;
        org.apache.lucene.util.fst.BytesStore$2 r0;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        $i0 = r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead>;

        $i9 = (int) -1;

        if $i0 != $i9 goto label1;

        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r2);

        $i4 = r0.<org.apache.lucene.util.fst.BytesStore$2: int nextBuffer>;

        $i5 = $i4 - 1;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextBuffer> = $i5;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i4);

        $r5 = (byte[]) $r4;

        r0.<org.apache.lucene.util.fst.BytesStore$2: byte[] current> = $r5;

        $r6 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $i6 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r6);

        $i7 = $i6 - 1;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead> = $i7;

     label1:
        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$2: byte[] current>;

        $i1 = r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead>;

        $i2 = $i1 - 1;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead> = $i2;

        $b3 = $r1[$i1];

        return $b3;
    }

    public void skipBytes(int)
    {
        org.apache.lucene.util.fst.BytesStore$2 r0;
        int i1;
        long $l0, $l2, $l3;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        i1 := @parameter0: int;

        $l0 = virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$2: long getPosition()>();

        $l2 = (long) i1;

        $l3 = $l0 - $l2;

        virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$2: void setPosition(long)>($l3);

        return;
    }

    public void readBytes(byte[], int, int)
    {
        byte[] r0;
        org.apache.lucene.util.fst.BytesStore$2 r1;
        byte $b3;
        int i0, i1, $i2, i4;

        r1 := @this: org.apache.lucene.util.fst.BytesStore$2;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i2 = i1 + i4;

        $b3 = virtualinvoke r1.<org.apache.lucene.util.fst.BytesStore$2: byte readByte()>();

        r0[$i2] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public long getPosition()
    {
        org.apache.lucene.util.fst.BytesStore $r1;
        long $l1, $l2, $l4, $l6, $l7, $l8;
        org.apache.lucene.util.fst.BytesStore$2 r0;
        int $i0, $i3, $i5;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        $i0 = r0.<org.apache.lucene.util.fst.BytesStore$2: int nextBuffer>;

        $l1 = (long) $i0;

        $l2 = $l1 + 1L;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $i3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$000(org.apache.lucene.util.fst.BytesStore)>($r1);

        $l4 = (long) $i3;

        $l7 = $l2 * $l4;

        $i5 = r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead>;

        $l6 = (long) $i5;

        $l8 = $l7 + $l6;

        return $l8;
    }

    public void setPosition(long)
    {
        byte[] $r5;
        org.apache.lucene.util.fst.BytesStore $r1, $r2, $r6;
        long l0, $l2, $l6, $l7, $l9, $l11;
        java.lang.AssertionError $r7;
        byte $b10;
        int $i1, i3, $i4, $i5, $i8;
        java.lang.String $r13;
        boolean $z0;
        org.apache.lucene.util.fst.BytesStore$2 r0;
        java.util.List $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $i1 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$200(org.apache.lucene.util.fst.BytesStore)>($r1);

        $l2 = l0 >> $i1;

        i3 = (int) $l2;

        $i4 = i3 - 1;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextBuffer> = $i4;

        $r2 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $r3 = staticinvoke <org.apache.lucene.util.fst.BytesStore: java.util.List access$100(org.apache.lucene.util.fst.BytesStore)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (byte[]) $r4;

        r0.<org.apache.lucene.util.fst.BytesStore$2: byte[] current> = $r5;

        $r6 = r0.<org.apache.lucene.util.fst.BytesStore$2: org.apache.lucene.util.fst.BytesStore this$0>;

        $i5 = staticinvoke <org.apache.lucene.util.fst.BytesStore: int access$300(org.apache.lucene.util.fst.BytesStore)>($r6);

        $l6 = (long) $i5;

        $l7 = l0 & $l6;

        $i8 = (int) $l7;

        r0.<org.apache.lucene.util.fst.BytesStore$2: int nextRead> = $i8;

        $z0 = <org.apache.lucene.util.fst.BytesStore$2: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l9 = virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$2: long getPosition()>();

        $b10 = $l9 cmp l0;

        if $b10 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pos=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getPos()=");

        $l11 = virtualinvoke r0.<org.apache.lucene.util.fst.BytesStore$2: long getPosition()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r7;

     label1:
        return;
    }

    public boolean reversed()
    {
        org.apache.lucene.util.fst.BytesStore$2 r0;

        r0 := @this: org.apache.lucene.util.fst.BytesStore$2;

        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/fst/BytesStore;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.fst.BytesStore$2: boolean $assertionsDisabled> = $z1;

        return;
    }
}
