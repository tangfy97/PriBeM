public class org.apache.poi.hslf.blip.Metafile$Header extends java.lang.Object
{
    public int wmfsize;
    public java.awt.Rectangle bounds;
    public java.awt.Dimension size;
    public int zipsize;
    public int compression;
    public int filter;

    public void <init>()
    {
        org.apache.poi.hslf.blip.Metafile$Header r0;

        r0 := @this: org.apache.poi.hslf.blip.Metafile$Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hslf.blip.Metafile$Header: int filter> = 254;

        return;
    }

    public void read(byte[], int)
    {
        byte[] r1;
        java.awt.Rectangle $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.apache.poi.hslf.blip.Metafile$Header r0;
        java.awt.Dimension $r3;

        r0 := @this: org.apache.poi.hslf.blip.Metafile$Header;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i0);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: int wmfsize> = $i1;

        i13 = i0 + 4;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i13);

        i14 = i13 + 4;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i14);

        i15 = i14 + 4;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i15);

        i16 = i15 + 4;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i16);

        i17 = i16 + 4;

        $r2 = new java.awt.Rectangle;

        $i7 = $i4 - $i2;

        $i6 = $i5 - $i3;

        specialinvoke $r2.<java.awt.Rectangle: void <init>(int,int,int,int)>($i2, $i3, $i7, $i6);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds> = $r2;

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i17);

        i18 = i17 + 4;

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i18);

        i19 = i18 + 4;

        $r3 = new java.awt.Dimension;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i8, $i9);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Dimension size> = $r3;

        $i10 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, i19);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: int zipsize> = $i10;

        i20 = i19 + 4;

        $i11 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>(r1, i20);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: int compression> = $i11;

        i21 = i20 + 1;

        $i12 = staticinvoke <org.apache.poi.util.LittleEndian: int getUnsignedByte(byte[],int)>(r1, i21);

        r0.<org.apache.poi.hslf.blip.Metafile$Header: int filter> = $i12;

        return;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        byte[] r0;
        java.awt.Rectangle $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b13;
        org.apache.poi.hslf.blip.Metafile$Header r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.io.OutputStream r10;
        java.awt.Dimension $r8, $r9;

        r1 := @this: org.apache.poi.hslf.blip.Metafile$Header;

        r10 := @parameter0: java.io.OutputStream;

        r0 = newarray (byte)[34];

        $i0 = r1.<org.apache.poi.hslf.blip.Metafile$Header: int wmfsize>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 0, $i0);

        $r2 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i1 = $r2.<java.awt.Rectangle: int x>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 4, $i1);

        $r3 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i2 = $r3.<java.awt.Rectangle: int y>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 8, $i2);

        $r4 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i4 = $r4.<java.awt.Rectangle: int x>;

        $r5 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i3 = $r5.<java.awt.Rectangle: int width>;

        $i5 = $i4 + $i3;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 12, $i5);

        $r6 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i7 = $r6.<java.awt.Rectangle: int y>;

        $r7 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i6 = $r7.<java.awt.Rectangle: int height>;

        $i8 = $i7 + $i6;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 16, $i8);

        $r8 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Dimension size>;

        $i9 = $r8.<java.awt.Dimension: int width>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 20, $i9);

        $r9 = r1.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Dimension size>;

        $i10 = $r9.<java.awt.Dimension: int height>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 24, $i10);

        $i11 = r1.<org.apache.poi.hslf.blip.Metafile$Header: int zipsize>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 28, $i11);

        r0[32] = 0;

        $i12 = r1.<org.apache.poi.hslf.blip.Metafile$Header: int filter>;

        $b13 = (byte) $i12;

        r0[33] = $b13;

        virtualinvoke r10.<java.io.OutputStream: void write(byte[])>(r0);

        return;
    }

    public int getSize()
    {
        org.apache.poi.hslf.blip.Metafile$Header r0;

        r0 := @this: org.apache.poi.hslf.blip.Metafile$Header;

        return 34;
    }
}
