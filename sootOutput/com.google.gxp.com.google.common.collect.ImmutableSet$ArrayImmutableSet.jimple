abstract class com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet extends com.google.gxp.com.google.common.collect.ImmutableSet
{
    final java.lang.Object[] elements;

    void <init>(java.lang.Object[])
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;
        java.lang.Object[] r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet: void <init>()>();

        r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;
        java.lang.Object[] $r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean isEmpty()
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;
        java.lang.Object[] $r1;
        java.util.Iterator $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Iterators: java.util.Iterator forArray(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements>;

        $i1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        r1 := @parameter0: java.lang.Object[];

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: int size()>();

        $i1 = lengthof r1;

        if $i1 >= $i0 goto label1;

        r1 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r1, $i0);

        goto label2;

     label1:
        $i2 = lengthof r1;

        if $i2 <= $i0 goto label2;

        r1[$i0] = null;

     label2:
        $r2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        return r1;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet r1, $r2;
        java.lang.Object[] r3;
        java.util.Collection r0;
        int $i0, $i1, i2, i3;
        java.lang.Object r4;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        r0 := @parameter0: java.util.Collection;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet;

        if $z0 != 0 goto label2;

        $z2 = specialinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSet: boolean containsAll(java.util.Collection)>(r0);

        return $z2;

     label2:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $i1 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: int size()>();

        if $i0 <= $i1 goto label3;

        return 0;

     label3:
        $r2 = (com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet) r0;

        r3 = $r2.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.lang.Object[] elements>;

        i2 = lengthof r3;

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        r4 = r3[i3];

        $z1 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSet$ArrayImmutableSet: boolean contains(java.lang.Object)>(r4);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 1;
    }
}
