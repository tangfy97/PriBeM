public abstract class org.apache.batik.bridge.SVGShapeElementBridge extends org.apache.batik.bridge.AbstractGraphicsNodeBridge
{
    protected boolean hasNewShapePainter;

    protected void <init>()
    {
        org.apache.batik.bridge.SVGShapeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void <init>()>();

        return;
    }

    public org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.apache.batik.gvt.GraphicsNode $r3;
        org.apache.batik.bridge.BridgeContext r1;
        java.awt.RenderingHints $r5, $r6;
        org.apache.batik.gvt.ShapeNode r4;
        org.apache.batik.bridge.SVGShapeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        $r3 = specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r1, r2);

        r4 = (org.apache.batik.gvt.ShapeNode) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r2, r4);

        virtualinvoke r0.<org.apache.batik.bridge.SVGShapeElementBridge: void buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>(r1, r2, r4);

        $r5 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.RenderingHints convertColorRendering(org.w3c.dom.Element,java.awt.RenderingHints)>(r2, null);

        $r6 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.RenderingHints convertShapeRendering(org.w3c.dom.Element,java.awt.RenderingHints)>(r2, $r5);

        if $r6 == null goto label2;

        virtualinvoke r4.<org.apache.batik.gvt.AbstractGraphicsNode: void setRenderingHints(java.awt.RenderingHints)>($r6);

     label2:
        return r4;
    }

    protected org.apache.batik.gvt.GraphicsNode instantiateGraphicsNode()
    {
        org.apache.batik.gvt.ShapeNode $r0;
        org.apache.batik.bridge.SVGShapeElementBridge r1;

        r1 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        $r0 = new org.apache.batik.gvt.ShapeNode;

        specialinvoke $r0.<org.apache.batik.gvt.ShapeNode: void <init>()>();

        return $r0;
    }

    public void buildGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        org.w3c.dom.Element r4;
        org.apache.batik.gvt.ShapePainter $r5;
        org.apache.batik.gvt.GraphicsNode r0;
        org.apache.batik.bridge.BridgeContext r3;
        org.apache.batik.gvt.ShapeNode r1;
        org.apache.batik.bridge.SVGShapeElementBridge r2;

        r2 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r4 := @parameter1: org.w3c.dom.Element;

        r0 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        r1 = (org.apache.batik.gvt.ShapeNode) r0;

        $r5 = virtualinvoke r2.<org.apache.batik.bridge.SVGShapeElementBridge: org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>(r3, r4, r1);

        virtualinvoke r1.<org.apache.batik.gvt.ShapeNode: void setShapePainter(org.apache.batik.gvt.ShapePainter)>($r5);

        specialinvoke r2.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r3, r4, r0);

        return;
    }

    protected org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.ShapeNode)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.gvt.ShapePainter $r3;
        org.apache.batik.bridge.BridgeContext r2;
        org.apache.batik.gvt.ShapeNode r1;
        org.apache.batik.bridge.SVGShapeElementBridge r4;

        r4 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        r2 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.apache.batik.gvt.ShapeNode;

        $r3 = staticinvoke <org.apache.batik.bridge.PaintServer: org.apache.batik.gvt.ShapePainter convertFillAndStroke(org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2);

        return $r3;
    }

    protected abstract void buildShape(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.ShapeNode);

    public boolean isComposite()
    {
        org.apache.batik.bridge.SVGShapeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        return 0;
    }

    protected void handleGeometryChanged()
    {
        org.w3c.dom.Element $r3;
        org.apache.batik.gvt.ShapePainter $r5;
        org.apache.batik.gvt.GraphicsNode $r1;
        org.apache.batik.bridge.BridgeContext $r4;
        org.apache.batik.gvt.ShapeNode r2;
        org.apache.batik.bridge.SVGShapeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleGeometryChanged()>();

        $r1 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        r2 = (org.apache.batik.gvt.ShapeNode) $r1;

        $r4 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r3 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r5 = virtualinvoke r0.<org.apache.batik.bridge.SVGShapeElementBridge: org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>($r4, $r3, r2);

        virtualinvoke r2.<org.apache.batik.gvt.ShapeNode: void setShapePainter(org.apache.batik.gvt.ShapePainter)>($r5);

        return;
    }

    public void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)
    {
        org.apache.batik.css.engine.CSSEngineEvent r1;
        org.apache.batik.bridge.SVGShapeElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineEvent;

        r0.<org.apache.batik.bridge.SVGShapeElementBridge: boolean hasNewShapePainter> = 0;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)>(r1);

        return;
    }

    protected void handleCSSPropertyChanged(int)
    {
        org.apache.batik.gvt.ShapePainter $r9;
        java.awt.RenderingHints $r2, $r4, $r11, $r13;
        org.apache.batik.bridge.SVGShapeElementBridge r0;
        int i0;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode $r1, $r5, $r6, $r10, $r14;
        org.apache.batik.bridge.BridgeContext $r8;
        org.apache.batik.gvt.ShapeNode r15;
        org.w3c.dom.Element $r3, $r7, $r12;

        r0 := @this: org.apache.batik.bridge.SVGShapeElementBridge;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 9: goto label3;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label4;
            case 14: goto label4;
            case 15: goto label1;
            case 16: goto label1;
            case 17: goto label4;
            case 18: goto label4;
            case 19: goto label4;
            case 20: goto label4;
            case 21: goto label4;
            case 22: goto label4;
            case 23: goto label4;
            case 24: goto label4;
            case 25: goto label4;
            case 26: goto label4;
            case 27: goto label4;
            case 28: goto label4;
            case 29: goto label4;
            case 30: goto label4;
            case 31: goto label4;
            case 32: goto label4;
            case 33: goto label4;
            case 34: goto label4;
            case 35: goto label4;
            case 36: goto label4;
            case 37: goto label4;
            case 38: goto label4;
            case 39: goto label4;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label2;
            case 43: goto label4;
            case 44: goto label4;
            case 45: goto label1;
            case 46: goto label1;
            case 47: goto label1;
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            default: goto label4;
        };

     label1:
        $z0 = r0.<org.apache.batik.bridge.SVGShapeElementBridge: boolean hasNewShapePainter>;

        if $z0 != 0 goto label5;

        r0.<org.apache.batik.bridge.SVGShapeElementBridge: boolean hasNewShapePainter> = 1;

        $r6 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        r15 = (org.apache.batik.gvt.ShapeNode) $r6;

        $r8 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r7 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r9 = virtualinvoke r0.<org.apache.batik.bridge.SVGShapeElementBridge: org.apache.batik.gvt.ShapePainter createShapePainter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode)>($r8, $r7, r15);

        virtualinvoke r15.<org.apache.batik.gvt.ShapeNode: void setShapePainter(org.apache.batik.gvt.ShapePainter)>($r9);

        goto label5;

     label2:
        $r1 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: java.awt.RenderingHints getRenderingHints()>();

        $r3 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r4 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.RenderingHints convertShapeRendering(org.w3c.dom.Element,java.awt.RenderingHints)>($r3, $r2);

        if $r4 == null goto label5;

        $r5 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        interfaceinvoke $r5.<org.apache.batik.gvt.GraphicsNode: void setRenderingHints(java.awt.RenderingHints)>($r4);

        goto label5;

     label3:
        $r10 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r11 = interfaceinvoke $r10.<org.apache.batik.gvt.GraphicsNode: java.awt.RenderingHints getRenderingHints()>();

        $r12 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r13 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.RenderingHints convertColorRendering(org.w3c.dom.Element,java.awt.RenderingHints)>($r12, $r11);

        if $r13 == null goto label5;

        $r14 = r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        interfaceinvoke $r14.<org.apache.batik.gvt.GraphicsNode: void setRenderingHints(java.awt.RenderingHints)>($r13);

        goto label5;

     label4:
        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleCSSPropertyChanged(int)>(i0);

     label5:
        return;
    }
}
