public class javax.xml.stream.util.EventReaderDelegate extends java.lang.Object implements javax.xml.stream.XMLEventReader
{
    private javax.xml.stream.XMLEventReader reader;

    public void <init>()
    {
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(javax.xml.stream.XMLEventReader)
    {
        javax.xml.stream.XMLEventReader r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        r1 := @parameter0: javax.xml.stream.XMLEventReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader> = r1;

        return;
    }

    public void setParent(javax.xml.stream.XMLEventReader)
    {
        javax.xml.stream.XMLEventReader r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        r1 := @parameter0: javax.xml.stream.XMLEventReader;

        r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader> = r1;

        return;
    }

    public javax.xml.stream.XMLEventReader getParent()
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        return $r1;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: void close()>();

        return;
    }

    public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader $r1;
        java.lang.String $r2;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: java.lang.String getElementText()>();

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.xml.stream.XMLEventReader $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLEventReader: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasNext()
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.util.EventReaderDelegate r0;
        boolean $z0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        javax.xml.stream.XMLEventReader $r1;
        java.lang.Object $r2;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public javax.xml.stream.events.XMLEvent nextEvent() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        return $r2;
    }

    public javax.xml.stream.events.XMLEvent nextTag() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextTag()>();

        return $r2;
    }

    public javax.xml.stream.events.XMLEvent peek() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        return $r2;
    }

    public void remove()
    {
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.util.EventReaderDelegate r0;

        r0 := @this: javax.xml.stream.util.EventReaderDelegate;

        $r1 = r0.<javax.xml.stream.util.EventReaderDelegate: javax.xml.stream.XMLEventReader reader>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
