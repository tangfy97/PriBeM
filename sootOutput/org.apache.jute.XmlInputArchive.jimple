class org.apache.jute.XmlInputArchive extends java.lang.Object implements org.apache.jute.InputArchive
{
    private java.util.ArrayList valList;
    private int vLen;
    private int vIdx;

    private org.apache.jute.XmlInputArchive$Value next() throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value r4;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r1;
        java.util.ArrayList $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;

        r0 := @this: org.apache.jute.XmlInputArchive;

        $i1 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        $i0 = r0.<org.apache.jute.XmlInputArchive: int vLen>;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList>;

        $i2 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r4 = (org.apache.jute.XmlInputArchive$Value) $r3;

        $r5 = r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList>;

        $i3 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i3, null);

        $i4 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        $i5 = $i4 + 1;

        r0.<org.apache.jute.XmlInputArchive: int vIdx> = $i5;

        return r4;

     label1:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Error in deserialization.");

        throw $r1;
    }

    static org.apache.jute.XmlInputArchive getArchive(java.io.InputStream) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.jute.XmlInputArchive $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.apache.jute.XmlInputArchive;

        specialinvoke $r0.<org.apache.jute.XmlInputArchive: void <init>(java.io.InputStream)>(r1);

        return $r0;
    }

    public void <init>(java.io.InputStream) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.jute.XmlInputArchive$XMLParser $r2;
        org.apache.jute.XmlInputArchive r0;
        javax.xml.parsers.SAXParserFactory $r4;
        java.util.ArrayList $r1, $r3, $r7;
        javax.xml.parsers.SAXParser $r5;
        int $i0;
        java.io.InputStream r6;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r6 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList> = $r1;

        $r2 = new org.apache.jute.XmlInputArchive$XMLParser;

        $r3 = r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList>;

        specialinvoke $r2.<org.apache.jute.XmlInputArchive$XMLParser: void <init>(java.util.ArrayList,org.apache.jute.XmlInputArchive$1)>($r3, null);

        $r4 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        virtualinvoke $r5.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>(r6, $r2);

        $r7 = r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        r0.<org.apache.jute.XmlInputArchive: int vLen> = $i0;

        r0.<org.apache.jute.XmlInputArchive: int vIdx> = 0;

        return;
    }

    public byte readByte(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r5;
        byte $b0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r3, $r4, r8, $r11;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r8 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "ex:i1";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $b0 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r4);

        return $b0;
    }

    public boolean readBool(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r2, $r3, $r4, $r5, r9, $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r9 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "boolean";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r4 = "1";

        $r5 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z1;
    }

    public int readInt(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, r10, $r13;
        boolean $z0, $z1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r10 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "i4";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = "int";

        $r6 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label1;

        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        return $i0;
    }

    public long readLong(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        long $l0;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r3, $r4, r8, $r11;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r8 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "ex:i8";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        return $l0;
    }

    public float readFloat(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r5;
        float $f0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r3, $r4, r8, $r11;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r8 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "ex:float";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        return $f0;
    }

    public double readDouble(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r3, $r4, r8, $r11;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r8 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "double";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        return $d0;
    }

    public java.lang.String readString(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r2, $r3, $r4, $r5, r9, $r12;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r9 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "string";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $r5 = staticinvoke <org.apache.jute.Utils: java.lang.String fromXMLString(java.lang.String)>($r4);

        return $r5;
    }

    public byte[] readBuffer(java.lang.String) throws java.io.IOException
    {
        byte[] $r5;
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r2, $r3, $r4, r9, $r12;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r9 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "string";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r4 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getValue()>();

        $r5 = staticinvoke <org.apache.jute.Utils: byte[] fromXMLBuffer(java.lang.String)>($r4);

        return $r5;
    }

    public void readRecord(org.apache.jute.Record, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.Record r0;
        java.lang.String r2;
        org.apache.jute.XmlInputArchive r1;

        r1 := @this: org.apache.jute.XmlInputArchive;

        r0 := @parameter0: org.apache.jute.Record;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.Record: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r1, r2);

        return;
    }

    public void startRecord(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r2, $r3, r7, $r10;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r7 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "struct";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        return;
    }

    public void endRecord(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String $r2, $r3, r7, $r10;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r7 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "/struct";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        return;
    }

    public org.apache.jute.Index startVector(java.lang.String) throws java.io.IOException
    {
        org.apache.jute.XmlInputArchive$Value $r1;
        org.apache.jute.XmlInputArchive r0;
        org.apache.jute.XmlInputArchive$XmlIndex $r4;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r2, $r3, r8, $r11;
        boolean $z0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r8 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.XmlInputArchive$Value next()>();

        $r2 = "array";

        $r3 = virtualinvoke $r1.<org.apache.jute.XmlInputArchive$Value: java.lang.String getType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error deserializing ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r4 = new org.apache.jute.XmlInputArchive$XmlIndex;

        specialinvoke $r4.<org.apache.jute.XmlInputArchive$XmlIndex: void <init>(org.apache.jute.XmlInputArchive,org.apache.jute.XmlInputArchive$1)>(r0, null);

        return $r4;
    }

    public void endVector(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.jute.XmlInputArchive r0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public org.apache.jute.Index startMap(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.jute.XmlInputArchive r0;
        org.apache.jute.Index $r2;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jute.XmlInputArchive: org.apache.jute.Index startVector(java.lang.String)>(r1);

        return $r2;
    }

    public void endMap(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.jute.XmlInputArchive r0;

        r0 := @this: org.apache.jute.XmlInputArchive;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.jute.XmlInputArchive: void endVector(java.lang.String)>(r1);

        return;
    }

    static int access$000(org.apache.jute.XmlInputArchive)
    {
        int $i0;
        org.apache.jute.XmlInputArchive r0;

        r0 := @parameter0: org.apache.jute.XmlInputArchive;

        $i0 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        return $i0;
    }

    static java.util.ArrayList access$100(org.apache.jute.XmlInputArchive)
    {
        org.apache.jute.XmlInputArchive r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.apache.jute.XmlInputArchive;

        $r1 = r0.<org.apache.jute.XmlInputArchive: java.util.ArrayList valList>;

        return $r1;
    }

    static int access$008(org.apache.jute.XmlInputArchive)
    {
        int $i0, $i1;
        org.apache.jute.XmlInputArchive r0;

        r0 := @parameter0: org.apache.jute.XmlInputArchive;

        $i0 = r0.<org.apache.jute.XmlInputArchive: int vIdx>;

        $i1 = $i0 + 1;

        r0.<org.apache.jute.XmlInputArchive: int vIdx> = $i1;

        return $i0;
    }
}
