public final class org.waveprotocol.box.server.rpc.UserRegistrationServlet extends javax.servlet.http.HttpServlet
{
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final java.lang.String domain;
    private final org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot welcomeBot;
    private final boolean registrationDisabled;
    private final java.lang.String analyticsAccount;
    private final org.waveprotocol.wave.util.logging.Log LOG;

    public void <init>(org.waveprotocol.box.server.persistence.AccountStore, java.lang.String, org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot, boolean, java.lang.String)
    {
        org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot r4;
        org.waveprotocol.wave.util.logging.Log $r1;
        org.waveprotocol.box.server.persistence.AccountStore r2;
        java.lang.String r3, r5;
        org.waveprotocol.box.server.rpc.UserRegistrationServlet r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.server.rpc.UserRegistrationServlet;

        r2 := @parameter0: org.waveprotocol.box.server.persistence.AccountStore;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot;

        z0 := @parameter3: boolean;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/rpc/UserRegistrationServlet;");

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.wave.util.logging.Log LOG> = $r1;

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.box.server.persistence.AccountStore accountStore> = r2;

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String domain> = r3;

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot welcomeBot> = r4;

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: boolean registrationDisabled> = z0;

        r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String analyticsAccount> = r5;

        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        java.util.Locale $r2;
        javax.servlet.http.HttpServletResponse r3;
        org.waveprotocol.box.server.rpc.UserRegistrationServlet r0;

        r0 := @this: org.waveprotocol.box.server.rpc.UserRegistrationServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        specialinvoke r0.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: void writeRegistrationPage(java.lang.String,java.lang.String,java.util.Locale,javax.servlet.http.HttpServletResponse)>("", "NONE", $r2, r3);

        return;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r0;
        java.util.Locale $r3;
        java.lang.String $r4, $r5, r6, r7;
        org.waveprotocol.box.server.rpc.UserRegistrationServlet r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.server.rpc.UserRegistrationServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setCharacterEncoding(java.lang.String)>("UTF-8");

        r6 = null;

        $z0 = r1.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: boolean registrationDisabled>;

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("address");

        $r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("password");

        r6 = specialinvoke r1.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String tryCreateUser(java.lang.String,java.lang.String)>($r4, $r5);

     label1:
        if r6 != null goto label2;

        $z1 = r1.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: boolean registrationDisabled>;

        if $z1 == 0 goto label3;

     label2:
        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(403);

        r7 = "FAILED";

        goto label4;

     label3:
        r6 = "Registration complete.";

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        r7 = "SUCCESS";

     label4:
        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        specialinvoke r1.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: void writeRegistrationPage(java.lang.String,java.lang.String,java.util.Locale,javax.servlet.http.HttpServletResponse)>(r6, r7, $r3, r2);

        return;
    }

    private java.lang.String tryCreateUser(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r22, r50;
        org.waveprotocol.wave.util.logging.Log $r31, $r37, $r43;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r23, $r24, $r26, $r27, $r30, $r32, $r33, $r36, $r38, $r39, $r42, $r44, $r45;
        org.waveprotocol.box.server.rpc.UserRegistrationServlet r5;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r47;
        org.waveprotocol.box.server.account.HumanAccountDataImpl $r17;
        org.waveprotocol.box.server.account.AccountData $r16;
        java.lang.String[] $r11;
        org.waveprotocol.box.server.persistence.PersistenceException $r35, $r41;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r25, $r28, $r34, $r40, $r46, r48, r49;
        org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot $r21;
        java.io.IOException $r29;
        char[] $r19;
        org.waveprotocol.box.server.persistence.AccountStore $r15, $r20;
        org.waveprotocol.box.server.authentication.PasswordDigest $r18;

        r5 := @this: org.waveprotocol.box.server.rpc.UserRegistrationServlet;

        r48 := @parameter0: java.lang.String;

        r49 := @parameter1: java.lang.String;

     label01:
        if r48 != null goto label03;

     label02:
        return "Username portion of address cannot be empty";

     label03:
        $r0 = virtualinvoke r48.<java.lang.String: java.lang.String trim()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 == 0 goto label04;

        r50 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>($r1);

        goto label05;

     label04:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r6 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String domain>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>($r8);

     label05:
        $r9 = virtualinvoke r50.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("@");

        if $i0 >= 1 goto label07;

     label06:
        return "Username portion of address cannot be empty";

     label07:
        $r10 = virtualinvoke r50.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        $i1 = lengthof $r11;

        if $i1 != 2 goto label08;

        $r12 = $r11[0];

        $z1 = virtualinvoke $r12.<java.lang.String: boolean matches(java.lang.String)>("[\\w\\.]+");

        if $z1 != 0 goto label09;

     label08:
        return "Only letters (a-z), numbers (0-9), and periods (.) are allowed in Username";

     label09:
        $r13 = virtualinvoke r50.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getDomain()>();

        $r14 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String domain>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label11;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You can only create users at the ");

        $r25 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String domain>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" domain");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r28;

     label11:
        goto label13;

     label12:
        $r47 := @caughtexception;

        return "Invalid username";

     label13:
        $r15 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        $r16 = interfaceinvoke $r15.<org.waveprotocol.box.server.persistence.AccountStore: org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId)>(r50);

        if $r16 == null goto label15;

     label14:
        return "Account already exists";

     label15:
        goto label17;

     label16:
        $r41 := @caughtexception;

        $r43 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retreive account data for ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r46, $r41);

        return "An unexpected error occured while trying to retrieve account status";

     label17:
        if r49 != null goto label18;

        r49 = "";

     label18:
        $r17 = new org.waveprotocol.box.server.account.HumanAccountDataImpl;

        $r18 = new org.waveprotocol.box.server.authentication.PasswordDigest;

        $r19 = virtualinvoke r49.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r18.<org.waveprotocol.box.server.authentication.PasswordDigest: void <init>(char[])>($r19);

        specialinvoke $r17.<org.waveprotocol.box.server.account.HumanAccountDataImpl: void <init>(org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.box.server.authentication.PasswordDigest)>(r50, $r18);

     label19:
        $r20 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        interfaceinvoke $r20.<org.waveprotocol.box.server.persistence.AccountStore: void putAccount(org.waveprotocol.box.server.account.AccountData)>($r17);

     label20:
        goto label22;

     label21:
        $r35 := @caughtexception;

        $r37 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new account for ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r40, $r35);

        return "An unexpected error occured while trying to create the account";

     label22:
        $r21 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot welcomeBot>;

        $r22 = virtualinvoke $r17.<org.waveprotocol.box.server.account.HumanAccountDataImpl: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        virtualinvoke $r21.<org.waveprotocol.box.server.robots.agent.welcome.WelcomeRobot: void greet(org.waveprotocol.wave.model.wave.ParticipantId)>($r22);

     label23:
        goto label25;

     label24:
        $r29 := @caughtexception;

        $r31 = r5.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: org.waveprotocol.wave.util.logging.Log LOG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create a welcome wavelet for ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r34, $r29);

     label25:
        return null;

        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label01 to label02 with label12;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label03 to label06 with label12;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label07 to label08 with label12;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label09 to label10 with label12;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label13 to label14 with label16;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label24;
    }

    private void writeRegistrationPage(java.lang.String, java.lang.String, java.util.Locale, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        java.io.PrintWriter $r1;
        javax.servlet.http.HttpServletResponse r0;
        com.google.gxp.base.GxpContext $r2;
        java.util.Locale r3;
        java.lang.Boolean $r8;
        java.lang.String r5, r6, $r7, $r9;
        org.waveprotocol.box.server.rpc.UserRegistrationServlet r4;
        boolean $z0;

        r4 := @this: org.waveprotocol.box.server.rpc.UserRegistrationServlet;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Locale;

        r0 := @parameter3: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setCharacterEncoding(java.lang.String)>("UTF-8");

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/html;charset=utf-8");

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        $r2 = new com.google.gxp.base.GxpContext;

        specialinvoke $r2.<com.google.gxp.base.GxpContext: void <init>(java.util.Locale)>(r3);

        $r7 = r4.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String domain>;

        $z0 = r4.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: boolean registrationDisabled>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r9 = r4.<org.waveprotocol.box.server.rpc.UserRegistrationServlet: java.lang.String analyticsAccount>;

        staticinvoke <org.waveprotocol.box.server.gxp.UserRegistrationPage: void write(java.lang.Appendable,com.google.gxp.base.GxpContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String)>($r1, $r2, $r7, r5, r6, $r8, $r9);

        return;
    }
}
