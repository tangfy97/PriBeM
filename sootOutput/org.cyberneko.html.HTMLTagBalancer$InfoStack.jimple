public class org.cyberneko.html.HTMLTagBalancer$InfoStack extends java.lang.Object
{
    public int top;
    public org.cyberneko.html.HTMLTagBalancer$Info[] data;

    public void <init>()
    {
        org.cyberneko.html.HTMLTagBalancer$InfoStack r0;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer$InfoStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.cyberneko.html.HTMLTagBalancer$Info)[10];

        r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data> = $r1;

        return;
    }

    public void push(org.cyberneko.html.HTMLTagBalancer$Info)
    {
        org.cyberneko.html.HTMLTagBalancer$Info r3;
        org.cyberneko.html.HTMLTagBalancer$InfoStack r0;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r1, $r2, r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer$InfoStack;

        r3 := @parameter0: org.cyberneko.html.HTMLTagBalancer$Info;

        $i1 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i4 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i5 = $i4 + 10;

        r4 = newarray (org.cyberneko.html.HTMLTagBalancer$Info)[$i5];

        $r5 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i6 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i6);

        r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data> = r4;

     label1:
        $r2 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i2 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i3 = $i2 + 1;

        r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top> = $i3;

        $r2[$i2] = r3;

        return;
    }

    public org.cyberneko.html.HTMLTagBalancer$Info peek()
    {
        org.cyberneko.html.HTMLTagBalancer$Info $r2;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r1;
        org.cyberneko.html.HTMLTagBalancer$InfoStack r0;
        int $i0, $i1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer$InfoStack;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i0 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public org.cyberneko.html.HTMLTagBalancer$Info pop()
    {
        org.cyberneko.html.HTMLTagBalancer$Info $r2;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r1;
        org.cyberneko.html.HTMLTagBalancer$InfoStack r0;
        int $i0, $i1;

        r0 := @this: org.cyberneko.html.HTMLTagBalancer$InfoStack;

        $r1 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $i0 = r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        $i1 = $i0 - 1;

        r0.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top> = $i1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public java.lang.String toString()
    {
        org.cyberneko.html.HTMLTagBalancer$Info $r4;
        org.cyberneko.html.HTMLTagBalancer$InfoStack r1;
        java.lang.StringBuffer $r5;
        org.cyberneko.html.HTMLTagBalancer$Info[] $r3;
        int $i0, i1, $i3;
        java.lang.String $r2;

        r1 := @this: org.cyberneko.html.HTMLTagBalancer$InfoStack;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("InfoStack(");

        $i0 = r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: int top>;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r1.<org.cyberneko.html.HTMLTagBalancer$InfoStack: org.cyberneko.html.HTMLTagBalancer$Info[] data>;

        $r4 = $r3[i1];

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        if i1 == 0 goto label2;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
