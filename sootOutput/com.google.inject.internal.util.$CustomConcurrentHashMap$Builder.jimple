final class com.google.inject.internal.util.$CustomConcurrentHashMap$Builder extends java.lang.Object
{
    float loadFactor;
    int initialCapacity;
    int concurrencyLevel;

    void <init>()
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: float loadFactor> = 0.75F;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: int initialCapacity> = 16;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: int concurrencyLevel> = 16;

        return;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$Builder loadFactor(float)
    {
        byte $b0;
        int $i1;
        float f0;
        java.lang.IllegalArgumentException $r2;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        $i1 = (int) $b0;

        if $i1 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: float loadFactor> = f0;

        return r0;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$Builder initialCapacity(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: int initialCapacity> = i0;

        return r0;
    }

    public com.google.inject.internal.util.$CustomConcurrentHashMap$Builder concurrencyLevel(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: int concurrencyLevel> = i0;

        return r0;
    }

    public java.util.concurrent.ConcurrentMap buildMap(com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r2;
        java.lang.NullPointerException $r3;

        r2 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("strategy");

        throw $r3;

     label1:
        $r1 = new com.google.inject.internal.util.$CustomConcurrentHashMap$Impl;

        specialinvoke $r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy,com.google.inject.internal.util.$CustomConcurrentHashMap$Builder)>(r0, r2);

        return $r1;
    }

    public java.util.concurrent.ConcurrentMap buildComputingMap(com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy, com.google.inject.internal.util.$Function)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl $r2;
        com.google.inject.internal.util.$Function r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Builder r3;
        java.lang.NullPointerException $r4, $r5;

        r3 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder;

        r0 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy;

        r1 := @parameter1: com.google.inject.internal.util.$Function;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("strategy");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("computer");

        throw $r4;

     label2:
        $r2 = new com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl;

        specialinvoke $r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy,com.google.inject.internal.util.$CustomConcurrentHashMap$Builder,com.google.inject.internal.util.$Function)>(r0, r3, r1);

        return $r2;
    }
}
