public final class kodkod.engine.bool.BooleanConstant extends kodkod.engine.bool.BooleanValue
{
    final int label;
    public static final kodkod.engine.bool.BooleanConstant TRUE;
    public static final kodkod.engine.bool.BooleanConstant FALSE;

    static void <clinit>()
    {
        kodkod.engine.bool.BooleanConstant $r0, $r1;

        $r0 = new kodkod.engine.bool.BooleanConstant;

        specialinvoke $r0.<kodkod.engine.bool.BooleanConstant: void <init>(boolean)>(1);

        <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant TRUE> = $r0;

        $r1 = new kodkod.engine.bool.BooleanConstant;

        specialinvoke $r1.<kodkod.engine.bool.BooleanConstant: void <init>(boolean)>(0);

        <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant FALSE> = $r1;

        return;
    }

    private void <init>(boolean)
    {
        int $i0;
        kodkod.engine.bool.BooleanConstant r0;
        boolean z0;

        r0 := @this: kodkod.engine.bool.BooleanConstant;

        z0 := @parameter0: boolean;

        specialinvoke r0.<kodkod.engine.bool.BooleanValue: void <init>()>();

        if z0 == 0 goto label1;

        $i0 = 2147483647;

        goto label2;

     label1:
        $i0 = -2147483647;

     label2:
        r0.<kodkod.engine.bool.BooleanConstant: int label> = $i0;

        return;
    }

    kodkod.engine.bool.BooleanValue negation()
    {
        kodkod.engine.bool.BooleanConstant r0, $r1, $r2;

        r0 := @this: kodkod.engine.bool.BooleanConstant;

        $r1 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant TRUE>;

        if r0 != $r1 goto label1;

        $r2 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant FALSE>;

        goto label2;

     label1:
        $r2 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant TRUE>;

     label2:
        return $r2;
    }

    public boolean booleanValue()
    {
        int $i0;
        kodkod.engine.bool.BooleanConstant r0;

        r0 := @this: kodkod.engine.bool.BooleanConstant;

        $i0 = r0.<kodkod.engine.bool.BooleanConstant: int label>;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static kodkod.engine.bool.BooleanConstant constant(boolean)
    {
        kodkod.engine.bool.BooleanConstant $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant TRUE>;

        goto label2;

     label1:
        $r0 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant FALSE>;

     label2:
        return $r0;
    }

    public int label()
    {
        int $i0;
        kodkod.engine.bool.BooleanConstant r0;

        r0 := @this: kodkod.engine.bool.BooleanConstant;

        $i0 = r0.<kodkod.engine.bool.BooleanConstant: int label>;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.String $r1;
        kodkod.engine.bool.BooleanConstant r0;

        r0 := @this: kodkod.engine.bool.BooleanConstant;

        $i0 = r0.<kodkod.engine.bool.BooleanConstant: int label>;

        if $i0 <= 0 goto label1;

        $r1 = "T";

        goto label2;

     label1:
        $r1 = "F";

     label2:
        return $r1;
    }

    public kodkod.engine.bool.Operator op()
    {
        kodkod.engine.bool.BooleanConstant r1;
        kodkod.engine.bool.Operator $r0;

        r1 := @this: kodkod.engine.bool.BooleanConstant;

        $r0 = <kodkod.engine.bool.Operator: kodkod.engine.bool.Operator CONST>;

        return $r0;
    }
}
