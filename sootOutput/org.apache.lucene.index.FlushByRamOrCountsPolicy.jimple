class org.apache.lucene.index.FlushByRamOrCountsPolicy extends org.apache.lucene.index.FlushPolicy
{

    void <init>()
    {
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        specialinvoke r0.<org.apache.lucene.index.FlushPolicy: void <init>()>();

        return;
    }

    public void onDelete(org.apache.lucene.index.DocumentsWriterFlushControl, org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        org.apache.lucene.index.LiveIndexWriterConfig $r2, $r9, $r12;
        long $l0, $l2;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;
        org.apache.lucene.index.DocumentsWriter $r16;
        byte $b1;
        int $i3, $i4, $i5;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r13;
        java.lang.String $r11;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4;
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;
        org.apache.lucene.util.SetOnce $r14;
        org.apache.lucene.util.InfoStream $r3, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r17;
        java.lang.Object $r15;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterFlushControl;

        r13 := @parameter1: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: boolean flushOnDeleteTerms()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $i3 = virtualinvoke $r12.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDeleteTerms()>();

        $i4 = virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: int getNumGlobalTermDeletes()>();

        if $i4 < $i3 goto label1;

        virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: void setApplyAllDeletes()>();

     label1:
        $r14 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.util.SetOnce writer>;

        $r15 = virtualinvoke $r14.<org.apache.lucene.util.SetOnce: java.lang.Object get()>();

        $r16 = (org.apache.lucene.index.DocumentsWriter) $r15;

        $z2 = virtualinvoke r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: boolean flushOnRAM()>();

        if $z2 == 0 goto label2;

        $l0 = virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        $d0 = (double) $l0;

        $r2 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $d1 = virtualinvoke $r2.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $d2 = 1048576.0 * $d1;

        $b1 = $d0 cmpl $d2;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

        virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: void setApplyAllDeletes()>();

        $r3 = $r16.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("FP");

        if $z1 == 0 goto label2;

        $r5 = $r16.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("force apply deletes bytesUsed=");

        $l2 = virtualinvoke r1.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ramBuffer=");

        $r9 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $d3 = virtualinvoke $r9.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $d4 = 1048576.0 * $d3;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("FP", $r11);

     label2:
        return;
    }

    public void onInsert(org.apache.lucene.index.DocumentsWriterFlushControl, org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)
    {
        org.apache.lucene.index.DocumentsWriter r5;
        byte $b4;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.InfoStream $r6, $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r19;
        org.apache.lucene.index.LiveIndexWriterConfig $r1, $r18;
        long l0, $l1, $l2, l3, $l5, $l6;
        org.apache.lucene.index.DocumentsWriterFlushControl r2;
        int $i7, $i8, $i9;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r7;
        java.lang.String $r16;
        org.apache.lucene.index.DocumentsWriterPerThread $r17;
        double $d0, $d1, $d2;
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;
        org.apache.lucene.util.SetOnce $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        r2 := @parameter0: org.apache.lucene.index.DocumentsWriterFlushControl;

        r7 := @parameter1: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: boolean flushOnDocCount()>();

        if $z0 == 0 goto label1;

        $r17 = r7.<org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState: org.apache.lucene.index.DocumentsWriterPerThread dwpt>;

        $i7 = virtualinvoke $r17.<org.apache.lucene.index.DocumentsWriterPerThread: int getNumDocsInRAM()>();

        $r18 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $i8 = virtualinvoke $r18.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDocs()>();

        if $i7 < $i8 goto label1;

        virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: void setFlushPending(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r7);

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: boolean flushOnRAM()>();

        if $z1 == 0 goto label3;

        $r1 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $d0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $d1 = $d0 * 1024.0;

        $d2 = $d1 * 1024.0;

        l0 = (long) $d2;

        $l1 = virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes()>();

        $l2 = virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        l3 = $l1 + $l2;

        $b4 = l3 cmp l0;

        $i9 = (int) $b4;

        if $i9 < 0 goto label3;

        $r3 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.util.SetOnce writer>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.util.SetOnce: java.lang.Object get()>();

        r5 = (org.apache.lucene.index.DocumentsWriter) $r4;

        $r6 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("FP");

        if $z2 == 0 goto label2;

        $r9 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flush: activeBytes=");

        $l5 = virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long activeBytes()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleteBytes=");

        $l6 = virtualinvoke r2.<org.apache.lucene.index.DocumentsWriterFlushControl: long getDeleteBytesUsed()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs limit=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("FP", $r16);

     label2:
        virtualinvoke r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: void markLargestWriterPending(org.apache.lucene.index.DocumentsWriterFlushControl,org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState,long)>(r2, r7, l3);

     label3:
        return;
    }

    protected void markLargestWriterPending(org.apache.lucene.index.DocumentsWriterFlushControl, org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState, long)
    {
        org.apache.lucene.index.FlushByRamOrCountsPolicy r1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState r2, $r3;
        long l0;
        org.apache.lucene.index.DocumentsWriterFlushControl r0;

        r1 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterFlushControl;

        r2 := @parameter1: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState;

        l0 := @parameter2: long;

        $r3 = virtualinvoke r1.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState findLargestNonPendingWriter(org.apache.lucene.index.DocumentsWriterFlushControl,org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>(r0, r2);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl: void setFlushPending(org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState)>($r3);

        return;
    }

    protected boolean flushOnDocCount()
    {
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;
        org.apache.lucene.index.LiveIndexWriterConfig $r1;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        $r1 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDocs()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean flushOnDeleteTerms()
    {
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;
        org.apache.lucene.index.LiveIndexWriterConfig $r1;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        $r1 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: int getMaxBufferedDeleteTerms()>();

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean flushOnRAM()
    {
        org.apache.lucene.index.FlushByRamOrCountsPolicy r0;
        org.apache.lucene.index.LiveIndexWriterConfig $r1;
        byte $b0;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FlushByRamOrCountsPolicy;

        $r1 = r0.<org.apache.lucene.index.FlushByRamOrCountsPolicy: org.apache.lucene.index.LiveIndexWriterConfig indexWriterConfig>;

        $d0 = virtualinvoke $r1.<org.apache.lucene.index.LiveIndexWriterConfig: double getRAMBufferSizeMB()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
