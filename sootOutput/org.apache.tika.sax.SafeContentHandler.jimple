public class org.apache.tika.sax.SafeContentHandler extends org.apache.tika.sax.ContentHandlerDecorator
{
    private static final char[] REPLACEMENT;
    private final org.apache.tika.sax.SafeContentHandler$Output charactersOutput;
    private final org.apache.tika.sax.SafeContentHandler$Output ignorableWhitespaceOutput;

    public void <init>(org.xml.sax.ContentHandler)
    {
        org.apache.tika.sax.SafeContentHandler r0;
        org.apache.tika.sax.SafeContentHandler$1 $r2;
        org.xml.sax.ContentHandler r1;
        org.apache.tika.sax.SafeContentHandler$2 $r3;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void <init>(org.xml.sax.ContentHandler)>(r1);

        $r2 = new org.apache.tika.sax.SafeContentHandler$1;

        specialinvoke $r2.<org.apache.tika.sax.SafeContentHandler$1: void <init>(org.apache.tika.sax.SafeContentHandler)>(r0);

        r0.<org.apache.tika.sax.SafeContentHandler: org.apache.tika.sax.SafeContentHandler$Output charactersOutput> = $r2;

        $r3 = new org.apache.tika.sax.SafeContentHandler$2;

        specialinvoke $r3.<org.apache.tika.sax.SafeContentHandler$2: void <init>(org.apache.tika.sax.SafeContentHandler)>(r0);

        r0.<org.apache.tika.sax.SafeContentHandler: org.apache.tika.sax.SafeContentHandler$Output ignorableWhitespaceOutput> = $r3;

        return;
    }

    private void filter(char[], int, int, org.apache.tika.sax.SafeContentHandler$Output) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r2;
        org.apache.tika.sax.SafeContentHandler$Output r0;
        int i0, i1, $i2, $i3, $i4, i5, $i6, i7, i8;
        char[] r1;
        boolean $z0;

        r2 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: char[];

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: org.apache.tika.sax.SafeContentHandler$Output;

        i1 = i7 + i0;

        i8 = i7;

     label1:
        if i8 >= i1 goto label4;

        $i3 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>(r1, i8, i1);

        $i4 = staticinvoke <java.lang.Character: int charCount(int)>($i3);

        i5 = i8 + $i4;

        $z0 = virtualinvoke r2.<org.apache.tika.sax.SafeContentHandler: boolean isInvalid(int)>($i3);

        if $z0 == 0 goto label3;

        if i8 <= i7 goto label2;

        $i6 = i8 - i7;

        interfaceinvoke r0.<org.apache.tika.sax.SafeContentHandler$Output: void write(char[],int,int)>(r1, i7, $i6);

     label2:
        virtualinvoke r2.<org.apache.tika.sax.SafeContentHandler: void writeReplacement(org.apache.tika.sax.SafeContentHandler$Output)>(r0);

        i7 = i5;

     label3:
        i8 = i5;

        goto label1;

     label4:
        $i2 = i1 - i7;

        interfaceinvoke r0.<org.apache.tika.sax.SafeContentHandler$Output: void write(char[],int,int)>(r1, i7, $i2);

        return;
    }

    private boolean isInvalid(java.lang.String)
    {
        org.apache.tika.sax.SafeContentHandler r2;
        int $i0, $i1, $i2, i3;
        char[] $r1;
        java.lang.String r0;
        boolean $z0;

        r2 := @this: org.apache.tika.sax.SafeContentHandler;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $i1 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r1, i3);

        $z0 = virtualinvoke r2.<org.apache.tika.sax.SafeContentHandler: boolean isInvalid(int)>($i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2 = staticinvoke <java.lang.Character: int charCount(int)>($i1);

        i3 = i3 + $i2;

        goto label1;

     label3:
        return 0;
    }

    protected boolean isInvalid(int)
    {
        org.apache.tika.sax.SafeContentHandler r0;
        int i0, $i2, $i4, $i6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        i0 := @parameter0: int;

        if i0 >= 32 goto label03;

        if i0 == 9 goto label01;

        if i0 == 10 goto label01;

        if i0 == 13 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        return $z0;

     label03:
        $i2 = (int) 57344;

        if i0 >= $i2 goto label06;

        $i4 = (int) 55295;

        if i0 <= $i4 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        return $z1;

     label06:
        if i0 >= 65536 goto label09;

        $i6 = (int) 65533;

        if i0 <= $i6 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        return $z2;

     label09:
        if i0 <= 1114111 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        return $z3;
    }

    protected void writeReplacement(org.apache.tika.sax.SafeContentHandler$Output) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r3;
        org.apache.tika.sax.SafeContentHandler$Output r0;
        int $i0;
        char[] $r1, $r2;

        r3 := @this: org.apache.tika.sax.SafeContentHandler;

        r0 := @parameter0: org.apache.tika.sax.SafeContentHandler$Output;

        $r2 = <org.apache.tika.sax.SafeContentHandler: char[] REPLACEMENT>;

        $r1 = <org.apache.tika.sax.SafeContentHandler: char[] REPLACEMENT>;

        $i0 = lengthof $r1;

        interfaceinvoke r0.<org.apache.tika.sax.SafeContentHandler$Output: void write(char[],int,int)>($r2, 0, $i0);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        int $i0, $i1, $i2, i3, i4;
        org.xml.sax.Attributes r9;
        java.lang.String r1, r2, r3, $r4, $r6, r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        org.xml.sax.helpers.AttributesImpl $r5;
        org.apache.tika.sax.SafeContentHandler$StringOutput $r7;
        char[] $r8;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r9 := @parameter3: org.xml.sax.Attributes;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r9.<org.xml.sax.Attributes: int getLength()>();

        if i3 >= $i0 goto label6;

        $r4 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i3);

        $z0 = specialinvoke r0.<org.apache.tika.sax.SafeContentHandler: boolean isInvalid(java.lang.String)>($r4);

        if $z0 == 0 goto label5;

        $r5 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r5.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        i4 = 0;

     label2:
        $i1 = interfaceinvoke r9.<org.xml.sax.Attributes: int getLength()>();

        if i4 >= $i1 goto label4;

        $r6 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i4);

        r10 = $r6;

        if i4 < i3 goto label3;

        $z1 = specialinvoke r0.<org.apache.tika.sax.SafeContentHandler: boolean isInvalid(java.lang.String)>($r6);

        if $z1 == 0 goto label3;

        $r7 = new org.apache.tika.sax.SafeContentHandler$StringOutput;

        specialinvoke $r7.<org.apache.tika.sax.SafeContentHandler$StringOutput: void <init>(org.apache.tika.sax.SafeContentHandler$1)>(null);

        $r8 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        specialinvoke r0.<org.apache.tika.sax.SafeContentHandler: void filter(char[],int,int,org.apache.tika.sax.SafeContentHandler$Output)>($r8, 0, $i2, $r7);

        r10 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

     label3:
        $r11 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i4);

        $r12 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i4);

        $r13 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i4);

        $r14 = interfaceinvoke r9.<org.xml.sax.Attributes: java.lang.String getType(int)>(i4);

        virtualinvoke $r5.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r11, $r12, $r13, $r14, r10);

        i4 = i4 + 1;

        goto label2;

     label4:
        r9 = $r5;

        goto label6;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r9);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void endDocument()>();

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        org.apache.tika.sax.SafeContentHandler$Output $r2;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.tika.sax.SafeContentHandler: org.apache.tika.sax.SafeContentHandler$Output charactersOutput>;

        specialinvoke r0.<org.apache.tika.sax.SafeContentHandler: void filter(char[],int,int,org.apache.tika.sax.SafeContentHandler$Output)>(r1, i0, i1, $r2);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        org.apache.tika.sax.SafeContentHandler$Output $r2;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.tika.sax.SafeContentHandler: org.apache.tika.sax.SafeContentHandler$Output ignorableWhitespaceOutput>;

        specialinvoke r0.<org.apache.tika.sax.SafeContentHandler: void filter(char[],int,int,org.apache.tika.sax.SafeContentHandler$Output)>(r1, i0, i1, $r2);

        return;
    }

    static void access$001(org.apache.tika.sax.SafeContentHandler, char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        int i0, i1;
        char[] r1;

        r0 := @parameter0: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }

    static void access$101(org.apache.tika.sax.SafeContentHandler, char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SafeContentHandler r0;
        int i0, i1;
        char[] r1;

        r0 := @parameter0: org.apache.tika.sax.SafeContentHandler;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void ignorableWhitespace(char[],int,int)>(r1, i0, i1);

        return;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[1];

        $r0[0] = 65533;

        <org.apache.tika.sax.SafeContentHandler: char[] REPLACEMENT> = $r0;

        return;
    }
}
