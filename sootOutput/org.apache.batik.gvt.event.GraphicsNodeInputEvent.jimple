public abstract class org.apache.batik.gvt.event.GraphicsNodeInputEvent extends org.apache.batik.gvt.event.GraphicsNodeEvent
{
    public static final int SHIFT_MASK;
    public static final int CTRL_MASK;
    public static final int META_MASK;
    public static final int ALT_MASK;
    public static final int ALT_GRAPH_MASK;
    public static final int BUTTON1_MASK;
    public static final int BUTTON2_MASK;
    public static final int BUTTON3_MASK;
    public static final int CAPS_LOCK_MASK;
    public static final int NUM_LOCK_MASK;
    public static final int SCROLL_LOCK_MASK;
    public static final int KANA_LOCK_MASK;
    long when;
    int modifiers;
    int lockState;

    protected void <init>(org.apache.batik.gvt.GraphicsNode, int, long, int, int)
    {
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        org.apache.batik.gvt.GraphicsNode r1;
        int i0, i2, i3;
        long l1;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: void <init>(org.apache.batik.gvt.GraphicsNode,int)>(r1, i0);

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: long when> = l1;

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers> = i2;

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int lockState> = i3;

        return;
    }

    protected void <init>(org.apache.batik.gvt.GraphicsNode, java.awt.event.InputEvent, int)
    {
        java.awt.event.InputEvent r2;
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        org.apache.batik.gvt.GraphicsNode r1;
        int $i0, $i2, i3;
        long $l1;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r2 := @parameter1: java.awt.event.InputEvent;

        i3 := @parameter2: int;

        $i0 = virtualinvoke r2.<java.awt.AWTEvent: int getID()>();

        specialinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: void <init>(org.apache.batik.gvt.GraphicsNode,int)>(r1, $i0);

        $l1 = virtualinvoke r2.<java.awt.event.InputEvent: long getWhen()>();

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: long when> = $l1;

        $i2 = virtualinvoke r2.<java.awt.event.InputEvent: int getModifiers()>();

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers> = $i2;

        r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int lockState> = i3;

        return;
    }

    public boolean isShiftDown()
    {
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isControlDown()
    {
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMetaDown()
    {
        int $i0;
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        $z0 = staticinvoke <org.apache.batik.gvt.event.AWTEventDispatcher: boolean isMetaDown(int)>($i0);

        return $z0;
    }

    public boolean isAltDown()
    {
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAltGraphDown()
    {
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getWhen()
    {
        long $l0;
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $l0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: long when>;

        return $l0;
    }

    public int getModifiers()
    {
        int $i0;
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int modifiers>;

        return $i0;
    }

    public int getLockState()
    {
        int $i0;
        org.apache.batik.gvt.event.GraphicsNodeInputEvent r0;

        r0 := @this: org.apache.batik.gvt.event.GraphicsNodeInputEvent;

        $i0 = r0.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int lockState>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int KANA_LOCK_MASK> = 8;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int SCROLL_LOCK_MASK> = 4;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int NUM_LOCK_MASK> = 2;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int CAPS_LOCK_MASK> = 1;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int BUTTON3_MASK> = 4096;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int BUTTON2_MASK> = 2048;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int BUTTON1_MASK> = 1024;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int ALT_GRAPH_MASK> = 32;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int ALT_MASK> = 8;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int META_MASK> = 4;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int CTRL_MASK> = 2;

        <org.apache.batik.gvt.event.GraphicsNodeInputEvent: int SHIFT_MASK> = 1;

        return;
    }
}
