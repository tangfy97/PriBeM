public class org.apache.velocity.runtime.parser.node.ASTDirective extends org.apache.velocity.runtime.parser.node.SimpleNode
{
    private org.apache.velocity.runtime.directive.Directive directive;
    private java.lang.String directiveName;
    private boolean isDirective;
    private boolean isInitialized;

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName> = "";

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.Parser r1;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive> = null;

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName> = "";

        return;
    }

    public java.lang.Object jjtAccept(org.apache.velocity.runtime.parser.node.ParserVisitor, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ASTDirective r1;
        org.apache.velocity.runtime.parser.node.ParserVisitor r0;
        java.lang.Object r2, $r3;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<org.apache.velocity.runtime.parser.node.ParserVisitor: java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTDirective,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public synchronized java.lang.Object init(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.exception.TemplateInitException $r30, $r31, $r36, $r37;
        org.apache.velocity.runtime.directive.RuntimeMacro $r6;
        java.lang.Throwable $r33, $r39;
        java.lang.StringBuffer $r43, $r44, $r50, $r54, $r55, $r61;
        org.apache.velocity.runtime.parser.ParseException $r34, $r40;
        java.lang.String $r3, $r5, $r7, $r9, $r12, $r13, $r15, $r17, $r20, $r27, $r32, $r35, $r38, $r41, $r45, $r49, $r51, $r56, $r60, $r62;
        org.apache.velocity.context.InternalContextAdapter r2;
        java.lang.RuntimeException $r52, $r63;
        org.apache.velocity.runtime.parser.Parser $r4, $r21, $r46, $r57;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;
        java.lang.InstantiationException $r53;
        boolean $z0, $z1, $z2;
        java.lang.IllegalAccessException $r42;
        org.apache.velocity.runtime.RuntimeServices $r10, $r18, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        org.apache.velocity.runtime.directive.BlockMacro $r14;
        org.apache.velocity.runtime.directive.Directive $r8, $r11, $r16, $r19, $r22, $r25, $r26, $r29, $r47, $r58;
        java.lang.Object r1, $r24;
        java.lang.Class $r23, $r48, $r59;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        r2 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r1 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isInitialized>;

        if $z0 != 0 goto label18;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>(r2, r1);

        $r4 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.parser.Parser parser>;

        $r3 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $z1 = virtualinvoke $r4.<org.apache.velocity.runtime.parser.Parser: boolean isDirective(java.lang.String)>($r3);

        if $z1 == 0 goto label06;

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isDirective> = 1;

     label01:
        $r21 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.parser.Parser parser>;

        $r20 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $r22 = virtualinvoke $r21.<org.apache.velocity.runtime.parser.Parser: org.apache.velocity.runtime.directive.Directive getDirective(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.Object newInstance()>();

        $r25 = (org.apache.velocity.runtime.directive.Directive) $r24;

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive> = $r25;

     label02:
        goto label05;

     label03:
        $r53 := @caughtexception;

        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Couldn\'t initialize directive of class ");

        $r57 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.parser.Parser parser>;

        $r56 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $r58 = virtualinvoke $r57.<org.apache.velocity.runtime.parser.Parser: org.apache.velocity.runtime.directive.Directive getDirective(java.lang.String)>($r56);

        $r59 = virtualinvoke $r58.<java.lang.Object: java.lang.Class getClass()>();

        $r60 = virtualinvoke $r59.<java.lang.Class: java.lang.String getName()>();

        $r61 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        $r63 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.RuntimeException createRuntimeException(java.lang.String,java.lang.Throwable)>($r62, $r53);

        throw $r63;

     label04:
        $r42 := @caughtexception;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Couldn\'t initialize directive of class ");

        $r46 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.parser.Parser parser>;

        $r45 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $r47 = virtualinvoke $r46.<org.apache.velocity.runtime.parser.Parser: org.apache.velocity.runtime.directive.Directive getDirective(java.lang.String)>($r45);

        $r48 = virtualinvoke $r47.<java.lang.Object: java.lang.Class getClass()>();

        $r49 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        $r50 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        $r52 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.RuntimeException createRuntimeException(java.lang.String,java.lang.Throwable)>($r51, $r42);

        throw $r52;

     label05:
        $r26 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $i5 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getLine()>();

        $i6 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getColumn()>();

        $r27 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String getTemplateName()>();

        virtualinvoke $r26.<org.apache.velocity.runtime.directive.Directive: void setLocation(int,int,java.lang.String)>($i5, $i6, $r27);

        $r29 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $r28 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.RuntimeServices rsvc>;

        virtualinvoke $r29.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>($r28, r2, r0);

        goto label17;

     label06:
        $r5 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("@");

        if $z2 == 0 goto label12;

        $i2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int jjtGetNumChildren()>();

        if $i2 <= 0 goto label11;

        $r12 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>(1);

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName> = $r13;

        $r14 = new org.apache.velocity.runtime.directive.BlockMacro;

        $r15 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        specialinvoke $r14.<org.apache.velocity.runtime.directive.BlockMacro: void <init>(java.lang.String)>($r15);

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive> = $r14;

        $r16 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $i3 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getLine()>();

        $i4 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getColumn()>();

        $r17 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String getTemplateName()>();

        virtualinvoke $r16.<org.apache.velocity.runtime.directive.Directive: void setLocation(int,int,java.lang.String)>($i3, $i4, $r17);

     label07:
        $r19 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $r18 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.RuntimeServices rsvc>;

        virtualinvoke $r19.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>($r18, r2, r0);

     label08:
        goto label10;

     label09:
        $r36 := @caughtexception;

        $r37 = new org.apache.velocity.exception.TemplateInitException;

        $r38 = virtualinvoke $r36.<org.apache.velocity.exception.TemplateInitException: java.lang.String getMessage()>();

        $r39 = virtualinvoke $r36.<org.apache.velocity.exception.TemplateInitException: java.lang.Throwable getWrappedThrowable()>();

        $r40 = (org.apache.velocity.runtime.parser.ParseException) $r39;

        $r41 = virtualinvoke $r36.<org.apache.velocity.exception.TemplateInitException: java.lang.String getTemplateName()>();

        $i13 = virtualinvoke $r36.<org.apache.velocity.exception.TemplateInitException: int getColumnNumber()>();

        $i14 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getColumn()>();

        $i15 = $i13 + $i14;

        $i16 = virtualinvoke $r36.<org.apache.velocity.exception.TemplateInitException: int getLineNumber()>();

        $i17 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getLine()>();

        $i18 = $i16 + $i17;

        specialinvoke $r37.<org.apache.velocity.exception.TemplateInitException: void <init>(java.lang.String,org.apache.velocity.runtime.parser.ParseException,java.lang.String,int,int)>($r38, $r40, $r41, $i15, $i18);

        throw $r37;

     label10:
        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isDirective> = 1;

        goto label17;

     label11:
        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isDirective> = 0;

        goto label17;

     label12:
        $r6 = new org.apache.velocity.runtime.directive.RuntimeMacro;

        $r7 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        specialinvoke $r6.<org.apache.velocity.runtime.directive.RuntimeMacro: void <init>(java.lang.String)>($r7);

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive> = $r6;

        $r8 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $i0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getLine()>();

        $i1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getColumn()>();

        $r9 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String getTemplateName()>();

        virtualinvoke $r8.<org.apache.velocity.runtime.directive.Directive: void setLocation(int,int,java.lang.String)>($i0, $i1, $r9);

     label13:
        $r11 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        $r10 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.RuntimeServices rsvc>;

        virtualinvoke $r11.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>($r10, r2, r0);

     label14:
        goto label16;

     label15:
        $r30 := @caughtexception;

        $r31 = new org.apache.velocity.exception.TemplateInitException;

        $r32 = virtualinvoke $r30.<org.apache.velocity.exception.TemplateInitException: java.lang.String getMessage()>();

        $r33 = virtualinvoke $r30.<org.apache.velocity.exception.TemplateInitException: java.lang.Throwable getWrappedThrowable()>();

        $r34 = (org.apache.velocity.runtime.parser.ParseException) $r33;

        $r35 = virtualinvoke $r30.<org.apache.velocity.exception.TemplateInitException: java.lang.String getTemplateName()>();

        $i7 = virtualinvoke $r30.<org.apache.velocity.exception.TemplateInitException: int getColumnNumber()>();

        $i8 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getColumn()>();

        $i9 = $i7 + $i8;

        $i10 = virtualinvoke $r30.<org.apache.velocity.exception.TemplateInitException: int getLineNumber()>();

        $i11 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTDirective: int getLine()>();

        $i12 = $i10 + $i11;

        specialinvoke $r31.<org.apache.velocity.exception.TemplateInitException: void <init>(java.lang.String,org.apache.velocity.runtime.parser.ParseException,java.lang.String,int,int)>($r32, $r34, $r35, $i9, $i12);

        throw $r31;

     label16:
        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isDirective> = 1;

     label17:
        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isInitialized> = 1;

     label18:
        return r1;

        catch java.lang.InstantiationException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label04;
        catch org.apache.velocity.exception.TemplateInitException from label07 to label08 with label09;
        catch org.apache.velocity.exception.TemplateInitException from label13 to label14 with label15;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer) throws java.io.IOException, org.apache.velocity.exception.MethodInvocationException, org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.context.InternalContextAdapter r3;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;
        org.apache.velocity.runtime.directive.Directive $r4;
        java.io.Writer r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        r3 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r1 := @parameter1: java.io.Writer;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: boolean isDirective>;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: org.apache.velocity.runtime.directive.Directive directive>;

        virtualinvoke $r4.<org.apache.velocity.runtime.directive.Directive: boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)>(r3, r1, r0);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("#");

        $r2 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

     label2:
        return 1;
    }

    public void setDirectiveName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName> = r1;

        return;
    }

    public java.lang.String getDirectiveName()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.parser.node.ASTDirective r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        $r1 = r0.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String directiveName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.velocity.runtime.parser.node.ASTDirective r1;
        org.apache.commons.lang.builder.ToStringBuilder $r0, $r3, $r5;
        java.lang.String $r2, $r4, $r6;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTDirective;

        $r0 = new org.apache.commons.lang.builder.ToStringBuilder;

        specialinvoke $r0.<org.apache.commons.lang.builder.ToStringBuilder: void <init>(java.lang.Object)>(r1);

        $r2 = specialinvoke r1.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<org.apache.commons.lang.builder.ToStringBuilder: org.apache.commons.lang.builder.ToStringBuilder appendSuper(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<org.apache.velocity.runtime.parser.node.ASTDirective: java.lang.String getDirectiveName()>();

        $r5 = virtualinvoke $r3.<org.apache.commons.lang.builder.ToStringBuilder: org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object)>("directiveName", $r4);

        $r6 = virtualinvoke $r5.<org.apache.commons.lang.builder.ToStringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
