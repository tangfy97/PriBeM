public class org.codehaus.groovy.ant.Groovy extends org.apache.tools.ant.taskdefs.Java
{
    private static final java.lang.String PREFIX;
    private static final java.lang.String SUFFIX;
    private final org.codehaus.groovy.ant.LoggingHelper log;
    private java.util.Vector filesets;
    private java.io.File srcFile;
    private java.lang.String command;
    private java.io.File output;
    private boolean append;
    private org.apache.tools.ant.types.Path classpath;
    private boolean fork;
    private boolean includeAntRuntime;
    private boolean useGroovyShell;
    private org.codehaus.groovy.control.CompilerConfiguration configuration;
    private org.apache.tools.ant.types.Commandline cmdline;
    static java.lang.Class class$groovy$lang$GroovyShell;

    public void <init>()
    {
        org.apache.tools.ant.types.Commandline $r8;
        java.util.Vector $r6;
        org.apache.tools.ant.Task $r9;
        org.codehaus.groovy.ant.LoggingHelper $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r7;
        org.codehaus.groovy.ant.Groovy r0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: void <init>()>();

        $r5 = new org.codehaus.groovy.ant.LoggingHelper;

        $r9 = (org.apache.tools.ant.Task) r0;

        specialinvoke $r5.<org.codehaus.groovy.ant.LoggingHelper: void <init>(org.apache.tools.ant.Task)>($r9);

        r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log> = $r5;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovy: java.util.Vector filesets> = $r6;

        r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile> = null;

        r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command> = "";

        r0.<org.codehaus.groovy.ant.Groovy: java.io.File output> = null;

        r0.<org.codehaus.groovy.ant.Groovy: boolean append> = 0;

        r0.<org.codehaus.groovy.ant.Groovy: boolean fork> = 0;

        r0.<org.codehaus.groovy.ant.Groovy: boolean includeAntRuntime> = 1;

        r0.<org.codehaus.groovy.ant.Groovy: boolean useGroovyShell> = 0;

        $r7 = new org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke $r7.<org.codehaus.groovy.control.CompilerConfiguration: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.control.CompilerConfiguration configuration> = $r7;

        $r8 = new org.apache.tools.ant.types.Commandline;

        specialinvoke $r8.<org.apache.tools.ant.types.Commandline: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline> = $r8;

        return;
    }

    public void setFork(boolean)
    {
        org.codehaus.groovy.ant.Groovy r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovy: boolean fork> = z0;

        return;
    }

    public void setUseGroovyShell(boolean)
    {
        org.codehaus.groovy.ant.Groovy r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovy: boolean useGroovyShell> = z0;

        return;
    }

    public void setIncludeAntRuntime(boolean)
    {
        org.codehaus.groovy.ant.Groovy r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovy: boolean includeAntRuntime> = z0;

        return;
    }

    public void setStacktrace(boolean)
    {
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        org.codehaus.groovy.ant.Groovy r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: void setDebug(boolean)>(z0);

        return;
    }

    public void setSrc(java.io.File)
    {
        org.codehaus.groovy.ant.Groovy r0;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r1 := @parameter0: java.io.File;

        r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile> = r1;

        return;
    }

    public void addText(java.lang.String)
    {
        org.codehaus.groovy.ant.Groovy r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7, $r9, $r10;
        java.lang.String r3, $r6, $r8, $r11;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("addText(\'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: void log(java.lang.String,int)>($r6, 3);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command> = $r11;

        return;
    }

    public void addFileset(org.apache.tools.ant.types.FileSet)
    {
        java.util.Vector $r2;
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.FileSet r1;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r1 := @parameter0: org.apache.tools.ant.types.FileSet;

        $r2 = r0.<org.codehaus.groovy.ant.Groovy: java.util.Vector filesets>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public void setOutput(java.io.File)
    {
        org.codehaus.groovy.ant.Groovy r0;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r1 := @parameter0: java.io.File;

        r0.<org.codehaus.groovy.ant.Groovy: java.io.File output> = r1;

        return;
    }

    public void setAppend(boolean)
    {
        org.codehaus.groovy.ant.Groovy r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovy: boolean append> = z0;

        return;
    }

    public void setClasspath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path r1;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r1 := @parameter0: org.apache.tools.ant.types.Path;

        r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath> = r1;

        return;
    }

    public org.apache.tools.ant.types.Path createClasspath()
    {
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setClasspathRef(org.apache.tools.ant.types.Reference)
    {
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path $r1;
        org.apache.tools.ant.types.Reference r2;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r2 := @parameter0: org.apache.tools.ant.types.Reference;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path createClasspath()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r2);

        return;
    }

    public org.apache.tools.ant.types.Path getClasspath()
    {
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        return $r1;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        org.codehaus.groovy.ant.Groovy r0;
        java.util.Vector $r35, $r45, $r54;
        org.apache.tools.ant.DirectoryScanner $r39;
        java.lang.Throwable $r51, $r68, $r69, $r70, $r71;
        java.io.BufferedOutputStream $r61;
        java.lang.StringBuffer $r26, $r28, $r59;
        java.lang.String $r2, $r3, $r6, $r12, $r16, $r19, $r22, $r23, $r29, $r34, $r44, $r56;
        java.io.FileOutputStream $r60;
        java.io.IOException $r48;
        org.apache.tools.ant.BuildException $r57, $r58, $r66, $r67;
        java.io.File $r4, $r5, $r10, $r11, $r15, $r27, $r33, $r41, $r53;
        java.io.BufferedReader $r65;
        org.apache.tools.ant.types.Path $r7, $r63;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.Location $r18, $r43, $r47, $r50;
        org.apache.tools.ant.types.FileSet r37;
        int $i0, $i1, i2, $i3;
        org.apache.tools.ant.Project $r9, $r38, $r40;
        java.io.PrintStream $r21, $r52, r55, $r62;
        org.codehaus.groovy.ant.LoggingHelper $r1, $r20, $r25;
        java.lang.Object $r36;
        java.io.FileReader $r64;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>("execute()");

        $r2 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command> = $r3;

        $r4 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        if $r4 != null goto label01;

        $r44 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        $i1 = virtualinvoke $r44.<java.lang.String: int length()>();

        if $i1 != 0 goto label01;

        $r45 = r0.<org.codehaus.groovy.ant.Groovy: java.util.Vector filesets>;

        $z2 = virtualinvoke $r45.<java.util.Vector: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        $r57 = new org.apache.tools.ant.BuildException;

        $r47 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r57.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Source file does not exist!", $r47);

        $r68 = (java.lang.Throwable) $r57;

        throw $r68;

     label01:
        $r53 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        if $r53 == null goto label02;

        $r41 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        $z1 = virtualinvoke $r41.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label02;

        $r58 = new org.apache.tools.ant.BuildException;

        $r43 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r58.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Source file does not exist!", $r43);

        $r69 = (java.lang.Throwable) $r58;

        throw $r69;

     label02:
        i2 = 0;

     label03:
        $r54 = r0.<org.codehaus.groovy.ant.Groovy: java.util.Vector filesets>;

        $i3 = virtualinvoke $r54.<java.util.Vector: int size()>();

        if i2 >= $i3 goto label04;

        $r35 = r0.<org.codehaus.groovy.ant.Groovy: java.util.Vector filesets>;

        $r36 = virtualinvoke $r35.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r37 = (org.apache.tools.ant.types.FileSet) $r36;

        $r38 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        $r39 = virtualinvoke r37.<org.apache.tools.ant.types.FileSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r38);

        $r40 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        virtualinvoke r37.<org.apache.tools.ant.types.FileSet: java.io.File getDir(org.apache.tools.ant.Project)>($r40);

        virtualinvoke $r39.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        i2 = i2 + 1;

        goto label03;

     label04:
        r55 = <java.lang.System: java.io.PrintStream out>;

     label05:
        $r5 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File output>;

        if $r5 == null goto label06;

        $r25 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        $r59 = new java.lang.StringBuffer;

        specialinvoke $r59.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opening PrintStream to output file ");

        $r27 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File output>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<org.codehaus.groovy.ant.LoggingHelper: void verbose(java.lang.String)>($r29);

        $r62 = new java.io.PrintStream;

        $r61 = new java.io.BufferedOutputStream;

        $r60 = new java.io.FileOutputStream;

        $r33 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File output>;

        $r34 = virtualinvoke $r33.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = r0.<org.codehaus.groovy.ant.Groovy: boolean append>;

        specialinvoke $r60.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r34, $z0);

        specialinvoke $r61.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r60);

        specialinvoke $r62.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r61);

        r55 = $r62;

     label06:
        $r6 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        if $r6 == null goto label07;

        $r22 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        $r23 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i0 != 0 goto label08;

     label07:
        $r7 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path createClasspath()>();

        $r63 = new org.apache.tools.ant.types.Path;

        $r9 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        $r10 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        $r11 = virtualinvoke $r10.<java.io.File: java.io.File getParentFile()>();

        $r12 = virtualinvoke $r11.<java.io.File: java.lang.String getCanonicalPath()>();

        specialinvoke $r63.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project,java.lang.String)>($r9, $r12);

        virtualinvoke $r7.<org.apache.tools.ant.types.Path: void add(org.apache.tools.ant.types.Path)>($r63);

        $r65 = new java.io.BufferedReader;

        $r64 = new java.io.FileReader;

        $r15 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        specialinvoke $r64.<java.io.FileReader: void <init>(java.io.File)>($r15);

        specialinvoke $r65.<java.io.BufferedReader: void <init>(java.io.Reader)>($r64);

        $r16 = staticinvoke <org.codehaus.groovy.ant.Groovy: java.lang.String getText(java.io.BufferedReader)>($r65);

        r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command> = $r16;

     label08:
        $r56 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        if $r56 == null goto label09;

        $r19 = r0.<org.codehaus.groovy.ant.Groovy: java.lang.String command>;

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: void execGroovy(java.lang.String,java.io.PrintStream)>($r19, r55);

        goto label10;

     label09:
        $r66 = new org.apache.tools.ant.BuildException;

        $r18 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r66.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Source file does not exist!", $r18);

        $r70 = (java.lang.Throwable) $r66;

        throw $r70;

     label10:
        if r55 == null goto label14;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        if r55 == $r21 goto label14;

        virtualinvoke r55.<java.io.PrintStream: void close()>();

        goto label14;

     label11:
        $r51 := @caughtexception;

     label12:
        if r55 == null goto label13;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        if r55 == $r52 goto label13;

        virtualinvoke r55.<java.io.PrintStream: void close()>();

     label13:
        throw $r51;

     label14:
        goto label16;

     label15:
        $r48 := @caughtexception;

        $r67 = new org.apache.tools.ant.BuildException;

        $r50 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r67.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable,org.apache.tools.ant.Location)>($r48, $r50);

        $r71 = (java.lang.Throwable) $r67;

        throw $r71;

     label16:
        $r20 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r20.<org.codehaus.groovy.ant.LoggingHelper: void verbose(java.lang.String)>("statements executed successfully");

        return;

        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.io.IOException from label04 to label14 with label15;
    }

    private static java.lang.String getText(java.io.BufferedReader) throws java.io.IOException
    {
        java.lang.StringBuffer $r4;
        int $i0, $i2;
        char[] r1;
        java.io.BufferedReader r2;
        java.lang.String $r3;

        r2 := @parameter0: java.io.BufferedReader;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = newarray (char)[4096];

     label1:
        $i0 = virtualinvoke r2.<java.io.BufferedReader: int read(char[])>(r1);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r1, 0, $i0);

        goto label1;

     label2:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public org.apache.tools.ant.types.Commandline$Argument createArg()
    {
        org.apache.tools.ant.types.Commandline $r1;
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Commandline$Argument $r2;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline>;

        $r2 = virtualinvoke $r1.<org.apache.tools.ant.types.Commandline: org.apache.tools.ant.types.Commandline$Argument createArgument()>();

        return $r2;
    }

    protected void runStatements(java.io.Reader, java.io.PrintStream) throws java.io.IOException
    {
        java.io.PrintStream r7;
        java.io.Reader r4;
        org.codehaus.groovy.ant.Groovy r0;
        java.lang.StringBuffer $r2;
        int $i0;
        org.codehaus.groovy.ant.LoggingHelper $r1;
        org.apache.tools.ant.Project $r8;
        java.io.BufferedReader $r3;
        java.lang.String $r5, $r6, $r9, $r10;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r4 := @parameter0: java.io.Reader;

        r7 := @parameter1: java.io.PrintStream;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>("runStatements()");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.io.BufferedReader;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>(r4);

     label1:
        $r10 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r10 == null goto label2;

        $r8 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        $r9 = virtualinvoke $r8.<org.apache.tools.ant.Project: java.lang.String replaceProperties(java.lang.String)>($r10);

        $i0 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("--");

        if $i0 < 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label1;

     label2:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label3;

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: void execGroovy(java.lang.String,java.io.PrintStream)>($r6, r7);

     label3:
        return;
    }

    protected void execGroovy(java.lang.String, java.io.PrintStream)
    {
        org.codehaus.groovy.ant.Groovy r0;
        java.lang.Thread $r26;
        java.io.PrintWriter $r73;
        java.lang.Exception $r38, $r46;
        groovy.util.AntBuilder $r81;
        java.lang.ClassLoader $r28, r61;
        groovy.lang.GroovyClassLoader $r78;
        java.lang.Throwable $r82, $r83;
        java.lang.Object[] $r19, $r24;
        org.apache.tools.ant.Task $r84;
        java.lang.StringBuffer $r7, $r8, $r33, $r36, $r41, $r43, $r53, $r54, $r69, $r70, $r74, $r76;
        java.lang.String r2, $r3, $r4, $r9, $r12, $r14, $r35, $r37, $r42, $r44, $r50, $r55, $r58, $r63;
        java.io.StringWriter $r71;
        java.lang.Class[] $r17;
        org.apache.tools.ant.BuildException $r75, $r77;
        java.lang.reflect.Field $r22;
        org.codehaus.groovy.control.CompilerConfiguration $r67;
        org.apache.tools.ant.types.Path $r10, $r34;
        groovy.lang.Binding $r79;
        java.lang.reflect.Method $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.tools.ErrorReporter $r72;
        org.apache.tools.ant.Location $r45, $r56;
        org.apache.tools.ant.Project $r11;
        java.io.PrintStream r57;
        groovy.lang.GroovyShell $r80;
        org.codehaus.groovy.ant.LoggingHelper $r1, $r6, $r30, $r32;
        java.lang.Class $r13, $r15, $r16, $r21, $r27, $r29, $r60, $r62;
        java.lang.Object $r20, $r23, $r25, r59;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r2 := @parameter0: java.lang.String;

        r57 := @parameter1: java.io.PrintStream;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>("execGroovy()");

        $r3 = "";

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r6 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Script: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.codehaus.groovy.ant.LoggingHelper: void verbose(java.lang.String)>($r9);

        $r10 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        if $r10 == null goto label02;

        $r32 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Explicit Classpath: ");

        $r34 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        $r35 = virtualinvoke $r34.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>($r37);

     label02:
        $z1 = r0.<org.codehaus.groovy.ant.Groovy: boolean fork>;

        if $z1 == 0 goto label09;

        $r30 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r30.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>("Using fork mode");

     label03:
        specialinvoke r0.<org.codehaus.groovy.ant.Groovy: void createClasspathParts()>();

        specialinvoke r0.<org.codehaus.groovy.ant.Groovy: void createNewArgs(java.lang.String)>(r2);

        $z3 = r0.<org.codehaus.groovy.ant.Groovy: boolean fork>;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: void setFork(boolean)>($z3);

        $z4 = r0.<org.codehaus.groovy.ant.Groovy: boolean useGroovyShell>;

        if $z4 == 0 goto label04;

        $r58 = "groovy.lang.GroovyShell";

        goto label05;

     label04:
        $r58 = "org.codehaus.groovy.ant.Groovy";

     label05:
        specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: void setClassname(java.lang.String)>($r58);

        specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: void execute()>();

     label06:
        goto label08;

     label07:
        $r46 := @caughtexception;

        $r71 = new java.io.StringWriter;

        specialinvoke $r71.<java.io.StringWriter: void <init>()>();

        $r72 = new org.codehaus.groovy.tools.ErrorReporter;

        specialinvoke $r72.<org.codehaus.groovy.tools.ErrorReporter: void <init>(java.lang.Throwable,boolean)>($r46, 0);

        $r73 = new java.io.PrintWriter;

        specialinvoke $r73.<java.io.PrintWriter: void <init>(java.io.Writer)>($r71);

        virtualinvoke $r72.<org.codehaus.groovy.tools.ErrorReporter: void write(java.io.PrintWriter)>($r73);

        $r50 = virtualinvoke $r71.<java.io.StringWriter: java.lang.String toString()>();

        $r75 = new org.apache.tools.ant.BuildException;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Script Failed: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.String toString()>();

        $r56 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r75.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable,org.apache.tools.ant.Location)>($r55, $r46, $r56);

        $r82 = (java.lang.Throwable) $r75;

        throw $r82;

     label08:
        return;

     label09:
        r59 = null;

        $r11 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        $r12 = "org.apache.commons.grant.GrantProject";

        $r13 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label16;

     label10:
        $r16 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = newarray (java.lang.Class)[0];

        $r18 = virtualinvoke $r16.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getPropsHandler", $r17);

        $r19 = newarray (java.lang.Object)[0];

        $r20 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r19);

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("context");

        virtualinvoke $r22.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r23 = virtualinvoke $r22.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r20);

        $r24 = newarray (java.lang.Object)[0];

        $r25 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r23, "getProject", $r24);

        r59 = $r25;

     label11:
        goto label13;

     label12:
        $r38 := @caughtexception;

        $r77 = new org.apache.tools.ant.BuildException;

        $r76 = new java.lang.StringBuffer;

        specialinvoke $r76.<java.lang.StringBuffer: void <init>()>();

        $r41 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Impossible to retrieve Maven\'s Ant project: ");

        $r42 = virtualinvoke $r38.<java.lang.Exception: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        $r45 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r77.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>($r44, $r45);

        $r83 = (java.lang.Throwable) $r77;

        throw $r83;

     label13:
        $r26 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r27 = <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r27 != null goto label14;

        $r60 = staticinvoke <org.codehaus.groovy.ant.Groovy: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell> = $r60;

        goto label15;

     label14:
        $r60 = <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell>;

     label15:
        $r28 = virtualinvoke $r60.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r26.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r28);

        $r29 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();

        r61 = virtualinvoke $r29.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label19;

     label16:
        $r15 = <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r15 != null goto label17;

        $r62 = staticinvoke <org.codehaus.groovy.ant.Groovy: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell> = $r62;

        goto label18;

     label17:
        $r62 = <org.codehaus.groovy.ant.Groovy: java.lang.Class class$groovy$lang$GroovyShell>;

     label18:
        r61 = virtualinvoke $r62.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label19:
        $r63 = specialinvoke r0.<org.codehaus.groovy.ant.Groovy: java.lang.String computeScriptName()>();

        $r78 = new groovy.lang.GroovyClassLoader;

        specialinvoke $r78.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader)>(r61);

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: void addClassPathes(groovy.lang.GroovyClassLoader)>($r78);

        $r80 = new groovy.lang.GroovyShell;

        $r79 = new groovy.lang.Binding;

        specialinvoke $r79.<groovy.lang.Binding: void <init>()>();

        $r67 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        specialinvoke $r80.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.control.CompilerConfiguration)>($r78, $r79, $r67);

        $r81 = new groovy.util.AntBuilder;

        $r84 = (org.apache.tools.ant.Task) r0;

        specialinvoke $r81.<groovy.util.AntBuilder: void <init>(org.apache.tools.ant.Task)>($r84);

        specialinvoke r0.<org.codehaus.groovy.ant.Groovy: void parseAndRunScript(groovy.lang.GroovyShell,java.lang.String,java.lang.Object,java.lang.String,java.io.File,groovy.util.AntBuilder)>($r80, r2, r59, $r63, null, $r81);

        return;

        catch java.lang.Exception from label03 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private void parseAndRunScript(groovy.lang.GroovyShell, java.lang.String, java.lang.Object, java.lang.String, java.io.File, groovy.util.AntBuilder)
    {
        org.apache.tools.ant.types.Commandline $r10, $r17, $r19;
        java.lang.String[] $r11, $r18, $r20;
        groovy.lang.Script r21;
        org.codehaus.groovy.ant.Groovy r5;
        org.codehaus.groovy.ant.AntProjectPropertiesDelegate $r7;
        org.apache.tools.ant.Project $r6, $r8;
        java.lang.String r2, r3;
        groovy.lang.MissingMethodException $r16;
        java.io.IOException $r13, $r15;
        java.io.File r0;
        groovy.lang.GroovyShell r1;
        groovy.util.AntBuilder r4;
        org.codehaus.groovy.control.CompilationFailedException $r14;
        java.lang.Object r12;
        org.apache.tools.ant.Target $r9;

        r5 := @this: org.codehaus.groovy.ant.Groovy;

        r1 := @parameter0: groovy.lang.GroovyShell;

        r2 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        r0 := @parameter4: java.io.File;

        r4 := @parameter5: groovy.util.AntBuilder;

     label01:
        if r0 == null goto label02;

        r21 = virtualinvoke r1.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.File)>(r0);

        goto label03;

     label02:
        r21 = virtualinvoke r1.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.lang.String,java.lang.String)>(r2, r3);

     label03:
        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("ant", r4);

        $r6 = virtualinvoke r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project getProject()>();

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("project", $r6);

        $r7 = new org.codehaus.groovy.ant.AntProjectPropertiesDelegate;

        $r8 = r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Project project>;

        specialinvoke $r7.<org.codehaus.groovy.ant.AntProjectPropertiesDelegate: void <init>(org.apache.tools.ant.Project)>($r8);

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("properties", $r7);

        $r9 = virtualinvoke r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Target getOwningTarget()>();

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("target", $r9);

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("task", r5);

        $r10 = r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline>;

        $r11 = virtualinvoke $r10.<org.apache.tools.ant.types.Commandline: java.lang.String[] getCommandline()>();

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("args", $r11);

        if r12 == null goto label04;

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("pom", r12);

     label04:
        virtualinvoke r21.<groovy.lang.Script: java.lang.Object run()>();

     label05:
        goto label14;

     label06:
        $r16 := @caughtexception;

        if r0 == null goto label10;

     label07:
        $r19 = r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline>;

        $r20 = virtualinvoke $r19.<org.apache.tools.ant.types.Commandline: java.lang.String[] getCommandline()>();

        virtualinvoke r1.<groovy.lang.GroovyShell: java.lang.Object run(java.io.File,java.lang.String[])>(r0, $r20);

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        specialinvoke r5.<org.codehaus.groovy.ant.Groovy: void processError(java.lang.Exception)>($r15);

        goto label11;

     label10:
        $r17 = r5.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline>;

        $r18 = virtualinvoke $r17.<org.apache.tools.ant.types.Commandline: java.lang.String[] getCommandline()>();

        virtualinvoke r1.<groovy.lang.GroovyShell: java.lang.Object run(java.lang.String,java.lang.String,java.lang.String[])>(r2, r3, $r18);

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

        specialinvoke r5.<org.codehaus.groovy.ant.Groovy: void processError(java.lang.Exception)>($r14);

        goto label14;

     label13:
        $r13 := @caughtexception;

        specialinvoke r5.<org.codehaus.groovy.ant.Groovy: void processError(java.lang.Exception)>($r13);

     label14:
        return;

        catch groovy.lang.MissingMethodException from label01 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch org.codehaus.groovy.control.CompilationFailedException from label01 to label05 with label12;
        catch java.io.IOException from label01 to label05 with label13;
    }

    private void processError(java.lang.Exception)
    {
        java.io.PrintWriter $r14;
        java.lang.Throwable $r17;
        java.io.StringWriter $r12;
        org.apache.tools.ant.Location $r11;
        org.apache.tools.ant.BuildException $r16;
        java.lang.Exception r2;
        org.codehaus.groovy.ant.Groovy r10;
        java.lang.StringBuffer $r7, $r8, $r15;
        java.lang.String $r4, $r9;
        org.codehaus.groovy.tools.ErrorReporter $r13;

        r10 := @this: org.codehaus.groovy.ant.Groovy;

        r2 := @parameter0: java.lang.Exception;

        $r12 = new java.io.StringWriter;

        specialinvoke $r12.<java.io.StringWriter: void <init>()>();

        $r13 = new org.codehaus.groovy.tools.ErrorReporter;

        specialinvoke $r13.<org.codehaus.groovy.tools.ErrorReporter: void <init>(java.lang.Throwable,boolean)>(r2, 0);

        $r14 = new java.io.PrintWriter;

        specialinvoke $r14.<java.io.PrintWriter: void <init>(java.io.Writer)>($r12);

        virtualinvoke $r13.<org.codehaus.groovy.tools.ErrorReporter: void write(java.io.PrintWriter)>($r14);

        $r4 = virtualinvoke $r12.<java.io.StringWriter: java.lang.String toString()>();

        $r16 = new org.apache.tools.ant.BuildException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Script Failed: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = virtualinvoke r10.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r16.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable,org.apache.tools.ant.Location)>($r9, r2, $r11);

        $r17 = (java.lang.Throwable) $r16;

        throw $r17;
    }

    public static void main(java.lang.String[])
    {
        org.apache.tools.ant.types.Commandline$Argument $r8;
        java.lang.String[] r3;
        groovy.lang.GroovyShell $r0;
        org.codehaus.groovy.ant.Groovy $r2;
        java.io.File $r6;
        groovy.util.AntBuilder $r4;
        int $i0, i1;
        org.apache.tools.ant.Project $r5;
        java.lang.String $r7, $r9;
        groovy.lang.Binding $r1;

        r3 := @parameter0: java.lang.String[];

        $r0 = new groovy.lang.GroovyShell;

        $r1 = new groovy.lang.Binding;

        specialinvoke $r1.<groovy.lang.Binding: void <init>()>();

        specialinvoke $r0.<groovy.lang.GroovyShell: void <init>(groovy.lang.Binding)>($r1);

        $r2 = new org.codehaus.groovy.ant.Groovy;

        specialinvoke $r2.<org.codehaus.groovy.ant.Groovy: void <init>()>();

        i1 = 1;

     label1:
        $i0 = lengthof r3;

        if i1 >= $i0 goto label2;

        $r8 = virtualinvoke $r2.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline$Argument createArg()>();

        $r9 = r3[i1];

        virtualinvoke $r8.<org.apache.tools.ant.types.Commandline$Argument: void setValue(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = new groovy.util.AntBuilder;

        specialinvoke $r4.<groovy.util.AntBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<groovy.util.AntBuilder: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r2.<org.codehaus.groovy.ant.Groovy: void setProject(org.apache.tools.ant.Project)>($r5);

        $r6 = new java.io.File;

        $r7 = r3[0];

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7);

        specialinvoke $r2.<org.codehaus.groovy.ant.Groovy: void parseAndRunScript(groovy.lang.GroovyShell,java.lang.String,java.lang.Object,java.lang.String,java.io.File,groovy.util.AntBuilder)>($r0, null, null, null, $r6, $r4);

        return;
    }

    private void createClasspathParts()
    {
        java.lang.IllegalStateException $r14, $r19;
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path $r1, $r13, $r21, $r23, $r24;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.types.CommandlineJava$SysProperties $r2;
        java.lang.String[] $r3;
        java.lang.StringBuffer $r7, $r9, $r11, $r15, $r16, $r17;
        int $i0, $i1, i2, $i3, i4;
        java.lang.String $r10, $r12, $r18, $r20, $r22, $r25, r27, r28;
        java.io.IOException $r26;
        java.io.File $r4, r6;
        org.codehaus.groovy.ant.LoggingHelper $r8;
        java.io.File[] $r5;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        if $r1 == null goto label01;

        $r23 = specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: org.apache.tools.ant.types.Path createClasspath()>();

        $r24 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        $r25 = virtualinvoke $r24.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.tools.ant.types.Path: void setPath(java.lang.String)>($r25);

     label01:
        $z0 = r0.<org.codehaus.groovy.ant.Groovy: boolean includeAntRuntime>;

        if $z0 == 0 goto label02;

        $r21 = specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: org.apache.tools.ant.types.Path createClasspath()>();

        $r22 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");

        virtualinvoke $r21.<org.apache.tools.ant.types.Path: void setPath(java.lang.String)>($r22);

     label02:
        r27 = null;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.CommandlineJava$SysProperties getSysProperties()>();

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.CommandlineJava$SysProperties: java.lang.String[] getVariables()>();

        i2 = 0;

     label03:
        $i3 = lengthof $r3;

        if i2 >= $i3 goto label05;

        r28 = $r3[i2];

        $z2 = virtualinvoke r28.<java.lang.String: boolean startsWith(java.lang.String)>("-Dgroovy.home=");

        if $z2 == 0 goto label04;

        $r20 = "-Dgroovy.home=";

        $i1 = virtualinvoke $r20.<java.lang.String: int length()>();

        r27 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int)>($i1);

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        if r27 != null goto label06;

        r27 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("groovy.home");

     label06:
        if r27 != null goto label07;

        r27 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("GROOVY_HOME");

     label07:
        if r27 != null goto label08;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Neither ${groovy.home} nor GROOVY_HOME defined.");

        throw $r19;

     label08:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r27, "embeddable");

        $z1 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label09;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GROOVY_HOME incorrectly defined. No embeddable directory found in: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label09:
        $r5 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        i4 = 0;

     label10:
        $i0 = lengthof $r5;

        if i4 >= $i0 goto label15;

        r6 = $r5[i4];

     label11:
        $r8 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Adding jar to classpath: ");

        $r10 = virtualinvoke r6.<java.io.File: java.lang.String getCanonicalPath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>($r12);

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

     label14:
        $r13 = specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: org.apache.tools.ant.types.Path createClasspath()>();

        virtualinvoke $r13.<org.apache.tools.ant.types.Path: void setLocation(java.io.File)>(r6);

        i4 = i4 + 1;

        goto label10;

     label15:
        return;

        catch java.io.IOException from label11 to label12 with label13;
    }

    private void createNewArgs(java.lang.String) throws java.io.IOException
    {
        org.apache.tools.ant.types.Commandline $r1;
        org.apache.tools.ant.util.FileUtils $r3;
        org.apache.tools.ant.types.Commandline$Argument $r8;
        java.lang.String[] $r2, r5;
        org.codehaus.groovy.ant.Groovy r0;
        java.io.File $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r6, $r7, $r9;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Commandline cmdline>;

        $r2 = virtualinvoke $r1.<org.apache.tools.ant.types.Commandline: java.lang.String[] getCommandline()>();

        $r3 = staticinvoke <org.apache.tools.ant.util.FileUtils: org.apache.tools.ant.util.FileUtils getFileUtils()>();

        $r4 = virtualinvoke $r3.<org.apache.tools.ant.util.FileUtils: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File,boolean)>("embedded_script_in_", "groovy_Ant_task", null, 1);

        $i0 = lengthof $r2;

        $i1 = $i0 + 1;

        r5 = newarray (java.lang.String)[$i1];

        staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: void write(java.io.File,java.lang.String)>($r4, r6);

        $r7 = virtualinvoke $r4.<java.io.File: java.lang.String getCanonicalPath()>();

        r5[0] = $r7;

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r5, 1, $i2);

        specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: void clearArgs()>();

        i4 = 0;

     label1:
        $i3 = lengthof r5;

        if i4 >= $i3 goto label2;

        $r8 = specialinvoke r0.<org.apache.tools.ant.taskdefs.Java: org.apache.tools.ant.types.Commandline$Argument createArg()>();

        $r9 = r5[i4];

        virtualinvoke $r8.<org.apache.tools.ant.types.Commandline$Argument: void setValue(java.lang.String)>($r9);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.String computeScriptName()
    {
        org.apache.tools.ant.Location $r2, $r9;
        org.codehaus.groovy.ant.Groovy r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r12;
        int $i0;
        java.lang.String $r3, $r10, $r11, $r14, r15;
        java.io.File $r1, $r13;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        if $r1 == null goto label1;

        $r13 = r0.<org.codehaus.groovy.ant.Groovy: java.io.File srcFile>;

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r14;

     label1:
        $r2 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.Location: java.lang.String getFileName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("embedded_script_in_");

        $r9 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.Location getLocation()>();

        $r10 = virtualinvoke $r9.<org.apache.tools.ant.Location: java.lang.String getFileName()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^\\w_\\.]", "_");

        $r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label3;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("embedded_script_in_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("groovy_Ant_task");

        r15 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r15;
    }

    protected void addClassPathes(groovy.lang.GroovyClassLoader)
    {
        java.lang.String[] $r3, $r6;
        org.codehaus.groovy.ant.Groovy r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r5;
        int $i0, i1;
        java.lang.String $r7;
        groovy.lang.GroovyClassLoader r4;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r4 := @parameter0: groovy.lang.GroovyClassLoader;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        $i0 = lengthof $r3;

        if i1 >= $i0 goto label2;

        $r5 = r0.<org.codehaus.groovy.ant.Groovy: org.apache.tools.ant.types.Path classpath>;

        $r6 = virtualinvoke $r5.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        $r7 = $r6[i1];

        virtualinvoke r4.<groovy.lang.GroovyClassLoader: void addClasspath(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void printResults(java.io.PrintStream)
    {
        java.io.PrintStream r3;
        java.lang.StringBuffer $r2, $r4;
        org.codehaus.groovy.ant.LoggingHelper $r1;
        org.codehaus.groovy.ant.Groovy r0;

        r0 := @this: org.codehaus.groovy.ant.Groovy;

        r3 := @parameter0: java.io.PrintStream;

        $r1 = r0.<org.codehaus.groovy.ant.Groovy: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void debug(java.lang.String)>("printResults()");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.Object)>($r2);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r3.<java.io.PrintStream: void println()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.ant.Groovy: java.lang.String SUFFIX> = "groovy_Ant_task";

        <org.codehaus.groovy.ant.Groovy: java.lang.String PREFIX> = "embedded_script_in_";

        return;
    }
}
