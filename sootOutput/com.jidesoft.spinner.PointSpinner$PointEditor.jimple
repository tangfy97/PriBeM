public class com.jidesoft.spinner.PointSpinner$PointEditor extends javax.swing.JSpinner$DefaultEditor
{

    public void <init>(javax.swing.JSpinner)
    {
        javax.swing.JSpinner r1;
        javax.swing.JFormattedTextField $r7;
        com.jidesoft.spinner.PointSpinner$PointEditor$1 $r9;
        java.lang.IllegalArgumentException $r10;
        com.jidesoft.spinner.PointSpinner$PointEditor r0;
        javax.swing.text.DefaultFormatterFactory $r6;
        javax.swing.JFormattedTextField$AbstractFormatter $r5;
        int $i0, $i1, $i2;
        com.jidesoft.spinner.SpinnerPointModel r4;
        javax.swing.SpinnerModel $r2, $r3;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: com.jidesoft.spinner.PointSpinner$PointEditor;

        r1 := @parameter0: javax.swing.JSpinner;

        specialinvoke r0.<javax.swing.JSpinner$DefaultEditor: void <init>(javax.swing.JSpinner)>(r1);

        $r2 = virtualinvoke r1.<javax.swing.JSpinner: javax.swing.SpinnerModel getModel()>();

        $z0 = $r2 instanceof com.jidesoft.spinner.SpinnerPointModel;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("model not a SpinnerPointModel");

        throw $r10;

     label1:
        $r3 = virtualinvoke r1.<javax.swing.JSpinner: javax.swing.SpinnerModel getModel()>();

        r4 = (com.jidesoft.spinner.SpinnerPointModel) $r3;

        $r5 = staticinvoke <com.jidesoft.spinner.PointFormatter: javax.swing.JFormattedTextField$AbstractFormatter getInstance()>();

        $r6 = new javax.swing.text.DefaultFormatterFactory;

        specialinvoke $r6.<javax.swing.text.DefaultFormatterFactory: void <init>(javax.swing.JFormattedTextField$AbstractFormatter)>($r5);

        $r7 = virtualinvoke r0.<com.jidesoft.spinner.PointSpinner$PointEditor: javax.swing.JFormattedTextField getTextField()>();

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void setEditable(boolean)>(1);

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void setFormatterFactory(javax.swing.JFormattedTextField$AbstractFormatterFactory)>($r6);

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void setHorizontalAlignment(int)>(4);

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-2147483648);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = 2 * $i0;

        $i2 = 4 + $i1;

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void setColumns(int)>($i2);

        $r9 = new com.jidesoft.spinner.PointSpinner$PointEditor$1;

        specialinvoke $r9.<com.jidesoft.spinner.PointSpinner$PointEditor$1: void <init>(com.jidesoft.spinner.PointSpinner$PointEditor,javax.swing.JFormattedTextField,com.jidesoft.spinner.SpinnerPointModel)>(r0, $r7, r4);

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("value", $r9);

        return;
    }
}
