public final class com.google.gxp.com.google.common.collect.Comparators extends java.lang.Object
{
    private static final com.google.gxp.com.google.common.collect.Ordering NATURAL_ORDER;
    private static final com.google.gxp.com.google.common.collect.Ordering NULL_LEAST_ORDER;
    private static final com.google.gxp.com.google.common.collect.Ordering NULL_GREATEST_ORDER;
    public static final com.google.gxp.com.google.common.collect.Ordering STRING_FORM_ORDER;

    private void <init>()
    {
        com.google.gxp.com.google.common.collect.Comparators r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Comparators;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.gxp.com.google.common.collect.Ordering naturalOrder()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NATURAL_ORDER>;

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.Ordering nullLeastOrder(java.util.Comparator)
    {
        java.util.Comparator r0;
        com.google.gxp.com.google.common.collect.Comparators$NullLeastOrdering $r1;

        r0 := @parameter0: java.util.Comparator;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.gxp.com.google.common.collect.Comparators$NullLeastOrdering;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.Comparators$NullLeastOrdering: void <init>(java.util.Comparator)>(r0);

        return $r1;
    }

    public static com.google.gxp.com.google.common.collect.Ordering nullLeastOrder()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_LEAST_ORDER>;

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.Ordering nullGreatestOrder(java.util.Comparator)
    {
        com.google.gxp.com.google.common.collect.Comparators$NullGreatestOrdering $r1;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.gxp.com.google.common.collect.Comparators$NullGreatestOrdering;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.Comparators$NullGreatestOrdering: void <init>(java.util.Comparator)>(r0);

        return $r1;
    }

    public static com.google.gxp.com.google.common.collect.Ordering nullGreatestOrder()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_GREATEST_ORDER>;

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.Ordering compound(java.util.Comparator, java.util.Comparator)
    {
        java.util.List $r3;
        com.google.gxp.com.google.common.collect.Ordering $r4;
        java.util.Comparator r0, r1;
        java.util.Comparator[] $r2;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Comparator;

        $r2 = newarray (java.util.Comparator)[2];

        $r2[0] = r0;

        $r2[1] = r1;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering compound(java.lang.Iterable)>($r3);

        return $r4;
    }

    public static com.google.gxp.com.google.common.collect.Ordering compound(java.util.Comparator, java.util.Comparator, java.util.Comparator)
    {
        java.util.List $r4;
        com.google.gxp.com.google.common.collect.Ordering $r5;
        java.util.Comparator r0, r1, r2;
        java.util.Comparator[] $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Comparator;

        r2 := @parameter2: java.util.Comparator;

        $r3 = newarray (java.util.Comparator)[3];

        $r3[0] = r0;

        $r3[1] = r1;

        $r3[2] = r2;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering compound(java.lang.Iterable)>($r4);

        return $r5;
    }

    public static com.google.gxp.com.google.common.collect.Ordering compound(java.util.Comparator, java.util.Comparator, java.util.Comparator, java.util.Comparator)
    {
        java.util.List $r5;
        com.google.gxp.com.google.common.collect.Ordering $r6;
        java.util.Comparator r0, r1, r2, r3;
        java.util.Comparator[] $r4;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Comparator;

        r2 := @parameter2: java.util.Comparator;

        r3 := @parameter3: java.util.Comparator;

        $r4 = newarray (java.util.Comparator)[4];

        $r4[0] = r0;

        $r4[1] = r1;

        $r4[2] = r2;

        $r4[3] = r3;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering compound(java.lang.Iterable)>($r5);

        return $r6;
    }

    public static transient com.google.gxp.com.google.common.collect.Ordering compound(java.util.Comparator, java.util.Comparator, java.util.Comparator, java.util.Comparator, java.util.Comparator[])
    {
        java.util.Comparator[] $r4, r6, $r7;
        java.util.ArrayList $r5;
        java.util.List $r8;
        com.google.gxp.com.google.common.collect.Ordering $r9;
        java.util.Comparator r0, r1, r2, r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Comparator;

        r2 := @parameter2: java.util.Comparator;

        r3 := @parameter3: java.util.Comparator;

        r6 := @parameter4: java.util.Comparator[];

        $r4 = newarray (java.util.Comparator)[4];

        $r4[0] = r0;

        $r4[1] = r1;

        $r4[2] = r2;

        $r4[3] = r3;

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4);

        $r7 = (java.util.Comparator[]) r6;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering compound(java.lang.Iterable)>($r5);

        return $r9;
    }

    public static com.google.gxp.com.google.common.collect.Ordering compound(java.lang.Iterable)
    {
        java.lang.Iterable r1;
        com.google.gxp.com.google.common.collect.Comparators$CompoundOrder $r0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.gxp.com.google.common.collect.Comparators$CompoundOrder;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Comparators$CompoundOrder: void <init>(java.lang.Iterable)>(r1);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.Ordering fromFunction(com.google.gxp.com.google.common.base.Function)
    {
        com.google.gxp.com.google.common.collect.Comparators$TransformingNaturalOrder $r0;
        com.google.gxp.com.google.common.base.Function r1;

        r1 := @parameter0: com.google.gxp.com.google.common.base.Function;

        $r0 = new com.google.gxp.com.google.common.collect.Comparators$TransformingNaturalOrder;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Comparators$TransformingNaturalOrder: void <init>(com.google.gxp.com.google.common.base.Function)>(r1);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.Ordering fromFunction(com.google.gxp.com.google.common.base.Function, java.util.Comparator)
    {
        com.google.gxp.com.google.common.base.Function r1;
        com.google.gxp.com.google.common.collect.Comparators$TransformingOrder $r0;
        java.util.Comparator r2;

        r1 := @parameter0: com.google.gxp.com.google.common.base.Function;

        r2 := @parameter1: java.util.Comparator;

        $r0 = new com.google.gxp.com.google.common.collect.Comparators$TransformingOrder;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Comparators$TransformingOrder: void <init>(com.google.gxp.com.google.common.base.Function,java.util.Comparator)>(r1, r2);

        return $r0;
    }

    public static final com.google.gxp.com.google.common.collect.Ordering toStringOrder()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering STRING_FORM_ORDER>;

        return $r0;
    }

    public static java.lang.Comparable min(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable r0, r1, $r2;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i0 > 0 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.Comparable max(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable r0, r1, $r2;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static java.lang.Object min(java.util.Comparator, java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2, $r3;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = interfaceinvoke r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i0 > 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    public static java.lang.Object max(java.util.Comparator, java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2, $r3;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = interfaceinvoke r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if $i0 < 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    public static com.google.gxp.com.google.common.collect.Ordering givenOrder(java.util.List)
    {
        java.util.List r1;
        com.google.gxp.com.google.common.collect.Comparators$GivenOrder $r0;

        r1 := @parameter0: java.util.List;

        $r0 = new com.google.gxp.com.google.common.collect.Comparators$GivenOrder;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Comparators$GivenOrder: void <init>(java.util.List)>(r1);

        return $r0;
    }

    public static transient com.google.gxp.com.google.common.collect.Ordering givenOrder(java.lang.Object, java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1;
        java.lang.Object r0;
        com.google.gxp.com.google.common.collect.Ordering $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.List asList(java.lang.Object,java.lang.Object[])>(r0, r1);

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering givenOrder(java.util.List)>($r2);

        return $r3;
    }

    public static int compare(byte, byte)
    {
        byte b0, b1, $b2;
        int $i3, $i4, $i5, $i6;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $i3 = (int) b0;

        $i4 = (int) b1;

        if $i3 >= $i4 goto label1;

        $b2 = -1;

        goto label3;

     label1:
        $i5 = (int) b0;

        $i6 = (int) b1;

        if $i5 <= $i6 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        return $b2;
    }

    public static int compare(char, char)
    {
        byte $b2;
        int $i3, $i4, $i5, $i6;
        char c0, c1;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i3 = (int) c0;

        $i4 = (int) c1;

        if $i3 >= $i4 goto label1;

        $b2 = -1;

        goto label3;

     label1:
        $i5 = (int) c0;

        $i6 = (int) c1;

        if $i5 <= $i6 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        return $b2;
    }

    public static int compare(short, short)
    {
        short s0, s1;
        byte $b2;
        int $i3, $i4, $i5, $i6;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $i3 = (int) s0;

        $i4 = (int) s1;

        if $i3 >= $i4 goto label1;

        $b2 = -1;

        goto label3;

     label1:
        $i5 = (int) s0;

        $i6 = (int) s1;

        if $i5 <= $i6 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        return $b2;
    }

    public static int compare(int, int)
    {
        int i0, i1;
        byte $b2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $b2 = -1;

        goto label3;

     label1:
        if i0 <= i1 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        return $b2;
    }

    public static int compare(long, long)
    {
        byte $b2, $b3, $b4;
        int $i5, $i6;
        long l0, l1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label1;

        $b4 = -1;

        goto label3;

     label1:
        $b3 = l0 cmp l1;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label2;

        $b4 = 1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        return $b4;
    }

    public static int compare(double, double)
    {
        int $i0;
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>(d0, d1);

        return $i0;
    }

    public static int compare(float, float)
    {
        int $i0;
        float f0, f1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>(f0, f1);

        return $i0;
    }

    public static int compare(boolean, boolean)
    {
        byte $b0;
        boolean z0, z1;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 != z1 goto label1;

        $b0 = 0;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = -1;

     label3:
        return $b0;
    }

    static com.google.gxp.com.google.common.collect.Ordering access$100()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NATURAL_ORDER>;

        return $r0;
    }

    static com.google.gxp.com.google.common.collect.Ordering access$300()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_LEAST_ORDER>;

        return $r0;
    }

    static com.google.gxp.com.google.common.collect.Ordering access$500()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;

        $r0 = <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_GREATEST_ORDER>;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.collect.Comparators$NaturalOrdering $r0;
        com.google.gxp.com.google.common.collect.Comparators$NaturalNullGreatestOrder $r2;
        com.google.gxp.com.google.common.collect.Comparators$ToStringOrder $r3;
        com.google.gxp.com.google.common.collect.Comparators$NaturalNullLeastOrder $r1;

        $r0 = new com.google.gxp.com.google.common.collect.Comparators$NaturalOrdering;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.Comparators$NaturalOrdering: void <init>(com.google.gxp.com.google.common.collect.Comparators$1)>(null);

        <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NATURAL_ORDER> = $r0;

        $r1 = new com.google.gxp.com.google.common.collect.Comparators$NaturalNullLeastOrder;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.Comparators$NaturalNullLeastOrder: void <init>(com.google.gxp.com.google.common.collect.Comparators$1)>(null);

        <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_LEAST_ORDER> = $r1;

        $r2 = new com.google.gxp.com.google.common.collect.Comparators$NaturalNullGreatestOrder;

        specialinvoke $r2.<com.google.gxp.com.google.common.collect.Comparators$NaturalNullGreatestOrder: void <init>(com.google.gxp.com.google.common.collect.Comparators$1)>(null);

        <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering NULL_GREATEST_ORDER> = $r2;

        $r3 = new com.google.gxp.com.google.common.collect.Comparators$ToStringOrder;

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.Comparators$ToStringOrder: void <init>(com.google.gxp.com.google.common.collect.Comparators$1)>(null);

        <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering STRING_FORM_ORDER> = $r3;

        return;
    }
}
