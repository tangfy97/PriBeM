public class com.jidesoft.utils.BasicTransferable extends java.lang.Object implements java.awt.datatransfer.Transferable, javax.swing.plaf.UIResource
{
    protected java.lang.String plainData;
    protected java.lang.String htmlData;
    private static java.awt.datatransfer.DataFlavor[] htmlFlavors;
    private static java.awt.datatransfer.DataFlavor[] stringFlavors;
    private static java.awt.datatransfer.DataFlavor[] plainFlavors;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.lang.String r1, r2;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.utils.BasicTransferable: java.lang.String plainData> = r1;

        r0.<com.jidesoft.utils.BasicTransferable: java.lang.String htmlData> = r2;

        return;
    }

    public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        boolean $z0, $z1, $z2;
        java.awt.datatransfer.DataFlavor[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        com.jidesoft.utils.BasicTransferable r0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        $r1 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] getRicherFlavors()>();

        if $r1 == null goto label01;

        $i7 = lengthof $r1;

        goto label02;

     label01:
        $i7 = 0;

     label02:
        i0 = $i7;

        $z0 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isHTMLSupported()>();

        if $z0 == 0 goto label03;

        $r8 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        $i8 = lengthof $r8;

        goto label04;

     label03:
        $i8 = 0;

     label04:
        i1 = $i8;

        $z1 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isPlainSupported()>();

        if $z1 == 0 goto label05;

        $r7 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        $i9 = lengthof $r7;

        goto label06;

     label05:
        $i9 = 0;

     label06:
        i2 = $i9;

        $z2 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isPlainSupported()>();

        if $z2 == 0 goto label07;

        $r5 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors>;

        $i10 = lengthof $r5;

        goto label08;

     label07:
        $i10 = 0;

     label08:
        i3 = $i10;

        $i4 = i0 + i1;

        $i5 = $i4 + i2;

        $i6 = $i5 + $i10;

        $r6 = newarray (java.awt.datatransfer.DataFlavor)[$i6];

        i11 = 0;

        if i0 <= 0 goto label09;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r6, 0, i0);

        i11 = 0 + i0;

     label09:
        if i1 <= 0 goto label10;

        $r4 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r6, i11, i1);

        i11 = i11 + i1;

     label10:
        if i2 <= 0 goto label11;

        $r3 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r6, i11, i2);

        i11 = i11 + i2;

     label11:
        if i3 <= 0 goto label12;

        $r2 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r6, i11, i3);

     label12:
        return $r6;
    }

    public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.awt.datatransfer.DataFlavor r2, r3;
        java.awt.datatransfer.DataFlavor[] $r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        r3 := @parameter0: java.awt.datatransfer.DataFlavor;

        $r1 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.datatransfer.UnsupportedFlavorException $r25;
        com.jidesoft.utils.BasicTransferable r0;
        java.awt.datatransfer.DataFlavor r1;
        java.io.StringBufferInputStream $r10, $r19;
        java.lang.String $r2, $r3, $r12, $r22, $r23, $r24;
        java.io.StringReader $r11, $r20;
        java.lang.Class $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Object $r21;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        r1 := @parameter0: java.awt.datatransfer.DataFlavor;

        virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] getRicherFlavors()>();

        $z0 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isRicherFlavor(java.awt.datatransfer.DataFlavor)>(r1);

        if $z0 == 0 goto label01;

        $r21 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor)>(r1);

        return $r21;

     label01:
        $z1 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isHTMLFlavor(java.awt.datatransfer.DataFlavor)>(r1);

        if $z1 == 0 goto label07;

        $r12 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.lang.String getHTMLData()>();

        if $r12 != null goto label02;

        $r22 = "";

        goto label03;

     label02:
        $r22 = $r12;

     label03:
        $r13 = class "Ljava/lang/String;";

        $r14 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z7 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z7 == 0 goto label04;

        return $r22;

     label04:
        $r15 = class "Ljava/io/Reader;";

        $r16 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z8 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z8 == 0 goto label05;

        $r20 = new java.io.StringReader;

        specialinvoke $r20.<java.io.StringReader: void <init>(java.lang.String)>($r22);

        return $r20;

     label05:
        $r17 = class "Ljava/io/InputStream;";

        $r18 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z9 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z9 == 0 goto label06;

        $r19 = new java.io.StringBufferInputStream;

        specialinvoke $r19.<java.io.StringBufferInputStream: void <init>(java.lang.String)>($r22);

        return $r19;

     label06:
        goto label16;

     label07:
        $z2 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isPlainFlavor(java.awt.datatransfer.DataFlavor)>(r1);

        if $z2 == 0 goto label13;

        $r3 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.lang.String getPlainData()>();

        if $r3 != null goto label08;

        $r23 = "";

        goto label09;

     label08:
        $r23 = $r3;

     label09:
        $r4 = class "Ljava/lang/String;";

        $r5 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z4 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label10;

        return $r23;

     label10:
        $r6 = class "Ljava/io/Reader;";

        $r7 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z5 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z5 == 0 goto label11;

        $r11 = new java.io.StringReader;

        specialinvoke $r11.<java.io.StringReader: void <init>(java.lang.String)>($r23);

        return $r11;

     label11:
        $r8 = class "Ljava/io/InputStream;";

        $r9 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: java.lang.Class getRepresentationClass()>();

        $z6 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z6 == 0 goto label12;

        $r10 = new java.io.StringBufferInputStream;

        specialinvoke $r10.<java.io.StringBufferInputStream: void <init>(java.lang.String)>($r23);

        return $r10;

     label12:
        goto label16;

     label13:
        $z3 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: boolean isStringFlavor(java.awt.datatransfer.DataFlavor)>(r1);

        if $z3 == 0 goto label16;

        $r2 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.lang.String getPlainData()>();

        if $r2 != null goto label14;

        $r24 = "";

        goto label15;

     label14:
        $r24 = $r2;

     label15:
        return $r24;

     label16:
        $r25 = new java.awt.datatransfer.UnsupportedFlavorException;

        specialinvoke $r25.<java.awt.datatransfer.UnsupportedFlavorException: void <init>(java.awt.datatransfer.DataFlavor)>(r1);

        throw $r25;
    }

    protected boolean isRicherFlavor(java.awt.datatransfer.DataFlavor)
    {
        java.awt.datatransfer.DataFlavor r2, $r3;
        java.awt.datatransfer.DataFlavor[] $r1;
        com.jidesoft.utils.BasicTransferable r0;
        int i0, $i1, i2;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        r2 := @parameter0: java.awt.datatransfer.DataFlavor;

        $r1 = virtualinvoke r0.<com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] getRicherFlavors()>();

        if $r1 == null goto label1;

        $i1 = lengthof $r1;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        i0 = $i1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        $r3 = $r1[i2];

        $z0 = virtualinvoke $r3.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;
    }

    protected java.awt.datatransfer.DataFlavor[] getRicherFlavors()
    {
        com.jidesoft.utils.BasicTransferable r0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        return null;
    }

    protected java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.awt.datatransfer.DataFlavor r1;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        r1 := @parameter0: java.awt.datatransfer.DataFlavor;

        return null;
    }

    protected boolean isHTMLFlavor(java.awt.datatransfer.DataFlavor)
    {
        com.jidesoft.utils.BasicTransferable r3;
        java.awt.datatransfer.DataFlavor r1, r2;
        java.awt.datatransfer.DataFlavor[] r0;
        int i0, i1;
        boolean $z0;

        r3 := @this: com.jidesoft.utils.BasicTransferable;

        r2 := @parameter0: java.awt.datatransfer.DataFlavor;

        r0 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected boolean isHTMLSupported()
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        $r1 = r0.<com.jidesoft.utils.BasicTransferable: java.lang.String htmlData>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected java.lang.String getHTMLData()
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        $r1 = r0.<com.jidesoft.utils.BasicTransferable: java.lang.String htmlData>;

        return $r1;
    }

    protected boolean isPlainFlavor(java.awt.datatransfer.DataFlavor)
    {
        com.jidesoft.utils.BasicTransferable r3;
        java.awt.datatransfer.DataFlavor r1, r2;
        java.awt.datatransfer.DataFlavor[] r0;
        int i0, i1;
        boolean $z0;

        r3 := @this: com.jidesoft.utils.BasicTransferable;

        r2 := @parameter0: java.awt.datatransfer.DataFlavor;

        r0 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected boolean isPlainSupported()
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        $r1 = r0.<com.jidesoft.utils.BasicTransferable: java.lang.String plainData>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected java.lang.String getPlainData()
    {
        com.jidesoft.utils.BasicTransferable r0;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.utils.BasicTransferable;

        $r1 = r0.<com.jidesoft.utils.BasicTransferable: java.lang.String plainData>;

        return $r1;
    }

    protected boolean isStringFlavor(java.awt.datatransfer.DataFlavor)
    {
        com.jidesoft.utils.BasicTransferable r3;
        java.awt.datatransfer.DataFlavor r1, r2;
        java.awt.datatransfer.DataFlavor[] r0;
        int i0, i1;
        boolean $z0;

        r3 := @this: com.jidesoft.utils.BasicTransferable;

        r2 := @parameter0: java.awt.datatransfer.DataFlavor;

        r0 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static void <clinit>()
    {
        java.awt.datatransfer.DataFlavor $r1, $r3, $r5, $r8, $r10, $r12, $r15, $r17;
        java.io.PrintStream $r20;
        java.awt.datatransfer.DataFlavor[] $r0, $r2, $r4, $r6, $r7, $r9, $r11, $r13, $r14, $r16, $r18;
        java.lang.ClassNotFoundException $r19;

     label1:
        $r0 = newarray (java.awt.datatransfer.DataFlavor)[3];

        <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors> = $r0;

        $r2 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        $r1 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r1.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/html;class=java.lang.String");

        $r2[0] = $r1;

        $r4 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        $r3 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r3.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/html;class=java.io.Reader");

        $r4[1] = $r3;

        $r6 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] htmlFlavors>;

        $r5 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r5.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/html;charset=unicode;class=java.io.InputStream");

        $r6[2] = $r5;

        $r7 = newarray (java.awt.datatransfer.DataFlavor)[3];

        <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors> = $r7;

        $r9 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        $r8 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r8.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/plain;class=java.lang.String");

        $r9[0] = $r8;

        $r11 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        $r10 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r10.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/plain;class=java.io.Reader");

        $r11[1] = $r10;

        $r13 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] plainFlavors>;

        $r12 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r12.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("text/plain;charset=unicode;class=java.io.InputStream");

        $r13[2] = $r12;

        $r14 = newarray (java.awt.datatransfer.DataFlavor)[2];

        <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors> = $r14;

        $r16 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors>;

        $r15 = new java.awt.datatransfer.DataFlavor;

        specialinvoke $r15.<java.awt.datatransfer.DataFlavor: void <init>(java.lang.String)>("application/x-java-jvm-local-objectref;class=java.lang.String");

        $r16[0] = $r15;

        $r18 = <com.jidesoft.utils.BasicTransferable: java.awt.datatransfer.DataFlavor[] stringFlavors>;

        $r17 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor stringFlavor>;

        $r18[1] = $r17;

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("error initializing BasicTranserable");

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
