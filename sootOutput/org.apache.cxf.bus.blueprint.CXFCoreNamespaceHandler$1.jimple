class org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1 extends org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser
{
    final org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler this$0;

    void <init>(org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler, java.lang.Class)
    {
        java.lang.Class r2;
        org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1 r0;
        org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler r1;

        r0 := @this: org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1;

        r1 := @parameter0: org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler;

        r2 := @parameter1: java.lang.Class;

        r0.<org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1: org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler this$0> = r1;

        specialinvoke r0.<org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser: void <init>(java.lang.Class)>(r2);

        return;
    }

    public java.lang.String getId(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext)
    {
        org.w3c.dom.Element r0;
        org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1 r4;
        org.apache.aries.blueprint.ParserContext r5;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r6, r7, $r8;
        boolean $z0, $z1;

        r4 := @this: org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.aries.blueprint.ParserContext;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("id");

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        goto label2;

     label1:
        $r6 = null;

     label2:
        r7 = $r6;

        if $r6 != null goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cxf.workqueue.");

        $z1 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("name");

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        goto label4;

     label3:
        $r8 = "def";

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r7;
    }

    protected void processNameAttribute(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, java.lang.String)
    {
        org.w3c.dom.Element r5;
        org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1 r4;
        org.osgi.service.blueprint.reflect.ValueMetadata $r3;
        org.apache.aries.blueprint.ParserContext r1;
        org.osgi.service.blueprint.reflect.Metadata $r6;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r0;
        java.lang.String r2;

        r4 := @this: org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1;

        r5 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r0 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler$1: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r1, r2);

        $r6 = (org.osgi.service.blueprint.reflect.Metadata) $r3;

        interfaceinvoke r0.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("name", $r6);

        return;
    }
}
