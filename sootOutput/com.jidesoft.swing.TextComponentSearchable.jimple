public class com.jidesoft.swing.TextComponentSearchable extends com.jidesoft.swing.Searchable implements javax.swing.event.DocumentListener, java.beans.PropertyChangeListener
{
    private javax.swing.text.Highlighter$HighlightPainter _highlightPainter;
    private static final java.awt.Color DEFAULT_HIGHLIGHT_COLOR;
    private java.awt.Color _highlightColor;
    private int _selectedIndex;
    private com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache;
    private java.lang.String _text;

    public void <init>(javax.swing.text.JTextComponent)
    {
        java.awt.Color $r3;
        int $i1;
        com.jidesoft.swing.TextComponentSearchable r0;
        com.jidesoft.swing.TextComponentSearchable$HighlighCache $r4;
        javax.swing.text.JTextComponent r1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void <init>(javax.swing.JComponent)>(r1);

        r0.<com.jidesoft.swing.TextComponentSearchable: java.awt.Color _highlightColor> = null;

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.TextComponentSearchable: int _selectedIndex> = $i1;

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = null;

        $r4 = new com.jidesoft.swing.TextComponentSearchable$HighlighCache;

        specialinvoke $r4.<com.jidesoft.swing.TextComponentSearchable$HighlighCache: void <init>(com.jidesoft.swing.TextComponentSearchable,com.jidesoft.swing.TextComponentSearchable$1)>(r0, null);

        r0.<com.jidesoft.swing.TextComponentSearchable: com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache> = $r4;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void installHighlightsRemover()>();

        $r3 = <com.jidesoft.swing.TextComponentSearchable: java.awt.Color DEFAULT_HIGHLIGHT_COLOR>;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void setHighlightColor(java.awt.Color)>($r3);

        return;
    }

    public void uninstallHighlightsRemover()
    {
        javax.swing.JComponent $r1;
        javax.swing.KeyStroke $r2;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        staticinvoke <com.jidesoft.swing.DelegateAction: void restoreAction(javax.swing.JComponent,int,javax.swing.KeyStroke)>($r1, 0, $r2);

        return;
    }

    public void installHighlightsRemover()
    {
        javax.swing.JComponent $r1;
        javax.swing.KeyStroke $r2;
        com.jidesoft.swing.TextComponentSearchable$1 $r3;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        $r3 = new com.jidesoft.swing.TextComponentSearchable$1;

        specialinvoke $r3.<com.jidesoft.swing.TextComponentSearchable$1: void <init>(com.jidesoft.swing.TextComponentSearchable)>(r0);

        staticinvoke <com.jidesoft.swing.DelegateAction: void replaceAction(javax.swing.JComponent,int,javax.swing.KeyStroke,com.jidesoft.swing.DelegateAction)>($r1, 0, $r2, $r3);

        return;
    }

    public void installListeners()
    {
        javax.swing.JComponent $r1, $r2, $r5;
        javax.swing.text.Document $r4;
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.text.JTextComponent $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void installListeners()>();

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.text.JTextComponent) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        interfaceinvoke $r4.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        virtualinvoke $r5.<javax.swing.JComponent: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("document", r0);

     label1:
        return;
    }

    public void uninstallListeners()
    {
        javax.swing.JComponent $r1, $r2, $r5;
        javax.swing.text.Document $r4;
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.text.JTextComponent $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void uninstallListeners()>();

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.text.JTextComponent) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        interfaceinvoke $r4.<javax.swing.text.Document: void removeDocumentListener(javax.swing.event.DocumentListener)>(r0);

        $r5 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        virtualinvoke $r5.<javax.swing.JComponent: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("document", r0);

     label1:
        return;
    }

    protected void setSelectedIndex(int, boolean)
    {
        javax.swing.JComponent $r1;
        javax.swing.text.BadLocationException $r3;
        int i0, $i2, $i4;
        java.lang.String $r2;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0, z1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label6;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void removeAllHighlights()>();

        $i4 = (int) -1;

        r0.<com.jidesoft.swing.TextComponentSearchable: int _selectedIndex> = $i4;

        return;

     label1:
        if z1 != 0 goto label2;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void removeAllHighlights()>();

     label2:
        $r2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getSearchingText()>();

     label3:
        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void addHighlight(int,java.lang.String,boolean)>(i0, $r2, z1);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label6:
        return;

        catch javax.swing.text.BadLocationException from label3 to label4 with label5;
    }

    protected void addHighlight(int, java.lang.String, boolean) throws javax.swing.text.BadLocationException
    {
        javax.swing.JComponent $r1, $r2;
        javax.swing.text.JTextComponent r3;
        javax.swing.text.Highlighter $r4;
        javax.swing.text.Highlighter$HighlightPainter $r6;
        com.jidesoft.swing.TextComponentSearchable$2 $r9;
        int i0, $i1, $i2;
        java.lang.Object $r7;
        java.lang.String r5;
        com.jidesoft.swing.TextComponentSearchable r0;
        com.jidesoft.swing.TextComponentSearchable$HighlighCache $r8;
        boolean $z0, z1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        r3 = (javax.swing.text.JTextComponent) $r2;

        $r4 = virtualinvoke r3.<javax.swing.text.JTextComponent: javax.swing.text.Highlighter getHighlighter()>();

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        $i2 = i0 + $i1;

        $r6 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.text.Highlighter$HighlightPainter _highlightPainter>;

        $r7 = interfaceinvoke $r4.<javax.swing.text.Highlighter: java.lang.Object addHighlight(int,int,javax.swing.text.Highlighter$HighlightPainter)>(i0, $i2, $r6);

        $r8 = r0.<com.jidesoft.swing.TextComponentSearchable: com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache>;

        virtualinvoke $r8.<com.jidesoft.swing.TextComponentSearchable$HighlighCache: void addHighlight(java.lang.Object)>($r7);

        r0.<com.jidesoft.swing.TextComponentSearchable: int _selectedIndex> = i0;

        if z1 != 0 goto label1;

        $r9 = new com.jidesoft.swing.TextComponentSearchable$2;

        specialinvoke $r9.<com.jidesoft.swing.TextComponentSearchable$2: void <init>(com.jidesoft.swing.TextComponentSearchable,javax.swing.text.JTextComponent,int,java.lang.String)>(r0, r3, i0, r5);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r9);

     label1:
        return;
    }

    private void scrollTextVisible(javax.swing.text.JTextComponent, int, int)
    {
        java.awt.Rectangle $r1, $r2, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        javax.swing.JComponent $r4;
        javax.swing.text.BadLocationException $r6;
        javax.swing.text.JTextComponent r0;
        com.jidesoft.swing.TextComponentSearchable r3;

        r3 := @this: com.jidesoft.swing.TextComponentSearchable;

        r0 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i10 = (int) -1;

        if i0 == $i10 goto label10;

     label01:
        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Rectangle modelToView(int)>(i0);

        if $r1 != null goto label03;

     label02:
        return;

     label03:
        $i2 = i0 + i1;

        $r2 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.awt.Rectangle modelToView(int)>($i2);

        if $r2 != null goto label05;

     label04:
        return;

     label05:
        $r4 = r3.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r5 = virtualinvoke $r4.<javax.swing.JComponent: java.awt.Rectangle getVisibleRect()>();

        $i4 = $r1.<java.awt.Rectangle: int x>;

        $i3 = $r5.<java.awt.Rectangle: int width>;

        if $i4 > $i3 goto label06;

        $i8 = $r2.<java.awt.Rectangle: int x>;

        $r1.<java.awt.Rectangle: int width> = $i8;

        $r1.<java.awt.Rectangle: int x> = 0;

        goto label07;

     label06:
        $i6 = $r2.<java.awt.Rectangle: int x>;

        $i5 = $r1.<java.awt.Rectangle: int x>;

        $i7 = $i6 - $i5;

        $r1.<java.awt.Rectangle: int width> = $i7;

     label07:
        virtualinvoke r0.<javax.swing.text.JTextComponent: void scrollRectToVisible(java.awt.Rectangle)>($r1);

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

     label10:
        return;

        catch javax.swing.text.BadLocationException from label01 to label02 with label09;
        catch javax.swing.text.BadLocationException from label03 to label04 with label09;
        catch javax.swing.text.BadLocationException from label05 to label08 with label09;
    }

    protected void removeAllHighlights()
    {
        javax.swing.JComponent $r1, $r6;
        java.util.Iterator $r3;
        javax.swing.text.JTextComponent $r7;
        javax.swing.text.Highlighter $r8;
        java.lang.Object $r5;
        com.jidesoft.swing.TextComponentSearchable r0;
        com.jidesoft.swing.TextComponentSearchable$HighlighCache $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache>;

        $r3 = virtualinvoke $r2.<com.jidesoft.swing.TextComponentSearchable$HighlighCache: java.util.Iterator getAllHighlights()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r7 = (javax.swing.text.JTextComponent) $r6;

        $r8 = virtualinvoke $r7.<javax.swing.text.JTextComponent: javax.swing.text.Highlighter getHighlighter()>();

        interfaceinvoke $r8.<javax.swing.text.Highlighter: void removeHighlight(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r4 = r0.<com.jidesoft.swing.TextComponentSearchable: com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache>;

        virtualinvoke $r4.<com.jidesoft.swing.TextComponentSearchable$HighlighCache: void removeAllHighlights()>();

     label3:
        return;
    }

    protected int getSelectedIndex()
    {
        javax.swing.JComponent $r1;
        int $i0;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.jidesoft.swing.TextComponentSearchable: int _selectedIndex>;

        return $i0;

     label1:
        return 0;
    }

    protected java.lang.Object getElementAt(int)
    {
        javax.swing.JComponent $r2, $r3;
        javax.swing.text.BadLocationException $r7;
        javax.swing.text.JTextComponent $r4;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r1, $r6;
        javax.swing.text.Document $r5;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getSearchingText()>();

        if $r1 == null goto label4;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r2 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i5 = i0 + $i1;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

        if i5 <= $i2 goto label1;

        i5 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

     label1:
        $r3 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.text.JTextComponent) $r3;

        $r5 = virtualinvoke $r4.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $i3 = i5 - i0;

        $i4 = $i3 + 1;

        $r6 = interfaceinvoke $r5.<javax.swing.text.Document: java.lang.String getText(int,int)>(i0, $i4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        return null;

     label4:
        return "";

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    protected int getElementCount()
    {
        javax.swing.JComponent $r1, $r2;
        int $i0;
        javax.swing.text.Document $r4;
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.text.JTextComponent $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.text.JTextComponent) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $i0 = interfaceinvoke $r4.<javax.swing.text.Document: int getLength()>();

        return $i0;

     label1:
        return 0;
    }

    protected java.lang.String convertElementToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;
        com.jidesoft.swing.TextComponentSearchable r2;

        r2 := @this: com.jidesoft.swing.TextComponentSearchable;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label1:
        return "";
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        com.jidesoft.swing.event.SearchableEvent $r4;
        java.lang.Object $r2, $r3, $r5, $r7;
        javax.swing.text.Document $r6, $r8;
        com.jidesoft.swing.TextComponentSearchable r0;
        java.beans.PropertyChangeEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r1 := @parameter0: java.beans.PropertyChangeEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void hidePopup()>();

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = null;

        $r2 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $z1 = $r2 instanceof javax.swing.text.Document;

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r8 = (javax.swing.text.Document) $r7;

        interfaceinvoke $r8.<javax.swing.text.Document: void removeDocumentListener(javax.swing.event.DocumentListener)>(r0);

     label1:
        $r3 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $z2 = $r3 instanceof javax.swing.text.Document;

        if $z2 == 0 goto label2;

        $r5 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r6 = (javax.swing.text.Document) $r5;

        interfaceinvoke $r6.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>(r0);

     label2:
        $r4 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r4.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r0, 3005);

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r4);

     label3:
        return;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.event.DocumentEvent r2;
        com.jidesoft.swing.event.SearchableEvent $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: javax.swing.event.DocumentEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void hidePopup()>();

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = null;

        $r1 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r1.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r0, 3005);

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r1);

     label1:
        return;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.event.DocumentEvent r2;
        com.jidesoft.swing.event.SearchableEvent $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: javax.swing.event.DocumentEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void hidePopup()>();

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = null;

        $r1 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r1.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r0, 3005);

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r1);

     label1:
        return;
    }

    public void changedUpdate(javax.swing.event.DocumentEvent)
    {
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.event.DocumentEvent r2;
        com.jidesoft.swing.event.SearchableEvent $r1;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: javax.swing.event.DocumentEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void hidePopup()>();

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = null;

        $r1 = new com.jidesoft.swing.event.SearchableEvent;

        specialinvoke $r1.<com.jidesoft.swing.event.SearchableEvent: void <init>(com.jidesoft.swing.Searchable,int)>(r0, 3005);

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void fireSearchableEvent(com.jidesoft.swing.event.SearchableEvent)>($r1);

     label1:
        return;
    }

    protected boolean isActivateKey(java.awt.event.KeyEvent)
    {
        javax.swing.JComponent $r1, $r3;
        java.awt.event.KeyEvent r2;
        javax.swing.text.JTextComponent $r4;
        int $i0, $i1;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.awt.event.KeyEvent;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.text.JTextComponent) $r3;

        $z2 = virtualinvoke $r4.<javax.swing.text.JTextComponent: boolean isEditable()>();

        if $z2 == 0 goto label3;

        $i0 = virtualinvoke r2.<java.awt.event.KeyEvent: int getID()>();

        if $i0 != 401 goto label1;

        $i1 = virtualinvoke r2.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i1 != 70 goto label1;

        $z3 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean isMenuShortcutKeyDown(java.awt.event.InputEvent)>(r2);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $z1 = specialinvoke r0.<com.jidesoft.swing.Searchable: boolean isActivateKey(java.awt.event.KeyEvent)>(r2);

        return $z1;
    }

    public java.awt.Color getHighlightColor()
    {
        java.awt.Color $r1, $r2, $r3;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: java.awt.Color _highlightColor>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.swing.TextComponentSearchable: java.awt.Color _highlightColor>;

        return $r3;

     label1:
        $r2 = <com.jidesoft.swing.TextComponentSearchable: java.awt.Color DEFAULT_HIGHLIGHT_COLOR>;

        return $r2;
    }

    public void setHighlightColor(java.awt.Color)
    {
        java.awt.Color r1, $r3;
        javax.swing.text.DefaultHighlighter$DefaultHighlightPainter $r2;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.TextComponentSearchable: java.awt.Color _highlightColor> = r1;

        $r2 = new javax.swing.text.DefaultHighlighter$DefaultHighlightPainter;

        $r3 = r0.<com.jidesoft.swing.TextComponentSearchable: java.awt.Color _highlightColor>;

        specialinvoke $r2.<javax.swing.text.DefaultHighlighter$DefaultHighlightPainter: void <init>(java.awt.Color)>($r3);

        r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.text.Highlighter$HighlightPainter _highlightPainter> = $r2;

        return;
    }

    public int findLast(java.lang.String)
    {
        javax.swing.JComponent $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String r2, $r3;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $z1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z1 == 0 goto label1;

        $i3 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(r2);

        return $i3;

     label1:
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int lastIndexOf(java.lang.String,java.lang.String,int)>($r3, r2, $i1);

        return $i2;

     label2:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findLast(java.lang.String)>(r2);

        return $i0;
    }

    private java.lang.String getDocumentText()
    {
        javax.swing.JComponent $r3;
        javax.swing.text.BadLocationException $r7;
        javax.swing.text.JTextComponent $r4;
        int $i0;
        java.lang.String $r1, $r2, $r6;
        javax.swing.text.Document $r5;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text>;

        if $r1 != null goto label4;

        $r3 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.text.JTextComponent) $r3;

        $r5 = virtualinvoke $r4.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

     label1:
        $i0 = interfaceinvoke $r5.<javax.swing.text.Document: int getLength()>();

        $r6 = interfaceinvoke $r5.<javax.swing.text.Document: java.lang.String getText(int,int)>(0, $i0);

        r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        return "";

     label4:
        $r2 = r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String _text>;

        return $r2;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public int findFirst(java.lang.String)
    {
        javax.swing.JComponent $r1;
        int $i0, $i1, $i2;
        java.lang.String r2, $r3;
        com.jidesoft.swing.TextComponentSearchable r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $z1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z1 == 0 goto label1;

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(r2);

        return $i2;

     label1:
        $i1 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r3, r2, 0);

        return $i1;

     label2:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findFirst(java.lang.String)>(r2);

        return $i0;
    }

    static int lastIndexOf(java.lang.String, java.lang.String, int)
    {
        int $i0, $i1, i2, i3, i4, $i5, i6, $i7, i15, i16, i17, i18, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i32, $i34, $i36, $i38;
        java.lang.String r0, r1, $r2, $r4;
        char $c8, $c9, $c10, $c11, $c12, $c13, $c14;
        char[] $r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i15 := @parameter2: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = $i0 - $i1;

        if i15 >= 0 goto label01;

        $i20 = (int) -1;

        return $i20;

     label01:
        if i15 <= i2 goto label02;

        i15 = i2;

     label02:
        if $i1 != 0 goto label03;

        return i15;

     label03:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        i3 = $i1 - 1;

        i4 = $i1 - 1;

        i16 = i4 + i15;

     label04:
        if i16 < i4 goto label12;

     label05:
        if i16 < i4 goto label06;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        $c12 = $r3[i3];

        $i21 = (int) $c11;

        $i22 = (int) $c12;

        if $i21 == $i22 goto label06;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        $c14 = $r5[i3];

        $i23 = (int) $c13;

        $i24 = (int) $c14;

        if $i23 == $i24 goto label06;

        $i26 = (int) -1;

        i16 = i16 + $i26;

        goto label05;

     label06:
        if i16 >= i4 goto label07;

        goto label12;

     label07:
        i17 = i16 - 1;

        $i5 = $i1 - 1;

        i6 = i17 - $i5;

        i18 = i3 - 1;

     label08:
        if i17 <= i6 goto label10;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $c9 = $r3[i18];

        $i27 = (int) $c8;

        $i28 = (int) $c9;

        if $i27 == $i28 goto label09;

        $c10 = $r5[i18];

        $i29 = (int) $c8;

        $i30 = (int) $c10;

        if $i29 == $i30 goto label09;

        $i32 = (int) -1;

        i16 = i16 + $i32;

        goto label10;

     label09:
        $i34 = (int) -1;

        i17 = i17 + $i34;

        $i36 = (int) -1;

        i18 = i18 + $i36;

        goto label08;

     label10:
        if i17 > i6 goto label11;

        $i7 = i6 + 1;

        return $i7;

     label11:
        goto label04;

     label12:
        $i38 = (int) -1;

        return $i38;
    }

    private static int indexOf(java.lang.String, java.lang.String, int)
    {
        int $i0, $i1, i2, $i5, i6, i15, $i16, i17, i18, i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35;
        java.lang.String r0, r1, $r2, $r4;
        char $c3, $c4, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14;
        char[] $r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i15 := @parameter2: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i15 < $i0 goto label03;

        if $i1 != 0 goto label01;

        $i16 = $i0;

        goto label02;

     label01:
        $i21 = (int) -1;

        $i16 = $i21;

     label02:
        return $i16;

     label03:
        if i15 >= 0 goto label04;

        i15 = 0;

     label04:
        if $i1 != 0 goto label05;

        return i15;

     label05:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        i2 = $i0 - $i1;

        i17 = i15;

     label06:
        if i17 > i2 goto label13;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $c4 = $r3[0];

        $i22 = (int) $c3;

        $i23 = (int) $c4;

        if $i22 == $i23 goto label08;

        $c10 = $r5[0];

        $i24 = (int) $c3;

        $i25 = (int) $c10;

        if $i24 == $i25 goto label08;

        i17 = i17 + 1;

     label07:
        if i17 > i2 goto label08;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $c12 = $r3[0];

        $i26 = (int) $c11;

        $i27 = (int) $c12;

        if $i26 == $i27 goto label08;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i17);

        $c14 = $r5[0];

        $i28 = (int) $c13;

        $i29 = (int) $c14;

        if $i28 == $i29 goto label08;

        i17 = i17 + 1;

        goto label07;

     label08:
        if i17 > i2 goto label12;

        i18 = i17 + 1;

        $i5 = i18 + $i1;

        i6 = $i5 - 1;

        i19 = 1;

     label09:
        if i18 >= i6 goto label11;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i18);

        $c8 = $r3[i19];

        $i30 = (int) $c7;

        $i31 = (int) $c8;

        if $i30 == $i31 goto label10;

        $c9 = $r5[i19];

        $i32 = (int) $c7;

        $i33 = (int) $c9;

        if $i32 == $i33 goto label10;

        goto label11;

     label10:
        i19 = i19 + 1;

        i18 = i18 + 1;

        goto label09;

     label11:
        if i18 != i6 goto label12;

        return i17;

     label12:
        i17 = i17 + 1;

        goto label06;

     label13:
        $i35 = (int) -1;

        return $i35;
    }

    public int findFromCursor(java.lang.String)
    {
        byte $b13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, i12, $i14, i15, $i16, $i18, $i20, $i22, $i24;
        java.lang.String r2, $r3, $r4;
        javax.swing.JComponent $r1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCountMatch()>();

        if $z0 == 0 goto label04;

        $r4 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        i8 = 0;

        $i18 = (int) -1;

        r0.<com.jidesoft.swing.TextComponentSearchable: int _matchCount> = $i18;

     label01:
        i9 = i8;

        $z5 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z5 == 0 goto label02;

        $i10 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String,int)>(r2, i8);

        goto label03;

     label02:
        $i10 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r4, r2, i8);

     label03:
        $i7 = $i10 + 1;

        i8 = $i7;

        $i5 = r0.<com.jidesoft.swing.TextComponentSearchable: int _matchCount>;

        $i6 = $i5 + 1;

        r0.<com.jidesoft.swing.TextComponentSearchable: int _matchCount> = $i6;

        if $i7 > i9 goto label01;

     label04:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isReverseOrder()>();

        if $z1 == 0 goto label05;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int reverseFindFromCursor(java.lang.String)>(r2);

        return $i4;

     label05:
        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z2 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z2 == 0 goto label17;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        $i20 = (int) -1;

        if $i1 == $i20 goto label06;

        $i11 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        goto label07;

     label06:
        $i11 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getSelectedIndex()>();

     label07:
        i12 = $i11;

        if $i11 >= 0 goto label08;

        i12 = 0;

     label08:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

        if $i2 != 0 goto label11;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 <= 0 goto label09;

        $b13 = -1;

        goto label10;

     label09:
        $b13 = 0;

     label10:
        return $b13;

     label11:
        $z3 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z3 == 0 goto label12;

        $i14 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r2, i12);

        goto label13;

     label12:
        $i14 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r3, r2, i12);

     label13:
        i15 = $i14;

        $i22 = (int) -1;

        if $i14 != $i22 goto label16;

        $z4 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z4 == 0 goto label14;

        $i16 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r2, 0);

        goto label15;

     label14:
        $i16 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r3, r2, 0);

     label15:
        i15 = $i16;

        if $i16 < i12 goto label16;

        $i24 = (int) -1;

        i15 = $i24;

     label16:
        return i15;

     label17:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findFromCursor(java.lang.String)>(r2);

        return $i0;
    }

    public int reverseFindFromCursor(java.lang.String)
    {
        byte $b11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12, i13, $i14, $i16, $i18, $i20;
        java.lang.String r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.JComponent $r1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isReverseOrder()>();

        if $z0 != 0 goto label01;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int findFromCursor(java.lang.String)>(r2);

        return $i8;

     label01:
        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z1 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z1 == 0 goto label13;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        $i16 = (int) -1;

        if $i1 == $i16 goto label02;

        $i9 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        goto label03;

     label02:
        $i9 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getSelectedIndex()>();

     label03:
        i10 = $i9;

        if $i9 >= 0 goto label04;

        i10 = 0;

     label04:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

        if $i2 != 0 goto label07;

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i7 <= 0 goto label05;

        $b11 = -1;

        goto label06;

     label05:
        $b11 = 0;

     label06:
        return $b11;

     label07:
        $z2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z2 == 0 goto label08;

        $i12 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r2, i10);

        goto label09;

     label08:
        $i12 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int lastIndexOf(java.lang.String,java.lang.String,int)>($r3, r2, i10);

     label09:
        i13 = $i12;

        $i18 = (int) -1;

        if $i12 != $i18 goto label12;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z3 == 0 goto label10;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $i14 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r2, $i6);

        goto label11;

     label10:
        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $i14 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int lastIndexOf(java.lang.String,java.lang.String,int)>($r3, r2, $i4);

     label11:
        i13 = $i14;

        if $i14 > i10 goto label12;

        $i20 = (int) -1;

        i13 = $i20;

     label12:
        return i13;

     label13:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findFromCursor(java.lang.String)>(r2);

        return $i0;
    }

    public int findNext(java.lang.String)
    {
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9, i10, $i11, $i13, $i15, $i17;
        java.lang.String r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.JComponent $r1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label12;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        $i13 = (int) -1;

        if $i1 == $i13 goto label01;

        $i6 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        goto label02;

     label01:
        $i6 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getSelectedIndex()>();

     label02:
        i7 = $i6;

        if $i6 >= 0 goto label03;

        i7 = 0;

     label03:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

        if $i2 != 0 goto label06;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i5 <= 0 goto label04;

        $b8 = -1;

        goto label05;

     label04:
        $b8 = 0;

     label05:
        return $b8;

     label06:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z1 == 0 goto label07;

        $i4 = i7 + 1;

        $i9 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r2, $i4);

        goto label08;

     label07:
        $i3 = i7 + 1;

        $i9 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r3, r2, $i3);

     label08:
        i10 = $i9;

        $i15 = (int) -1;

        if $i9 != $i15 goto label11;

        $z2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isRepeats()>();

        if $z2 == 0 goto label11;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z3 == 0 goto label09;

        $i11 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String,int)>(r2, 0);

        goto label10;

     label09:
        $i11 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int indexOf(java.lang.String,java.lang.String,int)>($r3, r2, 0);

     label10:
        i10 = $i11;

        if $i11 <= i7 goto label11;

        $i17 = (int) -1;

        i10 = $i17;

     label11:
        return i10;

     label12:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findNext(java.lang.String)>(r2);

        return $i0;
    }

    public int findPrevious(java.lang.String)
    {
        byte $b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11, i12, $i13, $i15, $i17, $i19;
        java.lang.String r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.JComponent $r1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.text.JTextComponent;

        if $z0 == 0 goto label12;

        $r3 = specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: java.lang.String getDocumentText()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        $i15 = (int) -1;

        if $i1 == $i15 goto label01;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getCursor()>();

        goto label02;

     label01:
        $i8 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getSelectedIndex()>();

     label02:
        i9 = $i8;

        if $i8 >= 0 goto label03;

        i9 = 0;

     label03:
        $i2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: int getElementCount()>();

        if $i2 != 0 goto label06;

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i7 <= 0 goto label04;

        $b10 = -1;

        goto label05;

     label04:
        $b10 = 0;

     label05:
        return $b10;

     label06:
        $z1 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z1 == 0 goto label07;

        $i6 = i9 - 1;

        $i11 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r2, $i6);

        goto label08;

     label07:
        $i3 = i9 - 1;

        $i11 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int lastIndexOf(java.lang.String,java.lang.String,int)>($r3, r2, $i3);

     label08:
        i12 = $i11;

        $i17 = (int) -1;

        if $i11 != $i17 goto label11;

        $z2 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isRepeats()>();

        if $z2 == 0 goto label11;

        $z3 = virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: boolean isCaseSensitive()>();

        if $z3 == 0 goto label09;

        $i5 = $i2 - 1;

        $i13 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r2, $i5);

        goto label10;

     label09:
        $i4 = $i2 - 1;

        $i13 = staticinvoke <com.jidesoft.swing.TextComponentSearchable: int lastIndexOf(java.lang.String,java.lang.String,int)>($r3, r2, $i4);

     label10:
        i12 = $i13;

        if $i13 >= i9 goto label11;

        $i19 = (int) -1;

        i12 = $i19;

     label11:
        return i12;

     label12:
        $i0 = specialinvoke r0.<com.jidesoft.swing.Searchable: int findPrevious(java.lang.String)>(r2);

        return $i0;
    }

    public void hidePopup()
    {
        int $i1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void hidePopup()>();

        $i1 = (int) -1;

        r0.<com.jidesoft.swing.TextComponentSearchable: int _selectedIndex> = $i1;

        return;
    }

    protected void searchingTextEmpty()
    {
        int $i1;
        com.jidesoft.swing.TextComponentSearchable r0;

        r0 := @this: com.jidesoft.swing.TextComponentSearchable;

        $i1 = (int) -1;

        virtualinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void setSelectedIndex(int,boolean)>($i1, 0);

        return;
    }

    static com.jidesoft.swing.TextComponentSearchable$HighlighCache access$100(com.jidesoft.swing.TextComponentSearchable)
    {
        com.jidesoft.swing.TextComponentSearchable r0;
        com.jidesoft.swing.TextComponentSearchable$HighlighCache $r1;

        r0 := @parameter0: com.jidesoft.swing.TextComponentSearchable;

        $r1 = r0.<com.jidesoft.swing.TextComponentSearchable: com.jidesoft.swing.TextComponentSearchable$HighlighCache _highlighCache>;

        return $r1;
    }

    static void access$200(com.jidesoft.swing.TextComponentSearchable, javax.swing.text.JTextComponent, int, int)
    {
        int i0, i1;
        com.jidesoft.swing.TextComponentSearchable r0;
        javax.swing.text.JTextComponent r1;

        r0 := @parameter0: com.jidesoft.swing.TextComponentSearchable;

        r1 := @parameter1: javax.swing.text.JTextComponent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.jidesoft.swing.TextComponentSearchable: void scrollTextVisible(javax.swing.text.JTextComponent,int,int)>(r1, i0, i1);

        return;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(204, 204, 255);

        <com.jidesoft.swing.TextComponentSearchable: java.awt.Color DEFAULT_HIGHLIGHT_COLOR> = $r0;

        return;
    }
}
