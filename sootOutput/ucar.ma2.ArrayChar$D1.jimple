public class ucar.ma2.ArrayChar$D1 extends ucar.ma2.ArrayChar
{
    private ucar.ma2.Index1D ix;

    public void <init>(int)
    {
        ucar.ma2.Index1D $r3;
        int[] $r1;
        ucar.ma2.Index $r2;
        int i0;
        ucar.ma2.ArrayChar$D1 r0;

        r0 := @this: ucar.ma2.ArrayChar$D1;

        i0 := @parameter0: int;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        specialinvoke r0.<ucar.ma2.ArrayChar: void <init>(int[])>($r1);

        $r2 = r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index indexCalc>;

        $r3 = (ucar.ma2.Index1D) $r2;

        r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index1D ix> = $r3;

        return;
    }

    private void <init>(ucar.ma2.Index, char[])
    {
        ucar.ma2.Index1D $r4;
        ucar.ma2.Index r1, $r3;
        char[] r2;
        ucar.ma2.ArrayChar$D1 r0;

        r0 := @this: ucar.ma2.ArrayChar$D1;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: char[];

        specialinvoke r0.<ucar.ma2.ArrayChar: void <init>(ucar.ma2.Index,char[])>(r1, r2);

        $r3 = r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index indexCalc>;

        $r4 = (ucar.ma2.Index1D) $r3;

        r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index1D ix> = $r4;

        return;
    }

    public char get(int)
    {
        ucar.ma2.Index1D $r1;
        int i0, $i1;
        char[] $r2;
        char $c2;
        ucar.ma2.ArrayChar$D1 r0;

        r0 := @this: ucar.ma2.ArrayChar$D1;

        i0 := @parameter0: int;

        $r2 = r0.<ucar.ma2.ArrayChar$D1: char[] storage>;

        $r1 = r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index1D ix>;

        $i1 = virtualinvoke $r1.<ucar.ma2.Index1D: int setDirect(int)>(i0);

        $c2 = $r2[$i1];

        return $c2;
    }

    public void set(int, char)
    {
        ucar.ma2.Index1D $r1;
        int i0, $i1;
        char[] $r2;
        char c2;
        ucar.ma2.ArrayChar$D1 r0;

        r0 := @this: ucar.ma2.ArrayChar$D1;

        i0 := @parameter0: int;

        c2 := @parameter1: char;

        $r2 = r0.<ucar.ma2.ArrayChar$D1: char[] storage>;

        $r1 = r0.<ucar.ma2.ArrayChar$D1: ucar.ma2.Index1D ix>;

        $i1 = virtualinvoke $r1.<ucar.ma2.Index1D: int setDirect(int)>(i0);

        $r2[$i1] = c2;

        return;
    }

    void <init>(ucar.ma2.Index, char[], ucar.ma2.ArrayChar$1)
    {
        ucar.ma2.Index r1;
        char[] r2;
        ucar.ma2.ArrayChar$1 r3;
        ucar.ma2.ArrayChar$D1 r0;

        r0 := @this: ucar.ma2.ArrayChar$D1;

        r1 := @parameter0: ucar.ma2.Index;

        r2 := @parameter1: char[];

        r3 := @parameter2: ucar.ma2.ArrayChar$1;

        specialinvoke r0.<ucar.ma2.ArrayChar$D1: void <init>(ucar.ma2.Index,char[])>(r1, r2);

        return;
    }
}
