final class edu.mit.csail.sdg.alloy4.XMLNode$XMLParser extends java.lang.Object
{
    private final boolean wantText;
    private final java.io.Reader reader;
    private int x;
    private int y;
    private int read;

    private void <init>(java.io.Reader, boolean)
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        int $i1;
        java.io.Reader r1;
        java.io.BufferedReader $r3;
        boolean z0, $z1;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x> = 1;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y> = 1;

        $i1 = (int) -2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i1;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: boolean wantText> = z0;

        $z1 = r1 instanceof java.io.BufferedReader;

        if $z1 == 0 goto label1;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.io.Reader reader> = r1;

        goto label2;

     label1:
        $r3 = new java.io.BufferedReader;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.io.Reader reader> = $r3;

     label2:
        return;
    }

    private void malform(java.lang.String) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r3;
        java.io.IOException $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r9;
        java.lang.String r8, $r10;

        r3 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r8 := @parameter0: java.lang.String;

        $r0 = new java.io.IOException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error at line ");

        $i0 = r3.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column ");

        $i1 = r3.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r0;
    }

    private int read() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        java.io.Reader $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        $i0 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        $i10 = (int) -1;

        if $i0 >= $i10 goto label1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.io.Reader reader>;

        $i7 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i7;

     label1:
        $i1 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        if $i1 >= 0 goto label2;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Unexpected end of file.");

        goto label4;

     label2:
        $i2 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        if $i2 != 10 goto label3;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x> = 1;

        $i5 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y>;

        $i6 = $i5 + 1;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y> = $i6;

        goto label4;

     label3:
        $i3 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x>;

        $i4 = $i3 + 1;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x> = $i4;

     label4:
        $i8 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        $i12 = (int) -2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i12;

        return $i8;
    }

    private int peek() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        int $i0, $i1, $i2, $i4;
        java.io.Reader $r1;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        $i0 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        $i4 = (int) -1;

        if $i0 >= $i4 goto label1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.io.Reader reader>;

        $i2 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i2;

     label1:
        $i1 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read>;

        return $i1;
    }

    private void skipUntil(int, int) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        int $i0, i1, $i2, i3, $i5;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

     label1:
        $i0 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i0 != i1 goto label2;

        $i2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int peek()>();

        if $i2 != i3 goto label2;

        $i5 = (int) -2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i5;

        return;

     label2:
        goto label1;
    }

    private void expect(java.lang.String) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        char $c4;
        int i0, i1, $i2, $i3, i5, $i6;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String r1, $r6;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r1 := @parameter0: java.lang.String;

        i0 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x>;

        i1 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y>;

        i5 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i2 goto label3;

        $i3 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c4;

        if $i3 == $i6 goto label2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int x> = i0;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int y> = i1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expects the string \"");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>($r6);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    private int skipSpace() throws java.io.IOException
    {
        int $i0;
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

     label1:
        $i0 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i0 == 32 goto label2;

        if $i0 == 9 goto label2;

        if $i0 == 13 goto label2;

        if $i0 == 10 goto label2;

        return $i0;

     label2:
        goto label1;
    }

    private int skipNondata(boolean) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        boolean z0;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        z0 := @parameter0: boolean;

     label01:
        $i6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int peek()>();

        if $i6 >= 0 goto label02;

        $i9 = (int) -1;

        return $i9;

     label02:
        $i11 = (int) -2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i11;

        if $i6 == 32 goto label01;

        if $i6 == 9 goto label01;

        if $i6 == 13 goto label01;

        if $i6 != 10 goto label03;

        goto label01;

     label03:
        if $i6 != 60 goto label08;

        $i1 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i1 != 63 goto label04;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void skipUntil(int,int)>(63, 62);

        goto label01;

     label04:
        if $i1 == 33 goto label05;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i1;

        return 60;

     label05:
        $i2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int peek()>();

        if $i2 != 45 goto label07;

        $i13 = (int) -2;

        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i13;

        $i4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i4 == 45 goto label06;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects start of <!--...-->");

     label06:
        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void skipUntil(int,int)>(45, 45);

        $i5 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i5 == 62 goto label01;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects end of <!--...-->");

        goto label01;

     label07:
        $i3 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipNondata(boolean)>(1);

        if $i3 == 62 goto label13;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects end of <!...>");

        goto label13;

     label08:
        if z0 == 0 goto label09;

        if $i6 == 93 goto label09;

        if $i6 != 62 goto label10;

     label09:
        return $i6;

     label10:
        if $i6 != 91 goto label11;

        $i0 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipNondata(boolean)>(1);

        if $i0 == 93 goto label13;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects end of [...]");

        goto label13;

     label11:
        if $i6 == 39 goto label12;

        if $i6 != 34 goto label13;

     label12:
        $i7 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i7 == $i6 goto label13;

        goto label12;

     label13:
        goto label01;
    }

    private java.lang.String parseName() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r1;
        int $i0;
        java.lang.StringBuilder $r0;
        char $c1;
        java.lang.String $r2;

        r1 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i0 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i0 == 32 goto label2;

        if $i0 == 9 goto label2;

        if $i0 == 13 goto label2;

        if $i0 == 10 goto label2;

        if $i0 == 61 goto label2;

        if $i0 == 47 goto label2;

        if $i0 == 60 goto label2;

        if $i0 == 62 goto label2;

        if $i0 == 91 goto label2;

        if $i0 != 93 goto label3;

     label2:
        r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i0;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $c1 = (char) $i0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label1;
    }

    private java.lang.String parseValue(int) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r1;
        java.lang.StringBuilder $r4, $r6, $r7, r15, $r16, $r17, $r18;
        int $i0, i1, $i2, i7, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i19;
        java.lang.String $r2, $r5, $r8, $r9, $r10, $r12;
        char $c3, $c4, $c5, $c6, $c10;
        java.lang.NumberFormatException $r13, $r14;

        r1 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        i1 := @parameter0: int;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r15 = null;

     label01:
        $i0 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        i7 = $i0;

        if $i0 != i1 goto label02;

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label02:
        if $i0 != 38 goto label20;

        if r15 != null goto label03;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        r15 = $r17;

        goto label04;

     label03:
        virtualinvoke r15.<java.lang.StringBuilder: void setLength(int)>(0);

     label04:
        $i8 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i8 == 59 goto label05;

        $c6 = (char) $i8;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        goto label04;

     label05:
        $i2 = virtualinvoke r15.<java.lang.StringBuilder: int length()>();

        if $i2 <= 2 goto label09;

        $c4 = virtualinvoke r15.<java.lang.StringBuilder: char charAt(int)>(0);

        $i11 = (int) $c4;

        if $i11 != 35 goto label09;

        $c5 = virtualinvoke r15.<java.lang.StringBuilder: char charAt(int)>(1);

        $i12 = (int) $c5;

        if $i12 != 120 goto label09;

     label06:
        $r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String substring(int)>(2);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r10, 16);

     label07:
        goto label19;

     label08:
        $r14 := @caughtexception;

        $i14 = (int) -1;

        i7 = $i14;

        goto label19;

     label09:
        $i9 = virtualinvoke r15.<java.lang.StringBuilder: int length()>();

        if $i9 <= 1 goto label13;

        $c3 = virtualinvoke r15.<java.lang.StringBuilder: char charAt(int)>(0);

        $i15 = (int) $c3;

        if $i15 != 35 goto label13;

     label10:
        $r9 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String substring(int)>(1);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label11:
        goto label19;

     label12:
        $r13 := @caughtexception;

        $i17 = (int) -1;

        i7 = $i17;

        goto label19;

     label13:
        $r2 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("amp");

        if $z0 == 0 goto label14;

        i7 = 38;

        goto label19;

     label14:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("quot");

        if $z1 == 0 goto label15;

        i7 = 34;

        goto label19;

     label15:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("apos");

        if $z2 == 0 goto label16;

        i7 = 39;

        goto label19;

     label16:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z3 == 0 goto label17;

        i7 = 60;

        goto label19;

     label17:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("gt");

        if $z4 == 0 goto label18;

        i7 = 62;

        goto label19;

     label18:
        $i19 = (int) -1;

        i7 = $i19;

     label19:
        if i7 >= 0 goto label20;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The entity \"&");

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\" is unknown.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>($r8);

     label20:
        $c10 = (char) i7;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        goto label01;

        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    private void parseElement(edu.mit.csail.sdg.alloy4.XMLNode) throws java.io.IOException
    {
        java.util.Map $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r2, $r3, $r4, $r5, $r8, $r11, $r12;
        boolean $z0, z1;
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        edu.mit.csail.sdg.alloy4.XMLNode r0;

        r1 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        $r2 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.lang.String parseName()>();

        staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String access$002(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r0, $r2);

     label01:
        z1 = 0;

        $i0 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        i6 = $i0;

        if $i0 == 32 goto label02;

        if $i0 == 9 goto label02;

        if $i0 == 13 goto label02;

        if $i0 != 10 goto label03;

     label02:
        z1 = 1;

        i6 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipSpace()>();

     label03:
        if i6 != 61 goto label04;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Unexpected \'=\'");

     label04:
        if i6 != 47 goto label05;

        $i5 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i5 == 62 goto label12;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects \'/>\'");

        goto label12;

     label05:
        if i6 != 62 goto label07;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void parseContent(edu.mit.csail.sdg.alloy4.XMLNode)>(r0);

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String access$000(edu.mit.csail.sdg.alloy4.XMLNode)>(r0);

        $r5 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.lang.String parseName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label06;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Start tag and end tag must have matching types.");

     label06:
        $i4 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipSpace()>();

        if $i4 == 62 goto label12;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expects \'</");

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String access$000(edu.mit.csail.sdg.alloy4.XMLNode)>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>($r11);

        goto label12;

     label07:
        if z1 != 0 goto label08;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Whitespace needed before a (key,value) pair.");

     label08:
        r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = i6;

        $r3 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.lang.String parseName()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 != 0 goto label09;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Attribute name cannot be empty.");

     label09:
        $i2 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipSpace()>();

        if $i2 == 61 goto label10;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects = after the attribute name.");

     label10:
        $i3 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipSpace()>();

        if $i3 == 39 goto label11;

        if $i3 == 34 goto label11;

        specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects \' or \" as the start of the attribute value.");

     label11:
        $r12 = specialinvoke r1.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.lang.String parseValue(int)>($i3);

        $r13 = staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: java.util.Map access$100(edu.mit.csail.sdg.alloy4.XMLNode)>(r0);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r12);

        goto label01;

     label12:
        return;
    }

    private void parseContent(edu.mit.csail.sdg.alloy4.XMLNode) throws java.io.IOException
    {
        int $i0, $i1, $i3, $i4, $i5, i6, i7, $i8;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        char $c2;
        java.util.List $r7;
        java.lang.StringBuilder r1, $r8;
        edu.mit.csail.sdg.alloy4.XMLNode r5, $r6;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        $z0 = r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: boolean wantText>;

        if $z0 == 0 goto label01;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        goto label02;

     label01:
        $r8 = null;

     label02:
        r1 = $r8;

     label03:
        if r1 != null goto label05;

     label04:
        $i5 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i5 == 60 goto label06;

        goto label04;

     label05:
        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: java.lang.String parseValue(int)>(60);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(13, 32);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: void access$200(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.StringBuilder)>(r5, r1);

     label06:
        $i0 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i0 != 47 goto label07;

        return;

     label07:
        if $i0 != 63 goto label08;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void skipUntil(int,int)>(63, 62);

        goto label03;

     label08:
        if $i0 != 33 goto label15;

        $i1 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i1 != 45 goto label10;

        $i3 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i3 == 45 goto label09;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects start of <!--...-->");

     label09:
        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void skipUntil(int,int)>(45, 45);

        $i4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if $i4 == 62 goto label03;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects end of <!--...-->");

        goto label03;

     label10:
        if $i1 == 91 goto label11;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>("Expects <![CDATA[...]]>");

     label11:
        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void expect(java.lang.String)>("CDATA[");

        i6 = 0;

        i7 = 0;

     label12:
        $i8 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read()>();

        if i6 != 93 goto label13;

        if i7 != 93 goto label13;

        if $i8 != 62 goto label13;

        staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: void access$200(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.StringBuilder)>(r5, r1);

        goto label03;

     label13:
        if i6 <= 0 goto label14;

        if r1 == null goto label14;

        $c2 = (char) i6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label14:
        i6 = i7;

        i7 = $i8;

        goto label12;

     label15:
        r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int read> = $i0;

        $r6 = new edu.mit.csail.sdg.alloy4.XMLNode;

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4.XMLNode: void <init>(edu.mit.csail.sdg.alloy4.XMLNode$1)>(null);

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void parseElement(edu.mit.csail.sdg.alloy4.XMLNode)>($r6);

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4.XMLNode: java.util.List access$400(edu.mit.csail.sdg.alloy4.XMLNode)>(r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label03;
    }

    void <init>(java.io.Reader, boolean, edu.mit.csail.sdg.alloy4.XMLNode$1)
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        edu.mit.csail.sdg.alloy4.XMLNode$1 r2;
        java.io.Reader r1;
        boolean z0;

        r0 := @this: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        r2 := @parameter2: edu.mit.csail.sdg.alloy4.XMLNode$1;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void <init>(java.io.Reader,boolean)>(r1, z0);

        return;
    }

    static int access$600(edu.mit.csail.sdg.alloy4.XMLNode$XMLParser, boolean) throws java.io.IOException
    {
        int $i0;
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        boolean z0;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        z0 := @parameter1: boolean;

        $i0 = specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: int skipNondata(boolean)>(z0);

        return $i0;
    }

    static void access$700(edu.mit.csail.sdg.alloy4.XMLNode$XMLParser, java.lang.String) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        java.lang.String r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void malform(java.lang.String)>(r1);

        return;
    }

    static void access$800(edu.mit.csail.sdg.alloy4.XMLNode$XMLParser, edu.mit.csail.sdg.alloy4.XMLNode) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4.XMLNode$XMLParser r0;
        edu.mit.csail.sdg.alloy4.XMLNode r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode$XMLParser;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4.XMLNode;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode$XMLParser: void parseElement(edu.mit.csail.sdg.alloy4.XMLNode)>(r1);

        return;
    }
}
