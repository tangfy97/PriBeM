public final class org.springframework.core.convert.converter.GenericConverter$ConvertiblePair extends java.lang.Object
{
    private final java.lang.Class sourceType;
    private final java.lang.Class targetType;

    public void <init>(java.lang.Class, java.lang.Class)
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair r0;
        java.lang.Class r1, r2;

        r0 := @this: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Source type must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Target type must not be null");

        r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class sourceType> = r1;

        r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class targetType> = r2;

        return;
    }

    public java.lang.Class getSourceType()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair r0;
        java.lang.Class $r1;

        r0 := @this: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        $r1 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class sourceType>;

        return $r1;
    }

    public java.lang.Class getTargetType()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair r0;
        java.lang.Class $r1;

        r0 := @this: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        $r1 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class targetType>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair r0, r3;
        java.lang.Object r1;
        java.lang.Class $r2, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;" goto label3;

     label2:
        return 0;

     label3:
        r3 = (org.springframework.core.convert.converter.GenericConverter$ConvertiblePair) r1;

        $r5 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class sourceType>;

        $r4 = r3.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class sourceType>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class targetType>;

        $r6 = r3.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class targetType>;

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r1, $r2;

        r0 := @this: org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        $r1 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class sourceType>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 31;

        $r2 = r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.Class targetType>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }
}
