public class org.apache.http.client.protocol.RequestTargetAuthentication extends org.apache.http.client.protocol.RequestAuthenticationBase
{

    public void <init>()
    {
        org.apache.http.client.protocol.RequestTargetAuthentication r0;

        r0 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        specialinvoke r0.<org.apache.http.client.protocol.RequestAuthenticationBase: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.RequestLine $r2;
        java.lang.String $r3, $r13;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r15, $r16;
        org.apache.http.HttpRequest r0;
        org.apache.http.auth.AuthProtocolState $r11;
        org.apache.http.client.protocol.RequestTargetAuthentication r6;
        org.apache.http.protocol.HttpContext r1;
        java.lang.Object $r4;
        org.apache.commons.logging.Log $r7, $r9, $r14;
        java.lang.StringBuilder $r8, $r10, $r12;
        org.apache.http.auth.AuthState r5;

        r6 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        r0 := @parameter0: org.apache.http.HttpRequest;

        r1 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r16;

     label1:
        if r1 != null goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r15;

     label2:
        $r2 = interfaceinvoke r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CONNECT");

        if $z0 == 0 goto label3;

        return;

     label3:
        $z1 = interfaceinvoke r0.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Authorization");

        if $z1 == 0 goto label4;

        return;

     label4:
        $r4 = interfaceinvoke r1.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.target-scope");

        r5 = (org.apache.http.auth.AuthState) $r4;

        if r5 != null goto label5;

        $r14 = r6.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target auth state not set in the context");

        return;

     label5:
        $r7 = r6.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label6;

        $r9 = r6.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target auth state: ");

        $r11 = virtualinvoke r5.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState getState()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

     label6:
        virtualinvoke r6.<org.apache.http.client.protocol.RequestTargetAuthentication: void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r5, r0, r1);

        return;
    }
}
