public class org.waveprotocol.wave.client.editor.EditorTestingUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.EditorTestingUtil r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorTestingUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void forceFlush(org.waveprotocol.wave.client.editor.Editor)
    {
        org.waveprotocol.wave.client.editor.Editor r0;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.Editor;

        $z0 = r0 instanceof org.waveprotocol.wave.client.editor.EditorImpl;

        if $z0 == 0 goto label1;

        $r1 = (org.waveprotocol.wave.client.editor.EditorImpl) r0;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.EditorImpl: void flushSynchronous()>();

     label1:
        return;
    }

    public static void checkHealth(org.waveprotocol.wave.client.editor.Editor)
    {
        org.waveprotocol.wave.client.editor.Editor r0;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.Editor;

        $z0 = r0 instanceof org.waveprotocol.wave.client.editor.EditorImpl;

        if $z0 == 0 goto label1;

        $r1 = (org.waveprotocol.wave.client.editor.EditorImpl) r0;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.EditorImpl: void debugCheckHealth()>();

     label1:
        return;
    }

    public static boolean isConsistent(org.waveprotocol.wave.client.editor.Editor)
    {
        org.waveprotocol.wave.client.editor.Editor r0;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.Editor;

        $z0 = r0 instanceof org.waveprotocol.wave.client.editor.EditorImpl;

        if $z0 == 0 goto label1;

        $r1 = (org.waveprotocol.wave.client.editor.EditorImpl) r0;

        $z1 = virtualinvoke $r1.<org.waveprotocol.wave.client.editor.EditorImpl: boolean isConsistent()>();

        return $z1;

     label1:
        return 1;
    }

    public static void setupTestEnvironment()
    {
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry $r0;

        <org.waveprotocol.wave.client.editor.extract.Repairer: boolean debugRepairIsFatal> = 1;

        staticinvoke <org.waveprotocol.wave.model.document.util.LineContainers: void setTopLevelContainerTagname(java.lang.String)>("body");

        $r0 = <org.waveprotocol.wave.client.editor.Editor: org.waveprotocol.wave.client.editor.ElementHandlerRegistry ROOT_HANDLER_REGISTRY>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.LineRendering: void registerContainer(java.lang.String,org.waveprotocol.wave.client.editor.ElementHandlerRegistry)>("body", $r0);

        return;
    }
}
