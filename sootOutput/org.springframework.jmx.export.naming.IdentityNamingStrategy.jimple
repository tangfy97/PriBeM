public class org.springframework.jmx.export.naming.IdentityNamingStrategy extends java.lang.Object implements org.springframework.jmx.export.naming.ObjectNamingStrategy
{
    public static final java.lang.String TYPE_KEY;
    public static final java.lang.String HASH_CODE_KEY;

    public void <init>()
    {
        org.springframework.jmx.export.naming.IdentityNamingStrategy r0;

        r0 := @this: org.springframework.jmx.export.naming.IdentityNamingStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.management.ObjectName getObjectName(java.lang.Object, java.lang.String) throws javax.management.MalformedObjectNameException
    {
        javax.management.ObjectName $r7;
        java.lang.Object r0;
        java.lang.Class $r1, $r4;
        java.lang.String $r2, $r5, $r6, r9;
        org.springframework.jmx.export.naming.IdentityNamingStrategy r8;
        java.util.Hashtable $r3;

        r8 := @this: org.springframework.jmx.export.naming.IdentityNamingStrategy;

        r0 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.Class)>($r1);

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>($r4);

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("type", $r5);

        $r6 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("hashCode", $r6);

        $r7 = staticinvoke <org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.String,java.util.Hashtable)>($r2, $r3);

        return $r7;
    }

    public static void <clinit>()
    {
        <org.springframework.jmx.export.naming.IdentityNamingStrategy: java.lang.String HASH_CODE_KEY> = "hashCode";

        <org.springframework.jmx.export.naming.IdentityNamingStrategy: java.lang.String TYPE_KEY> = "type";

        return;
    }
}
