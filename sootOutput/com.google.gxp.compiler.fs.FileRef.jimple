public final class com.google.gxp.compiler.fs.FileRef extends java.lang.Object implements javax.tools.FileObject
{
    private final com.google.gxp.compiler.fs.FileStore store;
    private final java.lang.String name;
    private static final java.lang.String EXTENSION_CHARS;
    private static final java.util.regex.Pattern SUFFIX_CHARS_PATTERN;
    private static final java.util.regex.Pattern EXTENSION_PATTERN;
    private static final java.util.regex.Pattern NORMAL_PATTERN;
    private static final java.util.regex.Pattern MULTIPLE_SLASH_PATTERN;

    public void <init>(com.google.gxp.compiler.fs.FileStore, java.lang.String)
    {
        java.lang.Object $r2, $r5;
        java.lang.String r4, $r6, $r7;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore r1, $r3;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileStore;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.gxp.compiler.fs.FileStore) $r2;

        r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store> = $r3;

        $r5 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <com.google.gxp.compiler.fs.FileRef: java.lang.String normalize(java.lang.String)>($r6);

        r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name> = $r7;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.fs.FileRef r0;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        return $r1;
    }

    public java.net.URI toUri()
    {
        java.net.URI $r2;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.net.URI toUri(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r2;
    }

    public long getLastModified()
    {
        long $l0;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $l0 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: long getLastModified(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $l0;
    }

    public long getChecksum()
    {
        byte[] $r3;
        java.util.zip.Adler32 $r0;
        long $l0;
        java.io.IOException $r4;
        com.google.gxp.compiler.fs.FileRef r1;
        java.io.InputStream $r2;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

     label1:
        $r0 = new java.util.zip.Adler32;

        specialinvoke $r0.<java.util.zip.Adler32: void <init>()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.fs.FileRef: java.io.InputStream openInputStream()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.io.Bytes: byte[] toByteArray(java.io.InputStream)>($r2);

        virtualinvoke $r0.<java.util.zip.Adler32: void update(byte[])>($r3);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        $l0 = virtualinvoke $r0.<java.util.zip.Adler32: long getValue()>();

     label2:
        return $l0;

     label3:
        $r4 := @caughtexception;

        return 0L;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean delete()
    {
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $z0 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: boolean delete(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $z0;
    }

    public java.io.Writer openWriter(java.nio.charset.Charset) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        java.nio.charset.Charset r3;
        java.nio.charset.CharsetEncoder $r4;
        java.io.OutputStreamWriter $r0;
        com.google.gxp.compiler.fs.FileRef r1;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

        r3 := @parameter0: java.nio.charset.Charset;

        $r0 = new java.io.OutputStreamWriter;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.fs.FileRef: java.io.OutputStream openOutputStream()>();

        $r4 = virtualinvoke r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.CharsetEncoder)>($r2, $r4);

        return $r0;
    }

    public java.io.Writer openWriter() throws java.io.IOException
    {
        java.nio.charset.Charset $r2;
        java.io.Writer $r3;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.nio.charset.Charset getDefaultCharset()>();

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.fs.FileRef: java.io.Writer openWriter(java.nio.charset.Charset)>($r2);

        return $r3;
    }

    public java.io.Reader openReader(java.nio.charset.Charset) throws java.io.IOException
    {
        java.nio.charset.Charset r3;
        java.nio.charset.CharsetDecoder $r4;
        java.io.InputStreamReader $r0;
        com.google.gxp.compiler.fs.FileRef r1;
        java.io.InputStream $r2;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

        r3 := @parameter0: java.nio.charset.Charset;

        $r0 = new java.io.InputStreamReader;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.fs.FileRef: java.io.InputStream openInputStream()>();

        $r4 = virtualinvoke r3.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.CharsetDecoder)>($r2, $r4);

        return $r0;
    }

    public java.io.Reader openReader(boolean) throws java.io.IOException
    {
        java.nio.charset.Charset $r2;
        java.io.Reader $r3;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.nio.charset.Charset getDefaultCharset()>();

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.fs.FileRef: java.io.Reader openReader(java.nio.charset.Charset)>($r2);

        return $r3;
    }

    public java.io.InputStream openInputStream() throws java.io.IOException
    {
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;
        java.io.InputStream $r2;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.io.InputStream openInputStream(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r2;
    }

    public java.io.OutputStream openOutputStream() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.io.OutputStream openOutputStream(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r2;
    }

    public java.lang.CharSequence getCharContent(boolean) throws java.io.IOException
    {
        java.io.Reader $r1;
        java.lang.String $r2;
        com.google.gxp.compiler.fs.FileRef r0;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.fs.FileRef: java.io.Reader openReader(boolean)>(z0);

        $r2 = staticinvoke <com.google.gxp.com.google.common.io.Characters: java.lang.String toString(java.lang.Readable)>($r1);

        return $r2;
    }

    public com.google.gxp.compiler.fs.FileRef removeExtension()
    {
        java.util.regex.Matcher $r3;
        int $i0;
        java.lang.String $r1, $r5, $r6;
        java.util.regex.Pattern $r2;
        com.google.gxp.compiler.fs.FileRef r0, $r7;
        com.google.gxp.compiler.fs.FileStore $r4;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r2 = <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern EXTENSION_PATTERN>;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r7 = new com.google.gxp.compiler.fs.FileRef;

        $r4 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r5 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r7.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r4, $r6);

        goto label2;

     label1:
        $r7 = r0;

     label2:
        return $r7;
    }

    public javax.tools.JavaFileObject$Kind getKind()
    {
        javax.tools.JavaFileObject$Kind[] $r7;
        java.util.regex.Matcher $r3;
        int $i0, i1, i2;
        java.lang.String $r1, $r5, $r6, $r9;
        java.util.regex.Pattern $r2;
        javax.tools.JavaFileObject$Kind $r4, r8;
        com.google.gxp.compiler.fs.FileRef r0;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r2 = <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern EXTENSION_PATTERN>;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = staticinvoke <javax.tools.JavaFileObject$Kind: javax.tools.JavaFileObject$Kind[] values()>();

        i1 = lengthof $r7;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r8 = $r7[i2];

        $r9 = r8.<javax.tools.JavaFileObject$Kind: java.lang.String extension>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        return r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = <javax.tools.JavaFileObject$Kind: javax.tools.JavaFileObject$Kind OTHER>;

        return $r4;
    }

    public com.google.gxp.compiler.fs.FileRef addSuffix(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0, $r7, $r10, $r16;
        com.google.gxp.compiler.fs.FileRef $r3, r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r5, $r8, $r9, $r12, $r13, $r14, $r15;
        java.util.regex.Pattern $r1;
        com.google.gxp.compiler.fs.FileStore $r6;

        r4 := @this: com.google.gxp.compiler.fs.FileRef;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern SUFFIX_CHARS_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal characters in suffix, \"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label1:
        $r3 = new com.google.gxp.compiler.fs.FileRef;

        $r6 = r4.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r4.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r6, $r10);

        return $r3;
    }

    public java.lang.String toFilename()
    {
        java.lang.String $r2;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.lang.String toFilename(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r2;
    }

    public java.lang.String toRelativeFilename()
    {
        java.lang.String $r2;
        com.google.gxp.compiler.fs.FileRef r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileStore: java.lang.String toRelativeFilename(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r2;
    }

    public com.google.gxp.compiler.fs.FileRef join(java.lang.String)
    {
        java.lang.StringBuilder $r2, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;
        com.google.gxp.compiler.fs.FileRef $r0, r1;
        com.google.gxp.compiler.fs.FileStore $r3;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

        r7 := @parameter0: java.lang.String;

        $r0 = new com.google.gxp.compiler.fs.FileRef;

        $r3 = r1.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r3, $r9);

        return $r0;
    }

    public boolean isAncestorOf(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.String $r4, $r5, $r7, $r8, $r11;
        com.google.gxp.compiler.fs.FileRef r0, r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r6, $r9, $r10;
        com.google.gxp.compiler.fs.FileStore $r2, $r3;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r3 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = r1.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r5 = "/";

        $r4 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label1;

        $r7 = r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r11);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.Class $r2;
        java.lang.String $r3, $r9, $r12;
        com.google.gxp.compiler.fs.FileRef r1;
        com.google.gxp.compiler.fs.FileStore $r6;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\"");

        $r6 = r1.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        int $i0;
        java.lang.String $r3;
        com.google.gxp.compiler.fs.FileRef r1;
        com.google.gxp.compiler.fs.FileStore $r2;

        r1 := @this: com.google.gxp.compiler.fs.FileRef;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = r1.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r0[0] = $r2;

        $r3 = r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r0[1] = $r3;

        $i0 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.gxp.compiler.fs.FileRef r0, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.fs.FileRef;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.fs.FileRef) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.fs.FileRef: boolean equals(com.google.gxp.compiler.fs.FileRef)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.fs.FileRef)
    {
        java.lang.String $r4, $r5;
        com.google.gxp.compiler.fs.FileRef r0, r1;
        com.google.gxp.compiler.fs.FileStore $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.fs.FileRef;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r3 = r0.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $r2 = r1.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileStore store>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $r4 = r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String name>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static java.lang.String normalize(java.lang.String)
    {
        java.util.regex.Matcher $r2, $r8;
        int $i0, $i1, $i2;
        java.lang.String r0, $r7, $r9, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.util.regex.Pattern $r1, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern NORMAL_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r4 = <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern MULTIPLE_SLASH_PATTERN>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("/");

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= 1 goto label2;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        return $r10;

     label2:
        return $r9;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2, $r3;

        <com.google.gxp.compiler.fs.FileRef: java.lang.String EXTENSION_CHARS> = "[^\\./]*";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[^\\/]*");

        <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern SUFFIX_CHARS_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\.([^\\./]*)$");

        <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern EXTENSION_PATTERN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("/([^/]+(/[^/]+)*)?");

        <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern NORMAL_PATTERN> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("//+");

        <com.google.gxp.compiler.fs.FileRef: java.util.regex.Pattern MULTIPLE_SLASH_PATTERN> = $r3;

        return;
    }
}
