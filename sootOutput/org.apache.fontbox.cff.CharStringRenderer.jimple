public class org.apache.fontbox.cff.CharStringRenderer extends org.apache.fontbox.cff.CharStringHandler
{
    private static final org.apache.commons.logging.Log LOG;
    private boolean isCharstringType1;
    private boolean isFirstCommand;
    private java.awt.geom.GeneralPath path;
    private java.awt.geom.Point2D sidebearingPoint;
    private java.awt.geom.Point2D referencePoint;
    private int width;
    private boolean hasNonEndCharOp;

    public void <init>()
    {
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringHandler: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isCharstringType1> = 1;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand> = 1;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D sidebearingPoint> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: int width> = 0;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean hasNonEndCharOp> = 0;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isCharstringType1> = 1;

        return;
    }

    public void <init>(boolean)
    {
        org.apache.fontbox.cff.CharStringRenderer r0;
        boolean z0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringHandler: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isCharstringType1> = 1;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand> = 1;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D sidebearingPoint> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint> = null;

        r0.<org.apache.fontbox.cff.CharStringRenderer: int width> = 0;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean hasNonEndCharOp> = 0;

        r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isCharstringType1> = z0;

        return;
    }

    public java.awt.geom.GeneralPath render(java.util.List)
    {
        java.util.List r3;
        java.awt.geom.Point2D$Float $r2;
        java.awt.geom.GeneralPath $r1, $r4;
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r3 := @parameter0: java.util.List;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>()>();

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path> = $r1;

        $r2 = new java.awt.geom.Point2D$Float;

        specialinvoke $r2.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D sidebearingPoint> = $r2;

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint> = null;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>(0);

        virtualinvoke r0.<org.apache.fontbox.cff.CharStringRenderer: java.util.List handleSequence(java.util.List)>(r3);

        $r4 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        return $r4;
    }

    public java.util.List handleCommand(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.util.List r1;
        org.apache.fontbox.cff.CharStringCommand r2;
        org.apache.fontbox.cff.CharStringRenderer r0;
        boolean $z0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $z0 = r0.<org.apache.fontbox.cff.CharStringRenderer: boolean isCharstringType1>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.fontbox.cff.CharStringRenderer: void handleCommandType1(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r1, r2);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.fontbox.cff.CharStringRenderer: void handleCommandType2(java.util.List,org.apache.fontbox.cff.CharStringCommand)>(r1, r2);

     label2:
        return null;
    }

    private void handleCommandType2(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.lang.Integer $r28, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r50, $r52, $r55, $r63, $r69, $r71, $r73, $r75, $r78, $r82, $r83;
        java.util.Map $r1;
        java.awt.geom.GeneralPath $r46, $r56, $r76;
        java.awt.geom.Point2D $r47, $r57, $r77;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        java.lang.Object $r3, $r27, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r48, $r51, $r53, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r79, $r81, $r84;
        org.apache.fontbox.cff.CharStringRenderer r5;
        java.lang.String r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r86, $r87;
        java.lang.Number $r49, $r54, $r59, $r61, $r65, $r67, $r80, $r85;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        java.util.List r26;
        org.apache.fontbox.cff.CharStringCommand r0;
        org.apache.fontbox.cff.CharStringCommand$Key $r2;
        org.apache.commons.logging.Log $r29;

        r5 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r26 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r1 = <org.apache.fontbox.cff.CharStringCommand: java.util.Map TYPE2_VOCABULARY>;

        $r2 = virtualinvoke r0.<org.apache.fontbox.cff.CharStringCommand: org.apache.fontbox.cff.CharStringCommand$Key getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        $z0 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean hasNonEndCharOp>;

        if $z0 != 0 goto label03;

        $r86 = "endchar";

        $z31 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z31 != 0 goto label01;

        $z32 = 1;

        goto label02;

     label01:
        $z32 = 0;

     label02:
        r5.<org.apache.fontbox.cff.CharStringRenderer: boolean hasNonEndCharOp> = $z32;

     label03:
        $r87 = "vmoveto";

        $z33 = virtualinvoke $r87.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z33 == 0 goto label06;

        $r76 = r5.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r77 = virtualinvoke $r76.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        if $r77 == null goto label04;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

     label04:
        $z30 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z30 == 0 goto label05;

        $i36 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i36 != 2 goto label05;

        $r81 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r82 = (java.lang.Integer) $r81;

        $i37 = virtualinvoke $r82.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i37);

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r84 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);

        $r85 = (java.lang.Number) $r84;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r83, $r85);

        goto label37;

     label05:
        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r79 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r80 = (java.lang.Number) $r79;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r78, $r80);

        goto label37;

     label06:
        $r6 = "rlineto";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label08;

        $z29 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z29 == 0 goto label07;

        $i34 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i34 != 3 goto label07;

        $r74 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r75 = (java.lang.Integer) $r74;

        $i35 = virtualinvoke $r75.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i35);

     label07:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rrlineTo(java.util.List)>(r26);

        goto label37;

     label08:
        $r7 = "hlineto";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label10;

        $z28 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z28 == 0 goto label09;

        $i32 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i32 != 2 goto label09;

        $r72 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r73 = (java.lang.Integer) $r72;

        $i33 = virtualinvoke $r73.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i33);

     label09:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void hlineTo(java.util.List)>(r26);

        goto label37;

     label10:
        $r8 = "vlineto";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label12;

        $z27 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z27 == 0 goto label11;

        $i30 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i30 != 2 goto label11;

        $r70 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r71 = (java.lang.Integer) $r70;

        $i31 = virtualinvoke $r71.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i31);

     label11:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void vlineTo(java.util.List)>(r26);

        goto label37;

     label12:
        $r9 = "rrcurveto";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label14;

        $z26 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z26 == 0 goto label13;

        $i28 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i28 != 7 goto label13;

        $r68 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r69 = (java.lang.Integer) $r68;

        $i29 = virtualinvoke $r69.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i29);

     label13:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rrCurveTo(java.util.List)>(r26);

        goto label37;

     label14:
        $r10 = "rlinecurve";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label15;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rlineCurve(java.util.List)>(r26);

        goto label37;

     label15:
        $r11 = "rcurveline";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label16;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rcurveLine(java.util.List)>(r26);

        goto label37;

     label16:
        $r12 = "closepath";

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label17;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

        goto label37;

     label17:
        $r13 = "rmoveto";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 == 0 goto label20;

        $r56 = r5.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r57 = virtualinvoke $r56.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        if $r57 == null goto label18;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

     label18:
        $z25 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z25 == 0 goto label19;

        $i26 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i26 != 3 goto label19;

        $r62 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r63 = (java.lang.Integer) $r62;

        $i27 = virtualinvoke $r63.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i27);

        $r64 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);

        $r65 = (java.lang.Number) $r64;

        $r66 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(2);

        $r67 = (java.lang.Number) $r66;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r65, $r67);

        goto label37;

     label19:
        $r58 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r59 = (java.lang.Number) $r58;

        $r60 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);

        $r61 = (java.lang.Number) $r60;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r59, $r61);

        goto label37;

     label20:
        $r14 = "hmoveto";

        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label23;

        $r46 = r5.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r47 = virtualinvoke $r46.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        if $r47 == null goto label21;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

     label21:
        $z24 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z24 == 0 goto label22;

        $i24 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i24 != 2 goto label22;

        $r51 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r52 = (java.lang.Integer) $r51;

        $i25 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i25);

        $r53 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(1);

        $r54 = (java.lang.Number) $r53;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r54, $r55);

        goto label37;

     label22:
        $r48 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r49 = (java.lang.Number) $r48;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r49, $r50);

        goto label37;

     label23:
        $r15 = "vhcurveto";

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 == 0 goto label25;

        $z23 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z23 == 0 goto label24;

        $i22 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i22 != 5 goto label24;

        $r44 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r45 = (java.lang.Integer) $r44;

        $i23 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i23);

     label24:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rvhCurveTo(java.util.List)>(r26);

        goto label37;

     label25:
        $r16 = "hvcurveto";

        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label27;

        $z22 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z22 == 0 goto label26;

        $i20 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i20 != 5 goto label26;

        $r42 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r43 = (java.lang.Integer) $r42;

        $i21 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i21);

     label26:
        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rhvCurveTo(java.util.List)>(r26);

        goto label37;

     label27:
        $r17 = "hhcurveto";

        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 == 0 goto label28;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rhhCurveTo(java.util.List)>(r26);

        goto label37;

     label28:
        $r18 = "vvcurveto";

        $z13 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z13 == 0 goto label29;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void rvvCurveTo(java.util.List)>(r26);

        goto label37;

     label29:
        $r19 = "hstem";

        $z14 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z14 == 0 goto label30;

        $i17 = interfaceinvoke r26.<java.util.List: int size()>();

        $i18 = $i17 % 2;

        if $i18 != 1 goto label37;

        $r40 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r41 = (java.lang.Integer) $r40;

        $i19 = virtualinvoke $r41.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i19);

        goto label37;

     label30:
        $r20 = "vstem";

        $z15 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z15 == 0 goto label31;

        $i14 = interfaceinvoke r26.<java.util.List: int size()>();

        $i15 = $i14 % 2;

        if $i15 != 1 goto label37;

        $r38 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r39 = (java.lang.Integer) $r38;

        $i16 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i16);

        goto label37;

     label31:
        $r21 = "hstemhm";

        $z16 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z16 == 0 goto label32;

        $i11 = interfaceinvoke r26.<java.util.List: int size()>();

        $i12 = $i11 % 2;

        if $i12 != 1 goto label37;

        $r36 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r37 = (java.lang.Integer) $r36;

        $i13 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i13);

        goto label37;

     label32:
        $r22 = "vstemhm";

        $z17 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z17 == 0 goto label33;

        $i8 = interfaceinvoke r26.<java.util.List: int size()>();

        $i9 = $i8 % 2;

        if $i9 != 1 goto label37;

        $r34 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r35 = (java.lang.Integer) $r34;

        $i10 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i10);

        goto label37;

     label33:
        $r23 = "cntrmask";

        $z18 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z18 == 0 goto label34;

        $i6 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i6 != 1 goto label37;

        $r32 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r33 = (java.lang.Integer) $r32;

        $i7 = virtualinvoke $r33.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i7);

        goto label37;

     label34:
        $r24 = "hintmask";

        $z19 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z19 == 0 goto label35;

        $i4 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i4 != 1 goto label37;

        $r30 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (java.lang.Integer) $r30;

        $i5 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i5);

        goto label37;

     label35:
        $r25 = "endchar";

        $z20 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z20 == 0 goto label37;

        $z21 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean hasNonEndCharOp>;

        if $z21 == 0 goto label36;

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

     label36:
        $i0 = interfaceinvoke r26.<java.util.List: int size()>();

        $i1 = $i0 % 2;

        if $i1 != 1 goto label37;

        $r27 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        $r28 = (java.lang.Integer) $r27;

        $i2 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();

        specialinvoke r5.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i2);

        $i3 = interfaceinvoke r26.<java.util.List: int size()>();

        if $i3 <= 1 goto label37;

        $r29 = <org.apache.fontbox.cff.CharStringRenderer: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("endChar: too many numbers left, using the first one, see PDFBOX-1501 for details");

     label37:
        $z34 = r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand>;

        if $z34 == 0 goto label38;

        r5.<org.apache.fontbox.cff.CharStringRenderer: boolean isFirstCommand> = 0;

     label38:
        return;
    }

    private void handleCommandType1(java.util.List, org.apache.fontbox.cff.CharStringCommand)
    {
        java.lang.Integer $r21, $r26, $r29, $r38, $r41, $r48, $r50, $r56, $r69, $r74, $r79;
        java.util.Map $r1;
        org.apache.fontbox.cff.CharStringRenderer r17;
        java.lang.String r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Number $r20, $r23, $r25, $r28, $r31, $r33, $r35, $r37, $r40, $r43, $r45, $r47, $r52, $r54, $r58, $r60, $r62, $r64, $r66, $r68, $r71, $r73, $r76, $r78, $r81;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.List r18;
        int $i0, $i1;
        org.apache.fontbox.cff.CharStringCommand r0;
        org.apache.fontbox.cff.CharStringCommand$Key $r2;
        java.lang.Object $r3, $r19, $r22, $r24, $r27, $r30, $r32, $r34, $r36, $r39, $r42, $r44, $r46, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r70, $r72, $r75, $r77, $r80;

        r17 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r18 := @parameter0: java.util.List;

        r0 := @parameter1: org.apache.fontbox.cff.CharStringCommand;

        $r1 = <org.apache.fontbox.cff.CharStringCommand: java.util.Map TYPE1_VOCABULARY>;

        $r2 = virtualinvoke r0.<org.apache.fontbox.cff.CharStringCommand: org.apache.fontbox.cff.CharStringCommand$Key getKey()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        $r5 = "vmoveto";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label01;

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r80 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r81 = (java.lang.Number) $r80;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r79, $r81);

        goto label12;

     label01:
        $r6 = "rlineto";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label02;

        $r75 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r76 = (java.lang.Number) $r75;

        $r77 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r78 = (java.lang.Number) $r77;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r76, $r78);

        goto label12;

     label02:
        $r7 = "hlineto";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label03;

        $r72 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r73 = (java.lang.Number) $r72;

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r73, $r74);

        goto label12;

     label03:
        $r8 = "vlineto";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label04;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r70 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r71 = (java.lang.Number) $r70;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r69, $r71);

        goto label12;

     label04:
        $r9 = "rrcurveto";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label05;

        $r57 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r58 = (java.lang.Number) $r57;

        $r59 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r60 = (java.lang.Number) $r59;

        $r61 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(2);

        $r62 = (java.lang.Number) $r61;

        $r63 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(3);

        $r64 = (java.lang.Number) $r63;

        $r65 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(4);

        $r66 = (java.lang.Number) $r65;

        $r67 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(5);

        $r68 = (java.lang.Number) $r67;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r58, $r60, $r62, $r64, $r66, $r68);

        goto label12;

     label05:
        $r10 = "closepath";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label06;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void closePath()>();

        goto label12;

     label06:
        $r11 = "sbw";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label07;

        $r51 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r52 = (java.lang.Number) $r51;

        $r53 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r54 = (java.lang.Number) $r53;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void pointSb(java.lang.Number,java.lang.Number)>($r52, $r54);

        $r55 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(2);

        $r56 = (java.lang.Integer) $r55;

        $i1 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i1);

        goto label12;

     label07:
        $r12 = "hsbw";

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label08;

        $r46 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r47 = (java.lang.Number) $r46;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void pointSb(java.lang.Number,java.lang.Number)>($r47, $r48);

        $r49 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r50 = (java.lang.Integer) $r49;

        $i0 = virtualinvoke $r50.<java.lang.Integer: int intValue()>();

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void setWidth(int)>($i0);

        goto label12;

     label08:
        $r13 = "rmoveto";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 == 0 goto label09;

        $r42 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r43 = (java.lang.Number) $r42;

        $r44 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r45 = (java.lang.Number) $r44;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r43, $r45);

        goto label12;

     label09:
        $r14 = "hmoveto";

        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label10;

        $r39 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r40 = (java.lang.Number) $r39;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rmoveTo(java.lang.Number,java.lang.Number)>($r40, $r41);

        goto label12;

     label10:
        $r15 = "vhcurveto";

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 == 0 goto label11;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r30 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (java.lang.Number) $r30;

        $r32 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r33 = (java.lang.Number) $r32;

        $r34 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(2);

        $r35 = (java.lang.Number) $r34;

        $r36 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(3);

        $r37 = (java.lang.Number) $r36;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r29, $r31, $r33, $r35, $r37, $r38);

        goto label12;

     label11:
        $r16 = "hvcurveto";

        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label12;

        $r19 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (java.lang.Number) $r19;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r22 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(1);

        $r23 = (java.lang.Number) $r22;

        $r24 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(2);

        $r25 = (java.lang.Number) $r24;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r27 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(3);

        $r28 = (java.lang.Number) $r27;

        specialinvoke r17.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r20, $r21, $r23, $r25, $r26, $r28);

     label12:
        return;
    }

    private void rmoveTo(java.lang.Number, java.lang.Number)
    {
        java.awt.geom.Point2D $r4, r5;
        float $f0, $f1;
        java.awt.geom.GeneralPath $r3, $r6;
        java.lang.Number r1, r2;
        org.apache.fontbox.cff.CharStringRenderer r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        r5 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint>;

        if r5 != null goto label1;

        $r3 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r4 = virtualinvoke $r3.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        r5 = $r4;

        if $r4 != null goto label1;

        r5 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D sidebearingPoint>;

     label1:
        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint> = null;

        $r6 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $d0 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 + $d1;

        $f0 = (float) $d2;

        $d3 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d5 = $d3 + $d4;

        $f1 = (float) $d5;

        virtualinvoke $r6.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f0, $f1);

        return;
    }

    private void hlineTo(java.util.List)
    {
        java.lang.Integer $r2, $r7;
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.Object $r3, $r5;
        java.lang.Number $r4, $r6;
        org.apache.fontbox.cff.CharStringRenderer r1;

        r1 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $i1 = i2 % 2;

        if $i1 != 0 goto label2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.Number) $r5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r6, $r7);

        goto label3;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = (java.lang.Number) $r3;

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r2, $r4);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void vlineTo(java.util.List)
    {
        java.lang.Integer $r4, $r5;
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r6;
        java.lang.Number $r3, $r7;
        org.apache.fontbox.cff.CharStringRenderer r1;

        r1 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $i1 = i2 % 2;

        if $i1 != 0 goto label2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (java.lang.Number) $r6;

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r5, $r7);

        goto label3;

     label2:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (java.lang.Number) $r2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r3, $r4);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void rlineTo(java.lang.Number, java.lang.Number)
    {
        java.awt.geom.Point2D $r2;
        float $f0, $f1;
        java.awt.geom.GeneralPath $r1, $r3;
        java.lang.Number r4, r5;
        org.apache.fontbox.cff.CharStringRenderer r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r4 := @parameter0: java.lang.Number;

        r5 := @parameter1: java.lang.Number;

        $r1 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        $r3 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 + $d1;

        $f0 = (float) $d2;

        $d3 = virtualinvoke $r2.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r5.<java.lang.Number: double doubleValue()>();

        $d5 = $d3 + $d4;

        $f1 = (float) $d5;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f0, $f1);

        return;
    }

    private void rrlineTo(java.util.List)
    {
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r4;
        java.lang.Number $r3, $r5;
        org.apache.fontbox.cff.CharStringRenderer r1;

        r1 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (java.lang.Number) $r2;

        $i1 = i2 + 1;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.lang.Number) $r4;

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r3, $r5);

        i2 = i2 + 2;

        goto label1;

     label2:
        return;
    }

    private void rrCurveTo(java.util.List)
    {
        java.lang.Float $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.Integer $r2, $r4, $r6, $r8, $r10, $r12;
        org.apache.fontbox.cff.CharStringRenderer r13;
        java.util.List r0;
        float f0, f1, f2, f3, f4, f5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11;

        r13 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 < 6 goto label2;

        i13 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i13 >= $i1 goto label2;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i13);

        $r2 = (java.lang.Integer) $r1;

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        f0 = (float) $i2;

        $i3 = i13 + 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (java.lang.Integer) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        f1 = (float) $i4;

        $i5 = i13 + 2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i5);

        $r6 = (java.lang.Integer) $r5;

        $i6 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        f2 = (float) $i6;

        $i7 = i13 + 3;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i7);

        $r8 = (java.lang.Integer) $r7;

        $i8 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        f3 = (float) $i8;

        $i9 = i13 + 4;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i9);

        $r10 = (java.lang.Integer) $r9;

        $i10 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        f4 = (float) $i10;

        $i11 = i13 + 5;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i11);

        $r12 = (java.lang.Integer) $r11;

        $i12 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        f5 = (float) $i12;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f3);

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4);

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        specialinvoke r13.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r14, $r15, $r16, $r17, $r18, $r19);

        i13 = i13 + 6;

        goto label1;

     label2:
        return;
    }

    private void rrcurveTo(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number)
    {
        java.awt.geom.Point2D $r2;
        java.lang.Number r3, r4, r5, r6, r7, r8;
        org.apache.fontbox.cff.CharStringRenderer r0;
        double $d0, $d1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, f7, $f8, f9, $f10, f11, $f12, f13;
        java.awt.geom.GeneralPath $r1, $r9;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r3 := @parameter0: java.lang.Number;

        r4 := @parameter1: java.lang.Number;

        r5 := @parameter2: java.lang.Number;

        r6 := @parameter3: java.lang.Number;

        r7 := @parameter4: java.lang.Number;

        r8 := @parameter5: java.lang.Number;

        $r1 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        $f1 = virtualinvoke r3.<java.lang.Number: float floatValue()>();

        f2 = $f0 + $f1;

        $d1 = virtualinvoke $r2.<java.awt.geom.Point2D: double getY()>();

        $f3 = (float) $d1;

        $f4 = virtualinvoke r4.<java.lang.Number: float floatValue()>();

        f5 = $f3 + $f4;

        $f6 = virtualinvoke r5.<java.lang.Number: float floatValue()>();

        f7 = f2 + $f6;

        $f8 = virtualinvoke r6.<java.lang.Number: float floatValue()>();

        f9 = f5 + $f8;

        $f10 = virtualinvoke r7.<java.lang.Number: float floatValue()>();

        f11 = f7 + $f10;

        $f12 = virtualinvoke r8.<java.lang.Number: float floatValue()>();

        f13 = f9 + $f12;

        $r9 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        virtualinvoke $r9.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>(f2, f5, f7, f9, f11, f13);

        return;
    }

    private void rlineCurve(java.util.List)
    {
        java.lang.Float $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.Integer $r7, $r9, $r11, $r13, $r15, $r17;
        org.apache.fontbox.cff.CharStringRenderer r1;
        java.util.List r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.Number $r3, $r5;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        r1 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 < 6 goto label4;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 6;

        if $i2 <= 0 goto label3;

        i8 = 0;

     label1:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $i4 = $i3 - 6;

        if i8 >= $i4 goto label3;

        $i5 = i8 + 1;

        $i6 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i5 < $i6 goto label2;

        goto label3;

     label2:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i8);

        $r3 = (java.lang.Number) $r2;

        $i7 = i8 + 1;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i7);

        $r5 = (java.lang.Number) $r4;

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r3, $r5);

        i8 = i8 + 2;

        goto label1;

     label3:
        $i9 = interfaceinvoke r0.<java.util.List: int size()>();

        $i10 = $i9 - 6;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10);

        $r7 = (java.lang.Integer) $r6;

        $i11 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i11;

        $i12 = interfaceinvoke r0.<java.util.List: int size()>();

        $i13 = $i12 - 5;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i13);

        $r9 = (java.lang.Integer) $r8;

        $i14 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i14;

        $i15 = interfaceinvoke r0.<java.util.List: int size()>();

        $i16 = $i15 - 4;

        $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i16);

        $r11 = (java.lang.Integer) $r10;

        $i17 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i17;

        $i18 = interfaceinvoke r0.<java.util.List: int size()>();

        $i19 = $i18 - 3;

        $r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i19);

        $r13 = (java.lang.Integer) $r12;

        $i20 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $f3 = (float) $i20;

        $i21 = interfaceinvoke r0.<java.util.List: int size()>();

        $i22 = $i21 - 2;

        $r14 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i22);

        $r15 = (java.lang.Integer) $r14;

        $i23 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $f4 = (float) $i23;

        $i24 = interfaceinvoke r0.<java.util.List: int size()>();

        $i25 = $i24 - 1;

        $r16 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i25);

        $r17 = (java.lang.Integer) $r16;

        $i26 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $f5 = (float) $i26;

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r18, $r19, $r20, $r21, $r22, $r23);

     label4:
        return;
    }

    private void rcurveLine(java.util.List)
    {
        java.lang.Float $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.Integer $r2, $r4, $r6, $r8, $r10, $r12;
        org.apache.fontbox.cff.CharStringRenderer r13;
        java.util.List r0;
        float f0, f1, f2, f3, f4, f5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        java.lang.Number $r21, $r23;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11, $r20, $r22;

        r13 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        i19 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i19 >= $i0 goto label4;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - i19;

        if $i2 >= 6 goto label2;

        goto label4;

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i19);

        $r2 = (java.lang.Integer) $r1;

        $i3 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        f0 = (float) $i3;

        $i4 = i19 + 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i4);

        $r4 = (java.lang.Integer) $r3;

        $i5 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        f1 = (float) $i5;

        $i6 = i19 + 2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i6);

        $r6 = (java.lang.Integer) $r5;

        $i7 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        f2 = (float) $i7;

        $i8 = i19 + 3;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i8);

        $r8 = (java.lang.Integer) $r7;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        f3 = (float) $i9;

        $i10 = i19 + 4;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10);

        $r10 = (java.lang.Integer) $r9;

        $i11 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        f4 = (float) $i11;

        $i12 = i19 + 5;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i12);

        $r12 = (java.lang.Integer) $r11;

        $i13 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        f5 = (float) $i13;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f3);

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4);

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        specialinvoke r13.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r14, $r15, $r16, $r17, $r18, $r19);

        $i14 = interfaceinvoke r0.<java.util.List: int size()>();

        $i15 = i19 + 6;

        $i16 = $i14 - $i15;

        if $i16 != 2 goto label3;

        $i17 = i19 + 6;

        $r20 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i17);

        $r21 = (java.lang.Number) $r20;

        $i18 = i19 + 7;

        $r22 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i18);

        $r23 = (java.lang.Number) $r22;

        specialinvoke r13.<org.apache.fontbox.cff.CharStringRenderer: void rlineTo(java.lang.Number,java.lang.Number)>($r21, $r23);

     label3:
        i19 = i19 + 6;

        goto label1;

     label4:
        return;
    }

    private void rvhCurveTo(java.util.List)
    {
        java.lang.Float $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Integer $r2, $r4, $r6, $r8, $r12, $r14, $r16, $r18;
        byte $b8, $b9, $b15, $b18, $b37;
        org.apache.fontbox.cff.CharStringRenderer r9;
        boolean z0, z1, $z2, $z4, $z5;
        java.util.List r0, $r10;
        float f0, f1, $f2, $f3, f4, $f5, $f6, $f7, f8, $f9, f10, f11, f12, f13, f14, f15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36;
        java.lang.Object $r1, $r3, $r5, $r7, $r11, $r13, $r15, $r17;

        r9 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 > 5 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label03;

        $z5 = 1;

        $z4 = 1;

        goto label04;

     label03:
        $z5 = 0;

        $z4 = 0;

     label04:
        z1 = $z4;

        if $z5 != 0 goto label05;

        $i33 = interfaceinvoke r0.<java.util.List: int size()>();

        $i34 = $i33 % 4;

        if $i34 != 0 goto label21;

        goto label06;

     label05:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $i5 = $i4 % 4;

        if $i5 != 0 goto label21;

     label06:
        f4 = -1.0F;

        f15 = -1.0F;

        f14 = -1.0F;

        f13 = -1.0F;

        f12 = -1.0F;

        f11 = -1.0F;

        i35 = 0;

     label07:
        $i36 = interfaceinvoke r0.<java.util.List: int size()>();

        if i35 >= $i36 goto label21;

        $i6 = interfaceinvoke r0.<java.util.List: int size()>();

        $i7 = $i6 - i35;

        if $i7 >= 4 goto label08;

        goto label21;

     label08:
        $b8 = f15 cmpl -1.0F;

        if $b8 == 0 goto label09;

        $r17 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i35);

        $r18 = (java.lang.Integer) $r17;

        $i32 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $f5 = (float) $i32;

        goto label10;

     label09:
        $f5 = 0.0F;

     label10:
        f0 = $f5;

        $b9 = f13 cmpl -1.0F;

        if $b9 == 0 goto label11;

        $f6 = 0.0F;

        goto label12;

     label11:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i35);

        $r2 = (java.lang.Integer) $r1;

        $i10 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $f6 = (float) $i10;

     label12:
        f1 = $f6;

        $i11 = i35 + 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i11);

        $r4 = (java.lang.Integer) $r3;

        $i12 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i12;

        $i13 = i35 + 2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i13);

        $r6 = (java.lang.Integer) $r5;

        $i14 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $f3 = (float) $i14;

        $b15 = f11 cmpl -1.0F;

        if $b15 == 0 goto label13;

        $f7 = 0.0F;

        goto label14;

     label13:
        $i16 = i35 + 3;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i16);

        $r8 = (java.lang.Integer) $r7;

        $i17 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $f7 = (float) $i17;

     label14:
        f8 = $f7;

        $b18 = f14 cmpl -1.0F;

        if $b18 == 0 goto label15;

        $i30 = i35 + 3;

        $r15 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i30);

        $r16 = (java.lang.Integer) $r15;

        $i31 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $f9 = (float) $i31;

        goto label16;

     label15:
        $f9 = 0.0F;

     label16:
        f10 = $f9;

        if z1 == 0 goto label18;

        $i24 = interfaceinvoke r0.<java.util.List: int size()>();

        $i25 = $i24 - i35;

        if $i25 != 5 goto label18;

        if z0 == 0 goto label17;

        $i28 = i35 + 4;

        $r13 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i28);

        $r14 = (java.lang.Integer) $r13;

        $i29 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        f10 = (float) $i29;

        goto label18;

     label17:
        $i26 = i35 + 4;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i26);

        $r12 = (java.lang.Integer) $r11;

        $i27 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        f8 = (float) $i27;

     label18:
        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f8);

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f10);

        specialinvoke r9.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r19, $r20, $r21, $r22, $r23, $r24);

        $b37 = f12 cmpl -1.0F;

        if $b37 != 0 goto label19;

        f4 = 0.0F;

        f15 = 0.0F;

        f14 = 0.0F;

        f13 = 0.0F;

        f12 = 0.0F;

        f11 = 0.0F;

        goto label20;

     label19:
        $i19 = interfaceinvoke r0.<java.util.List: int size()>();

        $i20 = i35 + 4;

        $i21 = $i19 - $i20;

        if $i21 <= 0 goto label21;

        $i22 = i35 + 4;

        $i23 = interfaceinvoke r0.<java.util.List: int size()>();

        $r10 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i22, $i23);

        specialinvoke r9.<org.apache.fontbox.cff.CharStringRenderer: void rvhCurveTo(java.util.List)>($r10);

        goto label21;

     label20:
        i35 = i35 + 4;

        goto label07;

     label21:
        return;
    }

    private void rhvCurveTo(java.util.List)
    {
        java.lang.Float $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Integer $r2, $r4, $r6, $r8, $r12, $r14, $r16, $r18;
        byte $b8, $b10, $b15, $b16, $b37;
        org.apache.fontbox.cff.CharStringRenderer r9;
        boolean z0, z1, $z2, $z4, $z5;
        java.util.List r0, $r10;
        float f0, f1, $f2, $f3, f4, $f5, $f6, $f7, f8, $f9, f10, f11, f12, f13, f14, f15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36;
        java.lang.Object $r1, $r3, $r5, $r7, $r11, $r13, $r15, $r17;

        r9 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 > 5 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label03;

        $z5 = 1;

        $z4 = 1;

        goto label04;

     label03:
        $z5 = 0;

        $z4 = 0;

     label04:
        z1 = $z4;

        if $z5 != 0 goto label05;

        $i33 = interfaceinvoke r0.<java.util.List: int size()>();

        $i34 = $i33 % 4;

        if $i34 != 0 goto label21;

        goto label06;

     label05:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $i5 = $i4 % 4;

        if $i5 != 0 goto label21;

     label06:
        f4 = -1.0F;

        f15 = -1.0F;

        f14 = -1.0F;

        f13 = -1.0F;

        f12 = -1.0F;

        f11 = -1.0F;

        i35 = 0;

     label07:
        $i36 = interfaceinvoke r0.<java.util.List: int size()>();

        if i35 >= $i36 goto label21;

        $i6 = interfaceinvoke r0.<java.util.List: int size()>();

        $i7 = $i6 - i35;

        if $i7 >= 4 goto label08;

        goto label21;

     label08:
        $b8 = f11 cmpl -1.0F;

        if $b8 == 0 goto label09;

        $f5 = 0.0F;

        goto label10;

     label09:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i35);

        $r2 = (java.lang.Integer) $r1;

        $i9 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $f5 = (float) $i9;

     label10:
        f0 = $f5;

        $b10 = f14 cmpl -1.0F;

        if $b10 == 0 goto label11;

        $r17 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i35);

        $r18 = (java.lang.Integer) $r17;

        $i32 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $f6 = (float) $i32;

        goto label12;

     label11:
        $f6 = 0.0F;

     label12:
        f1 = $f6;

        $i11 = i35 + 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i11);

        $r4 = (java.lang.Integer) $r3;

        $i12 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i12;

        $i13 = i35 + 2;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i13);

        $r6 = (java.lang.Integer) $r5;

        $i14 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $f3 = (float) $i14;

        $b15 = f15 cmpl -1.0F;

        if $b15 == 0 goto label13;

        $i30 = i35 + 3;

        $r15 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i30);

        $r16 = (java.lang.Integer) $r15;

        $i31 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $f7 = (float) $i31;

        goto label14;

     label13:
        $f7 = 0.0F;

     label14:
        f8 = $f7;

        $b16 = f12 cmpl -1.0F;

        if $b16 == 0 goto label15;

        $f9 = 0.0F;

        goto label16;

     label15:
        $i17 = i35 + 3;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i17);

        $r8 = (java.lang.Integer) $r7;

        $i18 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $f9 = (float) $i18;

     label16:
        f10 = $f9;

        if z1 == 0 goto label18;

        $i24 = interfaceinvoke r0.<java.util.List: int size()>();

        $i25 = $i24 - i35;

        if $i25 != 5 goto label18;

        if z0 == 0 goto label17;

        $i28 = i35 + 4;

        $r13 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i28);

        $r14 = (java.lang.Integer) $r13;

        $i29 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        f8 = (float) $i29;

        goto label18;

     label17:
        $i26 = i35 + 4;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i26);

        $r12 = (java.lang.Integer) $r11;

        $i27 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        f10 = (float) $i27;

     label18:
        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f8);

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f10);

        specialinvoke r9.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r19, $r20, $r21, $r22, $r23, $r24);

        $b37 = f13 cmpl -1.0F;

        if $b37 != 0 goto label19;

        f4 = 0.0F;

        f15 = 0.0F;

        f14 = 0.0F;

        f13 = 0.0F;

        f12 = 0.0F;

        f11 = 0.0F;

        goto label20;

     label19:
        $i19 = interfaceinvoke r0.<java.util.List: int size()>();

        $i20 = i35 + 4;

        $i21 = $i19 - $i20;

        if $i21 <= 0 goto label21;

        $i22 = i35 + 4;

        $i23 = interfaceinvoke r0.<java.util.List: int size()>();

        $r10 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i22, $i23);

        specialinvoke r9.<org.apache.fontbox.cff.CharStringRenderer: void rhvCurveTo(java.util.List)>($r10);

        goto label21;

     label20:
        i35 = i35 + 4;

        goto label07;

     label21:
        return;
    }

    private void rhhCurveTo(java.util.List)
    {
        java.lang.Float $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.Integer $r4, $r6, $r8, $r10, $r12;
        byte $b14;
        org.apache.fontbox.cff.CharStringRenderer r2;
        boolean z0, z2, $z3, z4, z5, z6, z7, $z8, $z9;
        java.util.List r0;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11;

        r2 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i0 % 2;

        if $i1 == 0 goto label01;

        $z9 = 1;

        $z8 = 1;

        goto label02;

     label01:
        $z9 = 0;

        $z8 = 0;

     label02:
        z0 = $z8;

        if $z9 != 0 goto label03;

        $i9 = interfaceinvoke r0.<java.util.List: int size()>();

        $i10 = $i9 % 4;

        if $i10 != 0 goto label15;

        goto label04;

     label03:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $i4 = $i3 % 4;

        if $i4 != 0 goto label15;

     label04:
        f0 = -1.0F;

        f7 = -1.0F;

        f6 = -1.0F;

        z2 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        if z0 == 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z4 = $z3;

        i11 = 0;

     label07:
        $i12 = interfaceinvoke r0.<java.util.List: int size()>();

        if i11 >= $i12 goto label15;

        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        $i6 = $i5 - i11;

        if $i6 >= 4 goto label08;

        goto label15;

     label08:
        if z0 == 0 goto label09;

        if z5 != 0 goto label09;

        $i8 = i11 + z4;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i8);

        $r6 = (java.lang.Integer) $r5;

        goto label10;

     label09:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i11);

        $r6 = (java.lang.Integer) $r1;

     label10:
        $i13 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i13;

        $b14 = f6 cmpl -1.0F;

        if $b14 == 0 goto label11;

        $f2 = f7;

        goto label13;

     label11:
        if z0 == 0 goto label12;

        if z6 != 0 goto label12;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i11);

        $r4 = (java.lang.Integer) $r3;

        $i7 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i7;

        goto label13;

     label12:
        $f2 = 0.0F;

     label13:
        $i15 = i11 + 1;

        $i16 = $i15 + z4;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i16);

        $r8 = (java.lang.Integer) $r7;

        $i17 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $f3 = (float) $i17;

        $i18 = i11 + 2;

        $i19 = $i18 + z4;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i19);

        $r10 = (java.lang.Integer) $r9;

        $i20 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $f4 = (float) $i20;

        $i21 = i11 + 3;

        $i22 = $i21 + z4;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i22);

        $r12 = (java.lang.Integer) $r11;

        $i23 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $f5 = (float) $i23;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        $r18 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        specialinvoke r2.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r13, $r14, $r15, $r16, $r17, $r18);

        f0 = 0.0F;

        f7 = 0.0F;

        f6 = 0.0F;

        if z0 == 0 goto label14;

        if z7 != 0 goto label14;

        i11 = i11 + 1;

        z2 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

     label14:
        z4 = 0;

        i11 = i11 + 4;

        goto label07;

     label15:
        return;
    }

    private void rvvCurveTo(java.util.List)
    {
        java.lang.Float $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Integer $r3, $r5, $r7, $r9, $r11;
        org.apache.fontbox.cff.CharStringRenderer r1;
        boolean z0, z2, $z3, z4, z5, z6, $z7, $z8;
        java.util.List r0;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.Object $r2, $r4, $r6, $r8, $r10;

        r1 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i0 % 2;

        if $i1 == 0 goto label01;

        $z8 = 1;

        $z7 = 1;

        goto label02;

     label01:
        $z8 = 0;

        $z7 = 0;

     label02:
        z0 = $z7;

        if $z8 != 0 goto label03;

        $i8 = interfaceinvoke r0.<java.util.List: int size()>();

        $i9 = $i8 % 4;

        if $i9 != 0 goto label12;

        goto label04;

     label03:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $i4 = $i3 % 4;

        if $i4 != 0 goto label12;

     label04:
        z2 = 0;

        z6 = 0;

        z5 = 0;

        if z0 == 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z4 = $z3;

        i10 = 0;

     label07:
        $i11 = interfaceinvoke r0.<java.util.List: int size()>();

        if i10 >= $i11 goto label12;

        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        $i6 = $i5 - i10;

        if $i6 >= 4 goto label08;

        goto label12;

     label08:
        if z0 == 0 goto label09;

        if z5 != 0 goto label09;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i10);

        $r3 = (java.lang.Integer) $r2;

        $i7 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i7;

        goto label10;

     label09:
        $f0 = 0.0F;

     label10:
        $i12 = i10 + z4;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i12);

        $r5 = (java.lang.Integer) $r4;

        $i13 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i13;

        $i14 = i10 + 1;

        $i15 = $i14 + z4;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i15);

        $r7 = (java.lang.Integer) $r6;

        $i16 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $f2 = (float) $i16;

        $i17 = i10 + 2;

        $i18 = $i17 + z4;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i18);

        $r9 = (java.lang.Integer) $r8;

        $i19 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $f3 = (float) $i19;

        $i20 = i10 + 3;

        $i21 = $i20 + z4;

        $r10 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i21);

        $r11 = (java.lang.Integer) $r10;

        $i22 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $f4 = (float) $i22;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        specialinvoke r1.<org.apache.fontbox.cff.CharStringRenderer: void rrcurveTo(java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.Number)>($r12, $r13, $r14, $r15, $r16, $r17);

        if z0 == 0 goto label11;

        if z6 != 0 goto label11;

        i10 = i10 + 1;

        z2 = 1;

        z6 = 1;

        z5 = 1;

     label11:
        z4 = 0;

        i10 = i10 + 4;

        goto label07;

     label12:
        return;
    }

    private void closePath()
    {
        java.awt.geom.Point2D $r2;
        java.awt.geom.GeneralPath $r1, $r3;
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        $r1 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D referencePoint> = $r2;

        $r3 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        virtualinvoke $r3.<java.awt.geom.GeneralPath: void closePath()>();

        return;
    }

    private void pointSb(java.lang.Number, java.lang.Number)
    {
        java.awt.geom.Point2D$Float $r1;
        float $f0, $f1;
        java.lang.Number r2, r3;
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        r2 := @parameter0: java.lang.Number;

        r3 := @parameter1: java.lang.Number;

        $r1 = new java.awt.geom.Point2D$Float;

        $f0 = virtualinvoke r2.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r3.<java.lang.Number: float floatValue()>();

        specialinvoke $r1.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, $f1);

        r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.Point2D sidebearingPoint> = $r1;

        return;
    }

    public java.awt.geom.Rectangle2D getBounds()
    {
        java.awt.geom.GeneralPath $r1;
        org.apache.fontbox.cff.CharStringRenderer r0;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        $r1 = r0.<org.apache.fontbox.cff.CharStringRenderer: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public int getWidth()
    {
        int $i0;
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        $i0 = r0.<org.apache.fontbox.cff.CharStringRenderer: int width>;

        return $i0;
    }

    private void setWidth(int)
    {
        int i0;
        org.apache.fontbox.cff.CharStringRenderer r0;

        r0 := @this: org.apache.fontbox.cff.CharStringRenderer;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.cff.CharStringRenderer: int width> = i0;

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/fontbox/cff/CharStringRenderer;");

        <org.apache.fontbox.cff.CharStringRenderer: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
