public class org.xmpp.component.ComponentException extends java.lang.Exception
{
    private org.xmpp.packet.StreamError streamError;

    public void <init>()
    {
        org.xmpp.component.ComponentException r0;

        r0 := @this: org.xmpp.component.ComponentException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.xmpp.component.ComponentException r0;
        java.lang.String r1;

        r0 := @this: org.xmpp.component.ComponentException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.xmpp.component.ComponentException r0;
        java.lang.String r1;

        r0 := @this: org.xmpp.component.ComponentException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        org.xmpp.component.ComponentException r0;

        r0 := @this: org.xmpp.component.ComponentException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(java.lang.String, org.xmpp.packet.StreamError)
    {
        org.xmpp.component.ComponentException r0;
        org.xmpp.packet.StreamError r2;
        java.lang.String r1;

        r0 := @this: org.xmpp.component.ComponentException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.xmpp.packet.StreamError;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<org.xmpp.component.ComponentException: org.xmpp.packet.StreamError streamError> = r2;

        return;
    }

    public void <init>(org.xmpp.packet.StreamError)
    {
        org.xmpp.packet.StreamError r1;
        org.xmpp.component.ComponentException r0;
        java.lang.String $r3;
        org.xmpp.packet.StreamError$Condition $r2;

        r0 := @this: org.xmpp.component.ComponentException;

        r1 := @parameter0: org.xmpp.packet.StreamError;

        $r2 = virtualinvoke r1.<org.xmpp.packet.StreamError: org.xmpp.packet.StreamError$Condition getCondition()>();

        $r3 = virtualinvoke $r2.<org.xmpp.packet.StreamError$Condition: java.lang.String toXMPP()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        r0.<org.xmpp.component.ComponentException: org.xmpp.packet.StreamError streamError> = r1;

        return;
    }

    public org.xmpp.packet.StreamError getStreamError()
    {
        org.xmpp.component.ComponentException r0;
        org.xmpp.packet.StreamError $r1;

        r0 := @this: org.xmpp.component.ComponentException;

        $r1 = r0.<org.xmpp.component.ComponentException: org.xmpp.packet.StreamError streamError>;

        return $r1;
    }
}
