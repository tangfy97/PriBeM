class org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder extends org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder
{
    final org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI this$0;

    void <init>(org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI)
    {
        org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder r0;
        org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI r1;

        r0 := @this: org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI;

        r0.<org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder: org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return;
    }

    protected void paintExpandedControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r6, $r7, $r8;
        org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder r4;
        java.awt.Graphics2D $r3, $r11;
        int i0, i1, i2, i3;
        org.jdesktop.swingx.JXTaskPane r5;
        java.awt.Graphics r0;
        java.awt.RenderingHints$Key $r2, $r10;
        java.lang.Object $r1, $r9;

        r4 := @this: org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder;

        r5 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r0 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = (java.awt.Graphics2D) r0;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r3.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        $r6 = virtualinvoke r4.<org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder: java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)>(r5);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $r7 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        $r8 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        virtualinvoke r4.<org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder: void paintRectAroundControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int,java.awt.Color,java.awt.Color)>(r5, r0, i0, i1, i2, i3, $r7, $r8);

        virtualinvoke r4.<org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder: void paintChevronControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)>(r5, r0, i0, i1, i2, i3);

        $r11 = (java.awt.Graphics2D) r0;

        $r10 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r9 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_OFF>;

        virtualinvoke $r11.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r10, $r9);

        return;
    }

    protected boolean isMouseOverBorder()
    {
        org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder r0;

        r0 := @this: org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder;

        return 1;
    }
}
