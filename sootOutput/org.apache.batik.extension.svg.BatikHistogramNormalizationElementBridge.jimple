public class org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge implements org.apache.batik.extension.svg.BatikExtConstants
{

    public void <init>()
    {
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        return "http://xml.apache.org/batik/ext";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge r0;

        r0 := @this: org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        return "histogramNormalization";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge $r0, r1;

        r1 := @this: org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        $r0 = new org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        specialinvoke $r0.<org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        java.lang.Object[] $r14;
        java.awt.geom.Rectangle2D r9, $r10, r16;
        org.apache.batik.ext.awt.image.PadMode $r19;
        byte $b1, $b2;
        java.util.Map r4;
        int $i0, $i3, $i4;
        java.lang.String $r11;
        org.apache.batik.gvt.GraphicsNode r2;
        org.apache.batik.bridge.BridgeException $r20;
        org.apache.batik.bridge.BridgeContext r5;
        java.lang.NumberFormatException $r12;
        org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit $r21;
        org.apache.batik.ext.awt.image.renderable.Filter r3, $r6, r8;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r22;
        org.w3c.dom.Element r0, r1;
        org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge r15;
        float f0, $f1;
        java.lang.Object $r7;

        r15 := @this: org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge;

        r5 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r3 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r9 := @parameter5: java.awt.geom.Rectangle2D;

        r4 := @parameter6: java.util.Map;

        $r6 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r3, r4, r5);

        if $r6 != null goto label1;

        return null;

     label1:
        $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("SourceGraphic");

        r8 = (org.apache.batik.ext.awt.image.renderable.Filter) $r7;

        if $r6 != r8 goto label2;

        r16 = r9;

        goto label3;

     label2:
        r16 = interfaceinvoke $r6.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

     label3:
        $r10 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r16, r9, r5);

        f0 = 1.0F;

        $r11 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "trim");

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 == 0 goto label7;

     label4:
        f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r11);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r20 = new org.apache.batik.bridge.BridgeException;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "trim";

        $r14[1] = $r11;

        specialinvoke $r20.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r12, "attribute.malformed", $r14);

        throw $r20;

     label7:
        $b1 = f0 cmpg 0.0F;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label8;

        f0 = 0.0F;

        goto label9;

     label8:
        $b2 = f0 cmpl 100.0F;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label9;

        f0 = 100.0F;

     label9:
        $r21 = new org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit;

        $f1 = f0 / 100.0F;

        specialinvoke $r21.<org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,float)>($r6, $f1);

        $r22 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r19 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r22.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r21, $r10, $r19);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r22, r4);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>($r22, r0);

        return $r22;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    protected static int convertSides(org.w3c.dom.Element, java.lang.String, int, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r5, $r8;
        org.apache.batik.bridge.BridgeException $r3, $r7;
        org.apache.batik.bridge.BridgeContext r4;
        java.lang.NumberFormatException $r6;
        org.w3c.dom.Element r0;
        int $i0, $i1, i2;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        r4 := @parameter3: org.apache.batik.bridge.BridgeContext;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return i2;

     label1:
        $i1 = staticinvoke <org.apache.batik.bridge.SVGUtilities: int convertSVGInteger(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.batik.bridge.BridgeException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r1;

        $r8[1] = $r2;

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r0, $r6, "attribute.malformed", $r8);

        throw $r7;

     label4:
        if $i1 >= 3 goto label5;

        $r3 = new org.apache.batik.bridge.BridgeException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = $r2;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r4, r0, "attribute.malformed", $r5);

        throw $r3;

     label5:
        return $i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
