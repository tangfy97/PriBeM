public class org.apache.tika.parser.mat.MatParser extends org.apache.tika.parser.AbstractParser
{
    public static final java.lang.String MATLAB_MIME_TYPE;
    private final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.mat.MatParser r0;
        java.util.Set $r2;
        org.apache.tika.mime.MediaType $r1;

        r0 := @this: org.apache.tika.parser.mat.MatParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType application(java.lang.String)>("x-matlab-data");

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        r0.<org.apache.tika.parser.mat.MatParser: java.util.Set SUPPORTED_TYPES> = $r2;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.mat.MatParser r0;
        java.util.Set $r1;
        org.apache.tika.parser.ParseContext r2;

        r0 := @this: org.apache.tika.parser.mat.MatParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r1 = r0.<org.apache.tika.parser.mat.MatParser: java.util.Set SUPPORTED_TYPES>;

        return $r1;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r12;
        org.apache.tika.metadata.Metadata r0;
        java.util.Map $r17;
        com.jmatio.types.MLStructure r33;
        java.util.Set $r18;
        java.lang.StringBuilder $r26, $r27, $r28, $r30;
        com.jmatio.io.MatFileHeader $r5;
        org.apache.tika.exception.TikaException $r52;
        java.lang.String $r6, $r8, $r9, $r10, $r11, $r14, r23, $r29, $r31, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50;
        java.util.Map$Entry r21;
        org.apache.tika.sax.XHTMLContentHandler $r15;
        java.io.IOException $r51;
        java.io.File $r4;
        com.jmatio.io.MatFileReader $r3;
        char[] $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Collection $r34;
        org.apache.tika.parser.mat.MatParser r53;
        com.jmatio.types.MLArray r25, $r32, r37;
        org.apache.tika.parser.ParseContext r54;
        java.lang.String[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.tika.io.TikaInputStream $r2;
        org.xml.sax.ContentHandler r16;
        java.util.Iterator $r19, $r35;
        java.lang.Object $r20, $r22, $r24, $r36;
        java.io.InputStream r1;

        r53 := @this: org.apache.tika.parser.mat.MatParser;

        r1 := @parameter0: java.io.InputStream;

        r16 := @parameter1: org.xml.sax.ContentHandler;

        r0 := @parameter2: org.apache.tika.metadata.Metadata;

        r54 := @parameter3: org.apache.tika.parser.ParseContext;

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", "application/x-matlab-data");

     label01:
        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream)>(r1);

        $r3 = new com.jmatio.io.MatFileReader;

        $r4 = virtualinvoke $r2.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        specialinvoke $r3.<com.jmatio.io.MatFileReader: void <init>(java.io.File)>($r4);

        $r5 = virtualinvoke $r3.<com.jmatio.io.MatFileReader: com.jmatio.io.MatFileHeader getMatFileHeader()>();

        $r6 = virtualinvoke $r5.<com.jmatio.io.MatFileHeader: java.lang.String getDescription()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r8 = $r7[2];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Created");

        if $z0 == 0 goto label02;

        $r46 = $r7[2];

        $i3 = virtualinvoke $r46.<java.lang.String: int lastIndexOf(java.lang.String)>("Created on:");

        $r48 = $r7[2];

        $r47 = "Created on:";

        $i4 = virtualinvoke $r47.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $r49 = virtualinvoke $r48.<java.lang.String: java.lang.String substring(int)>($i5);

        $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("createdOn", $r50);

     label02:
        $r9 = $r7[1];

        $z1 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("Platform");

        if $z1 == 0 goto label03;

        $r41 = $r7[1];

        $i0 = virtualinvoke $r41.<java.lang.String: int lastIndexOf(java.lang.String)>("Platform:");

        $r43 = $r7[1];

        $r42 = "Platform:";

        $i1 = virtualinvoke $r42.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String substring(int)>($i2);

        $r45 = virtualinvoke $r44.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("platform", $r45);

     label03:
        $r10 = $r7[0];

        $z2 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("MATLAB");

        if $z2 == 0 goto label04;

        $r40 = $r7[0];

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("fileType", $r40);

     label04:
        $r11 = new java.lang.String;

        $r12 = virtualinvoke $r5.<com.jmatio.io.MatFileHeader: byte[] getEndianIndicator()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[],java.lang.String)>($r12, "UTF-8");

        $r13 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r13);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("endian", $r14);

        $r15 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r16, r0);

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        $r17 = virtualinvoke $r3.<com.jmatio.io.MatFileReader: java.util.Map getContent()>();

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r23 = (java.lang.String) $r22;

        $r24 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r25 = (com.jmatio.types.MLArray) $r24;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r25);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("p", $r31);

        $z3 = virtualinvoke r25.<com.jmatio.types.MLArray: boolean isStruct()>();

        if $z3 == 0 goto label09;

        $r32 = virtualinvoke $r3.<com.jmatio.io.MatFileReader: com.jmatio.types.MLArray getMLArray(java.lang.String)>(r23);

        r33 = (com.jmatio.types.MLStructure) $r32;

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("ul");

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void newline()>();

        $r34 = virtualinvoke r33.<com.jmatio.types.MLStructure: java.util.Collection getAllFields()>();

        $r35 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.jmatio.types.MLArray) $r36;

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("li");

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r37);

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r38);

        $z5 = virtualinvoke r37.<com.jmatio.types.MLArray: boolean isStruct()>();

        if $z5 == 0 goto label07;

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("ul");

        $r39 = virtualinvoke r37.<com.jmatio.types.MLArray: java.lang.String contentToString()>();

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void element(java.lang.String,java.lang.String)>("li", $r39);

        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("ul");

     label07:
        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("li");

        goto label06;

     label08:
        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("ul");

     label09:
        goto label05;

     label10:
        virtualinvoke $r15.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

     label11:
        goto label13;

     label12:
        $r51 := @caughtexception;

        $r52 = new org.apache.tika.exception.TikaException;

        specialinvoke $r52.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Error parsing Matlab file with MatParser", $r51);

        throw $r52;

     label13:
        return;

        catch java.io.IOException from label01 to label11 with label12;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.mat.MatParser: java.lang.String MATLAB_MIME_TYPE> = "application/x-matlab-data";

        return;
    }
}
