class org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser extends org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser
{

    void <init>()
    {
        org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser r0;

        r0 := @this: org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser;

        specialinvoke r0.<org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.Class getBeanClass(org.w3c.dom.Element)
    {
        org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return class "Lorg/springframework/beans/factory/config/PropertyPlaceholderConfigurer;";
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        org.w3c.dom.Element r1;
        java.lang.Boolean $r4;
        java.lang.StringBuilder $r6, $r7;
        java.lang.String $r3, $r5, $r8;
        boolean $z0;

        r0 := @this: org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke r0.<org.springframework.context.config.AbstractPropertyLoadingBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)>(r1, r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ignore-unresolvable");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("ignoreUnresolvablePlaceholders", $r4);

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("system-properties-mode");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r5);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("SYSTEM_PROPERTIES_MODE_");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("systemPropertiesModeName", $r8);

     label1:
        return;
    }
}
