final class com.mycila.inject.internal.guava.collect.ImmutableEnumSet extends com.mycila.inject.internal.guava.collect.ImmutableSet
{
    private final transient java.util.EnumSet delegate;
    private transient int hashCode;

    void <init>(java.util.EnumSet)
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        r1 := @parameter0: java.util.EnumSet;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableSet: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate> = r1;

        return;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        return 0;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()
    {
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r3;
        java.util.EnumSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumSet: java.util.Iterator iterator()>();

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: com.mycila.inject.internal.guava.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator)>($r2);

        return $r3;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $i0 = virtualinvoke $r1.<java.util.EnumSet: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.lang.Object r1;
        java.util.EnumSet $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $z0 = virtualinvoke $r2.<java.util.EnumSet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.Collection r1;
        java.util.EnumSet $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $z0 = virtualinvoke $r2.<java.util.EnumSet: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $z0 = virtualinvoke $r1.<java.util.EnumSet: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r2;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumSet: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r1, $r3;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $r3 = virtualinvoke $r2.<java.util.EnumSet: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r1;
        java.lang.Object r0;
        java.util.EnumSet $r2;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $z0 = virtualinvoke $r2.<java.util.EnumSet: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        int i0, $i1;
        java.util.EnumSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        i0 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: int hashCode>;

        if i0 != 0 goto label1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $i1 = virtualinvoke $r1.<java.util.EnumSet: int hashCode()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: int hashCode> = $i1;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        java.util.EnumSet $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        $r2 = virtualinvoke $r1.<java.util.EnumSet: java.lang.String toString()>();

        return $r2;
    }

    java.lang.Object writeReplace()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet$EnumSerializedForm $r0;
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r1;
        java.util.EnumSet $r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r0 = new com.mycila.inject.internal.guava.collect.ImmutableEnumSet$EnumSerializedForm;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: java.util.EnumSet delegate>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet$EnumSerializedForm: void <init>(java.util.EnumSet)>($r2);

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ImmutableEnumSet r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableEnumSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableEnumSet: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }
}
