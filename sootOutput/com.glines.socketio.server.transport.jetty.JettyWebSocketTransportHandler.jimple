public final class com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler extends com.glines.socketio.server.AbstractTransportHandler implements org.eclipse.jetty.websocket.WebSocket$OnTextMessage, org.eclipse.jetty.websocket.WebSocket$OnBinaryMessage
{
    private static final long DEFAULT_HEARTBEAT_DELAY;
    private static final long DEFAULT_HEARTBEAT_TIMEOUT;
    private static final java.util.logging.Logger LOGGER;
    private org.eclipse.jetty.websocket.WebSocket$Connection outbound;
    private boolean initiated;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: long DEFAULT_HEARTBEAT_TIMEOUT> = 10000L;

        <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: long DEFAULT_HEARTBEAT_DELAY> = 150000L;

        $r0 = class "Lcom/glines/socketio/server/transport/jetty/JettyWebSocketTransportHandler;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: java.util.logging.Logger LOGGER> = $r2;

        return;
    }

    public void <init>()
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        specialinvoke r0.<com.glines.socketio.server.AbstractTransportHandler: void <init>()>();

        return;
    }

    protected void init()
    {
        com.glines.socketio.server.SocketIOSession $r1, $r3, $r14, $r18;
        long $l0, $l1, $l2, $l3;
        java.util.logging.Level $r5;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        java.lang.String $r10, $r11, $r20;
        boolean $z0;
        com.glines.socketio.server.SocketIOConfig $r2, $r4, $r9;
        java.util.logging.Logger $r6, $r8;
        java.lang.StringBuilder $r7, $r12, $r13, $r15, $r16, $r17, $r19;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r2 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOConfig getConfig()>();

        $l0 = interfaceinvoke $r2.<com.glines.socketio.server.SocketIOConfig: long getHeartbeatDelay(long)>(150000L);

        interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: void setHeartbeat(long)>($l0);

        $r3 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r4 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOConfig getConfig()>();

        $l1 = interfaceinvoke $r4.<com.glines.socketio.server.SocketIOConfig: long getHeartbeatTimeout(long)>(10000L);

        interfaceinvoke $r3.<com.glines.socketio.server.SocketIOSession: void setTimeout(long)>($l1);

        $r6 = <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: java.util.logging.Logger LOGGER>;

        $r5 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r6.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r5);

        if $z0 == 0 goto label1;

        $r8 = <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: java.util.logging.Logger LOGGER>;

        $r7 = new java.lang.StringBuilder;

        $r9 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOConfig getConfig()>();

        $r10 = interfaceinvoke $r9.<com.glines.socketio.server.SocketIOConfig: java.lang.String getNamespace()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transport handler configuration:\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - heartbeatDelay=");

        $r14 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $l2 = interfaceinvoke $r14.<com.glines.socketio.server.SocketIOSession: long getHeartbeat()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - heartbeatTimeout=");

        $r18 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $l3 = interfaceinvoke $r18.<com.glines.socketio.server.SocketIOSession: long getTimeout()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void fine(java.lang.String)>($r20);

     label1:
        return;
    }

    public void onOpen(org.eclipse.jetty.websocket.WebSocket$Connection)
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        org.eclipse.jetty.websocket.WebSocket$Connection r1;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocket$Connection;

        r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound> = r1;

        return;
    }

    public void onClose(int, java.lang.String)
    {
        com.glines.socketio.server.SocketIOSession $r1;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        int i0;
        java.lang.String r2;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: void onShutdown()>();

        return;
    }

    public void onMessage(java.lang.String)
    {
        com.glines.socketio.server.SocketIOSession $r1, $r7, $r10, $r13, $r19, $r23, $r26;
        com.glines.socketio.server.SocketIOFrame r6;
        long $l0;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        java.lang.String r2, $r8, $r14, $r15, $r21, $r22;
        boolean $z0, $z1, $z2;
        com.glines.socketio.server.SocketIOFrame$FrameType $r12, $r18;
        java.util.Iterator $r4;
        org.eclipse.jetty.websocket.WebSocket$Connection $r9, $r11, $r17, $r25;
        java.io.IOException $r24;
        java.util.List $r3;
        java.lang.Object $r5;
        java.lang.StringBuilder $r16, $r20;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: void startHeartbeatTimer()>();

        $z0 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: boolean initiated>;

        if $z0 != 0 goto label5;

        $r8 = "OPEN";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

     label1:
        $r11 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        $r12 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType SESSION_ID>;

        $r13 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r14 = interfaceinvoke $r13.<com.glines.socketio.server.SocketIOSession: java.lang.String getSessionId()>();

        $r15 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r12, 0, $r14);

        interfaceinvoke $r11.<org.eclipse.jetty.websocket.WebSocket$Connection: void sendMessage(java.lang.String)>($r15);

        $r17 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        $r18 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType HEARTBEAT_INTERVAL>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $l0 = interfaceinvoke $r19.<com.glines.socketio.server.SocketIOSession: long getHeartbeat()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r18, 0, $r21);

        interfaceinvoke $r17.<org.eclipse.jetty.websocket.WebSocket$Connection: void sendMessage(java.lang.String)>($r22);

        $r23 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r23.<com.glines.socketio.server.SocketIOSession: void onConnect(com.glines.socketio.server.TransportHandler)>(r0);

        r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: boolean initiated> = 1;

     label2:
        goto label8;

     label3:
        $r24 := @caughtexception;

        $r25 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        interfaceinvoke $r25.<org.eclipse.jetty.websocket.WebSocket$Connection: void disconnect()>();

        $r26 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r26.<com.glines.socketio.server.SocketIOSession: void onShutdown()>();

        goto label8;

     label4:
        $r9 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        interfaceinvoke $r9.<org.eclipse.jetty.websocket.WebSocket$Connection: void disconnect()>();

        $r10 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r10.<com.glines.socketio.server.SocketIOSession: void onShutdown()>();

        goto label8;

     label5:
        $r3 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.util.List parse(java.lang.String)>(r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label7;

     label6:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.glines.socketio.server.SocketIOFrame) $r5;

        $r7 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r7.<com.glines.socketio.server.SocketIOSession: void onMessage(com.glines.socketio.server.SocketIOFrame)>(r6);

     label7:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label6;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void onMessage(byte[], int, int)
    {
        byte[] r2;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        int i0, i1;
        java.lang.String $r1;
        java.io.UnsupportedEncodingException $r3;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r2, i0, i1, "UTF-8");

        virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: void onMessage(java.lang.String)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void disconnect()
    {
        com.glines.socketio.server.SocketIOSession $r1;
        com.glines.socketio.common.DisconnectReason $r2;
        org.eclipse.jetty.websocket.WebSocket$Connection $r3;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r2 = <com.glines.socketio.common.DisconnectReason: com.glines.socketio.common.DisconnectReason DISCONNECT>;

        interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: void onDisconnect(com.glines.socketio.common.DisconnectReason)>($r2);

        $r3 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        interfaceinvoke $r3.<org.eclipse.jetty.websocket.WebSocket$Connection: void disconnect()>();

        return;
    }

    public void close()
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        com.glines.socketio.server.SocketIOSession $r1;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: void startClose()>();

        return;
    }

    public com.glines.socketio.common.ConnectionState getConnectionState()
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        com.glines.socketio.server.SocketIOSession $r1;
        com.glines.socketio.common.ConnectionState $r2;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r2 = interfaceinvoke $r1.<com.glines.socketio.server.SocketIOSession: com.glines.socketio.common.ConnectionState getConnectionState()>();

        return $r2;
    }

    public void sendMessage(com.glines.socketio.server.SocketIOFrame) throws com.glines.socketio.common.SocketIOException
    {
        com.glines.socketio.server.SocketIOFrame r5;
        com.glines.socketio.server.SocketIOSession $r11;
        java.util.logging.Level $r3, $r10;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        com.glines.socketio.common.SocketIOException $r23;
        java.lang.String $r7, $r12, $r18, $r20;
        com.glines.socketio.server.SocketIOClosedException $r2;
        boolean $z0, $z1;
        com.glines.socketio.server.SocketIOFrame$FrameType $r15;
        org.eclipse.jetty.websocket.WebSocket$Connection $r1, $r6, $r22;
        java.io.IOException $r21;
        java.util.logging.Logger $r4, $r9;
        java.lang.StringBuilder $r8, $r13, $r14, $r16, $r17, $r19;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r5 := @parameter0: com.glines.socketio.server.SocketIOFrame;

        $r1 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket$Connection: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r4 = <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: java.util.logging.Logger LOGGER>;

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r4.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z1 == 0 goto label1;

        $r9 = <com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: java.util.logging.Logger LOGGER>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r11 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r12 = interfaceinvoke $r11.<com.glines.socketio.server.SocketIOSession: java.lang.String getSessionId()>();

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: sendMessage: [");

        $r15 = virtualinvoke r5.<com.glines.socketio.server.SocketIOFrame: com.glines.socketio.server.SocketIOFrame$FrameType getFrameType()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r18 = virtualinvoke r5.<com.glines.socketio.server.SocketIOFrame: java.lang.String getData()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r10, $r20);

     label1:
        $r6 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        $r7 = virtualinvoke r5.<com.glines.socketio.server.SocketIOFrame: java.lang.String encode()>();

        interfaceinvoke $r6.<org.eclipse.jetty.websocket.WebSocket$Connection: void sendMessage(java.lang.String)>($r7);

     label2:
        goto label5;

     label3:
        $r21 := @caughtexception;

        $r22 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        interfaceinvoke $r22.<org.eclipse.jetty.websocket.WebSocket$Connection: void disconnect()>();

        $r23 = new com.glines.socketio.common.SocketIOException;

        specialinvoke $r23.<com.glines.socketio.common.SocketIOException: void <init>(java.lang.Throwable)>($r21);

        throw $r23;

     label4:
        $r2 = new com.glines.socketio.server.SocketIOClosedException;

        specialinvoke $r2.<com.glines.socketio.server.SocketIOClosedException: void <init>()>();

        throw $r2;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void sendMessage(java.lang.String) throws com.glines.socketio.common.SocketIOException
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        java.lang.String r1;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: void sendMessage(int,java.lang.String)>(0, r1);

        return;
    }

    public void sendMessage(int, java.lang.String) throws com.glines.socketio.common.SocketIOException
    {
        com.glines.socketio.server.SocketIOFrame$FrameType $r8;
        com.glines.socketio.server.SocketIOSession $r3;
        com.glines.socketio.server.SocketIOFrame $r6;
        org.eclipse.jetty.websocket.WebSocket$Connection $r1;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        int i0;
        java.lang.String r7;
        com.glines.socketio.server.SocketIOClosedException $r2;
        boolean $z0;
        com.glines.socketio.common.ConnectionState $r4, $r5;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r1 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket$Connection: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        $r4 = interfaceinvoke $r3.<com.glines.socketio.server.SocketIOSession: com.glines.socketio.common.ConnectionState getConnectionState()>();

        $r5 = <com.glines.socketio.common.ConnectionState: com.glines.socketio.common.ConnectionState CONNECTED>;

        if $r4 != $r5 goto label1;

        $r6 = new com.glines.socketio.server.SocketIOFrame;

        $r8 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType DATA>;

        specialinvoke $r6.<com.glines.socketio.server.SocketIOFrame: void <init>(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r8, i0, r7);

        virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: void sendMessage(com.glines.socketio.server.SocketIOFrame)>($r6);

        goto label2;

     label1:
        $r2 = new com.glines.socketio.server.SocketIOClosedException;

        specialinvoke $r2.<com.glines.socketio.server.SocketIOClosedException: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    public void handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, com.glines.socketio.server.SocketIOSession) throws java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r2;
        com.glines.socketio.server.SocketIOSession r3;
        javax.servlet.http.HttpServletResponse r0;
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r1;

        r1 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        r3 := @parameter2: com.glines.socketio.server.SocketIOSession;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, "Unexpected request on upgraded WebSocket connection");

        return;
    }

    public void abort()
    {
        com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler r0;
        com.glines.socketio.server.SocketIOSession $r2;
        org.eclipse.jetty.websocket.WebSocket$Connection $r1;

        r0 := @this: com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler;

        $r1 = r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound>;

        interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket$Connection: void disconnect()>();

        r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: org.eclipse.jetty.websocket.WebSocket$Connection outbound> = null;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.transport.jetty.JettyWebSocketTransportHandler: com.glines.socketio.server.SocketIOSession getSession()>();

        interfaceinvoke $r2.<com.glines.socketio.server.SocketIOSession: void onShutdown()>();

        return;
    }
}
