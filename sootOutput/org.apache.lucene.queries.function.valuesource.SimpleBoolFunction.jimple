public abstract class org.apache.lucene.queries.function.valuesource.SimpleBoolFunction extends org.apache.lucene.queries.function.valuesource.BoolFunction
{
    protected final org.apache.lucene.queries.function.ValueSource source;

    public void <init>(org.apache.lucene.queries.function.ValueSource)
    {
        org.apache.lucene.queries.function.ValueSource r1;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        r1 := @parameter0: org.apache.lucene.queries.function.ValueSource;

        specialinvoke r0.<org.apache.lucene.queries.function.valuesource.BoolFunction: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source> = r1;

        return;
    }

    protected abstract java.lang.String name();

    protected abstract boolean func(int, org.apache.lucene.queries.function.FunctionValues);

    public org.apache.lucene.queries.function.docvalues.BoolDocValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSource $r3;
        java.util.Map r1;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction$1 $r5;
        org.apache.lucene.queries.function.FunctionValues $r4;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0;
        org.apache.lucene.index.AtomicReaderContext r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.ValueSource: org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map,org.apache.lucene.index.AtomicReaderContext)>(r1, r2);

        $r5 = new org.apache.lucene.queries.function.valuesource.SimpleBoolFunction$1;

        specialinvoke $r5.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction$1: void <init>(org.apache.lucene.queries.function.valuesource.SimpleBoolFunction,org.apache.lucene.queries.function.ValueSource,org.apache.lucene.queries.function.FunctionValues)>(r0, r0, $r4);

        return $r5;
    }

    public java.lang.String description()
    {
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r1;
        org.apache.lucene.queries.function.ValueSource $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8;
        java.lang.String $r2, $r6, $r9;

        r1 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: java.lang.String name()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r1.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.queries.function.ValueSource: java.lang.String description()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.function.ValueSource $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.queries.function.ValueSource: int hashCode()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: java.lang.String name()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0, r4;
        org.apache.lucene.queries.function.ValueSource $r5, $r6;
        java.lang.Class $r1, $r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r3 goto label1;

        return 0;

     label1:
        r4 = (org.apache.lucene.queries.function.valuesource.SimpleBoolFunction) r2;

        $r6 = r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        $r5 = r4.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        $z0 = virtualinvoke $r6.<org.apache.lucene.queries.function.ValueSource: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public void createWeight(java.util.Map, org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSource $r3;
        java.util.Map r1;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0;
        org.apache.lucene.search.IndexSearcher r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.lucene.search.IndexSearcher;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.ValueSource source>;

        virtualinvoke $r3.<org.apache.lucene.queries.function.ValueSource: void createWeight(java.util.Map,org.apache.lucene.search.IndexSearcher)>(r1, r2);

        return;
    }

    public volatile org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        java.util.Map r1;
        org.apache.lucene.queries.function.docvalues.BoolDocValues $r3;
        org.apache.lucene.queries.function.valuesource.SimpleBoolFunction r0;
        org.apache.lucene.index.AtomicReaderContext r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SimpleBoolFunction;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r3 = virtualinvoke r0.<org.apache.lucene.queries.function.valuesource.SimpleBoolFunction: org.apache.lucene.queries.function.docvalues.BoolDocValues getValues(java.util.Map,org.apache.lucene.index.AtomicReaderContext)>(r1, r2);

        return $r3;
    }
}
