public final class org.apache.lucene.store.RateLimitedDirectoryWrapper extends org.apache.lucene.store.Directory
{
    private final org.apache.lucene.store.Directory delegate;
    private volatile org.apache.lucene.store.RateLimiter[] contextRateLimiters;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory)
    {
        org.apache.lucene.store.Directory r3;
        int $i0;
        org.apache.lucene.store.IOContext$Context[] $r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.RateLimiter[] $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r3 := @parameter0: org.apache.lucene.store.Directory;

        specialinvoke r0.<org.apache.lucene.store.Directory: void <init>()>();

        $r1 = staticinvoke <org.apache.lucene.store.IOContext$Context: org.apache.lucene.store.IOContext$Context[] values()>();

        $i0 = lengthof $r1;

        $r2 = newarray (org.apache.lucene.store.RateLimiter)[$i0];

        r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters> = $r2;

        r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate> = r3;

        return;
    }

    public org.apache.lucene.store.Directory getDelegate()
    {
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        $r1 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        return $r1;
    }

    public java.lang.String[] listAll() throws java.io.IOException
    {
        java.lang.String[] $r2;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

        return $r2;
    }

    public boolean fileExists(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.store.Directory $r2;
        java.lang.String r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.store.Directory: boolean fileExists(java.lang.String)>(r1);

        return $z0;
    }

    public void deleteFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r2.<org.apache.lucene.store.Directory: void deleteFile(java.lang.String)>(r1);

        return;
    }

    public long fileLength(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.store.Directory $r2;
        long $l0;
        java.lang.String r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $l0 = virtualinvoke $r2.<org.apache.lucene.store.Directory: long fileLength(java.lang.String)>(r1);

        return $l0;
    }

    public org.apache.lucene.store.IndexOutput createOutput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.IOContext$Context $r5;
        org.apache.lucene.store.Directory $r3;
        java.lang.String r1;
        org.apache.lucene.store.IOContext r2;
        org.apache.lucene.store.IndexOutput $r4;
        org.apache.lucene.store.RateLimiter $r6;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.RateLimitedIndexOutput $r7;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r3 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>(r1, r2);

        $r5 = r2.<org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext$Context context>;

        $r6 = specialinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter getRateLimiter(org.apache.lucene.store.IOContext$Context)>($r5);

        if $r6 == null goto label1;

        $r7 = new org.apache.lucene.store.RateLimitedIndexOutput;

        specialinvoke $r7.<org.apache.lucene.store.RateLimitedIndexOutput: void <init>(org.apache.lucene.store.RateLimiter,org.apache.lucene.store.IndexOutput)>($r6, $r4);

        return $r7;

     label1:
        return $r4;
    }

    public void sync(java.util.Collection) throws java.io.IOException
    {
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        java.util.Collection r1;
        org.apache.lucene.store.Directory $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r2.<org.apache.lucene.store.Directory: void sync(java.util.Collection)>(r1);

        return;
    }

    public org.apache.lucene.store.IndexInput openInput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r4;
        org.apache.lucene.store.Directory $r3;
        java.lang.String r1;
        org.apache.lucene.store.IOContext r2;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r3 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>(r1, r2);

        return $r4;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: boolean isOpen> = 0;

        $r1 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r1.<org.apache.lucene.store.Directory: void close()>();

        return;
    }

    public org.apache.lucene.store.Directory$IndexInputSlicer createSlicer(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.Directory $r3;
        java.lang.String r1;
        org.apache.lucene.store.IOContext r2;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory$IndexInputSlicer $r4;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r3 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.Directory: org.apache.lucene.store.Directory$IndexInputSlicer createSlicer(java.lang.String,org.apache.lucene.store.IOContext)>(r1, r2);

        return $r4;
    }

    public org.apache.lucene.store.Lock makeLock(java.lang.String)
    {
        org.apache.lucene.store.Lock $r3;
        org.apache.lucene.store.Directory $r2;
        java.lang.String r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.store.Directory: org.apache.lucene.store.Lock makeLock(java.lang.String)>(r1);

        return $r3;
    }

    public void clearLock(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r2.<org.apache.lucene.store.Directory: void clearLock(java.lang.String)>(r1);

        return;
    }

    public void setLockFactory(org.apache.lucene.store.LockFactory) throws java.io.IOException
    {
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.LockFactory r1;
        org.apache.lucene.store.Directory $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: org.apache.lucene.store.LockFactory;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r2.<org.apache.lucene.store.Directory: void setLockFactory(org.apache.lucene.store.LockFactory)>(r1);

        return;
    }

    public org.apache.lucene.store.LockFactory getLockFactory()
    {
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r1;
        org.apache.lucene.store.LockFactory $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.LockFactory getLockFactory()>();

        return $r2;
    }

    public java.lang.String getLockID()
    {
        java.lang.String $r2;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.store.Directory: java.lang.String getLockID()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.store.Directory $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r2;

        r2 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RateLimitedDirectoryWrapper(");

        $r3 = r2.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.Directory: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void copy(org.apache.lucene.store.Directory, java.lang.String, java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.Directory r1, $r5;
        java.lang.String r2, r3;
        org.apache.lucene.store.IOContext r4;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        $r5 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.Directory delegate>;

        virtualinvoke $r5.<org.apache.lucene.store.Directory: void copy(org.apache.lucene.store.Directory,java.lang.String,java.lang.String,org.apache.lucene.store.IOContext)>(r1, r2, r3, r4);

        return;
    }

    private org.apache.lucene.store.RateLimiter getRateLimiter(org.apache.lucene.store.IOContext$Context)
    {
        org.apache.lucene.store.IOContext$Context r1;
        int $i0;
        java.lang.AssertionError $r4;
        org.apache.lucene.store.RateLimiter $r3;
        boolean $z0;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.RateLimiter[] $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: org.apache.lucene.store.IOContext$Context;

        $z0 = <org.apache.lucene.store.RateLimitedDirectoryWrapper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        $i0 = virtualinvoke r1.<org.apache.lucene.store.IOContext$Context: int ordinal()>();

        $r3 = $r2[$i0];

        return $r3;
    }

    public void setMaxWriteMBPerSec(java.lang.Double, org.apache.lucene.store.IOContext$Context)
    {
        java.lang.Double r4;
        java.lang.IllegalArgumentException $r9;
        org.apache.lucene.store.RateLimiter[] $r2, $r6, $r7, $r8;
        org.apache.lucene.store.RateLimiter$SimpleRateLimiter $r5;
        org.apache.lucene.store.IOContext$Context r1;
        int $i0;
        org.apache.lucene.store.RateLimiter r3;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        double $d0, $d1;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r4 := @parameter0: java.lang.Double;

        r1 := @parameter1: org.apache.lucene.store.IOContext$Context;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null");

        throw $r9;

     label1:
        $i0 = virtualinvoke r1.<org.apache.lucene.store.IOContext$Context: int ordinal()>();

        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        r3 = $r2[$i0];

        if r4 != null goto label2;

        if r3 == null goto label4;

        virtualinvoke r3.<org.apache.lucene.store.RateLimiter: void setMbPerSec(double)>(1.7976931348623157E308);

        $r8 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        $r8[$i0] = null;

        goto label4;

     label2:
        if r3 == null goto label3;

        $d1 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        virtualinvoke r3.<org.apache.lucene.store.RateLimiter: void setMbPerSec(double)>($d1);

        $r7 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        $r7[$i0] = r3;

        goto label4;

     label3:
        $r6 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        $r5 = new org.apache.lucene.store.RateLimiter$SimpleRateLimiter;

        $d0 = virtualinvoke r4.<java.lang.Double: double doubleValue()>();

        specialinvoke $r5.<org.apache.lucene.store.RateLimiter$SimpleRateLimiter: void <init>(double)>($d0);

        $r6[$i0] = $r5;

     label4:
        return;
    }

    public void setRateLimiter(org.apache.lucene.store.RateLimiter, org.apache.lucene.store.IOContext$Context)
    {
        org.apache.lucene.store.IOContext$Context r1;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        org.apache.lucene.store.RateLimiter r3;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        org.apache.lucene.store.RateLimiter[] $r2;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r3 := @parameter0: org.apache.lucene.store.RateLimiter;

        r1 := @parameter1: org.apache.lucene.store.IOContext$Context;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter[] contextRateLimiters>;

        $i0 = virtualinvoke r1.<org.apache.lucene.store.IOContext$Context: int ordinal()>();

        $r2[$i0] = r3;

        return;
    }

    public java.lang.Double getMaxWriteMBPerSec(org.apache.lucene.store.IOContext$Context)
    {
        org.apache.lucene.store.IOContext$Context r1;
        java.lang.Double $r4;
        java.lang.IllegalArgumentException $r3;
        org.apache.lucene.store.RateLimiter $r2;
        org.apache.lucene.store.RateLimitedDirectoryWrapper r0;
        double $d0;

        r0 := @this: org.apache.lucene.store.RateLimitedDirectoryWrapper;

        r1 := @parameter0: org.apache.lucene.store.IOContext$Context;

        virtualinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: void ensureOpen()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null");

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.store.RateLimitedDirectoryWrapper: org.apache.lucene.store.RateLimiter getRateLimiter(org.apache.lucene.store.IOContext$Context)>(r1);

        if $r2 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $d0 = virtualinvoke $r2.<org.apache.lucene.store.RateLimiter: double getMbPerSec()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label3:
        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/RateLimitedDirectoryWrapper;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.RateLimitedDirectoryWrapper: boolean $assertionsDisabled> = $z1;

        return;
    }
}
