public abstract class com.google.common.util.concurrent.AbstractFuture extends java.lang.Object implements java.util.concurrent.Future
{
    private final com.google.common.util.concurrent.AbstractFuture$Sync sync;

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r1;
        com.google.common.util.concurrent.AbstractFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.common.util.concurrent.AbstractFuture$Sync;

        specialinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Sync: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync> = $r1;

        return;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.TimeUnit r1;
        com.google.common.util.concurrent.AbstractFuture$Sync $r2;
        long l0, $l1;
        java.lang.Object $r3;
        com.google.common.util.concurrent.AbstractFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r3 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractFuture$Sync: java.lang.Object get(long)>($l1);

        return $r3;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r1;
        java.lang.Object $r2;
        com.google.common.util.concurrent.AbstractFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Sync: java.lang.Object get()>();

        return $r2;
    }

    public boolean isDone()
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r1;
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Sync: boolean isDone()>();

        return $z0;
    }

    public boolean isCancelled()
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r1;
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Sync: boolean isCancelled()>();

        return $z0;
    }

    public boolean cancel(boolean)
    {
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        z0 := @parameter0: boolean;

        return 0;
    }

    protected boolean set(java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r2;
        java.lang.Object r1;
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractFuture$Sync: boolean set(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void done()>();

     label1:
        return $z0;
    }

    protected boolean setException(java.lang.Throwable)
    {
        java.lang.Throwable r1, $r4;
        com.google.common.util.concurrent.AbstractFuture$Sync $r2;
        java.lang.Error $r5;
        java.lang.Object $r3;
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.lang.Throwable) $r3;

        $z0 = virtualinvoke $r2.<com.google.common.util.concurrent.AbstractFuture$Sync: boolean setException(java.lang.Throwable)>($r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void done()>();

     label1:
        $z1 = r1 instanceof java.lang.Error;

        if $z1 == 0 goto label2;

        $r5 = (java.lang.Error) r1;

        throw $r5;

     label2:
        return $z0;
    }

    protected final boolean cancel()
    {
        com.google.common.util.concurrent.AbstractFuture$Sync $r1;
        com.google.common.util.concurrent.AbstractFuture r0;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        $r1 = r0.<com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Sync sync>;

        $z0 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractFuture$Sync: boolean cancel()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void done()>();

     label1:
        return $z0;
    }

    protected void done()
    {
        com.google.common.util.concurrent.AbstractFuture r0;

        r0 := @this: com.google.common.util.concurrent.AbstractFuture;

        return;
    }
}
