public class org.gagravarr.skeleton.SkeletonFishead extends org.gagravarr.ogg.HighLevelOggStreamPacket implements org.gagravarr.skeleton.SkeletonPacket
{
    private int versionMajor;
    private int versionMinor;
    private long presentationTimeNumerator;
    private long presentationTimeDenominator;
    private long baseTimeNumerator;
    private long baseTimeDenominator;
    private long utc1;
    private long utc2;
    private long utc3;
    private long segmentLength;
    private long contentOffset;

    public void <init>()
    {
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        specialinvoke r0.<org.gagravarr.ogg.HighLevelOggStreamPacket: void <init>()>();

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor> = 4;

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMinor> = 0;

        return;
    }

    public void <init>(org.gagravarr.ogg.OggPacket)
    {
        byte[] $r2, $r3;
        org.gagravarr.skeleton.SkeletonFishead r0;
        long $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14;
        org.gagravarr.ogg.OggPacket r1;
        int $i0, $i1, $i2, $i3, $i4, $i12;
        java.lang.String $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        r1 := @parameter0: org.gagravarr.ogg.OggPacket;

        specialinvoke r0.<org.gagravarr.ogg.HighLevelOggStreamPacket: void <init>(org.gagravarr.ogg.OggPacket)>(r1);

        $r2 = virtualinvoke r0.<org.gagravarr.skeleton.SkeletonFishead: byte[] getData()>();

        $r3 = <org.gagravarr.skeleton.SkeletonFishead: byte[] MAGIC_FISHEAD_BYTES>;

        $z0 = staticinvoke <org.gagravarr.ogg.IOUtils: boolean byteRangeMatches(byte[],byte[],int)>($r3, $r2, 0);

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid type, not a Skeleton Fishead Header");

        throw $r10;

     label1:
        $i0 = staticinvoke <org.gagravarr.ogg.IOUtils: int getInt2(byte[],int)>($r2, 8);

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor> = $i0;

        $i1 = staticinvoke <org.gagravarr.ogg.IOUtils: int getInt2(byte[],int)>($r2, 10);

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMinor> = $i1;

        $i2 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        if $i2 < 3 goto label2;

        $i4 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        if $i4 <= 4 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Skeleton version ");

        $i3 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" detected");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        $l5 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 12);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeNumerator> = $l5;

        $l6 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 20);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeDenominator> = $l6;

        $l7 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 28);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeNumerator> = $l7;

        $l8 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 36);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeDenominator> = $l8;

        $l9 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 44);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc1> = $l9;

        $l10 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 52);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc2> = $l10;

        $l11 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 60);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc3> = $l11;

        $i12 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        if $i12 != 4 goto label4;

        $l13 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 64);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long segmentLength> = $l13;

        $l14 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt8(byte[],int)>($r2, 72);

        r0.<org.gagravarr.skeleton.SkeletonFishead: long contentOffset> = $l14;

     label4:
        return;
    }

    public org.gagravarr.ogg.OggPacket write()
    {
        byte[] $r2;
        org.gagravarr.skeleton.SkeletonFishead r0;
        long $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l11, $l12;
        byte b13;
        org.gagravarr.ogg.OggPacket $r1;
        int $i0, $i1, $i2, $i10;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        b13 = 64;

        $i0 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        if $i0 != 4 goto label1;

        b13 = 80;

     label1:
        $r2 = newarray (byte)[b13];

        staticinvoke <org.gagravarr.ogg.IOUtils: int putUTF8(byte[],int,java.lang.String)>($r2, 0, "fishead\u0000");

        $i1 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt2(byte[],int,int)>($r2, 8, $i1);

        $i2 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMinor>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt2(byte[],int,int)>($r2, 10, $i2);

        $l3 = r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeNumerator>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 12, $l3);

        $l4 = r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeDenominator>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 20, $l4);

        $l5 = r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeNumerator>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 28, $l5);

        $l6 = r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeDenominator>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 36, $l6);

        $l7 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc1>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 44, $l7);

        $l8 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc2>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 52, $l8);

        $l9 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc3>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>($r2, 60, $l9);

        $i10 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        if $i10 != 4 goto label2;

        $l11 = r0.<org.gagravarr.skeleton.SkeletonFishead: long segmentLength>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 64, $l11);

        $l12 = r0.<org.gagravarr.skeleton.SkeletonFishead: long contentOffset>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt8(byte[],int,long)>($r2, 72, $l12);

     label2:
        virtualinvoke r0.<org.gagravarr.skeleton.SkeletonFishead: void setData(byte[])>($r2);

        $r1 = specialinvoke r0.<org.gagravarr.ogg.HighLevelOggStreamPacket: org.gagravarr.ogg.OggPacket write()>();

        return $r1;
    }

    public int getVersionMajor()
    {
        int $i0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $i0 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor>;

        return $i0;
    }

    public void setVersionMajor(int)
    {
        int i0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        i0 := @parameter0: int;

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMajor> = i0;

        return;
    }

    public int getVersionMinor()
    {
        int $i0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $i0 = r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMinor>;

        return $i0;
    }

    public void setVersionMinor(int)
    {
        int i0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        i0 := @parameter0: int;

        r0.<org.gagravarr.skeleton.SkeletonFishead: int versionMinor> = i0;

        return;
    }

    public long getPresentationTimeNumerator()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeNumerator>;

        return $l0;
    }

    public void setPresentationTimeNumerator(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeNumerator> = l0;

        return;
    }

    public long getPresentationTimeDenominator()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeDenominator>;

        return $l0;
    }

    public void setPresentationTimeDenominator(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long presentationTimeDenominator> = l0;

        return;
    }

    public long getBaseTimeNumerator()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeNumerator>;

        return $l0;
    }

    public void setBaseTimeNumerator(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeNumerator> = l0;

        return;
    }

    public long getBaseTimeDenominator()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeDenominator>;

        return $l0;
    }

    public void setBaseTimeDenominator(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long baseTimeDenominator> = l0;

        return;
    }

    public long getUtc1()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc1>;

        return $l0;
    }

    public void setUtc1(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc1> = l0;

        return;
    }

    public long getUtc2()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc2>;

        return $l0;
    }

    public void setUtc2(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc2> = l0;

        return;
    }

    public long getUtc3()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long utc3>;

        return $l0;
    }

    public void setUtc3(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long utc3> = l0;

        return;
    }

    public long getSegmentLength()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long segmentLength>;

        return $l0;
    }

    public void setSegmentLength(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long segmentLength> = l0;

        return;
    }

    public long getContentOffset()
    {
        long $l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        $l0 = r0.<org.gagravarr.skeleton.SkeletonFishead: long contentOffset>;

        return $l0;
    }

    public void setContentOffset(long)
    {
        long l0;
        org.gagravarr.skeleton.SkeletonFishead r0;

        r0 := @this: org.gagravarr.skeleton.SkeletonFishead;

        l0 := @parameter0: long;

        r0.<org.gagravarr.skeleton.SkeletonFishead: long contentOffset> = l0;

        return;
    }
}
