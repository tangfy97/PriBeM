public class org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter extends java.lang.Object implements org.apache.cxf.jaxrs.ext.RequestHandler
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String NEGOTIATE_SCHEME;
    private static final java.lang.String PROPERTY_USE_KERBEROS_OID;
    private static final java.lang.String KERBEROS_OID;
    private static final java.lang.String SPNEGO_OID;
    private org.apache.cxf.jaxrs.ext.MessageContext messageContext;
    private javax.security.auth.callback.CallbackHandler callbackHandler;
    private javax.security.auth.login.Configuration loginConfig;
    private java.lang.String loginContextName;
    private java.lang.String servicePrincipalName;
    private java.lang.String realm;

    public void <init>()
    {
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String loginContextName> = "";

        return;
    }

    public javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        javax.security.auth.login.LoginException $r45;
        byte[] $r13;
        boolean $z0, $z1;
        org.ietf.jgss.GSSContext $r15, r50;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosSecurityContext $r20;
        org.ietf.jgss.GSSException $r36;
        java.util.logging.Logger $r7, $r24, $r29, $r38, $r46;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosPrincipal $r21;
        java.util.List $r3;
        javax.ws.rs.core.HttpHeaders $r2;
        javax.ws.rs.core.Response $r9, $r23, $r26, $r35, $r44, $r48;
        javax.ws.rs.NotAuthorizedException $r8, $r22, $r25, $r34, $r43, $r47;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r49;
        java.lang.StringBuilder $r28, $r30, $r32, $r37, $r39, $r41;
        java.lang.String[] $r6;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r10, $r11, $r12, $r18, $r31, $r33, $r40, $r42, r51;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$ValidateServiceTicketAction $r16;
        java.security.PrivilegedActionException $r27;
        org.apache.cxf.message.Message r19;
        javax.security.auth.Subject $r14;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;
        java.lang.Object $r4;
        org.ietf.jgss.GSSName $r17;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r19 := @parameter0: org.apache.cxf.message.Message;

        r49 := @parameter1: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: org.apache.cxf.jaxrs.ext.MessageContext messageContext>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.HttpHeaders getHttpHeaders()>();

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("Authorization");

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == 1 goto label01;

        $r24 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        virtualinvoke $r24.<java.util.logging.Logger: void fine(java.lang.String)>("No Authorization header is available");

        $r25 = new javax.ws.rs.NotAuthorizedException;

        $r26 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r25.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r26);

        throw $r25;

     label01:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r5, " ");

        $i1 = lengthof $r6;

        if $i1 != 2 goto label02;

        $r11 = "Negotiate";

        $r10 = $r6[0];

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z0 != 0 goto label03;

     label02:
        $r7 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        virtualinvoke $r7.<java.util.logging.Logger: void fine(java.lang.String)>("Negotiate Authorization scheme is expected");

        $r8 = new javax.ws.rs.NotAuthorizedException;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r8.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r9);

        throw $r8;

     label03:
        $r12 = $r6[1];

        $r13 = specialinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: byte[] getServiceTicket(java.lang.String)>($r12);

     label04:
        $r14 = virtualinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.security.auth.Subject loginAndGetSubject()>();

        $r15 = virtualinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: org.ietf.jgss.GSSContext createGSSContext()>();

        r50 = $r15;

        $r16 = new org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$ValidateServiceTicketAction;

        specialinvoke $r16.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$ValidateServiceTicketAction: void <init>(org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter,org.ietf.jgss.GSSContext,byte[],org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$1)>(r0, $r15, $r13, null);

        staticinvoke <javax.security.auth.Subject: java.lang.Object doAs(javax.security.auth.Subject,java.security.PrivilegedExceptionAction)>($r14, $r16);

        $r17 = interfaceinvoke $r15.<org.ietf.jgss.GSSContext: org.ietf.jgss.GSSName getSrcName()>();

        if $r17 != null goto label05;

        $r22 = new javax.ws.rs.NotAuthorizedException;

        $r23 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r22.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r23);

        throw $r22;

     label05:
        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        r51 = $r18;

        $i2 = virtualinvoke $r18.<java.lang.String: int lastIndexOf(int)>(64);

        if $i2 <= 0 goto label06;

        r51 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label06:
        $z1 = interfaceinvoke $r15.<org.ietf.jgss.GSSContext: boolean getCredDelegState()>();

        if $z1 != 0 goto label07;

        interfaceinvoke $r15.<org.ietf.jgss.GSSContext: void dispose()>();

        r50 = null;

     label07:
        $r20 = new org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosSecurityContext;

        $r21 = new org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosPrincipal;

        specialinvoke $r21.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosPrincipal: void <init>(java.lang.String,java.lang.String)>(r51, $r18);

        specialinvoke $r20.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosSecurityContext: void <init>(org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter$KerberosPrincipal,org.ietf.jgss.GSSContext)>($r21, r50);

        interfaceinvoke r19.<org.apache.cxf.message.Message: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/security/SecurityContext;", $r20);

     label08:
        goto label12;

     label09:
        $r45 := @caughtexception;

        $r46 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        virtualinvoke $r46.<java.util.logging.Logger: void fine(java.lang.String)>("Unsuccessful JAAS login for the service principal");

        $r47 = new javax.ws.rs.NotAuthorizedException;

        $r48 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r47.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r48);

        throw $r47;

     label10:
        $r36 := @caughtexception;

        $r38 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSS API exception: ");

        $r40 = virtualinvoke $r36.<org.ietf.jgss.GSSException: java.lang.String getMessage()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.util.logging.Logger: void fine(java.lang.String)>($r42);

        $r43 = new javax.ws.rs.NotAuthorizedException;

        $r44 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r43.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r44);

        throw $r43;

     label11:
        $r27 := @caughtexception;

        $r29 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrivilegedActionException: ");

        $r31 = virtualinvoke $r27.<java.security.PrivilegedActionException: java.lang.String getMessage()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.util.logging.Logger: void fine(java.lang.String)>($r33);

        $r34 = new javax.ws.rs.NotAuthorizedException;

        $r35 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r34.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r35);

        throw $r34;

     label12:
        return null;

        catch javax.security.auth.login.LoginException from label04 to label08 with label09;
        catch org.ietf.jgss.GSSException from label04 to label08 with label10;
        catch java.security.PrivilegedActionException from label04 to label08 with label11;
    }

    protected org.ietf.jgss.GSSContext createGSSContext() throws org.ietf.jgss.GSSException
    {
        org.ietf.jgss.Oid $r3;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;
        org.ietf.jgss.GSSManager $r4;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.lang.Object $r2;
        org.ietf.jgss.GSSName $r6, $r7;
        java.lang.String $r5, $r9;
        boolean $z0;
        org.ietf.jgss.GSSContext $r8;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: org.apache.cxf.jaxrs.ext.MessageContext messageContext>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContextualProperty(java.lang.Object)>("auth.spnego.useKerberosOid");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r2);

        $r3 = new org.ietf.jgss.Oid;

        if $z0 == 0 goto label1;

        $r9 = "1.2.840.113554.1.2.2";

        goto label2;

     label1:
        $r9 = "1.3.6.1.5.5.2";

     label2:
        specialinvoke $r3.<org.ietf.jgss.Oid: void <init>(java.lang.String)>($r9);

        $r4 = staticinvoke <org.ietf.jgss.GSSManager: org.ietf.jgss.GSSManager getInstance()>();

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String getCompleteServicePrincipalName()>();

        $r6 = virtualinvoke $r4.<org.ietf.jgss.GSSManager: org.ietf.jgss.GSSName createName(java.lang.String,org.ietf.jgss.Oid)>($r5, null);

        $r7 = interfaceinvoke $r6.<org.ietf.jgss.GSSName: org.ietf.jgss.GSSName canonicalize(org.ietf.jgss.Oid)>($r3);

        $r8 = virtualinvoke $r4.<org.ietf.jgss.GSSManager: org.ietf.jgss.GSSContext createContext(org.ietf.jgss.GSSName,org.ietf.jgss.Oid,org.ietf.jgss.GSSCredential,int)>($r7, $r3, null, 0);

        return $r8;
    }

    protected javax.security.auth.Subject loginAndGetSubject() throws javax.security.auth.login.LoginException
    {
        javax.security.auth.login.LoginException $r9;
        java.util.logging.Logger $r8;
        javax.security.auth.login.LoginContext $r2;
        javax.security.auth.Subject $r6;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;
        javax.security.auth.callback.CallbackHandler $r4;
        java.lang.String $r1, $r5;
        javax.security.auth.login.Configuration $r3, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String loginContextName>;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.security.auth.login.Configuration loginConfig>;

        if $r7 == null goto label2;

     label1:
        $r2 = new javax.security.auth.login.LoginContext;

        $r5 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String loginContextName>;

        $r4 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.security.auth.callback.CallbackHandler callbackHandler>;

        $r3 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.security.auth.login.Configuration loginConfig>;

        specialinvoke $r2.<javax.security.auth.login.LoginContext: void <init>(java.lang.String,javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,javax.security.auth.login.Configuration)>($r5, null, $r4, $r3);

        goto label3;

     label2:
        $r8 = <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void fine(java.lang.String)>("LoginContext can not be initialized");

        $r9 = new javax.security.auth.login.LoginException;

        specialinvoke $r9.<javax.security.auth.login.LoginException: void <init>()>();

        throw $r9;

     label3:
        virtualinvoke $r2.<javax.security.auth.login.LoginContext: void login()>();

        $r6 = virtualinvoke $r2.<javax.security.auth.login.LoginContext: javax.security.auth.Subject getSubject()>();

        return $r6;
    }

    private byte[] getServiceTicket(java.lang.String)
    {
        byte[] $r1;
        javax.ws.rs.core.Response $r4;
        org.apache.cxf.common.util.Base64Exception $r2;
        javax.ws.rs.NotAuthorizedException $r3;
        java.lang.String r0;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r5;

        r5 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.cxf.common.util.Base64Utility: byte[] decode(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new javax.ws.rs.NotAuthorizedException;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.ws.rs.core.Response getFaultResponse()>();

        specialinvoke $r3.<javax.ws.rs.NotAuthorizedException: void <init>(javax.ws.rs.core.Response)>($r4);

        throw $r3;

        catch org.apache.cxf.common.util.Base64Exception from label1 to label2 with label3;
    }

    private static javax.ws.rs.core.Response getFaultResponse()
    {
        javax.ws.rs.core.Response $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r1;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>(401);

        $r1 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>("WWW-Authenticate", "Negotiate");

        $r2 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r2;
    }

    protected java.lang.String getCompleteServicePrincipalName()
    {
        org.apache.cxf.jaxrs.ext.MessageContext $r10;
        java.lang.String $r1, $r2, $r6, $r13, $r15, r16;
        java.net.URI $r12;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r14;
        javax.ws.rs.core.UriInfo $r11;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        $r1 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String servicePrincipalName>;

        if $r1 != null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/");

        $r10 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: org.apache.cxf.jaxrs.ext.MessageContext messageContext>;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.UriInfo getUriInfo()>();

        $r12 = interfaceinvoke $r11.<javax.ws.rs.core.UriInfo: java.net.URI getBaseUri()>();

        $r13 = virtualinvoke $r12.<java.net.URI: java.lang.String getHost()>();

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r15 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String servicePrincipalName>;

     label2:
        r16 = $r15;

        $r2 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String realm>;

        if $r2 == null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r6 = r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String realm>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r16;
    }

    public void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.MessageContext r1;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: org.apache.cxf.jaxrs.ext.MessageContext messageContext> = r1;

        return;
    }

    public void setLoginContextName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String loginContextName> = r1;

        return;
    }

    public void setServicePrincipalName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String servicePrincipalName> = r1;

        return;
    }

    public void setRealm(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String realm> = r1;

        return;
    }

    public void setCallbackHandler(javax.security.auth.callback.CallbackHandler)
    {
        javax.security.auth.callback.CallbackHandler r1;
        org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter r0;

        r0 := @this: org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter;

        r1 := @parameter0: javax.security.auth.callback.CallbackHandler;

        r0.<org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: javax.security.auth.callback.CallbackHandler callbackHandler> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String SPNEGO_OID> = "1.3.6.1.5.5.2";

        <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String KERBEROS_OID> = "1.2.840.113554.1.2.2";

        <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String PROPERTY_USE_KERBEROS_OID> = "auth.spnego.useKerberosOid";

        <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.lang.String NEGOTIATE_SCHEME> = "Negotiate";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/security/KerberosAuthenticationFilter;");

        <org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
