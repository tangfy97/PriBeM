abstract class org.apache.lucene.store.ByteBufferIndexInput extends org.apache.lucene.store.IndexInput
{
    private java.nio.ByteBuffer[] buffers;
    private final long chunkSizeMask;
    private final int chunkSizePower;
    private int offset;
    private long length;
    private java.lang.String sliceDescription;
    private int curBufIndex;
    private java.nio.ByteBuffer curBuf;
    private boolean isClone;
    private final org.apache.lucene.util.WeakIdentityMap clones;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String, java.nio.ByteBuffer[], long, int, boolean) throws java.io.IOException
    {
        long l0, $l2, $l3, $l4;
        java.lang.AssertionError $r6, $r7;
        org.apache.lucene.util.WeakIdentityMap $r5;
        byte $b5;
        int i1, $i6;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.nio.ByteBuffer[] r2;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.nio.ByteBuffer[];

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.apache.lucene.store.IndexInput: void <init>(java.lang.String)>(r1);

        r0.<org.apache.lucene.store.ByteBufferIndexInput: boolean isClone> = 0;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers> = r2;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: long length> = l0;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: int chunkSizePower> = i1;

        $l2 = 1L << i1;

        $l3 = $l2 - 1L;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: long chunkSizeMask> = $l3;

        if z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.lucene.util.WeakIdentityMap: org.apache.lucene.util.WeakIdentityMap newConcurrentHashMap()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones> = $r5;

        $z1 = <org.apache.lucene.store.ByteBufferIndexInput: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if i1 < 0 goto label3;

        if i1 <= 30 goto label4;

     label3:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label4:
        $z2 = <org.apache.lucene.store.ByteBufferIndexInput: boolean $assertionsDisabled>;

        if $z2 != 0 goto label5;

        $l4 = l0 >>> i1;

        $b5 = $l4 cmp 2147483647L;

        $i6 = (int) $b5;

        if $i6 < 0 goto label5;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label5:
        virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void seek(long)>(0L);

        return;
    }

    public final byte readByte() throws java.io.IOException
    {
        org.apache.lucene.store.AlreadyClosedException $r3;
        java.nio.ByteBuffer $r1, $r11, $r12, $r13, $r14;
        java.lang.NullPointerException $r2;
        byte $b0, $b6;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r7, $r19;
        boolean $z0;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.nio.ByteBuffer[] $r9, $r10;
        java.io.EOFException $r15;
        java.nio.BufferUnderflowException $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r16, $r17, $r18;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label1:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $b0 = virtualinvoke $r1.<java.nio.ByteBuffer: byte get()>();

     label2:
        return $b0;

     label3:
        $r8 := @caughtexception;

     label4:
        $i1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $i2 = $i1 + 1;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex> = $i2;

        $i4 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $r9 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        $i3 = lengthof $r9;

        if $i4 < $i3 goto label5;

        $r15 = new java.io.EOFException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read past EOF: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.EOFException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label5:
        $r10 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        $i5 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $r11 = $r10[$i5];

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf> = $r11;

        $r12 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r13 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $z0 = virtualinvoke $r13.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label4;

        $r14 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $b6 = virtualinvoke $r14.<java.nio.ByteBuffer: byte get()>();

        return $b6;

     label6:
        $r2 := @caughtexception;

        $r3 = new org.apache.lucene.store.AlreadyClosedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label6;
    }

    public final void readBytes(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.lucene.store.AlreadyClosedException $r4;
        java.nio.ByteBuffer $r2, $r10, $r11, $r12, $r15, $r16, $r17;
        java.lang.NullPointerException $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String $r8, $r22;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.nio.ByteBuffer[] $r13, $r14;
        java.io.EOFException $r18;
        java.nio.BufferUnderflowException $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r19, $r20, $r21;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

     label1:
        $r2 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i5, i6);

     label2:
        goto label8;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        i7 = virtualinvoke $r10.<java.nio.ByteBuffer: int remaining()>();

     label4:
        if i6 <= i7 goto label6;

        $r12 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i5, i7);

        i6 = i6 - i7;

        i5 = i5 + i7;

        $i0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex> = $i1;

        $i3 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $r13 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        $i2 = lengthof $r13;

        if $i3 < $i2 goto label5;

        $r18 = new java.io.EOFException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read past EOF: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.EOFException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label5:
        $r14 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        $i4 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $r15 = $r14[$i4];

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf> = $r15;

        $r16 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        virtualinvoke $r16.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r17 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        i7 = virtualinvoke $r17.<java.nio.ByteBuffer: int remaining()>();

        goto label4;

     label6:
        $r11 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i5, i6);

        goto label8;

     label7:
        $r3 := @caughtexception;

        $r4 = new org.apache.lucene.store.AlreadyClosedException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label8:
        return;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label7;
    }

    public final short readShort() throws java.io.IOException
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;
        org.apache.lucene.store.AlreadyClosedException $r3;
        java.nio.ByteBuffer $r1;
        java.lang.NullPointerException $r2;
        java.nio.BufferUnderflowException $r8;
        short $s0, $s1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label1:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

     label2:
        return $s0;

     label3:
        $r8 := @caughtexception;

        $s1 = specialinvoke r0.<org.apache.lucene.store.IndexInput: short readShort()>();

        return $s1;

     label4:
        $r2 := @caughtexception;

        $r3 = new org.apache.lucene.store.AlreadyClosedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public final int readInt() throws java.io.IOException
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;
        org.apache.lucene.store.AlreadyClosedException $r3;
        java.nio.ByteBuffer $r1;
        java.lang.NullPointerException $r2;
        java.nio.BufferUnderflowException $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label1:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

     label2:
        return $i0;

     label3:
        $r8 := @caughtexception;

        $i1 = specialinvoke r0.<org.apache.lucene.store.IndexInput: int readInt()>();

        return $i1;

     label4:
        $r2 := @caughtexception;

        $r3 = new org.apache.lucene.store.AlreadyClosedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public final long readLong() throws java.io.IOException
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;
        org.apache.lucene.store.AlreadyClosedException $r3;
        long $l0, $l1;
        java.nio.ByteBuffer $r1;
        java.lang.NullPointerException $r2;
        java.nio.BufferUnderflowException $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label1:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $l0 = virtualinvoke $r1.<java.nio.ByteBuffer: long getLong()>();

     label2:
        return $l0;

     label3:
        $r8 := @caughtexception;

        $l1 = specialinvoke r0.<org.apache.lucene.store.IndexInput: long readLong()>();

        return $l1;

     label4:
        $r2 := @caughtexception;

        $r3 = new org.apache.lucene.store.AlreadyClosedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch java.nio.BufferUnderflowException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public final long getFilePointer()
    {
        org.apache.lucene.store.AlreadyClosedException $r3;
        long $l2, $l3, $l5, $l7, $l8, $l9;
        java.nio.ByteBuffer $r1;
        java.lang.NullPointerException $r2;
        int $i0, $i1, $i4, $i6;
        java.lang.String $r7;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label1:
        $i0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex>;

        $l2 = (long) $i0;

        $i1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int chunkSizePower>;

        $l3 = $l2 << $i1;

        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf>;

        $i4 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $l5 = (long) $i4;

        $l8 = $l3 + $l5;

        $i6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int offset>;

        $l7 = (long) $i6;

        $l9 = $l8 - $l7;

     label2:
        return $l9;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.lucene.store.AlreadyClosedException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r7);

        throw $r3;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public final void seek(long) throws java.io.IOException
    {
        org.apache.lucene.store.AlreadyClosedException $r33;
        java.lang.NullPointerException $r7;
        java.nio.ByteBuffer r25;
        byte $b0;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.nio.ByteBuffer[] $r1;
        java.io.EOFException $r29, $r31;
        java.lang.StringBuilder $r4, $r5, $r10, $r11, $r16, $r17, $r22, $r23, $r26, $r28, $r30, $r32;
        long $l2, $l4, $l6, $l7, l9, l10;
        int $i1, $i3, i5, $i8, $i11;
        java.lang.String $r6, $r12, $r18, $r24;
        java.lang.ArrayIndexOutOfBoundsException $r19;
        java.lang.IllegalArgumentException $r13, $r27;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        l9 := @parameter0: long;

        $b0 = l9 cmp 0L;

        $i11 = (int) $b0;

        if $i11 >= 0 goto label1;

        $r27 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Seeking to negative position: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r27;

     label1:
        $i1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int offset>;

        $l2 = (long) $i1;

        l10 = l9 + $l2;

        $i3 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int chunkSizePower>;

        $l4 = l10 >> $i3;

        i5 = (int) $l4;

     label2:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        r25 = $r1[i5];

        $l6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long chunkSizeMask>;

        $l7 = l10 & $l6;

        $i8 = (int) $l7;

        virtualinvoke r25.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i8);

        r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex> = i5;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf> = r25;

     label3:
        goto label7;

     label4:
        $r19 := @caughtexception;

        $r29 = new java.io.EOFException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek past EOF: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.EOFException: void <init>(java.lang.String)>($r24);

        throw $r29;

     label5:
        $r13 := @caughtexception;

        $r31 = new java.io.EOFException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seek past EOF: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.EOFException: void <init>(java.lang.String)>($r18);

        throw $r31;

     label6:
        $r7 := @caughtexception;

        $r33 = new org.apache.lucene.store.AlreadyClosedException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r12);

        throw $r33;

     label7:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.NullPointerException from label2 to label3 with label6;
    }

    public final long length()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;
        long $l0;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $l0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long length>;

        return $l0;
    }

    public final org.apache.lucene.store.ByteBufferIndexInput clone()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0, $r1;
        long $l0, $l1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $l0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long length>;

        $r1 = specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.store.ByteBufferIndexInput buildSlice(long,long)>(0L, $l0);

     label1:
        $l1 = virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: long getFilePointer()>();

        virtualinvoke $r1.<org.apache.lucene.store.ByteBufferIndexInput: void seek(long)>($l1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should never happen: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r2);

        throw $r3;

     label4:
        return $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final org.apache.lucene.store.ByteBufferIndexInput slice(java.lang.String, long, long)
    {
        java.lang.IllegalStateException $r3;
        long l0, l1;
        java.lang.String r2, $r9, $r15;
        boolean $z0;
        org.apache.lucene.store.ByteBufferIndexInput r0, $r1;
        java.io.IOException $r10;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        r2 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $z0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: boolean isClone>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot slice() ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from a cloned IndexInput: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        $r1 = specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.store.ByteBufferIndexInput buildSlice(long,long)>(l0, l1);

        $r1.<org.apache.lucene.store.ByteBufferIndexInput: java.lang.String sliceDescription> = r2;

     label2:
        virtualinvoke $r1.<org.apache.lucene.store.ByteBufferIndexInput: void seek(long)>(0L);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Should never happen: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r10);

        throw $r11;

     label5:
        return $r1;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private org.apache.lucene.store.ByteBufferIndexInput buildSlice(long, long)
    {
        org.apache.lucene.store.AlreadyClosedException $r32;
        byte $b0, $b2, $b5;
        boolean $z0;
        org.apache.lucene.store.ByteBufferIndexInput r0, r3;
        java.nio.ByteBuffer[] $r1, $r4, $r5;
        java.lang.StringBuilder $r14, $r15, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r33;
        long l1, $l3, $l4, $l7, $l8, $l9, l11, $l12, l13;
        java.lang.AssertionError $r35;
        org.apache.lucene.util.WeakIdentityMap $r6, $r8, $r9, $r10;
        int $i6, $i10, $i14, $i15, $i16;
        java.lang.Boolean $r7;
        java.lang.String $r16, $r20, $r30;
        org.apache.lucene.store.IndexInput $r2;
        java.lang.IllegalArgumentException $r34;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        l11 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        if $r1 != null goto label1;

        $r32 = new org.apache.lucene.store.AlreadyClosedException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already closed: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<org.apache.lucene.store.AlreadyClosedException: void <init>(java.lang.String)>($r16);

        throw $r32;

     label1:
        $b0 = l11 cmp 0L;

        $i14 = (int) $b0;

        if $i14 < 0 goto label2;

        $b2 = l1 cmp 0L;

        $i15 = (int) $b2;

        if $i15 < 0 goto label2;

        $l4 = l11 + l1;

        $l3 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long length>;

        $b5 = $l4 cmp $l3;

        $i16 = (int) $b5;

        if $i16 <= 0 goto label3;

     label2:
        $r34 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("slice() ");

        $r20 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.lang.String sliceDescription>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of bounds: offset=");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",length=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",fileLength=");

        $l12 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long length>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r34;

     label3:
        $i6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int offset>;

        $l7 = (long) $i6;

        l13 = l11 + $l7;

        $r2 = specialinvoke r0.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r3 = (org.apache.lucene.store.ByteBufferIndexInput) $r2;

        r3.<org.apache.lucene.store.ByteBufferIndexInput: boolean isClone> = 1;

        $z0 = <org.apache.lucene.store.ByteBufferIndexInput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r10 = r3.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        $r9 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        if $r10 == $r9 goto label4;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label4:
        $r4 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        $r5 = specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buildSlice(java.nio.ByteBuffer[],long,long)>($r4, l13, l1);

        r3.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers> = $r5;

        $l8 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long chunkSizeMask>;

        $l9 = l13 & $l8;

        $i10 = (int) $l9;

        r3.<org.apache.lucene.store.ByteBufferIndexInput: int offset> = $i10;

        r3.<org.apache.lucene.store.ByteBufferIndexInput: long length> = l1;

        $r6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        if $r6 == null goto label5;

        $r8 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r8.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

     label5:
        return r3;
    }

    private java.nio.ByteBuffer[] buildSlice(java.nio.ByteBuffer[], long, long)
    {
        long l0, l1, l2, $l4, $l7, $l14, $l15;
        java.nio.ByteBuffer $r2, $r4, $r5;
        int $i3, i5, $i6, i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, i18;
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.nio.ByteBuffer[] r1, r3;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        r3 := @parameter0: java.nio.ByteBuffer[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 = l0 + l1;

        $i3 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int chunkSizePower>;

        $l4 = l0 >>> $i3;

        i5 = (int) $l4;

        $i6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: int chunkSizePower>;

        $l7 = l2 >>> $i6;

        i8 = (int) $l7;

        $i9 = i8 - i5;

        $i10 = $i9 + 1;

        r1 = newarray (java.nio.ByteBuffer)[$i10];

        i18 = 0;

     label1:
        $i11 = lengthof r1;

        if i18 >= $i11 goto label2;

        $i17 = i5 + i18;

        $r4 = r3[$i17];

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        r1[i18] = $r5;

        i18 = i18 + 1;

        goto label1;

     label2:
        $i12 = lengthof r1;

        $i13 = $i12 - 1;

        $r2 = r1[$i13];

        $l14 = r0.<org.apache.lucene.store.ByteBufferIndexInput: long chunkSizeMask>;

        $l15 = l2 & $l14;

        $i16 = (int) $l15;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i16);

        return r1;
    }

    private void unsetBuffers()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers> = null;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer curBuf> = null;

        r0.<org.apache.lucene.store.ByteBufferIndexInput: int curBufIndex> = 0;

        return;
    }

    public final void close() throws java.io.IOException
    {
        java.lang.Throwable $r12;
        java.lang.AssertionError $r10;
        org.apache.lucene.util.WeakIdentityMap $r3, $r4, $r6, $r8, $r11;
        java.nio.ByteBuffer r5;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.store.ByteBufferIndexInput r0, r13;
        java.nio.ByteBuffer[] $r1, r2;
        java.util.Iterator $r7;
        java.lang.Object $r9;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

     label01:
        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        if $r1 != null goto label03;

     label02:
        specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        return;

     label03:
        r2 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.nio.ByteBuffer[] buffers>;

        specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        $r3 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        if $r3 == null goto label04;

        $r11 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        virtualinvoke $r11.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object remove(java.lang.Object)>(r0);

     label04:
        $z0 = r0.<org.apache.lucene.store.ByteBufferIndexInput: boolean isClone>;

        if $z0 == 0 goto label06;

     label05:
        specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        return;

     label06:
        $r4 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        if $r4 == null goto label10;

        $r6 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.util.WeakIdentityMap: java.util.Iterator keyIterator()>();

     label07:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.lucene.store.ByteBufferIndexInput) $r9;

        $z2 = <org.apache.lucene.store.ByteBufferIndexInput: boolean $assertionsDisabled>;

        if $z2 != 0 goto label08;

        $z3 = r13.<org.apache.lucene.store.ByteBufferIndexInput: boolean isClone>;

        if $z3 != 0 goto label08;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label08:
        specialinvoke r13.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        goto label07;

     label09:
        $r8 = r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.util.WeakIdentityMap clones>;

        virtualinvoke $r8.<org.apache.lucene.util.WeakIdentityMap: void clear()>();

     label10:
        $i0 = lengthof r2;

        i1 = 0;

     label11:
        if i1 >= $i0 goto label12;

        r5 = r2[i1];

        virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void freeBuffer(java.nio.ByteBuffer)>(r5);

        i1 = i1 + 1;

        goto label11;

     label12:
        specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        goto label15;

     label13:
        $r12 := @caughtexception;

     label14:
        specialinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: void unsetBuffers()>();

        throw $r12;

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label05 with label13;
        catch java.lang.Throwable from label06 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected abstract void freeBuffer(java.nio.ByteBuffer) throws java.io.IOException;

    public final java.lang.String toString()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r1, $r2, $r4, $r7, $r10;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $r1 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.lang.String sliceDescription>;

        if $r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = specialinvoke r0.<org.apache.lucene.store.IndexInput: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [slice=");

        $r7 = r0.<org.apache.lucene.store.ByteBufferIndexInput: java.lang.String sliceDescription>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label1:
        $r2 = specialinvoke r0.<org.apache.lucene.store.IndexInput: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.apache.lucene.store.IndexInput clone()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0, $r1;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.store.ByteBufferIndexInput clone()>();

        return $r1;
    }

    public volatile org.apache.lucene.store.DataInput clone()
    {
        org.apache.lucene.store.ByteBufferIndexInput r0, $r1;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.store.ByteBufferIndexInput clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.store.ByteBufferIndexInput r0, $r1;

        r0 := @this: org.apache.lucene.store.ByteBufferIndexInput;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.ByteBufferIndexInput: org.apache.lucene.store.ByteBufferIndexInput clone()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/ByteBufferIndexInput;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.ByteBufferIndexInput: boolean $assertionsDisabled> = $z1;

        return;
    }
}
