final class org.waveprotocol.wave.client.editor.content.ContentDocElement$2 extends org.waveprotocol.wave.client.editor.NodeEventHandlerImpl
{

    void <init>()
    {
        org.waveprotocol.wave.client.editor.content.ContentDocElement$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocElement$2;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.NodeEventHandlerImpl: void <init>()>();

        return;
    }

    public boolean handleLeftAtBeginning(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r2;
        org.waveprotocol.wave.client.editor.content.ContentDocElement$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocElement$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        return 1;
    }

    public boolean handleRightAtEnd(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r2;
        org.waveprotocol.wave.client.editor.content.ContentDocElement$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocElement$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        return 1;
    }

    public boolean handleDeleteAtEnd(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r2;
        org.waveprotocol.wave.client.editor.content.ContentDocElement$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocElement$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        return 1;
    }

    public boolean handleBackspaceAtBeginning(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r2;
        org.waveprotocol.wave.client.editor.content.ContentDocElement$2 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocElement$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        return 1;
    }
}
