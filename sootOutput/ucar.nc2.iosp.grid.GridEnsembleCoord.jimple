public class ucar.nc2.iosp.grid.GridEnsembleCoord extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private java.util.List ensCoords;
    private int seq;

    void <init>(java.util.List)
    {
        ucar.nc2.iosp.grid.GridEnsembleCoord r0;
        java.util.HashMap $r1;
        java.lang.Integer $r12;
        ucar.grib.GribPds $r10, $r11;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2, i3;
        ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord $r13;
        boolean $z0;
        ucar.grid.GridRecord r8;
        java.util.Iterator $r3;
        java.util.Collection $r5;
        java.util.List r2, $r6;
        java.lang.Object $r7;
        ucar.grib.GribGridRecord r9;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: int seq> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.grid.GridRecord) $r7;

        r9 = (ucar.grib.GribGridRecord) r8;

        $r10 = virtualinvoke r9.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i0 = virtualinvoke $r10.<ucar.grib.GribPds: int getPerturbationNumber()>();

        $r11 = virtualinvoke r9.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i1 = virtualinvoke $r11.<ucar.grib.GribPds: int getPerturbationType()>();

        $i2 = 1000 * $i0;

        i3 = $i2 + $i1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r13 = new ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord;

        specialinvoke $r13.<ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord: void <init>(ucar.nc2.iosp.grid.GridEnsembleCoord,int,int,ucar.nc2.iosp.grid.GridEnsembleCoord$1)>(r0, $i0, $i1, null);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords> = $r4;

        $r6 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r6);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.iosp.grid.GridEnsembleCoord r0, r4;
        java.util.List $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (ucar.nc2.iosp.grid.GridEnsembleCoord) r1;

        $r6 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $r5 = r4.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridEnsembleCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void setSequence(int)
    {
        int i0;
        ucar.nc2.iosp.grid.GridEnsembleCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: int seq> = i0;

        return;
    }

    java.lang.String getName()
    {
        ucar.nc2.iosp.grid.GridEnsembleCoord r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        $i0 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: int seq>;

        if $i0 != 0 goto label1;

        $r4 = "ens";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ens");

        $i1 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: int seq>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r4;
    }

    void addDimensionsToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        ucar.nc2.iosp.grid.GridEnsembleCoord r3;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r4;
        ucar.nc2.Group r1;

        r3 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Group;

        $r2 = new ucar.nc2.Dimension;

        $r4 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.lang.String getName()>();

        $i0 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

        specialinvoke $r2.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r4, $i0, 1);

        virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(r1, $r2);

        return;
    }

    void addToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        ucar.nc2.iosp.grid.GridEnsembleCoord r3;
        java.lang.String[] r11;
        int[] $r12;
        ucar.nc2.constants.AxisType $r9;
        int $i0, $i1, $i2, $i3, $i4, i5;
        ucar.nc2.Variable $r0;
        ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord r17;
        java.lang.String $r4, $r5, $r10, $r19, $r23;
        ucar.ma2.DataType $r6, $r13;
        ucar.nc2.Group r2;
        ucar.ma2.Array $r14;
        java.util.List $r15;
        ucar.nc2.Attribute $r7, $r8;
        java.lang.Object $r16;
        java.lang.StringBuilder $r18, $r20, $r21, $r22;
        ucar.nc2.NetcdfFile r1;

        r3 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r2 := @parameter1: ucar.nc2.Group;

        $r0 = new ucar.nc2.Variable;

        $r4 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.lang.String getName()>();

        specialinvoke $r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r2, null, $r4);

        $r5 = virtualinvoke $r0.<ucar.nc2.Variable: java.lang.String getShortName()>();

        virtualinvoke $r0.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r5);

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        virtualinvoke $r0.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r6);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "ensemble");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = new ucar.nc2.Attribute;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Ensemble>;

        $r10 = virtualinvoke $r9.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r8.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r10);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r8);

        $i0 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

        r11 = newarray (java.lang.String)[$i0];

        i5 = 0;

     label1:
        $i1 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

        if i5 >= $i1 goto label2;

        $r15 = r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i5);

        r17 = (ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord) $r16;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $i3 = r17.<ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord: int type>;

        $r19 = staticinvoke <ucar.grib.grib2.Grib2Tables: java.lang.String codeTable4_6(int)>($i3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i4 = r17.<ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord: int number>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r11[i5] = $r23;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r12 = newarray (int)[1];

        $i2 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: int getNEnsembles()>();

        $r12[0] = $i2;

        $r14 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r13, $r12, r11);

        virtualinvoke $r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r14, 0);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r2, $r0);

        return;
    }

    int getIndex(ucar.grib.GribGridRecord)
    {
        java.util.Iterator $r5;
        ucar.nc2.iosp.grid.GridEnsembleCoord r3;
        ucar.grib.GribPds $r1, $r2;
        java.util.List $r4;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object $r6;
        ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord r7;
        ucar.grib.GribGridRecord r0;
        boolean $z0;

        r3 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        r0 := @parameter0: ucar.grib.GribGridRecord;

        $r1 = virtualinvoke r0.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i0 = virtualinvoke $r1.<ucar.grib.GribPds: int getPerturbationNumber()>();

        $r2 = virtualinvoke r0.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i1 = virtualinvoke $r2.<ucar.grib.GribPds: int getPerturbationType()>();

        i4 = 0;

        $r4 = r3.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord) $r6;

        $i2 = r7.<ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord: int number>;

        if $i2 != $i0 goto label2;

        $i3 = r7.<ucar.nc2.iosp.grid.GridEnsembleCoord$EnsCoord: int type>;

        if $i3 != $i1 goto label2;

        return i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i6 = (int) -1;

        return $i6;
    }

    int getNEnsembles()
    {
        int $i0;
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridEnsembleCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridEnsembleCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridEnsembleCoord: java.util.List ensCoords>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/grid/GridEnsembleCoord;");

        <ucar.nc2.iosp.grid.GridEnsembleCoord: org.slf4j.Logger log> = $r0;

        return;
    }
}
