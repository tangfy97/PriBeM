final class org.hamcrest.Condition$NotMatched extends org.hamcrest.Condition
{

    private void <init>()
    {
        org.hamcrest.Condition$NotMatched r0;

        r0 := @this: org.hamcrest.Condition$NotMatched;

        specialinvoke r0.<org.hamcrest.Condition: void <init>(org.hamcrest.Condition$1)>(null);

        return;
    }

    public boolean matching(org.hamcrest.Matcher, java.lang.String)
    {
        org.hamcrest.Condition$NotMatched r0;
        java.lang.String r2;
        org.hamcrest.Matcher r1;

        r0 := @this: org.hamcrest.Condition$NotMatched;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: java.lang.String;

        return 0;
    }

    public org.hamcrest.Condition and(org.hamcrest.Condition$Step)
    {
        org.hamcrest.Condition$NotMatched r1;
        org.hamcrest.Condition$Step r2;
        org.hamcrest.Condition $r0;

        r1 := @this: org.hamcrest.Condition$NotMatched;

        r2 := @parameter0: org.hamcrest.Condition$Step;

        $r0 = staticinvoke <org.hamcrest.Condition$NotMatched: org.hamcrest.Condition notMatched()>();

        return $r0;
    }

    void <init>(org.hamcrest.Condition$1)
    {
        org.hamcrest.Condition$1 r1;
        org.hamcrest.Condition$NotMatched r0;

        r0 := @this: org.hamcrest.Condition$NotMatched;

        r1 := @parameter0: org.hamcrest.Condition$1;

        specialinvoke r0.<org.hamcrest.Condition$NotMatched: void <init>()>();

        return;
    }
}
