public class org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr extends org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperBr
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperBr: void <init>()>();

        return;
    }

    public void onChildAdded(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Element)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr r0;
        com.google.gwt.dom.client.Element r1, $r4, $r5;
        com.google.gwt.dom.client.BRElement $r2;
        com.google.gwt.dom.client.Node r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr;

        r3 := @parameter0: com.google.gwt.dom.client.Node;

        r1 := @parameter1: com.google.gwt.dom.client.Element;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: com.google.gwt.dom.client.BRElement getSpacer(com.google.gwt.dom.client.Element)>(r1);

        $r4 = (com.google.gwt.dom.client.Element) $r2;

        $z0 = virtualinvoke $r4.<com.google.gwt.dom.client.Element: boolean hasParentElement()>();

        if $z0 == 0 goto label1;

        $r5 = (com.google.gwt.dom.client.Element) $r2;

        virtualinvoke $r5.<com.google.gwt.dom.client.Element: void removeFromParent()>();

     label1:
        return;
    }

    public void onRemovingChild(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Element)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr r2;
        com.google.gwt.dom.client.Element r0;
        com.google.gwt.dom.client.BRElement $r3;
        com.google.gwt.dom.client.Node $r1, r4;

        r2 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr;

        r4 := @parameter0: com.google.gwt.dom.client.Node;

        r0 := @parameter1: com.google.gwt.dom.client.Element;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node getFirstChild()>();

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: com.google.gwt.dom.client.BRElement getSpacer(com.google.gwt.dom.client.Element)>(r0);

        if $r1 != null goto label1;

        virtualinvoke r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: void appendSpacer(com.google.gwt.dom.client.Element)>(r0);

        goto label2;

     label1:
        if $r1 == $r3 goto label2;

        virtualinvoke $r3.<com.google.gwt.dom.client.BRElement: void removeFromParent()>();

     label2:
        return;
    }

    public void onRepair(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr r2;
        com.google.gwt.dom.client.Element $r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;

        r2 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentNode getFirstChild()>();

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        virtualinvoke r2.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: void appendSpacer(com.google.gwt.dom.client.Element)>($r3);

     label1:
        return;
    }

    public void assertHealthy(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr r3;
        org.waveprotocol.wave.client.editor.content.ContentView $r1;
        java.lang.AssertionError $r5;
        com.google.gwt.dom.client.Element $r4;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.Object $r2;
        com.google.gwt.dom.client.Node r6;
        boolean $z0, $z1;

        r3 := @this: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentView getRenderedContentView()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.content.ContentView: java.lang.Object getFirstChild(java.lang.Object)>(r0);

        if $r2 == null goto label3;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: com.google.gwt.dom.client.Element getImplNodelet()>();

        r6 = virtualinvoke $r4.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node getFirstChild()>();

     label1:
        if r6 == null goto label3;

        $z0 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: boolean isSpacer(com.google.gwt.dom.client.Node)>(r6);

        if $z1 == 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("Non-empty paragraph should not have spacer");

        throw $r5;

     label2:
        r6 = virtualinvoke r6.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getNextSibling()>();

        goto label1;

     label3:
        specialinvoke r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperBr: void assertHealthy(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/paragraph/ParagraphHelperEmptyLineBr;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelperEmptyLineBr: boolean $assertionsDisabled> = $z1;

        return;
    }
}
