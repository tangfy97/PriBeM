public class ucar.unidata.geoloc.ProjectionPointImpl extends java.awt.geom.Point2D$Double implements ucar.unidata.geoloc.ProjectionPoint, java.io.Serializable
{

    public void <init>()
    {
        ucar.unidata.geoloc.ProjectionPointImpl r0;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>(double,double)>(0.0, 0.0);

        return;
    }

    public void <init>(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        return;
    }

    public void <init>(ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        ucar.unidata.geoloc.ProjectionPoint r1;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        $d0 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        specialinvoke r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        return;
    }

    public void <init>(double, double)
    {
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        double d0, d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        return;
    }

    public boolean equals(ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1;
        ucar.unidata.geoloc.ProjectionPointImpl r1;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r1 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label1;

        $d2 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        ucar.unidata.geoloc.ProjectionPointImpl r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;
        double $d0, $d1;

        r1 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $r2 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d0, 4);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $r5 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d1, 4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void toString(java.util.Formatter)
    {
        java.lang.Object[] $r1;
        java.lang.Double $r3, $r4;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        java.util.Formatter r0;
        double $d0, $d1;

        r2 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[2];

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1[0] = $r3;

        $d1 = virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r1[1] = $r4;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("x=%f y=%f ", $r1);

        return;
    }

    public void setLocation(ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        ucar.unidata.geoloc.ProjectionPoint r1;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r1 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        $d0 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d0, $d1);

        return;
    }

    public void setLocation(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r0.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d0, $d1);

        return;
    }

    public boolean isInfinite()
    {
        byte $b0, $b1, $b2, $b3;
        ucar.unidata.geoloc.ProjectionPointImpl r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = r0.<ucar.unidata.geoloc.ProjectionPointImpl: double x>;

        $b0 = $d0 cmpl #Infinity;

        if $b0 == 0 goto label1;

        $d1 = r0.<ucar.unidata.geoloc.ProjectionPointImpl: double x>;

        $b1 = $d1 cmpl #-Infinity;

        if $b1 == 0 goto label1;

        $d2 = r0.<ucar.unidata.geoloc.ProjectionPointImpl: double y>;

        $b2 = $d2 cmpl #Infinity;

        if $b2 == 0 goto label1;

        $d3 = r0.<ucar.unidata.geoloc.ProjectionPointImpl: double y>;

        $b3 = $d3 cmpl #-Infinity;

        if $b3 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1, $b2, $b3;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $b0 = $d0 cmpl #Infinity;

        if $b0 == 0 goto label1;

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $b1 = $d1 cmpl #-Infinity;

        if $b1 == 0 goto label1;

        $d2 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $b2 = $d2 cmpl #Infinity;

        if $b2 == 0 goto label1;

        $d3 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $b3 = $d3 cmpl #-Infinity;

        if $b3 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }
}
