public class org.apache.batik.ext.awt.geom.Quadradic extends org.apache.batik.ext.awt.geom.AbstractSegment
{
    public java.awt.geom.Point2D$Double p1;
    public java.awt.geom.Point2D$Double p2;
    public java.awt.geom.Point2D$Double p3;
    static int count;

    public void <init>()
    {
        java.awt.geom.Point2D$Double $r1, $r2, $r3;
        org.apache.batik.ext.awt.geom.Quadradic r0;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        specialinvoke r0.<org.apache.batik.ext.awt.geom.AbstractSegment: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1> = $r1;

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2> = $r2;

        $r3 = new java.awt.geom.Point2D$Double;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3> = $r3;

        return;
    }

    public void <init>(double, double, double, double, double, double)
    {
        java.awt.geom.Point2D$Double $r1, $r2, $r3;
        org.apache.batik.ext.awt.geom.Quadradic r0;
        double d0, d1, d2, d3, d4, d5;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        specialinvoke r0.<org.apache.batik.ext.awt.geom.AbstractSegment: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1> = $r1;

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d2, d3);

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2> = $r2;

        $r3 = new java.awt.geom.Point2D$Double;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d4, d5);

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3> = $r3;

        return;
    }

    public void <init>(java.awt.geom.Point2D$Double, java.awt.geom.Point2D$Double, java.awt.geom.Point2D$Double)
    {
        java.awt.geom.Point2D$Double r1, r2, r3;
        org.apache.batik.ext.awt.geom.Quadradic r0;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        r1 := @parameter0: java.awt.geom.Point2D$Double;

        r2 := @parameter1: java.awt.geom.Point2D$Double;

        r3 := @parameter2: java.awt.geom.Point2D$Double;

        specialinvoke r0.<org.apache.batik.ext.awt.geom.AbstractSegment: void <init>()>();

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1> = r1;

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2> = r2;

        r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3> = r3;

        return;
    }

    public java.lang.Object clone()
    {
        java.awt.geom.Point2D$Double $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.ext.awt.geom.Quadradic $r0, r2;

        r2 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = new org.apache.batik.ext.awt.geom.Quadradic;

        $r1 = new java.awt.geom.Point2D$Double;

        $r3 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        $r5 = new java.awt.geom.Point2D$Double;

        $r6 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d3 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $r7 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d2 = $r7.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d2);

        $r8 = new java.awt.geom.Point2D$Double;

        $r9 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d5 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d4 = $r10.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d5, $d4);

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Quadradic: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r5, $r8);

        return $r0;
    }

    public org.apache.batik.ext.awt.geom.Segment reverse()
    {
        java.awt.geom.Point2D$Double $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.ext.awt.geom.Quadradic $r0, r2;

        r2 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = new org.apache.batik.ext.awt.geom.Quadradic;

        $r1 = new java.awt.geom.Point2D$Double;

        $r3 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        $r5 = new java.awt.geom.Point2D$Double;

        $r6 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d3 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $r7 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d2 = $r7.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d2);

        $r8 = new java.awt.geom.Point2D$Double;

        $r9 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d5 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d4 = $r10.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d5, $d4);

        specialinvoke $r0.<org.apache.batik.ext.awt.geom.Quadradic: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r5, $r8);

        return $r0;
    }

    private void getMinMax(double, double, double, double[])
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        org.apache.batik.ext.awt.geom.Quadradic r1;
        double[] r0;
        int $i6, $i7, $i8, $i9, $i10;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d1 := @parameter0: double;

        d2 := @parameter1: double;

        d0 := @parameter2: double;

        r0 := @parameter3: double[];

        $b0 = d0 cmpl d1;

        $i6 = (int) $b0;

        if $i6 <= 0 goto label1;

        r0[0] = d1;

        r0[1] = d0;

        goto label2;

     label1:
        r0[0] = d0;

        r0[1] = d1;

     label2:
        $d3 = 2.0 * d2;

        $d4 = d1 - $d3;

        $d15 = $d4 + d0;

        $d16 = d2 - d1;

        $b1 = $d15 cmpl 0.0;

        if $b1 != 0 goto label3;

        return;

     label3:
        d17 = $d16 / $d15;

        $b2 = d17 cmpg 0.0;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label4;

        $b3 = d17 cmpl 1.0;

        $i8 = (int) $b3;

        if $i8 < 0 goto label5;

     label4:
        return;

     label5:
        $d5 = 2.0 * d2;

        $d6 = d1 - $d5;

        $d7 = $d6 + d0;

        $d10 = $d7 * d17;

        $d8 = d2 - d1;

        $d9 = 2.0 * $d8;

        $d11 = $d10 + $d9;

        $d12 = $d11 * d17;

        d18 = $d12 + d1;

        $d13 = r0[0];

        $b4 = d18 cmpg $d13;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label6;

        r0[0] = d18;

        goto label7;

     label6:
        $d14 = r0[1];

        $b5 = d18 cmpl $d14;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label7;

        r0[1] = d18;

     label7:
        return;
    }

    public double minX()
    {
        double[] $r0;
        java.awt.geom.Point2D$Double $r2, $r3, $r4;
        org.apache.batik.ext.awt.geom.Quadradic r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = newarray (double)[2];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double x>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d2, $d1, $d0, $r0);

        $d3 = $r0[0];

        return $d3;
    }

    public double maxX()
    {
        double[] $r0;
        java.awt.geom.Point2D$Double $r2, $r3, $r4;
        org.apache.batik.ext.awt.geom.Quadradic r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = newarray (double)[2];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double x>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d2, $d1, $d0, $r0);

        $d3 = $r0[1];

        return $d3;
    }

    public double minY()
    {
        double[] $r0;
        java.awt.geom.Point2D$Double $r2, $r3, $r4;
        org.apache.batik.ext.awt.geom.Quadradic r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = newarray (double)[2];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d2, $d1, $d0, $r0);

        $d3 = $r0[0];

        return $d3;
    }

    public double maxY()
    {
        double[] $r0;
        java.awt.geom.Point2D$Double $r2, $r3, $r4;
        org.apache.batik.ext.awt.geom.Quadradic r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = newarray (double)[2];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d2, $d1, $d0, $r0);

        $d3 = $r0[1];

        return $d3;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        double[] $r0, $r5;
        java.awt.geom.Point2D$Double $r2, $r3, $r4, $r6, $r7, $r8;
        java.awt.geom.Rectangle2D$Double $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        org.apache.batik.ext.awt.geom.Quadradic r1;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = newarray (double)[2];

        $r0[0] = 0.0;

        $r0[1] = 0.0;

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d0 = $r4.<java.awt.geom.Point2D$Double: double x>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d2, $d1, $d0, $r0);

        $r5 = newarray (double)[2];

        $r5[0] = 0.0;

        $r5[1] = 0.0;

        $r6 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d5 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d4 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $r8 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d3 = $r8.<java.awt.geom.Point2D$Double: double y>;

        specialinvoke r1.<org.apache.batik.ext.awt.geom.Quadradic: void getMinMax(double,double,double,double[])>($d5, $d4, $d3, $r5);

        $r9 = new java.awt.geom.Rectangle2D$Double;

        $d13 = $r0[0];

        $d12 = $r5[0];

        $d7 = $r0[1];

        $d6 = $r0[0];

        $d11 = $d7 - $d6;

        $d9 = $r5[1];

        $d8 = $r5[0];

        $d10 = $d9 - $d8;

        specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d13, $d12, $d11, $d10);

        return $r9;
    }

    protected int findRoots(double, double[])
    {
        double[] $r0, r8;
        java.awt.geom.Point2D$Double $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        org.apache.batik.ext.awt.geom.Quadradic r1;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d0 := @parameter0: double;

        r8 := @parameter1: double[];

        $r0 = newarray (double)[3];

        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d1 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $d2 = $d1 - d0;

        $r0[0] = $d2;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d4 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double y>;

        $d5 = $d4 - $d3;

        $d6 = 2.0 * $d5;

        $r0[1] = $d6;

        $r5 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d9 = $r5.<java.awt.geom.Point2D$Double: double y>;

        $r6 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d7 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $d8 = 2.0 * $d7;

        $d11 = $d9 - $d8;

        $r7 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d10 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $d12 = $d11 + $d10;

        $r0[2] = $d12;

        $i0 = staticinvoke <java.awt.geom.QuadCurve2D: int solveQuadratic(double[],double[])>($r0, r8);

        return $i0;
    }

    public java.awt.geom.Point2D$Double evalDt(double)
    {
        org.apache.batik.ext.awt.geom.Quadradic r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d6 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $d1 = 2.0 * $d0;

        $d4 = $d2 - $d1;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d3 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $d5 = $d4 + $d3;

        $d7 = 2.0 * $d5;

        $d12 = $d7 * d6;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d9 = $r4.<java.awt.geom.Point2D$Double: double x>;

        $r5 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d8 = $r5.<java.awt.geom.Point2D$Double: double x>;

        $d10 = $d9 - $d8;

        $d11 = 2.0 * $d10;

        d13 = $d12 + $d11;

        $r6 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d16 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d14 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $d15 = 2.0 * $d14;

        $d18 = $d16 - $d15;

        $r8 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d17 = $r8.<java.awt.geom.Point2D$Double: double y>;

        $d19 = $d18 + $d17;

        $d20 = 2.0 * $d19;

        $d25 = $d20 * d6;

        $r9 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d22 = $r9.<java.awt.geom.Point2D$Double: double y>;

        $r10 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d21 = $r10.<java.awt.geom.Point2D$Double: double y>;

        $d23 = $d22 - $d21;

        $d24 = 2.0 * $d23;

        d26 = $d25 + $d24;

        $r11 = new java.awt.geom.Point2D$Double;

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d13, d26);

        return $r11;
    }

    public java.awt.geom.Point2D$Double eval(double)
    {
        org.apache.batik.ext.awt.geom.Quadradic r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d5 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $d1 = 2.0 * $d0;

        $d4 = $d2 - $d1;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d3 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $d6 = $d4 + $d3;

        $d11 = $d6 * d5;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d8 = $r4.<java.awt.geom.Point2D$Double: double x>;

        $r5 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d7 = $r5.<java.awt.geom.Point2D$Double: double x>;

        $d9 = $d8 - $d7;

        $d10 = 2.0 * $d9;

        $d12 = $d11 + $d10;

        $d14 = $d12 * d5;

        $r6 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d13 = $r6.<java.awt.geom.Point2D$Double: double x>;

        d15 = $d14 + $d13;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d18 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $r8 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d16 = $r8.<java.awt.geom.Point2D$Double: double y>;

        $d17 = 2.0 * $d16;

        $d20 = $d18 - $d17;

        $r9 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d19 = $r9.<java.awt.geom.Point2D$Double: double y>;

        $d21 = $d20 + $d19;

        $d26 = $d21 * d5;

        $r10 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d23 = $r10.<java.awt.geom.Point2D$Double: double y>;

        $r11 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d22 = $r11.<java.awt.geom.Point2D$Double: double y>;

        $d24 = $d23 - $d22;

        $d25 = 2.0 * $d24;

        $d27 = $d26 + $d25;

        $d29 = $d27 * d5;

        $r12 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d28 = $r12.<java.awt.geom.Point2D$Double: double y>;

        d30 = $d29 + $d28;

        $r13 = new java.awt.geom.Point2D$Double;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d15, d30);

        return $r13;
    }

    public org.apache.batik.ext.awt.geom.Segment getSegment(double, double)
    {
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        org.apache.batik.ext.awt.geom.Quadradic r0, $r5;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        d2 = d0 - d1;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double eval(double)>(d1);

        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double evalDt(double)>(d1);

        $r3 = new java.awt.geom.Point2D$Double;

        $d6 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $d4 = 0.5 * d2;

        $d3 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $d5 = $d4 * $d3;

        $d12 = $d6 + $d5;

        $d10 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $d8 = 0.5 * d2;

        $d7 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $d9 = $d8 * $d7;

        $d11 = $d10 + $d9;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d12, $d11);

        $r4 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double eval(double)>(d0);

        $r5 = new org.apache.batik.ext.awt.geom.Quadradic;

        specialinvoke $r5.<org.apache.batik.ext.awt.geom.Quadradic: void <init>(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double)>($r1, $r3, $r4);

        return $r5;
    }

    public void subdivide(org.apache.batik.ext.awt.geom.Quadradic, org.apache.batik.ext.awt.geom.Quadradic)
    {
        java.awt.geom.Point2D$Double $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        org.apache.batik.ext.awt.geom.Quadradic r0, r1, r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57;

        r1 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.Quadradic;

        r24 := @parameter1: org.apache.batik.ext.awt.geom.Quadradic;

        if r0 != null goto label1;

        if r24 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $r3 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d0 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $d1 = 2.0 * $d0;

        $d4 = $d2 - $d1;

        $r4 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d3 = $r4.<java.awt.geom.Point2D$Double: double x>;

        $d5 = $d4 + $d3;

        $d9 = $d5 * 0.25;

        $r5 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d7 = $r5.<java.awt.geom.Point2D$Double: double x>;

        $r6 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d6 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $d8 = $d7 - $d6;

        $d11 = $d9 + $d8;

        $r7 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d10 = $r7.<java.awt.geom.Point2D$Double: double x>;

        $d54 = $d11 + $d10;

        $r8 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d14 = $r8.<java.awt.geom.Point2D$Double: double y>;

        $r9 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d12 = $r9.<java.awt.geom.Point2D$Double: double y>;

        $d13 = 2.0 * $d12;

        $d16 = $d14 - $d13;

        $r10 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d15 = $r10.<java.awt.geom.Point2D$Double: double y>;

        $d17 = $d16 + $d15;

        $d21 = $d17 * 0.25;

        $r11 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d19 = $r11.<java.awt.geom.Point2D$Double: double y>;

        $r12 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d18 = $r12.<java.awt.geom.Point2D$Double: double y>;

        $d20 = $d19 - $d18;

        $d23 = $d21 + $d20;

        $r13 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d22 = $r13.<java.awt.geom.Point2D$Double: double y>;

        $d55 = $d23 + $d22;

        $r14 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d26 = $r14.<java.awt.geom.Point2D$Double: double x>;

        $r15 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d24 = $r15.<java.awt.geom.Point2D$Double: double x>;

        $d25 = 2.0 * $d24;

        $d28 = $d26 - $d25;

        $r16 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d27 = $r16.<java.awt.geom.Point2D$Double: double x>;

        $d29 = $d28 + $d27;

        $d34 = $d29 * 0.25;

        $r17 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d31 = $r17.<java.awt.geom.Point2D$Double: double x>;

        $r18 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d30 = $r18.<java.awt.geom.Point2D$Double: double x>;

        $d32 = $d31 - $d30;

        $d33 = $d32 * 0.5;

        $d56 = $d34 + $d33;

        $r19 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d37 = $r19.<java.awt.geom.Point2D$Double: double y>;

        $r20 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d35 = $r20.<java.awt.geom.Point2D$Double: double y>;

        $d36 = 2.0 * $d35;

        $d39 = $d37 - $d36;

        $r21 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d38 = $r21.<java.awt.geom.Point2D$Double: double y>;

        $d40 = $d39 + $d38;

        $d45 = $d40 * 0.25;

        $r22 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d42 = $r22.<java.awt.geom.Point2D$Double: double y>;

        $r23 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d41 = $r23.<java.awt.geom.Point2D$Double: double y>;

        $d43 = $d42 - $d41;

        $d44 = $d43 * 0.5;

        $d57 = $d45 + $d44;

        if r0 == null goto label2;

        $r34 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r33 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d50 = $r33.<java.awt.geom.Point2D$Double: double x>;

        $r34.<java.awt.geom.Point2D$Double: double x> = $d50;

        $r36 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r35 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d51 = $r35.<java.awt.geom.Point2D$Double: double y>;

        $r36.<java.awt.geom.Point2D$Double: double y> = $d51;

        $r37 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d52 = $d54 - $d56;

        $r37.<java.awt.geom.Point2D$Double: double x> = $d52;

        $r38 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d53 = $d55 - $d57;

        $r38.<java.awt.geom.Point2D$Double: double y> = $d53;

        $r39 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r39.<java.awt.geom.Point2D$Double: double x> = $d54;

        $r40 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r40.<java.awt.geom.Point2D$Double: double y> = $d55;

     label2:
        if r24 == null goto label3;

        $r25 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r25.<java.awt.geom.Point2D$Double: double x> = $d54;

        $r26 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r26.<java.awt.geom.Point2D$Double: double y> = $d55;

        $r27 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d46 = $d54 + $d56;

        $r27.<java.awt.geom.Point2D$Double: double x> = $d46;

        $r28 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d47 = $d55 + $d57;

        $r28.<java.awt.geom.Point2D$Double: double y> = $d47;

        $r30 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r29 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d48 = $r29.<java.awt.geom.Point2D$Double: double x>;

        $r30.<java.awt.geom.Point2D$Double: double x> = $d48;

        $r32 = r24.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r31 = r1.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d49 = $r31.<java.awt.geom.Point2D$Double: double y>;

        $r32.<java.awt.geom.Point2D$Double: double y> = $d49;

     label3:
        return;
    }

    public void subdivide(double, org.apache.batik.ext.awt.geom.Quadradic, org.apache.batik.ext.awt.geom.Quadradic)
    {
        org.apache.batik.ext.awt.geom.Quadradic r0, r3, r4;
        java.awt.geom.Point2D$Double $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d0 := @parameter0: double;

        r3 := @parameter1: org.apache.batik.ext.awt.geom.Quadradic;

        r4 := @parameter2: org.apache.batik.ext.awt.geom.Quadradic;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double eval(double)>(d0);

        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double evalDt(double)>(d0);

        if r3 == null goto label1;

        $r14 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r13 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d17 = $r13.<java.awt.geom.Point2D$Double: double x>;

        $r14.<java.awt.geom.Point2D$Double: double x> = $d17;

        $r16 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r15 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d18 = $r15.<java.awt.geom.Point2D$Double: double y>;

        $r16.<java.awt.geom.Point2D$Double: double y> = $d18;

        $r17 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d22 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $d19 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $d20 = $d19 * d0;

        $d21 = $d20 * 0.5;

        $d23 = $d22 - $d21;

        $r17.<java.awt.geom.Point2D$Double: double x> = $d23;

        $r18 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d27 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $d24 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $d25 = $d24 * d0;

        $d26 = $d25 * 0.5;

        $d28 = $d27 - $d26;

        $r18.<java.awt.geom.Point2D$Double: double y> = $d28;

        $r19 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d29 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r19.<java.awt.geom.Point2D$Double: double x> = $d29;

        $r20 = r3.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d30 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $r20.<java.awt.geom.Point2D$Double: double y> = $d30;

     label1:
        if r4 == null goto label2;

        $r5 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r5.<java.awt.geom.Point2D$Double: double x> = $d1;

        $r6 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $r6.<java.awt.geom.Point2D$Double: double y> = $d2;

        $r7 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d7 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $d4 = $r2.<java.awt.geom.Point2D$Double: double x>;

        $d3 = 1.0 - d0;

        $d5 = $d4 * $d3;

        $d6 = $d5 * 0.5;

        $d8 = $d7 + $d6;

        $r7.<java.awt.geom.Point2D$Double: double x> = $d8;

        $r8 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d13 = $r1.<java.awt.geom.Point2D$Double: double y>;

        $d10 = $r2.<java.awt.geom.Point2D$Double: double y>;

        $d9 = 1.0 - d0;

        $d11 = $d10 * $d9;

        $d12 = $d11 * 0.5;

        $d14 = $d13 + $d12;

        $r8.<java.awt.geom.Point2D$Double: double y> = $d14;

        $r10 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r9 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d15 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10.<java.awt.geom.Point2D$Double: double x> = $d15;

        $r12 = r4.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r11 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d16 = $r11.<java.awt.geom.Point2D$Double: double y>;

        $r12.<java.awt.geom.Point2D$Double: double y> = $d16;

     label2:
        return;
    }

    public void subdivide(org.apache.batik.ext.awt.geom.Segment, org.apache.batik.ext.awt.geom.Segment)
    {
        org.apache.batik.ext.awt.geom.Segment r0, r1;
        org.apache.batik.ext.awt.geom.Quadradic r2, r3, r4;
        boolean $z0, $z1;

        r2 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.Segment;

        r1 := @parameter1: org.apache.batik.ext.awt.geom.Segment;

        r3 = null;

        r4 = null;

        $z0 = r0 instanceof org.apache.batik.ext.awt.geom.Quadradic;

        if $z0 == 0 goto label1;

        r3 = (org.apache.batik.ext.awt.geom.Quadradic) r0;

     label1:
        $z1 = r1 instanceof org.apache.batik.ext.awt.geom.Quadradic;

        if $z1 == 0 goto label2;

        r4 = (org.apache.batik.ext.awt.geom.Quadradic) r1;

     label2:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.Quadradic: void subdivide(org.apache.batik.ext.awt.geom.Quadradic,org.apache.batik.ext.awt.geom.Quadradic)>(r3, r4);

        return;
    }

    public void subdivide(double, org.apache.batik.ext.awt.geom.Segment, org.apache.batik.ext.awt.geom.Segment)
    {
        org.apache.batik.ext.awt.geom.Segment r0, r1;
        org.apache.batik.ext.awt.geom.Quadradic r2, r3, r4;
        boolean $z0, $z1;
        double d0;

        r2 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d0 := @parameter0: double;

        r0 := @parameter1: org.apache.batik.ext.awt.geom.Segment;

        r1 := @parameter2: org.apache.batik.ext.awt.geom.Segment;

        r3 = null;

        r4 = null;

        $z0 = r0 instanceof org.apache.batik.ext.awt.geom.Quadradic;

        if $z0 == 0 goto label1;

        r3 = (org.apache.batik.ext.awt.geom.Quadradic) r0;

     label1:
        $z1 = r1 instanceof org.apache.batik.ext.awt.geom.Quadradic;

        if $z1 == 0 goto label2;

        r4 = (org.apache.batik.ext.awt.geom.Quadradic) r1;

     label2:
        virtualinvoke r2.<org.apache.batik.ext.awt.geom.Quadradic: void subdivide(double,org.apache.batik.ext.awt.geom.Quadradic,org.apache.batik.ext.awt.geom.Quadradic)>(d0, r3, r4);

        return;
    }

    protected double subLength(double, double, double)
    {
        byte $b2, $b3;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        org.apache.batik.ext.awt.geom.Quadradic r0, $r28;
        int $i0, $i1, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, $d27, $d28, $d29, $d30, d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, d46, d47, d48, d49, d50;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d8 := @parameter0: double;

        d9 := @parameter1: double;

        d11 := @parameter2: double;

        $i0 = <org.apache.batik.ext.awt.geom.Quadradic: int count>;

        $i1 = $i0 + 1;

        <org.apache.batik.ext.awt.geom.Quadradic: int count> = $i1;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        d46 = $d1 - $d0;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d3 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r4.<java.awt.geom.Point2D$Double: double y>;

        d47 = $d3 - $d2;

        $d5 = d46 * d46;

        $d4 = d47 * d47;

        $d6 = $d5 + $d4;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        d10 = d8 + d9;

        $b2 = d10 cmpg d11;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label1;

        $d44 = d10 + $d7;

        $d45 = $d44 * 0.5;

        return $d45;

     label1:
        d12 = d10 - $d7;

        $b3 = d12 cmpg d11;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

        $d42 = d10 + $d7;

        $d43 = $d42 * 0.5;

        return $d43;

     label2:
        $r28 = new org.apache.batik.ext.awt.geom.Quadradic;

        specialinvoke $r28.<org.apache.batik.ext.awt.geom.Quadradic: void <init>()>();

        $r6 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d15 = $r6.<java.awt.geom.Point2D$Double: double x>;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d13 = $r7.<java.awt.geom.Point2D$Double: double x>;

        $d14 = 2.0 * $d13;

        $d17 = $d15 + $d14;

        $r8 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d16 = $r8.<java.awt.geom.Point2D$Double: double x>;

        $d18 = $d17 + $d16;

        d19 = $d18 * 0.25;

        $r9 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d22 = $r9.<java.awt.geom.Point2D$Double: double y>;

        $r10 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d20 = $r10.<java.awt.geom.Point2D$Double: double y>;

        $d21 = 2.0 * $d20;

        $d24 = $d22 + $d21;

        $r11 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d23 = $r11.<java.awt.geom.Point2D$Double: double y>;

        $d25 = $d24 + $d23;

        d26 = $d25 * 0.25;

        d48 = 0.25 * d46;

        d49 = 0.25 * d47;

        $r13 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r12 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d27 = $r12.<java.awt.geom.Point2D$Double: double x>;

        $r13.<java.awt.geom.Point2D$Double: double x> = $d27;

        $r15 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r14 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d28 = $r14.<java.awt.geom.Point2D$Double: double y>;

        $r15.<java.awt.geom.Point2D$Double: double y> = $d28;

        $r16 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d29 = d19 - d48;

        $r16.<java.awt.geom.Point2D$Double: double x> = $d29;

        $r17 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d30 = d26 - d49;

        $r17.<java.awt.geom.Point2D$Double: double y> = $d30;

        $r18 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r18.<java.awt.geom.Point2D$Double: double x> = d19;

        $r19 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r19.<java.awt.geom.Point2D$Double: double y> = d26;

        d31 = 0.25 * $d7;

        $d33 = d8 * 0.5;

        $d32 = d11 * 0.5;

        $d34 = virtualinvoke $r28.<org.apache.batik.ext.awt.geom.Quadradic: double subLength(double,double,double)>($d33, d31, $d32);

        $r20 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r20.<java.awt.geom.Point2D$Double: double x> = d19;

        $r21 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $r21.<java.awt.geom.Point2D$Double: double y> = d26;

        $r22 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d35 = d19 + d48;

        $r22.<java.awt.geom.Point2D$Double: double x> = $d35;

        $r23 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d36 = d26 + d49;

        $r23.<java.awt.geom.Point2D$Double: double y> = $d36;

        $r25 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r24 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d37 = $r24.<java.awt.geom.Point2D$Double: double x>;

        $r25.<java.awt.geom.Point2D$Double: double x> = $d37;

        $r27 = $r28.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $r26 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d38 = $r26.<java.awt.geom.Point2D$Double: double y>;

        $r27.<java.awt.geom.Point2D$Double: double y> = $d38;

        $d40 = d9 * 0.5;

        $d39 = d11 * 0.5;

        $d41 = virtualinvoke $r28.<org.apache.batik.ext.awt.geom.Quadradic: double subLength(double,double,double)>(d31, $d40, $d39);

        d50 = $d34 + $d41;

        return d50;
    }

    public double getLength()
    {
        org.apache.batik.ext.awt.geom.Quadradic r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $d0 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: double getLength(double)>(1.0E-6);

        return $d0;
    }

    public double getLength(double)
    {
        org.apache.batik.ext.awt.geom.Quadradic r0;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17, d18, $d19, d20, d21, d22, d23;

        r0 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        d16 := @parameter0: double;

        $r1 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d1 = $r1.<java.awt.geom.Point2D$Double: double x>;

        $r2 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d0 = $r2.<java.awt.geom.Point2D$Double: double x>;

        d20 = $d1 - $d0;

        $r3 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d3 = $r3.<java.awt.geom.Point2D$Double: double y>;

        $r4 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d2 = $r4.<java.awt.geom.Point2D$Double: double y>;

        d21 = $d3 - $d2;

        $d5 = d20 * d20;

        $d4 = d21 * d21;

        $d6 = $d5 + $d4;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        $r5 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d9 = $r5.<java.awt.geom.Point2D$Double: double x>;

        $r6 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d8 = $r6.<java.awt.geom.Point2D$Double: double x>;

        d22 = $d9 - $d8;

        $r7 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d11 = $r7.<java.awt.geom.Point2D$Double: double y>;

        $r8 = r0.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d10 = $r8.<java.awt.geom.Point2D$Double: double y>;

        d23 = $d11 - $d10;

        $d13 = d22 * d22;

        $d12 = d23 * d23;

        $d14 = $d13 + $d12;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>($d14);

        $d17 = $d7 + $d15;

        d18 = d16 * $d17;

        $d19 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.Quadradic: double subLength(double,double,double)>($d7, $d15, d18);

        return $d19;
    }

    public java.lang.String toString()
    {
        java.awt.geom.Point2D$Double $r3, $r6, $r9, $r12, $r15, $r18;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19;
        java.lang.String $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.ext.awt.geom.Quadradic r2;

        r2 := @this: org.apache.batik.ext.awt.geom.Quadradic;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("M");

        $r3 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d0 = $r3.<java.awt.geom.Point2D$Double: double x>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r6 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p1>;

        $d1 = $r6.<java.awt.geom.Point2D$Double: double y>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(81);

        $r9 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d2 = $r9.<java.awt.geom.Point2D$Double: double x>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r12 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p2>;

        $d3 = $r12.<java.awt.geom.Point2D$Double: double y>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r15 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d4 = $r15.<java.awt.geom.Point2D$Double: double x>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r18 = r2.<org.apache.batik.ext.awt.geom.Quadradic: java.awt.geom.Point2D$Double p3>;

        $d5 = $r18.<java.awt.geom.Point2D$Double: double y>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;
    }

    static void <clinit>()
    {
        <org.apache.batik.ext.awt.geom.Quadradic: int count> = 0;

        return;
    }
}
