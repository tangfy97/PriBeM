class org.wiztools.restclient.ui.RESTMain$17 extends java.lang.Object implements java.awt.event.ActionListener
{
    final org.wiztools.restclient.ui.RESTMain this$0;

    void <init>(org.wiztools.restclient.ui.RESTMain)
    {
        org.wiztools.restclient.ui.RESTMain$17 r0;
        org.wiztools.restclient.ui.RESTMain r1;

        r0 := @this: org.wiztools.restclient.ui.RESTMain$17;

        r1 := @parameter0: org.wiztools.restclient.ui.RESTMain;

        r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.wiztools.restclient.ui.RESTViewImpl $r12;
        org.wiztools.restclient.ui.history.HistoryManager $r2, $r7, $r9;
        org.wiztools.restclient.ui.FileChooserType $r3;
        int $i0, $i2;
        java.lang.String $r13;
        boolean $z0;
        org.wiztools.restclient.ui.RESTMain $r1, $r4, $r6, $r8, $r11;
        java.io.IOException $r10;
        java.awt.event.ActionEvent r14;
        java.io.File $r5;
        org.wiztools.restclient.ui.RESTMain$17 r0;

        r0 := @this: org.wiztools.restclient.ui.RESTMain$17;

        r14 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0>;

        $r2 = staticinvoke <org.wiztools.restclient.ui.RESTMain: org.wiztools.restclient.ui.history.HistoryManager access$800(org.wiztools.restclient.ui.RESTMain)>($r1);

        $z0 = interfaceinvoke $r2.<org.wiztools.restclient.ui.history.HistoryManager: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(null, "Overwrite existing history?", "Existing history will be overwritten. Proceed?", 0);

        if $i0 == 1 goto label1;

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0>;

        $r3 = <org.wiztools.restclient.ui.FileChooserType: org.wiztools.restclient.ui.FileChooserType OPEN_HISTORY>;

        $r5 = virtualinvoke $r4.<org.wiztools.restclient.ui.RESTMain: java.io.File getOpenFile(org.wiztools.restclient.ui.FileChooserType)>($r3);

        if $r5 == null goto label6;

     label3:
        $r6 = r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0>;

        $r7 = staticinvoke <org.wiztools.restclient.ui.RESTMain: org.wiztools.restclient.ui.history.HistoryManager access$800(org.wiztools.restclient.ui.RESTMain)>($r6);

        interfaceinvoke $r7.<org.wiztools.restclient.ui.history.HistoryManager: void clear()>();

        $r8 = r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0>;

        $r9 = staticinvoke <org.wiztools.restclient.ui.RESTMain: org.wiztools.restclient.ui.history.HistoryManager access$800(org.wiztools.restclient.ui.RESTMain)>($r8);

        interfaceinvoke $r9.<org.wiztools.restclient.ui.history.HistoryManager: void load(java.io.File)>($r5);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = r0.<org.wiztools.restclient.ui.RESTMain$17: org.wiztools.restclient.ui.RESTMain this$0>;

        $r12 = staticinvoke <org.wiztools.restclient.ui.RESTMain: org.wiztools.restclient.ui.RESTViewImpl access$400(org.wiztools.restclient.ui.RESTMain)>($r11);

        $r13 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>($r10);

        virtualinvoke $r12.<org.wiztools.restclient.ui.RESTViewImpl: void showError(java.lang.String)>($r13);

     label6:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }
}
