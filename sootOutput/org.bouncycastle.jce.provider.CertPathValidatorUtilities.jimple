public class org.bouncycastle.jce.provider.CertPathValidatorUtilities extends java.lang.Object
{
    protected static final java.lang.String CERTIFICATE_POLICIES;
    protected static final java.lang.String BASIC_CONSTRAINTS;
    protected static final java.lang.String POLICY_MAPPINGS;
    protected static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    protected static final java.lang.String NAME_CONSTRAINTS;
    protected static final java.lang.String KEY_USAGE;
    protected static final java.lang.String INHIBIT_ANY_POLICY;
    protected static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    protected static final java.lang.String DELTA_CRL_INDICATOR;
    protected static final java.lang.String POLICY_CONSTRAINTS;
    protected static final java.lang.String FRESHEST_CRL;
    protected static final java.lang.String CRL_DISTRIBUTION_POINTS;
    protected static final java.lang.String AUTHORITY_KEY_IDENTIFIER;
    protected static final java.lang.String ANY_POLICY;
    protected static final java.lang.String CRL_NUMBER;
    protected static final int KEY_CERT_SIGN;
    protected static final int CRL_SIGN;
    protected static final java.lang.String[] crlReasons;

    public void <init>()
    {
        org.bouncycastle.jce.provider.CertPathValidatorUtilities r0;

        r0 := @this: org.bouncycastle.jce.provider.CertPathValidatorUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r0;
        java.util.Set r1;
        java.security.cert.TrustAnchor $r2;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        $r2 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    protected static java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate, java.util.Set, java.lang.String) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r1, $r8, $r14, $r15;
        byte[] $r3;
        javax.security.auth.x500.X500Principal $r2, $r12;
        org.bouncycastle.jce.provider.AnnotatedException $r6, $r19;
        java.lang.String $r9, r10, $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        java.security.cert.X509CertSelector $r0;
        java.util.Set r4;
        java.security.PublicKey $r11, r21;
        java.io.IOException $r18;
        java.lang.IllegalArgumentException $r17;
        java.lang.Exception $r16, r22;
        java.lang.Object $r7;
        java.security.cert.TrustAnchor r20;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r4 := @parameter1: java.util.Set;

        r10 := @parameter2: java.lang.String;

        r20 = null;

        r21 = null;

        r22 = null;

        $r0 = new java.security.cert.X509CertSelector;

        specialinvoke $r0.<java.security.cert.X509CertSelector: void <init>()>();

        $r2 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

     label01:
        $r3 = virtualinvoke $r2.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r0.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r3);

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        $r19 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r19.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot set subject search criteria for trust anchor.", $r18);

        throw $r19;

     label04:
        $r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        if r20 != null goto label17;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.security.cert.TrustAnchor) $r7;

        $r8 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r8 == null goto label07;

        $r14 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z1 = virtualinvoke $r0.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r14);

        if $z1 == 0 goto label06;

        $r15 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r21 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        goto label13;

     label06:
        r20 = null;

        goto label13;

     label07:
        $r9 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        if $r9 == null goto label12;

        $r11 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        if $r11 == null goto label12;

     label08:
        $r12 = new javax.security.auth.x500.X500Principal;

        $r13 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r12.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r13);

        $z0 = virtualinvoke $r2.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label09;

        r21 = virtualinvoke r20.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        goto label10;

     label09:
        r20 = null;

     label10:
        goto label13;

     label11:
        $r17 := @caughtexception;

        r20 = null;

        goto label13;

     label12:
        r20 = null;

     label13:
        if r21 == null goto label05;

     label14:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r1, r21, r10);

     label15:
        goto label05;

     label16:
        $r16 := @caughtexception;

        r22 = $r16;

        r20 = null;

        goto label05;

     label17:
        if r20 != null goto label18;

        if r22 == null goto label18;

        $r6 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r6.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("TrustAnchor found but certificate validation failed.", r22);

        throw $r6;

     label18:
        return r20;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label08 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    protected static void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXParameters) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate r0;
        java.util.Iterator $r3;
        java.util.Collection $r1, $r2;
        org.bouncycastle.x509.ExtendedPKIXParameters r10;
        java.lang.Integer $r7;
        java.util.List r5;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String r9;
        boolean $z0, $z1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r10 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.List) $r4;

        $r6 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(6);

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(1);

        r9 = (java.lang.String) $r8;

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,org.bouncycastle.x509.ExtendedPKIXParameters)>(r9, r10);

     label2:
        goto label1;

     label3:
        return;
    }

    protected static javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)
    {
        java.security.Principal[] $r3;
        java.security.cert.X509Certificate $r6;
        javax.security.auth.x500.X500Principal $r5, $r7;
        org.bouncycastle.x509.X509AttributeCertificate $r1;
        java.security.Principal $r4;
        org.bouncycastle.x509.AttributeCertificateIssuer $r2;
        java.lang.Object r0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r6 = (java.security.cert.X509Certificate) r0;

        $r7 = virtualinvoke $r6.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r7;

     label1:
        $r1 = (org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r4 = $r3[0];

        $r5 = (javax.security.auth.x500.X500Principal) $r4;

        return $r5;
    }

    protected static java.util.Date getValidDate(java.security.cert.PKIXParameters)
    {
        java.util.Date $r1, $r2, r3;
        java.security.cert.PKIXParameters r0;

        r0 := @parameter0: java.security.cert.PKIXParameters;

        $r1 = virtualinvoke r0.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        r3 = $r1;

        if $r1 != null goto label1;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        r3 = $r2;

     label1:
        return r3;
    }

    protected static javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r1;
    }

    protected static boolean isSelfIssued(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.security.Principal $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    protected static org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension, java.lang.String) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        byte[] $r2;
        org.bouncycastle.asn1.DERObject $r3;
        java.security.cert.X509Extension r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.cert.X509Extension;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.security.cert.X509Extension: byte[] getExtensionValue(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getObject(java.lang.String,byte[])>(r1, $r2);

        return $r3;
    }

    private static org.bouncycastle.asn1.DERObject getObject(java.lang.String, byte[]) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        byte[] r1, $r5;
        org.bouncycastle.asn1.DERObject $r2, $r6;
        org.bouncycastle.asn1.ASN1InputStream $r0, $r4;
        java.lang.Exception $r7;
        org.bouncycastle.asn1.ASN1OctetString r3;
        org.bouncycastle.jce.provider.AnnotatedException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String r11, $r13;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r1);

        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        r3 = (org.bouncycastle.asn1.ASN1OctetString) $r2;

        $r4 = new org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke r3.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing extension ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @parameter0: java.security.cert.X509CRL;

        $r1 = virtualinvoke r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        return $r1;
    }

    protected static org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey) throws java.security.cert.CertPathValidatorException
    {
        byte[] $r2;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r4;
        org.bouncycastle.asn1.DERObject $r3;
        java.security.PublicKey r1;
        org.bouncycastle.asn1.ASN1InputStream $r0;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r7;
        java.lang.Exception $r6;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r5;

        r1 := @parameter0: java.security.PublicKey;

     label1:
        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        $r2 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r2);

        $r3 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r7.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Subject public key cannot be decoded.", $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static final java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector, java.util.List) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        org.bouncycastle.util.StoreException $r9;
        org.bouncycastle.x509.X509Store r12;
        java.util.HashSet $r0;
        org.bouncycastle.jce.provider.AnnotatedException $r8, $r10, r11;
        boolean $z0, $z1, z2;
        java.util.Iterator $r2;
        java.util.Collection $r5, $r6;
        java.security.cert.CertStoreException $r7;
        java.util.List r1;
        org.bouncycastle.x509.X509CRLStoreSelector r4;
        java.security.cert.CertStore r13;
        java.lang.Object $r3;

        r4 := @parameter0: org.bouncycastle.x509.X509CRLStoreSelector;

        r1 := @parameter1: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        r11 = null;

        z2 = 0;

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof org.bouncycastle.x509.X509Store;

        if $z1 == 0 goto label06;

        r12 = (org.bouncycastle.x509.X509Store) $r3;

     label02:
        $r6 = virtualinvoke r12.<org.bouncycastle.x509.X509Store: java.util.Collection getMatches(org.bouncycastle.util.Selector)>(r4);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

        z2 = 1;

     label03:
        goto label05;

     label04:
        $r9 := @caughtexception;

        $r10 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r10.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception searching in X.509 CRL store.", $r9);

        r11 = $r10;

     label05:
        goto label10;

     label06:
        r13 = (java.security.cert.CertStore) $r3;

     label07:
        $r5 = virtualinvoke r13.<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)>(r4);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        z2 = 1;

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r8.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception searching in X.509 CRL store.", $r7);

        r11 = $r8;

     label10:
        goto label01;

     label11:
        if z2 != 0 goto label12;

        if r11 == null goto label12;

        throw r11;

     label12:
        return $r0;

        catch org.bouncycastle.util.StoreException from label02 to label03 with label04;
        catch java.security.cert.CertStoreException from label07 to label08 with label09;
    }

    protected static final java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence) throws java.security.cert.CertPathValidatorException
    {
        byte[] $r7;
        org.bouncycastle.asn1.ASN1Sequence r1;
        org.bouncycastle.asn1.ASN1OutputStream $r3;
        java.io.ByteArrayOutputStream $r2;
        java.util.Enumeration $r4;
        java.io.IOException $r8;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r9;
        java.util.HashSet $r0;
        java.lang.Object $r5;
        java.security.cert.PolicyQualifierInfo $r6;
        boolean $z0;

        r1 := @parameter0: org.bouncycastle.asn1.ASN1Sequence;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        if r1 != null goto label1;

        return $r0;

     label1:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r3.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r2);

        $r4 = virtualinvoke r1.<org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke $r3.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r5);

        $r6 = new java.security.cert.PolicyQualifierInfo;

        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>($r7);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r9.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info cannot be decoded.", $r8);

        throw $r9;

     label6:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        goto label2;

     label7:
        return $r0;

        catch java.io.IOException from label3 to label4 with label5;
    }

    protected static org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode r0, r2, r3;
        java.util.List[] r4;
        java.security.cert.PolicyNode $r1;
        java.util.ArrayList $r5;
        int $i0, i1;

        r3 := @parameter0: org.bouncycastle.jce.provider.PKIXPolicyNode;

        r4 := @parameter1: java.util.List[];

        r0 := @parameter2: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r1 = virtualinvoke r0.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r2 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r1;

        if r3 != null goto label1;

        return null;

     label1:
        if r2 != null goto label4;

        i1 = 0;

     label2:
        $i0 = lengthof r4;

        if i1 >= $i0 goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r4[i1] = $r5;

        i1 = i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        virtualinvoke r2.<org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>(r0);

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r0);

        return r3;
    }

    private static void removePolicyNodeRecurse(java.util.List[], org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode r1, r5;
        java.util.Iterator $r3;
        java.util.List[] r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List[];

        r1 := @parameter1: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $i0 = virtualinvoke r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: int getDepth()>();

        $r2 = r0[$i0];

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        $z0 = virtualinvoke r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r4;

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void removePolicyNodeRecurse(java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>(r0, r5);

        goto label1;

     label2:
        return;
    }

    protected static boolean processCertD1i(int, java.util.List[], org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode r3, $r9;
        java.util.List[] r0;
        java.util.ArrayList $r10;
        java.util.HashSet $r7;
        int i0, $i1, $i2, i3;
        java.lang.String $r6, $r8, $r12;
        org.bouncycastle.asn1.DERObjectIdentifier r5;
        boolean $z0;
        java.util.Set $r4, r11;
        java.util.List r1, $r13;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r5 := @parameter2: org.bouncycastle.asn1.DERObjectIdentifier;

        r11 := @parameter3: java.util.Set;

        $i1 = i0 - 1;

        r1 = r0[$i1];

        i3 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r2;

        $r4 = virtualinvoke r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r6 = virtualinvoke r5.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = virtualinvoke r5.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8);

        $r9 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r12 = virtualinvoke r5.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r9.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r10, i0, $r7, r3, r11, $r12, 0);

        virtualinvoke r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r9);

        $r13 = r0[i0];

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r9);

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected static void processCertD1ii(int, java.util.List[], org.bouncycastle.asn1.DERObjectIdentifier, java.util.Set)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode r3, $r9;
        java.util.List[] r0;
        java.util.ArrayList $r10;
        java.util.HashSet $r6;
        int i0, $i1, $i2, i3;
        java.lang.String $r4, $r5, $r8, $r12;
        boolean $z0;
        org.bouncycastle.asn1.DERObjectIdentifier r7;
        java.util.Set r11;
        java.util.List r1, $r13;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r7 := @parameter2: org.bouncycastle.asn1.DERObjectIdentifier;

        r11 := @parameter3: java.util.Set;

        $i1 = i0 - 1;

        r1 = r0[$i1];

        i3 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r2;

        $r4 = "2.5.29.32.0";

        $r5 = virtualinvoke r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r8 = virtualinvoke r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r8);

        $r9 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r12 = virtualinvoke r7.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r9.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r10, i0, $r6, r3, r11, $r12, 0);

        virtualinvoke r3.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r9);

        $r13 = r0[i0];

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    protected static void prepareNextCertB1(int, java.util.List[], java.lang.String, java.util.Map, java.security.cert.X509Certificate) throws org.bouncycastle.jce.provider.AnnotatedException, java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate r8;
        org.bouncycastle.asn1.ASN1Sequence $r11, $r32;
        java.util.List[] r0;
        java.util.Enumeration $r12;
        org.bouncycastle.asn1.x509.PolicyInformation $r28;
        java.util.Map r19;
        java.security.cert.CertPathValidatorException $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        org.bouncycastle.asn1.DERObjectIdentifier $r30;
        java.util.Set $r13, $r22, $r24, $r36, r45;
        org.bouncycastle.jce.exception.ExtCertPathValidatorException $r38;
        java.lang.Exception $r39, $r41;
        java.security.cert.PolicyNode $r14;
        java.util.List $r1, $r3, $r23;
        org.bouncycastle.jce.provider.PKIXPolicyNode $r17, $r26, r43, r44;
        org.bouncycastle.asn1.DERObject $r10;
        java.util.ArrayList $r18;
        int i0;
        org.bouncycastle.jce.provider.AnnotatedException $r40, $r42;
        java.lang.String $r6, $r7, $r9, $r15, $r16, r20, $r25, $r29, $r31, $r34;
        java.util.Iterator $r2, $r4;
        java.lang.Object $r5, $r21, $r27, $r33, $r35;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r20 := @parameter2: java.lang.String;

        r19 := @parameter3: java.util.Map;

        r8 := @parameter4: java.security.cert.X509Certificate;

        z7 = 0;

        $r1 = r0[i0];

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r33 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r43 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r33;

        $r34 = virtualinvoke r43.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z6 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r20);

        if $z6 == 0 goto label02;

        z7 = 1;

        $r35 = interfaceinvoke r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        $r36 = (java.util.Set) $r35;

        r43.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r36;

        goto label03;

     label02:
        goto label01;

     label03:
        if z7 != 0 goto label21;

        $r3 = r0[i0];

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r44 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r5;

        $r6 = "2.5.29.32.0";

        $r7 = virtualinvoke r44.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label20;

        r45 = null;

     label05:
        $r9 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r8, $r9);

        $r11 = staticinvoke <org.bouncycastle.asn1.DERSequence: org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r10);

     label06:
        goto label08;

     label07:
        $r41 := @caughtexception;

        $r42 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r42.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certificate policies cannot be decoded.", $r41);

        throw $r42;

     label08:
        $r12 = virtualinvoke $r11.<org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label09:
        $z3 = interfaceinvoke $r12.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label18;

     label10:
        $r27 = interfaceinvoke $r12.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r28 = staticinvoke <org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r27);

     label11:
        goto label13;

     label12:
        $r39 := @caughtexception;

        $r40 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r40.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Policy information cannot be decoded.", $r39);

        throw $r40;

     label13:
        $r29 = "2.5.29.32.0";

        $r30 = virtualinvoke $r28.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.DERObjectIdentifier getPolicyIdentifier()>();

        $r31 = virtualinvoke $r30.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z5 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z5 == 0 goto label17;

     label14:
        $r32 = virtualinvoke $r28.<org.bouncycastle.asn1.x509.PolicyInformation: org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r45 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)>($r32);

     label15:
        goto label18;

     label16:
        $r37 := @caughtexception;

        $r38 = new org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r38.<org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Policy qualifier info set could not be built.", $r37);

        throw $r38;

     label17:
        goto label09;

     label18:
        z8 = 0;

        $r13 = virtualinvoke r8.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r13 == null goto label19;

        $r24 = virtualinvoke r8.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r25 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z8 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>($r25);

     label19:
        $r14 = virtualinvoke r44.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r26 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r14;

        $r15 = "2.5.29.32.0";

        $r16 = virtualinvoke $r26.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 == 0 goto label21;

        $r17 = new org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r21 = interfaceinvoke r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        $r22 = (java.util.Set) $r21;

        specialinvoke $r17.<org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r18, i0, $r22, $r26, r45, r20, z8);

        virtualinvoke $r26.<org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>($r17);

        $r23 = r0[i0];

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label21;

     label20:
        goto label04;

     label21:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.security.cert.CertPathValidatorException from label14 to label15 with label16;
    }

    protected static org.bouncycastle.jce.provider.PKIXPolicyNode prepareNextCertB2(int, java.util.List[], java.lang.String, org.bouncycastle.jce.provider.PKIXPolicyNode)
    {
        org.bouncycastle.jce.provider.PKIXPolicyNode r4, r8, r11, $r12, r13;
        java.util.List[] r0;
        int i0, $i1, i2, i3, $i5;
        java.lang.String $r5, r6;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.security.cert.PolicyNode $r7;
        java.util.List $r1, r9;
        java.lang.Object $r3, $r10;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.List[];

        r6 := @parameter2: java.lang.String;

        r13 := @parameter3: org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r1 = r0[i0];

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r3;

        $r5 = virtualinvoke r4.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label6;

        $r7 = virtualinvoke r4.<org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r8 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r7;

        virtualinvoke r8.<org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4);

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        i2 = i0 - 1;

     label2:
        if i2 < 0 goto label6;

        r9 = r0[i2];

        i3 = 0;

     label3:
        $i1 = interfaceinvoke r9.<java.util.List: int size()>();

        if i3 >= $i1 goto label5;

        $r10 = interfaceinvoke r9.<java.util.List: java.lang.Object get(int)>(i3);

        r11 = (org.bouncycastle.jce.provider.PKIXPolicyNode) $r10;

        $z2 = virtualinvoke r11.<org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z2 != 0 goto label4;

        $r12 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode)>(r13, r0, r11);

        r13 = $r12;

        if $r12 != null goto label4;

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label2;

     label6:
        goto label1;

     label7:
        return r13;
    }

    protected static boolean isAnyPolicy(java.util.Set)
    {
        java.util.Set r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.Set;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected static void addAdditionalStoreFromLocation(java.lang.String, org.bouncycastle.x509.ExtendedPKIXParameters)
    {
        org.bouncycastle.x509.ExtendedPKIXParameters r0;
        org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder $r22;
        org.bouncycastle.x509.X509Store $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r1, $r13, r17, r18, r19;
        boolean $z0, $z1;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r6;
        java.lang.RuntimeException $r23;
        java.lang.Exception $r15;
        java.lang.StringBuilder $r3, $r4, $r12, $r14, $r20, $r21;

        r17 := @parameter0: java.lang.String;

        r0 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        $z0 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: boolean isAdditionalLocationsEnabled()>();

        if $z0 == 0 goto label6;

     label1:
        $z1 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("ldap://");

        if $z1 == 0 goto label4;

        $r1 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>(7);

        r18 = null;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i4 = (int) -1;

        if $i0 == $i4 goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("/");

        r18 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ldap://");

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("/");

        $r13 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ldap://");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r19 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r22 = new org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder;

        specialinvoke $r22.<org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder: void <init>(java.lang.String,java.lang.String)>(r19, r18);

        $r6 = virtualinvoke $r22.<org.bouncycastle.jce.X509LDAPCertStoreParameters$Builder: org.bouncycastle.jce.X509LDAPCertStoreParameters build()>();

        $r7 = staticinvoke <org.bouncycastle.x509.X509Store: org.bouncycastle.x509.X509Store getInstance(java.lang.String,org.bouncycastle.x509.X509StoreParameters,java.lang.String)>("CERTIFICATE/LDAP", $r6, "BC");

        virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: void addAdditionalStore(org.bouncycastle.util.Store)>($r7);

        $r8 = staticinvoke <org.bouncycastle.x509.X509Store: org.bouncycastle.x509.X509Store getInstance(java.lang.String,org.bouncycastle.x509.X509StoreParameters,java.lang.String)>("CRL/LDAP", $r6, "BC");

        virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: void addAdditionalStore(org.bouncycastle.util.Store)>($r8);

        $r9 = staticinvoke <org.bouncycastle.x509.X509Store: org.bouncycastle.x509.X509Store getInstance(java.lang.String,org.bouncycastle.x509.X509StoreParameters,java.lang.String)>("ATTRIBUTECERTIFICATE/LDAP", $r6, "BC");

        virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: void addAdditionalStore(org.bouncycastle.util.Store)>($r9);

        $r10 = staticinvoke <org.bouncycastle.x509.X509Store: org.bouncycastle.x509.X509Store getInstance(java.lang.String,org.bouncycastle.x509.X509StoreParameters,java.lang.String)>("CERTIFICATEPAIR/LDAP", $r6, "BC");

        virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: void addAdditionalStore(org.bouncycastle.util.Store)>($r10);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>("Exception adding X.509 stores.");

        throw $r23;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected static java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector, java.util.List) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Iterator $r2;
        org.bouncycastle.x509.X509CertStoreSelector r4;
        java.util.Collection $r5, $r6;
        org.bouncycastle.util.StoreException $r9;
        org.bouncycastle.x509.X509Store r11;
        java.security.cert.CertStoreException $r7;
        java.util.HashSet $r0;
        java.util.List r1;
        java.security.cert.CertStore r12;
        org.bouncycastle.jce.provider.AnnotatedException $r8, $r10;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r4 := @parameter0: org.bouncycastle.x509.X509CertStoreSelector;

        r1 := @parameter1: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof org.bouncycastle.x509.X509Store;

        if $z1 == 0 goto label06;

        r11 = (org.bouncycastle.x509.X509Store) $r3;

     label02:
        $r6 = virtualinvoke r11.<org.bouncycastle.x509.X509Store: java.util.Collection getMatches(org.bouncycastle.util.Selector)>(r4);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

     label03:
        goto label05;

     label04:
        $r9 := @caughtexception;

        $r10 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r10.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from X.509 store.", $r9);

        throw $r10;

     label05:
        goto label10;

     label06:
        r12 = (java.security.cert.CertStore) $r3;

     label07:
        $r5 = virtualinvoke r12.<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>(r4);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r8.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from certificate store.", $r7);

        throw $r8;

     label10:
        goto label01;

     label11:
        return $r0;

        catch org.bouncycastle.util.StoreException from label02 to label03 with label04;
        catch java.security.cert.CertStoreException from label07 to label08 with label09;
    }

    protected static java.util.Collection findCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector, java.util.List) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Iterator $r2;
        org.bouncycastle.x509.X509AttributeCertStoreSelector r5;
        java.util.Collection $r6;
        org.bouncycastle.util.StoreException $r7;
        org.bouncycastle.x509.X509Store r4;
        java.util.HashSet $r0;
        java.util.List r1;
        org.bouncycastle.jce.provider.AnnotatedException $r8;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r5 := @parameter0: org.bouncycastle.x509.X509AttributeCertStoreSelector;

        r1 := @parameter1: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof org.bouncycastle.x509.X509Store;

        if $z1 == 0 goto label5;

        r4 = (org.bouncycastle.x509.X509Store) $r3;

     label2:
        $r6 = virtualinvoke r4.<org.bouncycastle.x509.X509Store: java.util.Collection getMatches(org.bouncycastle.util.Selector)>(r5);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r8.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from X.509 store.", $r7);

        throw $r8;

     label5:
        goto label1;

     label6:
        return $r0;

        catch org.bouncycastle.util.StoreException from label2 to label3 with label4;
    }

    protected static void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint, org.bouncycastle.x509.ExtendedPKIXParameters) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        org.bouncycastle.asn1.x509.DistributionPointName $r3;
        org.bouncycastle.asn1.x509.GeneralName[] $r6;
        org.bouncycastle.asn1.DEREncodable $r9;
        org.bouncycastle.asn1.x509.DistributionPoint $r2;
        org.bouncycastle.x509.ExtendedPKIXParameters r12;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.bouncycastle.jce.provider.AnnotatedException $r14;
        java.lang.String $r11;
        org.bouncycastle.asn1.DERIA5String $r10;
        org.bouncycastle.asn1.ASN1Encodable $r4;
        org.bouncycastle.asn1.x509.CRLDistPoint r0;
        java.lang.Exception $r13;
        org.bouncycastle.asn1.x509.GeneralName $r7, $r8;
        org.bouncycastle.asn1.x509.GeneralNames $r5;
        org.bouncycastle.asn1.x509.DistributionPoint[] $r1;

        r0 := @parameter0: org.bouncycastle.asn1.x509.CRLDistPoint;

        r12 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        if r0 == null goto label9;

     label1:
        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.x509.CRLDistPoint: org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", $r13);

        throw $r14;

     label4:
        i4 = 0;

     label5:
        $i0 = lengthof $r1;

        if i4 >= $i0 goto label9;

        $r2 = $r1[i4];

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.DistributionPoint: org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r3 == null goto label8;

        $i1 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i1 != 0 goto label8;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.DistributionPointName: org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r5 = staticinvoke <org.bouncycastle.asn1.x509.GeneralNames: org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.GeneralNames: org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i5 = 0;

     label6:
        $i2 = lengthof $r6;

        if i5 >= $i2 goto label8;

        $r7 = $r6[i5];

        $i3 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i3 != 6 goto label7;

        $r8 = $r6[i5];

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r10 = staticinvoke <org.bouncycastle.asn1.DERIA5String: org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoreFromLocation(java.lang.String,org.bouncycastle.x509.ExtendedPKIXParameters)>($r11, r12);

     label7:
        i5 = i5 + 1;

        goto label6;

     label8:
        i4 = i4 + 1;

        goto label5;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint, java.util.Collection, java.security.cert.X509CRLSelector, org.bouncycastle.x509.ExtendedPKIXParameters) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        byte[] $r10, $r21;
        org.bouncycastle.asn1.x509.GeneralName[] $r15;
        org.bouncycastle.x509.ExtendedPKIXParameters r26;
        java.security.cert.X509CRLSelector r7;
        boolean $z0, $z1;
        java.util.Collection r4;
        org.bouncycastle.asn1.x509.GeneralName $r16, $r18;
        org.bouncycastle.asn1.x509.DistributionPointName $r3;
        javax.security.auth.x500.X500Principal $r9, $r12, $r17;
        org.bouncycastle.asn1.DERObject $r20;
        org.bouncycastle.asn1.DEREncodable $r19;
        org.bouncycastle.asn1.x509.DistributionPoint r1;
        java.util.ArrayList $r0;
        int $i0, $i1, i2;
        org.bouncycastle.jce.provider.AnnotatedException $r13, $r23, $r25;
        java.util.Iterator $r5, $r6;
        java.io.IOException $r22, $r24;
        org.bouncycastle.asn1.x509.GeneralNames $r2, $r14;
        java.lang.Object $r8, $r11;

        r1 := @parameter0: org.bouncycastle.asn1.x509.DistributionPoint;

        r4 := @parameter1: java.util.Collection;

        r7 := @parameter2: java.security.cert.X509CRLSelector;

        r26 := @parameter3: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.bouncycastle.asn1.x509.DistributionPoint: org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r2 == null goto label07;

        $r14 = virtualinvoke r1.<org.bouncycastle.asn1.x509.DistributionPoint: org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.asn1.x509.GeneralNames: org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i2 = 0;

     label01:
        $i0 = lengthof $r15;

        if i2 >= $i0 goto label06;

        $r16 = $r15[i2];

        $i1 = virtualinvoke $r16.<org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i1 != 4 goto label05;

     label02:
        $r17 = new javax.security.auth.x500.X500Principal;

        $r18 = $r15[i2];

        $r19 = virtualinvoke $r18.<org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.DEREncodable getName()>();

        $r20 = interfaceinvoke $r19.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r21 = virtualinvoke $r20.<org.bouncycastle.asn1.DERObject: byte[] getEncoded()>();

        specialinvoke $r17.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r21);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

     label03:
        goto label05;

     label04:
        $r24 := @caughtexception;

        $r25 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL issuer information from distribution point cannot be decoded.", $r24);

        throw $r25;

     label05:
        i2 = i2 + 1;

        goto label01;

     label06:
        goto label10;

     label07:
        $r3 = virtualinvoke r1.<org.bouncycastle.asn1.x509.DistributionPoint: org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r3 != null goto label08;

        $r13 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r13.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL issuer is omitted from distribution point but no distributionPoint field present.");

        throw $r13;

     label08:
        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (javax.security.auth.x500.X500Principal) $r11;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label09;

     label10:
        $r6 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

     label12:
        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (javax.security.auth.x500.X500Principal) $r8;

        $r10 = virtualinvoke $r9.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r7.<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>($r10);

     label13:
        goto label11;

     label14:
        $r22 := @caughtexception;

        $r23 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot decode CRL issuer information.", $r22);

        throw $r23;

     label15:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label12 to label13 with label14;
    }

    private static java.math.BigInteger getSerialNumber(java.lang.Object)
    {
        java.security.cert.X509Certificate $r3;
        java.lang.Object r0;
        java.math.BigInteger $r2, $r4;
        boolean $z0;
        org.bouncycastle.x509.X509AttributeCertificate $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label1;

        $r3 = (java.security.cert.X509Certificate) r0;

        $r4 = virtualinvoke $r3.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        return $r4;

     label1:
        $r1 = (org.bouncycastle.x509.X509AttributeCertificate) r0;

        $r2 = interfaceinvoke $r1.<org.bouncycastle.x509.X509AttributeCertificate: java.math.BigInteger getSerialNumber()>();

        return $r2;
    }

    protected static void getCertStatus(java.util.Date, java.security.cert.X509CRL, java.lang.Object, org.bouncycastle.jce.provider.CertStatus) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        byte[] $r3;
        org.bouncycastle.asn1.ASN1Sequence $r5;
        java.security.cert.X509CRLEntry $r8;
        java.util.Date r11, $r13, $r30;
        java.security.cert.X509CRL r2;
        byte $b7;
        java.math.BigInteger $r7, $r14, $r15, $r16, $r17, $r18;
        org.bouncycastle.asn1.ASN1Object $r4;
        boolean $z0, $z1, $z2;
        org.bouncycastle.asn1.DERObjectIdentifier $r19;
        java.lang.Exception $r24, $r26;
        org.bouncycastle.jce.provider.X509CRLEntryObject r28;
        org.bouncycastle.jce.provider.X509CRLObject $r32;
        javax.security.auth.x500.X500Principal $r9, $r10, $r22, $r23;
        org.bouncycastle.asn1.DERObject $r21;
        long $l5, $l6;
        int $i0, $i1, $i2, $i3, $i4, $i8;
        org.bouncycastle.jce.provider.AnnotatedException $r33, $r34;
        java.lang.String $r20;
        org.bouncycastle.asn1.x509.CertificateList $r31;
        org.bouncycastle.asn1.DEREnumerated r29;
        org.bouncycastle.jce.provider.CertStatus r12;
        java.lang.Object r6;

        r11 := @parameter0: java.util.Date;

        r2 := @parameter1: java.security.cert.X509CRL;

        r6 := @parameter2: java.lang.Object;

        r12 := @parameter3: org.bouncycastle.jce.provider.CertStatus;

     label01:
        $r32 = new org.bouncycastle.jce.provider.X509CRLObject;

        $r31 = new org.bouncycastle.asn1.x509.CertificateList;

        $r3 = virtualinvoke r2.<java.security.cert.X509CRL: byte[] getEncoded()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r3);

        $r5 = (org.bouncycastle.asn1.ASN1Sequence) $r4;

        specialinvoke $r31.<org.bouncycastle.asn1.x509.CertificateList: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r5);

        specialinvoke $r32.<org.bouncycastle.jce.provider.X509CRLObject: void <init>(org.bouncycastle.asn1.x509.CertificateList)>($r31);

     label02:
        goto label04;

     label03:
        $r26 := @caughtexception;

        $r33 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r33.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Bouncy Castle X509CRLObject could not be created.", $r26);

        throw $r33;

     label04:
        $r7 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.math.BigInteger getSerialNumber(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r32.<org.bouncycastle.jce.provider.X509CRLObject: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r7);

        r28 = (org.bouncycastle.jce.provider.X509CRLEntryObject) $r8;

        if r28 == null goto label13;

        $r9 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $r10 = virtualinvoke r28.<org.bouncycastle.jce.provider.X509CRLEntryObject: javax.security.auth.x500.X500Principal getCertificateIssuer()>();

        $z0 = virtualinvoke $r9.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label05;

        $r22 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $r23 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $z2 = virtualinvoke $r22.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label13;

     label05:
        r29 = null;

        $z1 = virtualinvoke r28.<org.bouncycastle.jce.provider.X509CRLEntryObject: boolean hasExtensions()>();

        if $z1 == 0 goto label09;

     label06:
        $r19 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier ReasonCode>;

        $r20 = virtualinvoke $r19.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r21 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r28, $r20);

        r29 = staticinvoke <org.bouncycastle.asn1.DEREnumerated: org.bouncycastle.asn1.DEREnumerated getInstance(java.lang.Object)>($r21);

     label07:
        goto label09;

     label08:
        $r24 := @caughtexception;

        $r34 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r34.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Reason code CRL entry extension could not be decoded.", $r24);

     label09:
        $l5 = virtualinvoke r11.<java.util.Date: long getTime()>();

        $r30 = virtualinvoke r28.<org.bouncycastle.jce.provider.X509CRLEntryObject: java.util.Date getRevocationDate()>();

        $l6 = virtualinvoke $r30.<java.util.Date: long getTime()>();

        $b7 = $l5 cmp $l6;

        $i8 = (int) $b7;

        if $i8 >= 0 goto label10;

        if r29 == null goto label10;

        $r15 = virtualinvoke r29.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i1 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        if $i1 == 0 goto label10;

        $r16 = virtualinvoke r29.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i2 = virtualinvoke $r16.<java.math.BigInteger: int intValue()>();

        if $i2 == 1 goto label10;

        $r17 = virtualinvoke r29.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i3 = virtualinvoke $r17.<java.math.BigInteger: int intValue()>();

        if $i3 == 2 goto label10;

        $r18 = virtualinvoke r29.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r18.<java.math.BigInteger: int intValue()>();

        if $i4 != 8 goto label13;

     label10:
        if r29 == null goto label11;

        $r14 = virtualinvoke r29.<org.bouncycastle.asn1.DEREnumerated: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        virtualinvoke r12.<org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>($i0);

        goto label12;

     label11:
        virtualinvoke r12.<org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(0);

     label12:
        $r13 = virtualinvoke r28.<org.bouncycastle.jce.provider.X509CRLEntryObject: java.util.Date getRevocationDate()>();

        virtualinvoke r12.<org.bouncycastle.jce.provider.CertStatus: void setRevocationDate(java.util.Date)>($r13);

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    protected static java.util.Set getDeltaCRLs(java.util.Date, org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509CRL) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        byte[] $r6, $r10;
        java.util.Date $r2, r3, $r24;
        org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509CRL r4, r22;
        java.math.BigInteger $r11, r33, $r34;
        boolean $z0, $z1;
        java.util.Collection $r14, $r16, $r18;
        java.lang.Exception $r27, $r29;
        java.util.List $r13, $r15, $r17;
        org.bouncycastle.x509.X509CRLStoreSelector $r0;
        javax.security.auth.x500.X500Principal $r5;
        org.bouncycastle.asn1.DERObject $r8;
        java.util.HashSet $r12, $r19;
        org.bouncycastle.jce.provider.AnnotatedException $r25, $r26, $r28, $r30, $r32;
        java.lang.String $r7, $r9;
        java.util.Iterator $r20;
        java.io.IOException $r31;
        org.bouncycastle.asn1.DERInteger $r23;
        java.lang.Object $r21;

        r3 := @parameter0: java.util.Date;

        r1 := @parameter1: org.bouncycastle.x509.ExtendedPKIXParameters;

        r4 := @parameter2: java.security.cert.X509CRL;

        $r0 = new org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        $r2 = virtualinvoke r1.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Date getDate()>();

        if $r2 == null goto label01;

        $r24 = virtualinvoke r1.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Date getDate()>();

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setDateAndTime(java.util.Date)>($r24);

        goto label02;

     label01:
        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setDateAndTime(java.util.Date)>(r3);

     label02:
        $r5 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r4);

        $r6 = virtualinvoke $r5.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r6);

     label03:
        goto label05;

     label04:
        $r31 := @caughtexception;

        $r32 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r32.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot extract issuer from CRL.", $r31);

     label05:
        r33 = null;

     label06:
        $r7 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER>;

        $r8 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: org.bouncycastle.asn1.DERObject getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r7);

        if $r8 == null goto label07;

        $r23 = staticinvoke <org.bouncycastle.asn1.x509.CRLNumber: org.bouncycastle.asn1.DERInteger getInstance(java.lang.Object)>($r8);

        r33 = virtualinvoke $r23.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getPositiveValue()>();

     label07:
        goto label09;

     label08:
        $r29 := @caughtexception;

        $r30 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r30.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL number extension could not be extracted from CRL.", $r29);

        throw $r30;

     label09:
        $r9 = <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r10 = virtualinvoke r4.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r9);

     label10:
        goto label12;

     label11:
        $r27 := @caughtexception;

        $r28 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r28.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension value could not be read.", $r27);

        throw $r28;

     label12:
        if r33 != null goto label13;

        $r34 = null;

        goto label14;

     label13:
        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r34 = virtualinvoke r33.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r11);

     label14:
        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setMinCRLNumber(java.math.BigInteger)>($r34);

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPoint(byte[])>($r10);

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setIssuingDistributionPointEnabled(boolean)>(1);

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setMaxBaseCRLNumber(java.math.BigInteger)>(r33);

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

     label15:
        $r13 = virtualinvoke r1.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getAdditionalStores()>();

        $r14 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r13);

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r14);

        $r15 = virtualinvoke r1.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        $r16 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r15);

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r16);

        $r17 = virtualinvoke r1.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getCertStores()>();

        $r18 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r17);

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r18);

     label16:
        goto label18;

     label17:
        $r25 := @caughtexception;

        $r26 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not search for delta CRLs.", $r25);

        throw $r26;

     label18:
        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        $r20 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.security.cert.X509CRL) $r21;

        $z1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isDeltaCRL(java.security.cert.X509CRL)>(r22);

        if $z1 == 0 goto label20;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r22);

     label20:
        goto label19;

     label21:
        return $r19;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label11;
        catch org.bouncycastle.jce.provider.AnnotatedException from label15 to label16 with label17;
    }

    private static boolean isDeltaCRL(java.security.cert.X509CRL)
    {
        java.security.cert.X509CRL r0;
        java.util.Set $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.X509CRL;

        $r1 = virtualinvoke r0.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

        $r2 = <org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }

    protected static java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.util.Date, org.bouncycastle.x509.ExtendedPKIXParameters) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate $r32, r43;
        java.util.Date r6, $r30, $r41;
        org.bouncycastle.x509.ExtendedPKIXParameters r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.security.Principal[] $r25, $r35;
        java.util.Collection $r9, $r11, $r13;
        java.util.List $r8, $r10, $r12;
        org.bouncycastle.x509.X509CRLStoreSelector $r0;
        java.security.Principal $r26, $r36;
        org.bouncycastle.x509.AttributeCertificateIssuer $r24, $r34;
        java.lang.StringBuilder $r15, $r16, $r18, $r19, $r22, $r23, $r27, $r28;
        javax.security.auth.x500.X500Principal $r3, $r17;
        org.bouncycastle.asn1.x509.DistributionPoint r4;
        java.util.HashSet $r1, $r7;
        org.bouncycastle.jce.provider.AnnotatedException $r14, $r21, $r37, $r38, $r39, $r40;
        java.lang.String $r20, $r29;
        org.bouncycastle.x509.X509AttributeCertificate $r31, $r33, r42;
        java.lang.Object r2;

        r4 := @parameter0: org.bouncycastle.asn1.x509.DistributionPoint;

        r2 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.util.Date;

        r5 := @parameter3: org.bouncycastle.x509.ExtendedPKIXParameters;

        $r0 = new org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

     label01:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $z0 = r2 instanceof org.bouncycastle.x509.X509AttributeCertificate;

        if $z0 == 0 goto label02;

        $r33 = (org.bouncycastle.x509.X509AttributeCertificate) r2;

        $r34 = interfaceinvoke $r33.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r35 = virtualinvoke $r34.<org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r36 = $r35[0];

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r36);

        goto label03;

     label02:
        $r3 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r2);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

     label03:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)>(r4, $r1, $r0, r5);

     label04:
        goto label06;

     label05:
        $r39 := @caughtexception;

        $r40 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r40.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get issuer information from distribution point.", $r39);

     label06:
        $z1 = r2 instanceof java.security.cert.X509Certificate;

        if $z1 == 0 goto label07;

        $r32 = (java.security.cert.X509Certificate) r2;

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r32);

        goto label08;

     label07:
        $z2 = r2 instanceof org.bouncycastle.x509.X509AttributeCertificate;

        if $z2 == 0 goto label08;

        $r31 = (org.bouncycastle.x509.X509AttributeCertificate) r2;

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setAttrCertificateChecking(org.bouncycastle.x509.X509AttributeCertificate)>($r31);

     label08:
        $r41 = virtualinvoke r5.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Date getDate()>();

        if $r41 == null goto label09;

        $r30 = virtualinvoke r5.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.Date getDate()>();

        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setDateAndTime(java.util.Date)>($r30);

        goto label10;

     label09:
        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setDateAndTime(java.util.Date)>(r6);

     label10:
        virtualinvoke $r0.<org.bouncycastle.x509.X509CRLStoreSelector: void setCompleteCRLEnabled(boolean)>(1);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

     label11:
        $r8 = virtualinvoke r5.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        $r9 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r8);

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

        $r10 = virtualinvoke r5.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getAdditionalStores()>();

        $r11 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r10);

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

        $r12 = virtualinvoke r5.<org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getCertStores()>();

        $r13 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)>($r0, $r12);

        interfaceinvoke $r7.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label12:
        goto label14;

     label13:
        $r37 := @caughtexception;

        $r38 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r38.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not search for CRLs.", $r37);

        throw $r38;

     label14:
        $z3 = interfaceinvoke $r7.<java.util.Set: boolean isEmpty()>();

        if $z3 == 0 goto label16;

        $z4 = r2 instanceof org.bouncycastle.x509.X509AttributeCertificate;

        if $z4 == 0 goto label15;

        r42 = (org.bouncycastle.x509.X509AttributeCertificate) r2;

        $r21 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r24 = interfaceinvoke r42.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r25 = virtualinvoke $r24.<org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r26 = $r25[0];

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r29);

        throw $r21;

     label15:
        r43 = (java.security.cert.X509Certificate) r2;

        $r14 = new org.bouncycastle.jce.provider.AnnotatedException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No CRLs found for issuer \"");

        $r17 = virtualinvoke r43.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label16:
        return $r7;

        catch org.bouncycastle.jce.provider.AnnotatedException from label01 to label04 with label05;
        catch org.bouncycastle.jce.provider.AnnotatedException from label11 to label12 with label13;
    }

    protected static java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.CertPath, int) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate $r5, $r10, $r15;
        byte[] $r12;
        java.util.Date $r1, $r6, $r16, $r17, $r19;
        org.bouncycastle.x509.ExtendedPKIXParameters r0;
        org.bouncycastle.asn1.DERGeneralizedTime r26;
        java.text.ParseException $r20;
        org.bouncycastle.asn1.ASN1Object $r18;
        org.bouncycastle.asn1.DERObjectIdentifier $r9;
        java.util.List $r3, $r7, $r13;
        int $i0, i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.jce.provider.AnnotatedException $r21, $r23, $r25;
        java.lang.String $r11;
        java.io.IOException $r24;
        java.security.cert.CertPath r2;
        java.lang.IllegalArgumentException $r22;
        java.lang.Object $r4, $r8, $r14;

        r0 := @parameter0: org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter1: java.security.cert.CertPath;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i0 != 1 goto label12;

        if i1 > 0 goto label01;

        $r19 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r19;

     label01:
        $i2 = i1 - 1;

        if $i2 != 0 goto label11;

        r26 = null;

     label02:
        $r7 = virtualinvoke r2.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i4 = i1 - 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i4);

        $r10 = (java.security.cert.X509Certificate) $r8;

        $r9 = <org.bouncycastle.asn1.isismtt.ISISMTTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_isismtt_at_dateOfCertGen>;

        $r11 = virtualinvoke $r9.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r12 = virtualinvoke $r10.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r11);

        if $r12 == null goto label03;

        $r18 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r12);

        r26 = staticinvoke <org.bouncycastle.asn1.DERGeneralizedTime: org.bouncycastle.asn1.DERGeneralizedTime getInstance(java.lang.Object)>($r18);

     label03:
        goto label06;

     label04:
        $r24 := @caughtexception;

        $r25 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r25;

     label05:
        $r22 := @caughtexception;

        $r23 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Date of cert gen extension could not be read.");

        throw $r23;

     label06:
        if r26 == null goto label10;

     label07:
        $r17 = virtualinvoke r26.<org.bouncycastle.asn1.DERGeneralizedTime: java.util.Date getDate()>();

     label08:
        return $r17;

     label09:
        $r20 := @caughtexception;

        $r21 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r21.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Date from date of cert gen extension could not be parsed.", $r20);

        throw $r21;

     label10:
        $r13 = virtualinvoke r2.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i5 = i1 - 1;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i5);

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r16;

     label11:
        $r3 = virtualinvoke r2.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i3 = i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        return $r6;

     label12:
        $r1 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(java.security.cert.PKIXParameters)>(r0);

        return $r1;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.IllegalArgumentException from label02 to label03 with label05;
        catch java.text.ParseException from label07 to label08 with label09;
    }

    protected static java.security.PublicKey getNextWorkingKey(java.util.List, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate r8;
        int i0, $i1, i2;
        java.math.BigInteger $r14, $r15, $r16, $r17;
        java.security.cert.CertPathValidatorException $r6, $r20;
        java.lang.String $r23;
        boolean $z0, $z1;
        java.security.PublicKey $r3, $r9, $r19;
        java.lang.RuntimeException $r22;
        java.lang.Exception $r21;
        java.security.KeyFactory $r18;
        java.security.spec.DSAPublicKeySpec $r13;
        java.util.List r0;
        java.security.cert.Certificate r2;
        java.security.interfaces.DSAPublicKey r4, r10;
        java.lang.Object $r1, $r7;
        java.security.interfaces.DSAParams $r5, $r11, $r12;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.Certificate) $r1;

        $r3 = virtualinvoke r2.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $z0 = $r3 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 != 0 goto label01;

        return $r3;

     label01:
        r4 = (java.security.interfaces.DSAPublicKey) $r3;

        $r5 = interfaceinvoke r4.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r5 == null goto label02;

        return r4;

     label02:
        i2 = i0 + 1;

     label03:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 >= $i1 goto label10;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (java.security.cert.X509Certificate) $r7;

        $r9 = virtualinvoke r8.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z1 = $r9 instanceof java.security.interfaces.DSAPublicKey;

        if $z1 != 0 goto label04;

        $r20 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r20.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw $r20;

     label04:
        r10 = (java.security.interfaces.DSAPublicKey) $r9;

        $r11 = interfaceinvoke r10.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        if $r11 != null goto label05;

        goto label09;

     label05:
        $r12 = interfaceinvoke r10.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r13 = new java.security.spec.DSAPublicKeySpec;

        $r14 = interfaceinvoke r4.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $r15 = interfaceinvoke $r12.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r16 = interfaceinvoke $r12.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r17 = interfaceinvoke $r12.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r13.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r14, $r15, $r16, $r17);

     label06:
        $r18 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>("DSA", "BC");

        $r19 = virtualinvoke $r18.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r13);

     label07:
        return $r19;

     label08:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        $r23 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label09:
        i2 = i2 + 1;

        goto label03;

     label10:
        $r6 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r6.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("DSA parameters cannot be inherited from previous certificate.");

        throw $r6;

        catch java.lang.Exception from label06 to label07 with label08;
    }

    protected static java.util.Collection findIssuerCerts(java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXBuilderParameters) throws org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509Certificate r2, r19;
        byte[] $r4;
        javax.security.auth.x500.X500Principal $r3;
        java.util.ArrayList $r5;
        java.util.HashSet $r1;
        org.bouncycastle.jce.provider.AnnotatedException $r15, $r16, $r18;
        boolean $z0;
        java.util.Iterator $r13;
        org.bouncycastle.x509.X509CertStoreSelector $r0;
        java.util.Collection $r8, $r10, $r12;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters r6;
        java.io.IOException $r17;
        java.util.List $r7, $r9, $r11;
        java.lang.Object $r14;

        r2 := @parameter0: java.security.cert.X509Certificate;

        r6 := @parameter1: org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        $r0 = new org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r0.<org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

     label1:
        $r3 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r4 = virtualinvoke $r3.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r0.<org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r4);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        $r18 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r18.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Subject criteria for certificate selector to find issuer certificate could not be set.", $r17);

        throw $r18;

     label4:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r7 = virtualinvoke r6.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getCertStores()>();

        $r8 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r0, $r7);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke r6.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r0, $r9);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        $r11 = virtualinvoke r6.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getAdditionalStores()>();

        $r12 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r0, $r11);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r12);

        $r13 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        $r16 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer certificate cannot be searched.", $r15);

        throw $r16;

     label7:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.security.cert.X509Certificate) $r14;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r19);

        goto label7;

     label8:
        return $r1;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.bouncycastle.jce.provider.AnnotatedException from label4 to label5 with label6;
    }

    protected static void verifyX509Certificate(java.security.cert.X509Certificate, java.security.PublicKey, java.lang.String) throws java.security.GeneralSecurityException
    {
        java.security.cert.X509Certificate r1;
        java.security.PublicKey r2;
        java.lang.String r0;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: java.security.PublicKey;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(r2);

        goto label2;

     label1:
        virtualinvoke r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>(r2, r0);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r28;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        org.bouncycastle.asn1.DERObjectIdentifier $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: int CRL_SIGN> = 6;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: int KEY_CERT_SIGN> = 5;

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CertificatePolicies>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CERTIFICATE_POLICIES> = $r1;

        $r2 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier BasicConstraints>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String BASIC_CONSTRAINTS> = $r3;

        $r4 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyMappings>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_MAPPINGS> = $r5;

        $r6 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectAlternativeName>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r7;

        $r8 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier NameConstraints>;

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String NAME_CONSTRAINTS> = $r9;

        $r10 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier KeyUsage>;

        $r11 = virtualinvoke $r10.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String KEY_USAGE> = $r11;

        $r12 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier InhibitAnyPolicy>;

        $r13 = virtualinvoke $r12.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r13;

        $r14 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier IssuingDistributionPoint>;

        $r15 = virtualinvoke $r14.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r15;

        $r16 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier DeltaCRLIndicator>;

        $r17 = virtualinvoke $r16.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r17;

        $r18 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier PolicyConstraints>;

        $r19 = virtualinvoke $r18.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String POLICY_CONSTRAINTS> = $r19;

        $r20 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier FreshestCRL>;

        $r21 = virtualinvoke $r20.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String FRESHEST_CRL> = $r21;

        $r22 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CRLDistributionPoints>;

        $r23 = virtualinvoke $r22.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r23;

        $r24 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier AuthorityKeyIdentifier>;

        $r25 = virtualinvoke $r24.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER> = $r25;

        $r26 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier CRLNumber>;

        $r27 = virtualinvoke $r26.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String CRL_NUMBER> = $r27;

        $r28 = newarray (java.lang.String)[11];

        $r28[0] = "unspecified";

        $r28[1] = "keyCompromise";

        $r28[2] = "cACompromise";

        $r28[3] = "affiliationChanged";

        $r28[4] = "superseded";

        $r28[5] = "cessationOfOperation";

        $r28[6] = "certificateHold";

        $r28[7] = "unknown";

        $r28[8] = "removeFromCRL";

        $r28[9] = "privilegeWithdrawn";

        $r28[10] = "aACompromise";

        <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.lang.String[] crlReasons> = $r28;

        return;
    }
}
