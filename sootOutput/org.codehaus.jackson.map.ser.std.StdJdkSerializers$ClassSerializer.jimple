public final class org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer extends org.codehaus.jackson.map.ser.std.ScalarSerializerBase
{

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.ScalarSerializerBase: void <init>(java.lang.Class,boolean)>(class "Ljava/lang/Class;", 0);

        return;
    }

    public void serialize(java.lang.Class, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer r3;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.SerializerProvider r4;
        java.lang.Class r1;
        java.lang.String $r2;

        r3 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r2);

        return;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type)
    {
        org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer r0;
        java.lang.reflect.Type r3;
        org.codehaus.jackson.map.SerializerProvider r2;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer;

        r2 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r3 := @parameter1: java.lang.reflect.Type;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);

        return $r1;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer r0;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        java.lang.Class $r4;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.lang.Class) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer: void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
