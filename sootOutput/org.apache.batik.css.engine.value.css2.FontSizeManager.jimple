public class org.apache.batik.css.engine.value.css2.FontSizeManager extends org.apache.batik.css.engine.value.LengthManager
{
    protected static final org.apache.batik.css.engine.value.StringMap values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.LengthManager: void <init>()>();

        return;
    }

    public org.apache.batik.css.engine.value.StringMap getIdentifiers()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r1;
        org.apache.batik.css.engine.value.StringMap $r0;

        r1 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        $r0 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        return $r0;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return 1;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return 1;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return "font-size";
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return 39;
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        $r0 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value MEDIUM_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r7;
        org.apache.batik.css.engine.value.Value $r6, $r9, $r11;
        org.apache.batik.css.engine.CSSEngine r10;
        short $s0;
        org.w3c.dom.DOMException $r8;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r3;
        org.apache.batik.css.engine.value.StringMap $r4;

        r7 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r10 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 12: goto label1;
            case 35: goto label2;
            default: goto label4;
        };

     label1:
        $r9 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value INHERIT_VALUE>;

        return $r9;

     label2:
        $r1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r4 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r5 = virtualinvoke $r4.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r3);

        if $r5 != null goto label3;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>($r3);

        throw $r8;

     label3:
        $r6 = (org.apache.batik.css.engine.value.Value) $r5;

        return $r6;

     label4:
        $r11 = specialinvoke r7.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>(r0, r10);

        return $r11;
    }

    public org.apache.batik.css.engine.value.Value createStringValue(short, java.lang.String, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r6;
        org.apache.batik.css.engine.value.Value $r5;
        org.apache.batik.css.engine.CSSEngine r9;
        short s0;
        org.w3c.dom.DOMException $r7, $r8;
        int $i1;
        java.lang.Object $r4;
        java.lang.String r0, $r2, $r3;
        org.apache.batik.css.engine.value.StringMap $r1;

        r6 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        s0 := @parameter0: short;

        r0 := @parameter1: java.lang.String;

        r9 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        $i1 = (int) s0;

        if $i1 == 21 goto label1;

        $r8 = virtualinvoke r6.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidStringTypeDOMException(short)>(s0);

        throw $r8;

     label1:
        $r1 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r4 = virtualinvoke $r1.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r3);

        if $r4 != null goto label2;

        $r7 = virtualinvoke r6.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>(r0);

        throw $r7;

     label2:
        $r5 = (org.apache.batik.css.engine.value.Value) $r4;

        return $r5;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r16, $r17;
        org.apache.batik.css.engine.value.FloatValue $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        short $s0;
        java.lang.String $r14, r22;
        org.apache.batik.css.engine.value.Value r0, $r12, $r18, $r23;
        boolean z0;
        org.apache.batik.css.engine.CSSContext $r2, $r4, $r6, $r8, $r10, $r13, $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, f26, f27;
        org.apache.batik.css.engine.CSSEngine r1;
        org.apache.batik.css.engine.StyleMap r15;
        int i5, $i6, $i7, $i8, $i9, $i10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        char $c1, $c2, $c3, $c4;
        org.apache.batik.css.engine.value.css2.FontSizeManager r21;

        r21 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        r16 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r22 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i5 := @parameter3: int;

        r15 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        f25 = 1.0F;

        z0 = 0;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i6 = (int) $s0;

        tableswitch($i6)
        {
            case 1: goto label01;
            case 2: goto label09;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label01;
            case 6: goto label03;
            case 7: goto label02;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label06;
            default: goto label10;
        };

     label01:
        return r0;

     label02:
        $r8 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f14 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r25 = new org.apache.batik.css.engine.value.FloatValue;

        $f15 = interfaceinvoke $r8.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f16 = $f14 / $f15;

        specialinvoke $r25.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f16);

        return $r25;

     label03:
        $r10 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f17 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r26 = new org.apache.batik.css.engine.value.FloatValue;

        $f18 = $f17 * 10.0F;

        $f19 = interfaceinvoke $r10.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f20 = $f18 / $f19;

        specialinvoke $r26.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f20);

        return $r26;

     label04:
        $r6 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f10 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r27 = new org.apache.batik.css.engine.value.FloatValue;

        $f11 = $f10 * 25.4F;

        $f12 = interfaceinvoke $r6.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f13 = $f11 / $f12;

        specialinvoke $r27.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f13);

        return $r27;

     label05:
        $r4 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r28 = new org.apache.batik.css.engine.value.FloatValue;

        $f6 = $f5 * 25.4F;

        $f7 = interfaceinvoke $r4.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f8 = 72.0F * $f7;

        $f9 = $f6 / $f8;

        specialinvoke $r28.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f9);

        return $r28;

     label06:
        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r29 = new org.apache.batik.css.engine.value.FloatValue;

        $f1 = $f0 * 25.4F;

        $f2 = interfaceinvoke $r2.<org.apache.batik.css.engine.CSSContext: float getPixelUnitToMillimeter()>();

        $f3 = 6.0F * $f2;

        $f4 = $f1 / $f3;

        specialinvoke $r29.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f4);

        return $r29;

     label07:
        z0 = 1;

        f25 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        goto label10;

     label08:
        z0 = 1;

        $f21 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        f25 = $f21 * 0.5F;

        goto label10;

     label09:
        z0 = 1;

        $f24 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        f25 = $f24 * 0.01F;

        goto label10;

     label10:
        $r23 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value LARGER_VALUE>;

        if r0 != $r23 goto label11;

        z0 = 1;

        f25 = 1.2F;

        goto label12;

     label11:
        $r12 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value SMALLER_VALUE>;

        if r0 != $r12 goto label12;

        z0 = 1;

        f25 = 0.8333333F;

     label12:
        if z0 == 0 goto label15;

        virtualinvoke r15.<org.apache.batik.css.engine.StyleMap: void putParentRelative(int,boolean)>(i5, 1);

        $r17 = staticinvoke <org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSStylableElement getParentCSSStylableElement(org.w3c.dom.Element)>(r16);

        if $r17 != null goto label13;

        $r20 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        f26 = interfaceinvoke $r20.<org.apache.batik.css.engine.CSSContext: float getMediumFontSize()>();

        goto label14;

     label13:
        $r18 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>($r17, null, i5);

        f26 = interfaceinvoke $r18.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

     label14:
        $r30 = new org.apache.batik.css.engine.value.FloatValue;

        $f23 = f26 * f25;

        specialinvoke $r30.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f23);

        return $r30;

     label15:
        $r13 = virtualinvoke r1.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $f22 = interfaceinvoke $r13.<org.apache.batik.css.engine.CSSContext: float getMediumFontSize()>();

        f27 = $f22;

        $r14 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        $c1 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(0);

        $i7 = (int) $c1;

        lookupswitch($i7)
        {
            case 108: goto label18;
            case 109: goto label16;
            case 115: goto label17;
            default: goto label19;
        };

     label16:
        goto label26;

     label17:
        $d0 = (double) $f22;

        $d1 = $d0 / 1.2;

        f27 = (float) $d1;

        goto label26;

     label18:
        $d2 = (double) $f22;

        $d3 = $d2 * 1.2;

        f27 = (float) $d3;

        goto label26;

     label19:
        $c2 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(1);

        $i8 = (int) $c2;

        lookupswitch($i8)
        {
            case 120: goto label20;
            default: goto label23;
        };

     label20:
        $c3 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(3);

        $i9 = (int) $c3;

        lookupswitch($i9)
        {
            case 115: goto label21;
            default: goto label22;
        };

     label21:
        $d4 = (double) $f22;

        $d5 = $d4 / 1.2;

        $d6 = $d5 / 1.2;

        $d7 = $d6 / 1.2;

        f27 = (float) $d7;

        goto label26;

     label22:
        $d8 = (double) $f22;

        $d9 = $d8 * 1.2;

        $d10 = $d9 * 1.2;

        $d11 = $d10 * 1.2;

        f27 = (float) $d11;

        goto label26;

     label23:
        $c4 = virtualinvoke $r14.<java.lang.String: char charAt(int)>(2);

        $i10 = (int) $c4;

        lookupswitch($i10)
        {
            case 115: goto label24;
            default: goto label25;
        };

     label24:
        $d12 = (double) $f22;

        $d13 = $d12 / 1.2;

        $d14 = $d13 / 1.2;

        f27 = (float) $d14;

        goto label26;

     label25:
        $d15 = (double) $f22;

        $d16 = $d15 * 1.2;

        $d17 = $d16 * 1.2;

        f27 = (float) $d17;

     label26:
        $r31 = new org.apache.batik.css.engine.value.FloatValue;

        specialinvoke $r31.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, f27);

        return $r31;
    }

    protected int getOrientation()
    {
        org.apache.batik.css.engine.value.css2.FontSizeManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.FontSizeManager;

        return 1;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.value.Value $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.apache.batik.css.engine.value.StringMap $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        $r0 = new org.apache.batik.css.engine.value.StringMap;

        specialinvoke $r0.<org.apache.batik.css.engine.value.StringMap: void <init>()>();

        <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values> = $r0;

        $r2 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value ALL_VALUE>;

        virtualinvoke $r2.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("all", $r1);

        $r4 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r3 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value LARGE_VALUE>;

        virtualinvoke $r4.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("large", $r3);

        $r6 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r5 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value LARGER_VALUE>;

        virtualinvoke $r6.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("larger", $r5);

        $r8 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r7 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value MEDIUM_VALUE>;

        virtualinvoke $r8.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("medium", $r7);

        $r10 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r9 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value SMALL_VALUE>;

        virtualinvoke $r10.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("small", $r9);

        $r12 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r11 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value SMALLER_VALUE>;

        virtualinvoke $r12.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("smaller", $r11);

        $r14 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r13 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value X_LARGE_VALUE>;

        virtualinvoke $r14.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("x-large", $r13);

        $r16 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r15 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value X_SMALL_VALUE>;

        virtualinvoke $r16.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("x-small", $r15);

        $r18 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r17 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value XX_LARGE_VALUE>;

        virtualinvoke $r18.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("xx-large", $r17);

        $r20 = <org.apache.batik.css.engine.value.css2.FontSizeManager: org.apache.batik.css.engine.value.StringMap values>;

        $r19 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value XX_SMALL_VALUE>;

        virtualinvoke $r20.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("xx-small", $r19);

        return;
    }
}
