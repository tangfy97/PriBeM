public class org.apache.xmlbeans.impl.values.XmlUnionImpl extends org.apache.xmlbeans.impl.values.XmlObjectBase implements org.apache.xmlbeans.XmlAnySimpleType
{
    private org.apache.xmlbeans.SchemaType _schemaType;
    private org.apache.xmlbeans.XmlAnySimpleType _value;
    private java.lang.String _textvalue;
    private static final int JAVA_NUMBER;
    private static final int JAVA_DATE;
    private static final int JAVA_CALENDAR;
    private static final int JAVA_BYTEARRAY;
    private static final int JAVA_LIST;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$values$XmlUnionImpl;

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue> = "";

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    public org.apache.xmlbeans.SchemaType instanceType()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.SchemaType $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.SchemaType instanceType()>();

     label2:
        return $r4;
    }

    protected java.lang.String compute_text(org.apache.xmlbeans.impl.values.NamespaceManager)
    {
        org.apache.xmlbeans.impl.values.NamespaceManager r2;
        java.lang.String $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceManager;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue>;

        return $r1;
    }

    protected boolean is_defaultable_ws(java.lang.String)
    {
        org.apache.xmlbeans.XmlAnySimpleType r3;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        r3 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_text(java.lang.String)>(r1);

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value> = r3;

     label2:
        return 0;

     label3:
        $r2 := @caughtexception;

        return 1;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label1 to label2 with label3;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.SchemaType[] $r4;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r10;
        org.apache.xmlbeans.SchemaType $r2, $r3, $r7, $r9, $r12, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9, z10, z11, z12, z13;
        org.apache.xmlbeans.XmlAnySimpleType $r11;
        org.apache.xmlbeans.impl.values.NamespaceContext $r13;
        org.apache.xmlbeans.impl.values.TypeStore $r14;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        java.lang.Exception $r22;
        java.lang.Throwable $r21;
        java.lang.Object[] $r6, $r18;
        java.lang.AssertionError $r15;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r5, $r17, $r28;
        java.lang.StringBuffer $r24, $r25, $r26;
        int i0, $i1;
        java.lang.String r1, $r8, $r16, $r20, $r27;
        java.lang.RuntimeException $r23;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r1);

        if $z0 != 0 goto label01;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean _validateOnSet()>();

        if $z5 == 0 goto label01;

        $r17 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = "string";

        $r18[1] = r1;

        $r19 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>($r19);

        $r18[2] = $r20;

        specialinvoke $r17.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r18);

        throw $r17;

     label01:
        $r16 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue>;

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue> = r1;

        $r3 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getUnionConstituentTypes()>();

        $z1 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if $r4 != null goto label02;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label02:
        z6 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean has_store()>();

        if $z2 == 0 goto label03;

        $r13 = new org.apache.xmlbeans.impl.values.NamespaceContext;

        $r14 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        specialinvoke $r13.<org.apache.xmlbeans.impl.values.NamespaceContext: void <init>(org.apache.xmlbeans.impl.values.TypeStore)>($r14);

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void push(org.apache.xmlbeans.impl.values.NamespaceContext)>($r13);

        z6 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

     label03:
        z7 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

     label04:
        if z9 != 0 goto label05;

        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean _validateOnSet()>();

        if $z4 != 0 goto label17;

     label05:
        i0 = 0;

     label06:
        $i1 = lengthof $r4;

        if i0 >= $i1 goto label15;

     label07:
        $r9 = $r4[i0];

        $r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r9;

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlAnySimpleType newValue(java.lang.Object,boolean)>(r1, z10);

        $r12 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean check(org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.SchemaType)>($r11, $r12);

        if $z3 != 0 goto label09;

     label08:
        goto label14;

     label09:
        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value> = $r11;

     label10:
        if z12 == 0 goto label11;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

     label11:
        return;

     label12:
        $r28 := @caughtexception;

        goto label14;

     label13:
        $r22 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Troublesome union exception caused by unexpected ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r22);

        throw $r23;

     label14:
        i0 = i0 + 1;

        goto label06;

     label15:
        if z8 != 0 goto label16;

        goto label17;

     label16:
        z7 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        goto label04;

     label17:
        if z11 == 0 goto label21;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

        goto label21;

     label18:
        $r21 := @caughtexception;

     label19:
        if z13 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

     label20:
        throw $r21;

     label21:
        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue> = $r16;

        $r5 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r7 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>($r7);

        $r6[1] = $r8;

        specialinvoke $r5.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.2.3", $r6);

        throw $r5;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label07 to label08 with label12;
        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label09 to label10 with label12;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Throwable from label03 to label10 with label18;
        catch java.lang.Throwable from label12 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    protected void set_nil()
    {
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value> = null;

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue> = null;

        return;
    }

    protected int get_wscanon_rule()
    {
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        return 1;
    }

    public float getFloatValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        float $f0;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $f0 = 0.0F;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $f0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: float getFloatValue()>();

     label2:
        return $f0;
    }

    public double getDoubleValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        double $d0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $d0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: double getDoubleValue()>();

     label2:
        return $d0;
    }

    public java.math.BigDecimal getBigDecimalValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.math.BigDecimal $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.math.BigDecimal getBigDecimalValue()>();

     label2:
        return $r4;
    }

    public java.math.BigInteger getBigIntegerValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.math.BigInteger $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

     label2:
        return $r4;
    }

    public byte getByteValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        byte $b0;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $b0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: byte getByteValue()>();

     label2:
        return $b0;
    }

    public short getShortValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        short $s0;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $s0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $s0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: short getShortValue()>();

     label2:
        return $s0;
    }

    public int getIntValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        int $i0;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $i0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: int getIntValue()>();

     label2:
        return $i0;
    }

    public long getLongValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        long $l0;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $l0 = 0L;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $l0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: long getLongValue()>();

     label2:
        return $l0;
    }

    public byte[] getByteArrayValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        byte[] $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: byte[] getByteArrayValue()>();

     label2:
        return $r4;
    }

    public boolean getBooleanValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: boolean getBooleanValue()>();

     label2:
        return $z0;
    }

    public java.util.Calendar getCalendarValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.util.Calendar $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.util.Calendar getCalendarValue()>();

     label2:
        return $r4;
    }

    public java.util.Date getDateValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.util.Date $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.util.Date getDateValue()>();

     label2:
        return $r4;
    }

    public org.apache.xmlbeans.GDate getGDateValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.GDate $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.GDate getGDateValue()>();

     label2:
        return $r4;
    }

    public org.apache.xmlbeans.GDuration getGDurationValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.GDuration $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.GDuration getGDurationValue()>();

     label2:
        return $r4;
    }

    public javax.xml.namespace.QName getQNameValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        javax.xml.namespace.QName $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

     label2:
        return $r4;
    }

    public java.util.List getListValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.util.List $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.util.List getListValue()>();

     label2:
        return $r4;
    }

    public java.util.List xgetListValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.util.List $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: java.util.List xgetListValue()>();

     label2:
        return $r4;
    }

    public org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.StringEnumAbstractBase $r4;
        org.apache.xmlbeans.SimpleValue $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

     label2:
        return $r4;
    }

    public java.lang.String getStringValue()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlAnySimpleType: java.lang.String getStringValue()>();

     label2:
        return $r3;
    }

    static boolean lexical_overlap(int, int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label01;

        return 1;

     label01:
        if i0 == 2 goto label02;

        if i1 == 2 goto label02;

        if i0 == 12 goto label02;

        if i1 == 12 goto label02;

        if i0 == 6 goto label02;

        if i1 != 6 goto label03;

     label02:
        return 1;

     label03:
        tableswitch(i0)
        {
            case 3: goto label04;
            case 4: goto label07;
            case 5: goto label10;
            case 6: goto label22;
            case 7: goto label13;
            case 8: goto label13;
            case 9: goto label16;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label22;
            case 13: goto label19;
            case 14: goto label22;
            case 15: goto label22;
            case 16: goto label22;
            case 17: goto label22;
            case 18: goto label16;
            case 19: goto label22;
            case 20: goto label22;
            case 21: goto label22;
            default: goto label22;
        };

     label04:
        lookupswitch(i1)
        {
            case 7: goto label05;
            case 8: goto label05;
            default: goto label06;
        };

     label05:
        return 1;

     label06:
        return 0;

     label07:
        tableswitch(i1)
        {
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label08;
            case 9: goto label08;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label09;
            case 13: goto label08;
            case 14: goto label09;
            case 15: goto label09;
            case 16: goto label09;
            case 17: goto label09;
            case 18: goto label08;
            default: goto label09;
        };

     label08:
        return 1;

     label09:
        return 0;

     label10:
        tableswitch(i1)
        {
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label11;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label12;
            case 16: goto label12;
            case 17: goto label12;
            case 18: goto label11;
            default: goto label12;
        };

     label11:
        return 1;

     label12:
        return 0;

     label13:
        tableswitch(i1)
        {
            case 3: goto label14;
            case 4: goto label14;
            case 5: goto label14;
            case 6: goto label15;
            case 7: goto label14;
            case 8: goto label14;
            case 9: goto label15;
            case 10: goto label15;
            case 11: goto label15;
            case 12: goto label15;
            case 13: goto label14;
            default: goto label15;
        };

     label14:
        return 1;

     label15:
        return 0;

     label16:
        tableswitch(i1)
        {
            case 4: goto label17;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label17;
            case 10: goto label17;
            case 11: goto label17;
            case 12: goto label18;
            case 13: goto label18;
            case 14: goto label18;
            case 15: goto label18;
            case 16: goto label18;
            case 17: goto label18;
            case 18: goto label17;
            default: goto label18;
        };

     label17:
        return 1;

     label18:
        return 0;

     label19:
        tableswitch(i1)
        {
            case 4: goto label20;
            case 5: goto label21;
            case 6: goto label21;
            case 7: goto label20;
            case 8: goto label20;
            default: goto label21;
        };

     label20:
        return 1;

     label21:
        return 0;

     label22:
        return 0;
    }

    private static boolean logical_overlap(org.apache.xmlbeans.SchemaType, int)
    {
        java.lang.AssertionError $r5, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.xmlbeans.SchemaType r0, $r1, $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.xmlbeans.SchemaType;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i12 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i12 != 2 goto label01;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label01:
        if i0 > 46 goto label05;

        $i10 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i10 == 1 goto label02;

        return 0;

     label02:
        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i11 = interfaceinvoke $r6.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        if $i11 != i0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        return $z2;

     label05:
        tableswitch(i0)
        {
            case 47: goto label06;
            case 48: goto label10;
            case 49: goto label14;
            case 50: goto label18;
            case 51: goto label22;
            default: goto label25;
        };

     label06:
        $i8 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i8 == 1 goto label07;

        return 0;

     label07:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i9 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        tableswitch($i9)
        {
            case 9: goto label08;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label09;
            case 13: goto label09;
            case 14: goto label09;
            case 15: goto label09;
            case 16: goto label09;
            case 17: goto label09;
            case 18: goto label08;
            case 19: goto label09;
            case 20: goto label08;
            case 21: goto label08;
            default: goto label09;
        };

     label08:
        return 1;

     label09:
        return 0;

     label10:
        $i6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i6 == 1 goto label11;

        return 0;

     label11:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i7 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        lookupswitch($i7)
        {
            case 14: goto label12;
            case 16: goto label12;
            default: goto label13;
        };

     label12:
        return 1;

     label13:
        return 0;

     label14:
        $i4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i4 == 1 goto label15;

        return 0;

     label15:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i5 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        tableswitch($i5)
        {
            case 14: goto label16;
            case 15: goto label16;
            case 16: goto label16;
            case 17: goto label16;
            case 18: goto label16;
            case 19: goto label16;
            case 20: goto label16;
            case 21: goto label16;
            default: goto label17;
        };

     label16:
        return 1;

     label17:
        return 0;

     label18:
        $i2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i2 == 1 goto label19;

        return 0;

     label19:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType getPrimitiveType()>();

        $i3 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getBuiltinTypeCode()>();

        lookupswitch($i3)
        {
            case 4: goto label20;
            case 5: goto label20;
            default: goto label21;
        };

     label20:
        return 1;

     label21:
        return 0;

     label22:
        $i1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: int getSimpleVariety()>();

        if $i1 != 3 goto label23;

        $z3 = 1;

        goto label24;

     label23:
        $z3 = 0;

     label24:
        return $z3;

     label25:
        $z1 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled>;

        if $z1 != 0 goto label26;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("missing case");

        throw $r5;

     label26:
        return 0;
    }

    private void set_primitive(int, java.lang.Object)
    {
        org.apache.xmlbeans.SchemaType[] $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r11;
        org.apache.xmlbeans.SchemaType $r1, $r7, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, z7, z8, z9, z10, z11, z12;
        org.apache.xmlbeans.XmlAnySimpleType $r12, $r13;
        org.apache.xmlbeans.impl.values.NamespaceContext $r15;
        org.apache.xmlbeans.impl.values.TypeStore $r16;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        java.lang.Exception $r19;
        java.lang.Throwable $r18;
        java.lang.Object[] $r4;
        java.lang.AssertionError $r17, $r20;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r3, $r25;
        java.lang.StringBuffer $r21, $r22, $r23;
        int i0, i1, $i2;
        java.lang.String $r6, $r8, $r14, $r24;
        java.lang.Object r5;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType[] getUnionConstituentTypes()>();

        $z0 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if $r2 != null goto label01;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label01:
        z5 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean has_store()>();

        if $z1 == 0 goto label02;

        $r15 = new org.apache.xmlbeans.impl.values.NamespaceContext;

        $r16 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        specialinvoke $r15.<org.apache.xmlbeans.impl.values.NamespaceContext: void <init>(org.apache.xmlbeans.impl.values.TypeStore)>($r16);

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void push(org.apache.xmlbeans.impl.values.NamespaceContext)>($r15);

        z5 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

     label02:
        z6 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

     label03:
        if z10 != 0 goto label04;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean _validateOnSet()>();

        if $z3 != 0 goto label17;

     label04:
        i1 = 0;

     label05:
        $i2 = lengthof $r2;

        if i1 >= $i2 goto label15;

        $r9 = $r2[i1];

        $z2 = staticinvoke <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean logical_overlap(org.apache.xmlbeans.SchemaType,int)>($r9, i0);

        if $z2 == 0 goto label14;

     label06:
        $r10 = $r2[i1];

        $r11 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r10;

        $r12 = virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlAnySimpleType newValue(java.lang.Object,boolean)>(r5, z11);

     label07:
        goto label11;

     label08:
        $r25 := @caughtexception;

        goto label14;

     label09:
        $r19 := @caughtexception;

        $z4 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled>;

        if $z4 != 0 goto label10;

        $r20 = new java.lang.AssertionError;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.AssertionError: void <init>(java.lang.Object)>($r24);

        throw $r20;

     label10:
        goto label14;

     label11:
        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value> = $r12;

        $r13 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.XmlAnySimpleType: java.lang.String stringValue()>();

        r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.String _textvalue> = $r14;

     label12:
        if z7 == 0 goto label13;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

     label13:
        return;

     label14:
        i1 = i1 + 1;

        goto label05;

     label15:
        if z12 != 0 goto label16;

        goto label17;

     label16:
        z6 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        goto label03;

     label17:
        if z8 == 0 goto label21;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

        goto label21;

     label18:
        $r18 := @caughtexception;

     label19:
        if z9 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: void pop()>();

     label20:
        throw $r18;

     label21:
        $r3 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType _schemaType>;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>($r7);

        $r4[1] = $r8;

        specialinvoke $r3.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.2.3", $r4);

        throw $r3;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label06 to label07 with label08;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label02 to label12 with label18;
        catch java.lang.Throwable from label14 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    protected void set_boolean(boolean)
    {
        java.lang.Boolean $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(z0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(3, $r1);

        return;
    }

    protected void set_byte(byte)
    {
        java.lang.Byte $r1;
        byte b0;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        b0 := @parameter0: byte;

        $r1 = new java.lang.Byte;

        specialinvoke $r1.<java.lang.Byte: void <init>(byte)>(b0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_short(short)
    {
        short s0;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        java.lang.Short $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        s0 := @parameter0: short;

        $r1 = new java.lang.Short;

        specialinvoke $r1.<java.lang.Short: void <init>(short)>(s0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_int(int)
    {
        int i0;
        java.lang.Integer $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        i0 := @parameter0: int;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_long(long)
    {
        long l0;
        java.lang.Long $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        l0 := @parameter0: long;

        $r1 = new java.lang.Long;

        specialinvoke $r1.<java.lang.Long: void <init>(long)>(l0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_float(float)
    {
        java.lang.Float $r1;
        float f0;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        f0 := @parameter0: float;

        $r1 = new java.lang.Float;

        specialinvoke $r1.<java.lang.Float: void <init>(float)>(f0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_double(double)
    {
        java.lang.Double $r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        double d0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        d0 := @parameter0: double;

        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0);

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, $r1);

        return;
    }

    protected void set_ByteArray(byte[])
    {
        byte[] r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(50, r1);

        return;
    }

    protected void set_hex(byte[])
    {
        byte[] r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(50, r1);

        return;
    }

    protected void set_b64(byte[])
    {
        byte[] r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(50, r1);

        return;
    }

    protected void set_BigInteger(java.math.BigInteger)
    {
        java.math.BigInteger r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, r1);

        return;
    }

    protected void set_BigDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.math.BigDecimal;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(47, r1);

        return;
    }

    protected void set_QName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(7, r1);

        return;
    }

    protected void set_Calendar(java.util.Calendar)
    {
        java.util.Calendar r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.util.Calendar;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(49, r1);

        return;
    }

    protected void set_Date(java.util.Date)
    {
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        java.util.Date r1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.util.Date;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(48, r1);

        return;
    }

    protected void set_GDate(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r2;
        org.apache.xmlbeans.GDateSpecification r0;
        int $i0;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r0 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.GDateSpecification: int getBuiltinTypeCode()>();

        if $i0 > 0 goto label1;

        $r2 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r2.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r1.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>($i0, r0);

        return;
    }

    protected void set_GDuration(org.apache.xmlbeans.GDurationSpecification)
    {
        org.apache.xmlbeans.GDurationSpecification r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.GDurationSpecification;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(13, r1);

        return;
    }

    protected void set_enum(org.apache.xmlbeans.StringEnumAbstractBase)
    {
        org.apache.xmlbeans.StringEnumAbstractBase r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.StringEnumAbstractBase;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(12, r1);

        return;
    }

    protected void set_list(java.util.List)
    {
        java.util.List r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(51, r1);

        return;
    }

    protected void set_xmlfloat(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(9, r1);

        return;
    }

    protected void set_xmldouble(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(10, r1);

        return;
    }

    protected void set_xmldecimal(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(11, r1);

        return;
    }

    protected void set_xmlduration(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(13, r1);

        return;
    }

    protected void set_xmldatetime(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(14, r1);

        return;
    }

    protected void set_xmltime(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(15, r1);

        return;
    }

    protected void set_xmldate(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(16, r1);

        return;
    }

    protected void set_xmlgyearmonth(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(17, r1);

        return;
    }

    protected void set_xmlgyear(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(18, r1);

        return;
    }

    protected void set_xmlgmonthday(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(19, r1);

        return;
    }

    protected void set_xmlgday(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(20, r1);

        return;
    }

    protected void set_xmlgmonth(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void set_primitive(int,java.lang.Object)>(21, r1);

        return;
    }

    private static boolean check(org.apache.xmlbeans.XmlObject, org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.XmlAnySimpleType $r3;
        org.apache.xmlbeans.XmlAnySimpleType[] $r1;
        int $i0, i1;
        org.apache.xmlbeans.XmlObject r2;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0;

        r2 := @parameter0: org.apache.xmlbeans.XmlObject;

        r0 := @parameter1: org.apache.xmlbeans.SchemaType;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r1 == null goto label4;

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r3 = $r1[i1];

        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.XmlObject: boolean valueEquals(org.apache.xmlbeans.XmlObject)>(r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        return 1;
    }

    protected boolean equal_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlAnySimpleType $r2;
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlAnySimpleType: boolean valueEquals(org.apache.xmlbeans.XmlObject)>(r1);

        return $z0;
    }

    protected int value_hash_code()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r1;
        int $i0;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r6, $r16;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r13, $r17, $r18, $r19, $r20, $r23;
        java.lang.String r3, $r12, $r14, $r22, $r24;
        org.apache.xmlbeans.SchemaType $r11, $r21;
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r2;
        org.apache.xmlbeans.impl.values.XmlUnionImpl r0;
        java.lang.Exception $r15;
        org.apache.xmlbeans.impl.common.ValidationContext r4;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlUnionImpl;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: void check_dated()>();

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = newarray (java.lang.Object)[1];

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not match any of the member types for ");

        $r21 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType schemaType()>();

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16[0] = $r24;

        interfaceinvoke r4.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("union", $r16);

        return;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        if $r1 != null goto label5;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not match any of the member types for ");

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.SchemaType schemaType()>();

        $r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6[0] = $r14;

        interfaceinvoke r4.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("union", $r6);

        return;

     label5:
        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlUnionImpl: org.apache.xmlbeans.XmlAnySimpleType _value>;

        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r2;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void validate_simpleval(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r3, r4);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: int JAVA_LIST> = 51;

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: int JAVA_BYTEARRAY> = 50;

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: int JAVA_CALENDAR> = 49;

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: int JAVA_DATE> = 48;

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: int JAVA_NUMBER> = 47;

        $r0 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlUnionImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.values.XmlUnionImpl");

        <org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlUnionImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.values.XmlUnionImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlUnionImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.values.XmlUnionImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
