public class com.ctc.wstx.api.InvalidCharHandler$FailingHandler extends java.lang.Object implements com.ctc.wstx.api.InvalidCharHandler
{
    public static final int SURR1_FIRST;
    public static final int SURR1_LAST;
    public static final int SURR2_FIRST;
    public static final int SURR2_LAST;
    private static final com.ctc.wstx.api.InvalidCharHandler$FailingHandler sInstance;

    protected void <init>()
    {
        com.ctc.wstx.api.InvalidCharHandler$FailingHandler r0;

        r0 := @this: com.ctc.wstx.api.InvalidCharHandler$FailingHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.ctc.wstx.api.InvalidCharHandler$FailingHandler getInstance()
    {
        com.ctc.wstx.api.InvalidCharHandler$FailingHandler $r0;

        $r0 = <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: com.ctc.wstx.api.InvalidCharHandler$FailingHandler sInstance>;

        return $r0;
    }

    public char convertInvalidChar(int) throws java.io.IOException
    {
        java.lang.StringBuffer $r1, $r3, $r4, $r9, $r11, $r12, $r17, $r19, $r20, $r25, $r27, $r30;
        int i0, $i2, $i4;
        java.lang.String $r2, $r5, $r10, $r13, $r18, $r21;
        com.ctc.wstx.api.InvalidCharHandler$FailingHandler r23;
        java.io.IOException $r24, $r26, $r28, $r29, $r31;

        r23 := @this: com.ctc.wstx.api.InvalidCharHandler$FailingHandler;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Invalid null character in text to output");

        throw $r24;

     label1:
        if i0 < 32 goto label2;

        if i0 < 127 goto label3;

        if i0 > 159 goto label3;

     label2:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid white space character (0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") in text to output (in xml 1.1, could output as a character entity)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r26;

     label3:
        if i0 <= 1114111 goto label4;

        $r28 = new java.io.IOException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal unicode character point (0x");

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") to output; max is 0x10FFFF as per RFC 3629");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r28;

     label4:
        $i2 = (int) 55296;

        if i0 < $i2 goto label5;

        $i4 = (int) 57343;

        if i0 > $i4 goto label5;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Illegal surrogate pair -- can only be output via character entities, which are not allowed in this content");

        throw $r29;

     label5:
        $r31 = new java.io.IOException;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid XML character (0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") in text to output");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r31;
    }

    static void <clinit>()
    {
        com.ctc.wstx.api.InvalidCharHandler$FailingHandler $r0;

        <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: int SURR2_LAST> = 57343;

        <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: int SURR2_FIRST> = 56320;

        <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: int SURR1_LAST> = 56319;

        <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: int SURR1_FIRST> = 55296;

        $r0 = new com.ctc.wstx.api.InvalidCharHandler$FailingHandler;

        specialinvoke $r0.<com.ctc.wstx.api.InvalidCharHandler$FailingHandler: void <init>()>();

        <com.ctc.wstx.api.InvalidCharHandler$FailingHandler: com.ctc.wstx.api.InvalidCharHandler$FailingHandler sInstance> = $r0;

        return;
    }
}
