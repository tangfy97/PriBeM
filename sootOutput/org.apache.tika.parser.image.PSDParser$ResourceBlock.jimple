class org.apache.tika.parser.image.PSDParser$ResourceBlock extends java.lang.Object
{
    private static final long SIGNATURE;
    private static final int ID_CAPTION;
    private static final int ID_URL;
    private static final int ID_EXIF_1;
    private static final int ID_EXIF_3;
    private static final int ID_XMP;
    private int id;
    private java.lang.String name;
    private byte[] data;
    private int totalLength;

    private void <init>(java.io.InputStream) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        byte[] $r4, $r5;
        long l1;
        byte $b2;
        org.apache.tika.exception.TikaException $r6;
        java.lang.StringBuffer $r2;
        int $i0, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13;
        org.apache.tika.parser.image.PSDParser$ResourceBlock r0;
        java.lang.String $r3, $r11, $r15;
        char $c5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13, $r14;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.image.PSDParser$ResourceBlock;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        l1 = (long) $i0;

        $b2 = l1 cmp 943868237L;

        if $b2 == 0 goto label1;

        $r6 = new org.apache.tika.exception.TikaException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Image Resource Block Signature Found, got ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the spec defines ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(943868237L);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r15);

        throw $r6;

     label1:
        $i3 = staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r1);

        r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: int id> = $i3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i12 = 0;

     label2:
        $i4 = virtualinvoke r1.<java.io.InputStream: int read()>();

        i12 = i12 + 1;

        if $i4 != 0 goto label3;

        $i6 = i12 % 2;

        if $i6 != 1 goto label4;

        virtualinvoke r1.<java.io.InputStream: int read()>();

        i12 = i12 + 1;

        goto label4;

     label3:
        $c5 = (char) $i4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: java.lang.String name> = $r3;

        goto label2;

     label4:
        $i7 = staticinvoke <org.apache.tika.io.EndianUtils: int readIntBE(java.io.InputStream)>(r1);

        i13 = $i7;

        $i8 = $i7 % 2;

        if $i8 != 1 goto label5;

        i13 = $i7 + 1;

     label5:
        $i9 = 6 + i12;

        $i10 = $i9 + 4;

        $i11 = $i10 + i13;

        r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: int totalLength> = $i11;

        $r4 = newarray (byte)[i13];

        r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: byte[] data> = $r4;

        $r5 = r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: byte[] data>;

        staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, $r5);

        return;
    }

    private java.lang.String getDataAsString()
    {
        byte[] $r2, $r3;
        java.lang.RuntimeException $r5;
        int $i0, $i1;
        java.lang.String $r0;
        org.apache.tika.parser.image.PSDParser$ResourceBlock r1;
        java.io.UnsupportedEncodingException $r4;

        r1 := @this: org.apache.tika.parser.image.PSDParser$ResourceBlock;

     label1:
        $r0 = new java.lang.String;

        $r3 = r1.<org.apache.tika.parser.image.PSDParser$ResourceBlock: byte[] data>;

        $r2 = r1.<org.apache.tika.parser.image.PSDParser$ResourceBlock: byte[] data>;

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, 0, $i1, "ASCII");

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Something is very broken in your JVM!");

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    void <init>(java.io.InputStream, org.apache.tika.parser.image.PSDParser$1) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.image.PSDParser$1 r2;
        org.apache.tika.parser.image.PSDParser$ResourceBlock r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.image.PSDParser$ResourceBlock;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.tika.parser.image.PSDParser$1;

        specialinvoke r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: void <init>(java.io.InputStream)>(r1);

        return;
    }

    static int access$100(org.apache.tika.parser.image.PSDParser$ResourceBlock)
    {
        int $i0;
        org.apache.tika.parser.image.PSDParser$ResourceBlock r0;

        r0 := @parameter0: org.apache.tika.parser.image.PSDParser$ResourceBlock;

        $i0 = r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: int totalLength>;

        return $i0;
    }

    static int access$200(org.apache.tika.parser.image.PSDParser$ResourceBlock)
    {
        int $i0;
        org.apache.tika.parser.image.PSDParser$ResourceBlock r0;

        r0 := @parameter0: org.apache.tika.parser.image.PSDParser$ResourceBlock;

        $i0 = r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: int id>;

        return $i0;
    }

    static java.lang.String access$300(org.apache.tika.parser.image.PSDParser$ResourceBlock)
    {
        org.apache.tika.parser.image.PSDParser$ResourceBlock r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.tika.parser.image.PSDParser$ResourceBlock;

        $r1 = specialinvoke r0.<org.apache.tika.parser.image.PSDParser$ResourceBlock: java.lang.String getDataAsString()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.image.PSDParser$ResourceBlock: int ID_XMP> = 1060;

        <org.apache.tika.parser.image.PSDParser$ResourceBlock: int ID_EXIF_3> = 1059;

        <org.apache.tika.parser.image.PSDParser$ResourceBlock: int ID_EXIF_1> = 1058;

        <org.apache.tika.parser.image.PSDParser$ResourceBlock: int ID_URL> = 1035;

        <org.apache.tika.parser.image.PSDParser$ResourceBlock: int ID_CAPTION> = 1008;

        <org.apache.tika.parser.image.PSDParser$ResourceBlock: long SIGNATURE> = 943868237L;

        return;
    }
}
