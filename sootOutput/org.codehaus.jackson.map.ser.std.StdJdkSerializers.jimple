public class org.codehaus.jackson.map.ser.std.StdJdkSerializers extends java.lang.Object implements org.codehaus.jackson.map.util.Provider
{

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.StdJdkSerializers r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Collection provide()
    {
        org.codehaus.jackson.map.ser.std.ToStringSerializer r1;
        org.codehaus.jackson.map.ser.std.StdJdkSerializers r4;
        java.util.Set $r3;
        java.util.HashMap $r0;
        java.lang.Class $r2;

        r4 := @this: org.codehaus.jackson.map.ser.std.StdJdkSerializers;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        r1 = <org.codehaus.jackson.map.ser.std.ToStringSerializer: org.codehaus.jackson.map.ser.std.ToStringSerializer instance>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URL;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/net/URI;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Currency;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/UUID;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/regex/Pattern;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Locale;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/Locale;", r1);

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicReference;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$AtomicReferenceSerializer;");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicBoolean;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$AtomicBooleanSerializer;");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicInteger;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$AtomicIntegerSerializer;");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/util/concurrent/atomic/AtomicLong;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$AtomicLongSerializer;");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/io/File;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$FileSerializer;");

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Class;", class "Lorg/codehaus/jackson/map/ser/std/StdJdkSerializers$ClassSerializer;");

        $r2 = <java.lang.Void: java.lang.Class TYPE>;

        virtualinvoke $r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, class "Lorg/codehaus/jackson/map/ser/std/NullSerializer;");

        $r3 = virtualinvoke $r0.<java.util.HashMap: java.util.Set entrySet()>();

        return $r3;
    }
}
