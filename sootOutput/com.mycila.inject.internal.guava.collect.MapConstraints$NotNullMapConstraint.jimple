final enum class com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint extends java.lang.Enum implements com.mycila.inject.internal.guava.collect.MapConstraint
{
    public static final enum com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint INSTANCE;
    private static final com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] $VALUES;

    public static com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] values()
    {
        java.lang.Object $r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] $r0, $r2;

        $r0 = <com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[]) $r1;

        return $r2;
    }

    public static com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mycila/inject/internal/guava/collect/MapConstraints$NotNullMapConstraint;", r0);

        $r2 = (com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public void checkKeyValue(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint r2;

        r2 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint;

        return "Not null";
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint $r0, $r2;
        com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] $r1;

        $r0 = new com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint: void <init>(java.lang.String,int)>("INSTANCE", 0);

        <com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint INSTANCE> = $r0;

        $r1 = newarray (com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint)[1];

        $r2 = <com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint INSTANCE>;

        $r1[0] = $r2;

        <com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint: com.mycila.inject.internal.guava.collect.MapConstraints$NotNullMapConstraint[] $VALUES> = $r1;

        return;
    }
}
