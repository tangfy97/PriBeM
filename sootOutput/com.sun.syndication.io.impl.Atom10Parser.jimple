public class com.sun.syndication.io.impl.Atom10Parser extends com.sun.syndication.io.impl.BaseWireFeedParser
{
    private static final java.lang.String ATOM_10_URI;
    private static final org.jdom.Namespace ATOM_10_NS;
    private static boolean resolveURIs;
    static java.util.regex.Pattern absoluteURIPattern;

    public static void setResolveURIs(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.syndication.io.impl.Atom10Parser: boolean resolveURIs> = z0;

        return;
    }

    public static boolean getResolveURIs()
    {
        boolean $z0;

        $z0 = <com.sun.syndication.io.impl.Atom10Parser: boolean resolveURIs>;

        return $z0;
    }

    public void <init>()
    {
        com.sun.syndication.io.impl.Atom10Parser r0;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: void <init>(java.lang.String)>("atom_1.0");

        return;
    }

    protected void <init>(java.lang.String)
    {
        org.jdom.Namespace $r2;
        java.lang.String r1;
        com.sun.syndication.io.impl.Atom10Parser r0;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace ATOM_10_NS>;

        specialinvoke r0.<com.sun.syndication.io.impl.BaseWireFeedParser: void <init>(java.lang.String,org.jdom.Namespace)>(r1, $r2);

        return;
    }

    protected org.jdom.Namespace getAtomNamespace()
    {
        org.jdom.Namespace $r0;
        com.sun.syndication.io.impl.Atom10Parser r1;

        r1 := @this: com.sun.syndication.io.impl.Atom10Parser;

        $r0 = <com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace ATOM_10_NS>;

        return $r0;
    }

    public boolean isMyType(org.jdom.Document)
    {
        org.jdom.Document r0;
        org.jdom.Namespace $r2, $r4;
        org.jdom.Element $r1;
        com.sun.syndication.io.impl.Atom10Parser r3;
        boolean $z0, $z1;

        r3 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r0 := @parameter0: org.jdom.Document;

        $r1 = virtualinvoke r0.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r2 = virtualinvoke $r1.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r3.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $z0 = virtualinvoke $r2.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public com.sun.syndication.feed.WireFeed parse(org.jdom.Document, boolean) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        org.jdom.Document r0;
        com.sun.syndication.feed.WireFeed $r3;
        org.jdom.Element $r1;
        boolean z0;
        com.sun.syndication.io.impl.Atom10Parser r2;

        r2 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r0 := @parameter0: org.jdom.Document;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: void validateFeed(org.jdom.Document)>(r0);

     label1:
        $r1 = virtualinvoke r0.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r3 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.WireFeed parseFeed(org.jdom.Element)>($r1);

        return $r3;
    }

    protected void validateFeed(org.jdom.Document) throws com.sun.syndication.io.FeedException
    {
        org.jdom.Document r1;
        com.sun.syndication.io.impl.Atom10Parser r0;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: org.jdom.Document;

        return;
    }

    protected com.sun.syndication.feed.WireFeed parseFeed(org.jdom.Element) throws com.sun.syndication.io.FeedException
    {
        com.sun.syndication.feed.atom.Feed $r3;
        com.sun.syndication.io.impl.Atom10Parser r0;
        com.sun.syndication.io.FeedException $r13;
        int $i0, $i1;
        org.jdom.Namespace $r4, $r7, $r9;
        java.lang.String $r2, $r5;
        java.lang.Exception $r12;
        java.util.List $r6, $r8, $r10, $r11;
        org.jdom.Element r1;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: org.jdom.Element;

     label1:
        $r2 = specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String findBaseURI(org.jdom.Element)>(r1);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = new com.sun.syndication.io.FeedException;

        specialinvoke $r13.<com.sun.syndication.io.FeedException: void <init>(java.lang.String,java.lang.Throwable)>("ERROR while finding base URI of feed", $r12);

        throw $r13;

     label4:
        $r3 = specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Feed parseFeedMetadata(java.lang.String,org.jdom.Element)>($r2, r1);

        $r4 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        $r5 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>("base", $r4);

        if $r5 == null goto label5;

        virtualinvoke $r3.<com.sun.syndication.feed.atom.Feed: void setXmlBase(java.lang.String)>($r5);

     label5:
        $r6 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseFeedModules(org.jdom.Element)>(r1);

        virtualinvoke $r3.<com.sun.syndication.feed.atom.Feed: void setModules(java.util.List)>($r6);

        $r7 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r8 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("entry", $r7);

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        $r11 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseEntries(com.sun.syndication.feed.atom.Feed,java.lang.String,java.util.List)>($r3, $r2, $r8);

        virtualinvoke $r3.<com.sun.syndication.feed.atom.Feed: void setEntries(java.util.List)>($r11);

     label6:
        $r9 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r10 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.util.List extractForeignMarkup(org.jdom.Element,com.sun.syndication.feed.module.Extendable,org.jdom.Namespace)>(r1, $r3, $r9);

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 <= 0 goto label7;

        virtualinvoke $r3.<com.sun.syndication.feed.atom.Feed: void setForeignMarkup(java.lang.Object)>($r10);

     label7:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private com.sun.syndication.feed.atom.Feed parseFeedMetadata(java.lang.String, org.jdom.Element)
    {
        java.util.Date $r31;
        com.sun.syndication.io.impl.Atom10Parser r1;
        org.jdom.Namespace $r4, $r6, $r11, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r48;
        com.sun.syndication.feed.atom.Content $r40, $r45;
        java.util.List $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r43, $r44;
        com.sun.syndication.feed.atom.Feed $r0;
        int $i0, $i1;
        java.lang.String $r2, r8, $r30, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r41, $r42, $r46, $r47;
        com.sun.syndication.feed.atom.Generator $r35;
        org.jdom.Element r3, $r5, $r19, $r21, $r23, $r25, $r27, $r29, $r49;

        r1 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r8 := @parameter0: java.lang.String;

        r3 := @parameter1: org.jdom.Element;

        $r0 = new com.sun.syndication.feed.atom.Feed;

        $r2 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getType()>();

        specialinvoke $r0.<com.sun.syndication.feed.atom.Feed: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r5 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("title", $r4);

        if $r5 == null goto label01;

        $r45 = new com.sun.syndication.feed.atom.Content;

        specialinvoke $r45.<com.sun.syndication.feed.atom.Content: void <init>()>();

        $r46 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String parseTextConstructToString(org.jdom.Element)>($r5);

        virtualinvoke $r45.<com.sun.syndication.feed.atom.Content: void setValue(java.lang.String)>($r46);

        $r47 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>($r5, "type");

        virtualinvoke $r45.<com.sun.syndication.feed.atom.Content: void setType(java.lang.String)>($r47);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setTitleEx(com.sun.syndication.feed.atom.Content)>($r45);

     label01:
        $r6 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r7 = virtualinvoke r3.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("link", $r6);

        $r9 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseAlternateLinks(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,java.util.List)>($r0, null, r8, $r7);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setAlternateLinks(java.util.List)>($r9);

        $r10 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseOtherLinks(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,java.util.List)>($r0, null, r8, $r7);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setOtherLinks(java.util.List)>($r10);

        $r11 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r12 = virtualinvoke r3.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("category", $r11);

        $r13 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseCategories(java.lang.String,java.util.List)>(r8, $r12);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setCategories(java.util.List)>($r13);

        $r14 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r15 = virtualinvoke r3.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("author", $r14);

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        if $i0 <= 0 goto label02;

        $r44 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parsePersons(java.lang.String,java.util.List)>(r8, $r15);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setAuthors(java.util.List)>($r44);

     label02:
        $r16 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r17 = virtualinvoke r3.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("contributor", $r16);

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i1 <= 0 goto label03;

        $r43 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parsePersons(java.lang.String,java.util.List)>(r8, $r17);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setContributors(java.util.List)>($r43);

     label03:
        $r18 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r19 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("subtitle", $r18);

        if $r19 == null goto label04;

        $r40 = new com.sun.syndication.feed.atom.Content;

        specialinvoke $r40.<com.sun.syndication.feed.atom.Content: void <init>()>();

        $r41 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String parseTextConstructToString(org.jdom.Element)>($r19);

        virtualinvoke $r40.<com.sun.syndication.feed.atom.Content: void setValue(java.lang.String)>($r41);

        $r42 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>($r19, "type");

        virtualinvoke $r40.<com.sun.syndication.feed.atom.Content: void setType(java.lang.String)>($r42);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setSubtitle(com.sun.syndication.feed.atom.Content)>($r40);

     label04:
        $r20 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r21 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("id", $r20);

        if $r21 == null goto label05;

        $r39 = virtualinvoke $r21.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setId(java.lang.String)>($r39);

     label05:
        $r22 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r23 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("generator", $r22);

        if $r23 == null goto label08;

        $r35 = new com.sun.syndication.feed.atom.Generator;

        specialinvoke $r35.<com.sun.syndication.feed.atom.Generator: void <init>()>();

        $r36 = virtualinvoke $r23.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r35.<com.sun.syndication.feed.atom.Generator: void setValue(java.lang.String)>($r36);

        $r37 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>($r23, "uri");

        if $r37 == null goto label06;

        virtualinvoke $r35.<com.sun.syndication.feed.atom.Generator: void setUrl(java.lang.String)>($r37);

     label06:
        $r38 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>($r23, "version");

        if $r38 == null goto label07;

        virtualinvoke $r35.<com.sun.syndication.feed.atom.Generator: void setVersion(java.lang.String)>($r38);

     label07:
        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setGenerator(com.sun.syndication.feed.atom.Generator)>($r35);

     label08:
        $r48 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r49 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("rights", $r48);

        if $r49 == null goto label09;

        $r34 = specialinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String parseTextConstructToString(org.jdom.Element)>($r49);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setRights(java.lang.String)>($r34);

     label09:
        $r24 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r25 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("icon", $r24);

        if $r25 == null goto label10;

        $r33 = virtualinvoke $r25.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setIcon(java.lang.String)>($r33);

     label10:
        $r26 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r27 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("logo", $r26);

        if $r27 == null goto label11;

        $r32 = virtualinvoke $r27.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setLogo(java.lang.String)>($r32);

     label11:
        $r28 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r29 = virtualinvoke r3.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("updated", $r28);

        if $r29 == null goto label12;

        $r30 = virtualinvoke $r29.<org.jdom.Element: java.lang.String getText()>();

        $r31 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseDate(java.lang.String)>($r30);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Feed: void setUpdated(java.util.Date)>($r31);

     label12:
        return $r0;
    }

    private com.sun.syndication.feed.atom.Link parseLink(com.sun.syndication.feed.atom.Feed, com.sun.syndication.feed.atom.Entry, java.lang.String, org.jdom.Element)
    {
        com.sun.syndication.feed.atom.Feed r11;
        com.sun.syndication.feed.atom.Entry r12;
        long $l0;
        com.sun.syndication.io.impl.Atom10Parser r1;
        java.lang.Long $r8;
        java.lang.String $r3, $r4, $r5, $r6, $r7, r9, $r10, $r13;
        boolean $z0;
        com.sun.syndication.feed.atom.Link $r0;
        org.jdom.Element r2;

        r1 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r11 := @parameter0: com.sun.syndication.feed.atom.Feed;

        r12 := @parameter1: com.sun.syndication.feed.atom.Entry;

        r9 := @parameter2: java.lang.String;

        r2 := @parameter3: org.jdom.Element;

        $r0 = new com.sun.syndication.feed.atom.Link;

        specialinvoke $r0.<com.sun.syndication.feed.atom.Link: void <init>()>();

        $r3 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "rel");

        if $r3 == null goto label1;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setRel(java.lang.String)>($r3);

     label1:
        $r4 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "type");

        if $r4 == null goto label2;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setType(java.lang.String)>($r4);

     label2:
        $r5 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "href");

        if $r5 == null goto label3;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setHref(java.lang.String)>($r5);

        $z0 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isRelativeURI(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        $r10 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(r9, r2, $r5);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setHrefResolved(java.lang.String)>($r10);

     label3:
        $r13 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "title");

        if $r13 == null goto label4;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setTitle(java.lang.String)>($r13);

     label4:
        $r6 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "hreflang");

        if $r6 == null goto label5;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setHreflang(java.lang.String)>($r6);

     label5:
        $r7 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "length");

        if $r7 == null goto label6;

        $r8 = staticinvoke <com.sun.syndication.io.impl.NumberParser: java.lang.Long parseLong(java.lang.String)>($r7);

        if $r8 == null goto label6;

        $l0 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Link: void setLength(long)>($l0);

     label6:
        return $r0;
    }

    private java.util.List parseAlternateLinks(com.sun.syndication.feed.atom.Feed, com.sun.syndication.feed.atom.Entry, java.lang.String, java.util.List)
    {
        com.sun.syndication.feed.atom.Feed r5;
        com.sun.syndication.feed.atom.Entry r6;
        java.util.ArrayList $r0, $r15;
        com.sun.syndication.io.impl.Atom10Parser r4;
        int $i0, $i1, i2;
        java.lang.String r7, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1;
        com.sun.syndication.feed.atom.Link $r8;
        java.util.List r1;
        java.lang.Object $r2;
        org.jdom.Element r3;

        r4 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r5 := @parameter0: com.sun.syndication.feed.atom.Feed;

        r6 := @parameter1: com.sun.syndication.feed.atom.Entry;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.jdom.Element) $r2;

        $r8 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Link parseLink(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,org.jdom.Element)>(r5, r6, r7, r3);

        $r9 = virtualinvoke $r8.<com.sun.syndication.feed.atom.Link: java.lang.String getRel()>();

        if $r9 == null goto label2;

        $r10 = "";

        $r11 = virtualinvoke $r8.<com.sun.syndication.feed.atom.Link: java.lang.String getRel()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label2;

        $r13 = "alternate";

        $r14 = virtualinvoke $r8.<com.sun.syndication.feed.atom.Link: java.lang.String getRel()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label3;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        $r15 = $r0;

        goto label6;

     label5:
        $r15 = null;

     label6:
        return $r15;
    }

    private java.util.List parseOtherLinks(com.sun.syndication.feed.atom.Feed, com.sun.syndication.feed.atom.Entry, java.lang.String, java.util.List)
    {
        com.sun.syndication.feed.atom.Feed r5;
        com.sun.syndication.feed.atom.Entry r6;
        java.util.ArrayList $r0, $r11;
        com.sun.syndication.io.impl.Atom10Parser r4;
        int $i0, $i1, i2;
        java.lang.String r7, $r9, $r10;
        boolean $z0;
        com.sun.syndication.feed.atom.Link $r8;
        java.util.List r1;
        java.lang.Object $r2;
        org.jdom.Element r3;

        r4 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r5 := @parameter0: com.sun.syndication.feed.atom.Feed;

        r6 := @parameter1: com.sun.syndication.feed.atom.Entry;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.jdom.Element) $r2;

        $r8 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Link parseLink(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,org.jdom.Element)>(r5, r6, r7, r3);

        $r9 = "alternate";

        $r10 = virtualinvoke $r8.<com.sun.syndication.feed.atom.Link: java.lang.String getRel()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        $r11 = $r0;

        goto label5;

     label4:
        $r11 = null;

     label5:
        return $r11;
    }

    private com.sun.syndication.feed.atom.Person parsePerson(java.lang.String, org.jdom.Element)
    {
        com.sun.syndication.io.impl.Atom10Parser r2;
        org.jdom.Namespace $r3, $r5, $r15;
        com.sun.syndication.feed.atom.Person $r0;
        java.lang.String $r8, $r9, $r10, r11, $r12, $r13, $r14;
        boolean $z0;
        java.util.List $r7;
        org.jdom.Element r1, $r4, $r6, $r16;

        r2 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: org.jdom.Element;

        $r0 = new com.sun.syndication.feed.atom.Person;

        specialinvoke $r0.<com.sun.syndication.feed.atom.Person: void <init>()>();

        $r3 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r4 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("name", $r3);

        if $r4 == null goto label1;

        $r14 = virtualinvoke $r4.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Person: void setName(java.lang.String)>($r14);

     label1:
        $r5 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r6 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("uri", $r5);

        if $r6 == null goto label2;

        $r9 = virtualinvoke $r6.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Person: void setUri(java.lang.String)>($r9);

        $r10 = virtualinvoke $r6.<org.jdom.Element: java.lang.String getText()>();

        $z0 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isRelativeURI(java.lang.String)>($r10);

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke $r6.<org.jdom.Element: java.lang.String getText()>();

        $r13 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(r11, r1, $r12);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Person: void setUriResolved(java.lang.String)>($r13);

     label2:
        $r15 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r16 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("email", $r15);

        if $r16 == null goto label3;

        $r8 = virtualinvoke $r16.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Person: void setEmail(java.lang.String)>($r8);

     label3:
        $r7 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parsePersonModules(org.jdom.Element)>(r1);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Person: void setModules(java.util.List)>($r7);

        return $r0;
    }

    private java.util.List parsePersons(java.lang.String, java.util.List)
    {
        java.util.ArrayList $r0, $r7;
        com.sun.syndication.io.impl.Atom10Parser r2;
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        java.lang.String r3;
        com.sun.syndication.feed.atom.Person $r6;
        org.jdom.Element $r5;

        r2 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (org.jdom.Element) $r4;

        $r6 = specialinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Person parsePerson(java.lang.String,org.jdom.Element)>(r3, $r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        $r7 = $r0;

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

    private com.sun.syndication.feed.atom.Content parseContent(org.jdom.Element)
    {
        com.sun.syndication.feed.atom.Content $r5;
        java.lang.String $r2, $r3, $r4;
        org.jdom.Element r1;
        com.sun.syndication.io.impl.Atom10Parser r0;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: org.jdom.Element;

        $r2 = specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String parseTextConstructToString(org.jdom.Element)>(r1);

        $r3 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r1, "src");

        $r4 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r1, "type");

        $r5 = new com.sun.syndication.feed.atom.Content;

        specialinvoke $r5.<com.sun.syndication.feed.atom.Content: void <init>()>();

        virtualinvoke $r5.<com.sun.syndication.feed.atom.Content: void setSrc(java.lang.String)>($r3);

        virtualinvoke $r5.<com.sun.syndication.feed.atom.Content: void setType(java.lang.String)>($r4);

        virtualinvoke $r5.<com.sun.syndication.feed.atom.Content: void setValue(java.lang.String)>($r2);

        return $r5;
    }

    private java.lang.String parseTextConstructToString(org.jdom.Element)
    {
        org.jdom.output.XMLOutputter $r15;
        org.jdom.Content r4;
        com.sun.syndication.io.impl.Atom10Parser r0;
        int $i0, $i1, $i3, $i5;
        org.jdom.Namespace $r6, $r7, $r8;
        java.lang.String $r2, $r10, r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r13;
        java.util.List $r12;
        java.lang.Object $r3;
        org.jdom.Element r1, r5, $r9;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: org.jdom.Element;

        $r2 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r1, "type");

        if $r2 == null goto label1;

        $r10 = $r2;

        goto label2;

     label1:
        $r10 = "text";

     label2:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("xhtml");

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("/xml");

        $i3 = (int) -1;

        if $i0 != $i3 goto label3;

        $i1 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>("+xml");

        $i5 = (int) -1;

        if $i1 == $i5 goto label7;

     label3:
        $r15 = new org.jdom.output.XMLOutputter;

        specialinvoke $r15.<org.jdom.output.XMLOutputter: void <init>()>();

        $r12 = virtualinvoke r1.<org.jdom.Element: java.util.List getContent()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r3 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdom.Content) $r3;

        $z1 = r4 instanceof org.jdom.Element;

        if $z1 == 0 goto label5;

        r5 = (org.jdom.Element) r4;

        $r6 = virtualinvoke r5.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r7 = virtualinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $z2 = virtualinvoke $r6.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label5;

        $r9 = (org.jdom.Element) r4;

        $r8 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>;

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element setNamespace(org.jdom.Namespace)>($r8);

     label5:
        goto label4;

     label6:
        r14 = virtualinvoke $r15.<org.jdom.output.XMLOutputter: java.lang.String outputString(java.util.List)>($r12);

        goto label8;

     label7:
        r14 = virtualinvoke r1.<org.jdom.Element: java.lang.String getText()>();

     label8:
        return r14;
    }

    protected java.util.List parseEntries(com.sun.syndication.feed.atom.Feed, java.lang.String, java.util.List)
    {
        com.sun.syndication.feed.atom.Feed r3;
        com.sun.syndication.feed.atom.Entry $r7;
        java.util.ArrayList $r0, $r8;
        com.sun.syndication.io.impl.Atom10Parser r2;
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        java.lang.String r5;
        org.jdom.Element $r6;

        r2 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r3 := @parameter0: com.sun.syndication.feed.atom.Feed;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (org.jdom.Element) $r4;

        $r7 = virtualinvoke r2.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Entry parseEntry(com.sun.syndication.feed.atom.Feed,org.jdom.Element,java.lang.String)>(r3, $r6, r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        $r8 = $r0;

        goto label4;

     label3:
        $r8 = null;

     label4:
        return $r8;
    }

    protected com.sun.syndication.feed.atom.Entry parseEntry(com.sun.syndication.feed.atom.Feed, org.jdom.Element, java.lang.String)
    {
        com.sun.syndication.feed.atom.Entry $r0;
        java.util.Date $r43, $r45;
        com.sun.syndication.io.impl.Atom10Parser r4;
        org.jdom.Namespace $r2, $r5, $r7, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r32, $r35;
        com.sun.syndication.feed.atom.Content $r40, $r41, $r49;
        java.util.List $r8, $r11, $r12, $r14, $r16, $r30, $r31, $r34, $r36, $r47, $r48;
        com.sun.syndication.feed.atom.Feed r9, $r37;
        java.util.ArrayList $r39;
        int $i0, $i1, $i2;
        java.lang.String $r3, r10, $r38, $r42, $r44, $r46, $r50, $r51;
        org.jdom.Element r1, $r6, $r18, $r20, $r22, $r24, $r26, $r28, $r33;

        r4 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r9 := @parameter0: com.sun.syndication.feed.atom.Feed;

        r1 := @parameter1: org.jdom.Element;

        r10 := @parameter2: java.lang.String;

        $r0 = new com.sun.syndication.feed.atom.Entry;

        specialinvoke $r0.<com.sun.syndication.feed.atom.Entry: void <init>()>();

        $r2 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        $r3 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>("base", $r2);

        if $r3 == null goto label01;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setXmlBase(java.lang.String)>($r3);

     label01:
        $r5 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r6 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("title", $r5);

        if $r6 == null goto label02;

        $r49 = new com.sun.syndication.feed.atom.Content;

        specialinvoke $r49.<com.sun.syndication.feed.atom.Content: void <init>()>();

        $r50 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String parseTextConstructToString(org.jdom.Element)>($r6);

        virtualinvoke $r49.<com.sun.syndication.feed.atom.Content: void setValue(java.lang.String)>($r50);

        $r51 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>($r6, "type");

        virtualinvoke $r49.<com.sun.syndication.feed.atom.Content: void setType(java.lang.String)>($r51);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setTitleEx(com.sun.syndication.feed.atom.Content)>($r49);

     label02:
        $r7 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r8 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("link", $r7);

        $r11 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseAlternateLinks(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,java.util.List)>(r9, $r0, r10, $r8);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setAlternateLinks(java.util.List)>($r11);

        $r12 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseOtherLinks(com.sun.syndication.feed.atom.Feed,com.sun.syndication.feed.atom.Entry,java.lang.String,java.util.List)>(r9, $r0, r10, $r8);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setOtherLinks(java.util.List)>($r12);

        $r13 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r14 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("author", $r13);

        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i0 <= 0 goto label03;

        $r48 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parsePersons(java.lang.String,java.util.List)>(r10, $r14);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setAuthors(java.util.List)>($r48);

     label03:
        $r15 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r16 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("contributor", $r15);

        $i1 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i1 <= 0 goto label04;

        $r47 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parsePersons(java.lang.String,java.util.List)>(r10, $r16);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setContributors(java.util.List)>($r47);

     label04:
        $r17 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r18 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("id", $r17);

        if $r18 == null goto label05;

        $r46 = virtualinvoke $r18.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setId(java.lang.String)>($r46);

     label05:
        $r19 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r20 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("updated", $r19);

        if $r20 == null goto label06;

        $r44 = virtualinvoke $r20.<org.jdom.Element: java.lang.String getText()>();

        $r45 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseDate(java.lang.String)>($r44);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setUpdated(java.util.Date)>($r45);

     label06:
        $r21 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r22 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("published", $r21);

        if $r22 == null goto label07;

        $r42 = virtualinvoke $r22.<org.jdom.Element: java.lang.String getText()>();

        $r43 = staticinvoke <com.sun.syndication.io.impl.DateParser: java.util.Date parseDate(java.lang.String)>($r42);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setPublished(java.util.Date)>($r43);

     label07:
        $r23 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r24 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("summary", $r23);

        if $r24 == null goto label08;

        $r41 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Content parseContent(org.jdom.Element)>($r24);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setSummary(com.sun.syndication.feed.atom.Content)>($r41);

     label08:
        $r25 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r26 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("content", $r25);

        if $r26 == null goto label09;

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        $r40 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Content parseContent(org.jdom.Element)>($r26);

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r40);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setContents(java.util.List)>($r39);

     label09:
        $r27 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r28 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("rights", $r27);

        if $r28 == null goto label10;

        $r38 = virtualinvoke $r28.<org.jdom.Element: java.lang.String getText()>();

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setRights(java.lang.String)>($r38);

     label10:
        $r29 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r30 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("category", $r29);

        $r31 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseCategories(java.lang.String,java.util.List)>(r10, $r30);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setCategories(java.util.List)>($r31);

        $r32 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r33 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("source", $r32);

        if $r33 == null goto label11;

        $r37 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Feed parseFeedMetadata(java.lang.String,org.jdom.Element)>(r10, $r33);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setSource(com.sun.syndication.feed.atom.Feed)>($r37);

     label11:
        $r34 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List parseItemModules(org.jdom.Element)>(r1);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setModules(java.util.List)>($r34);

        $r35 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace getAtomNamespace()>();

        $r36 = virtualinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: java.util.List extractForeignMarkup(org.jdom.Element,com.sun.syndication.feed.module.Extendable,org.jdom.Namespace)>(r1, $r0, $r35);

        $i2 = interfaceinvoke $r36.<java.util.List: int size()>();

        if $i2 <= 0 goto label12;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Entry: void setForeignMarkup(java.lang.Object)>($r36);

     label12:
        return $r0;
    }

    private java.util.List parseCategories(java.lang.String, java.util.List)
    {
        com.sun.syndication.feed.atom.Category $r6;
        java.util.ArrayList $r0, $r7;
        com.sun.syndication.io.impl.Atom10Parser r4;
        java.util.List r1;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        java.lang.String r5;
        org.jdom.Element r3;

        r4 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.jdom.Element) $r2;

        $r6 = specialinvoke r4.<com.sun.syndication.io.impl.Atom10Parser: com.sun.syndication.feed.atom.Category parseCategory(java.lang.String,org.jdom.Element)>(r5, r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label3;

        $r7 = $r0;

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

    private com.sun.syndication.feed.atom.Category parseCategory(java.lang.String, org.jdom.Element)
    {
        com.sun.syndication.feed.atom.Category $r0;
        com.sun.syndication.io.impl.Atom10Parser r1;
        java.lang.String $r3, $r4, r5, $r6, $r7;
        org.jdom.Element r2;
        boolean $z0;

        r1 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r5 := @parameter0: java.lang.String;

        r2 := @parameter1: org.jdom.Element;

        $r0 = new com.sun.syndication.feed.atom.Category;

        specialinvoke $r0.<com.sun.syndication.feed.atom.Category: void <init>()>();

        $r3 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "term");

        if $r3 == null goto label1;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Category: void setTerm(java.lang.String)>($r3);

     label1:
        $r4 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "scheme");

        if $r4 == null goto label2;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Category: void setScheme(java.lang.String)>($r4);

        $z0 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isRelativeURI(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(r5, r2, $r4);

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Category: void setSchemeResolved(java.lang.String)>($r6);

     label2:
        $r7 = virtualinvoke r1.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String getAttributeValue(org.jdom.Element,java.lang.String)>(r2, "label");

        if $r7 == null goto label3;

        virtualinvoke $r0.<com.sun.syndication.feed.atom.Category: void setLabel(java.lang.String)>($r7);

     label3:
        return $r0;
    }

    public static boolean isAbsoluteURI(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.sun.syndication.io.impl.Atom10Parser: java.util.regex.Pattern absoluteURIPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    public static boolean isRelativeURI(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isAbsoluteURI(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static java.lang.String resolveURI(java.lang.String, org.jdom.Parent, java.lang.String)
    {
        org.jdom.Namespace $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.jdom.Parent r1, $r7, $r10;
        java.lang.StringBuffer $r13, $r14, $r16, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11;
        java.lang.String $r0, r2, $r3, $r6, $r8, $r9, $r12, $r15, $r17, $r18, $r19, $r20, $r21, $r22, r23, $r24, r25, r26;
        org.jdom.Element $r5;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.jdom.Parent;

        r23 := @parameter2: java.lang.String;

        $z0 = <com.sun.syndication.io.impl.Atom10Parser: boolean resolveURIs>;

        if $z0 != 0 goto label01;

        return r23;

     label01:
        $z1 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isRelativeURI(java.lang.String)>(r23);

        if $z1 == 0 goto label13;

        $r0 = ".";

        $z2 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z2 != 0 goto label02;

        $r22 = "./";

        $z8 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r23);

        if $z8 != 0 goto label02;

        $r24 = r23;

        goto label03;

     label02:
        $r24 = "";

     label03:
        r23 = $r24;

        $z9 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z9 == 0 goto label05;

        if r2 == null goto label05;

        r25 = null;

        $i5 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("//");

        $i6 = $i5 + 2;

        $i7 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i6);

        $i9 = (int) -1;

        if $i7 == $i9 goto label04;

        r25 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

     label04:
        $r21 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String formURI(java.lang.String,java.lang.String)>(r25, r23);

        return $r21;

     label05:
        if r1 == null goto label11;

        $z4 = r1 instanceof org.jdom.Element;

        if $z4 == 0 goto label11;

        $r5 = (org.jdom.Element) r1;

        $r4 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        $r6 = virtualinvoke $r5.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>("base", $r4);

        r26 = $r6;

        if $r6 == null goto label10;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label10;

        $z5 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: boolean isAbsoluteURI(java.lang.String)>($r6);

        if $z5 == 0 goto label09;

        $z6 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z6 == 0 goto label07;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("//");

        $i3 = $i2 + 2;

        $i4 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String,int)>("/", $i3);

        $i11 = (int) -1;

        if $i4 == $i11 goto label06;

        r26 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label06:
        $r20 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String formURI(java.lang.String,java.lang.String)>(r26, r23);

        return $r20;

     label07:
        $z7 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z7 != 0 goto label08;

        $i1 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        r26 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label08:
        $r19 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String formURI(java.lang.String,java.lang.String)>(r26, r23);

        return $r19;

     label09:
        $r10 = interfaceinvoke r1.<org.jdom.Parent: org.jdom.Parent getParent()>();

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r12 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String stripTrailingSlash(java.lang.String)>($r6);

        $r13 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r15 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String stripStartingSlash(java.lang.String)>(r23);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(r2, $r10, $r17);

        return $r18;

     label10:
        $r7 = interfaceinvoke r1.<org.jdom.Parent: org.jdom.Parent getParent()>();

        $r8 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(r2, $r7, r23);

        return $r8;

     label11:
        if r1 == null goto label12;

        $z3 = r1 instanceof org.jdom.Document;

        if $z3 == 0 goto label13;

     label12:
        $r3 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String formURI(java.lang.String,java.lang.String)>(r2, r23);

        return $r3;

     label13:
        return r23;
    }

    private java.lang.String findBaseURI(org.jdom.Element) throws java.net.MalformedURLException
    {
        com.sun.syndication.io.impl.Atom10Parser r0;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, $r4, $r5, r6, r7;
        org.jdom.Element r1;
        boolean $z0, $z1;

        r0 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r1 := @parameter0: org.jdom.Element;

        r6 = null;

        $r2 = specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String findAtomLink(org.jdom.Element,java.lang.String)>(r1, "self");

        if $r2 == null goto label4;

        $r3 = specialinvoke r0.<com.sun.syndication.io.impl.Atom10Parser: java.lang.String findAtomLink(org.jdom.Element,java.lang.String)>(r1, "self");

        r7 = $r3;

        $r4 = ".";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = "./";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        r7 = "";

     label2:
        $i1 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i3 = (int) -1;

        if $i1 == $i3 goto label3;

        $i0 = virtualinvoke r7.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        r6 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String resolveURI(java.lang.String,org.jdom.Parent,java.lang.String)>(null, r1, r7);

     label4:
        return r6;
    }

    private java.lang.String findAtomLink(org.jdom.Element, java.lang.String)
    {
        com.sun.syndication.io.impl.Atom10Parser r6;
        org.jdom.Namespace $r1;
        java.lang.String $r9, r10, $r11, r12;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        org.jdom.Attribute $r7, $r8;
        java.util.List $r2;
        java.lang.Object $r4;
        org.jdom.Element r0, r5;

        r6 := @this: com.sun.syndication.io.impl.Atom10Parser;

        r0 := @parameter0: org.jdom.Element;

        r10 := @parameter1: java.lang.String;

        r12 = null;

        $r1 = <com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace ATOM_10_NS>;

        $r2 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("link", $r1);

        if $r2 == null goto label5;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jdom.Element) $r4;

        $r7 = virtualinvoke r6.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Attribute getAttribute(org.jdom.Element,java.lang.String)>(r5, "rel");

        $r8 = virtualinvoke r6.<com.sun.syndication.io.impl.Atom10Parser: org.jdom.Attribute getAttribute(org.jdom.Element,java.lang.String)>(r5, "href");

        if $r7 != null goto label2;

        $r11 = "alternate";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z2 != 0 goto label3;

     label2:
        if $r7 == null goto label4;

        $r9 = virtualinvoke $r7.<org.jdom.Attribute: java.lang.String getValue()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label4;

     label3:
        r12 = virtualinvoke $r8.<org.jdom.Attribute: java.lang.String getValue()>();

        goto label5;

     label4:
        goto label1;

     label5:
        return r12;
    }

    private static java.lang.String formURI(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r1;
        java.lang.StringBuffer $r9, $r10, $r11, $r13;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String $r0, $r2, $r3, r4, r5, r6, r7, $r12;
        boolean $z0, $z1;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r6 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String stripTrailingSlash(java.lang.String)>(r4);

        $r0 = staticinvoke <com.sun.syndication.io.impl.Atom10Parser: java.lang.String stripStartingSlash(java.lang.String)>(r5);

        r7 = $r0;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("..");

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $r3 = "..";

        $r2 = $r1[i3];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i5 = (int) -1;

        if $i1 == $i5 goto label3;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(3, $i2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String stripStartingSlash(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label1:
        return r0;
    }

    private static java.lang.String stripTrailingSlash(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label1:
        return r0;
    }

    public static com.sun.syndication.feed.atom.Entry parseEntry(java.io.Reader, java.lang.String) throws org.jdom.JDOMException, java.io.IOException, java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.feed.atom.Feed $r4, $r16;
        com.sun.syndication.feed.atom.Entry $r13;
        org.jdom.input.SAXBuilder $r0;
        com.sun.syndication.io.WireFeedInput $r9;
        com.sun.syndication.feed.WireFeed $r10;
        org.jdom.Document $r2, $r6;
        org.jdom.Namespace $r15;
        java.lang.String r8;
        java.io.Reader r1;
        java.util.List $r11;
        com.sun.syndication.io.WireFeedOutput $r5;
        java.lang.Object $r12;
        org.jdom.Element $r3, $r7, $r14;

        r1 := @parameter0: java.io.Reader;

        r8 := @parameter1: java.lang.String;

        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.Reader)>(r1);

        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Content detach()>();

        $r4 = new com.sun.syndication.feed.atom.Feed;

        specialinvoke $r4.<com.sun.syndication.feed.atom.Feed: void <init>()>();

        virtualinvoke $r4.<com.sun.syndication.feed.atom.Feed: void setFeedType(java.lang.String)>("atom_1.0");

        $r5 = new com.sun.syndication.io.WireFeedOutput;

        specialinvoke $r5.<com.sun.syndication.io.WireFeedOutput: void <init>()>();

        $r6 = virtualinvoke $r5.<com.sun.syndication.io.WireFeedOutput: org.jdom.Document outputJDom(com.sun.syndication.feed.WireFeed)>($r4);

        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r3);

        if r8 == null goto label1;

        $r14 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r15 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>;

        virtualinvoke $r14.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>("base", r8, $r15);

     label1:
        $r9 = new com.sun.syndication.io.WireFeedInput;

        specialinvoke $r9.<com.sun.syndication.io.WireFeedInput: void <init>()>();

        $r10 = virtualinvoke $r9.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.feed.WireFeed build(org.jdom.Document)>($r6);

        $r16 = (com.sun.syndication.feed.atom.Feed) $r10;

        $r11 = virtualinvoke $r16.<com.sun.syndication.feed.atom.Feed: java.util.List getEntries()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (com.sun.syndication.feed.atom.Entry) $r12;

        return $r13;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0;
        java.util.regex.Pattern $r1;

        <com.sun.syndication.io.impl.Atom10Parser: java.lang.String ATOM_10_URI> = "http://www.w3.org/2005/Atom";

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.w3.org/2005/Atom");

        <com.sun.syndication.io.impl.Atom10Parser: org.jdom.Namespace ATOM_10_NS> = $r0;

        <com.sun.syndication.io.impl.Atom10Parser: boolean resolveURIs> = 0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[a-z0-9]*:.*$");

        <com.sun.syndication.io.impl.Atom10Parser: java.util.regex.Pattern absoluteURIPattern> = $r1;

        return;
    }
}
