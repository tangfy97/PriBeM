public class org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer extends org.codehaus.jackson.map.ser.std.SerializerBase
{
    protected static final org.codehaus.jackson.map.JsonSerializer instance;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.SerializerBase: void <init>(java.lang.Class)>(class "Ljava/util/Date;");

        return;
    }

    public void serialize(java.util.Date, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        java.util.Date r1;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer r3;

        r3 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r0 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator)>(r1, r2);

        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        java.util.Date $r4;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.Date) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer: void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer $r0;

        $r0 = new org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer: void <init>()>();

        <org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer: org.codehaus.jackson.map.JsonSerializer instance> = $r0;

        return;
    }
}
