public class com.hp.hpl.jena.tdb.lib.StringAbbrev extends java.lang.Object
{
    java.util.Map prefix2string;

    public void <init>()
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.tdb.lib.StringAbbrev r0;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.tdb.lib.StringAbbrev;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.lib.StringAbbrev: java.util.Map prefix2string> = $r1;

        $r2 = r0.<com.hp.hpl.jena.tdb.lib.StringAbbrev: java.util.Map prefix2string>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_", ":");

        return;
    }

    public void add(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r4, $r5;
        java.util.Map $r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r0, r2, $r9;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.lib.StringAbbrev r1;

        r1 := @this: com.hp.hpl.jena.tdb.lib.StringAbbrev;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefix contains \':\' -- ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prefix is the empty string");

        throw $r4;

     label2:
        $r3 = r1.<com.hp.hpl.jena.tdb.lib.StringAbbrev: java.util.Map prefix2string>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        return;
    }

    public java.lang.String abbreviate(java.lang.String)
    {
        java.util.Map $r1;
        int $i0;
        java.lang.String r10, r12, $r17, $r19, r20;
        com.hp.hpl.jena.tdb.lib.StringAbbrev r0;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r8;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r13, $r14, $r15, $r16, $r18;
        java.lang.Object $r7, $r9, $r11;

        r0 := @this: com.hp.hpl.jena.tdb.lib.StringAbbrev;

        r20 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.tdb.lib.StringAbbrev: java.util.Map prefix2string>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (java.lang.String) $r11;

        $z2 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>(r12);

        if $z2 == 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        $r17 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>($i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label2:
        goto label1;

     label3:
        $z1 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z1 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        r20 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r20;
    }

    public java.lang.String expand(java.lang.String)
    {
        java.util.Map $r3;
        int $i0, $i1, $i2;
        java.lang.String r0, $r1, r5, $r8, $r10, $r11, $r12;
        boolean $z0;
        com.hp.hpl.jena.tdb.lib.StringAbbrev r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r9;

        r2 := @this: com.hp.hpl.jena.tdb.lib.StringAbbrev;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(":", 1);

        if $i0 >= 0 goto label2;

        return r0;

     label2:
        if $i0 != 1 goto label3;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        return $r12;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        if $r1 != null goto label4;

        $i2 = $i0 + 1;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r11;

     label4:
        $r3 = r2.<com.hp.hpl.jena.tdb.lib.StringAbbrev: java.util.Map prefix2string>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.String) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $i1 = $i0 + 1;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
