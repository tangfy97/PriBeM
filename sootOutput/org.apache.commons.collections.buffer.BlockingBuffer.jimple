public class org.apache.commons.collections.buffer.BlockingBuffer extends org.apache.commons.collections.buffer.SynchronizedBuffer
{
    private static final long serialVersionUID;
    private final long timeout;

    public static org.apache.commons.collections.Buffer decorate(org.apache.commons.collections.Buffer)
    {
        org.apache.commons.collections.Buffer r1;
        org.apache.commons.collections.buffer.BlockingBuffer $r0;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        $r0 = new org.apache.commons.collections.buffer.BlockingBuffer;

        specialinvoke $r0.<org.apache.commons.collections.buffer.BlockingBuffer: void <init>(org.apache.commons.collections.Buffer)>(r1);

        return $r0;
    }

    public static org.apache.commons.collections.Buffer decorate(org.apache.commons.collections.Buffer, long)
    {
        org.apache.commons.collections.Buffer r1;
        org.apache.commons.collections.buffer.BlockingBuffer $r0;
        long l0;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        l0 := @parameter1: long;

        $r0 = new org.apache.commons.collections.buffer.BlockingBuffer;

        specialinvoke $r0.<org.apache.commons.collections.buffer.BlockingBuffer: void <init>(org.apache.commons.collections.Buffer,long)>(r1, l0);

        return $r0;
    }

    protected void <init>(org.apache.commons.collections.Buffer)
    {
        org.apache.commons.collections.Buffer r1;
        org.apache.commons.collections.buffer.BlockingBuffer r0;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        specialinvoke r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: void <init>(org.apache.commons.collections.Buffer)>(r1);

        r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout> = 0L;

        return;
    }

    protected void <init>(org.apache.commons.collections.Buffer, long)
    {
        byte $b1;
        org.apache.commons.collections.Buffer r1;
        int $i3;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        long l0, $l2;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        r1 := @parameter0: org.apache.commons.collections.Buffer;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.commons.collections.buffer.SynchronizedBuffer: void <init>(org.apache.commons.collections.Buffer)>(r1);

        $b1 = l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label1;

        $l2 = 0L;

        goto label2;

     label1:
        $l2 = l0;

     label2:
        r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout> = $l2;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.Collection $r3;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        java.lang.Object $r1, r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        $r4 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r5;
        java.util.Collection r2, $r3;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        java.lang.Object $r1, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r2);

        $r4 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r7;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        long $l0, $l2;
        byte $b1;
        java.lang.StringBuffer $r13, $r15, $r19;
        int $i3;
        java.lang.String $r14, $r16;
        boolean $z0;
        java.io.PrintWriter $r18;
        org.apache.commons.collections.BufferUnderflowException $r20;
        java.util.Collection $r2;
        java.io.StringWriter $r17;
        org.apache.commons.collections.Buffer $r3;
        java.lang.InterruptedException $r8;
        java.lang.Object $r1, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $r2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label08;

     label02:
        $l0 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 > 0 goto label03;

        $r6 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r6.<java.lang.Object: void wait()>();

        goto label06;

     label03:
        $l2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout>;

        $r5 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object get(long)>($l2);

     label04:
        exitmonitor $r1;

     label05:
        return $r5;

     label06:
        goto label01;

     label07:
        $r8 := @caughtexception;

        $r18 = new java.io.PrintWriter;

        $r17 = new java.io.StringWriter;

        specialinvoke $r17.<java.io.StringWriter: void <init>()>();

        specialinvoke $r18.<java.io.PrintWriter: void <init>(java.io.Writer)>($r17);

        virtualinvoke $r8.<java.lang.InterruptedException: void printStackTrace(java.io.PrintWriter)>($r18);

        $r20 = new org.apache.commons.collections.BufferUnderflowException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caused by InterruptedException: ");

        $r14 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>($r16);

        throw $r20;

     label08:
        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: java.lang.Object get()>();

        exitmonitor $r1;

     label09:
        return $r4;

     label10:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r7;

        catch java.lang.InterruptedException from label02 to label04 with label07;
        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.Object get(long)
    {
        java.lang.Throwable $r8;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        long $l0, l1, l2, $l3, $l5, l6;
        byte $b4;
        java.lang.StringBuffer $r14, $r16, $r20;
        int $i7;
        java.lang.String $r15, $r17;
        boolean $z0, $z1;
        java.io.PrintWriter $r19;
        org.apache.commons.collections.BufferUnderflowException $r21, $r22;
        java.util.Collection $r2, $r6;
        java.io.StringWriter $r18;
        org.apache.commons.collections.Buffer $r3;
        java.lang.InterruptedException $r9;
        java.lang.Object $r1, $r4, $r7;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        l1 := @parameter0: long;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l0 + l1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = l2 - $l3;

     label02:
        $b4 = l6 cmp 0L;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label06;

        $r6 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label06;

     label03:
        $r7 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r7.<java.lang.Object: void wait(long)>(l6);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = l2 - $l5;

     label04:
        goto label02;

     label05:
        $r9 := @caughtexception;

        $r19 = new java.io.PrintWriter;

        $r18 = new java.io.StringWriter;

        specialinvoke $r18.<java.io.StringWriter: void <init>()>();

        specialinvoke $r19.<java.io.PrintWriter: void <init>(java.io.Writer)>($r18);

        virtualinvoke $r9.<java.lang.InterruptedException: void printStackTrace(java.io.PrintWriter)>($r19);

        $r21 = new org.apache.commons.collections.BufferUnderflowException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caused by InterruptedException: ");

        $r15 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>($r17);

        throw $r21;

     label06:
        $r2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $r22 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r22.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>("Timeout expired");

        throw $r22;

     label07:
        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: java.lang.Object get()>();

        exitmonitor $r1;

     label08:
        return $r4;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r8;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.Object remove()
    {
        java.lang.Throwable $r7;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        long $l0, $l2;
        byte $b1;
        java.lang.StringBuffer $r13, $r15, $r19;
        int $i3;
        java.lang.String $r14, $r16;
        boolean $z0;
        java.io.PrintWriter $r18;
        org.apache.commons.collections.BufferUnderflowException $r20;
        java.util.Collection $r2;
        java.io.StringWriter $r17;
        org.apache.commons.collections.Buffer $r3;
        java.lang.InterruptedException $r8;
        java.lang.Object $r1, $r4, $r5, $r6;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $r2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label08;

     label02:
        $l0 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout>;

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 > 0 goto label03;

        $r6 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r6.<java.lang.Object: void wait()>();

        goto label06;

     label03:
        $l2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: long timeout>;

        $r5 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object remove(long)>($l2);

     label04:
        exitmonitor $r1;

     label05:
        return $r5;

     label06:
        goto label01;

     label07:
        $r8 := @caughtexception;

        $r18 = new java.io.PrintWriter;

        $r17 = new java.io.StringWriter;

        specialinvoke $r17.<java.io.StringWriter: void <init>()>();

        specialinvoke $r18.<java.io.PrintWriter: void <init>(java.io.Writer)>($r17);

        virtualinvoke $r8.<java.lang.InterruptedException: void printStackTrace(java.io.PrintWriter)>($r18);

        $r20 = new org.apache.commons.collections.BufferUnderflowException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caused by InterruptedException: ");

        $r14 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>($r16);

        throw $r20;

     label08:
        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: java.lang.Object remove()>();

        exitmonitor $r1;

     label09:
        return $r4;

     label10:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r7;

        catch java.lang.InterruptedException from label02 to label04 with label07;
        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.Object remove(long)
    {
        java.lang.Throwable $r8;
        org.apache.commons.collections.buffer.BlockingBuffer r0;
        long $l0, l1, l2, $l3, $l5, l6;
        byte $b4;
        java.lang.StringBuffer $r14, $r16, $r20;
        int $i7;
        java.lang.String $r15, $r17;
        boolean $z0, $z1;
        java.io.PrintWriter $r19;
        org.apache.commons.collections.BufferUnderflowException $r21, $r22;
        java.util.Collection $r2, $r6;
        java.io.StringWriter $r18;
        org.apache.commons.collections.Buffer $r3;
        java.lang.InterruptedException $r9;
        java.lang.Object $r1, $r4, $r7;

        r0 := @this: org.apache.commons.collections.buffer.BlockingBuffer;

        l1 := @parameter0: long;

        $r1 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l0 + l1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = l2 - $l3;

     label02:
        $b4 = l6 cmp 0L;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label06;

        $r6 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label06;

     label03:
        $r7 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.lang.Object lock>;

        virtualinvoke $r7.<java.lang.Object: void wait(long)>(l6);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l6 = l2 - $l5;

     label04:
        goto label02;

     label05:
        $r9 := @caughtexception;

        $r19 = new java.io.PrintWriter;

        $r18 = new java.io.StringWriter;

        specialinvoke $r18.<java.io.StringWriter: void <init>()>();

        specialinvoke $r19.<java.io.PrintWriter: void <init>(java.io.Writer)>($r18);

        virtualinvoke $r9.<java.lang.InterruptedException: void printStackTrace(java.io.PrintWriter)>($r19);

        $r21 = new org.apache.commons.collections.BufferUnderflowException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caused by InterruptedException: ");

        $r15 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>($r17);

        throw $r21;

     label06:
        $r2 = r0.<org.apache.commons.collections.buffer.BlockingBuffer: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $r22 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r22.<org.apache.commons.collections.BufferUnderflowException: void <init>(java.lang.String)>("Timeout expired");

        throw $r22;

     label07:
        $r3 = virtualinvoke r0.<org.apache.commons.collections.buffer.BlockingBuffer: org.apache.commons.collections.Buffer getBuffer()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.collections.Buffer: java.lang.Object remove()>();

        exitmonitor $r1;

     label08:
        return $r4;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r8;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.buffer.BlockingBuffer: long serialVersionUID> = 1719328905017860541L;

        return;
    }
}
