class org.eclipse.jetty.servlets.DoSFilter$RateTracker extends org.eclipse.jetty.util.thread.Timeout$Task implements javax.servlet.http.HttpSessionBindingListener, javax.servlet.http.HttpSessionActivationListener
{
    protected final transient java.lang.String _id;
    protected final transient int _type;
    protected final transient long[] _timestamps;
    protected transient int _next;
    final org.eclipse.jetty.servlets.DoSFilter this$0;

    public void <init>(org.eclipse.jetty.servlets.DoSFilter, java.lang.String, int, int)
    {
        org.eclipse.jetty.servlets.DoSFilter r1;
        long[] $r3;
        int i0, i1;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        r1 := @parameter0: org.eclipse.jetty.servlets.DoSFilter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: org.eclipse.jetty.servlets.DoSFilter this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.util.thread.Timeout$Task: void <init>()>();

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id> = r2;

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _type> = i0;

        $r3 = newarray (long)[i1];

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps> = $r3;

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next> = 0;

        return;
    }

    public boolean isRateExceeded(long)
    {
        java.lang.Throwable $r4;
        long l1, l2, $l9;
        long[] $r1, $r2, $r3;
        byte $b8, $b10;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i11;
        boolean $z0;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        l2 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps>;

        $i0 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next>;

        l1 = $r1[$i0];

        $r2 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps>;

        $i3 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next>;

        $r2[$i3] = l2;

        $i4 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next>;

        $i6 = $i4 + 1;

        $r3 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps>;

        $i5 = lengthof $r3;

        $i7 = $i6 % $i5;

        r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next> = $i7;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

     label5:
        $b8 = l1 cmp 0L;

        if $b8 == 0 goto label6;

        $l9 = l2 - l1;

        $b10 = $l9 cmp 1000L;

        $i11 = (int) $b10;

        if $i11 >= 0 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getId()
    {
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id>;

        return $r1;
    }

    public int getType()
    {
        int $i0;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        $i0 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _type>;

        return $i0;
    }

    public void valueBound(javax.servlet.http.HttpSessionBindingEvent)
    {
        javax.servlet.http.HttpSessionBindingEvent r5;
        java.lang.Object[] $r2;
        org.eclipse.jetty.util.log.Logger $r0, $r1;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r3;
        java.lang.String $r4;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        r5 := @parameter0: javax.servlet.http.HttpSessionBindingEvent;

        $r0 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $z0 = interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $r2 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r3.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String getId()>();

        $r2[0] = $r4;

        interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Value bound: {}", $r2);

     label1:
        return;
    }

    public void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)
    {
        org.eclipse.jetty.servlets.DoSFilter $r1;
        java.lang.Object[] $r6;
        java.util.concurrent.ConcurrentHashMap $r2;
        javax.servlet.http.HttpSessionBindingEvent r8;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;
        java.lang.String $r3, $r7;
        org.eclipse.jetty.util.log.Logger $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        r8 := @parameter0: javax.servlet.http.HttpSessionBindingEvent;

        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: org.eclipse.jetty.servlets.DoSFilter this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: java.util.concurrent.ConcurrentHashMap access$500(org.eclipse.jetty.servlets.DoSFilter)>($r1);

        $r3 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $z0 = interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String getId()>();

        $r6[0] = $r7;

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Tracker removed: {}", $r6);

     label1:
        return;
    }

    public void sessionWillPassivate(javax.servlet.http.HttpSessionEvent)
    {
        org.eclipse.jetty.servlets.DoSFilter $r1;
        javax.servlet.http.HttpSession $r5;
        java.lang.Object[] $r8;
        java.util.concurrent.ConcurrentHashMap $r2;
        javax.servlet.http.HttpSessionEvent r4;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;
        java.lang.String $r3, $r9;
        org.eclipse.jetty.util.log.Logger $r6, $r7;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        r4 := @parameter0: javax.servlet.http.HttpSessionEvent;

        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: org.eclipse.jetty.servlets.DoSFilter this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: java.util.concurrent.ConcurrentHashMap access$500(org.eclipse.jetty.servlets.DoSFilter)>($r1);

        $r3 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r3);

        $r5 = virtualinvoke r4.<javax.servlet.http.HttpSessionEvent: javax.servlet.http.HttpSession getSession()>();

        interfaceinvoke $r5.<javax.servlet.http.HttpSession: void removeAttribute(java.lang.String)>("DoSFilter.Tracker");

        $r6 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $z0 = interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String getId()>();

        $r8[0] = $r9;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Value removed: {}", $r8);

     label1:
        return;
    }

    public void sessionDidActivate(javax.servlet.http.HttpSessionEvent)
    {
        java.lang.Object[] $r1;
        javax.servlet.http.HttpSessionEvent r3;
        org.eclipse.jetty.util.log.Logger $r0;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r2;

        r2 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        r3 := @parameter0: javax.servlet.http.HttpSessionEvent;

        $r0 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.log.Logger access$400()>();

        $r1 = newarray (java.lang.Object)[0];

        interfaceinvoke $r0.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("Unexpected session activation", $r1);

        return;
    }

    public void expired()
    {
        org.eclipse.jetty.servlets.DoSFilter $r1, $r4;
        long $l0, $l4, $l7;
        long[] $r3, $r7;
        byte $b3, $b5;
        int $i1, $i2, $i6, $i8, $i9;
        java.lang.String $r6;
        boolean $z0;
        org.eclipse.jetty.util.thread.Timeout $r2;
        java.util.concurrent.ConcurrentHashMap $r5;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: org.eclipse.jetty.servlets.DoSFilter this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: org.eclipse.jetty.util.thread.Timeout access$300(org.eclipse.jetty.servlets.DoSFilter)>($r1);

        $l0 = virtualinvoke $r2.<org.eclipse.jetty.util.thread.Timeout: long getNow()>();

        $i1 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next>;

        if $i1 != 0 goto label1;

        $r7 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps>;

        $i6 = lengthof $r7;

        $i8 = $i6 - 1;

        goto label2;

     label1:
        $i2 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _next>;

        $i8 = $i2 - 1;

     label2:
        $r3 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: long[] _timestamps>;

        $l7 = $r3[$i8];

        $b3 = $l7 cmp 0L;

        if $b3 == 0 goto label3;

        $l4 = $l0 - $l7;

        $b5 = $l4 cmp 1000L;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 == 0 goto label5;

        virtualinvoke r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: void reschedule()>();

        goto label6;

     label5:
        $r4 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: org.eclipse.jetty.servlets.DoSFilter this$0>;

        $r5 = staticinvoke <org.eclipse.jetty.servlets.DoSFilter: java.util.concurrent.ConcurrentHashMap access$500(org.eclipse.jetty.servlets.DoSFilter)>($r4);

        $r6 = r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id>;

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r6);

     label6:
        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6;
        org.eclipse.jetty.servlets.DoSFilter$RateTracker r2;
        java.lang.String $r3, $r7;

        r2 := @this: org.eclipse.jetty.servlets.DoSFilter$RateTracker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RateTracker/");

        $r3 = r2.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String _id>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r2.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: int _type>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
