public class org.apache.tika.parser.mp3.AudioFrame extends java.lang.Object implements org.apache.tika.parser.mp3.MP3Frame
{
    public static final int MPEG_V1;
    public static final int MPEG_V2;
    public static final int MPEG_V2_5;
    public static final int LAYER_1;
    public static final int LAYER_2;
    public static final int LAYER_3;
    private final java.lang.String version;
    private final int versionCode;
    private final int layer;
    private final int sampleRate;
    private final int channels;
    private final int bitRate;
    private final int length;
    private final float duration;

    public java.lang.String getVersion()
    {
        org.apache.tika.parser.mp3.AudioFrame r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $r1 = r0.<org.apache.tika.parser.mp3.AudioFrame: java.lang.String version>;

        return $r1;
    }

    public int getSampleRate()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int sampleRate>;

        return $i0;
    }

    public int getChannels()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int channels>;

        return $i0;
    }

    public int getVersionCode()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode>;

        return $i0;
    }

    public int getLayer()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int layer>;

        return $i0;
    }

    public int getBitRate()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int bitRate>;

        return $i0;
    }

    public int getLength()
    {
        int $i0;
        org.apache.tika.parser.mp3.AudioFrame r0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $i0 = r0.<org.apache.tika.parser.mp3.AudioFrame: int length>;

        return $i0;
    }

    public float getDuration()
    {
        org.apache.tika.parser.mp3.AudioFrame r0;
        float $f0;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        $f0 = r0.<org.apache.tika.parser.mp3.AudioFrame: float duration>;

        return $f0;
    }

    public static boolean isAudioHeader(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i6, $i8, $i10, $i12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i6 = (int) -1;

        if i0 == $i6 goto label1;

        $i8 = (int) -1;

        if i1 == $i8 goto label1;

        $i10 = (int) -1;

        if i2 == $i10 goto label1;

        $i12 = (int) -1;

        if i3 != $i12 goto label2;

     label1:
        return 0;

     label2:
        if i0 != 255 goto label3;

        $i4 = i1 & 96;

        if $i4 != 96 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void <init>(java.io.InputStream, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        int $i1, $i3, $i5, $i7;
        org.apache.tika.parser.mp3.AudioFrame r0;
        org.xml.sax.ContentHandler r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        $i1 = (int) -2;

        $i3 = (int) -2;

        $i5 = (int) -2;

        $i7 = (int) -2;

        specialinvoke r0.<org.apache.tika.parser.mp3.AudioFrame: void <init>(int,int,int,int,java.io.InputStream)>($i1, $i3, $i5, $i7, r1);

        return;
    }

    public void <init>(int, int, int, int, java.io.InputStream) throws java.io.IOException
    {
        org.apache.tika.parser.mp3.AudioFrame r0;
        short s16, s17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, i10, i11, i12, i13, $i14, $i15, $i19, $i21, $i23, $i25;
        java.lang.String $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.io.InputStream r3;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        i9 := @parameter0: int;

        i10 := @parameter1: int;

        i11 := @parameter2: int;

        i12 := @parameter3: int;

        r3 := @parameter4: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i19 = (int) -2;

        if i9 != $i19 goto label01;

        $i21 = (int) -2;

        if i10 != $i21 goto label01;

        $i23 = (int) -2;

        if i11 != $i23 goto label01;

        $i25 = (int) -2;

        if i12 != $i25 goto label01;

        i9 = virtualinvoke r3.<java.io.InputStream: int read()>();

        i10 = virtualinvoke r3.<java.io.InputStream: int read()>();

        i11 = virtualinvoke r3.<java.io.InputStream: int read()>();

        i12 = virtualinvoke r3.<java.io.InputStream: int read()>();

     label01:
        $z0 = staticinvoke <org.apache.tika.parser.mp3.AudioFrame: boolean isAudioHeader(int,int,int,int)>(i9, i10, i11, i12);

        if $z0 == 0 goto label10;

        $i0 = i10 >> 1;

        $i1 = $i0 & 3;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int layer> = $i1;

        $i2 = i10 >> 3;

        $i3 = $i2 & 3;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode> = $i3;

        $i5 = r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode>;

        $i4 = r0.<org.apache.tika.parser.mp3.AudioFrame: int layer>;

        $r2 = staticinvoke <org.apache.tika.parser.mp3.AudioFrame: java.lang.String generateVersionStr(int,int)>($i5, $i4);

        r0.<org.apache.tika.parser.mp3.AudioFrame: java.lang.String version> = $r2;

        $i6 = i11 >> 2;

        i7 = $i6 & 3;

        lookupswitch(i7)
        {
            case 0: goto label02;
            case 1: goto label03;
            default: goto label04;
        };

     label02:
        i13 = 11025;

        s17 = 11025;

        s16 = 11025;

        goto label05;

     label03:
        i13 = 12000;

        s17 = 12000;

        s16 = 12000;

        goto label05;

     label04:
        i13 = 8000;

        s17 = 8000;

        s16 = 8000;

     label05:
        $i14 = r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode>;

        if $i14 != 2 goto label06;

        i13 = s16 * 2;

        goto label07;

     label06:
        $i8 = r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode>;

        if $i8 != 3 goto label07;

        i13 = s17 * 4;

     label07:
        r0.<org.apache.tika.parser.mp3.AudioFrame: int sampleRate> = i13;

        $i15 = i12 & 402;

        if $i15 >= 3 goto label08;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int channels> = 2;

        goto label09;

     label08:
        r0.<org.apache.tika.parser.mp3.AudioFrame: int channels> = 1;

     label09:
        r0.<org.apache.tika.parser.mp3.AudioFrame: int bitRate> = 0;

        r0.<org.apache.tika.parser.mp3.AudioFrame: float duration> = 0.0F;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int length> = 0;

        goto label11;

     label10:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Magic Audio Frame Header not found");

        throw $r4;

     label11:
        return;
    }

    public void <init>(int, int, int, int, int, int, float)
    {
        org.apache.tika.parser.mp3.AudioFrame r0;
        int i0, i1, i2, i3, i4, i5;
        float f0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.AudioFrame;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        f0 := @parameter6: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.mp3.AudioFrame: int versionCode> = i0;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int layer> = i1;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int bitRate> = i2;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int sampleRate> = i3;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int channels> = i4;

        r0.<org.apache.tika.parser.mp3.AudioFrame: int length> = i5;

        r0.<org.apache.tika.parser.mp3.AudioFrame: float duration> = f0;

        $r1 = staticinvoke <org.apache.tika.parser.mp3.AudioFrame: java.lang.String generateVersionStr(int,int)>(i0, i1);

        r0.<org.apache.tika.parser.mp3.AudioFrame: java.lang.String version> = $r1;

        return;
    }

    private static java.lang.String generateVersionStr(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MPEG 3 Layer ");

        if i0 != 1 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("III");

        goto label4;

     label1:
        if i0 != 2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("II");

        goto label4;

     label2:
        if i0 != 3 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I");

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(reserved)");

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Version ");

        if i1 != 0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2.5");

        goto label8;

     label5:
        if i1 != 2 goto label6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2");

        goto label8;

     label6:
        if i1 != 3 goto label7;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        goto label8;

     label7:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(reseved)");

     label8:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.mp3.AudioFrame: int LAYER_3> = 1;

        <org.apache.tika.parser.mp3.AudioFrame: int LAYER_2> = 2;

        <org.apache.tika.parser.mp3.AudioFrame: int LAYER_1> = 3;

        <org.apache.tika.parser.mp3.AudioFrame: int MPEG_V2_5> = 0;

        <org.apache.tika.parser.mp3.AudioFrame: int MPEG_V2> = 2;

        <org.apache.tika.parser.mp3.AudioFrame: int MPEG_V1> = 3;

        return;
    }
}
