public class org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter extends java.lang.Object implements org.codehaus.jackson.impl.Indenter
{
    static final java.lang.String SYSTEM_LINE_SEPARATOR;
    static final int SPACE_COUNT;
    static final char[] SPACES;

    public void <init>()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r0;

        r0 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isInline()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r0;

        r0 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        return 0;
    }

    public void writeIndentation(org.codehaus.jackson.JsonGenerator, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter r5;
        int $i0, i1, i2;
        char[] $r2, $r3, $r4;
        java.lang.String $r1;

        r5 := @this: org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter;

        r0 := @parameter0: org.codehaus.jackson.JsonGenerator;

        i1 := @parameter1: int;

        $r1 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: java.lang.String SYSTEM_LINE_SEPARATOR>;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeRaw(java.lang.String)>($r1);

        if i1 <= 0 goto label3;

        i2 = i1 + i1;

     label1:
        if i2 <= 64 goto label2;

        $r3 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeRaw(char[],int,int)>($r3, 0, 64);

        $r4 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        $i0 = lengthof $r4;

        i2 = i2 - $i0;

        goto label1;

     label2:
        $r2 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeRaw(char[],int,int)>($r2, 0, i2);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r2;
        char[] $r0, $r1;
        java.lang.String r3, $r4;

        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: int SPACE_COUNT> = 64;

        r3 = null;

     label1:
        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        if r3 != null goto label5;

        $r4 = "\n";

        goto label6;

     label5:
        $r4 = r3;

     label6:
        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: java.lang.String SYSTEM_LINE_SEPARATOR> = $r4;

        $r0 = newarray (char)[64];

        <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES> = $r0;

        $r1 = <org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: char[] SPACES>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r1, 32);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
