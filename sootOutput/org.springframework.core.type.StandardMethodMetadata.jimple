public class org.springframework.core.type.StandardMethodMetadata extends java.lang.Object implements org.springframework.core.type.MethodMetadata
{
    private final java.lang.reflect.Method introspectedMethod;

    public void <init>(java.lang.reflect.Method)
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.reflect.Method r1;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Method must not be null");

        r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod> = r1;

        return;
    }

    public final java.lang.reflect.Method getIntrospectedMethod()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        return $r1;
    }

    public java.lang.String getMethodName()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.String $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getDeclaringClassName()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.reflect.Method $r1;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public boolean isStatic()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        int $i0;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public boolean isFinal()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        int $i0;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public boolean isOverridable()
    {
        org.springframework.core.type.StandardMethodMetadata r0;
        int $i0;
        java.lang.reflect.Method $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        $z0 = virtualinvoke r0.<org.springframework.core.type.StandardMethodMetadata: boolean isStatic()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.springframework.core.type.StandardMethodMetadata: boolean isFinal()>();

        if $z1 != 0 goto label1;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        if $z2 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAnnotated(java.lang.String)
    {
        java.lang.'annotation'.Annotation[] $r2, $r8;
        int i0, i1, i2, i3;
        java.lang.String $r5, r6, $r11;
        java.lang.reflect.Method $r1;
        boolean $z0, $z1;
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.'annotation'.Annotation r3, r9;
        java.lang.Class $r4, $r7, $r10;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof $r2;

        i2 = 0;

        goto label6;

     label1:
        r3 = $r2[i2];

        $r4 = interfaceinvoke r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r7 = interfaceinvoke r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i1 = lengthof $r8;

        i3 = 0;

        goto label5;

     label3:
        r9 = $r8[i3];

        $r10 = interfaceinvoke r9.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        i3 = i3 + 1;

     label5:
        if i3 < i1 goto label3;

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label1;

        return 0;
    }

    public java.util.Map getAnnotationAttributes(java.lang.String)
    {
        java.lang.'annotation'.Annotation[] $r2, $r8;
        java.util.Map $r12, $r13;
        int i0, i1, i2, i3;
        java.lang.String $r5, r6, $r11;
        java.lang.reflect.Method $r1;
        boolean $z0, $z1;
        org.springframework.core.type.StandardMethodMetadata r0;
        java.lang.'annotation'.Annotation r3, r9;
        java.lang.Class $r4, $r7, $r10;

        r0 := @this: org.springframework.core.type.StandardMethodMetadata;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method introspectedMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof $r2;

        i2 = 0;

        goto label6;

     label1:
        r3 = $r2[i2];

        $r4 = interfaceinvoke r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        $r13 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.'annotation'.Annotation,boolean)>(r3, 1);

        return $r13;

     label2:
        $r7 = interfaceinvoke r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i1 = lengthof $r8;

        i3 = 0;

        goto label5;

     label3:
        r9 = $r8[i3];

        $r10 = interfaceinvoke r9.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label4;

        $r12 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.'annotation'.Annotation,boolean)>(r9, 1);

        return $r12;

     label4:
        i3 = i3 + 1;

     label5:
        if i3 < i1 goto label3;

        i2 = i2 + 1;

     label6:
        if i2 < i0 goto label1;

        return null;
    }
}
