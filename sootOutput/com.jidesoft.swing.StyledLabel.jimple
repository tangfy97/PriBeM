public class com.jidesoft.swing.StyledLabel extends javax.swing.JLabel
{
    private static final java.lang.String uiClassID;
    private java.util.List _styleRanges;
    private boolean _lineWrap;
    private int _rows;
    private int _maxRows;
    private int _minRows;
    private int _preferredWidth;
    private int _rowGap;
    private boolean _truncated;
    private boolean _ignoreColorSettings;
    public static final java.lang.String PROPERTY_STYLE_RANGE;
    public static final java.lang.String PROPERTY_IGNORE_COLOR_SETTINGS;

    public void <init>()
    {
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        specialinvoke r0.<javax.swing.JLabel: void <init>()>();

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void <init>(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<javax.swing.JLabel: void <init>(javax.swing.Icon)>(r1);

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void <init>(javax.swing.Icon, int)
    {
        int i0;
        javax.swing.Icon r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r1 := @parameter0: javax.swing.Icon;

        i0 := @parameter1: int;

        specialinvoke r0.<javax.swing.JLabel: void <init>(javax.swing.Icon,int)>(r1, i0);

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JLabel: void <init>(java.lang.String)>(r1);

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<javax.swing.JLabel: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void <init>(java.lang.String, javax.swing.Icon, int)
    {
        int i0;
        javax.swing.Icon r2;
        java.lang.String r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.swing.Icon;

        i0 := @parameter2: int;

        specialinvoke r0.<javax.swing.JLabel: void <init>(java.lang.String,javax.swing.Icon,int)>(r1, r2, i0);

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = 0;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void setMaximumSize(java.awt.Dimension)>(null);

        return;
    }

    public void updateUI()
    {
        java.lang.Object $r0;
        javax.swing.plaf.ComponentUI $r2;
        com.jidesoft.swing.StyledLabel r1;

        r1 := @this: com.jidesoft.swing.StyledLabel;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("StyledLabelUI");

        if $r0 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>(r1);

        virtualinvoke r1.<com.jidesoft.swing.StyledLabel: void setUI(javax.swing.plaf.ComponentUI)>($r2);

        return;
    }

    public java.lang.String getUIClassID()
    {
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        return "StyledLabelUI";
    }

    public synchronized void addStyleRange(com.jidesoft.swing.StyleRange)
    {
        java.lang.IllegalArgumentException $r7;
        java.util.List $r2, $r3;
        com.jidesoft.swing.StyleRange r0, r5;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.Object $r4;
        com.jidesoft.swing.StyledLabel r1;

        r1 := @this: com.jidesoft.swing.StyledLabel;

        r0 := @parameter0: com.jidesoft.swing.StyleRange;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("StyleRange cannot be null.");

        throw $r7;

     label1:
        $r2 = specialinvoke r1.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i5 = $i0 - 1;

     label2:
        if i5 < 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i5);

        r5 = (com.jidesoft.swing.StyleRange) $r4;

        $i1 = virtualinvoke r5.<com.jidesoft.swing.StyleRange: int getStart()>();

        $i2 = virtualinvoke r0.<com.jidesoft.swing.StyleRange: int getStart()>();

        if $i1 != $i2 goto label3;

        $i3 = virtualinvoke r5.<com.jidesoft.swing.StyleRange: int getLength()>();

        $i4 = virtualinvoke r0.<com.jidesoft.swing.StyleRange: int getLength()>();

        if $i3 != $i4 goto label3;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i5);

     label3:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label2;

     label4:
        $r3 = specialinvoke r1.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        virtualinvoke r1.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("styleRange", null, r0);

        return;
    }

    public synchronized void setStyleRanges(com.jidesoft.swing.StyleRange[])
    {
        java.util.List $r1;
        com.jidesoft.swing.StyledLabel r0;
        com.jidesoft.swing.StyleRange[] r2;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r2 := @parameter0: com.jidesoft.swing.StyleRange[];

        $r1 = specialinvoke r0.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        interfaceinvoke $r1.<java.util.List: void clear()>();

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void addStyleRanges(com.jidesoft.swing.StyleRange[])>(r2);

        return;
    }

    public synchronized void addStyleRanges(com.jidesoft.swing.StyleRange[])
    {
        java.util.List $r3;
        int i0, i1;
        com.jidesoft.swing.StyleRange r2;
        com.jidesoft.swing.StyleRange[] r0;
        com.jidesoft.swing.StyledLabel r1;

        r1 := @this: com.jidesoft.swing.StyledLabel;

        r0 := @parameter0: com.jidesoft.swing.StyleRange[];

        if r0 == null goto label3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r0[i1];

        $r3 = specialinvoke r1.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("styleRange", null, r0);

        goto label4;

     label3:
        virtualinvoke r1.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("styleRange", null, null);

     label4:
        return;
    }

    public synchronized com.jidesoft.swing.StyleRange[] getStyleRanges()
    {
        java.util.List $r1;
        java.lang.Object[] $r3;
        int $i0;
        com.jidesoft.swing.StyledLabel r0;
        com.jidesoft.swing.StyleRange[] $r2, $r4;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $r1 = specialinvoke r0.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = newarray (com.jidesoft.swing.StyleRange)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (com.jidesoft.swing.StyleRange[]) $r3;

        return $r4;
    }

    private java.util.List internalGetStyleRanges()
    {
        java.util.List $r1, $r2;
        java.util.Vector $r3;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $r1 = r0.<com.jidesoft.swing.StyledLabel: java.util.List _styleRanges>;

        if $r1 != null goto label1;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<com.jidesoft.swing.StyledLabel: java.util.List _styleRanges> = $r3;

     label1:
        $r2 = r0.<com.jidesoft.swing.StyledLabel: java.util.List _styleRanges>;

        return $r2;
    }

    public synchronized void clearStyleRange(com.jidesoft.swing.StyleRange)
    {
        java.util.List $r1;
        com.jidesoft.swing.StyleRange r2;
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        r2 := @parameter0: com.jidesoft.swing.StyleRange;

        $r1 = specialinvoke r0.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("styleRange", r2, null);

     label1:
        return;
    }

    public synchronized void clearStyleRanges()
    {
        java.util.List $r1;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $r1 = specialinvoke r0.<com.jidesoft.swing.StyledLabel: java.util.List internalGetStyleRanges()>();

        interfaceinvoke $r1.<java.util.List: void clear()>();

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("styleRange", null, null);

        return;
    }

    public boolean isIgnoreColorSettings()
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $z0 = r0.<com.jidesoft.swing.StyledLabel: boolean _ignoreColorSettings>;

        return $z0;
    }

    public void setIgnoreColorSettings(boolean)
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.StyledLabel: boolean _ignoreColorSettings>;

        if z0 == z1 goto label1;

        r0.<com.jidesoft.swing.StyledLabel: boolean _ignoreColorSettings> = z1;

        virtualinvoke r0.<com.jidesoft.swing.StyledLabel: void firePropertyChange(java.lang.String,boolean,boolean)>("ignoreColorSettings", z0, z1);

     label1:
        return;
    }

    public java.awt.Dimension getMinimumSize()
    {
        java.awt.Dimension $r1;
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z0 == 0 goto label1;

        $r1 = new java.awt.Dimension;

        specialinvoke $r1.<java.awt.Dimension: void <init>(int,int)>(1, 1);

        goto label2;

     label1:
        $r1 = specialinvoke r0.<javax.swing.JLabel: java.awt.Dimension getMinimumSize()>();

     label2:
        return $r1;
    }

    public java.awt.Dimension getMaximumSize()
    {
        java.awt.Dimension $r1;
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.StyledLabel: boolean isLineWrap()>();

        if $z0 == 0 goto label1;

        $r1 = new java.awt.Dimension;

        specialinvoke $r1.<java.awt.Dimension: void <init>(int,int)>(2147483647, 2147483647);

        goto label2;

     label1:
        $r1 = specialinvoke r0.<javax.swing.JLabel: java.awt.Dimension getMaximumSize()>();

     label2:
        return $r1;
    }

    public void setPreferredWidth(int)
    {
        int i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.StyledLabel: int _preferredWidth> = i0;

        return;
    }

    public int getPreferredWidth()
    {
        int $i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $i0 = r0.<com.jidesoft.swing.StyledLabel: int _preferredWidth>;

        return $i0;
    }

    public boolean isLineWrap()
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $z0 = r0.<com.jidesoft.swing.StyledLabel: boolean _lineWrap>;

        return $z0;
    }

    public void setLineWrap(boolean)
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.StyledLabel: boolean _lineWrap> = z0;

        return;
    }

    public int getRows()
    {
        int $i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $i0 = r0.<com.jidesoft.swing.StyledLabel: int _rows>;

        return $i0;
    }

    public void setRows(int)
    {
        int i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.StyledLabel: int _rows> = i0;

        return;
    }

    public int getRowGap()
    {
        int $i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $i0 = r0.<com.jidesoft.swing.StyledLabel: int _rowGap>;

        return $i0;
    }

    public void setRowGap(int)
    {
        int i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.StyledLabel: int _rowGap> = i0;

        return;
    }

    public int getMaxRows()
    {
        int $i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $i0 = r0.<com.jidesoft.swing.StyledLabel: int _maxRows>;

        return $i0;
    }

    public void setMaxRows(int)
    {
        int i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.StyledLabel: int _maxRows> = i0;

        return;
    }

    public int getMinRows()
    {
        int $i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $i0 = r0.<com.jidesoft.swing.StyledLabel: int _minRows>;

        return $i0;
    }

    public void setMinRows(int)
    {
        int i0;
        com.jidesoft.swing.StyledLabel r0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.StyledLabel: int _minRows> = i0;

        return;
    }

    public boolean isTruncated()
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        $z0 = r0.<com.jidesoft.swing.StyledLabel: boolean _truncated>;

        return $z0;
    }

    public void setTruncated(boolean)
    {
        com.jidesoft.swing.StyledLabel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.StyledLabel;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.StyledLabel: boolean _truncated> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.StyledLabel: java.lang.String PROPERTY_IGNORE_COLOR_SETTINGS> = "ignoreColorSettings";

        <com.jidesoft.swing.StyledLabel: java.lang.String PROPERTY_STYLE_RANGE> = "styleRange";

        <com.jidesoft.swing.StyledLabel: java.lang.String uiClassID> = "StyledLabelUI";

        return;
    }
}
