class org.springframework.util.AntPathStringMatcher extends java.lang.Object
{
    private static final java.util.regex.Pattern GLOB_PATTERN;
    private static final java.lang.String DEFAULT_VARIABLE_PATTERN;
    private final java.util.regex.Pattern pattern;
    private java.lang.String str;
    private final java.util.List variableNames;
    private final java.util.Map uriTemplateVariables;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <org.springframework.util.AntPathStringMatcher: java.lang.String DEFAULT_VARIABLE_PATTERN> = "(.*)";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\?|\\*|\\{([^/]+?)\\}");

        <org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern GLOB_PATTERN> = $r0;

        return;
    }

    void <init>(java.lang.String, java.lang.String, java.util.Map)
    {
        org.springframework.util.AntPathStringMatcher r0;
        java.util.Map r3;
        java.lang.String r2, r4;
        java.util.regex.Pattern $r5;
        java.util.LinkedList $r1;

        r0 := @this: org.springframework.util.AntPathStringMatcher;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.util.AntPathStringMatcher: java.util.List variableNames> = $r1;

        r0.<org.springframework.util.AntPathStringMatcher: java.lang.String str> = r2;

        r0.<org.springframework.util.AntPathStringMatcher: java.util.Map uriTemplateVariables> = r3;

        $r5 = specialinvoke r0.<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern createPattern(java.lang.String)>(r4);

        r0.<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern pattern> = $r5;

        return;
    }

    private java.util.regex.Pattern createPattern(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r11, $r12;
        org.springframework.util.AntPathStringMatcher r4;
        java.lang.StringBuilder $r17;
        java.util.regex.Pattern $r2, $r16;

        r4 := @this: org.springframework.util.AntPathStringMatcher;

        r1 := @parameter0: java.lang.String;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r2 = <org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern GLOB_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        i6 = 0;

        goto label6;

     label1:
        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        $r5 = specialinvoke r4.<org.springframework.util.AntPathStringMatcher: java.lang.String quote(java.lang.String,int,int)>(r1, i6, $i0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $r7 = "?";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label5;

     label2:
        $r8 = "*";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");

        goto label5;

     label3:
        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z2 == 0 goto label5;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("}");

        if $z3 == 0 goto label5;

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(58);

        $i8 = (int) -1;

        if $i1 != $i8 goto label4;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(.*)");

        $r12 = r4.<org.springframework.util.AntPathStringMatcher: java.util.List variableNames>;

        $r13 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label5;

     label4:
        $i2 = $i1 + 1;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i2, $i4);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $r11 = r4.<org.springframework.util.AntPathStringMatcher: java.util.List variableNames>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

     label5:
        i6 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

     label6:
        $z4 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z4 != 0 goto label1;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $r14 = specialinvoke r4.<org.springframework.util.AntPathStringMatcher: java.lang.String quote(java.lang.String,int,int)>(r1, i6, $i5);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r15);

        return $r16;
    }

    private java.lang.String quote(java.lang.String, int, int)
    {
        org.springframework.util.AntPathStringMatcher r3;
        int i0, i1;
        java.lang.String r0, $r1, $r2;

        r3 := @this: org.springframework.util.AntPathStringMatcher;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != i1 goto label1;

        return "";

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r1);

        return $r2;
    }

    public boolean matchStrings()
    {
        java.util.List $r5;
        java.util.regex.Matcher $r3;
        org.springframework.util.AntPathStringMatcher r0;
        java.util.Map $r4, $r9;
        int $i0, $i1, i2;
        java.lang.Object $r6;
        java.lang.String $r1, r7, $r8;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @this: org.springframework.util.AntPathStringMatcher;

        $r2 = r0.<org.springframework.util.AntPathStringMatcher: java.util.regex.Pattern pattern>;

        $r1 = r0.<org.springframework.util.AntPathStringMatcher: java.lang.String str>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<org.springframework.util.AntPathStringMatcher: java.util.Map uriTemplateVariables>;

        if $r4 == null goto label3;

        i2 = 1;

        goto label2;

     label1:
        $r5 = r0.<org.springframework.util.AntPathStringMatcher: java.util.List variableNames>;

        $i1 = i2 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(i2);

        $r9 = r0.<org.springframework.util.AntPathStringMatcher: java.util.Map uriTemplateVariables>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8);

        i2 = i2 + 1;

     label2:
        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int groupCount()>();

        if i2 <= $i0 goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }
}
