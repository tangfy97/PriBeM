public class org.apache.html.dom.HTMLAreaElementImpl extends org.apache.html.dom.HTMLElementImpl implements org.w3c.dom.html.HTMLAreaElement
{
    private static final long serialVersionUID;

    public java.lang.String getAccessKey()
    {
        int $i0;
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1, r2;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("accesskey");

        r2 = $r1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

     label1:
        return r2;
    }

    public void setAccessKey(java.lang.String)
    {
        int $i0;
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

     label1:
        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("accesskey", r1);

        return;
    }

    public java.lang.String getAlt()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("alt");

        return $r1;
    }

    public void setAlt(java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("alt", r1);

        return;
    }

    public java.lang.String getCoords()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("coords");

        return $r1;
    }

    public void setCoords(java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("coords", r1);

        return;
    }

    public java.lang.String getHref()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("href");

        return $r1;
    }

    public void setHref(java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("href", r1);

        return;
    }

    public boolean getNoHref()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        boolean $z0;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $z0 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: boolean getBinary(java.lang.String)>("nohref");

        return $z0;
    }

    public void setNoHref(boolean)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        boolean z0;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,boolean)>("nohref", z0);

        return;
    }

    public java.lang.String getShape()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("shape");

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String capitalize(java.lang.String)>($r1);

        return $r2;
    }

    public void setShape(java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("shape", r1);

        return;
    }

    public int getTabIndex()
    {
        int $i0;
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("tabindex");

        $i0 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: int getInteger(java.lang.String)>($r1);

        return $i0;
    }

    public void setTabIndex(int)
    {
        int i0;
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("tabindex", $r1);

        return;
    }

    public java.lang.String getTarget()
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: java.lang.String getAttribute(java.lang.String)>("target");

        return $r1;
    }

    public void setTarget(java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLAreaElementImpl: void setAttribute(java.lang.String,java.lang.String)>("target", r1);

        return;
    }

    public void <init>(org.apache.html.dom.HTMLDocumentImpl, java.lang.String)
    {
        org.apache.html.dom.HTMLAreaElementImpl r0;
        org.apache.html.dom.HTMLDocumentImpl r1;
        java.lang.String r2;

        r0 := @this: org.apache.html.dom.HTMLAreaElementImpl;

        r1 := @parameter0: org.apache.html.dom.HTMLDocumentImpl;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.html.dom.HTMLElementImpl: void <init>(org.apache.html.dom.HTMLDocumentImpl,java.lang.String)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.html.dom.HTMLAreaElementImpl: long serialVersionUID> = 7164004431531608995L;

        return;
    }
}
