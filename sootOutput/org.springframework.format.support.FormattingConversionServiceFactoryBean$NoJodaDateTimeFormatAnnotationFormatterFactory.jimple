final class org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory extends java.lang.Object implements org.springframework.format.AnnotationFormatterFactory
{
    private final java.util.Set fieldTypes;

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.Set $r2;
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r0;

        r0 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(int)>(4);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(class "Ljava/util/Date;");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(class "Ljava/util/Calendar;");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(class "Ljava/lang/Long;");

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        r0.<org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory: java.util.Set fieldTypes> = $r2;

        return;
    }

    public java.util.Set getFieldTypes()
    {
        java.util.Set $r1;
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r0;

        r0 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        $r1 = r0.<org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory: java.util.Set fieldTypes>;

        return $r1;
    }

    public org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.DateTimeFormat, java.lang.Class)
    {
        java.lang.IllegalStateException $r0;
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r1;
        java.lang.Class r3;
        org.springframework.format.'annotation'.DateTimeFormat r2;

        r1 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        r2 := @parameter0: org.springframework.format.'annotation'.DateTimeFormat;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JodaTime library not available - @DateTimeFormat not supported");

        throw $r0;
    }

    public org.springframework.format.Parser getParser(org.springframework.format.'annotation'.DateTimeFormat, java.lang.Class)
    {
        java.lang.IllegalStateException $r0;
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r1;
        java.lang.Class r3;
        org.springframework.format.'annotation'.DateTimeFormat r2;

        r1 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        r2 := @parameter0: org.springframework.format.'annotation'.DateTimeFormat;

        r3 := @parameter1: java.lang.Class;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JodaTime library not available - @DateTimeFormat not supported");

        throw $r0;
    }

    public volatile org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation, java.lang.Class)
    {
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r0;
        java.lang.'annotation'.Annotation r1;
        java.lang.Class r2;
        org.springframework.format.Printer $r4, $r5;
        org.springframework.format.'annotation'.DateTimeFormat $r3;

        r0 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.Class;

        $r3 = (org.springframework.format.'annotation'.DateTimeFormat) r1;

        $r4 = virtualinvoke r0.<org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)>($r3, r2);

        $r5 = (org.springframework.format.Printer) $r4;

        return $r5;
    }

    public volatile org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation, java.lang.Class)
    {
        org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory r0;
        org.springframework.format.Parser $r4, $r5;
        java.lang.'annotation'.Annotation r1;
        java.lang.Class r2;
        org.springframework.format.'annotation'.DateTimeFormat $r3;

        r0 := @this: org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.Class;

        $r3 = (org.springframework.format.'annotation'.DateTimeFormat) r1;

        $r4 = virtualinvoke r0.<org.springframework.format.support.FormattingConversionServiceFactoryBean$NoJodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)>($r3, r2);

        $r5 = (org.springframework.format.Parser) $r4;

        return $r5;
    }
}
