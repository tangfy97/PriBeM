public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprList extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op;
    public final edu.mit.csail.sdg.alloy4.ConstList args;
    private edu.mit.csail.sdg.alloy4.Pos span;

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r3;
        java.util.Iterator $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r6;
        edu.mit.csail.sdg.alloy4.Pos $r1, $r2, $r7, r8;
        java.lang.Object $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r0;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos span>;

        if r8 != null goto label3;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        r8 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r1);

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r4 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r5;

        $r7 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        r8 = virtualinvoke r8.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r7);

        goto label1;

     label2:
        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos span> = r8;

     label3:
        return r8;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r10, $r16;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r2, $r11;
        int i0, $i1, $i2, i3, i4, $i6;
        boolean $z0;
        edu.mit.csail.sdg.alloy4.ConstList $r7, $r13, $r14;
        java.util.Iterator $r8;
        java.lang.StringBuilder r0, $r3, $r4, $r6, $r12;
        java.lang.Object $r9, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label4;

        $r11 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r12 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i3 = 0;

     label1:
        $r13 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i2 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i3 >= $i2 goto label3;

        if i3 <= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r14 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r15 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i3);

        $r16 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r15;

        $i6 = (int) -1;

        virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i6);

        i3 = i3 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label8;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i4 = i4 + 1;

        goto label5;

     label6:
        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[] with type=");

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r9;

        $i1 = i0 + 2;

        virtualinvoke r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

        goto label7;

     label8:
        return;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op, boolean, edu.mit.csail.sdg.alloy4.ConstList, long, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4.ConstList r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op r5;
        long l0;
        edu.mit.csail.sdg.alloy4.JoinableList r3;
        edu.mit.csail.sdg.alloy4.Pos r1, r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r0;
        boolean z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r5 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op;

        z0 := @parameter3: boolean;

        r6 := @parameter4: edu.mit.csail.sdg.alloy4.ConstList;

        l0 := @parameter5: long;

        r3 := @parameter6: edu.mit.csail.sdg.alloy4.JoinableList;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, z0, $r4, 0, l0, r3);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op> = r5;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args> = r6;

        return;
    }

    private static void addAND(edu.mit.csail.sdg.alloy4.ConstList$TempList, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r1, $r2, r11, $r16, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4.ConstList $r8;
        java.util.Iterator $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r12, $r15, $r17;
        java.lang.Object $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r4, $r7;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.ConstList$TempList;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.Expr TRUE>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = $r1 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z1 == 0 goto label2;

        $r12 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r14 = $r12.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op AND>;

        if $r14 != $r13 goto label2;

        $r15 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r16 = $r15.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addAND(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r16);

        $r17 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r18 = $r17.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addAND(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r18);

        return;

     label2:
        $z2 = $r1 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        if $z2 == 0 goto label5;

        $r4 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r1;

        $r6 = $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        if $r6 != $r5 goto label5;

        $r7 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r1;

        $r8 = $r7.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r10;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addAND(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, r11);

        goto label3;

     label4:
        return;

     label5:
        virtualinvoke r3.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r0);

        return;
    }

    private static void addOR(edu.mit.csail.sdg.alloy4.ConstList$TempList, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList r3;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r0, $r1, $r2, r11, $r16, $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4.ConstList $r8;
        java.util.Iterator $r9;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r12, $r15, $r17;
        java.lang.Object $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r4, $r7;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.ConstList$TempList;

        r0 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r2 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.Expr FALSE>;

        $z0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = $r1 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z1 == 0 goto label2;

        $r12 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r14 = $r12.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r13 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op OR>;

        if $r14 != $r13 goto label2;

        $r15 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r16 = $r15.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addOR(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r16);

        $r17 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r1;

        $r18 = $r17.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addOR(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, $r18);

        return;

     label2:
        $z2 = $r1 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        if $z2 == 0 goto label5;

        $r4 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r1;

        $r6 = $r4.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        if $r6 != $r5 goto label5;

        $r7 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r1;

        $r8 = $r7.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r10;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addOR(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r3, r11);

        goto label3;

     label4:
        return;

     label5:
        virtualinvoke r3.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r0);

        return;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op, java.util.List)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r10, $r13, $r16, $r24, r25, $r34, $r37;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r8, $r21, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        java.util.List r1;
        edu.mit.csail.sdg.alloy4.Pos r4, r5, $r31;
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r6, $r11, $r14, $r17, $r27, r36;
        edu.mit.csail.sdg.alloy4.ErrorType $r7, $r18, $r19, $r20;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op r2, $r3, $r22, $r28, $r32, $r38, $r39;
        long $l4, l6;
        edu.mit.csail.sdg.alloy4.JoinableList $r26, $r29, r35;
        int $i0, $i1, $i2, $i3, $i5, i7;
        edu.mit.csail.sdg.alloy4.ConstList $r41;
        java.lang.Object $r9, $r12, $r15, $r23, $r33;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r40;

        r4 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r5 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op;

        r1 := @parameter3: java.util.List;

        z6 = 0;

        r35 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.JoinableList emptyListOfErrors>;

        $r0 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>(int)>($i0);

        l6 = 0L;

        r36 = null;

        i7 = 0;

     label01:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i1 goto label15;

        $r22 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        if r2 == $r22 goto label02;

        $r32 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        if r2 != $r32 goto label03;

     label02:
        $r23 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r24 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r23;

        $r37 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        goto label04;

     label03:
        $r33 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r34 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r33;

        $r37 = virtualinvoke $r34.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

     label04:
        r25 = $r37;

        if z6 != 0 goto label05;

        $z5 = $r37.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        if $z5 == 0 goto label06;

     label05:
        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z6 = $z7;

        $l4 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        l6 = l6 + $l4;

        $i5 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int mult>;

        if $i5 == 0 goto label08;

        $r30 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        $r31 = virtualinvoke r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        specialinvoke $r30.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r31, "Multiplicity expression not allowed here.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r30);

     label08:
        $r26 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $z4 = virtualinvoke $r26.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z4 != 0 goto label09;

        $r29 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(edu.mit.csail.sdg.alloy4.JoinableList)>($r29);

        goto label11;

     label09:
        if r36 != null goto label10;

        r36 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        goto label11;

     label10:
        $r27 = r25.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r36 = virtualinvoke r36.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r27);

     label11:
        $r38 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        if r2 != $r38 goto label12;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addAND(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r0, r25);

        goto label14;

     label12:
        $r28 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        if r2 != $r28 goto label13;

        staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void addOR(edu.mit.csail.sdg.alloy4.ConstList$TempList,edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r0, r25);

        goto label14;

     label13:
        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r25);

     label14:
        i7 = i7 + 1;

        goto label01;

     label15:
        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        if r2 != $r3 goto label19;

        $i3 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: int size()>();

        if $i3 == 3 goto label16;

        $r21 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r21.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The builtin pred/totalOrder[] predicate must be called with exactly three arguments.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r21);

        goto label19;

     label16:
        $z0 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: boolean isEmpty()>();

        if $z0 == 0 goto label19;

        $r9 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: java.lang.Object get(int)>(0);

        $r10 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r9;

        $r11 = $r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z1 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(1);

        if $z1 != 0 goto label17;

        $r20 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r20.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The first argument to pred/totalOrder must be unary.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r20);

     label17:
        $r12 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: java.lang.Object get(int)>(1);

        $r13 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r12;

        $r14 = $r13.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z2 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(1);

        if $z2 != 0 goto label18;

        $r19 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r19.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The second argument to pred/totalOrder must be unary.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r19);

     label18:
        $r15 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: java.lang.Object get(int)>(2);

        $r16 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r15;

        $r17 = $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $z3 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasArity(int)>(2);

        if $z3 != 0 goto label19;

        $r18 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r18.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The third argument to pred/totalOrder must be binary.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r18);

     label19:
        $r39 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op DISJOINT>;

        if r2 != $r39 goto label21;

        $i2 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: int size()>();

        if $i2 >= 2 goto label20;

        $r8 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The builtin disjoint[] predicate must be called with at least two arguments.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r8);

     label20:
        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if r36 != $r6 goto label21;

        $r7 = new edu.mit.csail.sdg.alloy4.ErrorType;

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.ErrorType: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>(r4, "The builtin predicate disjoint[] cannot be used among expressions of different arities.");

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4.JoinableList: edu.mit.csail.sdg.alloy4.JoinableList make(java.lang.Object)>($r7);

     label21:
        $r40 = new edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        $r41 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        specialinvoke $r40.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,boolean,edu.mit.csail.sdg.alloy4.ConstList,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r4, r5, r2, z6, $r41, l6, r35);

        return $r40;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprList makeAND(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r0;
        edu.mit.csail.sdg.alloy4.ConstList $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r1, r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r5;
        edu.mit.csail.sdg.alloy4.Pos r3, r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r7;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r4 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r1 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r2 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>(int)>(2);

        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r1);

        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r2);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        $r6 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>(r3, r4, $r5, $r6);

        return $r7;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprList makeOR(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r0;
        edu.mit.csail.sdg.alloy4.ConstList $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r1, r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r5;
        edu.mit.csail.sdg.alloy4.Pos r3, r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r7;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r4 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r1 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r2 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>(int)>(2);

        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r1);

        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>(r2);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        $r6 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>(r3, r4, $r5, $r6);

        return $r7;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprList makeTOTALORDER(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, java.util.List)
    {
        java.util.List r2;
        edu.mit.csail.sdg.alloy4.Pos r0, r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r4;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter2: java.util.List;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>(r0, r1, $r3, r2);

        return $r4;
    }

    public static edu.mit.csail.sdg.alloy4compiler.ast.ExprList makeDISJOINT(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4.Pos, java.util.List)
    {
        java.util.List r2;
        edu.mit.csail.sdg.alloy4.Pos r0, r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList $r4;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter2: java.util.List;

        $r3 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op DISJOINT>;

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>(r0, r1, $r3, r2);

        return $r4;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.ExprList addArg(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4.ConstList $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r4;
        java.util.ArrayList $r0;
        edu.mit.csail.sdg.alloy4.Pos $r5, $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r1, $r7;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r3);

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        $r4 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r7 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>($r6, $r5, $r4, $r0);

        return $r7;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4.ConstList$TempList $r0, $r38, $r39;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r63, $r64;
        edu.mit.csail.sdg.alloy4.ConstList $r2, $r13, $r14, $r19, $r25, $r30, $r36, $r40, $r42, $r44, $r45, $r46, $r50, $r54, $r58, $r66;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r1, $r69;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r16, $r22, $r23, $r24, $r27, $r28, $r29, $r32, $r34, $r35, $r48, $r49, $r52, $r56, $r61, $r62, r67, r68;
        boolean z0, $z1;
        java.util.Collection r21;
        edu.mit.csail.sdg.alloy4.Pos $r10, $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r17, $r18, $r33, $r53, $r57, $r60, r65;
        edu.mit.csail.sdg.alloy4.JoinableList $r3;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7;
        java.lang.Object $r15, $r20, $r26, $r31, $r37, $r41, $r43, $r47, $r51, $r55, $r59;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r65 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r21 := @parameter1: java.util.Collection;

        $r0 = new edu.mit.csail.sdg.alloy4.ConstList$TempList;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: void <init>(int)>($i0);

        z0 = 0;

        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i1 <= 0 goto label01;

        return r1;

     label01:
        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op AND>;

        if $r5 == $r4 goto label02;

        $r64 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r63 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op OR>;

        if $r64 != $r63 goto label05;

     label02:
        i4 = 0;

     label03:
        $r66 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i5 = virtualinvoke $r66.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i4 >= $i5 goto label05;

        $r58 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r59 = virtualinvoke $r58.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i4);

        r67 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r59;

        $r60 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        $r61 = virtualinvoke r67.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r60, r21);

        $r62 = virtualinvoke $r61.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_formula()>();

        if r67 == $r62 goto label04;

        z0 = 1;

     label04:
        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r62);

        i4 = i4 + 1;

        goto label03;

     label05:
        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r6 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op DISJOINT>;

        if $r7 != $r6 goto label12;

        i6 = 0;

     label06:
        $r44 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i2 = virtualinvoke $r44.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i6 >= $i2 goto label09;

        if i6 != 0 goto label07;

        $r54 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r55 = virtualinvoke $r54.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i6);

        $r56 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r55;

        $r57 = $r56.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r65 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r57);

        goto label08;

     label07:
        $r50 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r51 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i6);

        $r52 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r51;

        $r53 = $r52.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r65 = virtualinvoke r65.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type unionWithCommonArity(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r53);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        i7 = 0;

     label10:
        $r45 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i3 = virtualinvoke $r45.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if i7 >= $i3 goto label12;

        $r46 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r47 = virtualinvoke $r46.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(i7);

        r68 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r47;

        $r48 = virtualinvoke r68.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r65, r21);

        $r49 = virtualinvoke $r48.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        if r68 == $r49 goto label11;

        z0 = 1;

     label11:
        virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r49);

        i7 = i7 + 1;

        goto label10;

     label12:
        $r9 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        if $r9 != $r8 goto label16;

        $r14 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r15 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r16 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r15;

        $r17 = $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r18 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type pickUnary()>();

        $r19 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r20 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r22 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r20;

        $r23 = virtualinvoke $r22.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r18, r21);

        $r24 = virtualinvoke $r23.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        $r25 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r26 = virtualinvoke $r25.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(1);

        $r27 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r26;

        $r28 = virtualinvoke $r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r18, r21);

        $r29 = virtualinvoke $r28.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        $r30 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r31 = virtualinvoke $r30.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(2);

        $r32 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r31;

        $r33 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type product(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r18);

        $r34 = virtualinvoke $r32.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>($r33, r21);

        $r35 = virtualinvoke $r34.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr typecheck_as_set()>();

        $r36 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r37 = virtualinvoke $r36.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        if $r24 != $r37 goto label13;

        $r40 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r41 = virtualinvoke $r40.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(1);

        if $r29 != $r41 goto label13;

        $r42 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r43 = virtualinvoke $r42.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(2);

        if $r35 == $r43 goto label14;

     label13:
        $z1 = 1;

        goto label15;

     label14:
        $z1 = 0;

     label15:
        z0 = $z1;

        $r38 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r24);

        $r39 = virtualinvoke $r38.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r29);

        virtualinvoke $r39.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList$TempList add(java.lang.Object)>($r35);

     label16:
        if z0 == 0 goto label17;

        $r10 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r11 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.Pos closingBracket>;

        $r12 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r13 = virtualinvoke $r0.<edu.mit.csail.sdg.alloy4.ConstList$TempList: edu.mit.csail.sdg.alloy4.ConstList makeConst()>();

        $r69 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op,java.util.List)>($r10, $r11, $r12, $r13);

        goto label18;

     label17:
        $r69 = r1;

     label18:
        return $r69;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        java.util.Iterator $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r4;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r0;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        i2 = 1;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r3;

        $i1 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        if i2 >= $i1 goto label2;

        i2 = $i1;

     label2:
        goto label1;

     label3:
        $i0 = 1 + i2;

        return $i0;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprList)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r2;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b>");

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [ ]</b>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4.ConstList $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        return $r1;
    }
}
