public class org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor extends java.lang.Thread implements org.apache.zookeeper.server.RequestProcessor
{
    private static final org.slf4j.Logger LOG;
    private java.util.concurrent.LinkedBlockingQueue queuedRequests;
    private boolean finished;
    private org.apache.zookeeper.server.RequestProcessor nextProcessor;
    private org.apache.zookeeper.server.ZooKeeperServer zks;

    public void <init>(org.apache.zookeeper.server.ZooKeeperServer, org.apache.zookeeper.server.RequestProcessor)
    {
        org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor r0;
        long $l0;
        java.util.concurrent.LinkedBlockingQueue $r6;
        org.apache.zookeeper.server.ZooKeeperServer r3;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;
        org.apache.zookeeper.server.RequestProcessor r7;

        r0 := @this: org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor;

        r3 := @parameter0: org.apache.zookeeper.server.ZooKeeperServer;

        r7 := @parameter1: org.apache.zookeeper.server.RequestProcessor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReadOnlyRequestProcessor:");

        $l0 = virtualinvoke r3.<org.apache.zookeeper.server.ZooKeeperServer: long getServerId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>($r5);

        $r6 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests> = $r6;

        r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: boolean finished> = 0;

        r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.ZooKeeperServer zks> = r3;

        r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor> = r7;

        return;
    }

    public void run()
    {
        org.apache.zookeeper.server.ServerCnxn $r9;
        org.apache.zookeeper.server.RequestProcessor $r10, $r11;
        boolean $z0, $z1, $z2;
        java.util.concurrent.LinkedBlockingQueue $r1;
        java.lang.Exception $r13;
        org.apache.zookeeper.server.Request $r4, r25;
        org.apache.zookeeper.proto.ReplyHeader $r5;
        java.lang.Throwable $r16, $r19;
        org.apache.zookeeper.server.ZKDatabase $r7;
        org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor r0;
        long $l3, l5;
        org.apache.zookeeper.KeeperException$Code $r8;
        int $i0, $i1, $i2, $i4;
        org.apache.zookeeper.server.RequestProcessor$RequestProcessorException $r15;
        java.lang.String $r20;
        org.slf4j.Logger $r3, $r12, $r14, $r17, $r18, $r22, $r24, $r26;
        java.io.IOException $r23;
        org.apache.zookeeper.server.ZooKeeperServer $r6;
        java.lang.InterruptedException $r21;
        java.lang.Object $r2;

        r0 := @this: org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor;

     label01:
        $z2 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: boolean finished>;

        if $z2 != 0 goto label11;

        $r1 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        r25 = (org.apache.zookeeper.server.Request) $r2;

        l5 = 2L;

        $i0 = r25.<org.apache.zookeeper.server.Request: int type>;

        if $i0 != 11 goto label02;

        l5 = 8L;

     label02:
        $r3 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label03;

        $r12 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logRequest(org.slf4j.Logger,long,char,org.apache.zookeeper.server.Request,java.lang.String)>($r12, l5, 82, r25, "");

     label03:
        $r4 = <org.apache.zookeeper.server.Request: org.apache.zookeeper.server.Request requestOfDeath>;

        if $r4 != r25 goto label04;

        goto label11;

     label04:
        $i1 = r25.<org.apache.zookeeper.server.Request: int type>;

        tableswitch($i1)
        {
            case 1: goto label05;
            case 2: goto label05;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label05;
            case 6: goto label09;
            case 7: goto label05;
            case 8: goto label09;
            case 9: goto label05;
            default: goto label09;
        };

     label05:
        $r5 = new org.apache.zookeeper.proto.ReplyHeader;

        $i2 = r25.<org.apache.zookeeper.server.Request: int cxid>;

        $r6 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.ZooKeeperServer zks>;

        $r7 = virtualinvoke $r6.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ZKDatabase getZKDatabase()>();

        $l3 = virtualinvoke $r7.<org.apache.zookeeper.server.ZKDatabase: long getDataTreeLastProcessedZxid()>();

        $r8 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code NOTREADONLY>;

        $i4 = virtualinvoke $r8.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        specialinvoke $r5.<org.apache.zookeeper.proto.ReplyHeader: void <init>(int,long,int)>($i2, $l3, $i4);

     label06:
        $r9 = r25.<org.apache.zookeeper.server.Request: org.apache.zookeeper.server.ServerCnxn cnxn>;

        virtualinvoke $r9.<org.apache.zookeeper.server.ServerCnxn: void sendResponse(org.apache.zookeeper.proto.ReplyHeader,org.apache.jute.Record,java.lang.String)>($r5, null, null);

     label07:
        goto label01;

     label08:
        $r23 := @caughtexception;

        $r24 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("IO exception while sending response", $r23);

        goto label01;

     label09:
        $r10 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor>;

        if $r10 == null goto label10;

        $r11 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor>;

        interfaceinvoke $r11.<org.apache.zookeeper.server.RequestProcessor: void processRequest(org.apache.zookeeper.server.Request)>(r25);

     label10:
        goto label01;

     label11:
        goto label16;

     label12:
        $r21 := @caughtexception;

        $r22 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected interruption", $r21);

        goto label16;

     label13:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<org.apache.zookeeper.server.RequestProcessor$RequestProcessorException: java.lang.Throwable getCause()>();

        $z1 = $r16 instanceof org.apache.zookeeper.server.quorum.Leader$XidRolloverException;

        if $z1 == 0 goto label14;

        $r18 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        $r19 = virtualinvoke $r15.<org.apache.zookeeper.server.RequestProcessor$RequestProcessorException: java.lang.Throwable getCause()>();

        $r20 = virtualinvoke $r19.<java.lang.Throwable: java.lang.String getMessage()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>($r20);

     label14:
        $r17 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r15);

        goto label16;

     label15:
        $r13 := @caughtexception;

        $r14 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r13);

     label16:
        $r26 = <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG>;

        interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>("ReadOnlyRequestProcessor exited loop!");

        return;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.InterruptedException from label01 to label11 with label12;
        catch org.apache.zookeeper.server.RequestProcessor$RequestProcessorException from label01 to label11 with label13;
        catch java.lang.Exception from label01 to label11 with label15;
    }

    public void processRequest(org.apache.zookeeper.server.Request)
    {
        org.apache.zookeeper.server.Request r1;
        org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor r0;
        java.util.concurrent.LinkedBlockingQueue $r2;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor;

        r1 := @parameter0: org.apache.zookeeper.server.Request;

        $z0 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: boolean finished>;

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.Request $r2;
        org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor r0;
        org.apache.zookeeper.server.RequestProcessor $r4;
        java.util.concurrent.LinkedBlockingQueue $r1, $r3;

        r0 := @this: org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor;

        r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: boolean finished> = 1;

        $r1 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        virtualinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void clear()>();

        $r3 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: java.util.concurrent.LinkedBlockingQueue queuedRequests>;

        $r2 = <org.apache.zookeeper.server.Request: org.apache.zookeeper.server.Request requestOfDeath>;

        virtualinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r2);

        $r4 = r0.<org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.apache.zookeeper.server.RequestProcessor nextProcessor>;

        interfaceinvoke $r4.<org.apache.zookeeper.server.RequestProcessor: void shutdown()>();

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor;");

        <org.apache.zookeeper.server.quorum.ReadOnlyRequestProcessor: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
