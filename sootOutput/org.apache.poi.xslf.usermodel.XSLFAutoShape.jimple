public class org.apache.poi.xslf.usermodel.XSLFAutoShape extends org.apache.poi.xslf.usermodel.XSLFTextShape
{

    void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTShape, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.apache.poi.xslf.usermodel.XSLFSheet r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShape r1;
        org.apache.poi.xslf.usermodel.XSLFAutoShape r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFAutoShape;

        r1 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTShape;

        r2 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextShape: void <init>(org.apache.xmlbeans.XmlObject,org.apache.poi.xslf.usermodel.XSLFSheet)>(r1, r2);

        return;
    }

    static org.apache.poi.xslf.usermodel.XSLFAutoShape create(org.openxmlformats.schemas.presentationml.x2006.main.CTShape, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        org.apache.poi.xslf.usermodel.XSLFTextBox $r6;
        org.apache.poi.xslf.usermodel.XSLFAutoShape $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingShapeProps $r3;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual $r2;
        org.apache.poi.xslf.usermodel.XSLFSheet r5;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShape r0;
        org.apache.poi.xslf.usermodel.XSLFFreeformShape $r7;
        boolean $z0, $z1;

        r0 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTShape;

        r5 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetCustGeom()>();

        if $z0 == 0 goto label1;

        $r7 = new org.apache.poi.xslf.usermodel.XSLFFreeformShape;

        specialinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFFreeformShape: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTShape,org.apache.poi.xslf.usermodel.XSLFSheet)>(r0, r5);

        return $r7;

     label1:
        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual getNvSpPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingShapeProps getCNvSpPr()>();

        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingShapeProps: boolean isSetTxBox()>();

        if $z1 == 0 goto label2;

        $r6 = new org.apache.poi.xslf.usermodel.XSLFTextBox;

        specialinvoke $r6.<org.apache.poi.xslf.usermodel.XSLFTextBox: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTShape,org.apache.poi.xslf.usermodel.XSLFSheet)>(r0, r5);

        return $r6;

     label2:
        $r4 = new org.apache.poi.xslf.usermodel.XSLFAutoShape;

        specialinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFAutoShape: void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTShape,org.apache.poi.xslf.usermodel.XSLFSheet)>(r0, r5);

        return $r4;
    }

    static org.openxmlformats.schemas.presentationml.x2006.main.CTShape prototype(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r7;
        long $l2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r8;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual $r1;
        org.openxmlformats.schemas.presentationml.x2006.main.CTShape $r0;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.CTShape$Factory: org.openxmlformats.schemas.presentationml.x2006.main.CTShape newInstance()>();

        $r1 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual addNewNvSpPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AutoShape ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>($r6);

        $i1 = i0 + 1;

        $l2 = (long) $i1;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>($l2);

        interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingShapeProps addNewCNvSpPr()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTShapeNonVisual: org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps addNewNvPr()>();

        $r7 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties addNewSpPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D addNewPrstGeom()>();

        $r9 = <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum RECT>;

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r9);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList addNewAvLst()>();

        return $r0;
    }

    protected org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTextBody(boolean)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTShape r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r3, $r4, r5;
        org.apache.poi.xslf.usermodel.XSLFAutoShape r0;
        org.apache.xmlbeans.XmlObject $r1;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFAutoShape;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFAutoShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        r2 = (org.openxmlformats.schemas.presentationml.x2006.main.CTShape) $r1;

        $r3 = interfaceinvoke r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        r5 = $r3;

        if $r3 != null goto label1;

        if z0 == 0 goto label1;

        $r4 = interfaceinvoke r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody addNewTxBody()>();

        r5 = $r4;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties addNewBodyPr()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextListStyle addNewLstStyle()>();

     label1:
        return r5;
    }

    public java.lang.String toString()
    {
        org.apache.poi.xslf.usermodel.XSLFAutoShape r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8;
        java.lang.Class $r3;
        java.lang.String $r4, $r7, $r9;

        r2 := @this: org.apache.poi.xslf.usermodel.XSLFAutoShape;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r7 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFAutoShape: java.lang.String getShapeName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
