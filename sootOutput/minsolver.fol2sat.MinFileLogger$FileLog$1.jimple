class minsolver.fol2sat.MinFileLogger$FileLog$1 extends java.lang.Object implements java.util.Iterator
{
    final kodkod.instance.TupleFactory factory;
    final java.io.DataInputStream in;
    final minsolver.fol2sat.MinFileLogger$MutableRecord current;
    final minsolver.fol2sat.MinFileLogger$MutableRecord next;
    long remaining;
    final minsolver.fol2sat.MinFileLogger$FileLog this$1;
    private final minsolver.fol2sat.MinRecordFilter val$filter;

    void <init>(minsolver.fol2sat.MinFileLogger$FileLog, minsolver.fol2sat.MinRecordFilter) throws java.io.FileNotFoundException
    {
        java.io.DataInputStream $r6;
        java.io.BufferedInputStream $r7;
        minsolver.fol2sat.MinRecordFilter r2;
        long $l0;
        minsolver.fol2sat.MinFileLogger$FileLog r1;
        java.io.FileInputStream $r8;
        java.io.File $r9, $r12;
        minsolver.fol2sat.MinFileLogger$MutableRecord $r10, $r11;
        kodkod.instance.Bounds $r3;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r0;
        kodkod.instance.Universe $r4;
        kodkod.instance.TupleFactory $r5;

        r0 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

        r1 := @parameter0: minsolver.fol2sat.MinFileLogger$FileLog;

        r2 := @parameter1: minsolver.fol2sat.MinRecordFilter;

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1> = r1;

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinRecordFilter val$filter> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.instance.Bounds access$0(minsolver.fol2sat.MinFileLogger$FileLog)>(r1);

        $r4 = virtualinvoke $r3.<kodkod.instance.Bounds: kodkod.instance.Universe universe()>();

        $r5 = virtualinvoke $r4.<kodkod.instance.Universe: kodkod.instance.TupleFactory factory()>();

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: kodkod.instance.TupleFactory factory> = $r5;

        $r6 = new java.io.DataInputStream;

        $r7 = new java.io.BufferedInputStream;

        $r8 = new java.io.FileInputStream;

        $r9 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: java.io.File access$1(minsolver.fol2sat.MinFileLogger$FileLog)>(r1);

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r9);

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r7);

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: java.io.DataInputStream in> = $r6;

        $r10 = new minsolver.fol2sat.MinFileLogger$MutableRecord;

        specialinvoke $r10.<minsolver.fol2sat.MinFileLogger$MutableRecord: void <init>(minsolver.fol2sat.MinFileLogger$MutableRecord)>(null);

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord current> = $r10;

        $r11 = new minsolver.fol2sat.MinFileLogger$MutableRecord;

        specialinvoke $r11.<minsolver.fol2sat.MinFileLogger$MutableRecord: void <init>(minsolver.fol2sat.MinFileLogger$MutableRecord)>(null);

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord next> = $r11;

        $r12 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: java.io.File access$1(minsolver.fol2sat.MinFileLogger$FileLog)>(r1);

        $l0 = virtualinvoke $r12.<java.io.File: long length()>();

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: long remaining> = $l0;

        return;
    }

    public boolean hasNext()
    {
        minsolver.fol2sat.MinFileLogger$MutableRecord $r1, $r4, $r24;
        byte $b1;
        kodkod.ast.Formula[] $r21, $r28;
        java.util.Map r34;
        boolean $z0;
        kodkod.util.collections.FixedMap $r35;
        minsolver.fol2sat.MinFileLogger$FileLog $r7, $r16, $r19, $r23, $r26;
        kodkod.ast.Variable $r12;
        kodkod.ast.Variable[] r9;
        java.io.DataInputStream $r3, $r6, $r11;
        long $l0, $l2, $l4, $l12, $l13, $l14;
        minsolver.fol2sat.MinRecordFilter $r17;
        kodkod.ast.Variable[][] $r8;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r0;
        int i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, i15, $i16;
        kodkod.instance.TupleFactory $r13;
        kodkod.instance.TupleSet $r15;
        kodkod.util.ints.IntSet $r14;
        kodkod.ast.Formula $r22, $r29;
        java.io.IOException $r30, $r32;
        java.lang.RuntimeException $r36, $r37;
        kodkod.ast.Node $r2, $r5, $r20, $r27;
        kodkod.ast.Node[] $r18, $r25;

        r0 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

        goto label09;

     label01:
        $r6 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: java.io.DataInputStream in>;

        $l2 = virtualinvoke $r6.<java.io.DataInputStream: long readLong()>();

        i3 = (int) $l2;

        $l4 = $l2 >>> 32;

        i5 = (int) $l4;

        $r7 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1>;

        $r8 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.ast.Variable[][] access$2(minsolver.fol2sat.MinFileLogger$FileLog)>($r7);

        r9 = $r8[i5];

        $i6 = lengthof r9;

        if $i6 != 0 goto label02;

        r34 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label05;

     label02:
        $r35 = new kodkod.util.collections.FixedMap;

        specialinvoke $r35.<kodkod.util.collections.FixedMap: void <init>(java.lang.Object[])>(r9);

        r34 = $r35;

        i15 = 0;

        goto label04;

     label03:
        $r12 = r9[i15];

        $r13 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: kodkod.instance.TupleFactory factory>;

        $r11 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: java.io.DataInputStream in>;

        $i8 = virtualinvoke $r11.<java.io.DataInputStream: int readInt()>();

        $r14 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet singleton(int)>($i8);

        $r15 = virtualinvoke $r13.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet setOf(int,kodkod.util.ints.IntSet)>(1, $r14);

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r15);

        i15 = i15 + 1;

     label04:
        $i7 = lengthof r9;

        if i15 < $i7 goto label03;

     label05:
        $r17 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinRecordFilter val$filter>;

        $r16 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1>;

        $r18 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.ast.Node[] access$3(minsolver.fol2sat.MinFileLogger$FileLog)>($r16);

        $r20 = $r18[i5];

        $r19 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1>;

        $r21 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.ast.Formula[] access$4(minsolver.fol2sat.MinFileLogger$FileLog)>($r19);

        $r22 = $r21[i5];

        $z0 = interfaceinvoke $r17.<minsolver.fol2sat.MinRecordFilter: boolean accept(kodkod.ast.Node,kodkod.ast.Formula,int,java.util.Map)>($r20, $r22, i3, r34);

        if $z0 == 0 goto label06;

        $r24 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord next>;

        $r23 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1>;

        $r25 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.ast.Node[] access$3(minsolver.fol2sat.MinFileLogger$FileLog)>($r23);

        $r27 = $r25[i5];

        $r26 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$FileLog this$1>;

        $r28 = staticinvoke <minsolver.fol2sat.MinFileLogger$FileLog: kodkod.ast.Formula[] access$4(minsolver.fol2sat.MinFileLogger$FileLog)>($r26);

        $r29 = $r28[i5];

        virtualinvoke $r24.<minsolver.fol2sat.MinFileLogger$MutableRecord: void setAll(kodkod.ast.Node,kodkod.ast.Formula,int,java.util.Map)>($r27, $r29, i3, r34);

     label06:
        $l13 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: long remaining>;

        $i9 = lengthof r9;

        $i10 = $i9 << 2;

        $i11 = 8 + $i10;

        $l12 = (long) $i11;

        $l14 = $l13 - $l12;

        r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: long remaining> = $l14;

     label07:
        goto label09;

     label08:
        $r32 := @caughtexception;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r32);

        throw $r36;

     label09:
        $l0 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: long remaining>;

        $b1 = $l0 cmp 0L;

        $i16 = (int) $b1;

        if $i16 <= 0 goto label10;

        $r4 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord next>;

        $r5 = $r4.<minsolver.fol2sat.MinFileLogger$MutableRecord: kodkod.ast.Node node>;

        if $r5 == null goto label01;

     label10:
        $r1 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord next>;

        $r2 = $r1.<minsolver.fol2sat.MinFileLogger$MutableRecord: kodkod.ast.Node node>;

        if $r2 != null goto label15;

     label11:
        $r3 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: java.io.DataInputStream in>;

        virtualinvoke $r3.<java.io.DataInputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r30 := @caughtexception;

        $r37 = new java.lang.RuntimeException;

        specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r30);

        throw $r37;

     label14:
        return 0;

     label15:
        return 1;

        catch java.io.IOException from label01 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public minsolver.fol2sat.MinTranslationRecord next()
    {
        minsolver.fol2sat.MinFileLogger$MutableRecord $r1, $r2;
        minsolver.fol2sat.MinTranslationRecord $r3;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r0;
        java.util.NoSuchElementException $r4;
        boolean $z0;

        r0 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

        $z0 = virtualinvoke r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord current>;

        $r1 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinFileLogger$MutableRecord next>;

        $r3 = virtualinvoke $r2.<minsolver.fol2sat.MinFileLogger$MutableRecord: minsolver.fol2sat.MinTranslationRecord setAll(minsolver.fol2sat.MinFileLogger$MutableRecord)>($r1);

        return $r3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r1;

        r1 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected final void finalize()
    {
        java.io.DataInputStream $r1;
        java.io.IOException $r2;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r0;

        r0 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

     label1:
        $r1 = r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: java.io.DataInputStream in>;

        virtualinvoke $r1.<java.io.DataInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public volatile java.lang.Object next()
    {
        minsolver.fol2sat.MinTranslationRecord $r1;
        minsolver.fol2sat.MinFileLogger$FileLog$1 r0;

        r0 := @this: minsolver.fol2sat.MinFileLogger$FileLog$1;

        $r1 = virtualinvoke r0.<minsolver.fol2sat.MinFileLogger$FileLog$1: minsolver.fol2sat.MinTranslationRecord next()>();

        return $r1;
    }
}
