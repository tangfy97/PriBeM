public class org.apache.xml.utils.XMLStringFactoryDefault extends org.apache.xml.utils.XMLStringFactory
{
    private static final org.apache.xml.utils.XMLStringDefault EMPTY_STR;

    public void <init>()
    {
        org.apache.xml.utils.XMLStringFactoryDefault r0;

        r0 := @this: org.apache.xml.utils.XMLStringFactoryDefault;

        specialinvoke r0.<org.apache.xml.utils.XMLStringFactory: void <init>()>();

        return;
    }

    public org.apache.xml.utils.XMLString newstr(java.lang.String)
    {
        org.apache.xml.utils.XMLStringDefault $r0;
        java.lang.String r1;
        org.apache.xml.utils.XMLStringFactoryDefault r2;

        r2 := @this: org.apache.xml.utils.XMLStringFactoryDefault;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public org.apache.xml.utils.XMLString newstr(org.apache.xml.utils.FastStringBuffer, int, int)
    {
        org.apache.xml.utils.XMLStringDefault $r0;
        org.apache.xml.utils.FastStringBuffer r1;
        int i0, i1;
        java.lang.String $r2;
        org.apache.xml.utils.XMLStringFactoryDefault r3;

        r3 := @this: org.apache.xml.utils.XMLStringFactoryDefault;

        r1 := @parameter0: org.apache.xml.utils.FastStringBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r2 = virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: java.lang.String getString(int,int)>(i0, i1);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r2);

        return $r0;
    }

    public org.apache.xml.utils.XMLString newstr(char[], int, int)
    {
        org.apache.xml.utils.XMLStringDefault $r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;
        org.apache.xml.utils.XMLStringFactoryDefault r3;

        r3 := @this: org.apache.xml.utils.XMLStringFactoryDefault;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    public org.apache.xml.utils.XMLString emptystr()
    {
        org.apache.xml.utils.XMLStringDefault $r0;
        org.apache.xml.utils.XMLStringFactoryDefault r1;

        r1 := @this: org.apache.xml.utils.XMLStringFactoryDefault;

        $r0 = <org.apache.xml.utils.XMLStringFactoryDefault: org.apache.xml.utils.XMLStringDefault EMPTY_STR>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.xml.utils.XMLStringDefault $r0;

        $r0 = new org.apache.xml.utils.XMLStringDefault;

        specialinvoke $r0.<org.apache.xml.utils.XMLStringDefault: void <init>(java.lang.String)>("");

        <org.apache.xml.utils.XMLStringFactoryDefault: org.apache.xml.utils.XMLStringDefault EMPTY_STR> = $r0;

        return;
    }
}
