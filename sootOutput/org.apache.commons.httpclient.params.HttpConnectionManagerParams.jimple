public class org.apache.commons.httpclient.params.HttpConnectionManagerParams extends org.apache.commons.httpclient.params.HttpConnectionParams
{
    public static final java.lang.String MAX_HOST_CONNECTIONS;
    public static final java.lang.String MAX_TOTAL_CONNECTIONS;

    public void <init>()
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        specialinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionParams: void <init>()>();

        return;
    }

    public void setDefaultMaxConnectionsPerHost(int)
    {
        int i0;
        org.apache.commons.httpclient.HostConfiguration $r1;
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        i0 := @parameter0: int;

        $r1 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration,int)>($r1, i0);

        return;
    }

    public void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration, int)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        java.util.HashMap $r3, $r6, r8;
        java.lang.IllegalArgumentException $r7;
        java.lang.Integer $r5;
        org.apache.commons.httpclient.HostConfiguration r4;
        java.util.Map r2;
        int i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        r4 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxHostConnections must be greater than 0");

        throw $r7;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.max-per-host");

        r2 = (java.util.Map) $r1;

        if r2 != null goto label2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r8 = $r6;

        goto label3;

     label2:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>(r2);

        r8 = $r3;

     label3:
        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0);

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r5);

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setParameter(java.lang.String,java.lang.Object)>("http.connection-manager.max-per-host", r8);

        return;
    }

    public int getDefaultMaxConnectionsPerHost()
    {
        int $i0;
        org.apache.commons.httpclient.HostConfiguration $r1;
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $r1 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)>($r1);

        return $i0;
    }

    public int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;
        java.lang.Integer r5;
        org.apache.commons.httpclient.HostConfiguration r3, $r6, $r7;
        java.util.Map r2;
        int $i0, $i1;
        java.lang.Object $r1, $r4;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        r3 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.max-per-host");

        r2 = (java.util.Map) $r1;

        if r2 != null goto label1;

        return 2;

     label1:
        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.lang.Integer) $r4;

        if r5 != null goto label2;

        $r6 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        if r3 == $r6 goto label2;

        $r7 = <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION>;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration)>($r7);

        return $i0;

     label2:
        if r5 != null goto label3;

        $i1 = 2;

        goto label4;

     label3:
        $i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

     label4:
        return $i1;
    }

    public void setMaxTotalConnections(int)
    {
        int i0;
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: void setIntParameter(java.lang.String,int)>("http.connection-manager.max-total", i0);

        return;
    }

    public int getMaxTotalConnections()
    {
        int $i0;
        org.apache.commons.httpclient.params.HttpConnectionManagerParams r0;

        r0 := @this: org.apache.commons.httpclient.params.HttpConnectionManagerParams;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getIntParameter(java.lang.String,int)>("http.connection-manager.max-total", 20);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.String MAX_TOTAL_CONNECTIONS> = "http.connection-manager.max-total";

        <org.apache.commons.httpclient.params.HttpConnectionManagerParams: java.lang.String MAX_HOST_CONNECTIONS> = "http.connection-manager.max-per-host";

        return;
    }
}
