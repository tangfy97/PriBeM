public class org.apache.batik.css.engine.value.svg.SVGPaintManager extends org.apache.batik.css.engine.value.svg.SVGColorManager
{

    public void <init>(java.lang.String)
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.engine.value.svg.SVGColorManager: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;
        java.lang.String r1;
        org.apache.batik.css.engine.value.Value r2;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.css.engine.value.Value;

        specialinvoke r0.<org.apache.batik.css.engine.value.svg.SVGColorManager: void <init>(java.lang.String,org.apache.batik.css.engine.value.Value)>(r1, r2);

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        return 1;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        return 1;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.svg.SVGPaintManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        return 7;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r2;
        short $s0, $s1, $s2;
        org.w3c.css.sac.LexicalUnit $r8, r17;
        int $i3, i4, $i5, $i6, $i7;
        org.apache.batik.css.engine.value.URIValue $r18, $r20;
        java.lang.String $r0, $r5, $r7, $r14;
        boolean $z0, $z1;
        org.apache.batik.css.engine.value.svg.SVGPaintManager r1;
        org.apache.batik.css.engine.value.Value $r3, $r4, $r11, $r13, $r15;
        org.apache.batik.css.engine.value.ListValue r12, $r19;
        org.apache.batik.util.ParsedURL $r6;

        r1 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        r17 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r2 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r17.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i5 = (int) $s0;

        lookupswitch($i5)
        {
            case 24: goto label3;
            case 35: goto label1;
            default: goto label2;
        };

     label1:
        $r0 = interfaceinvoke r17.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z0 == 0 goto label2;

        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        return $r4;

     label2:
        $r3 = specialinvoke r1.<org.apache.batik.css.engine.value.svg.SVGColorManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>(r17, r2);

        return $r3;

     label3:
        $r5 = interfaceinvoke r17.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r6 = virtualinvoke r2.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL getCSSBaseURI()>();

        $r7 = staticinvoke <org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String resolveURI(org.apache.batik.util.ParsedURL,java.lang.String)>($r6, $r5);

        $r8 = interfaceinvoke r17.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        if $r8 != null goto label4;

        $r18 = new org.apache.batik.css.engine.value.URIValue;

        specialinvoke $r18.<org.apache.batik.css.engine.value.URIValue: void <init>(java.lang.String,java.lang.String)>($r5, $r7);

        return $r18;

     label4:
        $r19 = new org.apache.batik.css.engine.value.ListValue;

        specialinvoke $r19.<org.apache.batik.css.engine.value.ListValue: void <init>(char)>(32);

        $r20 = new org.apache.batik.css.engine.value.URIValue;

        specialinvoke $r20.<org.apache.batik.css.engine.value.URIValue: void <init>(java.lang.String,java.lang.String)>($r5, $r7);

        virtualinvoke $r19.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r20);

        $s1 = interfaceinvoke $r8.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i6 = (int) $s1;

        if $i6 != 35 goto label5;

        $r14 = interfaceinvoke $r8.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("none");

        if $z1 == 0 goto label5;

        $r15 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        virtualinvoke $r19.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r15);

        return $r19;

     label5:
        $r11 = specialinvoke r1.<org.apache.batik.css.engine.value.svg.SVGColorManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>($r8, r2);

        $s2 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i7 = (int) $s2;

        if $i7 != 3 goto label8;

        r12 = (org.apache.batik.css.engine.value.ListValue) $r11;

        i4 = 0;

        goto label7;

     label6:
        $r13 = virtualinvoke r12.<org.apache.batik.css.engine.value.ListValue: org.apache.batik.css.engine.value.Value item(int)>(i4);

        virtualinvoke $r19.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r13);

        i4 = i4 + 1;

     label7:
        $i3 = virtualinvoke r12.<org.apache.batik.css.engine.value.ListValue: int getLength()>();

        if i4 < $i3 goto label6;

        goto label9;

     label8:
        virtualinvoke $r19.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r11);

     label9:
        return $r19;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r3;
        org.apache.batik.css.engine.CSSEngine r5;
        short $s0, $s2;
        org.apache.batik.css.engine.StyleMap r6;
        int i1, $i3, $i4, $i5;
        java.lang.String r4;
        org.apache.batik.css.engine.value.svg.SVGPaintManager r2;
        org.apache.batik.css.engine.value.Value r0, $r1, $r7, $r9, $r10, $r11, $r12, $r14, $r15;
        org.apache.batik.css.engine.value.ListValue r8, $r16;

        r2 := @this: org.apache.batik.css.engine.value.svg.SVGPaintManager;

        r3 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i1 := @parameter3: int;

        r6 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        if r0 != $r1 goto label1;

        return r0;

     label1:
        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        $i4 = (int) $s0;

        if $i4 != 2 goto label5;

        r8 = (org.apache.batik.css.engine.value.ListValue) r0;

        $r9 = virtualinvoke r8.<org.apache.batik.css.engine.value.ListValue: org.apache.batik.css.engine.value.Value item(int)>(0);

        $s2 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i5 = (int) $s2;

        if $i5 != 20 goto label5;

        $r10 = virtualinvoke r8.<org.apache.batik.css.engine.value.ListValue: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r11 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        if $r10 != $r11 goto label2;

        return r0;

     label2:
        $r12 = specialinvoke r2.<org.apache.batik.css.engine.value.svg.SVGColorManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i1, r6, $r10);

        if $r12 == $r10 goto label4;

        $r16 = new org.apache.batik.css.engine.value.ListValue;

        specialinvoke $r16.<org.apache.batik.css.engine.value.ListValue: void <init>(char)>(32);

        $r14 = virtualinvoke r8.<org.apache.batik.css.engine.value.ListValue: org.apache.batik.css.engine.value.Value item(int)>(0);

        virtualinvoke $r16.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r14);

        virtualinvoke $r16.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r12);

        $i3 = virtualinvoke r8.<org.apache.batik.css.engine.value.ListValue: int getLength()>();

        if $i3 != 3 goto label3;

        $r15 = virtualinvoke r8.<org.apache.batik.css.engine.value.ListValue: org.apache.batik.css.engine.value.Value item(int)>(1);

        virtualinvoke $r16.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r15);

     label3:
        return $r16;

     label4:
        return r0;

     label5:
        $r7 = specialinvoke r2.<org.apache.batik.css.engine.value.svg.SVGColorManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i1, r6, r0);

        return $r7;
    }
}
