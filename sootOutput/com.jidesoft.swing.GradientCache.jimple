class com.jidesoft.swing.GradientCache extends java.lang.Object
{
    private com.jidesoft.swing.GradientCacheEntry[] gradients;
    private int size;
    private int threshold;
    private final float loadFactor;
    private final java.lang.ref.ReferenceQueue queue;

    void <init>()
    {
        com.jidesoft.swing.GradientCacheEntry[] $r2;
        com.jidesoft.swing.GradientCache r0;
        java.lang.ref.ReferenceQueue $r1;

        r0 := @this: com.jidesoft.swing.GradientCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r1.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<com.jidesoft.swing.GradientCache: java.lang.ref.ReferenceQueue queue> = $r1;

        r0.<com.jidesoft.swing.GradientCache: float loadFactor> = 0.75F;

        r0.<com.jidesoft.swing.GradientCache: int threshold> = 16;

        $r2 = newarray (com.jidesoft.swing.GradientCacheEntry)[16];

        r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients> = $r2;

        return;
    }

    java.awt.image.BufferedImage retrieve(com.jidesoft.swing.GradientInfo)
    {
        java.awt.image.BufferedImage $r4;
        com.jidesoft.swing.GradientCacheEntry[] $r2;
        com.jidesoft.swing.GradientInfo r0, $r3;
        java.lang.NullPointerException $r5;
        com.jidesoft.swing.GradientCacheEntry r6;
        com.jidesoft.swing.GradientCache r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r1 := @this: com.jidesoft.swing.GradientCache;

        r0 := @parameter0: com.jidesoft.swing.GradientInfo;

        i0 = r0.<com.jidesoft.swing.GradientInfo: int length>;

        $r2 = specialinvoke r1.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] getGradients()>();

        $i1 = lengthof $r2;

        $i2 = staticinvoke <com.jidesoft.swing.GradientCache: int bucket(int,int)>(i0, $i1);

        r6 = $r2[$i2];

     label1:
        if r6 == null goto label7;

        $r3 = virtualinvoke r6.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientInfo getInfo()>();

     label2:
        if $r3 == null goto label4;

        $i3 = r6.<com.jidesoft.swing.GradientCacheEntry: int length>;

        if $i3 != i0 goto label4;

        $z0 = virtualinvoke $r3.<com.jidesoft.swing.GradientInfo: boolean isEquivalent(com.jidesoft.swing.GradientInfo)>(r0);

        if $z0 == 0 goto label4;

        $r4 = r6.<com.jidesoft.swing.GradientCacheEntry: java.awt.image.BufferedImage gradient>;

     label3:
        return $r4;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        r6 = r6.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next>;

        goto label1;

     label7:
        return null;

        catch java.lang.NullPointerException from label2 to label3 with label5;
    }

    java.lang.Object store(com.jidesoft.swing.GradientInfo, java.awt.image.BufferedImage)
    {
        com.jidesoft.swing.GradientCacheEntry[] $r1;
        java.lang.ref.ReferenceQueue $r6;
        com.jidesoft.swing.GradientCacheEntry r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        java.io.PrintStream $r7;
        java.awt.image.BufferedImage r5;
        com.jidesoft.swing.GradientInfo r2;
        com.jidesoft.swing.GradientCache r0;

        r0 := @this: com.jidesoft.swing.GradientCache;

        r2 := @parameter0: com.jidesoft.swing.GradientInfo;

        r5 := @parameter1: java.awt.image.BufferedImage;

        $r1 = specialinvoke r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] getGradients()>();

        $i1 = r2.<com.jidesoft.swing.GradientInfo: int length>;

        $i0 = lengthof $r1;

        $i2 = staticinvoke <com.jidesoft.swing.GradientCache: int bucket(int,int)>($i1, $i0);

        r3 = $r1[$i2];

        $z0 = specialinvoke r0.<com.jidesoft.swing.GradientCache: boolean entryNotInCache(com.jidesoft.swing.GradientCacheEntry,com.jidesoft.swing.GradientInfo)>(r3, r2);

        if $z0 != 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Duplicate entry found!");

     label1:
        $r4 = new com.jidesoft.swing.GradientCacheEntry;

        $r6 = r0.<com.jidesoft.swing.GradientCache: java.lang.ref.ReferenceQueue queue>;

        specialinvoke $r4.<com.jidesoft.swing.GradientCacheEntry: void <init>(com.jidesoft.swing.GradientInfo,java.awt.image.BufferedImage,java.lang.ref.ReferenceQueue,com.jidesoft.swing.GradientCacheEntry)>(r2, r5, $r6, r3);

        $r1[$i2] = $r4;

        $i3 = r0.<com.jidesoft.swing.GradientCache: int size>;

        $i4 = $i3 + 1;

        r0.<com.jidesoft.swing.GradientCache: int size> = $i4;

        $i5 = r0.<com.jidesoft.swing.GradientCache: int threshold>;

        if $i4 < $i5 goto label2;

        $i6 = lengthof $r1;

        $i7 = $i6 << 1;

        specialinvoke r0.<com.jidesoft.swing.GradientCache: void resize(int)>($i7);

     label2:
        return null;
    }

    void clear()
    {
        com.jidesoft.swing.GradientCache r0;
        int $i0, i1;
        com.jidesoft.swing.GradientCacheEntry[] $r1, $r2;

        r0 := @this: com.jidesoft.swing.GradientCache;

        $r1 = specialinvoke r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] getGradients()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.jidesoft.swing.GradientCache: int size> = 0;

        r0.<com.jidesoft.swing.GradientCache: int threshold> = 16;

        $r2 = newarray (com.jidesoft.swing.GradientCacheEntry)[16];

        r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients> = $r2;

        return;
    }

    private boolean entryNotInCache(com.jidesoft.swing.GradientCacheEntry, com.jidesoft.swing.GradientInfo)
    {
        com.jidesoft.swing.GradientInfo $r0, r1, $r2;
        com.jidesoft.swing.GradientCacheEntry r4;
        com.jidesoft.swing.GradientCache r3;
        int $i0, $i1;
        boolean $z0;

        r3 := @this: com.jidesoft.swing.GradientCache;

        r4 := @parameter0: com.jidesoft.swing.GradientCacheEntry;

        r1 := @parameter1: com.jidesoft.swing.GradientInfo;

     label1:
        if r4 == null goto label3;

        $r0 = virtualinvoke r4.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientInfo getInfo()>();

        if $r0 == null goto label3;

        $i1 = r4.<com.jidesoft.swing.GradientCacheEntry: int length>;

        $i0 = r1.<com.jidesoft.swing.GradientInfo: int length>;

        if $i1 != $i0 goto label2;

        $r2 = virtualinvoke r4.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientInfo getInfo()>();

        $z0 = virtualinvoke $r2.<com.jidesoft.swing.GradientInfo: boolean isEquivalent(com.jidesoft.swing.GradientInfo)>(r1);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        r4 = r4.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next>;

        goto label1;

     label3:
        return 1;
    }

    private void resize(int)
    {
        com.jidesoft.swing.GradientCacheEntry[] $r1, r2;
        com.jidesoft.swing.GradientCache r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2;

        r0 := @this: com.jidesoft.swing.GradientCache;

        i1 := @parameter0: int;

        $r1 = specialinvoke r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] getGradients()>();

        i0 = lengthof $r1;

        if i0 != 1073741824 goto label1;

        r0.<com.jidesoft.swing.GradientCache: int threshold> = 2147483647;

        return;

     label1:
        r2 = newarray (com.jidesoft.swing.GradientCacheEntry)[i1];

        specialinvoke r0.<com.jidesoft.swing.GradientCache: void moveEntries(com.jidesoft.swing.GradientCacheEntry[],com.jidesoft.swing.GradientCacheEntry[])>($r1, r2);

        r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients> = r2;

        $i4 = r0.<com.jidesoft.swing.GradientCache: int size>;

        $i2 = r0.<com.jidesoft.swing.GradientCache: int threshold>;

        $i3 = $i2 >> 1;

        if $i4 < $i3 goto label2;

        $f1 = (float) i1;

        $f0 = r0.<com.jidesoft.swing.GradientCache: float loadFactor>;

        $f2 = $f1 * $f0;

        $i5 = (int) $f2;

        r0.<com.jidesoft.swing.GradientCache: int threshold> = $i5;

        goto label3;

     label2:
        specialinvoke r0.<com.jidesoft.swing.GradientCache: void cleanOldCacheEntries()>();

        specialinvoke r0.<com.jidesoft.swing.GradientCache: void moveEntries(com.jidesoft.swing.GradientCacheEntry[],com.jidesoft.swing.GradientCacheEntry[])>(r2, $r1);

        r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients> = $r1;

     label3:
        return;
    }

    private com.jidesoft.swing.GradientCacheEntry[] getGradients()
    {
        com.jidesoft.swing.GradientCacheEntry[] $r1;
        com.jidesoft.swing.GradientCache r0;

        r0 := @this: com.jidesoft.swing.GradientCache;

        specialinvoke r0.<com.jidesoft.swing.GradientCache: void cleanOldCacheEntries()>();

        $r1 = r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients>;

        return $r1;
    }

    private static int bucket(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - 1;

        $i3 = i0 & $i2;

        return $i3;
    }

    private void moveEntries(com.jidesoft.swing.GradientCacheEntry[], com.jidesoft.swing.GradientCacheEntry[])
    {
        com.jidesoft.swing.GradientCacheEntry[] r0, r3;
        com.jidesoft.swing.GradientCacheEntry r1, $r4, r6;
        com.jidesoft.swing.GradientCache r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r2;

        r5 := @this: com.jidesoft.swing.GradientCache;

        r0 := @parameter0: com.jidesoft.swing.GradientCacheEntry[];

        r3 := @parameter1: com.jidesoft.swing.GradientCacheEntry[];

        i6 = 0;

     label1:
        $i0 = lengthof r0;

        if i6 >= $i0 goto label6;

        r6 = r0[i6];

        r0[i6] = null;

     label2:
        if r6 == null goto label5;

        r1 = r6.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next>;

        $r2 = virtualinvoke r6.<com.jidesoft.swing.GradientCacheEntry: java.lang.Object get()>();

        if $r2 != null goto label3;

        r6.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next> = null;

        r6.<com.jidesoft.swing.GradientCacheEntry: java.awt.image.BufferedImage gradient> = null;

        $i4 = r5.<com.jidesoft.swing.GradientCache: int size>;

        $i5 = $i4 - 1;

        r5.<com.jidesoft.swing.GradientCache: int size> = $i5;

        goto label4;

     label3:
        $i2 = r6.<com.jidesoft.swing.GradientCacheEntry: int length>;

        $i1 = lengthof r3;

        $i3 = staticinvoke <com.jidesoft.swing.GradientCache: int bucket(int,int)>($i2, $i1);

        $r4 = r3[$i3];

        r6.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next> = $r4;

        r3[$i3] = r6;

     label4:
        r6 = r1;

        goto label2;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        return;
    }

    private void cleanOldCacheEntries()
    {
        com.jidesoft.swing.GradientCacheEntry[] $r4, $r5, $r7;
        java.lang.ref.ReferenceQueue $r1;
        java.lang.ref.Reference $r2;
        com.jidesoft.swing.GradientCacheEntry $r3, r6, r8, r9;
        com.jidesoft.swing.GradientCache r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.swing.GradientCache;

     label1:
        $r1 = r0.<com.jidesoft.swing.GradientCache: java.lang.ref.ReferenceQueue queue>;

        $r2 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        $r3 = (com.jidesoft.swing.GradientCacheEntry) $r2;

        if $r3 == null goto label7;

        $i1 = $r3.<com.jidesoft.swing.GradientCacheEntry: int length>;

        $r4 = r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients>;

        $i0 = lengthof $r4;

        $i2 = staticinvoke <com.jidesoft.swing.GradientCache: int bucket(int,int)>($i1, $i0);

        $r5 = r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients>;

        r8 = $r5[$i2];

        r9 = r8;

     label2:
        if r9 == null goto label6;

        r6 = r9.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next>;

        if r9 != $r3 goto label5;

        if r8 != $r3 goto label3;

        $r7 = r0.<com.jidesoft.swing.GradientCache: com.jidesoft.swing.GradientCacheEntry[] gradients>;

        $r7[$i2] = r6;

        goto label4;

     label3:
        r8.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next> = r6;

     label4:
        $r3.<com.jidesoft.swing.GradientCacheEntry: com.jidesoft.swing.GradientCacheEntry next> = null;

        $r3.<com.jidesoft.swing.GradientCacheEntry: java.awt.image.BufferedImage gradient> = null;

        $i3 = r0.<com.jidesoft.swing.GradientCache: int size>;

        $i4 = $i3 - 1;

        r0.<com.jidesoft.swing.GradientCache: int size> = $i4;

        goto label6;

     label5:
        r8 = r9;

        r9 = r6;

        goto label2;

     label6:
        goto label1;

     label7:
        return;
    }
}
