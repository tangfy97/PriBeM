public class org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware
{
    private org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap dictionary;
    private final java.lang.String dictionaryFiles;
    private final boolean ignoreCase;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r3;
        java.util.Map r1;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "dictionary");

        r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.lang.String dictionaryFiles> = $r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "ignoreCase", 0);

        r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: boolean ignoreCase> = $z0;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap $r6;
        java.lang.String[] $r15;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory r0;
        int $i0;
        org.apache.lucene.analysis.util.ResourceLoader r9;
        java.lang.String $r1, $r2, r8, $r10, r14, $r16, $r17;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5, $r12;
        java.util.List $r3, $r11;
        java.lang.Object $r7, $r13;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder $r4;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory;

        r9 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.lang.String dictionaryFiles>;

        if $r1 == null goto label5;

        virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: void assureMatchVersion()>();

        $r2 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.lang.String dictionaryFiles>;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.util.List splitFileNames(java.lang.String)>($r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r4 = new org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder;

        $z0 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: boolean ignoreCase>;

        specialinvoke $r4.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: void <init>(boolean)>($z0);

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r10 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        $r11 = virtualinvoke r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: java.util.List getLines(org.apache.lucene.analysis.util.ResourceLoader,java.lang.String)>(r9, $r10);

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        $r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\t", 2);

        $r17 = $r15[0];

        $r16 = $r15[1];

        virtualinvoke $r4.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: boolean add(java.lang.CharSequence,java.lang.CharSequence)>($r17, $r16);

        goto label2;

     label3:
        goto label1;

     label4:
        $r6 = virtualinvoke $r4.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap build()>();

        r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap dictionary> = $r6;

     label5:
        return;
    }

    public boolean isIgnoreCase()
    {
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory;

        $z0 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: boolean ignoreCase>;

        return $z0;
    }

    public org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r2, $r4;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory r0;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter $r5;
        org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap $r1, $r3;

        r0 := @this: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory;

        r2 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r1 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap dictionary>;

        if $r1 != null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r5 = new org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter;

        $r4 = $r5;

        $r3 = r0.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory: org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap dictionary>;

        specialinvoke $r5.<org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap)>(r2, $r3);

     label2:
        return $r4;
    }
}
