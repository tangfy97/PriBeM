public class org.jdesktop.swingx.painter.CheckerboardPainter extends org.jdesktop.swingx.painter.AbstractPainter
{
    private transient java.awt.Paint checkerPaint;
    private java.awt.Paint darkPaint;
    private java.awt.Paint lightPaint;
    private double squareSize;

    public void <init>()
    {
        java.awt.Color $r1, $r2;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractPainter: void <init>()>();

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(204, 204, 204);

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint darkPaint> = $r1;

        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint lightPaint> = $r2;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double squareSize> = 8.0;

        return;
    }

    public void <init>(java.awt.Paint, java.awt.Paint)
    {
        java.awt.Paint r1, r2;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r1 := @parameter0: java.awt.Paint;

        r2 := @parameter1: java.awt.Paint;

        specialinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void <init>(java.awt.Paint,java.awt.Paint,double)>(r1, r2, 8.0);

        return;
    }

    public void <init>(java.awt.Paint, java.awt.Paint, double)
    {
        java.awt.Color $r1, $r2;
        java.awt.Paint r3, r4;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;
        double d0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r3 := @parameter0: java.awt.Paint;

        r4 := @parameter1: java.awt.Paint;

        d0 := @parameter2: double;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractPainter: void <init>()>();

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(204, 204, 204);

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint darkPaint> = $r1;

        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint lightPaint> = $r2;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double squareSize> = 8.0;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint darkPaint> = r3;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint lightPaint> = r4;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double squareSize> = d0;

        return;
    }

    public void setSquareSize(double)
    {
        java.lang.Double $r1, $r2;
        java.lang.IllegalArgumentException $r4;
        byte $b0;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;
        int $i1;
        double d0, $d1, $d2;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 > 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length must be > 0");

        throw $r4;

     label1:
        $d1 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double getSquareSize()>();

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double squareSize> = d0;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint> = null;

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void setDirty(boolean)>(1);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d2 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double getSquareSize()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("squareSize", $r1, $r2);

        return;
    }

    public double getSquareSize()
    {
        org.jdesktop.swingx.painter.CheckerboardPainter r0;
        double $d0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        $d0 = r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double squareSize>;

        return $d0;
    }

    public void setDarkPaint(java.awt.Paint)
    {
        java.awt.Paint $r1, r2, $r3;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r2 := @parameter0: java.awt.Paint;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getDarkPaint()>();

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint darkPaint> = r2;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint> = null;

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void setDirty(boolean)>(1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getDarkPaint()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("darkPaint", $r1, $r3);

        return;
    }

    public java.awt.Paint getDarkPaint()
    {
        java.awt.Paint $r1;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint darkPaint>;

        return $r1;
    }

    public void setLightPaint(java.awt.Paint)
    {
        java.awt.Paint $r1, r2, $r3;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r2 := @parameter0: java.awt.Paint;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getLightPaint()>();

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint lightPaint> = r2;

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint> = null;

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void setDirty(boolean)>(1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getLightPaint()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("lightPaint", $r1, $r3);

        return;
    }

    public java.awt.Paint getLightPaint()
    {
        java.awt.Paint $r1;
        org.jdesktop.swingx.painter.CheckerboardPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint lightPaint>;

        return $r1;
    }

    private java.awt.Paint getCheckerPaint(java.lang.Object)
    {
        org.jdesktop.swingx.painter.CheckerboardPainter r0;
        boolean $z0, $z1;
        java.awt.image.BufferedImage $r3;
        java.awt.Paint $r1, $r2, $r5, r12, $r13, r14;
        java.lang.Throwable $r11;
        java.awt.Rectangle $r7;
        java.awt.TexturePaint $r6;
        java.awt.Graphics2D $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        double $d0, $d1, $d2, $d3;
        javax.swing.JComponent $r9, $r10;
        java.lang.Object r8;

        r0 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r8 := @parameter0: java.lang.Object;

        $r1 = r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint>;

        if $r1 != null goto label8;

        $d0 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: double getSquareSize()>();

        $d1 = $d0 * 2.0;

        i0 = (int) $d1;

        $r3 = new java.awt.image.BufferedImage;

        specialinvoke $r3.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i0, 2);

        $r4 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

     label1:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getLightPaint()>();

        r12 = $r5;

        if $r5 != null goto label2;

        $z1 = r8 instanceof javax.swing.JComponent;

        if $z1 == 0 goto label2;

        $r10 = (javax.swing.JComponent) r8;

        r12 = virtualinvoke $r10.<javax.swing.JComponent: java.awt.Color getForeground()>();

     label2:
        virtualinvoke $r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r12);

        virtualinvoke $r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i0, i0);

        $r13 = virtualinvoke r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getDarkPaint()>();

        r14 = $r13;

        if $r13 != null goto label3;

        $z0 = r8 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label3;

        $r9 = (javax.swing.JComponent) r8;

        r14 = virtualinvoke $r9.<javax.swing.JComponent: java.awt.Color getBackground()>();

     label3:
        virtualinvoke $r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r14);

        $d2 = $d0 - 1.0;

        $i3 = (int) $d2;

        $d3 = $d0 - 1.0;

        $i4 = (int) $d3;

        virtualinvoke $r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, $i3, $i4);

        $i5 = (int) $d0;

        $i6 = (int) $d0;

        $i7 = (int) $d0;

        $i8 = $i7 - 1;

        $i9 = (int) $d0;

        $i10 = $i9 - 1;

        virtualinvoke $r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i5, $i6, $i8, $i10);

     label4:
        virtualinvoke $r4.<java.awt.Graphics2D: void dispose()>();

        goto label7;

     label5:
        $r11 := @caughtexception;

     label6:
        virtualinvoke $r4.<java.awt.Graphics2D: void dispose()>();

        throw $r11;

     label7:
        $r6 = new java.awt.TexturePaint;

        $r7 = new java.awt.Rectangle;

        $i1 = virtualinvoke $r3.<java.awt.image.BufferedImage: int getWidth()>();

        $i2 = virtualinvoke $r3.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i1, $i2);

        specialinvoke $r6.<java.awt.TexturePaint: void <init>(java.awt.image.BufferedImage,java.awt.geom.Rectangle2D)>($r3, $r7);

        r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint> = $r6;

     label8:
        $r2 = r0.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint checkerPaint>;

        return $r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.awt.Graphics2D r0;
        java.awt.Paint $r3;
        org.jdesktop.swingx.painter.CheckerboardPainter r1;
        int i0, i1;
        java.lang.Object r2;

        r1 := @this: org.jdesktop.swingx.painter.CheckerboardPainter;

        r0 := @parameter0: java.awt.Graphics2D;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = specialinvoke r1.<org.jdesktop.swingx.painter.CheckerboardPainter: java.awt.Paint getCheckerPaint(java.lang.Object)>(r2);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, i0, i1);

        return;
    }
}
