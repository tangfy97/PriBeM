public class com.jidesoft.icons.ColorFilter extends java.awt.image.RGBImageFilter
{
    private boolean _brighter;
    private static int _percent;
    private static com.jidesoft.icons.ColorFilter _colorFilter;

    public static com.jidesoft.icons.ColorFilter getInstance(boolean, int)
    {
        com.jidesoft.icons.ColorFilter $r0, $r1, $r2, $r3;
        int i0;
        boolean z0;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r0 = <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter _colorFilter>;

        if $r0 != null goto label1;

        $r3 = new com.jidesoft.icons.ColorFilter;

        specialinvoke $r3.<com.jidesoft.icons.ColorFilter: void <init>(boolean,int)>(z0, i0);

        <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter _colorFilter> = $r3;

        goto label2;

     label1:
        $r1 = <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter _colorFilter>;

        virtualinvoke $r1.<com.jidesoft.icons.ColorFilter: void setBrighter(boolean)>(z0);

        staticinvoke <com.jidesoft.icons.ColorFilter: void setPercent(int)>(i0);

     label2:
        $r2 = <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter _colorFilter>;

        return $r2;
    }

    public void setBrighter(boolean)
    {
        com.jidesoft.icons.ColorFilter r0;
        boolean z0;

        r0 := @this: com.jidesoft.icons.ColorFilter;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.icons.ColorFilter: boolean _brighter> = z0;

        return;
    }

    public static void setPercent(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.jidesoft.icons.ColorFilter: int _percent> = i0;

        return;
    }

    public static int getPercent()
    {
        int $i0;

        $i0 = <com.jidesoft.icons.ColorFilter: int _percent>;

        return $i0;
    }

    public static java.awt.Image createBrighterImage(java.awt.Image)
    {
        com.jidesoft.icons.ColorFilter $r0;
        java.awt.Image r2, $r5;
        int $i0;
        java.awt.image.FilteredImageSource $r1;
        java.awt.image.ImageProducer $r3;
        java.awt.Toolkit $r4;

        r2 := @parameter0: java.awt.Image;

        $i0 = <com.jidesoft.icons.ColorFilter: int _percent>;

        $r0 = staticinvoke <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter getInstance(boolean,int)>(1, $i0);

        $r1 = new java.awt.image.FilteredImageSource;

        $r3 = virtualinvoke r2.<java.awt.Image: java.awt.image.ImageProducer getSource()>();

        specialinvoke $r1.<java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>($r3, $r0);

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r5 = virtualinvoke $r4.<java.awt.Toolkit: java.awt.Image createImage(java.awt.image.ImageProducer)>($r1);

        return $r5;
    }

    public static java.awt.Image createBrighterImage(java.awt.Image, int)
    {
        int i0;
        java.awt.Image r0, $r1;

        r0 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        staticinvoke <com.jidesoft.icons.ColorFilter: void setPercent(int)>(i0);

        $r1 = staticinvoke <com.jidesoft.icons.ColorFilter: java.awt.Image createBrighterImage(java.awt.Image)>(r0);

        return $r1;
    }

    public static java.awt.Image createDarkerImage(java.awt.Image)
    {
        com.jidesoft.icons.ColorFilter $r0;
        java.awt.Image r2, $r5;
        int $i0;
        java.awt.image.FilteredImageSource $r1;
        java.awt.image.ImageProducer $r3;
        java.awt.Toolkit $r4;

        r2 := @parameter0: java.awt.Image;

        $i0 = <com.jidesoft.icons.ColorFilter: int _percent>;

        $r0 = staticinvoke <com.jidesoft.icons.ColorFilter: com.jidesoft.icons.ColorFilter getInstance(boolean,int)>(0, $i0);

        $r1 = new java.awt.image.FilteredImageSource;

        $r3 = virtualinvoke r2.<java.awt.Image: java.awt.image.ImageProducer getSource()>();

        specialinvoke $r1.<java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>($r3, $r0);

        $r4 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r5 = virtualinvoke $r4.<java.awt.Toolkit: java.awt.Image createImage(java.awt.image.ImageProducer)>($r1);

        return $r5;
    }

    public static java.awt.Image createDarkerImage(java.awt.Image, int)
    {
        int i0;
        java.awt.Image r0, $r1;

        r0 := @parameter0: java.awt.Image;

        i0 := @parameter1: int;

        staticinvoke <com.jidesoft.icons.ColorFilter: void setPercent(int)>(i0);

        $r1 = staticinvoke <com.jidesoft.icons.ColorFilter: java.awt.Image createDarkerImage(java.awt.Image)>(r0);

        return $r1;
    }

    public void <init>(boolean, int)
    {
        int i0;
        com.jidesoft.icons.ColorFilter r0;
        boolean z0;

        r0 := @this: com.jidesoft.icons.ColorFilter;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<java.awt.image.RGBImageFilter: void <init>()>();

        r0.<com.jidesoft.icons.ColorFilter: boolean _brighter> = z0;

        <com.jidesoft.icons.ColorFilter: int _percent> = i0;

        r0.<com.jidesoft.icons.ColorFilter: boolean canFilterIndexColorModel> = 1;

        return;
    }

    public int filterRGB(int, int, int)
    {
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        com.jidesoft.icons.ColorFilter r0;

        r0 := @this: com.jidesoft.icons.ColorFilter;

        i15 := @parameter0: int;

        i16 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 >> 16;

        i2 = $i1 & 255;

        $i3 = i0 >> 8;

        i4 = $i3 & 255;

        i5 = i0 & 255;

        $i6 = i0 & -16777216;

        $i7 = specialinvoke r0.<com.jidesoft.icons.ColorFilter: int convert(int)>(i2);

        $i8 = $i7 << 16;

        $i9 = $i6 | $i8;

        $i10 = specialinvoke r0.<com.jidesoft.icons.ColorFilter: int convert(int)>(i4);

        $i11 = $i10 << 8;

        $i12 = $i9 | $i11;

        $i13 = specialinvoke r0.<com.jidesoft.icons.ColorFilter: int convert(int)>(i5);

        $i14 = $i12 | $i13;

        return $i14;
    }

    private int convert(int)
    {
        com.jidesoft.icons.ColorFilter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;

        r0 := @this: com.jidesoft.icons.ColorFilter;

        i8 := @parameter0: int;

        $z0 = r0.<com.jidesoft.icons.ColorFilter: boolean _brighter>;

        if $z0 == 0 goto label1;

        $i5 = 255 - i8;

        $i4 = <com.jidesoft.icons.ColorFilter: int _percent>;

        $i6 = $i5 * $i4;

        $i7 = $i6 / 100;

        i9 = i8 + $i7;

        goto label2;

     label1:
        $i1 = 255 - i8;

        $i0 = <com.jidesoft.icons.ColorFilter: int _percent>;

        $i2 = $i1 * $i0;

        $i3 = $i2 / 100;

        i9 = i8 - $i3;

     label2:
        if i9 >= 0 goto label3;

        i9 = 0;

     label3:
        if i9 <= 255 goto label4;

        i9 = 255;

     label4:
        return i9;
    }

    static void <clinit>()
    {
        <com.jidesoft.icons.ColorFilter: int _percent> = 30;

        return;
    }
}
