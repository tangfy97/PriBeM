public class org.apache.batik.anim.values.AnimatableAngleValue extends org.apache.batik.anim.values.AnimatableNumberValue
{
    protected static final java.lang.String[] UNITS;
    protected short unit;

    public void <init>(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableAngleValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableNumberValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        return;
    }

    public void <init>(org.apache.batik.dom.anim.AnimationTarget, float, short)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        short s0;
        org.apache.batik.anim.values.AnimatableAngleValue r0;
        float f0;

        r0 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        f0 := @parameter1: float;

        s0 := @parameter2: short;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableNumberValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,float)>(r1, f0);

        r0.<org.apache.batik.anim.values.AnimatableAngleValue: short unit> = s0;

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, float, org.apache.batik.anim.values.AnimatableValue, int)
    {
        byte $b8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, $f18;
        org.apache.batik.anim.values.AnimatableValue r0, r2, r3;
        org.apache.batik.dom.anim.AnimationTarget $r5;
        org.apache.batik.anim.values.AnimatableAngleValue r1, r6, r7, r8, $r9;
        short $s0, $s1, $s3, $s4, $s5, $s6, s7;
        int i2, $i9, $i10, $i11, $i12;

        r1 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r2 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        f7 := @parameter2: float;

        r3 := @parameter3: org.apache.batik.anim.values.AnimatableValue;

        i2 := @parameter4: int;

        if r0 != null goto label1;

        $r9 = new org.apache.batik.anim.values.AnimatableAngleValue;

        $r5 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r9.<org.apache.batik.anim.values.AnimatableAngleValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>($r5);

        r6 = $r9;

        goto label2;

     label1:
        r6 = (org.apache.batik.anim.values.AnimatableAngleValue) r0;

     label2:
        $f16 = r1.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        f17 = $f16;

        $s6 = r1.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        s7 = $s6;

        if r2 == null goto label4;

        r7 = (org.apache.batik.anim.values.AnimatableAngleValue) r2;

        $s4 = r7.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $i9 = (int) $s4;

        $i10 = (int) $s6;

        if $i9 == $i10 goto label3;

        $f11 = staticinvoke <org.apache.batik.anim.values.AnimatableAngleValue: float rad(float,short)>($f16, $s6);

        $f12 = r7.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $s5 = r7.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $f13 = staticinvoke <org.apache.batik.anim.values.AnimatableAngleValue: float rad(float,short)>($f12, $s5);

        $f14 = $f13 - $f11;

        $f15 = f7 * $f14;

        f17 = $f11 + $f15;

        s7 = 3;

        goto label4;

     label3:
        $f8 = r7.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $f9 = $f8 - $f16;

        $f10 = f7 * $f9;

        f17 = $f16 + $f10;

     label4:
        if r3 == null goto label6;

        r8 = (org.apache.batik.anim.values.AnimatableAngleValue) r3;

        $s1 = r8.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $i11 = (int) $s1;

        if $i11 == s7 goto label5;

        $f4 = (float) i2;

        $f3 = r8.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $s3 = r8.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $f5 = staticinvoke <org.apache.batik.anim.values.AnimatableAngleValue: float rad(float,short)>($f3, $s3);

        $f6 = $f4 * $f5;

        f17 = f17 + $f6;

        s7 = 3;

        goto label6;

     label5:
        $f1 = (float) i2;

        $f0 = r8.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $f2 = $f1 * $f0;

        f17 = f17 + $f2;

     label6:
        $f18 = r6.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $b8 = $f18 cmpl f17;

        if $b8 != 0 goto label7;

        $s0 = r6.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $i12 = (int) $s0;

        if $i12 == s7 goto label8;

     label7:
        r6.<org.apache.batik.anim.values.AnimatableNumberValue: float value> = f17;

        r6.<org.apache.batik.anim.values.AnimatableAngleValue: short unit> = s7;

        r6.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = 1;

     label8:
        return r6;
    }

    public short getUnit()
    {
        short $s0;
        org.apache.batik.anim.values.AnimatableAngleValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        $s0 = r0.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        return $s0;
    }

    public float distanceTo(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableAngleValue r1, r2;
        short $s0, $s1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        org.apache.batik.anim.values.AnimatableValue r0;

        r2 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r1 = (org.apache.batik.anim.values.AnimatableAngleValue) r0;

        $f0 = r2.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $s0 = r2.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $f1 = staticinvoke <org.apache.batik.anim.values.AnimatableAngleValue: float rad(float,short)>($f0, $s0);

        $f2 = r1.<org.apache.batik.anim.values.AnimatableNumberValue: float value>;

        $s1 = r1.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $f3 = staticinvoke <org.apache.batik.anim.values.AnimatableAngleValue: float rad(float,short)>($f2, $s1);

        $f4 = $f1 - $f3;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        return $f5;
    }

    public org.apache.batik.anim.values.AnimatableValue getZeroValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r2;
        org.apache.batik.anim.values.AnimatableAngleValue $r0, r1;

        r1 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        $r0 = new org.apache.batik.anim.values.AnimatableAngleValue;

        $r2 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatableAngleValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,float,short)>($r2, 0.0F, 1);

        return $r0;
    }

    public java.lang.String getCssText()
    {
        org.apache.batik.anim.values.AnimatableAngleValue r1;
        java.lang.String[] $r4;
        short $s0;
        java.lang.StringBuffer $r3, $r6, $r8;
        int $i1;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.apache.batik.anim.values.AnimatableAngleValue;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.batik.anim.values.AnimatableNumberValue: java.lang.String getCssText()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = <org.apache.batik.anim.values.AnimatableAngleValue: java.lang.String[] UNITS>;

        $s0 = r1.<org.apache.batik.anim.values.AnimatableAngleValue: short unit>;

        $i1 = (int) $s0;

        $r5 = $r4[$i1];

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static float rad(float, short)
    {
        short s0;
        int $i1;
        float f0, $f1, $f2, $f3, $f4;

        f0 := @parameter0: float;

        s0 := @parameter1: short;

        $i1 = (int) s0;

        lookupswitch($i1)
        {
            case 3: goto label1;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        return f0;

     label2:
        $f1 = 3.1415927F * f0;

        $f2 = $f1 / 200.0F;

        return $f2;

     label3:
        $f3 = 3.1415927F * f0;

        $f4 = $f3 / 180.0F;

        return $f4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "";

        $r0[1] = "";

        $r0[2] = "deg";

        $r0[3] = "rad";

        $r0[4] = "grad";

        <org.apache.batik.anim.values.AnimatableAngleValue: java.lang.String[] UNITS> = $r0;

        return;
    }
}
