public class org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem extends org.apache.batik.dom.svg.AbstractSVGLength implements org.apache.batik.dom.svg.SVGItem
{
    protected org.apache.batik.dom.svg.AbstractSVGList parentList;
    private final org.apache.batik.dom.svg.AbstractSVGLengthList this$0;

    public void <init>(org.apache.batik.dom.svg.AbstractSVGLengthList, short, float, short)
    {
        short s0, s1;
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r0;
        org.apache.batik.dom.svg.AbstractSVGLengthList r1;
        float f0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGLengthList;

        s1 := @parameter1: short;

        f0 := @parameter2: float;

        s0 := @parameter3: short;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGLength: void <init>(short)>(s0);

        r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGLengthList this$0> = r1;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType> = s1;

        r0.<org.apache.batik.dom.svg.AbstractSVGLength: float value> = f0;

        return;
    }

    protected org.apache.batik.dom.svg.SVGOMElement getAssociatedElement()
    {
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r0;
        org.w3c.dom.Element $r2;
        org.apache.batik.dom.svg.AbstractSVGLengthList $r1;
        org.apache.batik.dom.svg.SVGOMElement $r3;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGLengthList this$0>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGLengthList: org.w3c.dom.Element getElement()>();

        $r3 = (org.apache.batik.dom.svg.SVGOMElement) $r2;

        return $r3;
    }

    public void setParent(org.apache.batik.dom.svg.AbstractSVGList)
    {
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r0;
        org.apache.batik.dom.svg.AbstractSVGList r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGList;

        r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGList parentList> = r1;

        return;
    }

    public org.apache.batik.dom.svg.AbstractSVGList getParent()
    {
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r0;
        org.apache.batik.dom.svg.AbstractSVGList $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGList parentList>;

        return $r1;
    }

    protected void reset()
    {
        org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem r0;
        org.apache.batik.dom.svg.AbstractSVGList $r1, $r2;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGList parentList>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGLengthList$SVGLengthItem: org.apache.batik.dom.svg.AbstractSVGList parentList>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList: void itemChanged()>();

     label1:
        return;
    }
}
