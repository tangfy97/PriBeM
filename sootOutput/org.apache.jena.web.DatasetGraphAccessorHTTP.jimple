public class org.apache.jena.web.DatasetGraphAccessorHTTP extends java.lang.Object implements org.apache.jena.web.DatasetGraphAccessor
{
    private final java.lang.String remote;
    private static final org.apache.jena.riot.web.HttpResponseHandler noResponse;
    private org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator;
    private static org.apache.jena.riot.RDFFormat sendLang;
    private static java.lang.String GetAcceptHeader;
    private static org.apache.http.params.HttpParams httpParams;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String remote> = r1;

        return;
    }

    public void <init>(java.lang.String, org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        org.apache.jena.atlas.web.auth.HttpAuthenticator r2;
        java.lang.String r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void setAuthenticator(org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r2);

        return;
    }

    public void setAuthentication(java.lang.String, char[])
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        org.apache.jena.atlas.web.auth.SimpleAuthenticator $r1;
        char[] r3;
        java.lang.String r2;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: char[];

        $r1 = new org.apache.jena.atlas.web.auth.SimpleAuthenticator;

        specialinvoke $r1.<org.apache.jena.atlas.web.auth.SimpleAuthenticator: void <init>(java.lang.String,char[])>(r2, r3);

        virtualinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void setAuthenticator(org.apache.jena.atlas.web.auth.HttpAuthenticator)>($r1);

        return;
    }

    public void setAuthenticator(org.apache.jena.atlas.web.auth.HttpAuthenticator)
    {
        org.apache.jena.atlas.web.auth.HttpAuthenticator r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: org.apache.jena.atlas.web.auth.HttpAuthenticator;

        r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator> = r1;

        return;
    }

    public com.hp.hpl.jena.graph.Graph httpGet()
    {
        java.lang.String $r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        $r1 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String targetDefault()>();

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: com.hp.hpl.jena.graph.Graph doGet(java.lang.String)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.graph.Graph httpGet(com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String target(com.hp.hpl.jena.graph.Node)>(r1);

        $r3 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: com.hp.hpl.jena.graph.Graph doGet(java.lang.String)>($r2);

        return $r3;
    }

    private com.hp.hpl.jena.graph.Graph doGet(java.lang.String)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r2;
        org.apache.jena.atlas.web.HttpException $r7;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r3;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r1, $r4;
        org.apache.jena.riot.web.HttpCaptureResponse $r0;
        com.hp.hpl.jena.graph.Graph $r6;

        r2 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.jena.riot.web.HttpResponseLib: org.apache.jena.riot.web.HttpCaptureResponse graphHandler()>();

     label1:
        $r4 = <org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String GetAcceptHeader>;

        $r3 = r2.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void execHttpGet(java.lang.String,java.lang.String,org.apache.jena.riot.web.HttpResponseHandler,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r1, $r4, $r0, $r3);

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $i0 = virtualinvoke $r7.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        if $i0 != 404 goto label4;

        return null;

     label4:
        throw $r7;

     label5:
        $r5 = interfaceinvoke $r0.<org.apache.jena.riot.web.HttpCaptureResponse: java.lang.Object get()>();

        $r6 = (com.hp.hpl.jena.graph.Graph) $r5;

        return $r6;

        catch org.apache.jena.atlas.web.HttpException from label1 to label2 with label3;
    }

    public boolean httpHead()
    {
        java.lang.String $r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        boolean $z0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        $r1 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String targetDefault()>();

        $z0 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: boolean doHead(java.lang.String)>($r1);

        return $z0;
    }

    public boolean httpHead(com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String target(com.hp.hpl.jena.graph.Node)>(r1);

        $z0 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: boolean doHead(java.lang.String)>($r2);

        return $z0;
    }

    private boolean doHead(java.lang.String)
    {
        org.apache.jena.riot.web.HttpResponseHandler $r4;
        org.apache.http.client.methods.HttpHead $r0;
        org.apache.jena.web.DatasetGraphAccessorHTTP r2;
        org.apache.jena.atlas.web.HttpException $r5;
        int $i0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r3;
        java.lang.String r1;

        r2 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.http.client.methods.HttpHead;

        specialinvoke $r0.<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>(r1);

     label1:
        $r4 = <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.web.HttpResponseHandler noResponse>;

        $r3 = r2.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void execHttpHead(java.lang.String,java.lang.String,org.apache.jena.riot.web.HttpResponseHandler,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r1, "text/turtle,application/n-triples;q=0.9,application/rdf+xml;q=0.8,application/xml;q=0.7,*/*;q=0.5", $r4, null, null, $r3);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        $i0 = virtualinvoke $r5.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        if $i0 != 404 goto label4;

        return 0;

     label4:
        throw $r5;

        catch org.apache.jena.atlas.web.HttpException from label1 to label2 with label3;
    }

    public void httpPut(com.hp.hpl.jena.graph.Graph)
    {
        java.lang.String $r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Graph r2;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r1 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String targetDefault()>();

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doPut(java.lang.String,com.hp.hpl.jena.graph.Graph)>($r1, r2);

        return;
    }

    public void httpPut(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        com.hp.hpl.jena.graph.Graph r3;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String target(com.hp.hpl.jena.graph.Node)>(r1);

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doPut(java.lang.String,com.hp.hpl.jena.graph.Graph)>($r2, r3);

        return;
    }

    private void doPut(java.lang.String, com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r3;
        org.apache.http.HttpEntity $r1;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r4;
        java.lang.String r2;
        com.hp.hpl.jena.graph.Graph r0;

        r3 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r1 = staticinvoke <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.http.HttpEntity graphToHttpEntity(com.hp.hpl.jena.graph.Graph)>(r0);

        $r4 = r3.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void execHttpPut(java.lang.String,org.apache.http.HttpEntity,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r2, $r1, null, null, $r4);

        return;
    }

    public void httpDelete()
    {
        java.lang.String $r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        $r1 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String targetDefault()>();

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doDelete(java.lang.String)>($r1);

        return;
    }

    public void httpDelete(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String target(com.hp.hpl.jena.graph.Node)>(r1);

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doDelete(java.lang.String)>($r2);

        return;
    }

    private void doDelete(java.lang.String)
    {
        org.apache.jena.riot.web.HttpResponseHandler $r3;
        org.apache.jena.web.DatasetGraphAccessorHTTP r1;
        org.apache.jena.atlas.web.HttpException $r4;
        int $i0;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r2;
        java.lang.String r0;

        r1 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.web.HttpResponseHandler noResponse>;

        $r2 = r1.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void execHttpDelete(java.lang.String,org.apache.jena.riot.web.HttpResponseHandler,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r0, $r3, null, null, $r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $i0 = virtualinvoke $r4.<org.apache.jena.atlas.web.HttpException: int getResponseCode()>();

        if $i0 != 404 goto label4;

        return;

     label4:
        return;

        catch org.apache.jena.atlas.web.HttpException from label1 to label2 with label3;
    }

    public void httpPost(com.hp.hpl.jena.graph.Graph)
    {
        java.lang.String $r1;
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Graph r2;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r1 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String targetDefault()>();

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doPost(java.lang.String,com.hp.hpl.jena.graph.Graph)>($r1, r2);

        return;
    }

    public void httpPost(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r2;
        com.hp.hpl.jena.graph.Graph r3;

        r0 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r2 = specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String target(com.hp.hpl.jena.graph.Node)>(r1);

        specialinvoke r0.<org.apache.jena.web.DatasetGraphAccessorHTTP: void doPost(java.lang.String,com.hp.hpl.jena.graph.Graph)>($r2, r3);

        return;
    }

    private void doPost(java.lang.String, com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r3;
        org.apache.http.HttpEntity $r1;
        org.apache.jena.atlas.web.auth.HttpAuthenticator $r4;
        java.lang.String r2;
        com.hp.hpl.jena.graph.Graph r0;

        r3 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r1 = staticinvoke <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.http.HttpEntity graphToHttpEntity(com.hp.hpl.jena.graph.Graph)>(r0);

        $r4 = r3.<org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.atlas.web.auth.HttpAuthenticator authenticator>;

        staticinvoke <org.apache.jena.riot.web.HttpOp: void execHttpPost(java.lang.String,org.apache.http.HttpEntity,org.apache.http.client.HttpClient,org.apache.http.protocol.HttpContext,org.apache.jena.atlas.web.auth.HttpAuthenticator)>(r2, $r1, null, null, $r4);

        return;
    }

    public void httpPatch(com.hp.hpl.jena.graph.Graph)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.jena.web.DatasetGraphAccessorHTTP r1;
        com.hp.hpl.jena.graph.Graph r2;

        r1 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void httpPatch(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.jena.web.DatasetGraphAccessorHTTP r1;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.graph.Graph r3;

        r1 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private java.lang.String targetDefault()
    {
        org.apache.jena.web.DatasetGraphAccessorHTTP r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6;
        java.lang.String $r2, $r7;

        r1 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String remote>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String target(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.shared.JenaException $r12;
        org.apache.jena.web.DatasetGraphAccessorHTTP r4;
        com.hp.hpl.jena.graph.Node r0;
        java.lang.String $r1, $r2, $r5, $r11, $r16;
        boolean $z0;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15;

        r4 := @this: org.apache.jena.web.DatasetGraphAccessorHTTP;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 != 0 goto label1;

        $r12 = new com.hp.hpl.jena.shared.JenaException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a URI: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r2 = staticinvoke <org.apache.jena.riot.system.IRILib: java.lang.String encodeUriComponent(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r4.<org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String remote>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("graph");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static org.apache.http.params.HttpParams createHttpParams()
    {
        org.apache.http.HttpVersion $r1;
        org.apache.http.params.BasicHttpParams $r9;
        int $i1;
        java.lang.StringBuilder $r4, $r5, $r7, $r10;
        java.lang.String $r3, $r6, $r8;

        $r9 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r9.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r1 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r9, $r1);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r9, "utf-8");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>($r9, 1);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>($r9, 1);

        $i1 = (int) 32768;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>($r9, $i1);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.hp.hpl.jena.Jena: java.lang.String NAME>;

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = <com.hp.hpl.jena.Jena: java.lang.String VERSION>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>($r9, $r8);

        return $r9;
    }

    private static org.apache.http.HttpEntity graphToHttpEntity(com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.riot.Lang $r4;
        org.apache.http.entity.EntityTemplate $r2;
        org.apache.jena.riot.RDFFormat $r3;
        java.lang.String $r6;
        org.apache.jena.web.DatasetGraphAccessorHTTP$1 $r0;
        com.hp.hpl.jena.graph.Graph r1;
        org.apache.jena.atlas.web.ContentType $r5;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new org.apache.jena.web.DatasetGraphAccessorHTTP$1;

        specialinvoke $r0.<org.apache.jena.web.DatasetGraphAccessorHTTP$1: void <init>(com.hp.hpl.jena.graph.Graph)>(r1);

        $r2 = new org.apache.http.entity.EntityTemplate;

        specialinvoke $r2.<org.apache.http.entity.EntityTemplate: void <init>(org.apache.http.entity.ContentProducer)>($r0);

        $r3 = <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.RDFFormat sendLang>;

        $r4 = virtualinvoke $r3.<org.apache.jena.riot.RDFFormat: org.apache.jena.riot.Lang getLang()>();

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.Lang: org.apache.jena.atlas.web.ContentType getContentType()>();

        $r6 = virtualinvoke $r5.<org.apache.jena.atlas.web.ContentType: java.lang.String getContentType()>();

        virtualinvoke $r2.<org.apache.http.entity.EntityTemplate: void setContentType(java.lang.String)>($r6);

        return $r2;
    }

    static org.apache.jena.riot.RDFFormat access$000()
    {
        org.apache.jena.riot.RDFFormat $r0;

        $r0 = <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.RDFFormat sendLang>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.jena.riot.RDFFormat $r1;
        org.apache.jena.riot.web.HttpResponseHandler $r0;
        org.apache.http.params.HttpParams $r2;

        $r0 = <org.apache.jena.riot.web.HttpResponseLib: org.apache.jena.riot.web.HttpResponseHandler nullResponse>;

        <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.web.HttpResponseHandler noResponse> = $r0;

        $r1 = <org.apache.jena.riot.RDFFormat: org.apache.jena.riot.RDFFormat RDFXML_PLAIN>;

        <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.jena.riot.RDFFormat sendLang> = $r1;

        <org.apache.jena.web.DatasetGraphAccessorHTTP: java.lang.String GetAcceptHeader> = "application/n-triples,text/turtle;q=0.9,application/rdf+xml;q=0.8,application/xml;q=0.7";

        $r2 = staticinvoke <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.http.params.HttpParams createHttpParams()>();

        <org.apache.jena.web.DatasetGraphAccessorHTTP: org.apache.http.params.HttpParams httpParams> = $r2;

        return;
    }
}
