public class ucar.unidata.geoloc.vertical.OceanS extends ucar.unidata.geoloc.vertical.VerticalTransformImpl
{
    public static final java.lang.String ETA;
    public static final java.lang.String S;
    public static final java.lang.String DEPTH;
    public static final java.lang.String DEPTH_C;
    public static final java.lang.String A;
    public static final java.lang.String B;
    private double depth_c;
    private ucar.nc2.Variable etaVar;
    private ucar.nc2.Variable sVar;
    private ucar.nc2.Variable depthVar;
    private ucar.nc2.Variable aVar;
    private ucar.nc2.Variable bVar;
    private ucar.nc2.Variable depthCVar;
    private ucar.ma2.Array c;

    public void <init>(ucar.nc2.NetcdfFile, ucar.nc2.Dimension, java.util.List)
    {
        ucar.nc2.Variable $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r17;
        ucar.unidata.geoloc.vertical.OceanS r0;
        java.util.List r2;
        ucar.nc2.Dimension r1;
        ucar.nc2.NetcdfFile r9;

        r0 := @this: ucar.unidata.geoloc.vertical.OceanS;

        r9 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Dimension;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: void <init>(ucar.nc2.Dimension)>(r1);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c> = null;

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "Eta_variableName");

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "S_variableName");

        $r5 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "Depth_variableName");

        $r6 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "A_variableName");

        $r7 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "B_variableName");

        $r8 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "Depth_c_variableName");

        $r10 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r3);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable etaVar> = $r10;

        $r11 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r4);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable sVar> = $r11;

        $r12 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r5);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthVar> = $r12;

        $r13 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r6);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable aVar> = $r13;

        $r14 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r7);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable bVar> = $r14;

        $r15 = virtualinvoke r9.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r8);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthCVar> = $r15;

        $r16 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthVar>;

        $r17 = virtualinvoke r9.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r16, "units", "none");

        r0.<ucar.unidata.geoloc.vertical.OceanS: java.lang.String units> = $r17;

        return;
    }

    public ucar.ma2.ArrayDouble$D3 getCoordinateArray(int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        int i0;
        ucar.nc2.Variable $r1, $r3, $r5, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3;
        ucar.unidata.geoloc.vertical.OceanS r0;
        ucar.ma2.Array $r2, $r4, $r6, $r7, $r8, $r13;
        ucar.ma2.ArrayDouble$D3 $r9;

        r0 := @this: ucar.unidata.geoloc.vertical.OceanS;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable etaVar>;

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r1, i0);

        $r3 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable sVar>;

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r3, i0);

        $r5 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthVar>;

        $r6 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r5, i0);

        $r7 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c>;

        if null != $r7 goto label1;

        $r10 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable aVar>;

        $d1 = virtualinvoke $r10.<ucar.nc2.Variable: double readScalarDouble()>();

        $r11 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable bVar>;

        $d2 = virtualinvoke $r11.<ucar.nc2.Variable: double readScalarDouble()>();

        $r12 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthCVar>;

        $d3 = virtualinvoke $r12.<ucar.nc2.Variable: double readScalarDouble()>();

        r0.<ucar.unidata.geoloc.vertical.OceanS: double depth_c> = $d3;

        $r13 = specialinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array makeC(ucar.ma2.Array,double,double)>($r4, $d1, $d2);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c> = $r13;

     label1:
        $r8 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c>;

        $d0 = r0.<ucar.unidata.geoloc.vertical.OceanS: double depth_c>;

        $r9 = specialinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.ArrayDouble$D3 makeHeight(ucar.ma2.Array,ucar.ma2.Array,ucar.ma2.Array,ucar.ma2.Array,double)>($r2, $r4, $r6, $r8, $d0);

        return $r9;
    }

    public ucar.ma2.ArrayDouble$D1 getCoordinateArray1D(int, int, int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        int i0, i1, i2;
        ucar.nc2.Variable $r1, $r3, $r5, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3;
        ucar.unidata.geoloc.vertical.OceanS r0;
        ucar.ma2.Array $r2, $r4, $r6, $r7, $r8, $r13;
        ucar.ma2.ArrayDouble$D1 $r9;

        r0 := @this: ucar.unidata.geoloc.vertical.OceanS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable etaVar>;

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r1, i0);

        $r3 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable sVar>;

        $r4 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r3, i0);

        $r5 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthVar>;

        $r6 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r5, i0);

        $r7 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c>;

        if null != $r7 goto label1;

        $r10 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable aVar>;

        $d1 = virtualinvoke $r10.<ucar.nc2.Variable: double readScalarDouble()>();

        $r11 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable bVar>;

        $d2 = virtualinvoke $r11.<ucar.nc2.Variable: double readScalarDouble()>();

        $r12 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.nc2.Variable depthCVar>;

        $d3 = virtualinvoke $r12.<ucar.nc2.Variable: double readScalarDouble()>();

        r0.<ucar.unidata.geoloc.vertical.OceanS: double depth_c> = $d3;

        $r13 = specialinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array makeC(ucar.ma2.Array,double,double)>($r4, $d1, $d2);

        r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c> = $r13;

     label1:
        $r8 = r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.Array c>;

        $d0 = r0.<ucar.unidata.geoloc.vertical.OceanS: double depth_c>;

        $r9 = specialinvoke r0.<ucar.unidata.geoloc.vertical.OceanS: ucar.ma2.ArrayDouble$D1 makeHeight1D(ucar.ma2.Array,ucar.ma2.Array,ucar.ma2.Array,ucar.ma2.Array,double,int,int)>($r2, $r4, $r6, $r8, $d0, i1, i2);

        return $r9;
    }

    private ucar.ma2.Array makeC(ucar.ma2.Array, double, double)
    {
        long $l0;
        byte $b2;
        int i1, i3;
        double d0, d1, d2, $d3, d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, $d18, d19, $d20;
        ucar.unidata.geoloc.vertical.OceanS r4;
        ucar.ma2.Array r0;
        ucar.ma2.ArrayDouble$D1 $r2;
        ucar.ma2.Index $r1, $r3;

        r4 := @this: ucar.unidata.geoloc.vertical.OceanS;

        r0 := @parameter0: ucar.ma2.Array;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $l0 = virtualinvoke r0.<ucar.ma2.Array: long getSize()>();

        i1 = (int) $l0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label1;

        return r0;

     label1:
        $r2 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r2.<ucar.ma2.ArrayDouble$D1: void <init>(int)>(i1);

        d2 = 1.0 - d1;

        $d3 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double sinh(double)>(d0);

        d4 = 1.0 / $d3;

        $d5 = 0.5 * d0;

        $d6 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double tanh(double)>($d5);

        $d7 = 2.0 * $d6;

        d8 = 1.0 / $d7;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        $r3 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i3);

        $d9 = virtualinvoke r0.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r3);

        $d10 = d0 * $d9;

        $d11 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double sinh(double)>($d10);

        $d12 = d2 * $d11;

        d13 = $d12 * d4;

        $d14 = $d9 + 0.5;

        $d15 = d0 * $d14;

        $d16 = staticinvoke <ucar.unidata.util.SpecialMathFunction: double tanh(double)>($d15);

        $d17 = $d16 * d8;

        $d18 = $d17 - 0.5;

        d19 = d1 * $d18;

        $d20 = d13 + d19;

        virtualinvoke $r2.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i3, $d20);

        i3 = i3 + 1;

        goto label2;

     label3:
        return $r2;
    }

    private ucar.ma2.ArrayDouble$D3 makeHeight(ucar.ma2.Array, ucar.ma2.Array, ucar.ma2.Array, ucar.ma2.Array, double)
    {
        int[] $r5;
        ucar.ma2.ArrayDouble$D3 $r9;
        long $l0;
        int i1, i2, i3, i4, i5, i6;
        double $d0, $d1, d2, d3, $d4, $d5, d6, d7, $d8, $d9, d10, $d11, d12;
        ucar.unidata.geoloc.vertical.OceanS r14;
        ucar.ma2.Array r0, r2, r4, r7;
        ucar.ma2.Index $r1, $r3, $r6, $r8, $r10, $r11, $r12, $r13;

        r14 := @this: ucar.unidata.geoloc.vertical.OceanS;

        r4 := @parameter0: ucar.ma2.Array;

        r0 := @parameter1: ucar.ma2.Array;

        r7 := @parameter2: ucar.ma2.Array;

        r2 := @parameter3: ucar.ma2.Array;

        d2 := @parameter4: double;

        $l0 = virtualinvoke r0.<ucar.ma2.Array: long getSize()>();

        i1 = (int) $l0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r3 = virtualinvoke r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r5 = virtualinvoke r4.<ucar.ma2.Array: int[] getShape()>();

        i2 = $r5[0];

        i3 = $r5[1];

        $r6 = virtualinvoke r4.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r8 = virtualinvoke r7.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r9 = new ucar.ma2.ArrayDouble$D3;

        specialinvoke $r9.<ucar.ma2.ArrayDouble$D3: void <init>(int,int,int)>(i1, i2, i3);

        i4 = 0;

     label1:
        if i4 >= i1 goto label6;

        $r10 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d0 = virtualinvoke r0.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r10);

        $r11 = virtualinvoke $r3.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d1 = virtualinvoke r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r11);

        d3 = d2 * $d0;

        i5 = 0;

     label2:
        if i5 >= i2 goto label5;

        i6 = 0;

     label3:
        if i6 >= i3 goto label4;

        $r12 = virtualinvoke $r8.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i5, i6);

        $d4 = virtualinvoke r7.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r12);

        $d5 = $d4 - d2;

        d6 = $d5 * $d1;

        d7 = d3 + d6;

        $r13 = virtualinvoke $r6.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i5, i6);

        $d8 = virtualinvoke r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r13);

        $d9 = d7 / $d4;

        d10 = 1.0 + $d9;

        $d11 = $d8 * d10;

        d12 = d7 + $d11;

        virtualinvoke $r9.<ucar.ma2.ArrayDouble$D3: void set(int,int,int,double)>(i4, i5, i6, d12);

        i6 = i6 + 1;

        goto label3;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return $r9;
    }

    private ucar.ma2.ArrayDouble$D1 makeHeight1D(ucar.ma2.Array, ucar.ma2.Array, ucar.ma2.Array, ucar.ma2.Array, double, int, int)
    {
        ucar.ma2.ArrayDouble$D1 $r8;
        long $l0;
        int i1, i2, i3, i4;
        double $d0, $d1, d2, d3, $d4, $d5, d6, d7, $d8, $d9, d10, $d11, d12;
        ucar.unidata.geoloc.vertical.OceanS r13;
        ucar.ma2.Array r0, r2, r4, r6;
        ucar.ma2.Index $r1, $r3, $r5, $r7, $r9, $r10, $r11, $r12;

        r13 := @this: ucar.unidata.geoloc.vertical.OceanS;

        r4 := @parameter0: ucar.ma2.Array;

        r0 := @parameter1: ucar.ma2.Array;

        r6 := @parameter2: ucar.ma2.Array;

        r2 := @parameter3: ucar.ma2.Array;

        d2 := @parameter4: double;

        i3 := @parameter5: int;

        i2 := @parameter6: int;

        $l0 = virtualinvoke r0.<ucar.ma2.Array: long getSize()>();

        i1 = (int) $l0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r3 = virtualinvoke r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r5 = virtualinvoke r4.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r7 = virtualinvoke r6.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r8 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r8.<ucar.ma2.ArrayDouble$D1: void <init>(int)>(i1);

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $r9 = virtualinvoke $r1.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d0 = virtualinvoke r0.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r9);

        $r10 = virtualinvoke $r3.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d1 = virtualinvoke r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r10);

        d3 = d2 * $d0;

        $r11 = virtualinvoke $r7.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i2, i3);

        $d4 = virtualinvoke r6.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r11);

        $d5 = $d4 - d2;

        d6 = $d5 * $d1;

        d7 = d3 + d6;

        $r12 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i2, i3);

        $d8 = virtualinvoke r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r12);

        $d9 = d7 / $d4;

        d10 = 1.0 + $d9;

        $d11 = $d8 * d10;

        d12 = d7 + $d11;

        virtualinvoke $r8.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i4, d12);

        i4 = i4 + 1;

        goto label1;

     label2:
        return $r8;
    }

    public static void <clinit>()
    {
        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String B> = "B_variableName";

        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String A> = "A_variableName";

        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String DEPTH_C> = "Depth_c_variableName";

        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String DEPTH> = "Depth_variableName";

        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String S> = "S_variableName";

        <ucar.unidata.geoloc.vertical.OceanS: java.lang.String ETA> = "Eta_variableName";

        return;
    }
}
