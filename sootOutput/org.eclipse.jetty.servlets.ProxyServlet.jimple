public class org.eclipse.jetty.servlets.ProxyServlet extends java.lang.Object implements javax.servlet.Servlet
{
    protected org.eclipse.jetty.util.log.Logger _log;
    protected org.eclipse.jetty.client.HttpClient _client;
    protected java.lang.String _hostHeader;
    protected java.util.HashSet _DontProxyHeaders;
    protected javax.servlet.ServletConfig _config;
    protected javax.servlet.ServletContext _context;
    protected org.eclipse.jetty.util.HostMap _white;
    protected org.eclipse.jetty.util.HostMap _black;

    public void <init>()
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        org.eclipse.jetty.util.HostMap $r11, $r12;
        java.util.HashSet $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders> = $r1;

        $r2 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>("proxy-connection");

        $r3 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>("connection");

        $r4 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>("keep-alive");

        $r5 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>("transfer-encoding");

        $r6 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r6.<java.util.HashSet: boolean add(java.lang.Object)>("te");

        $r7 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r7.<java.util.HashSet: boolean add(java.lang.Object)>("trailer");

        $r8 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r8.<java.util.HashSet: boolean add(java.lang.Object)>("proxy-authorization");

        $r9 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>("proxy-authenticate");

        $r10 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>("upgrade");

        $r11 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r11.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _white> = $r11;

        $r12 = new org.eclipse.jetty.util.HostMap;

        specialinvoke $r12.<org.eclipse.jetty.util.HostMap: void <init>()>();

        r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _black> = $r12;

        return;
    }

    public void init(javax.servlet.ServletConfig) throws javax.servlet.ServletException
    {
        javax.servlet.ServletException $r27;
        org.eclipse.jetty.servlets.ProxyServlet r0;
        org.eclipse.jetty.client.HttpClient $r5, $r17, $r25;
        java.lang.String $r3, $r7, $r8, $r13, $r16, $r21, $r24;
        javax.servlet.ServletConfig r1;
        org.eclipse.jetty.util.HostMap $r9, $r10;
        java.lang.Exception $r26;
        org.eclipse.jetty.util.thread.ThreadPool $r18;
        javax.servlet.ServletContext $r2, $r6, $r12, $r20;
        java.lang.StringBuilder $r11, $r14, $r15, $r19, $r22, $r23;
        org.eclipse.jetty.util.log.Logger $r4;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: javax.servlet.ServletConfig;

        r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletConfig _config> = r1;

        $r2 = interfaceinvoke r1.<javax.servlet.ServletConfig: javax.servlet.ServletContext getServletContext()>();

        r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletContext _context> = $r2;

        $r3 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("HostHeader");

        r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader> = $r3;

     label1:
        $r4 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger createLogger(javax.servlet.ServletConfig)>(r1);

        r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log> = $r4;

        $r5 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient createHttpClient(javax.servlet.ServletConfig)>(r1);

        r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client> = $r5;

        $r6 = r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletContext _context>;

        if $r6 == null goto label2;

        $r12 = r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletContext _context>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getServletName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ThreadPool");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        $r18 = virtualinvoke $r17.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        interfaceinvoke $r12.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>($r16, $r18);

        $r20 = r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletContext _context>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getServletName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".HttpClient");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        interfaceinvoke $r20.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>($r24, $r25);

     label2:
        $r7 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("whiteList");

        if $r7 == null goto label3;

        $r10 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _white>;

        specialinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void parseList(java.lang.String,org.eclipse.jetty.util.HostMap)>($r7, $r10);

     label3:
        $r8 = interfaceinvoke r1.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("blackList");

        if $r8 == null goto label4;

        $r9 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _black>;

        specialinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void parseList(java.lang.String,org.eclipse.jetty.util.HostMap)>($r8, $r9);

     label4:
        goto label6;

     label5:
        $r26 := @caughtexception;

        $r27 = new javax.servlet.ServletException;

        specialinvoke $r27.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r26);

        throw $r27;

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void destroy()
    {
        org.eclipse.jetty.client.HttpClient $r1;
        org.eclipse.jetty.servlets.ProxyServlet r0;
        org.eclipse.jetty.util.log.Logger $r3;
        java.lang.Exception $r2;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

     label1:
        $r1 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void stop()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected org.eclipse.jetty.util.log.Logger createLogger(javax.servlet.ServletConfig)
    {
        javax.servlet.ServletConfig r2;
        org.eclipse.jetty.servlets.ProxyServlet r7;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;
        org.eclipse.jetty.util.log.Logger $r6;

        r7 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r2 := @parameter0: javax.servlet.ServletConfig;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.eclipse.jetty.servlets.");

        $r3 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getServletName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.String)>($r5);

        return $r6;
    }

    protected org.eclipse.jetty.client.HttpClient createHttpClientInstance()
    {
        org.eclipse.jetty.client.HttpClient $r0;
        org.eclipse.jetty.servlets.ProxyServlet r1;

        r1 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        $r0 = new org.eclipse.jetty.client.HttpClient;

        specialinvoke $r0.<org.eclipse.jetty.client.HttpClient: void <init>()>();

        return $r0;
    }

    protected org.eclipse.jetty.client.HttpClient createHttpClient(javax.servlet.ServletConfig) throws java.lang.Exception
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        long $l4, $l5;
        org.eclipse.jetty.client.HttpClient $r1;
        org.eclipse.jetty.util.thread.QueuedThreadPool $r4, $r6, $r15;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        java.lang.String $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        javax.servlet.ServletConfig r2;
        org.eclipse.jetty.util.thread.ThreadPool $r5;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r2 := @parameter0: javax.servlet.ServletConfig;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient createHttpClientInstance()>();

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setConnectorType(int)>(2);

        $r3 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("maxThreads");

        if $r3 == null goto label1;

        $r15 = new org.eclipse.jetty.util.thread.QueuedThreadPool;

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        specialinvoke $r15.<org.eclipse.jetty.util.thread.QueuedThreadPool: void <init>(int)>($i7);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)>($r15);

        goto label2;

     label1:
        $r4 = new org.eclipse.jetty.util.thread.QueuedThreadPool;

        specialinvoke $r4.<org.eclipse.jetty.util.thread.QueuedThreadPool: void <init>()>();

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)>($r4);

     label2:
        $r5 = virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        $r6 = (org.eclipse.jetty.util.thread.QueuedThreadPool) $r5;

        $r7 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getServletName()>();

        virtualinvoke $r6.<org.eclipse.jetty.util.thread.QueuedThreadPool: void setName(java.lang.String)>($r7);

        $r8 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("maxConnections");

        if $r8 == null goto label3;

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setMaxConnectionsPerAddress(int)>($i6);

     label3:
        $r9 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("timeout");

        if $r9 == null goto label4;

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r9);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setTimeout(long)>($l5);

     label4:
        $r10 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("idleTimeout");

        if $r10 == null goto label5;

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setIdleTimeout(long)>($l4);

     label5:
        $r11 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("requestHeaderSize");

        if $r11 == null goto label6;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setRequestHeaderSize(int)>($i3);

     label6:
        $r12 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("requestBufferSize");

        if $r12 == null goto label7;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setRequestBufferSize(int)>($i2);

     label7:
        $r13 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("responseHeaderSize");

        if $r13 == null goto label8;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setResponseHeaderSize(int)>($i1);

     label8:
        $r14 = interfaceinvoke r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("responseBufferSize");

        if $r14 == null goto label9;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void setResponseBufferSize(int)>($i0);

     label9:
        virtualinvoke $r1.<org.eclipse.jetty.client.HttpClient: void start()>();

        return $r1;
    }

    private void parseList(java.lang.String, org.eclipse.jetty.util.HostMap)
    {
        org.eclipse.jetty.servlets.ProxyServlet r9;
        java.util.StringTokenizer $r1;
        int $i0, $i1;
        java.lang.String r0, $r2, r3, $r4, $r10, r11, $r12;
        org.eclipse.jetty.http.PathMap $r7, $r8, r13;
        boolean $z0;
        org.eclipse.jetty.util.HostMap r5;
        java.lang.Object $r6;

        r9 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: org.eclipse.jetty.util.HostMap;

        if r0 == null goto label8;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label8;

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ",");

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(47);

        if $i1 <= 0 goto label2;

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label3;

     label2:
        $r10 = $r2;

     label3:
        r11 = $r10;

        if $i1 <= 0 goto label4;

        $r12 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label5;

     label4:
        $r12 = "/*";

     label5:
        r3 = $r12;

        $r4 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>();

        $r6 = virtualinvoke r5.<org.eclipse.jetty.util.HostMap: java.lang.Object get(java.lang.Object)>($r4);

        $r8 = (org.eclipse.jetty.http.PathMap) $r6;

        r13 = $r8;

        if $r8 != null goto label6;

        $r7 = new org.eclipse.jetty.http.PathMap;

        specialinvoke $r7.<org.eclipse.jetty.http.PathMap: void <init>(boolean)>(1);

        r13 = $r7;

        virtualinvoke r5.<org.eclipse.jetty.util.HostMap: java.lang.Object put(java.lang.String,java.lang.Object)>($r4, $r7);

     label6:
        if r3 == null goto label7;

        virtualinvoke r13.<org.eclipse.jetty.http.PathMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r3);

     label7:
        goto label1;

     label8:
        return;
    }

    public boolean validateDestination(java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, z2, $z3, $z5, $z6, $z7;
        java.util.List $r20, $r21;
        org.eclipse.jetty.servlets.ProxyServlet r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String r3, r10;
        org.eclipse.jetty.http.PathMap r18, r22;
        java.util.Map$Entry $r8, $r16;
        java.util.Iterator $r6, $r14;
        org.eclipse.jetty.util.HostMap $r1, $r2, $r4, $r12;
        java.lang.Object $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r3 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _white>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.util.HostMap: int size()>();

        if $i0 <= 0 goto label09;

        z2 = 0;

        $r12 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _white>;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.util.HostMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r13 == null goto label08;

        $z1 = $r13 instanceof java.util.List;

        if $z1 == 0 goto label01;

        $r20 = (java.util.List) $r13;

        goto label02;

     label01:
        $r20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r13);

     label02:
        $r14 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        r18 = (org.eclipse.jetty.http.PathMap) $r17;

        if r18 == null goto label05;

        $i3 = virtualinvoke r18.<org.eclipse.jetty.http.PathMap: int size()>();

        if $i3 == 0 goto label04;

        $r19 = virtualinvoke r18.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>(r10);

        if $r19 == null goto label05;

     label04:
        $z7 = 1;

        $z6 = 1;

        goto label06;

     label05:
        $z7 = 0;

        $z6 = 0;

     label06:
        z2 = $z6;

        if $z7 == 0 goto label07;

        goto label08;

     label07:
        goto label03;

     label08:
        if z2 != 0 goto label09;

        return 0;

     label09:
        $r2 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _black>;

        $i1 = virtualinvoke $r2.<org.eclipse.jetty.util.HostMap: int size()>();

        if $i1 <= 0 goto label15;

        $r4 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.HostMap _black>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.HostMap: java.lang.Object getLazyMatches(java.lang.String)>(r3);

        if $r5 == null goto label15;

        $z0 = $r5 instanceof java.util.List;

        if $z0 == 0 goto label10;

        $r21 = (java.util.List) $r5;

        goto label11;

     label10:
        $r21 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r5);

     label11:
        $r6 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (org.eclipse.jetty.http.PathMap) $r9;

        if r22 == null goto label14;

        $i2 = virtualinvoke r22.<org.eclipse.jetty.http.PathMap: int size()>();

        if $i2 == 0 goto label13;

        $r11 = virtualinvoke r22.<org.eclipse.jetty.http.PathMap: java.lang.Object match(java.lang.String)>(r10);

        if $r11 == null goto label14;

     label13:
        return 0;

     label14:
        goto label12;

     label15:
        return 1;
    }

    public javax.servlet.ServletConfig getServletConfig()
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        javax.servlet.ServletConfig $r1;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        $r1 = r0.<org.eclipse.jetty.servlets.ProxyServlet: javax.servlet.ServletConfig _config>;

        return $r1;
    }

    public java.lang.String getHostHeader()
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        $r1 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader>;

        return $r1;
    }

    public void setHostHeader(java.lang.String)
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader> = r1;

        return;
    }

    public void service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.util.Enumeration $r19, $r87;
        byte $b3, $b4, $b7;
        java.lang.StringBuilder $r39, $r40, $r41, $r42, $r43, $r54, $r55, $r57, $r58, $r59, $r60, $r62, $r67, $r68, $r69, $r70, $r71, $r75, $r76, $r78, $r88, $r89, $r91, $r92;
        java.lang.Object[] $r45, $r64, $r73;
        long $l1, $l2, $l5, l13, $l14;
        javax.servlet.http.HttpServletRequest $r79;
        java.lang.String $r4, $r5, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, r36, $r44, $r46, $r47, $r48, $r49, $r51, $r56, $r61, $r63, $r72, $r77, r81, r83, $r84, r85;
        org.eclipse.jetty.client.HttpClient $r20, $r21, $r22;
        java.util.Locale $r28, $r50;
        org.eclipse.jetty.io.Buffer $r82;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10, $z11, $z12, $z13;
        org.eclipse.jetty.servlets.ProxyServlet$1 $r90;
        javax.servlet.ServletResponse r3;
        org.eclipse.jetty.continuation.Continuation $r8;
        javax.servlet.ServletInputStream $r6;
        org.eclipse.jetty.servlets.ProxyServlet r0;
        java.util.HashSet $r86;
        org.eclipse.jetty.http.HttpURI $r11;
        javax.servlet.ServletOutputStream $r7;
        int i0, $i6, $i8, $i9, $i10, $i11, $i12, $i15, $i16;
        javax.servlet.ServletRequest r2;
        javax.servlet.http.HttpServletResponse $r80;
        java.lang.Object $r27, $r35;
        org.eclipse.jetty.util.log.Logger $r1, $r38, $r53, $r66;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r2 := @parameter0: javax.servlet.ServletRequest;

        r3 := @parameter1: javax.servlet.ServletResponse;

        $r1 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $i12 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        goto label02;

     label01:
        $i12 = 0;

     label02:
        i0 = $i12;

        $r79 = (javax.servlet.http.HttpServletRequest) r2;

        $r80 = (javax.servlet.http.HttpServletResponse) r3;

        $r4 = "CONNECT";

        $r5 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label03;

        virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void handleConnect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r79, $r80);

        goto label32;

     label03:
        $r6 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r7 = interfaceinvoke $r80.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r8 = staticinvoke <org.eclipse.jetty.continuation.ContinuationSupport: org.eclipse.jetty.continuation.Continuation getContinuation(javax.servlet.ServletRequest)>($r79);

        $z2 = interfaceinvoke $r8.<org.eclipse.jetty.continuation.Continuation: boolean isInitial()>();

        if $z2 != 0 goto label04;

        interfaceinvoke $r80.<javax.servlet.http.HttpServletResponse: void sendError(int)>(504);

        goto label32;

     label04:
        $r9 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        r81 = $r9;

        $r10 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        if $r10 == null goto label05;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r77 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r11 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.http.HttpURI proxyHttpURI(javax.servlet.http.HttpServletRequest,java.lang.String)>($r79, r81);

        if i0 == 0 goto label06;

        $r66 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proxy ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r81);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        $r73 = newarray (java.lang.Object)[0];

        interfaceinvoke $r66.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r72, $r73);

     label06:
        if $r11 != null goto label07;

        interfaceinvoke $r80.<javax.servlet.http.HttpServletResponse: void sendError(int)>(403);

        return;

     label07:
        $r90 = new org.eclipse.jetty.servlets.ProxyServlet$1;

        specialinvoke $r90.<org.eclipse.jetty.servlets.ProxyServlet$1: void <init>(org.eclipse.jetty.servlets.ProxyServlet,int,org.eclipse.jetty.continuation.Continuation,java.io.OutputStream,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)>(r0, i0, $r8, $r7, $r80, $r79);

        $r13 = "https";

        $r14 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label08;

        $r82 = <org.eclipse.jetty.http.HttpSchemes: org.eclipse.jetty.io.Buffer HTTPS_BUFFER>;

        goto label09;

     label08:
        $r82 = <org.eclipse.jetty.http.HttpSchemes: org.eclipse.jetty.io.Buffer HTTP_BUFFER>;

     label09:
        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setScheme(org.eclipse.jetty.io.Buffer)>($r82);

        $r15 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setMethod(java.lang.String)>($r15);

        $r16 = virtualinvoke $r11.<org.eclipse.jetty.http.HttpURI: java.lang.String toString()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setURL(java.lang.String)>($r16);

        $r17 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setVersion(java.lang.String)>($r17);

        if i0 == 0 goto label10;

        $r53 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r56 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r61 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        $r64 = newarray (java.lang.Object)[0];

        interfaceinvoke $r53.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r63, $r64);

     label10:
        $r18 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Connection");

        r83 = $r18;

        if $r18 == null goto label11;

        $r50 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r51 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r50);

        r83 = $r51;

        $i10 = virtualinvoke $r51.<java.lang.String: int indexOf(java.lang.String)>("keep-alive");

        if $i10 >= 0 goto label11;

        $i11 = virtualinvoke $r51.<java.lang.String: int indexOf(java.lang.String)>("close");

        if $i11 >= 0 goto label11;

        r83 = null;

     label11:
        $r84 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader>;

        if $r84 == null goto label12;

        $r49 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader>;

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setRequestHeader(java.lang.String,java.lang.String)>("Host", $r49);

     label12:
        z9 = 0;

        z10 = 0;

        $r19 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>();

     label13:
        $z11 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z11 == 0 goto label25;

        $r27 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

        r85 = (java.lang.String) $r27;

        $r28 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r29 = virtualinvoke r85.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r28);

        $r30 = "transfer-encoding";

        $z4 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z4 == 0 goto label14;

        $r48 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("transfer-encoding");

        $i9 = virtualinvoke $r48.<java.lang.String: int indexOf(java.lang.String)>("chunk");

        if $i9 < 0 goto label14;

        z10 = 1;

     label14:
        $r86 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.util.HashSet _DontProxyHeaders>;

        $z12 = virtualinvoke $r86.<java.util.HashSet: boolean contains(java.lang.Object)>($r29);

        if $z12 == 0 goto label15;

        goto label13;

     label15:
        if r83 == null goto label16;

        $i8 = virtualinvoke r83.<java.lang.String: int indexOf(java.lang.String)>($r29);

        if $i8 < 0 goto label16;

        goto label13;

     label16:
        $r31 = r0.<org.eclipse.jetty.servlets.ProxyServlet: java.lang.String _hostHeader>;

        if $r31 == null goto label17;

        $r47 = "host";

        $z8 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z8 == 0 goto label17;

        goto label13;

     label17:
        $r32 = "content-type";

        $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z5 == 0 goto label18;

        z10 = 1;

        goto label20;

     label18:
        $r33 = "content-length";

        $z6 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z6 == 0 goto label19;

        $i6 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: int getContentLength()>();

        l13 = (long) $i6;

        $r46 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l13);

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setRequestHeader(java.lang.String,java.lang.String)>("Content-Length", $r46);

        $b7 = l13 cmp 0L;

        $i15 = (int) $b7;

        if $i15 <= 0 goto label20;

        z10 = 1;

        goto label20;

     label19:
        $r34 = "x-forwarded-for";

        $z7 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z7 == 0 goto label20;

        z9 = 1;

     label20:
        $r87 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>(r85);

     label21:
        $z13 = interfaceinvoke $r87.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z13 == 0 goto label24;

        $r35 = interfaceinvoke $r87.<java.util.Enumeration: java.lang.Object nextElement()>();

        r36 = (java.lang.String) $r35;

        if r36 == null goto label23;

        if i0 == 0 goto label22;

        $r38 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r85);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = newarray (java.lang.Object)[0];

        interfaceinvoke $r38.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r44, $r45);

     label22:
        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setRequestHeader(java.lang.String,java.lang.String)>(r85, r36);

     label23:
        goto label21;

     label24:
        goto label13;

     label25:
        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setRequestHeader(java.lang.String,java.lang.String)>("Via", "1.1 (jetty)");

        if z9 != 0 goto label26;

        $r23 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void addRequestHeader(java.lang.String,java.lang.String)>("X-Forwarded-For", $r23);

        $r24 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getScheme()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void addRequestHeader(java.lang.String,java.lang.String)>("X-Forwarded-Proto", $r24);

        $r25 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Host");

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void addRequestHeader(java.lang.String,java.lang.String)>("X-Forwarded-Host", $r25);

        $r26 = interfaceinvoke $r79.<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>();

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void addRequestHeader(java.lang.String,java.lang.String)>("X-Forwarded-Server", $r26);

     label26:
        if z10 == 0 goto label27;

        virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: void setRequestContentSource(java.io.InputStream)>($r6);

     label27:
        virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void customizeExchange(org.eclipse.jetty.client.HttpExchange,javax.servlet.http.HttpServletRequest)>($r90, $r79);

        $r20 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        $l1 = virtualinvoke $r20.<org.eclipse.jetty.client.HttpClient: long getTimeout()>();

        $l2 = virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: long getTimeout()>();

        $b3 = $l1 cmp $l2;

        $i16 = (int) $b3;

        if $i16 <= 0 goto label28;

        $r22 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        $l14 = virtualinvoke $r22.<org.eclipse.jetty.client.HttpClient: long getTimeout()>();

        goto label29;

     label28:
        $l14 = virtualinvoke $r90.<org.eclipse.jetty.client.HttpExchange: long getTimeout()>();

     label29:
        $b4 = $l14 cmp 0L;

        if $b4 != 0 goto label30;

        interfaceinvoke $r8.<org.eclipse.jetty.continuation.Continuation: void setTimeout(long)>(0L);

        goto label31;

     label30:
        $l5 = $l14 + 1000L;

        interfaceinvoke $r8.<org.eclipse.jetty.continuation.Continuation: void setTimeout(long)>($l5);

     label31:
        virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void customizeContinuation(org.eclipse.jetty.continuation.Continuation)>($r8);

        interfaceinvoke $r8.<org.eclipse.jetty.continuation.Continuation: void suspend(javax.servlet.ServletResponse)>($r80);

        $r21 = r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.client.HttpClient _client>;

        virtualinvoke $r21.<org.eclipse.jetty.client.HttpClient: void send(org.eclipse.jetty.client.HttpExchange)>($r90);

     label32:
        return;
    }

    public void handleConnect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        java.net.Socket $r10;
        javax.servlet.ServletInputStream $r8;
        org.eclipse.jetty.servlets.ProxyServlet r4;
        java.net.InetAddress $r11;
        javax.servlet.http.HttpServletRequest r0;
        javax.servlet.ServletOutputStream $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r1, $r3, r5, r6;
        java.io.OutputStream $r13;
        javax.servlet.http.HttpServletResponse r2;
        java.net.InetSocketAddress $r7;
        java.io.InputStream $r12;

        r4 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        r5 = "";

        r6 = "";

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label1;

        $i1 = $i0 + 1;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r6 = $r3;

        $i2 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        if $i2 <= 0 goto label1;

        $i3 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        $i4 = $i3 + 1;

        r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i4);

     label1:
        $r7 = new java.net.InetSocketAddress;

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r6, $i5);

        $r8 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r9 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r10 = new java.net.Socket;

        $r11 = virtualinvoke $r7.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $i6 = virtualinvoke $r7.<java.net.InetSocketAddress: int getPort()>();

        specialinvoke $r10.<java.net.Socket: void <init>(java.net.InetAddress,int)>($r11, $i6);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(200);

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", "close");

        interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        $r12 = virtualinvoke $r10.<java.net.Socket: java.io.InputStream getInputStream()>();

        staticinvoke <org.eclipse.jetty.util.IO: void copyThread(java.io.InputStream,java.io.OutputStream)>($r12, $r9);

        $r13 = virtualinvoke $r10.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.eclipse.jetty.util.IO: void copy(java.io.InputStream,java.io.OutputStream)>($r8, $r13);

        return;
    }

    protected org.eclipse.jetty.http.HttpURI proxyHttpURI(javax.servlet.http.HttpServletRequest, java.lang.String) throws java.net.MalformedURLException
    {
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.http.HttpURI $r5;
        int $i0;
        org.eclipse.jetty.servlets.ProxyServlet r0;
        java.lang.String $r2, $r3, r4;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getScheme()>();

        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getServerName()>();

        $i0 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: int getServerPort()>();

        $r5 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.http.HttpURI proxyHttpURI(java.lang.String,java.lang.String,int,java.lang.String)>($r2, $r3, $i0, r4);

        return $r5;
    }

    protected org.eclipse.jetty.http.HttpURI proxyHttpURI(java.lang.String, java.lang.String, int, java.lang.String) throws java.net.MalformedURLException
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        org.eclipse.jetty.http.HttpURI $r3;
        int i0;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String r1, r2, r5, $r12;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: boolean validateDestination(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new org.eclipse.jetty.http.HttpURI;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.eclipse.jetty.http.HttpURI: void <init>(java.lang.String)>($r12);

        return $r3;
    }

    public java.lang.String getServletInfo()
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        return "Proxy Servlet";
    }

    protected void customizeExchange(org.eclipse.jetty.client.HttpExchange, javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.servlets.ProxyServlet r0;
        javax.servlet.http.HttpServletRequest r2;
        org.eclipse.jetty.client.HttpExchange r1;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: org.eclipse.jetty.client.HttpExchange;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        return;
    }

    protected void customizeContinuation(org.eclipse.jetty.continuation.Continuation)
    {
        org.eclipse.jetty.continuation.Continuation r1;
        org.eclipse.jetty.servlets.ProxyServlet r0;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: org.eclipse.jetty.continuation.Continuation;

        return;
    }

    protected void handleOnConnectionFailed(java.lang.Throwable, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.lang.Throwable r1;
        javax.servlet.http.HttpServletRequest r2;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.servlets.ProxyServlet r0;

        r0 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.eclipse.jetty.servlets.ProxyServlet: void handleOnException(java.lang.Throwable,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2, r3);

        return;
    }

    protected void handleOnException(java.lang.Throwable, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        java.lang.Throwable r0;
        java.lang.Object[] $r6;
        javax.servlet.http.HttpServletResponse r3;
        org.eclipse.jetty.servlets.ProxyServlet r1;
        javax.servlet.http.HttpServletRequest r8;
        org.eclipse.jetty.util.log.Logger $r2, $r4, $r7;
        java.lang.String $r5;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r0 := @parameter0: java.lang.Throwable;

        r8 := @parameter1: javax.servlet.http.HttpServletRequest;

        r3 := @parameter2: javax.servlet.http.HttpServletResponse;

        $z0 = r0 instanceof java.io.IOException;

        if $z0 == 0 goto label1;

        $r4 = r1.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        $r5 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r5, $r6);

        $r7 = r1.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>(r0);

        goto label2;

     label1:
        $r2 = r1.<org.eclipse.jetty.servlets.ProxyServlet: org.eclipse.jetty.util.log.Logger _log>;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>(r0);

     label2:
        $z1 = interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z1 != 0 goto label3;

        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(500);

     label3:
        return;
    }

    protected void handleOnExpire(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletRequest r2;
        javax.servlet.http.HttpServletResponse r0;
        org.eclipse.jetty.servlets.ProxyServlet r1;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        $z0 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(504);

     label1:
        return;
    }

    protected java.lang.String filterResponseHeaderValue(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r3;
        org.eclipse.jetty.servlets.ProxyServlet r1;
        java.lang.String r0, r2;

        r1 := @this: org.eclipse.jetty.servlets.ProxyServlet;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.servlet.http.HttpServletRequest;

        return r0;
    }
}
