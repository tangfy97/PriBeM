public class org.objectweb.asm.ByteVector extends java.lang.Object
{
    byte[] data;
    int length;

    public void <init>()
    {
        byte[] $r1;
        org.objectweb.asm.ByteVector r0;

        r0 := @this: org.objectweb.asm.ByteVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[64];

        r0.<org.objectweb.asm.ByteVector: byte[] data> = $r1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        byte[] $r1;
        org.objectweb.asm.ByteVector r0;

        r0 := @this: org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<org.objectweb.asm.ByteVector: byte[] data> = $r1;

        return;
    }

    public org.objectweb.asm.ByteVector putByte(int)
    {
        byte[] $r1, $r2;
        org.objectweb.asm.ByteVector r0;
        byte $b3;
        int $i0, $i1, i2, i4, i5;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        i4 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i4 + 1;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(1);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        i5 = i4 + 1;

        $b3 = (byte) i2;

        $r2[i4] = $b3;

        r0.<org.objectweb.asm.ByteVector: int length> = i5;

        return r0;
    }

    org.objectweb.asm.ByteVector put11(int, int)
    {
        byte[] $r1, $r2;
        org.objectweb.asm.ByteVector r0;
        byte $b3, $b5;
        int $i0, $i1, i2, i4, i6, i7, i8;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        i6 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i6 + 2;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(2);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        i7 = i6 + 1;

        $b3 = (byte) i2;

        $r2[i6] = $b3;

        i8 = i7 + 1;

        $b5 = (byte) i4;

        $r2[i7] = $b5;

        r0.<org.objectweb.asm.ByteVector: int length> = i8;

        return r0;
    }

    public org.objectweb.asm.ByteVector putShort(int)
    {
        byte[] $r1, $r2;
        org.objectweb.asm.ByteVector r0;
        byte $b4, $b5;
        int $i0, $i1, i2, $i3, i6, i7, i8;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        i6 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i6 + 2;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(2);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        i7 = i6 + 1;

        $i3 = i2 >>> 8;

        $b4 = (byte) $i3;

        $r2[i6] = $b4;

        i8 = i7 + 1;

        $b5 = (byte) i2;

        $r2[i7] = $b5;

        r0.<org.objectweb.asm.ByteVector: int length> = i8;

        return r0;
    }

    org.objectweb.asm.ByteVector put12(int, int)
    {
        byte[] $r1, $r2;
        org.objectweb.asm.ByteVector r0;
        byte $b3, $b6, $b7;
        int $i0, $i1, i2, i4, $i5, i8, i9, i10, i11;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        i8 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i8 + 3;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(3);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        i9 = i8 + 1;

        $b3 = (byte) i2;

        $r2[i8] = $b3;

        i10 = i9 + 1;

        $i5 = i4 >>> 8;

        $b6 = (byte) $i5;

        $r2[i9] = $b6;

        i11 = i10 + 1;

        $b7 = (byte) i4;

        $r2[i10] = $b7;

        r0.<org.objectweb.asm.ByteVector: int length> = i11;

        return r0;
    }

    public org.objectweb.asm.ByteVector putInt(int)
    {
        byte[] $r1, $r2;
        byte $b4, $b6, $b8, $b9;
        int $i0, $i1, i2, $i3, $i5, $i7, i10, i11, i12, i13, i14;
        org.objectweb.asm.ByteVector r0;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        i10 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i10 + 4;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(4);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        i11 = i10 + 1;

        $i3 = i2 >>> 24;

        $b4 = (byte) $i3;

        $r2[i10] = $b4;

        i12 = i11 + 1;

        $i5 = i2 >>> 16;

        $b6 = (byte) $i5;

        $r2[i11] = $b6;

        i13 = i12 + 1;

        $i7 = i2 >>> 8;

        $b8 = (byte) $i7;

        $r2[i12] = $b8;

        i14 = i13 + 1;

        $b9 = (byte) i2;

        $r2[i13] = $b9;

        r0.<org.objectweb.asm.ByteVector: int length> = i14;

        return r0;
    }

    public org.objectweb.asm.ByteVector putLong(long)
    {
        byte[] $r1, $r2;
        byte $b5, $b7, $b9, $b10, $b12, $b14, $b16, $b17;
        long l2, $l3;
        int $i0, $i1, $i4, $i6, $i8, $i11, $i13, $i15, $i18, $i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        org.objectweb.asm.ByteVector r0;

        r0 := @this: org.objectweb.asm.ByteVector;

        l2 := @parameter0: long;

        i20 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i20 + 8;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(8);

     label1:
        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $l3 = l2 >>> 32;

        $i18 = (int) $l3;

        i21 = i20 + 1;

        $i4 = $i18 >>> 24;

        $b5 = (byte) $i4;

        $r2[i20] = $b5;

        i22 = i21 + 1;

        $i6 = $i18 >>> 16;

        $b7 = (byte) $i6;

        $r2[i21] = $b7;

        i23 = i22 + 1;

        $i8 = $i18 >>> 8;

        $b9 = (byte) $i8;

        $r2[i22] = $b9;

        i24 = i23 + 1;

        $b10 = (byte) $i18;

        $r2[i23] = $b10;

        $i19 = (int) l2;

        i25 = i24 + 1;

        $i11 = $i19 >>> 24;

        $b12 = (byte) $i11;

        $r2[i24] = $b12;

        i26 = i25 + 1;

        $i13 = $i19 >>> 16;

        $b14 = (byte) $i13;

        $r2[i25] = $b14;

        i27 = i26 + 1;

        $i15 = $i19 >>> 8;

        $b16 = (byte) $i15;

        $r2[i26] = $b16;

        i28 = i27 + 1;

        $b17 = (byte) $i19;

        $r2[i27] = $b17;

        r0.<org.objectweb.asm.ByteVector: int length> = i28;

        return r0;
    }

    public org.objectweb.asm.ByteVector putUTF8(java.lang.String)
    {
        byte[] $r2, $r3, r4;
        byte $b5, $b6, $b9, $b12, $b22, $b25, $b29, $b33, $b36, $b38, $b42;
        short $s24, $s35;
        java.lang.String r0;
        org.objectweb.asm.ByteVector r1;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i26, $i27, $i28, $i30, $i31, $i32, $i37, $i39, $i41, $i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64;
        char $c7, $c18, $c23, $c34, $c40;

        r1 := @this: org.objectweb.asm.ByteVector;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i44 = r1.<org.objectweb.asm.ByteVector: int length>;

        $i1 = i44 + 2;

        $i3 = $i1 + $i0;

        $r2 = r1.<org.objectweb.asm.ByteVector: byte[] data>;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label01;

        $i43 = 2 + $i0;

        specialinvoke r1.<org.objectweb.asm.ByteVector: void enlarge(int)>($i43);

     label01:
        $r3 = r1.<org.objectweb.asm.ByteVector: byte[] data>;

        r4 = $r3;

        i45 = i44 + 1;

        $i4 = $i0 >>> 8;

        $b5 = (byte) $i4;

        $r3[i44] = $b5;

        i46 = i45 + 1;

        $b6 = (byte) $i0;

        $r3[i45] = $b6;

        i47 = 0;

     label02:
        if i47 >= $i0 goto label16;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i47);

        $i54 = (int) $c7;

        if $i54 < 1 goto label03;

        $i55 = (int) $c7;

        if $i55 > 127 goto label03;

        $i41 = i46;

        i46 = i46 + 1;

        $b42 = (byte) $c7;

        $r3[$i41] = $b42;

        goto label15;

     label03:
        i48 = i47;

        i49 = i47;

     label04:
        if i49 >= $i0 goto label08;

        $c40 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i49);

        $i56 = (int) $c40;

        if $i56 < 1 goto label05;

        $i57 = (int) $c40;

        if $i57 > 127 goto label05;

        i48 = i48 + 1;

        goto label07;

     label05:
        $i58 = (int) $c40;

        if $i58 <= 2047 goto label06;

        i48 = i48 + 3;

        goto label07;

     label06:
        i48 = i48 + 2;

     label07:
        i49 = i49 + 1;

        goto label04;

     label08:
        $i10 = r1.<org.objectweb.asm.ByteVector: int length>;

        $i8 = i48 >>> 8;

        $b9 = (byte) $i8;

        $r3[$i10] = $b9;

        $i11 = r1.<org.objectweb.asm.ByteVector: int length>;

        $i13 = $i11 + 1;

        $b12 = (byte) i48;

        $r3[$i13] = $b12;

        $i14 = r1.<org.objectweb.asm.ByteVector: int length>;

        $i15 = $i14 + 2;

        $i17 = $i15 + i48;

        $i16 = lengthof $r3;

        if $i17 <= $i16 goto label09;

        r1.<org.objectweb.asm.ByteVector: int length> = i46;

        $i39 = 2 + i48;

        specialinvoke r1.<org.objectweb.asm.ByteVector: void enlarge(int)>($i39);

        r4 = r1.<org.objectweb.asm.ByteVector: byte[] data>;

     label09:
        i50 = i47;

     label10:
        if i50 >= $i0 goto label14;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i50);

        $i59 = (int) $c18;

        if $i59 < 1 goto label11;

        $i60 = (int) $c18;

        if $i60 > 127 goto label11;

        $i37 = i46;

        i46 = i46 + 1;

        $b38 = (byte) $c18;

        r4[$i37] = $b38;

        goto label13;

     label11:
        $i61 = (int) $c18;

        if $i61 <= 2047 goto label12;

        i51 = i46 + 1;

        $i62 = (int) $c18;

        $i26 = $i62 >> 12;

        $i27 = $i26 & 15;

        $i28 = 224 | $i27;

        $b29 = (byte) $i28;

        r4[i46] = $b29;

        i52 = i51 + 1;

        $i63 = (int) $c18;

        $i30 = $i63 >> 6;

        $i31 = $i30 & 63;

        $i32 = 128 | $i31;

        $b33 = (byte) $i32;

        r4[i51] = $b33;

        i46 = i52 + 1;

        $c34 = $c18 & 63;

        $s35 = 128 | $c34;

        $b36 = (byte) $s35;

        r4[i52] = $b36;

        goto label13;

     label12:
        i53 = i46 + 1;

        $i64 = (int) $c18;

        $i19 = $i64 >> 6;

        $i20 = $i19 & 31;

        $i21 = 192 | $i20;

        $b22 = (byte) $i21;

        r4[i46] = $b22;

        i46 = i53 + 1;

        $c23 = $c18 & 63;

        $s24 = 128 | $c23;

        $b25 = (byte) $s24;

        r4[i53] = $b25;

     label13:
        i50 = i50 + 1;

        goto label10;

     label14:
        goto label16;

     label15:
        i47 = i47 + 1;

        goto label02;

     label16:
        r1.<org.objectweb.asm.ByteVector: int length> = i46;

        return r1;
    }

    public org.objectweb.asm.ByteVector putByteArray(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        org.objectweb.asm.ByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;

        r0 := @this: org.objectweb.asm.ByteVector;

        r2 := @parameter0: byte[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i3 = $i1 + i0;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label1;

        specialinvoke r0.<org.objectweb.asm.ByteVector: void enlarge(int)>(i0);

     label1:
        if r2 == null goto label2;

        $r3 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i7 = r0.<org.objectweb.asm.ByteVector: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i6, $r3, $i7, i0);

     label2:
        $i4 = r0.<org.objectweb.asm.ByteVector: int length>;

        $i5 = $i4 + i0;

        r0.<org.objectweb.asm.ByteVector: int length> = $i5;

        return r0;
    }

    private void enlarge(int)
    {
        byte[] $r1, $r2, $r3;
        org.objectweb.asm.ByteVector r0;
        int $i0, i1, i2, $i3, i4, $i5, $i6;

        r0 := @this: org.objectweb.asm.ByteVector;

        i2 := @parameter0: int;

        $r1 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i0 = lengthof $r1;

        i1 = 2 * $i0;

        $i3 = r0.<org.objectweb.asm.ByteVector: int length>;

        i4 = $i3 + i2;

        if i1 <= i4 goto label1;

        $i6 = i1;

        goto label2;

     label1:
        $i6 = i4;

     label2:
        $r3 = newarray (byte)[$i6];

        $r2 = r0.<org.objectweb.asm.ByteVector: byte[] data>;

        $i5 = r0.<org.objectweb.asm.ByteVector: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i5);

        r0.<org.objectweb.asm.ByteVector: byte[] data> = $r3;

        return;
    }
}
