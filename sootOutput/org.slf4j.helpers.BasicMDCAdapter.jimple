public class org.slf4j.helpers.BasicMDCAdapter extends java.lang.Object implements org.slf4j.spi.MDCAdapter
{
    private java.lang.InheritableThreadLocal inheritableThreadLocal;
    static boolean IS_JDK14;

    public void <init>()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.InheritableThreadLocal;

        specialinvoke $r1.<java.lang.InheritableThreadLocal: void <init>()>();

        r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal> = $r1;

        return;
    }

    static boolean isJDK14()
    {
        java.lang.SecurityException $r1;
        java.lang.String $r0;
        boolean $z0;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("1.4");

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void put(java.lang.String, java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r1;
        java.util.HashMap $r5;
        java.lang.IllegalArgumentException $r8;
        java.util.Map $r6, r9;
        java.lang.Object $r3;
        java.lang.String r0, r4;
        java.lang.InheritableThreadLocal $r2, $r7;

        r1 := @this: org.slf4j.helpers.BasicMDCAdapter;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key cannot be null");

        throw $r8;

     label1:
        $r2 = r1.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r3 = virtualinvoke $r2.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r9 = (java.util.Map) $r3;

        if r9 != null goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r5);

        r9 = $r6;

        $r7 = r1.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r7.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>($r6);

     label2:
        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r4);

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.lang.Object $r2, $r5;
        java.lang.InheritableThreadLocal $r1;
        java.lang.String r4, $r6;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        if r4 == null goto label1;

        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = (java.lang.String) $r5;

        return $r6;

     label1:
        return null;
    }

    public void remove(java.lang.String)
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.lang.Object $r2;
        java.lang.InheritableThreadLocal $r1;
        java.lang.String r4;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

     label1:
        return;
    }

    public void clear()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.lang.Object $r2;
        java.lang.InheritableThreadLocal $r1, $r4, $r5;
        boolean $z0;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label2;

        interfaceinvoke r3.<java.util.Map: void clear()>();

        $z0 = staticinvoke <org.slf4j.helpers.BasicMDCAdapter: boolean isJDK14()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r5.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>(null);

        goto label2;

     label1:
        $r4 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r4.<java.lang.InheritableThreadLocal: void remove()>();

     label2:
        return;
    }

    public java.util.Set getKeys()
    {
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3;
        java.util.Set $r4;
        java.lang.Object $r2;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label1;

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set keySet()>();

        return $r4;

     label1:
        return null;
    }

    public java.util.Map getCopyOfContextMap()
    {
        java.lang.Throwable $r6;
        org.slf4j.helpers.BasicMDCAdapter r0;
        java.util.Map r3, $r5;
        java.lang.Object $r2;
        java.util.HashMap $r4;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.slf4j.helpers.BasicMDCAdapter;

        $r1 = r0.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        if r3 == null goto label6;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        entermonitor r3;

     label1:
        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>(r3);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor r3;

     label4:
        throw $r6;

     label5:
        return $r5;

     label6:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setContextMap(java.util.Map)
    {
        org.slf4j.helpers.BasicMDCAdapter r3;
        java.util.Map r1, $r2;
        java.util.HashMap $r0;
        java.lang.InheritableThreadLocal $r4;

        r3 := @this: org.slf4j.helpers.BasicMDCAdapter;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        $r4 = r3.<org.slf4j.helpers.BasicMDCAdapter: java.lang.InheritableThreadLocal inheritableThreadLocal>;

        virtualinvoke $r4.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>($r2);

        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <org.slf4j.helpers.BasicMDCAdapter: boolean isJDK14()>();

        <org.slf4j.helpers.BasicMDCAdapter: boolean IS_JDK14> = $z0;

        return;
    }
}
