abstract class com.sun.lwuit.layouts.GroupLayout$Spring extends java.lang.Object
{
    private int size;
    private int min;
    private int max;
    private int pref;
    private com.sun.lwuit.layouts.GroupLayout$Spring parent;
    private int alignment;
    final com.sun.lwuit.layouts.GroupLayout this$0;

    void <init>(com.sun.lwuit.layouts.GroupLayout)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        com.sun.lwuit.layouts.GroupLayout r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int max> = -2147483648;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int pref> = -2147483648;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int min> = -2147483648;

        return;
    }

    abstract int calculateMinimumSize(int);

    abstract int calculatePreferredSize(int);

    abstract int calculateMaximumSize(int);

    void setParent(com.sun.lwuit.layouts.GroupLayout$Spring)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0, r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout$Spring;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring parent> = r1;

        return;
    }

    com.sun.lwuit.layouts.GroupLayout$Spring getParent()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0, $r1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: com.sun.lwuit.layouts.GroupLayout$Spring parent>;

        return $r1;
    }

    void setAlignment(int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int i0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int alignment> = i0;

        return;
    }

    int getAlignment()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int alignment>;

        return $i0;
    }

    final int getMinimumSize(int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i0, $i1, i2, $i3, $i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int min>;

        if $i0 != -2147483648 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int calculateMinimumSize(int)>(i2);

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int constrain(int)>($i3);

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int min> = $i4;

     label1:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int min>;

        return $i1;
    }

    final int getPreferredSize(int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i0, $i1, i2, $i3, $i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int pref>;

        if $i0 != -2147483648 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int calculatePreferredSize(int)>(i2);

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int constrain(int)>($i3);

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int pref> = $i4;

     label1:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int pref>;

        return $i1;
    }

    final int getMaximumSize(int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i0, $i1, i2, $i3, $i4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i2 := @parameter0: int;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int max>;

        if $i0 != -2147483648 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int calculateMaximumSize(int)>(i2);

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int constrain(int)>($i3);

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int max> = $i4;

     label1:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int max>;

        return $i1;
    }

    void unset()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int max> = -2147483648;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int pref> = -2147483648;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int min> = -2147483648;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int size> = -2147483648;

        return;
    }

    void setSize(int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int i0, i1, i2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int size> = i0;

        if i0 != -2147483648 goto label1;

        virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void unset()>();

     label1:
        return;
    }

    int getSize()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int size>;

        return $i0;
    }

    int constrain(int)
    {
        int i0, $i1;
        com.sun.lwuit.layouts.GroupLayout$Spring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i0, 32767);

        return $i1;
    }

    int getBaseline()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int $i1;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        $i1 = (int) -1;

        return $i1;
    }

    int getBaselineResizeBehavior()
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        return 4;
    }

    final boolean isResizable(int)
    {
        com.sun.lwuit.layouts.GroupLayout$Spring r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$Spring;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMinimumSize(int)>(i0);

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(i0);

        if $i1 != $i2 goto label1;

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: int getMaximumSize(int)>(i0);

        if $i2 == $i3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    abstract boolean willHaveZeroSize(boolean);
}
