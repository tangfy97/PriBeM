public final class org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData extends org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData implements org.waveprotocol.wave.model.wave.data.ObservableWaveletData
{
    public static final org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory FACTORY;
    private final org.waveprotocol.wave.model.wave.data.ReadableWaveletData data;

    private void <init>(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)
    {
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ForwardingReadableWaveletData: void <init>()>();

        r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData data> = r1;

        return;
    }

    protected org.waveprotocol.wave.model.wave.data.ReadableWaveletData delegate()
    {
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData data>;

        return $r1;
    }

    public org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData getDocument(java.lang.String)
    {
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r3;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r4;
        java.lang.String r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData $r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData;

        $r3 = r1.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableWaveletData data>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)>(r2);

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData: void <init>(org.waveprotocol.wave.model.wave.data.ReadableBlipData)>($r4);

        return $r0;
    }

    public org.waveprotocol.wave.model.wave.data.BlipData createDocument(java.lang.String, org.waveprotocol.wave.model.wave.ParticipantId, java.util.Collection, org.waveprotocol.wave.model.document.operation.DocInitialization, long, long)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r4;
        org.waveprotocol.wave.model.document.operation.DocInitialization r5;
        long l0, l1;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        java.lang.String r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        r4 := @parameter2: java.util.Collection;

        r5 := @parameter3: org.waveprotocol.wave.model.document.operation.DocInitialization;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support createBlip");

        throw $r0;
    }

    public boolean addParticipant(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support addParticipant");

        throw $r0;
    }

    public boolean addParticipant(org.waveprotocol.wave.model.wave.ParticipantId, int)
    {
        java.lang.UnsupportedOperationException $r0;
        int i0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support addParticipant");

        throw $r0;
    }

    public boolean removeParticipant(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support removeParticipant");

        throw $r0;
    }

    public long setVersion(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support setVersion");

        throw $r0;
    }

    public org.waveprotocol.wave.model.version.HashedVersion setHashedVersion(org.waveprotocol.wave.model.version.HashedVersion)
    {
        org.waveprotocol.wave.model.version.HashedVersion r2;
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r2 := @parameter0: org.waveprotocol.wave.model.version.HashedVersion;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support setHashedVersion");

        throw $r0;
    }

    public long setLastModifiedTime(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r1;

        r1 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("UnmodifiableWaveletData doesn\'t support setLastModifiedTime");

        throw $r0;
    }

    public void addListener(org.waveprotocol.wave.model.wave.data.WaveletDataListener)
    {
        org.waveprotocol.wave.model.wave.data.WaveletDataListener r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletDataListener;

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.wave.data.WaveletDataListener)
    {
        org.waveprotocol.wave.model.wave.data.WaveletDataListener r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletDataListener;

        return;
    }

    public volatile org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData $r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData getDocument(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.waveprotocol.wave.model.wave.data.BlipData getDocument(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData $r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableBlipData getDocument(java.lang.String)>(r1);

        return $r2;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.wave.data.WaveletDataListener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.data.WaveletDataListener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: void removeListener(org.waveprotocol.wave.model.wave.data.WaveletDataListener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.wave.data.WaveletDataListener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.data.WaveletDataListener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: void addListener(org.waveprotocol.wave.model.wave.data.WaveletDataListener)>($r2);

        return;
    }

    void <init>(org.waveprotocol.wave.model.wave.data.ReadableWaveletData, org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$1)
    {
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r1;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$1 r2;
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$1;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: void <init>(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory $r0;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory: void <init>()>();

        <org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData: org.waveprotocol.wave.model.wave.data.impl.UnmodifiableWaveletData$Factory FACTORY> = $r0;

        return;
    }
}
