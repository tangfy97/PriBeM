public class org.apache.tika.parser.image.ImageParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private static final org.apache.tika.mime.MediaType CANONICAL_BMP_TYPE;
    private static final org.apache.tika.mime.MediaType JAVA_BMP_TYPE;
    private static final java.util.Set SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.tika.parser.image.ImageParser r0;

        r0 := @this: org.apache.tika.parser.image.ImageParser;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.image.ImageParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.image.ImageParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.image.ImageParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        javax.imageio.metadata.IIOMetadata $r20;
        org.apache.tika.metadata.Metadata r0;
        org.apache.tika.metadata.Property $r6, $r7, $r8, $r14, $r16;
        boolean $z0, $z1, $z2, $z3;
        javax.imageio.stream.ImageInputStream $r13;
        org.apache.tika.io.CloseShieldInputStream $r11;
        org.apache.tika.parser.ParseContext r32;
        java.lang.StringBuilder $r25, $r26, $r27;
        java.lang.Throwable $r29, $r30;
        javax.imageio.IIOException $r22;
        org.apache.tika.mime.MediaType $r3, $r21;
        org.apache.tika.exception.TikaException $r24;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r4, $r15, $r17, $r18, $r19, $r23, $r28, r33;
        org.xml.sax.ContentHandler r2;
        javax.imageio.ImageReader r10;
        java.util.Iterator $r5;
        org.apache.tika.sax.XHTMLContentHandler $r34;
        org.apache.tika.parser.image.ImageParser r31;
        java.lang.Object $r9;
        java.io.InputStream r12;

        r31 := @this: org.apache.tika.parser.image.ImageParser;

        r12 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        r0 := @parameter2: org.apache.tika.metadata.Metadata;

        r32 := @parameter3: org.apache.tika.parser.ParseContext;

        $r1 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        r33 = $r1;

        if $r1 == null goto label14;

        $r3 = <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType CANONICAL_BMP_TYPE>;

        $r4 = virtualinvoke $r3.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        $r21 = <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType JAVA_BMP_TYPE>;

        r33 = virtualinvoke $r21.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

     label01:
        $r5 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageReadersByMIMEType(java.lang.String)>(r33);

        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r9 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (javax.imageio.ImageReader) $r9;

     label02:
        $r11 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r11.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r12);

        $r13 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r11);

     label03:
        virtualinvoke r10.<javax.imageio.ImageReader: void setInput(java.lang.Object)>($r13);

        $r14 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_WIDTH>;

        $i0 = virtualinvoke r10.<javax.imageio.ImageReader: int getWidth(int)>(0);

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r14, $r15);

        $r16 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_LENGTH>;

        $i1 = virtualinvoke r10.<javax.imageio.ImageReader: int getHeight(int)>(0);

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r16, $r17);

        $i2 = virtualinvoke r10.<javax.imageio.ImageReader: int getHeight(int)>(0);

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("height", $r18);

        $i3 = virtualinvoke r10.<javax.imageio.ImageReader: int getWidth(int)>(0);

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("width", $r19);

        $r20 = virtualinvoke r10.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0);

        staticinvoke <org.apache.tika.parser.image.ImageParser: void loadMetadata(javax.imageio.metadata.IIOMetadata,org.apache.tika.metadata.Metadata)>($r20, r0);

     label04:
        interfaceinvoke $r13.<javax.imageio.stream.ImageInputStream: void close()>();

        goto label07;

     label05:
        $r30 := @caughtexception;

     label06:
        interfaceinvoke $r13.<javax.imageio.stream.ImageInputStream: void close()>();

        throw $r30;

     label07:
        virtualinvoke r10.<javax.imageio.ImageReader: void dispose()>();

        goto label10;

     label08:
        $r29 := @caughtexception;

     label09:
        virtualinvoke r10.<javax.imageio.ImageReader: void dispose()>();

        throw $r29;

     label10:
        $r6 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property COMMENTS>;

        staticinvoke <org.apache.tika.parser.image.ImageParser: void setIfPresent(org.apache.tika.metadata.Metadata,java.lang.String,org.apache.tika.metadata.Property)>(r0, "CommentExtensions CommentExtension", $r6);

        $r7 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property COMMENTS>;

        staticinvoke <org.apache.tika.parser.image.ImageParser: void setIfPresent(org.apache.tika.metadata.Metadata,java.lang.String,org.apache.tika.metadata.Property)>(r0, "markerSequence com", $r7);

        $r8 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property BITS_PER_SAMPLE>;

        staticinvoke <org.apache.tika.parser.image.ImageParser: void setIfPresent(org.apache.tika.metadata.Metadata,java.lang.String,org.apache.tika.metadata.Property)>(r0, "Data BitsPerSample", $r8);

     label11:
        goto label14;

     label12:
        $r22 := @caughtexception;

        $r23 = virtualinvoke $r22.<javax.imageio.IIOException: java.lang.String getMessage()>();

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("Unexpected block type 0!");

        if $z2 == 0 goto label13;

        $z3 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>("image/gif");

        if $z3 != 0 goto label14;

     label13:
        $r24 = new org.apache.tika.exception.TikaException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parse error");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>($r28, $r22);

        throw $r24;

     label14:
        $r34 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r34.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r2, r0);

        virtualinvoke $r34.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r34.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch javax.imageio.IIOException from label01 to label11 with label12;
    }

    private static void setIfPresent(org.apache.tika.metadata.Metadata, java.lang.String, java.lang.String)
    {
        org.apache.tika.metadata.Metadata r0;
        java.lang.String r1, $r2, r3, $r4;

        r0 := @parameter0: org.apache.tika.metadata.Metadata;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>(r3, $r4);

     label1:
        return;
    }

    private static void setIfPresent(org.apache.tika.metadata.Metadata, java.lang.String, org.apache.tika.metadata.Property)
    {
        org.apache.tika.metadata.Metadata r0;
        org.apache.tika.metadata.Property r4;
        int $i0;
        java.lang.String r1, $r2, $r3, r5;
        boolean $z0;

        r0 := @parameter0: org.apache.tika.metadata.Metadata;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.tika.metadata.Property;

        $r2 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>(r1);

        r5 = $r3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(" ");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(32);

        r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>(r4, r5);

     label2:
        return;
    }

    private static void loadMetadata(javax.imageio.metadata.IIOMetadata, org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.metadata.Metadata r3;
        org.w3c.dom.Node $r4;
        javax.imageio.metadata.IIOMetadata r0;
        int i0, i1;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @parameter0: javax.imageio.metadata.IIOMetadata;

        r3 := @parameter1: org.apache.tika.metadata.Metadata;

        $r1 = virtualinvoke r0.<javax.imageio.metadata.IIOMetadata: java.lang.String[] getMetadataFormatNames()>();

        if $r1 != null goto label1;

        return;

     label1:
        i0 = lengthof $r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $r4 = virtualinvoke r0.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>(r2);

        staticinvoke <org.apache.tika.parser.image.ImageParser: void loadNode(org.apache.tika.metadata.Metadata,org.w3c.dom.Node,java.lang.String,boolean)>(r3, $r4, "", 0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private static void loadNode(org.apache.tika.metadata.Metadata, org.w3c.dom.Node, java.lang.String, boolean)
    {
        org.apache.tika.metadata.Metadata r1;
        org.w3c.dom.Node r0, $r4, $r8, r20;
        int $i0, $i1, i2;
        org.w3c.dom.NamedNodeMap $r19;
        java.lang.String $r3, $r5, $r6, $r7, $r9, $r10, $r13, r18;
        boolean z0;
        java.lang.StringBuilder $r2, $r11, $r12, $r14, $r15, $r16, $r17;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r0 := @parameter1: org.w3c.dom.Node;

        r18 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label2;

        $i1 = virtualinvoke r18.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r13 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r19 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        if $r19 == null goto label7;

        $i0 = interfaceinvoke $r19.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if $i0 != 1 goto label3;

        $r8 = interfaceinvoke $r19.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(0);

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r10 = staticinvoke <org.apache.tika.parser.image.ImageParser: java.lang.String normalize(java.lang.String)>($r9);

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>(r18, $r10);

        goto label7;

     label3:
        if $i0 <= 1 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label4:
        if i2 >= $i0 goto label6;

        if i2 <= 0 goto label5;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $r4 = interfaceinvoke $r19.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i2);

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = interfaceinvoke $r4.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r7 = staticinvoke <org.apache.tika.parser.image.ImageParser: java.lang.String normalize(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i2 = i2 + 1;

        goto label4;

     label6:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>(r18, $r3);

     label7:
        r20 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label8:
        if r20 == null goto label9;

        staticinvoke <org.apache.tika.parser.image.ImageParser: void loadNode(org.apache.tika.metadata.Metadata,org.w3c.dom.Node,java.lang.String,boolean)>(r1, r20, r18, 1);

        r20 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label8;

     label9:
        return;
    }

    private static java.lang.String normalize(java.lang.String)
    {
        java.lang.Boolean $r0, $r2, $r4, $r6;
        java.lang.String $r1, $r3, $r5, $r7, r8, r9;
        boolean $z0, $z1;

        r8 := @parameter0: java.lang.String;

        if r8 == null goto label1;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        r9 = "";

     label2:
        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = virtualinvoke $r0.<java.lang.Boolean: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);

        if $z0 == 0 goto label3;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r7 = virtualinvoke $r6.<java.lang.Boolean: java.lang.String toString()>();

        return $r7;

     label3:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r3 = virtualinvoke $r2.<java.lang.Boolean: java.lang.String toString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);

        if $z1 == 0 goto label4;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r5 = virtualinvoke $r4.<java.lang.Boolean: java.lang.String toString()>();

        return $r5;

     label4:
        return r9;
    }

    static void <clinit>()
    {
        java.util.Set $r12;
        org.apache.tika.mime.MediaType $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.util.HashSet $r2;
        java.util.List $r11;
        org.apache.tika.mime.MediaType[] $r3;

        <org.apache.tika.parser.image.ImageParser: long serialVersionUID> = 7852529269245520335L;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("x-ms-bmp");

        <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType CANONICAL_BMP_TYPE> = $r0;

        $r1 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("bmp");

        <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType JAVA_BMP_TYPE> = $r1;

        $r2 = new java.util.HashSet;

        $r3 = newarray (org.apache.tika.mime.MediaType)[7];

        $r4 = <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType CANONICAL_BMP_TYPE>;

        $r3[0] = $r4;

        $r5 = <org.apache.tika.parser.image.ImageParser: org.apache.tika.mime.MediaType JAVA_BMP_TYPE>;

        $r3[1] = $r5;

        $r6 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("gif");

        $r3[2] = $r6;

        $r7 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("png");

        $r3[3] = $r7;

        $r8 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("vnd.wap.wbmp");

        $r3[4] = $r8;

        $r9 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("x-icon");

        $r3[5] = $r9;

        $r10 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType image(java.lang.String)>("x-xcf");

        $r3[6] = $r10;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r11);

        $r12 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        <org.apache.tika.parser.image.ImageParser: java.util.Set SUPPORTED_TYPES> = $r12;

        return;
    }
}
