public class org.apache.batik.css.dom.CSSOMValue extends java.lang.Object implements org.w3c.dom.css.CSSPrimitiveValue, org.w3c.dom.css.CSSValueList, org.w3c.dom.css.Counter, org.w3c.dom.css.Rect, org.w3c.dom.css.RGBColor
{
    protected org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider;
    protected org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler;
    protected org.apache.batik.css.dom.CSSOMValue$LeftComponent leftComponent;
    protected org.apache.batik.css.dom.CSSOMValue$RightComponent rightComponent;
    protected org.apache.batik.css.dom.CSSOMValue$BottomComponent bottomComponent;
    protected org.apache.batik.css.dom.CSSOMValue$TopComponent topComponent;
    protected org.apache.batik.css.dom.CSSOMValue$RedComponent redComponent;
    protected org.apache.batik.css.dom.CSSOMValue$GreenComponent greenComponent;
    protected org.apache.batik.css.dom.CSSOMValue$BlueComponent blueComponent;
    protected org.w3c.dom.css.CSSValue[] items;

    public void <init>(org.apache.batik.css.dom.CSSOMValue$ValueProvider)
    {
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMValue$ValueProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider> = r1;

        return;
    }

    public void setModificationHandler(org.apache.batik.css.dom.CSSOMValue$ModificationHandler)
    {
        org.apache.batik.css.dom.CSSOMValue$ModificationHandler r1;
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMValue$ModificationHandler;

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler> = r1;

        return;
    }

    public java.lang.String getCssText()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        java.lang.String $r3;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        return $r3;
    }

    public void setCssText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMValue$ModificationHandler $r1, $r3;
        java.lang.String r2;
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMValue$ModificationHandler: void textChanged(java.lang.String)>(r2);

        return;
    }

    public short getCssValueType()
    {
        short $s0;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $s0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        return $s0;
    }

    public short getPrimitiveType()
    {
        short $s0;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $s0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        return $s0;
    }

    public void setFloatValue(short, float) throws org.w3c.dom.DOMException
    {
        short s0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.css.dom.CSSOMValue$ModificationHandler $r1, $r2;
        float f0;
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        s0 := @parameter0: short;

        f0 := @parameter1: float;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        interfaceinvoke $r2.<org.apache.batik.css.dom.CSSOMValue$ModificationHandler: void floatValueChanged(short,float)>(s0, f0);

        return;
    }

    public float getFloatValue(short) throws org.w3c.dom.DOMException
    {
        short s0;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        float $f0;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        s0 := @parameter0: short;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $f0 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float convertFloatValue(short,org.apache.batik.css.engine.value.Value)>(s0, $r2);

        return $f0;
    }

    public static float convertFloatValue(short, org.apache.batik.css.engine.value.Value)
    {
        short s0, $s1;
        org.w3c.dom.DOMException $r2;
        int $i2, $i3, $i4;
        org.apache.batik.css.engine.value.Value r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        s0 := @parameter0: short;

        r0 := @parameter1: org.apache.batik.css.engine.value.Value;

        $i2 = (int) s0;

        tableswitch($i2)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label02;
            case 7: goto label03;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label06;
            case 11: goto label07;
            case 12: goto label08;
            case 13: goto label09;
            case 14: goto label10;
            case 15: goto label11;
            case 16: goto label12;
            case 17: goto label13;
            case 18: goto label01;
            default: goto label14;
        };

     label01:
        $s1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i3 = (int) $s1;

        $i4 = (int) s0;

        if $i3 != $i4 goto label14;

        $f12 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f12;

     label02:
        $f11 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toCentimeters(org.apache.batik.css.engine.value.Value)>(r0);

        return $f11;

     label03:
        $f10 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toMillimeters(org.apache.batik.css.engine.value.Value)>(r0);

        return $f10;

     label04:
        $f9 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toInches(org.apache.batik.css.engine.value.Value)>(r0);

        return $f9;

     label05:
        $f8 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toPoints(org.apache.batik.css.engine.value.Value)>(r0);

        return $f8;

     label06:
        $f7 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toPicas(org.apache.batik.css.engine.value.Value)>(r0);

        return $f7;

     label07:
        $f6 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toDegrees(org.apache.batik.css.engine.value.Value)>(r0);

        return $f6;

     label08:
        $f5 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toRadians(org.apache.batik.css.engine.value.Value)>(r0);

        return $f5;

     label09:
        $f4 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toGradians(org.apache.batik.css.engine.value.Value)>(r0);

        return $f4;

     label10:
        $f3 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toMilliseconds(org.apache.batik.css.engine.value.Value)>(r0);

        return $f3;

     label11:
        $f2 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toSeconds(org.apache.batik.css.engine.value.Value)>(r0);

        return $f2;

     label12:
        $f1 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float toHertz(org.apache.batik.css.engine.value.Value)>(r0);

        return $f1;

     label13:
        $f0 = staticinvoke <org.apache.batik.css.dom.CSSOMValue: float tokHertz(org.apache.batik.css.engine.value.Value)>(r0);

        return $f0;

     label14:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toCentimeters(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label5;
            default: goto label6;
        };

     label1:
        $f10 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f10;

     label2:
        $f8 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f9 = $f8 / 10.0F;

        return $f9;

     label3:
        $f6 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f7 = $f6 * 2.54F;

        return $f7;

     label4:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f4 = $f3 * 2.54F;

        $f5 = $f4 / 72.0F;

        return $f5;

     label5:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 2.54F;

        $f2 = $f1 / 6.0F;

        return $f2;

     label6:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toInches(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label5;
            default: goto label6;
        };

     label1:
        $f7 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f8 = $f7 / 2.54F;

        return $f8;

     label2:
        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f6 = $f5 / 25.4F;

        return $f6;

     label3:
        $f4 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f4;

     label4:
        $f2 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f3 = $f2 / 72.0F;

        return $f3;

     label5:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 / 6.0F;

        return $f1;

     label6:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toMillimeters(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label5;
            default: goto label6;
        };

     label1:
        $f9 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f10 = $f9 * 10.0F;

        return $f10;

     label2:
        $f8 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f8;

     label3:
        $f6 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f7 = $f6 * 25.4F;

        return $f7;

     label4:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f4 = $f3 * 25.4F;

        $f5 = $f4 / 72.0F;

        return $f5;

     label5:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 25.4F;

        $f2 = $f1 / 6.0F;

        return $f2;

     label6:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toPoints(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label5;
            default: goto label6;
        };

     label1:
        $f8 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f9 = $f8 * 72.0F;

        $f10 = $f9 / 2.54F;

        return $f10;

     label2:
        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f6 = $f5 * 72.0F;

        $f7 = $f6 / 25.4F;

        return $f7;

     label3:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f4 = $f3 * 72.0F;

        return $f4;

     label4:
        $f2 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f2;

     label5:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 12.0F;

        return $f1;

     label6:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toPicas(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            case 10: goto label5;
            default: goto label6;
        };

     label1:
        $f8 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f9 = $f8 * 6.0F;

        $f10 = $f9 / 2.54F;

        return $f10;

     label2:
        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f6 = $f5 * 6.0F;

        $f7 = $f6 / 25.4F;

        return $f7;

     label3:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f4 = $f3 * 6.0F;

        return $f4;

     label4:
        $f1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f2 = $f1 / 12.0F;

        return $f2;

     label5:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f0;

     label6:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toDegrees(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label3;
            default: goto label4;
        };

     label1:
        $f5 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f5;

     label2:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f4 = (float) $d1;

        return $f4;

     label3:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 9.0F;

        $f2 = $f1 / 5.0F;

        return $f2;

     label4:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toRadians(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        double $d0, $d1;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label3;
            default: goto label4;
        };

     label1:
        $f4 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f5 = $f4 * 5.0F;

        $f6 = $f5 / 9.0F;

        return $f6;

     label2:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f3;

     label3:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 100.0F;

        $d0 = (double) $f1;

        $d1 = $d0 / 3.141592653589793;

        $f2 = (float) $d1;

        return $f2;

     label4:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toGradians(org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.value.Value r0;
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        tableswitch($i1)
        {
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label3;
            default: goto label4;
        };

     label1:
        $f3 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $d3 = (double) $f3;

        $d4 = $d3 * 3.141592653589793;

        $d5 = $d4 / 180.0;

        $f4 = (float) $d5;

        return $f4;

     label2:
        $f1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $d0 = (double) $f1;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 100.0;

        $f2 = (float) $d2;

        return $f2;

     label3:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f0;

     label4:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toMilliseconds(org.apache.batik.css.engine.value.Value)
    {
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2;
        org.apache.batik.css.engine.value.Value r0;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 14: goto label1;
            case 15: goto label2;
            default: goto label3;
        };

     label1:
        $f2 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f2;

     label2:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 * 1000.0F;

        return $f1;

     label3:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toSeconds(org.apache.batik.css.engine.value.Value)
    {
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2;
        org.apache.batik.css.engine.value.Value r0;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 14: goto label1;
            case 15: goto label2;
            default: goto label3;
        };

     label1:
        $f1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f2 = $f1 / 1000.0F;

        return $f2;

     label2:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f0;

     label3:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float toHertz(org.apache.batik.css.engine.value.Value)
    {
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2;
        org.apache.batik.css.engine.value.Value r0;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 16: goto label1;
            case 17: goto label2;
            default: goto label3;
        };

     label1:
        $f2 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f2;

     label2:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = $f0 / 1000.0F;

        return $f1;

     label3:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    protected static float tokHertz(org.apache.batik.css.engine.value.Value)
    {
        short $s0;
        org.w3c.dom.DOMException $r2;
        int $i1;
        float $f0, $f1, $f2;
        org.apache.batik.css.engine.value.Value r0;

        r0 := @parameter0: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 16: goto label1;
            case 17: goto label2;
            default: goto label3;
        };

     label1:
        $f1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f2 = $f1 * 1000.0F;

        return $f2;

     label2:
        $f0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        return $f0;

     label3:
        $r2 = new org.w3c.dom.DOMException;

        specialinvoke $r2.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(15, "");

        throw $r2;
    }

    public void setStringValue(short, java.lang.String) throws org.w3c.dom.DOMException
    {
        short s0;
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMValue$ModificationHandler $r1, $r3;
        java.lang.String r2;
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMValue$ModificationHandler: void stringValueChanged(short,java.lang.String)>(s0, r2);

        return;
    }

    public java.lang.String getStringValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        java.lang.String $r3;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getStringValue()>();

        return $r3;
    }

    public org.w3c.dom.css.Counter getCounterValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        return r0;
    }

    public org.w3c.dom.css.Rect getRectValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        return r0;
    }

    public org.w3c.dom.css.RGBColor getRGBColorValue() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        return r0;
    }

    public int getLength()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        int $i0;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $i0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: int getLength()>();

        return $i0;
    }

    public org.w3c.dom.css.CSSValue item(int)
    {
        org.w3c.dom.css.CSSValue $r14, r15;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1, $r9;
        int $i0, i1, $i2, $i3, $i4;
        org.w3c.dom.css.CSSValue[] $r3, $r4, $r6, $r7, $r8, $r11, r12, $r13;
        org.apache.batik.css.dom.CSSOMValue$ListComponent $r5;
        org.apache.batik.css.engine.value.Value $r2, $r10;
        org.apache.batik.css.dom.CSSOMValue r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $i0 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: int getLength()>();

        if i1 < 0 goto label1;

        if i1 < $i0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        if $r3 != null goto label3;

        $r9 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $i4 = interfaceinvoke $r10.<org.apache.batik.css.engine.value.Value: int getLength()>();

        $r11 = newarray (org.w3c.dom.css.CSSValue)[$i4];

        r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items> = $r11;

        goto label4;

     label3:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        $i2 = lengthof $r4;

        if $i2 >= $i0 goto label4;

        r12 = newarray (org.w3c.dom.css.CSSValue)[$i0];

        $r8 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        $r7 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r12, 0, $i3);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items> = r12;

     label4:
        $r13 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        $r14 = $r13[i1];

        r15 = $r14;

        if $r14 != null goto label5;

        $r6 = r0.<org.apache.batik.css.dom.CSSOMValue: org.w3c.dom.css.CSSValue[] items>;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$ListComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$ListComponent: void <init>(org.apache.batik.css.dom.CSSOMValue,int)>(r0, i1);

        r15 = $r5;

        $r6[i1] = $r5;

     label5:
        return r15;
    }

    public java.lang.String getIdentifier()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        java.lang.String $r3;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getIdentifier()>();

        return $r3;
    }

    public java.lang.String getListStyle()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        java.lang.String $r3;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getListStyle()>();

        return $r3;
    }

    public java.lang.String getSeparator()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        java.lang.String $r3;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: java.lang.String getSeparator()>();

        return $r3;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getTop()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue$TopComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getTop()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$TopComponent topComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$TopComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$TopComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$TopComponent topComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$TopComponent topComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getRight()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue$RightComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRight()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RightComponent rightComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$RightComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$RightComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RightComponent rightComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RightComponent rightComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getBottom()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue$BottomComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBottom()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BottomComponent bottomComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$BottomComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$BottomComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BottomComponent bottomComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BottomComponent bottomComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getLeft()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;
        org.apache.batik.css.dom.CSSOMValue$LeftComponent $r3, $r4, $r5;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getLeft()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$LeftComponent leftComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$LeftComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$LeftComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$LeftComponent leftComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$LeftComponent leftComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getRed()
    {
        org.apache.batik.css.dom.CSSOMValue$RedComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RedComponent redComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$RedComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$RedComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RedComponent redComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$RedComponent redComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getGreen()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue$GreenComponent $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$GreenComponent greenComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$GreenComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$GreenComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$GreenComponent greenComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$GreenComponent greenComponent>;

        return $r4;
    }

    public org.w3c.dom.css.CSSPrimitiveValue getBlue()
    {
        org.apache.batik.css.dom.CSSOMValue$ValueProvider $r1;
        org.apache.batik.css.dom.CSSOMValue r0;
        org.apache.batik.css.dom.CSSOMValue$BlueComponent $r3, $r4, $r5;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMValue;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMValue$ValueProvider: org.apache.batik.css.engine.value.Value getValue()>();

        interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r3 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BlueComponent blueComponent>;

        if $r3 != null goto label1;

        $r5 = new org.apache.batik.css.dom.CSSOMValue$BlueComponent;

        specialinvoke $r5.<org.apache.batik.css.dom.CSSOMValue$BlueComponent: void <init>(org.apache.batik.css.dom.CSSOMValue)>(r0);

        r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BlueComponent blueComponent> = $r5;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMValue: org.apache.batik.css.dom.CSSOMValue$BlueComponent blueComponent>;

        return $r4;
    }
}
