public abstract class org.springframework.core.NestedRuntimeException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;

    static void <clinit>()
    {
        java.lang.Class $r0;

        <org.springframework.core.NestedRuntimeException: long serialVersionUID> = 5439915454935047936L;

        $r0 = class "Lorg/springframework/core/NestedExceptionUtils;";

        virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.core.NestedRuntimeException r0;
        java.lang.String r1;

        r0 := @this: org.springframework.core.NestedRuntimeException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.springframework.core.NestedRuntimeException r0;
        java.lang.String r1;

        r0 := @this: org.springframework.core.NestedRuntimeException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public java.lang.String getMessage()
    {
        java.lang.Throwable $r2;
        org.springframework.core.NestedRuntimeException r0;
        java.lang.String $r1, $r3;

        r0 := @this: org.springframework.core.NestedRuntimeException;

        $r1 = specialinvoke r0.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r2 = virtualinvoke r0.<org.springframework.core.NestedRuntimeException: java.lang.Throwable getCause()>();

        $r3 = staticinvoke <org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return $r3;
    }

    public java.lang.Throwable getRootCause()
    {
        java.lang.Throwable r1, r2;
        org.springframework.core.NestedRuntimeException r0;

        r0 := @this: org.springframework.core.NestedRuntimeException;

        r1 = null;

        r2 = virtualinvoke r0.<org.springframework.core.NestedRuntimeException: java.lang.Throwable getCause()>();

        goto label2;

     label1:
        r1 = r2;

        r2 = virtualinvoke r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label2:
        if r2 == null goto label3;

        if r2 != r1 goto label1;

     label3:
        return r1;
    }

    public java.lang.Throwable getMostSpecificCause()
    {
        java.lang.Throwable $r1, $r2;
        org.springframework.core.NestedRuntimeException r0;

        r0 := @this: org.springframework.core.NestedRuntimeException;

        $r1 = virtualinvoke r0.<org.springframework.core.NestedRuntimeException: java.lang.Throwable getRootCause()>();

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    public boolean contains(java.lang.Class)
    {
        java.lang.Throwable $r2, $r3, r5;
        org.springframework.core.NestedRuntimeException r1, $r4;
        java.lang.Class r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.springframework.core.NestedRuntimeException;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r1.<org.springframework.core.NestedRuntimeException: java.lang.Throwable getCause()>();

        r5 = $r2;

        if $r2 != r1 goto label3;

        return 0;

     label3:
        $z1 = $r2 instanceof org.springframework.core.NestedRuntimeException;

        if $z1 == 0 goto label7;

        $r4 = (org.springframework.core.NestedRuntimeException) $r2;

        $z3 = virtualinvoke $r4.<org.springframework.core.NestedRuntimeException: boolean contains(java.lang.Class)>(r0);

        return $z3;

     label4:
        $z2 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r5);

        if $z2 == 0 goto label5;

        return 1;

     label5:
        $r3 = virtualinvoke r5.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r3 != r5 goto label6;

        goto label8;

     label6:
        r5 = virtualinvoke r5.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label7:
        if r5 != null goto label4;

     label8:
        return 0;
    }
}
