class org.apache.log4j.chainsaw.MyTableModel$Processor extends java.lang.Object implements java.lang.Runnable
{
    private final org.apache.log4j.chainsaw.MyTableModel this$0;

    private void <init>(org.apache.log4j.chainsaw.MyTableModel)
    {
        org.apache.log4j.chainsaw.MyTableModel$Processor r0;
        org.apache.log4j.chainsaw.MyTableModel r1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel$Processor;

        r1 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0> = r1;

        return;
    }

    public void run()
    {
        java.lang.Throwable $r18;
        java.util.SortedSet $r13, $r16;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6;
        java.util.Iterator $r6;
        org.apache.log4j.chainsaw.MyTableModel $r1, $r3, $r4, $r7, $r9, $r12, $r14, $r15;
        org.apache.log4j.chainsaw.MyTableModel$Processor r0;
        java.util.List $r5, $r8;
        java.lang.InterruptedException $r19;
        java.lang.Object $r2, $r10, $r17;
        org.apache.log4j.chainsaw.EventDetails r11;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel$Processor;

     label01:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

     label04:
        $r1 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $r2 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.lang.Object access$000(org.apache.log4j.chainsaw.MyTableModel)>($r1);

        entermonitor $r2;

     label05:
        $r3 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $z0 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: boolean access$100(org.apache.log4j.chainsaw.MyTableModel)>($r3);

        if $z0 == 0 goto label07;

        exitmonitor $r2;

     label06:
        goto label01;

     label07:
        z3 = 1;

        z4 = 0;

        $r4 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $r5 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.log4j.chainsaw.EventDetails) $r10;

        $r12 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $r13 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>($r12);

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r11);

        if z3 == 0 goto label09;

        $r15 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $r16 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.SortedSet access$300(org.apache.log4j.chainsaw.MyTableModel)>($r15);

        $r17 = interfaceinvoke $r16.<java.util.SortedSet: java.lang.Object first()>();

        if r11 != $r17 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        z3 = $z5;

        if z4 != 0 goto label11;

        $r14 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $z2 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: boolean access$400(org.apache.log4j.chainsaw.MyTableModel,org.apache.log4j.chainsaw.EventDetails)>($r14, r11);

        if $z2 == 0 goto label12;

     label11:
        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        z4 = $z6;

        goto label08;

     label14:
        $r7 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        $r8 = staticinvoke <org.apache.log4j.chainsaw.MyTableModel: java.util.List access$200(org.apache.log4j.chainsaw.MyTableModel)>($r7);

        interfaceinvoke $r8.<java.util.List: void clear()>();

        if z4 == 0 goto label15;

        $r9 = r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: org.apache.log4j.chainsaw.MyTableModel this$0>;

        staticinvoke <org.apache.log4j.chainsaw.MyTableModel: void access$500(org.apache.log4j.chainsaw.MyTableModel,boolean)>($r9, z3);

     label15:
        exitmonitor $r2;

     label16:
        goto label19;

     label17:
        $r18 := @caughtexception;

        exitmonitor $r2;

     label18:
        throw $r18;

     label19:
        goto label01;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    void <init>(org.apache.log4j.chainsaw.MyTableModel, org.apache.log4j.chainsaw.MyTableModel$1)
    {
        org.apache.log4j.chainsaw.MyTableModel$1 r2;
        org.apache.log4j.chainsaw.MyTableModel$Processor r0;
        org.apache.log4j.chainsaw.MyTableModel r1;

        r0 := @this: org.apache.log4j.chainsaw.MyTableModel$Processor;

        r1 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        r2 := @parameter1: org.apache.log4j.chainsaw.MyTableModel$1;

        specialinvoke r0.<org.apache.log4j.chainsaw.MyTableModel$Processor: void <init>(org.apache.log4j.chainsaw.MyTableModel)>(r1);

        return;
    }
}
