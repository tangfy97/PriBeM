public class org.codehaus.groovy.tools.javac.JavaStubCompilationUnit extends org.codehaus.groovy.control.CompilationUnit
{
    private final java.util.List javaSources;

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader, java.io.File)
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r0;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        java.util.LinkedList $r3;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation $r5;
        groovy.lang.GroovyClassLoader r2;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$JavaResolverOperation $r4;
        java.io.File r6;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        r2 := @parameter1: groovy.lang.GroovyClassLoader;

        r6 := @parameter2: java.io.File;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(r1, null, r2);

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: java.util.List javaSources> = $r3;

        $r4 = new org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$JavaResolverOperation;

        specialinvoke $r4.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$JavaResolverOperation: void <init>(org.codehaus.groovy.tools.javac.JavaStubCompilationUnit,org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$1)>(r0, null);

        virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r4, 3);

        $r5 = new org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation;

        specialinvoke $r5.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit$StubGeneratorOperation: void <init>(org.codehaus.groovy.tools.javac.JavaStubCompilationUnit,java.io.File)>(r0, r6);

        virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r5, 3);

        return;
    }

    public void gotoPhase(int) throws org.codehaus.groovy.control.CompilationFailedException
    {
        int i0;
        java.util.List $r1;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r0;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        i0 := @parameter0: int;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void gotoPhase(int)>(i0);

        if i0 != 4 goto label1;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: java.util.List javaSources>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        return;
    }

    public void addSourceFile(java.io.File)
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r2;
        java.lang.String $r1;
        java.io.File r0;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z0 == 0 goto label1;

        specialinvoke r2.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: void addJavaSource(java.io.File)>(r0);

        goto label2;

     label1:
        virtualinvoke r2.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>(r0);

     label2:
        return;
    }

    private void addJavaSource(java.io.File)
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r2;
        java.util.Iterator $r4;
        java.io.File r0;
        java.util.List $r3, $r5;
        java.lang.Object $r6;
        java.lang.String $r1;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = r2.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: java.util.List javaSources>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        return;

     label2:
        $r5 = r2.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: java.util.List javaSources>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private boolean haveJavaSources()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: java.util.List javaSources>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean access$100(org.codehaus.groovy.tools.javac.JavaStubCompilationUnit)
    {
        org.codehaus.groovy.tools.javac.JavaStubCompilationUnit r0;
        boolean $z0;

        r0 := @parameter0: org.codehaus.groovy.tools.javac.JavaStubCompilationUnit;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.javac.JavaStubCompilationUnit: boolean haveJavaSources()>();

        return $z0;
    }
}
