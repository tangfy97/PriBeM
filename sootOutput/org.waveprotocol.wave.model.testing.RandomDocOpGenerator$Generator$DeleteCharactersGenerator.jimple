class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>(r1);

        return;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r10, $r21;
        boolean $z0, z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r5, $r25, $r26;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider $r12, $r23;
        java.lang.AssertionError $r27;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator $r9, $r11, $r20, $r22;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator r8;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, $i19, $i21;
        java.lang.String $r6, $r14, $r17;
        char $c1, $c7;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r0, $r1, $r24;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator$1 $r28;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r7, $r16, $r18;

        r8 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z1 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S1_UNRESTRICTED>;

        if r0 == $r1 goto label02;

        $r24 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage S2_CLOSE_STRUCTURE>;

        if r0 != $r24 goto label01;

        $i14 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int deletionStackComplexityMeasure()>();

        if $i14 != 0 goto label02;

     label01:
        return null;

     label02:
        $i0 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int nextChar(int)>(0);

        $i19 = (int) -1;

        if $i0 == $i19 goto label03;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c1 = (char) $i0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r6, null);

        $z0 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z0 == 0 goto label04;

     label03:
        return null;

     label04:
        if z1 == 0 goto label06;

        $i10 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int maxCharactersToDelete()>();

        $r20 = r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r21 = $r20.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $i11 = virtualinvoke $r21.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int getMaxDeleteLength()>();

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);

        if $i12 != 0 goto label05;

        return null;

     label05:
        $r22 = r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r23 = $r22.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r>;

        $i13 = $i12 + 1;

        i15 = staticinvoke <org.waveprotocol.wave.model.testing.RandomDocOpGenerator: int access$100(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,int,int)>($r23, 1, $i13);

        goto label08;

     label06:
        $r9 = r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r10 = $r9.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $i2 = virtualinvoke $r10.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: int getMaxDeleteLength()>();

        $i3 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int maxCharactersToDelete()>();

        i16 = $i3 + 1;

        if i16 <= $i2 goto label07;

        return null;

     label07:
        $r11 = r8.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0>;

        $r12 = $r11.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r>;

        $i4 = $i2 + 1;

        i15 = staticinvoke <org.waveprotocol.wave.model.testing.RandomDocOpGenerator: int access$100(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,int,int)>($r12, i16, $i4);

     label08:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        i17 = 0;

     label09:
        if i17 >= i15 goto label12;

        $i6 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int nextChar(int)>(i17);

        $z3 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $i21 = (int) -1;

        if $i6 != $i21 goto label10;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label10:
        $c7 = (char) $i6;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        if z1 == 0 goto label11;

        $r17 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r17, null);

        $z4 = virtualinvoke $r18.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isValid()>();

        if $z4 != 0 goto label11;

        $i8 = virtualinvoke $r26.<java.lang.StringBuilder: int length()>();

        $i9 = $i8 - 1;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i9);

        goto label12;

     label11:
        i17 = i17 + 1;

        goto label09;

     label12:
        $i5 = virtualinvoke $r26.<java.lang.StringBuilder: int length()>();

        if $i5 != 0 goto label13;

        return null;

     label13:
        $r14 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator$1;

        specialinvoke $r28.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator$1: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator,java.lang.String)>(r8, $r14);

        $r16 = virtualinvoke $r28.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, null);

        $z2 = virtualinvoke $r16.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isValid()>();

        if $z2 == z1 goto label14;

        return null;

     label14:
        return $r28;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/testing/RandomDocOpGenerator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteCharactersGenerator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
