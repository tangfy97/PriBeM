final class com.mycila.inject.MycilaGuice$SignatureMatcher extends com.google.inject.matcher.AbstractMatcher
{
    private final com.mycila.inject.internal.cglib.core.Signature signature;

    private void <init>(java.lang.reflect.Method)
    {
        com.mycila.inject.internal.cglib.core.Signature $r1;
        com.mycila.inject.internal.asm.Type $r4;
        java.lang.String $r3;
        com.mycila.inject.internal.asm.Type[] $r5;
        java.lang.reflect.Method r2;
        com.mycila.inject.MycilaGuice$SignatureMatcher r0;

        r0 := @this: com.mycila.inject.MycilaGuice$SignatureMatcher;

        r2 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<com.google.inject.matcher.AbstractMatcher: void <init>()>();

        $r1 = new com.mycila.inject.internal.cglib.core.Signature;

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r4 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getReturnType(java.lang.reflect.Method)>(r2);

        $r5 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>(r2);

        specialinvoke $r1.<com.mycila.inject.internal.cglib.core.Signature: void <init>(java.lang.String,com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.asm.Type[])>($r3, $r4, $r5);

        r0.<com.mycila.inject.MycilaGuice$SignatureMatcher: com.mycila.inject.internal.cglib.core.Signature signature> = $r1;

        return;
    }

    public boolean matches(java.lang.reflect.Method)
    {
        com.mycila.inject.internal.cglib.core.Signature $r1, $r3;
        com.mycila.inject.internal.asm.Type $r5;
        com.mycila.inject.MycilaGuice$SignatureMatcher r0;
        java.lang.String $r4;
        com.mycila.inject.internal.asm.Type[] $r6;
        java.lang.reflect.Method r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.MycilaGuice$SignatureMatcher;

        r2 := @parameter0: java.lang.reflect.Method;

        $r3 = r0.<com.mycila.inject.MycilaGuice$SignatureMatcher: com.mycila.inject.internal.cglib.core.Signature signature>;

        $r1 = new com.mycila.inject.internal.cglib.core.Signature;

        $r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type getReturnType(java.lang.reflect.Method)>(r2);

        $r6 = staticinvoke <com.mycila.inject.internal.asm.Type: com.mycila.inject.internal.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>(r2);

        specialinvoke $r1.<com.mycila.inject.internal.cglib.core.Signature: void <init>(java.lang.String,com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.asm.Type[])>($r4, $r5, $r6);

        $z0 = virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.Signature: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public volatile boolean matches(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.reflect.Method $r2;
        com.mycila.inject.MycilaGuice$SignatureMatcher r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.MycilaGuice$SignatureMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.Method) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.MycilaGuice$SignatureMatcher: boolean matches(java.lang.reflect.Method)>($r2);

        return $z0;
    }

    void <init>(java.lang.reflect.Method, com.mycila.inject.MycilaGuice$1)
    {
        java.lang.reflect.Method r1;
        com.mycila.inject.MycilaGuice$1 r2;
        com.mycila.inject.MycilaGuice$SignatureMatcher r0;

        r0 := @this: com.mycila.inject.MycilaGuice$SignatureMatcher;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: com.mycila.inject.MycilaGuice$1;

        specialinvoke r0.<com.mycila.inject.MycilaGuice$SignatureMatcher: void <init>(java.lang.reflect.Method)>(r1);

        return;
    }
}
