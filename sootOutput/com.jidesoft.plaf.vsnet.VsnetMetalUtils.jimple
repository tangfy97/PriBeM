public class com.jidesoft.plaf.vsnet.VsnetMetalUtils extends com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension
{

    public void <init>()
    {
        com.jidesoft.plaf.vsnet.VsnetMetalUtils r0;

        r0 := @this: com.jidesoft.plaf.vsnet.VsnetMetalUtils;

        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void <init>()>();

        return;
    }

    public static void initClassDefaultsWithMenu(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        boolean $z0;

        r0 := @parameter0: javax.swing.UIDefaults;

        $z0 = staticinvoke <java.beans.Beans: boolean isDesignTime()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("MenuUI", "com.jidesoft.plaf.metal.MetalMenuUI");

     label1:
        staticinvoke <com.jidesoft.plaf.vsnet.VsnetMetalUtils: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        return;
    }

    public static void initClassDefaults(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        int $i0, $i1;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JideSplitButtonUI", "com.jidesoft.plaf.metal.MetalJideSplitButtonUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("RangeSliderUI", "com.jidesoft.plaf.metal.MetalRangeSliderUI");

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExComboBoxUI", "com.jidesoft.plaf.metal.MetalExComboBoxUI");

     label1:
        return;
    }

    public static void initComponentDefaults(javax.swing.UIDefaults)
    {
        java.awt.Color $r17, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r29, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r47, $r49, $r50, $r51, $r53, $r55, $r57, $r61, $r107, $r123, $r130, $r133, $r135, $r137, $r178, $r211, $r218, $r317, $r318;
        java.lang.Integer $r63, $r64, $r68, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r104, $r108, $r111, $r116, $r122, $r126, $r127, $r128, $r139, $r140, $r184, $r185, $r187, $r190, $r196, $r208, $r216, $r217, $r222, $r223, $r224, $r225, $r226, $r246, $r247, $r248, $r252, $r253, $r257;
        javax.swing.border.Border $r18, $r70, $r99, $r118, $r131, $r169, $r174, $r176, $r179, $r180, $r195, $r198, $r200, $r202, $r205, $r207, $r212, $r231, $r233, $r235, $r255;
        javax.swing.plaf.BorderUIResource $r261, $r279, $r281, $r289, $r292, $r298, $r299, $r300, $r302, $r305, $r306, $r307, $r308, $r309, $r311, $r312, $r313, $r314;
        java.awt.Toolkit $r0;
        java.awt.Insets $r262, $r264, $r266, $r268, $r270;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Boolean $r102, $r109, $r110, $r119, $r121, $r168, $r191, $r215, $r227, $r228, $r244, $r245, $r249, $r251, $r258;
        javax.swing.border.CompoundBorder $r181;
        javax.swing.plaf.ColorUIResource $r272, $r273, $r274, $r280, $r285, $r286, $r293, $r294, $r295, $r296, $r303, $r310, $r320, $r321, $r322, $r323;
        com.jidesoft.plaf.basic.ThemePainter $r161;
        boolean $z0;
        javax.swing.UIDefaults r13;
        com.jidesoft.plaf.vsnet.VsnetMetalUtils$1 $r275;
        javax.swing.plaf.InsetsUIResource $r277, $r282, $r283, $r284, $r290, $r297, $r301, $r304;
        java.lang.Object[] $r60, $r66, $r113, $r115, $r125, $r162, $r167, $r171, $r172, $r183, $r193, $r220;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r276;
        javax.swing.UIDefaults$LazyInputMap $r278, $r287, $r288, $r291, $r315, $r319;
        java.lang.Object $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r159, $r160, $r260;
        javax.swing.ImageIcon $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r192, $r203, $r204, $r213, $r214, $r219, $r229, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243;
        javax.swing.plaf.DimensionUIResource $r316;
        javax.swing.Icon $r67;
        com.jidesoft.plaf.vsnet.ResizeFrameBorder $r263, $r265, $r267, $r269, $r271;

        r13 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaptionText");

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaption");

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        $r11 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r14 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getControlFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r13);

        $r15 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r13);

        $r261 = new javax.swing.plaf.BorderUIResource;

        $r17 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r18 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r17);

        specialinvoke $r261.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r18);

        $r263 = new com.jidesoft.plaf.vsnet.ResizeFrameBorder;

        $r20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r21 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r22 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r23 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r262 = new java.awt.Insets;

        specialinvoke $r262.<java.awt.Insets: void <init>(int,int,int,int)>(0, 4, 0, 0);

        specialinvoke $r263.<com.jidesoft.plaf.vsnet.ResizeFrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r20, $r21, $r22, $r23, $r262);

        $r265 = new com.jidesoft.plaf.vsnet.ResizeFrameBorder;

        $r26 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r27 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r28 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r29 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r264 = new java.awt.Insets;

        specialinvoke $r264.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 4);

        specialinvoke $r265.<com.jidesoft.plaf.vsnet.ResizeFrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r26, $r27, $r28, $r29, $r264);

        $r267 = new com.jidesoft.plaf.vsnet.ResizeFrameBorder;

        $r32 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r34 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r35 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r266 = new java.awt.Insets;

        specialinvoke $r266.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 4, 0);

        specialinvoke $r267.<com.jidesoft.plaf.vsnet.ResizeFrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r32, $r33, $r34, $r35, $r266);

        $r269 = new com.jidesoft.plaf.vsnet.ResizeFrameBorder;

        $r38 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r39 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r40 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r41 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r268 = new java.awt.Insets;

        specialinvoke $r268.<java.awt.Insets: void <init>(int,int,int,int)>(4, 0, 0, 0);

        specialinvoke $r269.<com.jidesoft.plaf.vsnet.ResizeFrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r38, $r39, $r40, $r41, $r268);

        $r271 = new com.jidesoft.plaf.vsnet.ResizeFrameBorder;

        $r44 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("control");

        $r45 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlLtHighlight");

        $r46 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        $r47 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r270 = new java.awt.Insets;

        specialinvoke $r270.<java.awt.Insets: void <init>(int,int,int,int)>(4, 4, 4, 4);

        specialinvoke $r271.<com.jidesoft.plaf.vsnet.ResizeFrameBorder: void <init>(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets)>($r44, $r45, $r46, $r47, $r270);

        $r49 = (java.awt.Color) $r8;

        $r50 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getLighterColor(java.awt.Color)>($r49);

        $r51 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("textHighlight");

        $r272 = new javax.swing.plaf.ColorUIResource;

        $r53 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getRolloverButtonColor(java.awt.Color)>($r51);

        specialinvoke $r272.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r53);

        $r273 = new javax.swing.plaf.ColorUIResource;

        $r55 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getSelectedAndRolloverButtonColor(java.awt.Color)>($r51);

        specialinvoke $r273.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r55);

        $r274 = new javax.swing.plaf.ColorUIResource;

        $r57 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getSelectedButtonColor(java.awt.Color)>($r51);

        specialinvoke $r274.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r57);

        $r275 = new com.jidesoft.plaf.vsnet.VsnetMetalUtils$1;

        specialinvoke $r275.<com.jidesoft.plaf.vsnet.VsnetMetalUtils$1: void <init>()>();

        $r276 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r276.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        $r60 = newarray (java.lang.Object)[252];

        $r60[0] = "JideLabel.font";

        $r60[1] = $r14;

        $r60[2] = "JideLabel.background";

        $r60[3] = $r2;

        $r60[4] = "JideLabel.foreground";

        $r60[5] = $r1;

        $r60[6] = "JideButton.selectedAndFocusedBackground";

        $r60[7] = $r273;

        $r60[8] = "JideButton.focusedBackground";

        $r60[9] = $r272;

        $r60[10] = "JideButton.selectedBackground";

        $r60[11] = $r274;

        $r60[12] = "JideButton.borderColor";

        $r61 = <java.awt.Color: java.awt.Color black>;

        $r60[13] = $r61;

        $r60[14] = "JideButton.font";

        $r60[15] = $r14;

        $r60[16] = "JideButton.background";

        $r60[17] = $r2;

        $r60[18] = "JideButton.foreground";

        $r60[19] = $r1;

        $r60[20] = "JideButton.shadow";

        $r60[21] = $r5;

        $r60[22] = "JideButton.darkShadow";

        $r60[23] = $r6;

        $r60[24] = "JideButton.light";

        $r60[25] = $r3;

        $r60[26] = "JideButton.highlight";

        $r60[27] = $r4;

        $r60[28] = "JideButton.border";

        $r60[29] = $r276;

        $r60[30] = "JideButton.margin";

        $r277 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r277.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 3);

        $r60[31] = $r277;

        $r60[32] = "JideButton.textIconGap";

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[33] = $r63;

        $r60[34] = "JideButton.textShiftOffset";

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r60[35] = $r64;

        $r60[36] = "JideButton.focusInputMap";

        $r278 = new javax.swing.UIDefaults$LazyInputMap;

        $r66 = newarray (java.lang.Object)[4];

        $r66[0] = "SPACE";

        $r66[1] = "pressed";

        $r66[2] = "released SPACE";

        $r66[3] = "released";

        specialinvoke $r278.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r66);

        $r60[37] = $r278;

        $r60[38] = "TristateCheckBox.icon";

        $r67 = staticinvoke <com.jidesoft.plaf.metal.MetalIconFactory: javax.swing.Icon getCheckBoxIcon()>();

        $r60[39] = $r67;

        $r60[40] = "JideScrollPane.border";

        $r60[41] = $r261;

        $r60[42] = "JideSplitPane.dividerSize";

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r60[43] = $r68;

        $r60[44] = "JideSplitPaneDivider.border";

        $r279 = new javax.swing.plaf.BorderUIResource;

        $r70 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r279.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r70);

        $r60[45] = $r279;

        $r60[46] = "JideSplitPaneDivider.background";

        $r60[47] = $r2;

        $r60[48] = "JideSplitPaneDivider.gripperPainter";

        $r60[49] = $r275;

        $r60[50] = "JideTabbedPane.defaultTabShape";

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[51] = $r71;

        $r60[52] = "JideTabbedPane.defaultResizeMode";

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r60[53] = $r72;

        $r60[54] = "JideTabbedPane.defaultTabColorTheme";

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r60[55] = $r73;

        $r60[56] = "JideTabbedPane.tabRectPadding";

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[57] = $r74;

        $r60[58] = "JideTabbedPane.closeButtonMarginHorizonal";

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r60[59] = $r75;

        $r60[60] = "JideTabbedPane.closeButtonMarginVertical";

        $r76 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r60[61] = $r76;

        $r60[62] = "JideTabbedPane.textMarginVertical";

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[63] = $r77;

        $r60[64] = "JideTabbedPane.noIconMargin";

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[65] = $r78;

        $r60[66] = "JideTabbedPane.iconMargin";

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r60[67] = $r79;

        $r60[68] = "JideTabbedPane.textPadding";

        $r80 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r60[69] = $r80;

        $r60[70] = "JideTabbedPane.buttonSize";

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r60[71] = $r81;

        $r60[72] = "JideTabbedPane.buttonMargin";

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r60[73] = $r82;

        $r60[74] = "JideTabbedPane.fitStyleBoundSize";

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r60[75] = $r83;

        $r60[76] = "JideTabbedPane.fitStyleFirstTabMargin";

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[77] = $r84;

        $r60[78] = "JideTabbedPane.fitStyleIconMinWidth";

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r60[79] = $r85;

        $r60[80] = "JideTabbedPane.fitStyleTextMinWidth";

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r60[81] = $r86;

        $r60[82] = "JideTabbedPane.compressedStyleNoIconRectSize";

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r60[83] = $r87;

        $r60[84] = "JideTabbedPane.compressedStyleIconMargin";

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r60[85] = $r88;

        $r60[86] = "JideTabbedPane.compressedStyleCloseButtonMarginHorizontal";

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r60[87] = $r89;

        $r60[88] = "JideTabbedPane.compressedStyleCloseButtonMarginVertical";

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r60[89] = $r90;

        $r60[90] = "JideTabbedPane.fixedStyleRectSize";

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        $r60[91] = $r91;

        $r60[92] = "JideTabbedPane.closeButtonMargin";

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[93] = $r92;

        $r60[94] = "JideTabbedPane.gripLeftMargin";

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[95] = $r93;

        $r60[96] = "JideTabbedPane.closeButtonMarginSize";

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r60[97] = $r94;

        $r60[98] = "JideTabbedPane.closeButtonLeftMargin";

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[99] = $r95;

        $r60[100] = "JideTabbedPane.closeButtonRightMargin";

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[101] = $r96;

        $r60[102] = "JideTabbedPane.defaultTabBorderShadowColor";

        $r280 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r280.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(115, 109, 99);

        $r60[103] = $r280;

        $r60[104] = "JideTabbedPane.gripperPainter";

        $r60[105] = $r275;

        $r60[106] = "JideTabbedPane.border";

        $r281 = new javax.swing.plaf.BorderUIResource;

        $r99 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r281.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r99);

        $r60[107] = $r281;

        $r60[108] = "JideTabbedPane.background";

        $r60[109] = $r50;

        $r60[110] = "JideTabbedPane.foreground";

        $r60[111] = $r1;

        $r60[112] = "JideTabbedPane.light";

        $r60[113] = $r3;

        $r60[114] = "JideTabbedPane.highlight";

        $r60[115] = $r4;

        $r60[116] = "JideTabbedPane.shadow";

        $r60[117] = $r5;

        $r60[118] = "JideTabbedPane.darkShadow";

        $r60[119] = $r1;

        $r60[120] = "JideTabbedPane.tabInsets";

        $r282 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r282.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 4, 1, 4);

        $r60[121] = $r282;

        $r60[122] = "JideTabbedPane.contentBorderInsets";

        $r283 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r283.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r60[123] = $r283;

        $r60[124] = "JideTabbedPane.ignoreContentBorderInsetsIfNoTabs";

        $r102 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r60[125] = $r102;

        $r60[126] = "JideTabbedPane.tabAreaInsets";

        $r284 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r284.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 4, 0, 4);

        $r60[127] = $r284;

        $r60[128] = "JideTabbedPane.tabAreaBackground";

        $r60[129] = $r50;

        $r60[130] = "JideTabbedPane.tabAreaBackgroundLt";

        $r60[131] = $r4;

        $r60[132] = "JideTabbedPane.tabAreaBackgroundDk";

        $r60[133] = $r2;

        $r60[134] = "JideTabbedPane.tabRunOverlay";

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[135] = $r104;

        $r60[136] = "JideTabbedPane.font";

        $r60[137] = $r14;

        $r60[138] = "JideTabbedPane.selectedTabFont";

        $r60[139] = $r14;

        $r60[140] = "JideTabbedPane.selectedTabTextForeground";

        $r60[141] = $r6;

        $r60[142] = "JideTabbedPane.unselectedTabTextForeground";

        $r60[143] = $r6;

        $r60[144] = "JideTabbedPane.selectedTabBackground";

        $r60[145] = $r2;

        $r60[146] = "JideTabbedPane.selectedTabBackgroundLt";

        $r285 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r285.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r60[147] = $r285;

        $r60[148] = "JideTabbedPane.selectedTabBackgroundDk";

        $r286 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r286.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r60[149] = $r286;

        $r60[150] = "JideTabbedPane.tabListBackground";

        $r107 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("List.background");

        $r60[151] = $r107;

        $r60[152] = "JideTabbedPane.textIconGap";

        $r108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[153] = $r108;

        $r60[154] = "JideTabbedPane.showIconOnTab";

        $r109 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r60[155] = $r109;

        $r60[156] = "JideTabbedPane.showCloseButtonOnTab";

        $r110 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r60[157] = $r110;

        $r60[158] = "JideTabbedPane.closeButtonAlignment";

        $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r60[159] = $r111;

        $r60[160] = "JideTabbedPane.focusInputMap";

        $r287 = new javax.swing.UIDefaults$LazyInputMap;

        $r113 = newarray (java.lang.Object)[20];

        $r113[0] = "RIGHT";

        $r113[1] = "navigateRight";

        $r113[2] = "KP_RIGHT";

        $r113[3] = "navigateRight";

        $r113[4] = "LEFT";

        $r113[5] = "navigateLeft";

        $r113[6] = "KP_LEFT";

        $r113[7] = "navigateLeft";

        $r113[8] = "UP";

        $r113[9] = "navigateUp";

        $r113[10] = "KP_UP";

        $r113[11] = "navigateUp";

        $r113[12] = "DOWN";

        $r113[13] = "navigateDown";

        $r113[14] = "KP_DOWN";

        $r113[15] = "navigateDown";

        $r113[16] = "ctrl DOWN";

        $r113[17] = "requestFocusForVisibleComponent";

        $r113[18] = "ctrl KP_DOWN";

        $r113[19] = "requestFocusForVisibleComponent";

        specialinvoke $r287.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r113);

        $r60[161] = $r287;

        $r60[162] = "JideTabbedPane.ancestorInputMap";

        $r288 = new javax.swing.UIDefaults$LazyInputMap;

        $r115 = newarray (java.lang.Object)[8];

        $r115[0] = "ctrl PAGE_DOWN";

        $r115[1] = "navigatePageDown";

        $r115[2] = "ctrl PAGE_UP";

        $r115[3] = "navigatePageUp";

        $r115[4] = "ctrl UP";

        $r115[5] = "requestFocus";

        $r115[6] = "ctrl KP_UP";

        $r115[7] = "requestFocus";

        specialinvoke $r288.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r115);

        $r60[163] = $r288;

        $r60[164] = "Resizable.resizeBorder";

        $r60[165] = $r271;

        $r60[166] = "Gripper.size";

        $r116 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r60[167] = $r116;

        $r60[168] = "Gripper.foreground";

        $r60[169] = $r2;

        $r60[170] = "Gripper.painter";

        $r60[171] = $r275;

        $r60[172] = "MenuBar.border";

        $r289 = new javax.swing.plaf.BorderUIResource;

        $r118 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 0, 1, 0);

        specialinvoke $r289.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r118);

        $r60[173] = $r289;

        $r60[174] = "Icon.floating";

        $r119 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r60[175] = $r119;

        $r60[176] = "JideSplitButton.font";

        $r60[177] = $r14;

        $r60[178] = "JideSplitButton.margin";

        $r290 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r290.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 7);

        $r60[179] = $r290;

        $r60[180] = "JideSplitButton.border";

        $r60[181] = $r276;

        $r60[182] = "JideSplitButton.borderPainted";

        $r121 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r60[183] = $r121;

        $r60[184] = "JideSplitButton.textIconGap";

        $r122 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r60[185] = $r122;

        $r60[186] = "JideSplitButton.selectionBackground";

        $r123 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("MenuItem.selectionBackground");

        $r60[187] = $r123;

        $r60[188] = "JideSplitButton.focusInputMap";

        $r291 = new javax.swing.UIDefaults$LazyInputMap;

        $r125 = newarray (java.lang.Object)[8];

        $r125[0] = "SPACE";

        $r125[1] = "pressed";

        $r125[2] = "released SPACE";

        $r125[3] = "released";

        $r125[4] = "DOWN";

        $r125[5] = "downPressed";

        $r125[6] = "released DOWN";

        $r125[7] = "downReleased";

        specialinvoke $r291.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r125);

        $r60[189] = $r291;

        $r60[190] = "ButtonPanel.order";

        $r60[191] = "ACO";

        $r60[192] = "ButtonPanel.oppositeOrder";

        $r60[193] = "H";

        $r60[194] = "ButtonPanel.buttonGap";

        $r126 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r60[195] = $r126;

        $r60[196] = "ButtonPanel.groupGap";

        $r127 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r60[197] = $r127;

        $r60[198] = "ButtonPanel.minButtonWidth";

        $r128 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(57);

        $r60[199] = $r128;

        $r60[200] = "MeterProgressBar.border";

        $r292 = new javax.swing.plaf.BorderUIResource;

        $r130 = <java.awt.Color: java.awt.Color BLACK>;

        $r131 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r130);

        specialinvoke $r292.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r131);

        $r60[201] = $r292;

        $r60[202] = "MeterProgressBar.background";

        $r293 = new javax.swing.plaf.ColorUIResource;

        $r133 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke $r293.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r133);

        $r60[203] = $r293;

        $r60[204] = "MeterProgressBar.foreground";

        $r294 = new javax.swing.plaf.ColorUIResource;

        $r135 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r294.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r135);

        $r60[205] = $r294;

        $r60[206] = "MeterProgressBar.cellForeground";

        $r295 = new javax.swing.plaf.ColorUIResource;

        $r137 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r295.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r137);

        $r60[207] = $r295;

        $r60[208] = "MeterProgressBar.cellBackground";

        $r296 = new javax.swing.plaf.ColorUIResource;

        $i7 = (int) 32768;

        specialinvoke $r296.<javax.swing.plaf.ColorUIResource: void <init>(int)>($i7);

        $r60[209] = $r296;

        $r60[210] = "MeterProgressBar.cellLength";

        $r139 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[211] = $r139;

        $r60[212] = "MeterProgressBar.cellSpacing";

        $r140 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r60[213] = $r140;

        $r60[214] = "HeaderBox.background";

        $r60[215] = $r2;

        $r60[216] = "Cursor.hsplit";

        $r141 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_h_split.gif");

        $r60[217] = $r141;

        $r60[218] = "Cursor.vsplit";

        $r142 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_v_split.gif");

        $r60[219] = $r142;

        $r60[220] = "Cursor.north";

        $r143 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_north.gif");

        $r60[221] = $r143;

        $r60[222] = "Cursor.south";

        $r144 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_south.gif");

        $r60[223] = $r144;

        $r60[224] = "Cursor.east";

        $r145 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_east.gif");

        $r60[225] = $r145;

        $r60[226] = "Cursor.west";

        $r146 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_west.gif");

        $r60[227] = $r146;

        $r60[228] = "Cursor.tab";

        $r147 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_tab.gif");

        $r60[229] = $r147;

        $r60[230] = "Cursor.float";

        $r148 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_float.gif");

        $r60[231] = $r148;

        $r60[232] = "Cursor.vertical";

        $r149 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_vertical.gif");

        $r60[233] = $r149;

        $r60[234] = "Cursor.horizontal";

        $r150 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_horizontal.gif");

        $r60[235] = $r150;

        $r60[236] = "Cursor.delete";

        $r151 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_delete.gif");

        $r60[237] = $r151;

        $r60[238] = "Cursor.drag";

        $r152 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag.gif");

        $r60[239] = $r152;

        $r60[240] = "Cursor.dragStop";

        $r153 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_stop.gif");

        $r60[241] = $r153;

        $r60[242] = "Cursor.dragText";

        $r154 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text.gif");

        $r60[243] = $r154;

        $r60[244] = "Cursor.dragTextStop";

        $r155 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text_stop.gif");

        $r60[245] = $r155;

        $r60[246] = "Cursor.percentage";

        $r156 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_percentage.gif");

        $r60[247] = $r156;

        $r60[248] = "Cursor.moveEast";

        $r157 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_east.gif");

        $r60[249] = $r157;

        $r60[250] = "Cursor.moveWest";

        $r158 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_west.gif");

        $r60[251] = $r158;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r60);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r219 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/vsnet/VsnetMetalUtils;", "icons/title_buttons_metal.gif");

        $r220 = newarray (java.lang.Object)[112];

        $r220[0] = "Workspace.background";

        $r220[1] = $r12;

        $r220[2] = "SidePane.margin";

        $r297 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r297.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 1, 1, 1);

        $r220[3] = $r297;

        $r220[4] = "SidePane.iconTextGap";

        $r222 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r220[5] = $r222;

        $r220[6] = "SidePane.textBorderGap";

        $r223 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r220[7] = $r223;

        $r220[8] = "SidePane.itemGap";

        $r224 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r220[9] = $r224;

        $r220[10] = "SidePane.groupGap";

        $r225 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r220[11] = $r225;

        $r220[12] = "SidePane.foreground";

        $r220[13] = $r1;

        $r220[14] = "SidePane.background";

        $r220[15] = $r50;

        $r220[16] = "SidePane.lineColor";

        $r220[17] = $r6;

        $r220[18] = "SidePane.buttonBackground";

        $r220[19] = $r2;

        $r220[20] = "SidePane.font";

        $r220[21] = $r14;

        $r220[22] = "SidePane.orientation";

        $r226 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r220[23] = $r226;

        $r220[24] = "SidePane.showSelectedTabText";

        $r227 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r220[25] = $r227;

        $r220[26] = "SidePane.alwaysShowTabText";

        $r228 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r220[27] = $r228;

        $r220[28] = "DockableFrame.defaultIcon";

        $r229 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/dockableframe_blank.gif");

        $r220[29] = $r229;

        $r220[30] = "DockableFrame.background";

        $r220[31] = $r2;

        $r220[32] = "DockableFrame.border";

        $r298 = new javax.swing.plaf.BorderUIResource;

        $r231 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r298.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r231);

        $r220[33] = $r298;

        $r220[34] = "DockableFrame.floatingBorder";

        $r299 = new javax.swing.plaf.BorderUIResource;

        $r233 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r299.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r233);

        $r220[35] = $r299;

        $r220[36] = "DockableFrame.slidingEastBorder";

        $r220[37] = $r263;

        $r220[38] = "DockableFrame.slidingWestBorder";

        $r220[39] = $r265;

        $r220[40] = "DockableFrame.slidingNorthBorder";

        $r220[41] = $r267;

        $r220[42] = "DockableFrame.slidingSouthBorder";

        $r220[43] = $r269;

        $r220[44] = "DockableFrame.activeTitleBackground";

        $r220[45] = $r8;

        $r220[46] = "DockableFrame.activeTitleForeground";

        $r220[47] = $r7;

        $r220[48] = "DockableFrame.inactiveTitleBackground";

        $r220[49] = $r11;

        $r220[50] = "DockableFrame.inactiveTitleForeground";

        $r220[51] = $r10;

        $r220[52] = "DockableFrame.titleBorder";

        $r300 = new javax.swing.plaf.BorderUIResource;

        $r235 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 0, 3, 0);

        specialinvoke $r300.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r235);

        $r220[53] = $r300;

        $r220[54] = "DockableFrame.inactiveTitleBorderColor";

        $r220[55] = $r9;

        $r220[56] = "DockableFrame.activeTitleBorderColor";

        $r220[57] = $r9;

        $r220[58] = "DockableFrame.font";

        $r220[59] = $r14;

        $r220[60] = "DockableFrameTitlePane.gripperPainter";

        $r220[61] = $r275;

        $r220[62] = "DockableFrameTitlePane.font";

        $r220[63] = $r14;

        $r220[64] = "DockableFrameTitlePane.hideIcon";

        $r236 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 0, 16, 16);

        $r220[65] = $r236;

        $r220[66] = "DockableFrameTitlePane.unfloatIcon";

        $r237 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 16, 16, 16);

        $r220[67] = $r237;

        $r220[68] = "DockableFrameTitlePane.floatIcon";

        $r238 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 32, 16, 16);

        $r220[69] = $r238;

        $r220[70] = "DockableFrameTitlePane.autohideIcon";

        $r239 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 48, 16, 16);

        $r220[71] = $r239;

        $r220[72] = "DockableFrameTitlePane.stopAutohideIcon";

        $r240 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 64, 16, 16);

        $r220[73] = $r240;

        $r220[74] = "DockableFrameTitlePane.hideAutohideIcon";

        $r241 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 80, 16, 16);

        $r220[75] = $r241;

        $r220[76] = "DockableFrameTitlePane.maximizeIcon";

        $r242 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 96, 16, 16);

        $r220[77] = $r242;

        $r220[78] = "DockableFrameTitlePane.restoreIcon";

        $r243 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r219, 0, 112, 16, 16);

        $r220[79] = $r243;

        $r220[80] = "DockableFrameTitlePane.titleBarComponent";

        $r244 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r220[81] = $r244;

        $r220[82] = "DockableFrameTitlePane.alwaysShowAllButtons";

        $r245 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r220[83] = $r245;

        $r220[84] = "DockableFrameTitlePane.buttonsAlignment";

        $r246 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r220[85] = $r246;

        $r220[86] = "DockableFrameTitlePane.titleAlignment";

        $r247 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r220[87] = $r247;

        $r220[88] = "DockableFrameTitlePane.buttonGap";

        $r248 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r220[89] = $r248;

        $r220[90] = "DockableFrameTitlePane.showIcon";

        $r249 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r220[91] = $r249;

        $r220[92] = "DockableFrameTitlePane.margin";

        $r301 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r301.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 6, 0, 6);

        $r220[93] = $r301;

        $r220[94] = "DockableFrameTitlePane.use3dButtons";

        $r251 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r220[95] = $r251;

        $r220[96] = "ContentContainer.background";

        $r220[97] = $r50;

        $r220[98] = "ContentContainer.vgap";

        $r252 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r220[99] = $r252;

        $r220[100] = "ContentContainer.hgap";

        $r253 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r220[101] = $r253;

        $r220[102] = "MainContainer.border";

        $r302 = new javax.swing.plaf.BorderUIResource;

        $r255 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r302.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r255);

        $r220[103] = $r302;

        $r220[104] = "Contour.color";

        $r303 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r303.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(136, 136, 136);

        $r220[105] = $r303;

        $r220[106] = "Contour.thickness";

        $r257 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r220[107] = $r257;

        $r220[108] = "DockingFramework.changeCursor";

        $r258 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r220[109] = $r258;

        $r220[110] = "FrameContainer.contentBorderInsets";

        $r304 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r304.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 0, 0, 0);

        $r220[111] = $r304;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r220);

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label4;

        $r192 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/vsnet/VsnetMetalUtils;", "icons/collapsible_pane_metal.gif");

        $r193 = newarray (java.lang.Object)[52];

        $r193[0] = "CollapsiblePanes.border";

        $r305 = new javax.swing.plaf.BorderUIResource;

        $r195 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(12, 12, 12, 12);

        specialinvoke $r305.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r195);

        $r193[1] = $r305;

        $r193[2] = "CollapsiblePanes.gap";

        $r196 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r193[3] = $r196;

        $r193[4] = "CollapsiblePane.background";

        $z0 = $r2 instanceof java.awt.Color;

        if $z0 == 0 goto label2;

        $r218 = (java.awt.Color) $r2;

        $r260 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>($r218, 0.45F);

        goto label3;

     label2:
        $r260 = $r2;

     label3:
        $r193[5] = $r260;

        $r193[6] = "CollapsiblePane.contentBackground";

        $r193[7] = $r3;

        $r193[8] = "CollapsiblePane.foreground";

        $r193[9] = $r1;

        $r193[10] = "CollapsiblePane.emphasizedBackground";

        $r193[11] = $r8;

        $r193[12] = "CollapsiblePane.emphasizedForeground";

        $r193[13] = $r7;

        $r193[14] = "CollapsiblePane.border";

        $r306 = new javax.swing.plaf.BorderUIResource;

        $r198 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r306.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r198);

        $r193[15] = $r306;

        $r193[16] = "CollapsiblePane.font";

        $r193[17] = $r14;

        $r193[18] = "CollapsiblePane.contentBorder";

        $r307 = new javax.swing.plaf.BorderUIResource;

        $r200 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(8, 10, 8, 10);

        specialinvoke $r307.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r200);

        $r193[19] = $r307;

        $r193[20] = "CollapsiblePane.titleBorder";

        $r308 = new javax.swing.plaf.BorderUIResource;

        $r202 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        specialinvoke $r308.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r202);

        $r193[21] = $r308;

        $r193[22] = "CollapsiblePane.titleFont";

        $r193[23] = $r14;

        $r193[24] = "CollapsiblePane.downIcon";

        $r203 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r192, 0, 0, 12, 12);

        $r193[25] = $r203;

        $r193[26] = "CollapsiblePane.upIcon";

        $r204 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r192, 0, 12, 12, 12);

        $r193[27] = $r204;

        $r193[28] = "StatusBarItem.border";

        $r205 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $r193[29] = $r205;

        $r193[30] = "StatusBar.border";

        $r309 = new javax.swing.plaf.BorderUIResource;

        $r207 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r309.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r207);

        $r193[31] = $r309;

        $r193[32] = "StatusBar.gap";

        $r208 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r193[33] = $r208;

        $r193[34] = "StatusBar.background";

        $r193[35] = $r2;

        $r193[36] = "StatusBar.font";

        $r193[37] = $r14;

        $r193[38] = "MemoryStatusBarItem.fillColor";

        $r310 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r310.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(236, 233, 176);

        $r193[39] = $r310;

        $r193[40] = "DocumentPane.groupBorder";

        $r311 = new javax.swing.plaf.BorderUIResource;

        $r211 = <java.awt.Color: java.awt.Color gray>;

        $r212 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r211);

        specialinvoke $r311.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r212);

        $r193[41] = $r311;

        $r193[42] = "DocumentPane.newHorizontalGroupIcon";

        $r213 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_horizontal_tab_group.png");

        $r193[43] = $r213;

        $r193[44] = "DocumentPane.newVerticalGroupIcon";

        $r214 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_vertical_tab_group.png");

        $r193[45] = $r214;

        $r193[46] = "DocumentPane.boldActiveTab";

        $r215 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r193[47] = $r215;

        $r193[48] = "OutlookTabbedPane.buttonStyle";

        $r216 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r193[49] = $r216;

        $r193[50] = "FloorTabbedPane.buttonStyle";

        $r217 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r193[51] = $r217;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r193);

     label4:
        $i5 = $i0 & 16;

        if $i5 == 0 goto label5;

        $r172 = newarray (java.lang.Object)[44];

        $r172[0] = "CommandBar.font";

        $r172[1] = $r15;

        $r172[2] = "CommandBar.background";

        $r172[3] = $r2;

        $r172[4] = "CommandBar.foreground";

        $r172[5] = $r1;

        $r172[6] = "CommandBar.shadow";

        $r172[7] = $r5;

        $r172[8] = "CommandBar.darkShadow";

        $r172[9] = $r6;

        $r172[10] = "CommandBar.light";

        $r172[11] = $r3;

        $r172[12] = "CommandBar.highlight";

        $r172[13] = $r4;

        $r172[14] = "CommandBar.border";

        $r312 = new javax.swing.plaf.BorderUIResource;

        $r174 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r312.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r174);

        $r172[15] = $r312;

        $r172[16] = "CommandBar.borderVert";

        $r313 = new javax.swing.plaf.BorderUIResource;

        $r176 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r313.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r176);

        $r172[17] = $r313;

        $r172[18] = "CommandBar.borderFloating";

        $r314 = new javax.swing.plaf.BorderUIResource;

        $r178 = (java.awt.Color) $r8;

        $r179 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r178, 2);

        $r180 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        $r181 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r179, $r180);

        specialinvoke $r314.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r181);

        $r172[19] = $r314;

        $r172[20] = "CommandBar.ancestorInputMap";

        $r315 = new javax.swing.UIDefaults$LazyInputMap;

        $r183 = newarray (java.lang.Object)[16];

        $r183[0] = "UP";

        $r183[1] = "navigateUp";

        $r183[2] = "KP_UP";

        $r183[3] = "navigateUp";

        $r183[4] = "DOWN";

        $r183[5] = "navigateDown";

        $r183[6] = "KP_DOWN";

        $r183[7] = "navigateDown";

        $r183[8] = "LEFT";

        $r183[9] = "navigateLeft";

        $r183[10] = "KP_LEFT";

        $r183[11] = "navigateLeft";

        $r183[12] = "RIGHT";

        $r183[13] = "navigateRight";

        $r183[14] = "KP_RIGHT";

        $r183[15] = "navigateRight";

        specialinvoke $r315.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r183);

        $r172[21] = $r315;

        $r172[22] = "CommandBar.titleBarSize";

        $r184 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r172[23] = $r184;

        $r172[24] = "CommandBar.titleBarButtonGap";

        $r185 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r172[25] = $r185;

        $r172[26] = "CommandBar.titleBarBackground";

        $r172[27] = $r8;

        $r172[28] = "CommandBar.titleBarForeground";

        $r172[29] = $r7;

        $r172[30] = "CommandBar.titleBarFont";

        $r172[31] = $r14;

        $r172[32] = "CommandBar.minimumSize";

        $r316 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r316.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(16, 16);

        $r172[33] = $r316;

        $r172[34] = "CommandBar.separatorSize";

        $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r172[35] = $r187;

        $r172[36] = "CommandBarSeparator.background";

        $r317 = new java.awt.Color;

        specialinvoke $r317.<java.awt.Color: void <init>(int,int,int)>(219, 216, 209);

        $r172[37] = $r317;

        $r172[38] = "CommandBarSeparator.foreground";

        $r318 = new java.awt.Color;

        specialinvoke $r318.<java.awt.Color: void <init>(int,int,int)>(166, 166, 166);

        $r172[39] = $r318;

        $r172[40] = "Chevron.size";

        $r190 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r172[41] = $r190;

        $r172[42] = "Chevron.alwaysVisible";

        $r191 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r172[43] = $r191;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r172);

     label5:
        $i3 = $i0 & 4;

        if $i3 == 0 goto label6;

        $r167 = newarray (java.lang.Object)[6];

        $r167[0] = "AbstractComboBox.useJButton";

        $r168 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r167[1] = $r168;

        $r167[2] = "NestedTableHeader.cellBorder";

        $r169 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("TableHeader.cellBorder");

        $r167[3] = $r169;

        $r167[4] = "GroupList.ancestorInputMap";

        $r319 = new javax.swing.UIDefaults$LazyInputMap;

        $r171 = newarray (java.lang.Object)[4];

        $r171[0] = "TAB";

        $r171[1] = "selectNextGroup";

        $r171[2] = "shift TAB";

        $r171[3] = "selectPreviousGroup";

        specialinvoke $r319.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r171);

        $r167[5] = $r319;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r167);

     label6:
        $i4 = $i0 & 16384;

        if $i4 == 0 goto label7;

        $r162 = newarray (java.lang.Object)[8];

        $r162[0] = "DiffMerge.changed";

        $r320 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r320.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 196, 255);

        $r162[1] = $r320;

        $r162[2] = "DiffMerge.deleted";

        $r321 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r321.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(200, 200, 200);

        $r162[3] = $r321;

        $r162[4] = "DiffMerge.inserted";

        $r322 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r322.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 255, 196);

        $r162[5] = $r322;

        $r162[6] = "DiffMerge.conflicted";

        $r323 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r323.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 153, 153);

        $r162[7] = $r323;

        virtualinvoke r13.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r162);

     label7:
        $r159 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TextField.font");

        virtualinvoke r13.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("Spinner.font", $r159);

        $r160 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TextField.font");

        virtualinvoke r13.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("FormattedTextField.font", $r160);

        $r161 = staticinvoke <com.jidesoft.plaf.metal.MetalPainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r13, "Theme.painter", $r161);

        return;
    }
}
