public final class org.apache.jena.riot.tokens.Token extends java.lang.Object
{
    private org.apache.jena.riot.tokens.TokenType tokenType;
    private java.lang.String tokenImage;
    private java.lang.String tokenImage2;
    private org.apache.jena.riot.tokens.Token subToken1;
    private org.apache.jena.riot.tokens.Token subToken2;
    public int cntrlCode;
    private long column;
    private long line;
    public static final java.lang.String ImageANY;
    public static final java.lang.String ImageTrue;
    public static final java.lang.String ImageFalse;
    static final java.lang.String delim1;
    static final java.lang.String delim2;

    public final org.apache.jena.riot.tokens.TokenType getType()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        return $r1;
    }

    public final java.lang.String getImage()
    {
        java.lang.String $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        return $r1;
    }

    public final java.lang.String getImage2()
    {
        java.lang.String $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        return $r1;
    }

    public final int getCntrlCode()
    {
        int $i0;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $i0 = r0.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        return $i0;
    }

    public final org.apache.jena.riot.tokens.Token getSubToken1()
    {
        org.apache.jena.riot.tokens.Token r0, $r1;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken1>;

        return $r1;
    }

    public final org.apache.jena.riot.tokens.Token getSubToken2()
    {
        org.apache.jena.riot.tokens.Token r0, $r1;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken2>;

        return $r1;
    }

    public final org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType> = r1;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setImage(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage> = r1;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setImage(char)
    {
        char c0;
        java.lang.String $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage> = $r1;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setImage2(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2> = r1;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setCntrlCode(int)
    {
        int i0;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        i0 := @parameter0: int;

        r0.<org.apache.jena.riot.tokens.Token: int cntrlCode> = i0;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setSubToken1(org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.tokens.Token r0, r1;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.Token;

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken1> = r1;

        return r0;
    }

    public final org.apache.jena.riot.tokens.Token setSubToken2(org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.tokens.Token r0, r1;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.Token;

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken2> = r1;

        return r0;
    }

    static org.apache.jena.riot.tokens.Token create(java.lang.String)
    {
        org.apache.jena.riot.RiotException $r4, $r5;
        org.apache.jena.atlas.io.PeekReader $r1;
        org.apache.jena.riot.tokens.Token $r3;
        org.apache.jena.riot.tokens.TokenizerText $r2;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader readString(java.lang.String)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        $z0 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = new org.apache.jena.riot.RiotException;

        specialinvoke $r5.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>("No token");

        throw $r5;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token next()>();

        $z1 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = new org.apache.jena.riot.RiotException;

        specialinvoke $r4.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>("Extraneous charcaters");

        throw $r4;

     label2:
        return $r3;
    }

    static org.apache.jena.atlas.iterator.Iter createN(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenizerText $r2;
        java.lang.String r0;
        org.apache.jena.atlas.io.PeekReader $r1;
        org.apache.jena.atlas.iterator.Iter $r4;
        org.apache.jena.riot.tokens.Token $r5;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader readString(java.lang.String)>(r0);

        $r2 = new org.apache.jena.riot.tokens.TokenizerText;

        specialinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: void <init>(org.apache.jena.atlas.io.PeekReader)>($r1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenizerText: org.apache.jena.riot.tokens.Token next()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r4 = staticinvoke <org.apache.jena.atlas.iterator.Iter: org.apache.jena.atlas.iterator.Iter iter(java.util.Collection)>($r3);

        return $r4;
    }

    public long getColumn()
    {
        long $l0;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $l0 = r0.<org.apache.jena.riot.tokens.Token: long column>;

        return $l0;
    }

    public long getLine()
    {
        long $l0;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $l0 = r0.<org.apache.jena.riot.tokens.Token: long line>;

        return $l0;
    }

    void <init>(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenType $r2;
        java.lang.String r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING>;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r2, r1);

        return;
    }

    void <init>(org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String,java.lang.String)>(r1, null, null);

        return;
    }

    void <init>(org.apache.jena.riot.tokens.TokenType, java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        java.lang.String r2;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String,java.lang.String)>(r1, r2, null);

        return;
    }

    void <init>(org.apache.jena.riot.tokens.TokenType, java.lang.String, java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        java.lang.String r2, r3;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>()>();

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>(r1);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage2(java.lang.String)>(r3);

        return;
    }

    private void <init>(org.apache.jena.riot.tokens.TokenType, java.lang.String, java.lang.String, org.apache.jena.riot.tokens.Token, org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        java.lang.String r2, r3;
        org.apache.jena.riot.tokens.Token r0, r4, r5;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.jena.riot.tokens.Token;

        r5 := @parameter4: org.apache.jena.riot.tokens.Token;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>()>();

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>(r1);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setImage2(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken1(org.apache.jena.riot.tokens.Token)>(r4);

        virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken2(org.apache.jena.riot.tokens.Token)>(r5);

        return;
    }

    private void <init>()
    {
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>(long,long)>(-1L, -1L);

        return;
    }

    public void <init>(long, long)
    {
        long l0, l1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType> = null;

        r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage> = null;

        r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2> = null;

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken1> = null;

        r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken2> = null;

        r0.<org.apache.jena.riot.tokens.Token: int cntrlCode> = 0;

        r0.<org.apache.jena.riot.tokens.Token: long line> = l0;

        r0.<org.apache.jena.riot.tokens.Token: long column> = l1;

        return;
    }

    public void <init>(org.apache.jena.riot.tokens.Token)
    {
        long $l1, $l2;
        org.apache.jena.riot.tokens.Token r0, r1, $r2, $r3;
        org.apache.jena.riot.tokens.TokenType $r6;
        int $i0;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r1 := @parameter0: org.apache.jena.riot.tokens.Token;

        $r6 = r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r5 = r1.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r4 = r1.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $r3 = r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken1>;

        $r2 = r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token subToken2>;

        specialinvoke r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String,java.lang.String,org.apache.jena.riot.tokens.Token,org.apache.jena.riot.tokens.Token)>($r6, $r5, $r4, $r3, $r2);

        $i0 = r1.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        r0.<org.apache.jena.riot.tokens.Token: int cntrlCode> = $i0;

        $l1 = r1.<org.apache.jena.riot.tokens.Token: long line>;

        r0.<org.apache.jena.riot.tokens.Token: long line> = $l1;

        $l2 = r1.<org.apache.jena.riot.tokens.Token: long column>;

        r0.<org.apache.jena.riot.tokens.Token: long column> = $l2;

        return;
    }

    public java.lang.String asString()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.String $r3;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        return $r3;

     label2:
        return null;
    }

    public int asInt()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int $i0, $i2;
        java.lang.String $r2;
        org.apache.jena.riot.tokens.Token r0;
        java.lang.Integer $r3;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType INTEGER>;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r1);

        if $z0 != 0 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public long asLong()
    {
        long $l0;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $l0 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: long asLong(long)>(-1L);

        return $l0;
    }

    public long asLong(long)
    {
        long $l2, $l3, l4;
        org.apache.jena.riot.tokens.Token r0;
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        java.lang.Long $r4, $r6;
        int $i0, $i1;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        l4 := @parameter0: long;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            default: goto label3;
        };

     label1:
        $r5 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r5);

        $l3 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l3;

     label2:
        $r3 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>($r3, 16);

        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        return $l2;

     label3:
        return l4;
    }

    public java.lang.String asWord()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        java.lang.String $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        return $r2;
    }

    public java.lang.String text()
    {
        java.lang.String $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String toString(boolean)>(0);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String toString(boolean)>(0);

        return $r1;
    }

    public java.lang.String toString(boolean)
    {
        java.lang.Object[] $r15;
        long $l2, $l4, $l6, $l7;
        org.apache.jena.riot.tokens.Token r1, $r6, $r7, $r9, $r11;
        byte $b3, $b5;
        java.lang.Long $r16, $r17;
        int $i0, $i1, $i8, $i9;
        java.lang.String $r3, $r4, $r5, $r8, $r10, $r12, $r13, $r14, $r18;
        boolean z0;
        org.apache.jena.riot.tokens.TokenType $r2, $r19;
        java.lang.StringBuilder $r20;

        r1 := @this: org.apache.jena.riot.tokens.Token;

        z0 := @parameter0: boolean;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label1;

        $l2 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $b3 = $l2 cmp 0L;

        $i8 = (int) $b3;

        if $i8 < 0 goto label1;

        $l4 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $b5 = $l4 cmp 0L;

        $i9 = (int) $b5;

        if $i9 < 0 goto label1;

        $r15 = newarray (java.lang.Object)[2];

        $l6 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r15[0] = $r16;

        $l7 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r15[1] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d,%d]", $r15);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label1:
        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r19 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        if $r19 != null goto label2;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenType: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label3:
        $r4 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        if $r4 == null goto label4;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r14 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label4:
        $r5 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        if $r5 == null goto label5;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r13 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label5:
        $r6 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken1()>();

        if $r6 == null goto label6;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken1()>();

        $r12 = virtualinvoke $r11.<org.apache.jena.riot.tokens.Token: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label6:
        $r7 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken2()>();

        if $r7 == null goto label7;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken2()>();

        $r10 = virtualinvoke $r9.<org.apache.jena.riot.tokens.Token: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

     label7:
        $i0 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: int getCntrlCode()>();

        if $i0 == 0 goto label8;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = virtualinvoke r1.<org.apache.jena.riot.tokens.Token: int getCntrlCode()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label8:
        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean isEOF()
    {
        org.apache.jena.riot.tokens.TokenType $r1, $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCtlCode()
    {
        org.apache.jena.riot.tokens.TokenType $r1, $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType CNTRL>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isWord()
    {
        org.apache.jena.riot.tokens.TokenType $r1, $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isString()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isNumber()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 6: goto label1;
            case 7: goto label2;
            case 8: goto label1;
            case 9: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isNode()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.String $r3;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label4;
            case 8: goto label1;
            case 9: goto label1;
            case 10: goto label1;
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            case 15: goto label2;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        $r3 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ANY");

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    public boolean isNodeBasic()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            case 14: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isBasicLiteral()
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        int[] $r2;
        int $i0, $i1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label1;
            case 14: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isInteger()
    {
        org.apache.jena.riot.tokens.TokenType $r1, $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType INTEGER>;

        $z0 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenType: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isIRI()
    {
        org.apache.jena.riot.tokens.Token r0;
        org.apache.jena.riot.tokens.TokenType $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType IRI>;

        $z0 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenType: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r3 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PREFIXED_NAME>;

        $z1 = virtualinvoke $r4.<org.apache.jena.riot.tokens.TokenType: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isBNode()
    {
        org.apache.jena.riot.tokens.TokenType $r1, $r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r2 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType BNODE>;

        $z0 = virtualinvoke $r2.<org.apache.jena.riot.tokens.TokenType: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public com.hp.hpl.jena.graph.Node asNode()
    {
        com.hp.hpl.jena.graph.Node $r1;
        org.apache.jena.riot.tokens.Token r0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: com.hp.hpl.jena.graph.Node asNode(org.apache.jena.riot.system.PrefixMap)>(null);

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node asNode(org.apache.jena.riot.system.PrefixMap)
    {
        com.hp.hpl.jena.graph.Node $r8, $r9, $r10, $r13, $r17, $r22, $r37, $r51, $r53, $r56, $r59, $r62, $r65, $r67;
        java.lang.StringBuilder $r24, $r25, $r26, $r30, $r31, $r32, $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r49;
        com.hp.hpl.jena.datatypes.TypeMapper $r18;
        org.apache.jena.riot.RiotException $r23, $r29, $r38;
        java.lang.String $r3, $r5, $r6, $r7, $r11, $r12, $r19, $r21, $r27, $r33, $r34, $r35, $r36, $r42, $r45, $r48, $r50, $r52, $r55, $r58, $r61, $r64, $r66;
        org.apache.jena.riot.tokens.TokenType $r1, $r28;
        com.hp.hpl.jena.datatypes.RDFDatatype $r20;
        int[] $r2;
        com.hp.hpl.jena.rdf.model.AnonId $r54;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.jena.riot.tokens.Token r0, $r14, $r15;
        org.apache.jena.riot.system.PrefixMap r16;
        int $i0, $i1;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r57, $r60, $r63;
        com.hp.hpl.jena.sparql.core.Var $r4;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r16 := @parameter0: org.apache.jena.riot.system.PrefixMap;

        $r2 = <org.apache.jena.riot.tokens.Token$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = virtualinvoke $r1.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label13;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label08;
            case 7: goto label18;
            case 8: goto label06;
            case 9: goto label07;
            case 10: goto label01;
            case 11: goto label02;
            case 12: goto label03;
            case 13: goto label09;
            case 14: goto label12;
            case 15: goto label15;
            case 16: goto label14;
            default: goto label18;
        };

     label01:
        $r54 = new com.hp.hpl.jena.rdf.model.AnonId;

        $r55 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        specialinvoke $r54.<com.hp.hpl.jena.rdf.model.AnonId: void <init>(java.lang.String)>($r55);

        $r56 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon(com.hp.hpl.jena.rdf.model.AnonId)>($r54);

        return $r56;

     label02:
        $r52 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r53 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r52);

        return $r53;

     label03:
        if r16 != null goto label04;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("urn:prefixed-name:");

        $r45 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r48 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r50);

        return $r51;

     label04:
        $r35 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r34 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $r36 = interfaceinvoke r16.<org.apache.jena.riot.system.PrefixMap: java.lang.String expand(java.lang.String,java.lang.String)>($r35, $r34);

        if $r36 != null goto label05;

        $r38 = new org.apache.jena.riot.RiotException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t expand prefixed name: ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r42);

        throw $r38;

     label05:
        $r37 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r36);

        return $r37;

     label06:
        $r61 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r60 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $r62 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r61, null, $r60);

        return $r62;

     label07:
        $r58 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r57 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble>;

        $r59 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r58, null, $r57);

        return $r59;

     label08:
        $r64 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r63 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        $r65 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r64, null, $r63);

        return $r65;

     label09:
        $r14 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken1()>();

        $r15 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken2()>();

        if r16 != null goto label10;

        $r28 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PREFIXED_NAME>;

        $z4 = virtualinvoke $r15.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r28);

        if $z4 == 0 goto label10;

        $r29 = new org.apache.jena.riot.RiotException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid token: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r33);

        throw $r29;

     label10:
        $r17 = virtualinvoke $r15.<org.apache.jena.riot.tokens.Token: com.hp.hpl.jena.graph.Node asNode(org.apache.jena.riot.system.PrefixMap)>(r16);

        $z3 = virtualinvoke $r17.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z3 != 0 goto label11;

        $r23 = new org.apache.jena.riot.RiotException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid token: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r27);

        throw $r23;

     label11:
        $r18 = staticinvoke <com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.TypeMapper getInstance()>();

        $r19 = virtualinvoke $r17.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r20 = virtualinvoke $r18.<com.hp.hpl.jena.datatypes.TypeMapper: com.hp.hpl.jena.datatypes.RDFDatatype getSafeTypeByName(java.lang.String)>($r19);

        $r21 = virtualinvoke $r14.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r22 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r21, null, $r20);

        return $r22;

     label12:
        $r12 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r11 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $r13 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r12, $r11, null);

        return $r13;

     label13:
        $r66 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r67 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>($r66);

        return $r67;

     label14:
        $r3 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>($r3);

        return $r4;

     label15:
        $r5 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ANY");

        if $z0 == 0 goto label16;

        $r10 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeANY>;

        return $r10;

     label16:
        $r6 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z1 == 0 goto label17;

        $r9 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeTrue>;

        return $r9;

     label17:
        $r7 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z2 == 0 goto label18;

        $r8 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeFalse>;

        return $r8;

     label18:
        return null;
    }

    public boolean hasType(org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType $r1, r2;
        org.apache.jena.riot.tokens.Token r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        r2 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        if $r1 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        org.apache.jena.riot.tokens.Token r0;
        java.lang.Integer $r4;
        org.apache.jena.riot.tokens.TokenType $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $i0 = staticinvoke <org.apache.jena.atlas.lib.Lib: int hashCodeObject(java.lang.Object)>($r1);

        $r2 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $i1 = staticinvoke <org.apache.jena.atlas.lib.Lib: int hashCodeObject(java.lang.Object)>($r2);

        $i2 = $i0 ^ $i1;

        $r3 = r0.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $i3 = staticinvoke <org.apache.jena.atlas.lib.Lib: int hashCodeObject(java.lang.Object)>($r3);

        $i5 = $i2 ^ $i3;

        $i4 = r0.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $i6 = staticinvoke <org.apache.jena.atlas.lib.Lib: int hashCodeObject(java.lang.Object)>($r4);

        $i7 = $i5 ^ $i6;

        return $i7;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.jena.riot.tokens.Token r1, r2;
        java.lang.Integer $r9, $r10;
        int $i0, $i1;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.jena.riot.tokens.TokenType $r3, $r4;
        java.lang.Object r0;

        r2 := @this: org.apache.jena.riot.tokens.Token;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.jena.riot.tokens.Token;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.jena.riot.tokens.Token) r0;

        $r4 = r2.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $r3 = r1.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType tokenType>;

        $z1 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label2;

        $r6 = r2.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $r5 = r1.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage>;

        $z2 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label2;

        $r8 = r2.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $r7 = r1.<org.apache.jena.riot.tokens.Token: java.lang.String tokenImage2>;

        $z3 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label2;

        $i0 = r2.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r1.<org.apache.jena.riot.tokens.Token: int cntrlCode>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z4 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z4 == 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    public static org.apache.jena.riot.tokens.Token tokenForChar(char)
    {
        org.apache.jena.riot.tokens.Token $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        int $i1;
        java.lang.String $r22;
        char c0;
        java.lang.RuntimeException $r33;
        org.apache.jena.riot.tokens.TokenType $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        java.lang.StringBuilder $r20, $r21, $r32;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 40: goto label06;
            case 41: goto label07;
            case 44: goto label03;
            case 46: goto label01;
            case 59: goto label02;
            case 91: goto label08;
            case 93: goto label09;
            case 123: goto label04;
            case 125: goto label05;
            default: goto label10;
        };

     label01:
        $r23 = new org.apache.jena.riot.tokens.Token;

        $r11 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        specialinvoke $r23.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r11);

        return $r23;

     label02:
        $r24 = new org.apache.jena.riot.tokens.Token;

        $r9 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType SEMICOLON>;

        specialinvoke $r24.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r9);

        return $r24;

     label03:
        $r25 = new org.apache.jena.riot.tokens.Token;

        $r13 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType COMMA>;

        specialinvoke $r25.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r13);

        return $r25;

     label04:
        $r26 = new org.apache.jena.riot.tokens.Token;

        $r3 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LBRACE>;

        specialinvoke $r26.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r3);

        return $r26;

     label05:
        $r27 = new org.apache.jena.riot.tokens.Token;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACE>;

        specialinvoke $r27.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r1);

        return $r27;

     label06:
        $r28 = new org.apache.jena.riot.tokens.Token;

        $r17 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LPAREN>;

        specialinvoke $r28.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r17);

        return $r28;

     label07:
        $r29 = new org.apache.jena.riot.tokens.Token;

        $r15 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RPAREN>;

        specialinvoke $r29.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r15);

        return $r29;

     label08:
        $r30 = new org.apache.jena.riot.tokens.Token;

        $r7 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LBRACKET>;

        specialinvoke $r30.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r7);

        return $r30;

     label09:
        $r31 = new org.apache.jena.riot.tokens.Token;

        $r5 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType RBRACKET>;

        specialinvoke $r31.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType)>($r5);

        return $r31;

     label10:
        $r33 = new java.lang.RuntimeException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token error: unrecognized charcater: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r33;
    }

    public static org.apache.jena.riot.tokens.Token tokenForInteger(long)
    {
        org.apache.jena.riot.tokens.TokenType $r1;
        long l0;
        java.lang.String $r2;
        org.apache.jena.riot.tokens.Token $r0;

        l0 := @parameter0: long;

        $r0 = new org.apache.jena.riot.tokens.Token;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType INTEGER>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke $r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r1, $r2);

        return $r0;
    }

    public static org.apache.jena.riot.tokens.Token tokenForWord(java.lang.String)
    {
        org.apache.jena.riot.tokens.TokenType $r2;
        java.lang.String r1;
        org.apache.jena.riot.tokens.Token $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.jena.riot.tokens.Token;

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        specialinvoke $r0.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r2, r1);

        return $r0;
    }

    public static org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        org.apache.jena.riot.tokens.Token $r1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = staticinvoke <org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node,java.lang.String,org.apache.jena.riot.system.PrefixMap)>(r0, null, null);

        return $r1;
    }

    public static org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node, org.apache.jena.riot.system.Prologue)
    {
        org.apache.jena.riot.system.PrefixMap $r3;
        org.apache.jena.riot.system.Prologue r1;
        com.hp.hpl.jena.graph.Node r0;
        java.lang.String $r2;
        org.apache.jena.riot.tokens.Token $r4;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: org.apache.jena.riot.system.Prologue;

        $r2 = virtualinvoke r1.<org.apache.jena.riot.system.Prologue: java.lang.String getBaseURI()>();

        $r3 = virtualinvoke r1.<org.apache.jena.riot.system.Prologue: org.apache.jena.riot.system.PrefixMap getPrefixMap()>();

        $r4 = staticinvoke <org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node,java.lang.String,org.apache.jena.riot.system.PrefixMap)>(r0, $r2, $r3);

        return $r4;
    }

    public static org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node, java.lang.String, org.apache.jena.riot.system.PrefixMap)
    {
        com.hp.hpl.jena.graph.Node r0, $r1, $r53;
        java.math.BigDecimal $r19;
        java.math.BigInteger $r22;
        java.lang.String $r5, $r6, $r7, $r14, $r16, $r27, $r30, $r31, r33, $r36, $r37, $r44, $r46, r50, $r52;
        java.lang.NumberFormatException $r47, $r48, $r49;
        com.hp.hpl.jena.rdf.model.Resource $r13, $r15, $r51;
        org.apache.jena.riot.tokens.TokenType $r4, $r9, $r12, $r18, $r21, $r24, $r26, $r29, $r35, $r39, $r42, $r55, $r58;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.jena.atlas.lib.Pair $r40;
        org.apache.jena.riot.tokens.Token $r3, $r8, $r10, $r11, $r17, $r20, $r23, $r25, $r28, $r34, $r38, $r41, $r54, $r56, $r57;
        org.apache.jena.riot.system.PrefixMap r32;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object $r43, $r45;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r33 := @parameter1: java.lang.String;

        r32 := @parameter2: org.apache.jena.riot.system.PrefixMap;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 == 0 goto label03;

        $r31 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        if r32 == null goto label01;

        $r40 = interfaceinvoke r32.<org.apache.jena.riot.system.PrefixMap: org.apache.jena.atlas.lib.Pair abbrev(java.lang.String)>($r31);

        if $r40 == null goto label01;

        $r41 = new org.apache.jena.riot.tokens.Token;

        $r42 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PREFIXED_NAME>;

        $r43 = virtualinvoke $r40.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r44 = (java.lang.String) $r43;

        $r45 = virtualinvoke $r40.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r46 = (java.lang.String) $r45;

        specialinvoke $r41.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String,java.lang.String)>($r42, $r44, $r46);

        return $r41;

     label01:
        if r33 == null goto label02;

        $r37 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String abbrevByBase(java.lang.String,java.lang.String)>($r31, r33);

        if $r37 == null goto label02;

        $r38 = new org.apache.jena.riot.tokens.Token;

        $r39 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType IRI>;

        specialinvoke $r38.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r39, $r37);

        return $r38;

     label02:
        $r34 = new org.apache.jena.riot.tokens.Token;

        $r35 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType IRI>;

        $r36 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        specialinvoke $r34.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r35, $r36);

        return $r34;

     label03:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z1 == 0 goto label04;

        $r28 = new org.apache.jena.riot.tokens.Token;

        $r29 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType BNODE>;

        $r30 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        specialinvoke $r28.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r29, $r30);

        return $r28;

     label04:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z2 == 0 goto label05;

        $r25 = new org.apache.jena.riot.tokens.Token;

        $r26 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType VAR>;

        $r27 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getName()>();

        specialinvoke $r25.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r26, $r27);

        return $r25;

     label05:
        $z3 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z3 == 0 goto label21;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralDatatypeURI()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLanguage()>();

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        if $r5 == null goto label19;

        $r13 = <com.hp.hpl.jena.vocabulary.XSD: com.hp.hpl.jena.rdf.model.Resource integer>;

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z5 == 0 goto label10;

     label06:
        r50 = $r7;

        $z7 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z7 == 0 goto label07;

        r50 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);

     label07:
        $r22 = new java.math.BigInteger;

        specialinvoke $r22.<java.math.BigInteger: void <init>(java.lang.String)>(r50);

        $r23 = new org.apache.jena.riot.tokens.Token;

        $r24 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType INTEGER>;

        specialinvoke $r23.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r24, $r7);

     label08:
        return $r23;

     label09:
        $r49 := @caughtexception;

     label10:
        $r15 = <com.hp.hpl.jena.vocabulary.XSD: com.hp.hpl.jena.rdf.model.Resource decimal>;

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z6 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label14;

        $i3 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(46);

        if $i3 <= 0 goto label14;

     label11:
        $r19 = new java.math.BigDecimal;

        specialinvoke $r19.<java.math.BigDecimal: void <init>(java.lang.String)>($r7);

        $r20 = new org.apache.jena.riot.tokens.Token;

        $r21 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DECIMAL>;

        specialinvoke $r20.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r21, $r7);

     label12:
        return $r20;

     label13:
        $r48 := @caughtexception;

     label14:
        $r51 = <com.hp.hpl.jena.vocabulary.XSD: com.hp.hpl.jena.rdf.model.Resource xdouble>;

        $r52 = interfaceinvoke $r51.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $z8 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z8 == 0 goto label18;

        $i1 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(101);

        if $i1 >= 0 goto label15;

        $i2 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(69);

        if $i2 < 0 goto label18;

     label15:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r7);

        $r17 = new org.apache.jena.riot.tokens.Token;

        $r18 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOUBLE>;

        specialinvoke $r17.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r18, $r7);

     label16:
        return $r17;

     label17:
        $r47 := @caughtexception;

     label18:
        $r53 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r5);

        $r54 = new org.apache.jena.riot.tokens.Token;

        $r55 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING>;

        specialinvoke $r54.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r55, $r7);

        $r56 = staticinvoke <org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token tokenForNode(com.hp.hpl.jena.graph.Node)>($r53);

        $r57 = new org.apache.jena.riot.tokens.Token;

        $r58 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LITERAL_DT>;

        specialinvoke $r57.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r58, $r7);

        virtualinvoke $r57.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken1(org.apache.jena.riot.tokens.Token)>($r54);

        virtualinvoke $r57.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setSubToken2(org.apache.jena.riot.tokens.Token)>($r56);

        return $r57;

     label19:
        if $r6 == null goto label20;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label20;

        $r10 = new org.apache.jena.riot.tokens.Token;

        specialinvoke $r10.<org.apache.jena.riot.tokens.Token: void <init>(java.lang.String)>($r7);

        $r11 = new org.apache.jena.riot.tokens.Token;

        $r12 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType LITERAL_LANG>;

        specialinvoke $r11.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String,java.lang.String,org.apache.jena.riot.tokens.Token,org.apache.jena.riot.tokens.Token)>($r12, $r7, $r6, $r10, null);

        return $r11;

     label20:
        $r8 = new org.apache.jena.riot.tokens.Token;

        $r9 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STRING>;

        specialinvoke $r8.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r9, $r7);

        return $r8;

     label21:
        $r1 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z4 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label22;

        $r3 = new org.apache.jena.riot.tokens.Token;

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        specialinvoke $r3.<org.apache.jena.riot.tokens.Token: void <init>(org.apache.jena.riot.tokens.TokenType,java.lang.String)>($r4, "ANY");

        return $r3;

     label22:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

        catch java.lang.NumberFormatException from label06 to label08 with label09;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch java.lang.NumberFormatException from label15 to label16 with label17;
    }

    public static void <clinit>()
    {
        <org.apache.jena.riot.tokens.Token: java.lang.String delim2> = "";

        <org.apache.jena.riot.tokens.Token: java.lang.String delim1> = "";

        <org.apache.jena.riot.tokens.Token: java.lang.String ImageFalse> = "false";

        <org.apache.jena.riot.tokens.Token: java.lang.String ImageTrue> = "true";

        <org.apache.jena.riot.tokens.Token: java.lang.String ImageANY> = "ANY";

        return;
    }
}
