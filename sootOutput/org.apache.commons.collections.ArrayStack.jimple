public class org.apache.commons.collections.ArrayStack extends java.util.ArrayList implements org.apache.commons.collections.Buffer
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections.ArrayStack r0;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.commons.collections.ArrayStack r0;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        return;
    }

    public boolean empty()
    {
        org.apache.commons.collections.ArrayStack r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object peek() throws java.util.EmptyStackException
    {
        java.util.EmptyStackException $r2;
        int $i0, $i1;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        if $i0 > 0 goto label1;

        $r2 = new java.util.EmptyStackException;

        specialinvoke $r2.<java.util.EmptyStackException: void <init>()>();

        throw $r2;

     label1:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object get(int)>($i1);

        return $r1;
    }

    public java.lang.Object peek(int) throws java.util.EmptyStackException
    {
        java.util.EmptyStackException $r2;
        int $i0, i1, $i2, i3;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        $i2 = $i0 - i1;

        i3 = $i2 - 1;

        if i3 >= 0 goto label1;

        $r2 = new java.util.EmptyStackException;

        specialinvoke $r2.<java.util.EmptyStackException: void <init>()>();

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object get(int)>(i3);

        return $r1;
    }

    public java.lang.Object pop() throws java.util.EmptyStackException
    {
        java.util.EmptyStackException $r2;
        int $i0, $i1;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        if $i0 > 0 goto label1;

        $r2 = new java.util.EmptyStackException;

        specialinvoke $r2.<java.util.EmptyStackException: void <init>()>();

        throw $r2;

     label1:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object remove(int)>($i1);

        return $r1;
    }

    public java.lang.Object push(java.lang.Object)
    {
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.ArrayStack: boolean add(java.lang.Object)>(r1);

        return r1;
    }

    public int search(java.lang.Object)
    {
        int $i0, i1, i2, $i4, $i6;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        r2 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        i1 = $i0 - 1;

        i2 = 1;

     label1:
        if i1 < 0 goto label5;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object get(int)>(i1);

        if r2 != null goto label2;

        if $r1 == null goto label3;

     label2:
        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

     label3:
        return i2;

     label4:
        $i4 = (int) -1;

        i1 = i1 + $i4;

        i2 = i2 + 1;

        goto label1;

     label5:
        $i6 = (int) -1;

        return $i6;
    }

    public java.lang.Object get()
    {
        org.apache.commons.collections.BufferUnderflowException $r2;
        int $i0, $i1;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        if $i0 != 0 goto label1;

        $r2 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r2.<org.apache.commons.collections.BufferUnderflowException: void <init>()>();

        throw $r2;

     label1:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object get(int)>($i1);

        return $r1;
    }

    public java.lang.Object remove()
    {
        org.apache.commons.collections.BufferUnderflowException $r2;
        int $i0, $i1;
        org.apache.commons.collections.ArrayStack r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.ArrayStack;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: int size()>();

        if $i0 != 0 goto label1;

        $r2 = new org.apache.commons.collections.BufferUnderflowException;

        specialinvoke $r2.<org.apache.commons.collections.BufferUnderflowException: void <init>()>();

        throw $r2;

     label1:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ArrayStack: java.lang.Object remove(int)>($i1);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.ArrayStack: long serialVersionUID> = 2130079159931574599L;

        return;
    }
}
