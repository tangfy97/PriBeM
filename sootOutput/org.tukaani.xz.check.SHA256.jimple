public class org.tukaani.xz.check.SHA256 extends org.tukaani.xz.check.Check
{
    private final java.security.MessageDigest sha256;

    public void <init>() throws java.security.NoSuchAlgorithmException
    {
        org.tukaani.xz.check.SHA256 r0;
        java.security.MessageDigest $r1;

        r0 := @this: org.tukaani.xz.check.SHA256;

        specialinvoke r0.<org.tukaani.xz.check.Check: void <init>()>();

        r0.<org.tukaani.xz.check.SHA256: int size> = 32;

        r0.<org.tukaani.xz.check.SHA256: java.lang.String name> = "SHA-256";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        r0.<org.tukaani.xz.check.SHA256: java.security.MessageDigest sha256> = $r1;

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        org.tukaani.xz.check.SHA256 r0;
        java.security.MessageDigest $r2;
        int i0, i1;

        r0 := @this: org.tukaani.xz.check.SHA256;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.tukaani.xz.check.SHA256: java.security.MessageDigest sha256>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public byte[] finish()
    {
        byte[] $r2;
        org.tukaani.xz.check.SHA256 r0;
        java.security.MessageDigest $r1, $r3;

        r0 := @this: org.tukaani.xz.check.SHA256;

        $r1 = r0.<org.tukaani.xz.check.SHA256: java.security.MessageDigest sha256>;

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r3 = r0.<org.tukaani.xz.check.SHA256: java.security.MessageDigest sha256>;

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        return $r2;
    }
}
