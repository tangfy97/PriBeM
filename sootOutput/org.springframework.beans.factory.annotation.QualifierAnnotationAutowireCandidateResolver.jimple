public class org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver extends java.lang.Object implements org.springframework.beans.factory.support.AutowireCandidateResolver, org.springframework.beans.factory.BeanFactoryAware
{
    private final java.util.Set qualifierTypes;
    private java.lang.Class valueAnnotationType;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>()
    {
        java.util.Set $r2, $r5;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Class $r3, $r6;
        java.lang.ClassNotFoundException $r7;
        java.lang.ClassLoader $r4;
        java.util.LinkedHashSet $r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes> = $r1;

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Class valueAnnotationType> = class "Lorg/springframework/beans/factory/annotation/Value;";

        $r2 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(class "Lorg/springframework/beans/factory/annotation/Qualifier;");

        $r3 = class "Lorg/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r5 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        $r6 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("javax.inject.Qualifier");

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public void <init>(java.lang.Class)
    {
        java.util.Set $r3;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Class r2;
        java.util.LinkedHashSet $r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes> = $r1;

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Class valueAnnotationType> = class "Lorg/springframework/beans/factory/annotation/Value;";

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "\'qualifierType\' must not be null");

        $r3 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void <init>(java.util.Set)
    {
        java.util.Set r2, $r3;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r2 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes> = $r1;

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Class valueAnnotationType> = class "Lorg/springframework/beans/factory/annotation/Value;";

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "\'qualifierTypes\' must not be null");

        $r3 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public void addQualifierType(java.lang.Class)
    {
        java.util.Set $r2;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setValueAnnotationType(java.lang.Class)
    {
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r1 := @parameter0: java.lang.Class;

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Class valueAnnotationType> = r1;

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    public boolean isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)
    {
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r3;
        java.lang.'annotation'.Annotation[] $r4, $r7;
        org.springframework.beans.factory.config.DependencyDescriptor r2;
        org.springframework.beans.factory.config.BeanDefinitionHolder r0;
        org.springframework.core.MethodParameter $r5;
        org.springframework.beans.factory.config.BeanDefinition $r1;
        java.lang.Class $r8, $r9;
        java.lang.reflect.Method $r6;
        boolean $z0, $z1, $z2, z3;

        r3 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r0 := @parameter0: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r2 := @parameter1: org.springframework.beans.factory.config.DependencyDescriptor;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        $z0 = interfaceinvoke $r1.<org.springframework.beans.factory.config.BeanDefinition: boolean isAutowireCandidate()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r2 != null goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r2.<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $z1 = virtualinvoke r3.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifiers(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.'annotation'.Annotation[])>(r0, $r4);

        z3 = $z1;

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r2.<org.springframework.beans.factory.config.DependencyDescriptor: org.springframework.core.MethodParameter getMethodParameter()>();

        if $r5 == null goto label4;

        $r6 = virtualinvoke $r5.<org.springframework.core.MethodParameter: java.lang.reflect.Method getMethod()>();

        if $r6 == null goto label3;

        $r8 = <java.lang.Void: java.lang.Class TYPE>;

        $r9 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

     label3:
        $r7 = virtualinvoke $r5.<org.springframework.core.MethodParameter: java.lang.'annotation'.Annotation[] getMethodAnnotations()>();

        z3 = virtualinvoke r3.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifiers(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.'annotation'.Annotation[])>(r0, $r7);

     label4:
        return z3;
    }

    protected boolean checkQualifiers(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.'annotation'.Annotation[])
    {
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r4;
        java.lang.'annotation'.Annotation[] r0;
        org.springframework.beans.factory.config.BeanDefinitionHolder r5;
        int i0, i1;
        java.lang.'annotation'.Annotation r2;
        java.lang.Class $r3;
        boolean $z0, $z1, $z2;
        org.springframework.beans.SimpleTypeConverter $r1;

        r4 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r5 := @parameter0: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r0 := @parameter1: java.lang.'annotation'.Annotation[];

        $z0 = staticinvoke <org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = new org.springframework.beans.SimpleTypeConverter;

        specialinvoke $r1.<org.springframework.beans.SimpleTypeConverter: void <init>()>();

        i0 = lengthof r0;

        i1 = 0;

        goto label4;

     label2:
        r2 = r0[i1];

        $r3 = interfaceinvoke r2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z1 = virtualinvoke r4.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: boolean isQualifier(java.lang.Class)>($r3);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r4.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.'annotation'.Annotation,org.springframework.beans.TypeConverter)>(r5, r2, $r1);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label2;

        return 1;
    }

    protected boolean isQualifier(java.lang.Class)
    {
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Object $r3;
        java.lang.Class r4, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r5 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.util.Set qualifierTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r3;

        $z1 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(r4);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return 0;
    }

    protected boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.'annotation'.Annotation, org.springframework.beans.TypeConverter)
    {
        org.springframework.beans.factory.support.AutowireCandidateQualifier $r6, r28;
        java.util.Map $r30;
        org.springframework.beans.TypeConverter r13;
        java.lang.reflect.Method $r17, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r7;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r18;
        java.lang.'annotation'.Annotation r0, r29;
        org.springframework.beans.factory.support.RootBeanDefinition r4;
        org.springframework.beans.factory.config.BeanDefinitionHolder r2;
        org.springframework.beans.factory.config.BeanDefinition $r3;
        java.lang.String $r5, r11, $r15, $r16, $r23, $r27;
        java.util.Map$Entry r31;
        java.util.Iterator $r8;
        org.springframework.beans.factory.BeanFactory $r19, $r22;
        java.lang.Class $r1, $r14, $r20, $r21, $r24, $r25;
        java.lang.Object $r9, $r10, $r12, r32;

        r18 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r2 := @parameter0: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r0 := @parameter1: java.lang.'annotation'.Annotation;

        r13 := @parameter2: org.springframework.beans.TypeConverter;

        $r1 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()>();

        r4 = (org.springframework.beans.factory.support.RootBeanDefinition) $r3;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.support.AutowireCandidateQualifier getQualifier(java.lang.String)>($r5);

        r28 = $r6;

        if $r6 != null goto label01;

        $r27 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>($r1);

        r28 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.support.AutowireCandidateQualifier getQualifier(java.lang.String)>($r27);

     label01:
        if r28 != null goto label05;

        r29 = null;

        $r17 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>();

        if $r17 == null goto label02;

        $r26 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.reflect.Method getResolvedFactoryMethod()>();

        r29 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

     label02:
        if r29 != null goto label04;

        $r19 = r18.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r19 == null goto label03;

        $r22 = r18.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: org.springframework.beans.factory.BeanFactory beanFactory>;

        $r23 = virtualinvoke r2.<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getBeanName()>();

        $r24 = interfaceinvoke $r22.<org.springframework.beans.factory.BeanFactory: java.lang.Class getType(java.lang.String)>($r23);

        if $r24 == null goto label03;

        $r25 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>($r24);

        r29 = virtualinvoke $r25.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

     label03:
        if r29 != null goto label04;

        $z5 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: boolean hasBeanClass()>();

        if $z5 == 0 goto label04;

        $r20 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Class getBeanClass()>();

        $r21 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>($r20);

        r29 = virtualinvoke $r21.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r1);

     label04:
        if r29 == null goto label05;

        $z4 = interfaceinvoke r29.<java.lang.'annotation'.Annotation: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label05;

        return 1;

     label05:
        $r30 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.'annotation'.Annotation)>(r0);

        $z6 = interfaceinvoke $r30.<java.util.Map: boolean isEmpty()>();

        if $z6 == 0 goto label06;

        if r28 != null goto label06;

        return 0;

     label06:
        $r7 = interfaceinvoke $r30.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        goto label13;

     label07:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (java.lang.String) $r10;

        $r12 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getValue()>();

        r32 = null;

        if r28 == null goto label08;

        r32 = virtualinvoke r28.<org.springframework.beans.factory.support.AutowireCandidateQualifier: java.lang.Object getAttribute(java.lang.String)>(r11);

     label08:
        if r32 != null goto label09;

        r32 = virtualinvoke r4.<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.Object getAttribute(java.lang.String)>(r11);

     label09:
        if r32 != null goto label10;

        $r15 = <org.springframework.beans.factory.support.AutowireCandidateQualifier: java.lang.String VALUE_KEY>;

        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label10;

        $z2 = $r12 instanceof java.lang.String;

        if $z2 == 0 goto label10;

        $r16 = (java.lang.String) $r12;

        $z3 = virtualinvoke r2.<org.springframework.beans.factory.config.BeanDefinitionHolder: boolean matchesName(java.lang.String)>($r16);

        if $z3 == 0 goto label10;

        goto label13;

     label10:
        if r32 != null goto label11;

        if r28 == null goto label11;

        r32 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.Object getDefaultValue(java.lang.'annotation'.Annotation,java.lang.String)>(r0, r11);

     label11:
        if r32 == null goto label12;

        $r14 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        r32 = interfaceinvoke r13.<org.springframework.beans.TypeConverter: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>(r32, $r14);

     label12:
        $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>(r32);

        if $z0 != 0 goto label13;

        return 0;

     label13:
        $z7 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z7 != 0 goto label07;

        return 1;
    }

    public java.lang.Object getSuggestedValue(org.springframework.beans.factory.config.DependencyDescriptor)
    {
        org.springframework.core.MethodParameter $r4;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r0;
        java.lang.Object $r3, r6;
        java.lang.'annotation'.Annotation[] $r2, $r5;
        org.springframework.beans.factory.config.DependencyDescriptor r1;

        r0 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r1 := @parameter0: org.springframework.beans.factory.config.DependencyDescriptor;

        $r2 = virtualinvoke r1.<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r3 = virtualinvoke r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.'annotation'.Annotation[])>($r2);

        r6 = $r3;

        if $r3 != null goto label1;

        $r4 = virtualinvoke r1.<org.springframework.beans.factory.config.DependencyDescriptor: org.springframework.core.MethodParameter getMethodParameter()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<org.springframework.core.MethodParameter: java.lang.'annotation'.Annotation[] getMethodAnnotations()>();

        r6 = virtualinvoke r0.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Object findValue(java.lang.'annotation'.Annotation[])>($r5);

     label1:
        return r6;
    }

    protected java.lang.Object findValue(java.lang.'annotation'.Annotation[])
    {
        java.lang.IllegalStateException $r5;
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver r2;
        java.lang.'annotation'.Annotation[] r0;
        int i0, i1;
        java.lang.'annotation'.Annotation r1;
        java.lang.Class $r3;
        java.lang.Object $r4;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        r0 := @parameter0: java.lang.'annotation'.Annotation[];

        i0 = lengthof r0;

        i1 = 0;

        goto label4;

     label1:
        r1 = r0[i1];

        $r3 = r2.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: java.lang.Class valueAnnotationType>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.Object getValue(java.lang.'annotation'.Annotation)>(r1);

        if $r4 != null goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Value annotation must have a value attribute");

        throw $r5;

     label2:
        return $r4;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label1;

        return null;
    }
}
