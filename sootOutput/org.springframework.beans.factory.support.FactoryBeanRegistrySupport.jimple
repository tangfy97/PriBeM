public abstract class org.springframework.beans.factory.support.FactoryBeanRegistrySupport extends org.springframework.beans.factory.support.DefaultSingletonBeanRegistry
{
    private final java.util.Map factoryBeanObjectCache;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r0;

        r0 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        specialinvoke r0.<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.util.Map factoryBeanObjectCache> = $r1;

        return;
    }

    protected java.lang.Class getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)
    {
        java.security.AccessControlContext $r5;
        java.lang.Throwable $r8;
        java.lang.SecurityManager $r0;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r4;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1 $r3;
        org.springframework.beans.factory.FactoryBean r1;
        java.lang.Class $r2, $r7;
        java.lang.Object $r6;
        org.apache.commons.logging.Log $r9;

        r4 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r1 := @parameter0: org.springframework.beans.factory.FactoryBean;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label3;

        $r3 = new org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1;

        specialinvoke $r3.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>(r4, r1);

        $r5 = virtualinvoke r4.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.security.AccessControlContext getAccessControlContext()>();

        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>($r3, $r5);

        $r7 = (java.lang.Class) $r6;

     label2:
        return $r7;

     label3:
        $r2 = interfaceinvoke r1.<org.springframework.beans.factory.FactoryBean: java.lang.Class getObjectType()>();

     label4:
        return $r2;

     label5:
        $r8 := @caughtexception;

        $r9 = r4.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("FactoryBean threw exception from getObjectType, despite the contract saying that it should return null if the type of its object cannot be determined yet", $r8);

        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected java.lang.Object getCachedObjectForFactoryBean(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3, $r4, $r5;
        java.lang.String r1;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r0;

        r0 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.util.Map factoryBeanObjectCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = <org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object NULL_OBJECT>;

        if $r3 == $r4 goto label1;

        $r5 = $r3;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    protected java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean, java.lang.String, boolean)
    {
        java.lang.Throwable $r9;
        org.springframework.beans.factory.FactoryBean r0;
        java.util.Map $r5, $r8;
        java.lang.String r2;
        boolean $z0, z1, $z2;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r1;
        java.lang.Object $r3, $r4, $r6, $r7, r10, $r11, $r12, $r13;

        r1 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r0 := @parameter0: org.springframework.beans.factory.FactoryBean;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.FactoryBean: boolean isSingleton()>();

        if $z0 == 0 goto label10;

        $z2 = virtualinvoke r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: boolean containsSingleton(java.lang.String)>(r2);

        if $z2 == 0 goto label10;

        $r4 = virtualinvoke r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getSingletonMutex()>();

        entermonitor $r4;

     label01:
        $r5 = r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.util.Map factoryBeanObjectCache>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r10 = $r6;

        if $r6 != null goto label04;

        $r7 = specialinvoke r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>(r0, r2, z1);

        r10 = $r7;

        $r8 = r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.util.Map factoryBeanObjectCache>;

        if $r7 == null goto label02;

        $r11 = $r7;

        goto label03;

     label02:
        $r11 = <org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object NULL_OBJECT>;

     label03:
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r11);

     label04:
        $r12 = <org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object NULL_OBJECT>;

        if r10 == $r12 goto label05;

        $r13 = r10;

        goto label06;

     label05:
        $r13 = null;

     label06:
        exitmonitor $r4;

     label07:
        return $r13;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label09:
        throw $r9;

     label10:
        $r3 = specialinvoke r1.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)>(r0, r2, z1);

        return $r3;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private java.lang.Object doGetObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean, java.lang.String, boolean) throws org.springframework.beans.factory.BeanCreationException
    {
        java.security.AccessControlContext $r5;
        java.lang.Throwable $r7, $r9;
        org.springframework.beans.factory.BeanCurrentlyInCreationException $r4, $r12;
        org.springframework.beans.factory.FactoryBean r1;
        org.springframework.beans.factory.BeanCreationException $r8, $r10;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r11;
        java.lang.String r3, $r13;
        boolean z0, $z1;
        java.security.PrivilegedActionException $r14;
        java.lang.SecurityManager $r0;
        java.lang.Exception $r15;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r2;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2 $r6;
        java.lang.Object r16;

        r2 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r1 := @parameter0: org.springframework.beans.factory.FactoryBean;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

     label01:
        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label05;

        $r5 = virtualinvoke r2.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.security.AccessControlContext getAccessControlContext()>();

     label02:
        $r6 = new org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2;

        specialinvoke $r6.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport$2: void <init>(org.springframework.beans.factory.support.FactoryBeanRegistrySupport,org.springframework.beans.factory.FactoryBean)>(r2, r1);

        r16 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>($r6, $r5);

     label03:
        goto label09;

     label04:
        $r14 := @caughtexception;

        $r15 = virtualinvoke $r14.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        throw $r15;

     label05:
        r16 = interfaceinvoke r1.<org.springframework.beans.factory.FactoryBean: java.lang.Object getObject()>();

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        $r12 = new org.springframework.beans.factory.BeanCurrentlyInCreationException;

        $r13 = virtualinvoke $r11.<org.springframework.beans.factory.FactoryBeanNotInitializedException: java.lang.String toString()>();

        specialinvoke $r12.<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String,java.lang.String)>(r3, $r13);

        throw $r12;

     label08:
        $r9 := @caughtexception;

        $r10 = new org.springframework.beans.factory.BeanCreationException;

        specialinvoke $r10.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r3, "FactoryBean threw exception on object creation", $r9);

        throw $r10;

     label09:
        if r16 != null goto label10;

        $z1 = virtualinvoke r2.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: boolean isSingletonCurrentlyInCreation(java.lang.String)>(r3);

        if $z1 == 0 goto label10;

        $r4 = new org.springframework.beans.factory.BeanCurrentlyInCreationException;

        specialinvoke $r4.<org.springframework.beans.factory.BeanCurrentlyInCreationException: void <init>(java.lang.String,java.lang.String)>(r3, "FactoryBean which is currently in creation returned null from getObject");

        throw $r4;

     label10:
        if r16 == null goto label14;

        if z0 == 0 goto label14;

     label11:
        r16 = virtualinvoke r2.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object,java.lang.String)>(r16, r3);

     label12:
        goto label14;

     label13:
        $r7 := @caughtexception;

        $r8 = new org.springframework.beans.factory.BeanCreationException;

        specialinvoke $r8.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(r3, "Post-processing of the FactoryBean\'s object failed", $r7);

        throw $r8;

     label14:
        return r16;

        catch java.security.PrivilegedActionException from label02 to label03 with label04;
        catch org.springframework.beans.factory.FactoryBeanNotInitializedException from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    protected java.lang.Object postProcessObjectFromFactoryBean(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.Object r0;
        java.lang.String r2;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r1;

        r1 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    protected org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String, java.lang.Object) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r9;
        org.springframework.beans.factory.FactoryBean $r1;
        org.springframework.beans.factory.BeanCreationException $r2;
        java.lang.Object r0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.Class $r5;
        java.lang.String r3, $r8;
        boolean $z0;

        r9 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.springframework.beans.factory.FactoryBean;

        if $z0 != 0 goto label1;

        $r2 = new org.springframework.beans.factory.BeanCreationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Bean instance of type [");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a FactoryBean");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String)>(r3, $r8);

        throw $r2;

     label1:
        $r1 = (org.springframework.beans.factory.FactoryBean) r0;

        return $r1;
    }

    protected void removeSingleton(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r0;
        java.util.Map $r2;

        r0 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void removeSingleton(java.lang.String)>(r1);

        $r2 = r0.<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.util.Map factoryBeanObjectCache>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    protected java.security.AccessControlContext getAccessControlContext()
    {
        java.security.AccessControlContext $r0;
        org.springframework.beans.factory.support.FactoryBeanRegistrySupport r1;

        r1 := @this: org.springframework.beans.factory.support.FactoryBeanRegistrySupport;

        $r0 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();

        return $r0;
    }
}
