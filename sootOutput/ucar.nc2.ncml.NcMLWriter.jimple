public class ucar.nc2.ncml.NcMLWriter extends java.lang.Object
{
    protected static final org.jdom.Namespace ncNS;
    protected static final org.jdom.Namespace xsiNS;
    private static org.slf4j.Logger log;
    private ucar.nc2.dataset.NetcdfDataset ncd;
    private org.jdom.output.XMLOutputter fmt;
    private ucar.nc2.Variable aggCoord;

    public void <init>()
    {
        ucar.nc2.ncml.NcMLWriter r0;

        r0 := @this: ucar.nc2.ncml.NcMLWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String writeXML(ucar.nc2.NetcdfFile) throws java.io.IOException
    {
        org.jdom.output.Format $r4;
        org.jdom.output.XMLOutputter $r3, $r5;
        org.jdom.Document $r6;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r7;
        ucar.nc2.dataset.NetcdfDataset $r2, $r8;
        ucar.nc2.ncml.NcMLWriter r1;
        boolean $z0;

        r1 := @this: ucar.nc2.ncml.NcMLWriter;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $z0 = r0 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z0 == 0 goto label1;

        $r8 = (ucar.nc2.dataset.NetcdfDataset) r0;

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r8;

        goto label2;

     label1:
        $r2 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,boolean)>(r0, 0);

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r2;

     label2:
        $r3 = new org.jdom.output.XMLOutputter;

        $r4 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r3.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r4);

        r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt> = $r3;

        $r5 = r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt>;

        $r6 = specialinvoke r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.Document makeDocument(java.lang.String)>(null);

        $r7 = virtualinvoke $r5.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r6);

        return $r7;
    }

    public java.lang.String writeXML(ucar.nc2.Variable) throws java.io.IOException
    {
        org.jdom.Document $r4;
        org.jdom.output.Format $r2;
        ucar.nc2.Variable r6;
        org.jdom.output.XMLOutputter $r1, $r3;
        java.lang.String $r5;
        ucar.nc2.ncml.NcMLWriter r0;

        r0 := @this: ucar.nc2.ncml.NcMLWriter;

        r6 := @parameter0: ucar.nc2.Variable;

        $r1 = new org.jdom.output.XMLOutputter;

        $r2 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r1.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r2);

        r0.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt> = $r1;

        $r3 = r0.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt>;

        $r4 = specialinvoke r0.<ucar.nc2.ncml.NcMLWriter: org.jdom.Document makeDocument(java.lang.String)>(null);

        $r5 = virtualinvoke $r3.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r4);

        return $r5;
    }

    public void writeXML(ucar.nc2.NetcdfFile, java.lang.String) throws java.io.IOException
    {
        java.io.FileOutputStream $r1;
        java.lang.String r2;
        ucar.nc2.NetcdfFile r4;
        ucar.nc2.ncml.NcMLWriter r3;
        java.io.BufferedOutputStream $r0;

        r3 := @this: ucar.nc2.ncml.NcMLWriter;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(r2, 0);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke r3.<ucar.nc2.ncml.NcMLWriter: void writeXML(ucar.nc2.NetcdfFile,java.io.OutputStream,java.lang.String)>(r4, $r0, null);

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

        return;
    }

    public void writeXML(ucar.nc2.NetcdfFile, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r8;
        org.jdom.output.Format $r4;
        org.jdom.output.XMLOutputter $r3, $r6;
        org.jdom.Document $r7;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r5;
        ucar.nc2.dataset.NetcdfDataset $r2, $r9;
        ucar.nc2.ncml.NcMLWriter r1;
        boolean $z0;

        r1 := @this: ucar.nc2.ncml.NcMLWriter;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r8 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: java.lang.String;

        $z0 = r0 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z0 == 0 goto label1;

        $r9 = (ucar.nc2.dataset.NetcdfDataset) r0;

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r9;

        goto label2;

     label1:
        $r2 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,boolean)>(r0, 0);

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r2;

     label2:
        $r3 = new org.jdom.output.XMLOutputter;

        $r4 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r3.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r4);

        r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt> = $r3;

        $r6 = r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt>;

        $r7 = specialinvoke r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.Document makeDocument(java.lang.String)>(r5);

        virtualinvoke $r6.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r7, r8);

        return;
    }

    public void writeXMLexplicit(ucar.nc2.NetcdfFile, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r10;
        org.jdom.output.Format $r4;
        org.jdom.output.XMLOutputter $r3, $r11;
        org.jdom.Document $r6;
        org.jdom.Namespace $r9;
        ucar.nc2.NetcdfFile r0;
        java.lang.String r5;
        ucar.nc2.dataset.NetcdfDataset $r2, $r12;
        org.jdom.Element $r7, $r8;
        ucar.nc2.ncml.NcMLWriter r1;
        boolean $z0;

        r1 := @this: ucar.nc2.ncml.NcMLWriter;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r10 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: java.lang.String;

        $z0 = r0 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z0 == 0 goto label1;

        $r12 = (ucar.nc2.dataset.NetcdfDataset) r0;

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r12;

        goto label2;

     label1:
        $r2 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,boolean)>(r0, 0);

        r1.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd> = $r2;

     label2:
        $r3 = new org.jdom.output.XMLOutputter;

        $r4 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r3.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r4);

        r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt> = $r3;

        $r6 = specialinvoke r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.Document makeDocument(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r8 = new org.jdom.Element;

        $r9 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        specialinvoke $r8.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("explicit", $r9);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        $r11 = r1.<ucar.nc2.ncml.NcMLWriter: org.jdom.output.XMLOutputter fmt>;

        virtualinvoke $r11.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r6, r10);

        return;
    }

    private org.jdom.Document makeDocument(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation $r10;
        org.jdom.Document $r2;
        org.jdom.Namespace $r1, $r3;
        ucar.nc2.Variable $r15;
        java.lang.String $r6, $r8, $r13, $r17, $r19, $r20, r22;
        ucar.nc2.ncml.NcMLWriter r4;
        ucar.nc2.Group $r12;
        org.jdom.Element $r0;
        ucar.nc2.dataset.NetcdfDataset $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r21;

        r4 := @this: ucar.nc2.ncml.NcMLWriter;

        r22 := @parameter0: java.lang.String;

        $r0 = new org.jdom.Element;

        $r1 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("netcdf", $r1);

        $r2 = new org.jdom.Document;

        specialinvoke $r2.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r3 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r3);

        if null != r22 goto label1;

        $r21 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        r22 = virtualinvoke $r21.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

     label1:
        if null == r22 goto label2;

        $r20 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String canonicalizeWrite(java.lang.String)>(r22);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("location", $r20);

     label2:
        $r5 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getId()>();

        if null == $r6 goto label3;

        $r18 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r19 = virtualinvoke $r18.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getId()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("id", $r19);

     label3:
        $r7 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getTitle()>();

        if null == $r8 goto label4;

        $r16 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r17 = virtualinvoke $r16.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getTitle()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("title", $r17);

     label4:
        $r9 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.ncml.Aggregation getAggregation()>();

        if $r10 == null goto label5;

        $r13 = virtualinvoke $r10.<ucar.nc2.ncml.Aggregation: java.lang.String getDimensionName()>();

        $r14 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r15 = virtualinvoke $r14.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r13);

        r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.Variable aggCoord> = $r15;

     label5:
        $r11 = r4.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.dataset.NetcdfDataset ncd>;

        $r12 = virtualinvoke $r11.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        specialinvoke r4.<ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeGroup(org.jdom.Element,ucar.nc2.Group)>($r0, $r12);

        return $r2;
    }

    public static org.jdom.Element writeAttribute(ucar.nc2.Attribute, java.lang.String, org.jdom.Namespace)
    {
        int $i0, i1;
        org.jdom.Namespace r2;
        java.lang.String r1, $r4, $r7, $r9, $r10, $r15, $r17;
        java.lang.Number $r8;
        boolean $z0;
        org.slf4j.Logger $r12;
        ucar.ma2.DataType $r5, $r16;
        ucar.nc2.Attribute r3;
        java.lang.StringBuilder $r6, $r11, $r13, $r14;
        org.jdom.Element $r0;

        r3 := @parameter0: ucar.nc2.Attribute;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.jdom.Namespace;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>(r1, r2);

        $r4 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r4);

        $r5 = virtualinvoke r3.<ucar.nc2.Attribute: ucar.ma2.DataType getDataType()>();

        if $r5 == null goto label1;

        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r5 == $r16 goto label1;

        $r17 = virtualinvoke $r5.<ucar.ma2.DataType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r17);

     label1:
        $z0 = virtualinvoke r3.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 == 0 goto label4;

        $r10 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        if $r10 == null goto label2;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r10);

        goto label3;

     label2:
        $r12 = <ucar.nc2.ncml.NcMLWriter: org.slf4j.Logger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute has null value= ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r15);

     label3:
        goto label8;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label5:
        $i0 = virtualinvoke r3.<ucar.nc2.Attribute: int getLength()>();

        if i1 >= $i0 goto label7;

        $r8 = virtualinvoke r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(i1);

        if i1 <= 0 goto label6;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label6:
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label5;

     label7:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r7);

     label8:
        return $r0;
    }

    public static org.jdom.Element writeDimension(ucar.nc2.Dimension, org.jdom.Namespace)
    {
        int $i0;
        org.jdom.Namespace r1;
        ucar.nc2.Dimension r2;
        java.lang.String $r3, $r4;
        org.jdom.Element $r0;
        boolean $z0, $z1;

        r2 := @parameter0: ucar.nc2.Dimension;

        r1 := @parameter1: org.jdom.Namespace;

        $r0 = new org.jdom.Element;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("dimension", r1);

        $r3 = virtualinvoke r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $i0 = virtualinvoke r2.<ucar.nc2.Dimension: int getLength()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("length", $r4);

        $z0 = virtualinvoke r2.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("isUnlimited", "true");

     label1:
        $z1 = virtualinvoke r2.<ucar.nc2.Dimension: boolean isVariableLength()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("isVariableLength", "true");

     label2:
        return $r0;
    }

    private org.jdom.Element writeGroup(org.jdom.Element, ucar.nc2.Group)
    {
        org.jdom.Namespace $r12, $r20, $r23;
        ucar.nc2.ncml.NcMLWriter r14;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.Group r0, r35;
        java.util.List $r1, $r3, $r5, $r7;
        ucar.nc2.Attribute r33;
        java.lang.StringBuilder $r26, $r28, $r30;
        java.lang.ClassCastException $r25;
        ucar.nc2.Variable r34;
        java.lang.String $r13, $r29, $r31;
        org.slf4j.Logger $r27;
        java.util.Iterator $r2, $r4, $r6, $r8;
        ucar.nc2.dataset.VariableEnhanced $r17;
        java.lang.Object $r10, $r16, $r19, $r22;
        ucar.nc2.Dimension r32;
        org.jdom.Element r9, $r11, $r15, $r18, $r21, $r24;

        r14 := @this: ucar.nc2.ncml.NcMLWriter;

        r9 := @parameter0: org.jdom.Element;

        r0 := @parameter1: ucar.nc2.Group;

        $r1 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getDimensions()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r22 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r32 = (ucar.nc2.Dimension) $r22;

        $r23 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        $r24 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeDimension(ucar.nc2.Dimension,org.jdom.Namespace)>(r32, $r23);

        virtualinvoke r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r24);

        goto label01;

     label02:
        $r3 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r19 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.Attribute) $r19;

        $r20 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        $r21 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeAttribute(ucar.nc2.Attribute,java.lang.String,org.jdom.Namespace)>(r33, "attribute", $r20);

        virtualinvoke r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

        goto label03;

     label04:
        $r5 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getVariables()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r16 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r34 = (ucar.nc2.Variable) $r16;

     label06:
        $r17 = (ucar.nc2.dataset.VariableEnhanced) r34;

        $r18 = specialinvoke r14.<ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeVariable(ucar.nc2.dataset.VariableEnhanced)>($r17);

        virtualinvoke r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r18);

     label07:
        goto label09;

     label08:
        $r25 := @caughtexception;

        $r27 = <ucar.nc2.ncml.NcMLWriter: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("var not instanceof VariableEnhanced = ");

        $r29 = virtualinvoke r34.<ucar.nc2.Variable: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r31, $r25);

     label09:
        goto label05;

     label10:
        $r7 = virtualinvoke r0.<ucar.nc2.Group: java.util.List getGroups()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r35 = (ucar.nc2.Group) $r10;

        $r11 = new org.jdom.Element;

        $r12 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        specialinvoke $r11.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("group", $r12);

        $r13 = virtualinvoke r35.<ucar.nc2.Group: java.lang.String getShortName()>();

        virtualinvoke $r11.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r13);

        $r15 = specialinvoke r14.<ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeGroup(org.jdom.Element,ucar.nc2.Group)>($r11, r35);

        virtualinvoke r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

        goto label11;

     label12:
        return r9;

        catch java.lang.ClassCastException from label06 to label07 with label08;
    }

    private org.jdom.Element writeVariable(ucar.nc2.dataset.VariableEnhanced)
    {
        org.jdom.Namespace $r2, $r10, $r21;
        ucar.nc2.ncml.NcMLWriter r17;
        boolean z0, $z1, $z2, $z3, $z4;
        ucar.ma2.DataType $r7;
        java.util.List $r5, $r8, $r12;
        ucar.nc2.Attribute r27;
        java.lang.StringBuilder $r4;
        ucar.nc2.Structure r28;
        int $i0, $i1, i2;
        ucar.nc2.Variable r15, $r19;
        java.lang.String $r3, $r6, $r23, $r25;
        java.util.Iterator $r9, $r13;
        ucar.nc2.dataset.VariableEnhanced r0, r16;
        java.lang.Object $r14, $r20, $r24;
        ucar.nc2.Dimension r26;
        org.jdom.Element $r1, $r11, $r18, $r22;

        r17 := @this: ucar.nc2.ncml.NcMLWriter;

        r0 := @parameter0: ucar.nc2.dataset.VariableEnhanced;

        z0 = r0 instanceof ucar.nc2.Structure;

        $r1 = new org.jdom.Element;

        $r2 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        specialinvoke $r1.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("variable", $r2);

        $r3 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getShortName()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.util.List getDimensions()>();

        i2 = 0;

     label01:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i2 >= $i0 goto label05;

        $r24 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        r26 = (ucar.nc2.Dimension) $r24;

        if i2 <= 0 goto label02;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label02:
        $z3 = virtualinvoke r26.<ucar.nc2.Dimension: boolean isShared()>();

        if $z3 == 0 goto label03;

        $r25 = virtualinvoke r26.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        goto label04;

     label03:
        $i1 = virtualinvoke r26.<ucar.nc2.Dimension: int getLength()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label04:
        i2 = i2 + 1;

        goto label01;

     label05:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("shape", $r6);

        $r7 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.DataType getDataType()>();

        if $r7 == null goto label06;

        $r23 = virtualinvoke $r7.<ucar.ma2.DataType: java.lang.String toString()>();

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r23);

     label06:
        $r8 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.util.List getAttributes()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r20 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r27 = (ucar.nc2.Attribute) $r20;

        $r21 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        $r22 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeAttribute(ucar.nc2.Attribute,java.lang.String,org.jdom.Namespace)>(r27, "attribute", $r21);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r22);

        goto label07;

     label08:
        $z1 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: boolean isMetadata()>();

        if $z1 != 0 goto label09;

        $r19 = r17.<ucar.nc2.ncml.NcMLWriter: ucar.nc2.Variable aggCoord>;

        if r0 != $r19 goto label10;

     label09:
        $r10 = <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS>;

        $r11 = staticinvoke <ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeValues(ucar.nc2.dataset.VariableEnhanced,org.jdom.Namespace,boolean)>(r0, $r10, 1);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label10:
        if z0 == 0 goto label12;

        r28 = (ucar.nc2.Structure) r0;

        $r12 = virtualinvoke r28.<ucar.nc2.Structure: java.util.List getVariables()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (ucar.nc2.Variable) $r14;

        r16 = (ucar.nc2.dataset.VariableEnhanced) r15;

        $r18 = specialinvoke r17.<ucar.nc2.ncml.NcMLWriter: org.jdom.Element writeVariable(ucar.nc2.dataset.VariableEnhanced)>(r16);

        virtualinvoke $r1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r18);

        goto label11;

     label12:
        return $r1;
    }

    public static org.jdom.Element writeValues(ucar.nc2.dataset.VariableEnhanced, org.jdom.Namespace, boolean)
    {
        byte $b4, $b7;
        org.jdom.Namespace r1;
        java.lang.StringBuilder $r25, $r26, $r35;
        long $l3, $l5, $l6, $l8;
        java.lang.String $r10, $r16, $r17, $r18, $r22, r24, $r36;
        java.io.IOException $r30;
        ucar.ma2.Array $r4;
        ucar.ma2.Index $r13, $r14, $r15, $r19, $r20;
        ucar.nc2.dataset.VariableEnhanced r3;
        char[] $r28, r31;
        org.jdom.Element $r34;
        boolean z0, $z1, $z2, z3, z5, $z6, $z7, $z8;
        ucar.ma2.DataType $r5, $r6, $r7, $r8, $r11, $r12, $r32, $r33;
        int $i0, $i1, $i2, $i9, $i10, i11, i12, $i13, $i14;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7;
        ucar.ma2.IndexIterator $r9, $r21;
        java.lang.Object $r23, $r27;

        r3 := @parameter0: ucar.nc2.dataset.VariableEnhanced;

        r1 := @parameter1: org.jdom.Namespace;

        z0 := @parameter2: boolean;

        $r34 = new org.jdom.Element;

        specialinvoke $r34.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("values", r1);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.Array read()>();

     label02:
        goto label04;

     label03:
        $r30 := @caughtexception;

        return $r34;

     label04:
        $r5 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.DataType getDataType()>();

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r5 != $r6 goto label05;

        $r27 = virtualinvoke $r4.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r28 = (char[]) $r27;

        r31 = (char[]) $r28;

        $r36 = new java.lang.String;

        specialinvoke $r36.<java.lang.String: void <init>(char[])>(r31);

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r36);

        goto label23;

     label05:
        $r7 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.DataType getDataType()>();

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r7 != $r8 goto label09;

        $r21 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i11 = 0;

     label06:
        $z2 = interfaceinvoke $r21.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r23 = interfaceinvoke $r21.<ucar.ma2.IndexIterator: java.lang.Object getObjectNext()>();

        r24 = (java.lang.String) $r23;

        $i10 = i11;

        i11 = i11 + 1;

        if $i10 <= 0 goto label07;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label07:
        $r25 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        goto label06;

     label08:
        $r22 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r22);

        goto label23;

     label09:
        if z0 == 0 goto label13;

        $i2 = virtualinvoke $r4.<ucar.ma2.Array: int getRank()>();

        if $i2 != 1 goto label13;

        $l3 = virtualinvoke $r4.<ucar.ma2.Array: long getSize()>();

        $b4 = $l3 cmp 2L;

        $i13 = (int) $b4;

        if $i13 <= 0 goto label13;

        $r13 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r14 = virtualinvoke $r13.<ucar.ma2.Index: ucar.ma2.Index set(int)>(0);

        $d0 = virtualinvoke $r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r14);

        $r15 = virtualinvoke $r13.<ucar.ma2.Index: ucar.ma2.Index set(int)>(1);

        $d1 = virtualinvoke $r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r15);

        d2 = $d1 - $d0;

        z3 = 1;

        i12 = 2;

     label10:
        $l5 = (long) i12;

        $l6 = virtualinvoke $r4.<ucar.ma2.Array: long getSize()>();

        $b7 = $l5 cmp $l6;

        $i14 = (int) $b7;

        if $i14 >= 0 goto label12;

        $r19 = virtualinvoke $r13.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i12);

        $d3 = virtualinvoke $r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r19);

        $i9 = i12 - 1;

        $r20 = virtualinvoke $r13.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i9);

        $d4 = virtualinvoke $r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r20);

        $d5 = $d3 - $d4;

        $z1 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d5, d2);

        if $z1 != 0 goto label11;

        z3 = 0;

     label11:
        i12 = i12 + 1;

        goto label10;

     label12:
        if z3 == 0 goto label13;

        $r16 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("start", $r16);

        $r17 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d2);

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("increment", $r17);

        $l8 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: long getSize()>();

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("npts", $r18);

        return $r34;

     label13:
        $r32 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.DataType getDataType()>();

        $r33 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r32 == $r33 goto label14;

        $r11 = interfaceinvoke r3.<ucar.nc2.dataset.VariableEnhanced: ucar.ma2.DataType getDataType()>();

        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r11 != $r12 goto label15;

     label14:
        $z8 = 1;

        $z7 = 1;

        goto label16;

     label15:
        $z8 = 0;

        $z7 = 0;

     label16:
        z5 = $z8;

        $r9 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        if $z7 == 0 goto label17;

        $d6 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        goto label18;

     label17:
        $i0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: int getIntNext()>();

        $d6 = (double) $i0;

     label18:
        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

     label19:
        $z6 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z6 == 0 goto label22;

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        if z5 == 0 goto label20;

        $d7 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        goto label21;

     label20:
        $i1 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: int getIntNext()>();

        $d7 = (double) $i1;

     label21:
        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        goto label19;

     label22:
        $r10 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r10);

     label23:
        return $r34;

        catch java.io.IOException from label01 to label02 with label03;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.String r1, $r10, $r18, $r19;
        ucar.nc2.ncml.NcMLWriter $r3;
        java.io.PrintStream $r5, $r11, $r12, $r15;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r14, $r16, $r17;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r19 = "C:/data/atd/rgg.20020411.000000.lel.ll.nc";

        goto label2;

     label1:
        $r19 = r0[0];

     label2:
        r1 = $r19;

     label3:
        $r2 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String)>($r19);

        $r3 = new ucar.nc2.ncml.NcMLWriter;

        specialinvoke $r3.<ucar.nc2.ncml.NcMLWriter: void <init>()>();

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetcdfDataset = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("-----------");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<ucar.nc2.ncml.NcMLWriter: void writeXML(ucar.nc2.NetcdfFile,java.io.OutputStream,java.lang.String)>($r2, $r12, null);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error = ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0, $r1;
        org.slf4j.Logger $r2;

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2");

        <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace ncNS> = $r0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema");

        <ucar.nc2.ncml.NcMLWriter: org.jdom.Namespace xsiNS> = $r1;

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ncml/NcMLWriter;");

        <ucar.nc2.ncml.NcMLWriter: org.slf4j.Logger log> = $r2;

        return;
    }
}
