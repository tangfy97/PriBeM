public final class org.apache.xmlbeans.impl.util.HexBin extends java.lang.Object
{
    private static final int BASELENGTH;
    private static final int LOOKUPLENGTH;
    private static byte[] hexNumberTable;
    private static byte[] lookUpHexAlphabet;

    public void <init>()
    {
        org.apache.xmlbeans.impl.util.HexBin r0;

        r0 := @this: org.apache.xmlbeans.impl.util.HexBin;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isHex(byte)
    {
        byte[] $r0;
        byte b0, $b1;
        int $i2, $i3, $i5;
        boolean $z0;

        b0 := @parameter0: byte;

        $r0 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i2 = (int) b0;

        $b1 = $r0[$i2];

        $i3 = (int) $b1;

        $i5 = (int) -1;

        if $i3 == $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String bytesToString(byte[])
    {
        byte[] r0, $r2;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] encode(byte[])>(r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    public static byte[] stringToBytes(java.lang.String)
    {
        byte[] $r1, $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] decode(byte[])>($r1);

        return $r2;
    }

    public static byte[] encode(byte[])
    {
        byte[] r0, r1, $r2, $r3;
        byte $b2, $b5, $b8, $b9, $b10;
        int i0, i1, $i3, $i4, $i6, $i7, $i11, i12, $i13, $i14;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        i1 = i0 * 2;

        r1 = newarray (byte)[i1];

        i12 = 0;

     label2:
        if i12 >= i0 goto label3;

        $i6 = i12 * 2;

        $r2 = <org.apache.xmlbeans.impl.util.HexBin: byte[] lookUpHexAlphabet>;

        $b2 = r0[i12];

        $i13 = (int) $b2;

        $i3 = $i13 >> 4;

        $i4 = $i3 & 15;

        $b5 = $r2[$i4];

        r1[$i6] = $b5;

        $i7 = i12 * 2;

        $i11 = $i7 + 1;

        $r3 = <org.apache.xmlbeans.impl.util.HexBin: byte[] lookUpHexAlphabet>;

        $b8 = r0[i12];

        $b9 = $b8 & 15;

        $i14 = (int) $b9;

        $b10 = $r3[$i14];

        r1[$i11] = $b10;

        i12 = i12 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static byte[] decode(byte[])
    {
        byte[] r0, r1, $r2, $r3;
        byte $b4, $b7, $b9, $b10, $b13, $b14, $b17;
        int i0, $i1, i2, $i3, $i5, $i6, $i8, $i11, $i12, $i15, $i16, i18, $i19, $i20, $i21, $i22;
        boolean $z0, $z1;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        i0 = lengthof r0;

        $i1 = i0 % 2;

        if $i1 == 0 goto label2;

        return null;

     label2:
        i2 = i0 / 2;

        r1 = newarray (byte)[i2];

        i18 = 0;

     label3:
        if i18 >= i2 goto label6;

        $i3 = i18 * 2;

        $b4 = r0[$i3];

        $z0 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: boolean isHex(byte)>($b4);

        if $z0 == 0 goto label4;

        $i5 = i18 * 2;

        $i6 = $i5 + 1;

        $b7 = r0[$i6];

        $z1 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: boolean isHex(byte)>($b7);

        if $z1 != 0 goto label5;

     label4:
        return null;

     label5:
        $r2 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i8 = i18 * 2;

        $b9 = r0[$i8];

        $i19 = (int) $b9;

        $b10 = $r2[$i19];

        $i20 = (int) $b10;

        $i15 = $i20 << 4;

        $r3 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i11 = i18 * 2;

        $i12 = $i11 + 1;

        $b13 = r0[$i12];

        $i21 = (int) $b13;

        $b14 = $r3[$i21];

        $i22 = (int) $b14;

        $i16 = $i15 | $i22;

        $b17 = (byte) $i16;

        r1[i18] = $b17;

        i18 = i18 + 1;

        goto label3;

     label6:
        return r1;
    }

    public static java.lang.String decode(java.lang.String)
    {
        byte[] $r1, r3;
        java.lang.String r0, $r4;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r3 = null;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        r3 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] decode(byte[])>($r1);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        if r3 != null goto label6;

        $r4 = null;

        goto label7;

     label6:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>(r3);

     label7:
        return $r4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static java.lang.String encode(java.lang.String)
    {
        byte[] $r1, r3;
        java.lang.String r0, $r4;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r3 = null;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        r3 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] encode(byte[])>($r1);

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        if r3 != null goto label6;

        $r4 = null;

        goto label7;

     label6:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>(r3);

     label7:
        return $r4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b2, $b4, $b7, $b10, $b12;
        int $i0, $i1, $i3, $i5, $i6, $i8, $i9, $i11, i13, i14, i15, i16, i17, i18, $i20, $i22, $i24;

        <org.apache.xmlbeans.impl.util.HexBin: int LOOKUPLENGTH> = 16;

        <org.apache.xmlbeans.impl.util.HexBin: int BASELENGTH> = 255;

        $r0 = newarray (byte)[255];

        <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable> = $r0;

        $r1 = newarray (byte)[16];

        <org.apache.xmlbeans.impl.util.HexBin: byte[] lookUpHexAlphabet> = $r1;

        i13 = 0;

     label01:
        if i13 >= 255 goto label02;

        $r7 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $r7[i13] = -1;

        i13 = i13 + 1;

        goto label01;

     label02:
        i14 = 57;

     label03:
        if i14 < 48 goto label04;

        $r6 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i11 = i14 - 48;

        $b12 = (byte) $i11;

        $r6[i14] = $b12;

        $i20 = (int) -1;

        i14 = i14 + $i20;

        goto label03;

     label04:
        i15 = 70;

     label05:
        if i15 < 65 goto label06;

        $r5 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i8 = i15 - 65;

        $i9 = $i8 + 10;

        $b10 = (byte) $i9;

        $r5[i15] = $b10;

        $i22 = (int) -1;

        i15 = i15 + $i22;

        goto label05;

     label06:
        i16 = 102;

     label07:
        if i16 < 97 goto label08;

        $r4 = <org.apache.xmlbeans.impl.util.HexBin: byte[] hexNumberTable>;

        $i5 = i16 - 97;

        $i6 = $i5 + 10;

        $b7 = (byte) $i6;

        $r4[i16] = $b7;

        $i24 = (int) -1;

        i16 = i16 + $i24;

        goto label07;

     label08:
        i17 = 0;

     label09:
        if i17 >= 10 goto label10;

        $r3 = <org.apache.xmlbeans.impl.util.HexBin: byte[] lookUpHexAlphabet>;

        $i3 = 48 + i17;

        $b4 = (byte) $i3;

        $r3[i17] = $b4;

        i17 = i17 + 1;

        goto label09;

     label10:
        i18 = 10;

     label11:
        if i18 > 15 goto label12;

        $r2 = <org.apache.xmlbeans.impl.util.HexBin: byte[] lookUpHexAlphabet>;

        $i0 = 65 + i18;

        $i1 = $i0 - 10;

        $b2 = (byte) $i1;

        $r2[i18] = $b2;

        i18 = i18 + 1;

        goto label11;

     label12:
        return;
    }
}
