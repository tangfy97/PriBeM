class org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine extends javax.swing.text.View
{
    int nlines;
    private final org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0;

    void <init>(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView, javax.swing.text.Element)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView r1;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        javax.swing.text.Element r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView;

        r2 := @parameter1: javax.swing.text.Element;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0> = r1;

        specialinvoke r0.<javax.swing.text.View: void <init>(javax.swing.text.Element)>(r2);

        return;
    }

    final int calculateLineCount()
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r7, $r8;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7;
        java.awt.Container $r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r4;
        float $f0, f1;
        javax.swing.text.Document $r3;
        javax.swing.text.Element $r5;
        org.fife.ui.rsyntaxtextarea.Token $r6;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        i4 = 0;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getStartOffset()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getEndOffset()>();

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: javax.swing.text.Document getDocument()>();

        r4 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r3;

        $r5 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i2 = interfaceinvoke $r5.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        $r6 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i2);

        f1 = 0.0F;

        i5 = $i0;

     label1:
        if i5 >= $i1 goto label4;

        i4 = i4 + 1;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $f0 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: float makeTokenListStartAt(org.fife.ui.rsyntaxtextarea.Token,int,javax.swing.text.TabExpander,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,float)>($r6, i5, $r7, r2, f1);

        f1 = $f0;

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i3 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int calculateBreakPosition(int,org.fife.ui.rsyntaxtextarea.Token,float)>(i5, $r6, $f0);

        if $i3 != i5 goto label2;

        i6 = $i3 + 1;

        $i7 = i6;

        goto label3;

     label2:
        $i7 = $i3;

     label3:
        i5 = $i7;

        goto label1;

     label4:
        return i4;
    }

    public float getPreferredSpan(int)
    {
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r1, $r2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        byte $b4;
        java.lang.StringBuffer $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7;
        java.lang.String $r7;
        java.awt.Container $r8;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r9;
        java.lang.IllegalArgumentException $r3;
        float f0, $f1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label6;
        };

     label1:
        $r2 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int getWidth()>();

        f0 = (float) $i3;

        $b4 = f0 cmpl 2.14748365E9F;

        if $b4 != 0 goto label2;

        return 100.0F;

     label2:
        return f0;

     label3:
        $i1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int nlines>;

        if $i1 == 0 goto label4;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $z0 = $r1.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: boolean widthChanging>;

        if $z0 == 0 goto label5;

     label4:
        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int calculateLineCount()>();

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int nlines> = $i2;

     label5:
        $i5 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int nlines>;

        $r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        $r9 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r8;

        $i6 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        $i7 = $i5 * $i6;

        $f1 = (float) $i7;

        return $f1;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid axis: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public void paint(java.awt.Graphics, java.awt.Shape)
    {
        java.awt.Graphics r1;
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: java.awt.Shape;

        return;
    }

    public java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.Position$Bias r5, $r6;
        java.awt.Shape r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r4;
        javax.swing.text.BadLocationException $r10;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument $r20;
        float $f0, f1;
        javax.swing.text.Document $r7;
        java.awt.Rectangle $r1, $r19, r21;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r11, $r12, $r13, $r15, $r16, $r18;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r2;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18;
        java.awt.Container $r3;
        javax.swing.text.Segment $r14, $r17;
        javax.swing.text.Element $r8;
        org.fife.ui.rsyntaxtextarea.Token $r9;

        r2 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        i3 := @parameter0: int;

        r0 := @parameter1: java.awt.Shape;

        r5 := @parameter2: javax.swing.text.Position$Bias;

        $r1 = interfaceinvoke r0.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        r21 = $r1;

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        r4 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r3;

        $i0 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        $r1.<java.awt.Rectangle: int height> = $i0;

        $r1.<java.awt.Rectangle: int width> = 1;

        $i1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getStartOffset()>();

        i16 = $i1;

        $i2 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getEndOffset()>();

        $r6 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        if r5 != $r6 goto label1;

        $i17 = i3;

        goto label2;

     label1:
        $i4 = i3 - 1;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i4);

     label2:
        i5 = $i17;

        $r7 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: javax.swing.text.Document getDocument()>();

        $r20 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r7;

        $r8 = virtualinvoke $r20.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i6 = interfaceinvoke $r8.<javax.swing.text.Element: int getElementIndex(int)>($i1);

        $r9 = virtualinvoke $r20.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i6);

        $i7 = $r1.<java.awt.Rectangle: int x>;

        f1 = (float) $i7;

     label3:
        if i16 >= $i2 goto label9;

        $r11 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $f0 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: float makeTokenListStartAt(org.fife.ui.rsyntaxtextarea.Token,int,javax.swing.text.TabExpander,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,float)>($r9, i16, $r11, r4, f1);

        f1 = $f0;

        $r12 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i8 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int calculateBreakPosition(int,org.fife.ui.rsyntaxtextarea.Token,float)>(i16, $r9, $f0);

        if i3 < i16 goto label4;

        if i5 >= $i8 goto label4;

        $r16 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $r17 = staticinvoke <org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment access$000(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView)>($r16);

        $r18 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i15 = $r1.<java.awt.Rectangle: int x>;

        $r19 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: java.awt.Rectangle getLineWidthUpTo(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.Segment,int,int,javax.swing.text.TabExpander,java.awt.Rectangle,int)>(r4, $r17, i16, i3, $r18, $r1, $i15);

        return $r19;

     label4:
        $i9 = $i2 - 1;

        if $i8 != $i9 goto label6;

        $i13 = $i2 - 1;

        if i3 != $i13 goto label6;

        if i3 <= i16 goto label5;

        $r13 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $r14 = staticinvoke <org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: javax.swing.text.Segment access$000(org.fife.ui.rsyntaxtextarea.WrappedSyntaxView)>($r13);

        $r15 = r2.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i14 = $r1.<java.awt.Rectangle: int x>;

        r21 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: java.awt.Rectangle getLineWidthUpTo(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.Segment,int,int,javax.swing.text.TabExpander,java.awt.Rectangle,int)>(r4, $r14, i16, i3, $r15, $r1, $i14);

     label5:
        return r21;

     label6:
        if $i8 != i16 goto label7;

        $i18 = $i2;

        goto label8;

     label7:
        $i18 = $i8;

     label8:
        i16 = $i18;

        $i11 = $r1.<java.awt.Rectangle: int y>;

        $i10 = $r1.<java.awt.Rectangle: int height>;

        $i12 = $i11 + $i10;

        $r1.<java.awt.Rectangle: int y> = $i12;

        goto label3;

     label9:
        $r10 = new javax.swing.text.BadLocationException;

        specialinvoke $r10.<javax.swing.text.BadLocationException: void <init>(java.lang.String,int)>(null, i3);

        throw $r10;
    }

    public int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position$Bias[])
    {
        javax.swing.text.Position$Bias $r1;
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r8;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r6;
        float f0, f1, $f2, $f3, $f4, $f5;
        javax.swing.text.Document $r5;
        java.awt.Rectangle r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r11, $r12, $r13;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, $i36;
        java.awt.Container $r7;
        javax.swing.text.Position$Bias[] r0;
        javax.swing.text.Element $r9;
        org.fife.ui.rsyntaxtextarea.Token $r10;

        r4 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r2 := @parameter2: java.awt.Shape;

        r0 := @parameter3: javax.swing.text.Position$Bias[];

        $r1 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        r0[0] = $r1;

        r3 = (java.awt.Rectangle) r2;

        $r5 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: javax.swing.text.Document getDocument()>();

        r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r5;

        i0 = (int) f0;

        i1 = (int) f1;

        $i2 = r3.<java.awt.Rectangle: int y>;

        if i1 >= $i2 goto label1;

        $i34 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getStartOffset()>();

        return $i34;

     label1:
        $i4 = r3.<java.awt.Rectangle: int y>;

        $i3 = r3.<java.awt.Rectangle: int height>;

        $i5 = $i4 + $i3;

        if i1 <= $i5 goto label2;

        $i32 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getEndOffset()>();

        $i33 = $i32 - 1;

        return $i33;

     label2:
        $r7 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        r8 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r7;

        $i6 = virtualinvoke r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        r3.<java.awt.Rectangle: int height> = $i6;

        $i7 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getEndOffset()>();

        $r9 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i8 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getStartOffset()>();

        i35 = $i8;

        $i9 = interfaceinvoke $r9.<javax.swing.text.Element: int getElementIndex(int)>($i8);

        $r10 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i9);

     label3:
        if i35 >= $i7 goto label9;

        $r11 = r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i12 = r3.<java.awt.Rectangle: int x>;

        $f2 = (float) $i12;

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: float makeTokenListStartAt(org.fife.ui.rsyntaxtextarea.Token,int,javax.swing.text.TabExpander,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,float)>($r10, i35, $r11, r8, $f2);

        $r12 = r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i13 = r3.<java.awt.Rectangle: int x>;

        $f3 = (float) $i13;

        $i14 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: int calculateBreakPosition(int,org.fife.ui.rsyntaxtextarea.Token,float)>(i35, $r10, $f3);

        $i15 = r3.<java.awt.Rectangle: int y>;

        if i1 < $i15 goto label6;

        $i20 = r3.<java.awt.Rectangle: int y>;

        $i19 = r3.<java.awt.Rectangle: int height>;

        $i21 = $i20 + $i19;

        if i1 >= $i21 goto label6;

        $i22 = r3.<java.awt.Rectangle: int x>;

        if i0 >= $i22 goto label4;

        return i35;

     label4:
        $i24 = r3.<java.awt.Rectangle: int x>;

        $i23 = r3.<java.awt.Rectangle: int width>;

        $i25 = $i24 + $i23;

        if i0 <= $i25 goto label5;

        $i31 = $i14 - 1;

        return $i31;

     label5:
        $r13 = r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        $i26 = r3.<java.awt.Rectangle: int x>;

        $f5 = (float) $i26;

        $f4 = (float) i0;

        $i27 = virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.Token: int getListOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float,float)>(r8, $r13, $f5, $f4);

        $i28 = $i7 - 1;

        $i29 = staticinvoke <java.lang.Math: int min(int,int)>($i27, $i28);

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>($i29, i35);

        return $i30;

     label6:
        if $i14 != i35 goto label7;

        $i36 = $i7;

        goto label8;

     label7:
        $i36 = $i14;

     label8:
        i35 = $i36;

        $i17 = r3.<java.awt.Rectangle: int y>;

        $i16 = r3.<java.awt.Rectangle: int height>;

        $i18 = $i17 + $i16;

        r3.<java.awt.Rectangle: int y> = $i18;

        goto label3;

     label9:
        $i10 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int getEndOffset()>();

        $i11 = $i10 - 1;

        return $i11;
    }

    private void handleDocumentEvent(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Rectangle r9;
        javax.swing.text.ViewFactory r7;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView $r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.awt.Container $r2, $r4;
        javax.swing.event.DocumentEvent r6;
        org.fife.ui.rtextarea.Gutter $r5;
        java.awt.Shape r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r8;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        r6 := @parameter0: javax.swing.event.DocumentEvent;

        r1 := @parameter1: java.awt.Shape;

        r7 := @parameter2: javax.swing.text.ViewFactory;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int calculateLineCount()>();

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int nlines>;

        if $i1 == $i0 goto label2;

        r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: int nlines> = $i0;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView this$0>;

        virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(r0, 0, 1);

        $r4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        r8 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r4;

        virtualinvoke r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void repaint()>();

        $r5 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rtextarea.Gutter getGutter(org.fife.ui.rtextarea.RTextArea)>(r8);

        if $r5 == null goto label1;

        virtualinvoke $r5.<org.fife.ui.rtextarea.Gutter: void revalidate()>();

        virtualinvoke $r5.<org.fife.ui.rtextarea.Gutter: void repaint()>();

     label1:
        goto label3;

     label2:
        if r1 == null goto label3;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: java.awt.Container getContainer()>();

        r9 = (java.awt.Rectangle) r1;

        $i5 = r9.<java.awt.Rectangle: int x>;

        $i4 = r9.<java.awt.Rectangle: int y>;

        $i3 = r9.<java.awt.Rectangle: int width>;

        $i2 = r9.<java.awt.Rectangle: int height>;

        virtualinvoke $r2.<java.awt.Component: void repaint(int,int,int,int)>($i5, $i4, $i3, $i2);

     label3:
        return;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        javax.swing.text.ViewFactory r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: void handleDocumentEvent(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, r2, r3);

        return;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        javax.swing.text.ViewFactory r3;
        org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine r0;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.WrappedSyntaxView$WrappedLine: void handleDocumentEvent(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, r2, r3);

        return;
    }
}
