final class org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser extends java.lang.Object
{
    final java.lang.String id;
    final boolean isInline;

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null thread id");

        r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: java.lang.String id> = r1;

        r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: boolean isInline> = z0;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser) r1;

        $r4 = r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: java.lang.String id>;

        $r3 = r2.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: java.lang.String id>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $z3 = r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: boolean isInline>;

        $z2 = r2.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: boolean isInline>;

        if $z3 != $z2 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r2;
        java.lang.String $r1;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: java.lang.String id>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 * 37;

        $z0 = r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$ThreadInitialiser: boolean isInline>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $i2 = virtualinvoke $r2.<java.lang.Boolean: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }
}
