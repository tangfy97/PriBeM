public class org.apache.james.mime4j.field.ContentTypeFieldLenientImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.ContentTypeField
{
    private boolean parsed;
    private java.lang.String mimeType;
    private java.lang.String mediaType;
    private java.lang.String subType;
    private java.util.Map parameters;
    public static final org.apache.james.mime4j.dom.FieldParser PARSER;

    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        org.apache.james.mime4j.codec.DecodeMonitor r2;
        java.util.HashMap $r3;
        org.apache.james.mime4j.stream.Field r1;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r1, r2);

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType> = null;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters> = $r3;

        return;
    }

    public java.lang.String getMimeType()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        return $r1;
    }

    public java.lang.String getMediaType()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType>;

        return $r1;
    }

    public java.lang.String getSubType()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.util.Map $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        if $r1 == null goto label2;

        $r3 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isMultipart()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: void parse()>();

     label1:
        $r1 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.String getBoundary()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("boundary");

        return $r1;
    }

    public java.lang.String getCharset()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String getParameter(java.lang.String)>("charset");

        return $r1;
    }

    private void parse()
    {
        org.apache.james.mime4j.stream.RawBody $r3;
        java.util.Locale $r7;
        java.util.Map $r9, $r30;
        boolean $z0, z1, $z2;
        java.util.List $r31;
        java.lang.StringBuilder $r16, $r17, $r24, $r25, $r26, $r34, $r35;
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl r0;
        org.apache.james.mime4j.stream.RawField $r1;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r4, $r6, $r8, $r10, $r11, $r12, $r18, $r19, $r20, $r21, $r22, r27, r28, r29;
        org.apache.james.mime4j.stream.RawFieldParser $r2;
        java.util.Iterator $r32;
        org.apache.james.mime4j.stream.NameValuePair r33;
        org.apache.james.mime4j.codec.DecodeMonitor $r13, $r15;
        java.lang.Object $r5;

        r0 := @this: org.apache.james.mime4j.field.ContentTypeFieldLenientImpl;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: boolean parsed> = 1;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.stream.RawField getRawField()>();

        $r2 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r3 = virtualinvoke $r2.<org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.stream.RawField)>($r1);

        $r4 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.lang.String getValue()>();

        r27 = $r4;

        r28 = null;

        r29 = null;

        if $r4 == null goto label3;

        $r11 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        r27 = $r12;

        $i0 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(47);

        z1 = 0;

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $r19 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        r28 = $r20;

        $i1 = $i0 + 1;

        $r21 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>($i1);

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();

        r29 = $r22;

        $i2 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        $i3 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i3 <= 0 goto label1;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        z1 = 1;

     label1:
        if z1 != 0 goto label3;

        $r13 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $z0 = virtualinvoke $r13.<org.apache.james.mime4j.codec.DecodeMonitor: boolean isListening()>();

        if $z0 == 0 goto label2;

        $r15 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.codec.DecodeMonitor monitor>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Content-Type: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.james.mime4j.codec.DecodeMonitor: boolean warn(java.lang.String,java.lang.String)>($r18, "Content-Type value ignored");

     label2:
        r27 = null;

        r28 = null;

        r29 = null;

     label3:
        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mimeType> = r27;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String mediaType> = r28;

        r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.lang.String subType> = r29;

        $r30 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        interfaceinvoke $r30.<java.util.Map: void clear()>();

        $r31 = virtualinvoke $r3.<org.apache.james.mime4j.stream.RawBody: java.util.List getParams()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.apache.james.mime4j.stream.NameValuePair) $r5;

        $r6 = virtualinvoke r33.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getName()>();

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        $r9 = r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: java.util.Map parameters>;

        $r10 = virtualinvoke r33.<org.apache.james.mime4j.stream.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

        goto label4;

     label5:
        return;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1 $r0;

        $r0 = new org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1;

        specialinvoke $r0.<org.apache.james.mime4j.field.ContentTypeFieldLenientImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.ContentTypeFieldLenientImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r0;

        return;
    }
}
