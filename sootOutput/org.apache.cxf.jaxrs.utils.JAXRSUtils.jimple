public final class org.apache.cxf.jaxrs.utils.JAXRSUtils extends java.lang.Object
{
    public static final javax.ws.rs.core.MediaType ALL_TYPES;
    public static final java.lang.String ROOT_RESOURCE_CLASS;
    public static final java.lang.String IGNORE_MESSAGE_WRITERS;
    public static final java.lang.String ROOT_INSTANCE;
    public static final java.lang.String ROOT_PROVIDER;
    public static final java.lang.String EXCEPTION_FROM_MAPPER;
    public static final java.lang.String PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK;
    public static final java.lang.String DOC_LOCATION;
    public static final java.lang.String DEFAULT_PROVIDERS_FOR_SIMPLE_TYPES;
    public static final java.lang.String MEDIA_TYPE_Q_PARAM;
    public static final java.lang.String MEDIA_TYPE_QS_PARAM;
    private static final java.lang.String MEDIA_TYPE_DISTANCE_PARAM;
    private static final java.lang.String DEFAULT_CONTENT_TYPE;
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.lang.String PATH_SEGMENT_SEP;
    private static final java.lang.String PROPAGATE_EXCEPTION;
    private static final java.lang.String REPORT_FAULT_MESSAGE_PROPERTY;
    private static final java.lang.String SUPPORT_WAE_SPEC_OPTIMIZATION;
    private static final java.util.Map EXCEPTIONS_MAP;

    private void <init>()
    {
        org.apache.cxf.jaxrs.utils.JAXRSUtils r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.JAXRSUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List getPathSegments(java.lang.String, boolean)
    {
        java.util.List $r1;
        java.lang.String r0;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean,boolean)>(r0, z0, 1);

        return $r1;
    }

    public static java.util.List getPathSegments(java.lang.String, boolean, boolean)
    {
        java.lang.String[] $r1;
        java.util.ArrayList $r7;
        int $i0, $i1, i3, i4, $i5;
        java.lang.String r0, r4, $r6;
        boolean z0, $z1, z2;
        char $c2;
        org.apache.cxf.jaxrs.impl.PathSegmentImpl $r8, $r9;

        r0 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r1 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, "/");

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        i3 = lengthof $r1;

        i4 = 0;

     label1:
        if i4 >= i3 goto label3;

        r4 = $r1[i4];

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r4);

        if $z1 != 0 goto label2;

        $r8 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        specialinvoke $r8.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String,boolean)>(r4, z2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $i5 = (int) $c2;

        if $i5 != 47 goto label6;

        if z0 == 0 goto label4;

        $r6 = "";

        goto label5;

     label4:
        $r6 = "/";

     label5:
        $r9 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        specialinvoke $r9.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String,boolean)>($r6, 0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r9);

     label6:
        return $r7;
    }

    private static java.lang.String[] getUserMediaTypes(java.lang.Object, boolean)
    {
        java.lang.Object[] $r5;
        java.lang.String[] $r4, r7, $r9;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider $r3, $r6;
        java.util.List r8;
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.Class $r1, $r2;
        boolean $z0, z1;

        r0 := @parameter0: java.lang.Object;

        z1 := @parameter1: boolean;

        r7 = null;

        $r1 = class "Lorg/apache/cxf/jaxrs/provider/AbstractConfigurableProvider;";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label5;

        if z1 == 0 goto label1;

        $r6 = (org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider) r0;

        r8 = virtualinvoke $r6.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List getConsumeMediaTypes()>();

        goto label2;

     label1:
        $r3 = (org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider) r0;

        r8 = virtualinvoke $r3.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List getProduceMediaTypes()>();

     label2:
        if r8 == null goto label5;

        $i0 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $i1 = interfaceinvoke r8.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i1];

        $r5 = interfaceinvoke r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r9 = (java.lang.String[]) $r5;

        goto label4;

     label3:
        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "*/*";

     label4:
        r7 = $r9;

     label5:
        return r7;
    }

    public static java.util.List getProviderConsumeTypes(javax.ws.rs.ext.MessageBodyReader)
    {
        java.util.List $r2, $r6;
        javax.ws.rs.Consumes $r5;
        java.lang.'annotation'.Annotation $r4;
        java.lang.String[] $r1;
        java.lang.Class $r3;
        javax.ws.rs.ext.MessageBodyReader r0;

        r0 := @parameter0: javax.ws.rs.ext.MessageBodyReader;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String[] getUserMediaTypes(java.lang.Object,boolean)>(r0, 1);

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Consumes;");

        $r5 = (javax.ws.rs.Consumes) $r4;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getConsumeTypes(javax.ws.rs.Consumes)>($r5);

        return $r6;

     label1:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getMediaTypes(java.lang.String[])>($r1);

        return $r2;
    }

    public static java.util.List getProviderProduceTypes(javax.ws.rs.ext.MessageBodyWriter)
    {
        java.util.List $r2, $r6;
        javax.ws.rs.Produces $r5;
        java.lang.'annotation'.Annotation $r4;
        javax.ws.rs.ext.MessageBodyWriter r0;
        java.lang.String[] $r1;
        java.lang.Class $r3;

        r0 := @parameter0: javax.ws.rs.ext.MessageBodyWriter;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String[] getUserMediaTypes(java.lang.Object,boolean)>(r0, 0);

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Produces;");

        $r5 = (javax.ws.rs.Produces) $r4;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getProduceTypes(javax.ws.rs.Produces)>($r5);

        return $r6;

     label1:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getMediaTypes(java.lang.String[])>($r1);

        return $r2;
    }

    public static java.util.List getMediaTypes(java.lang.String[])
    {
        javax.ws.rs.core.MediaType $r3;
        int $i0, $i1, i2;
        java.lang.String[] r1;
        java.lang.String $r2;
        java.util.ArrayList $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.Object, org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r1;
        java.lang.Object r2;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.BeanResourceInfo,java.lang.Object,org.apache.cxf.message.Message)>(r0, $r1, r2, r3);

        return;
    }

    public static void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo, org.apache.cxf.jaxrs.model.BeanResourceInfo, java.lang.Object, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r13;
        org.apache.cxf.jaxrs.model.ParameterType $r8, $r9, $r21, $r22;
        java.lang.reflect.Method r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.logging.Logger $r32;
        java.util.List $r2, $r31, $r33, $r36;
        java.lang.reflect.Type $r11, $r26;
        java.lang.reflect.Type[] $r25;
        java.lang.'annotation'.Annotation[] $r5, $r12, $r17, $r28;
        org.apache.cxf.jaxrs.model.Parameter $r7, $r20;
        java.lang.'annotation'.Annotation[][] $r27;
        java.util.Iterator $r3, $r37;
        org.apache.cxf.message.Message r1;
        java.lang.Class[] $r18, $r23, $r29;
        java.lang.reflect.Field r40;
        org.apache.cxf.jaxrs.model.BeanResourceInfo r0;
        javax.ws.rs.core.MultivaluedMap $r35;
        java.lang.Object $r4, r14, $r16, $r34, r39, r41;
        java.lang.Class $r6, $r10, $r15, $r19, $r24, $r30;

        r13 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.BeanResourceInfo;

        r14 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: boolean isSingleton()>();

        if $z0 == 0 goto label02;

        $r31 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterMethods()>();

        $z4 = interfaceinvoke $r31.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label01;

        $r33 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterFields()>();

        $z5 = interfaceinvoke $r33.<java.util.List: boolean isEmpty()>();

        if $z5 != 0 goto label02;

     label01:
        $r32 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r32.<java.util.logging.Logger: void fine(java.lang.String)>("Injecting request parameters into singleton resource is not thread-safe");

     label02:
        $r34 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        $r35 = (javax.ws.rs.core.MultivaluedMap) $r34;

        $r36 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterMethods()>();

        $r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        $r16 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.reflect.Method) $r16;

        $r17 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r18 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r19 = $r18[0];

        $r20 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)>(0, $r17, $r19);

        $r21 = virtualinvoke $r20.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r22 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        if $r21 != $r22 goto label04;

        $z3 = r0 instanceof org.apache.cxf.jaxrs.model.ClassResourceInfo;

        if $z3 == 0 goto label04;

        $r29 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r30 = $r29[0];

        r39 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createBeanParamValue(org.apache.cxf.message.Message,java.lang.Class,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r1, $r30, r13);

        goto label05;

     label04:
        $r23 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r24 = $r23[0];

        $r25 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r26 = $r25[0];

        $r27 = virtualinvoke r38.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r28 = $r27[0];

        r39 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r20, $r24, $r26, $r28, r1, $r35, r13);

     label05:
        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object,org.apache.cxf.message.Message)>(r14, r38, r39, r1);

        goto label03;

     label06:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.BeanResourceInfo: java.util.List getParameterFields()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.lang.reflect.Field) $r4;

        $r5 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r6 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)>(0, $r5, $r6);

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r9 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        if $r8 != $r9 goto label08;

        $z2 = r0 instanceof org.apache.cxf.jaxrs.model.ClassResourceInfo;

        if $z2 == 0 goto label08;

        $r15 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.Class getType()>();

        r41 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createBeanParamValue(org.apache.cxf.message.Message,java.lang.Class,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r1, $r15, r13);

        goto label09;

     label08:
        $r10 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r11 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        $r12 = virtualinvoke r40.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getAnnotations()>();

        r41 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r7, $r10, $r11, $r12, r1, $r35, r13);

     label09:
        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>(r40, r14, r41);

        goto label07;

     label10:
        return;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List, java.lang.String, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfoComparator $r4;
        org.apache.cxf.jaxrs.impl.MetadataMap $r25;
        java.util.Map $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r7;
        java.util.logging.Logger $r1, $r16, $r29, $r36, $r50;
        java.util.List r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r44, $r52, r53, r55;
        java.lang.Object[] $r15, $r28, $r35, $r48;
        org.apache.cxf.jaxrs.model.URITemplate $r21, $r26, $r40, $r45;
        org.apache.cxf.common.i18n.Message $r14, $r27, $r34, $r47;
        java.util.logging.Level $r0;
        java.util.ResourceBundle $r17, $r30, $r37, $r49;
        int $i0;
        java.lang.String $r19, r20, $r22, $r23, $r32, $r33, $r39, $r41, $r42, $r51;
        java.util.Map$Entry r54;
        java.util.Iterator $r6, $r8;
        org.apache.cxf.message.Message r5;
        javax.ws.rs.core.MultivaluedMap r10;
        java.util.TreeMap $r3;
        java.lang.Object $r9, $r11, $r13, $r24, $r43, $r46;
        java.lang.Class $r18, $r31, $r38;

        r2 := @parameter0: java.util.List;

        r20 := @parameter1: java.lang.String;

        r10 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        r5 := @parameter3: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label01;

        $r50 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r47 = new org.apache.cxf.common.i18n.Message;

        $r49 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r48 = newarray (java.lang.Object)[1];

        $r48[0] = r20;

        specialinvoke $r47.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("START_CRI_MATCH", $r49, $r48);

        $r51 = virtualinvoke $r47.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r50.<java.util.logging.Logger: void fine(java.lang.String)>($r51);

     label01:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 1 goto label04;

        $r43 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r44 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r43;

        $r45 = virtualinvoke $r44.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $z4 = virtualinvoke $r45.<org.apache.cxf.jaxrs.model.URITemplate: boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)>(r20, r10);

        if $z4 == 0 goto label02;

        $r46 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r52 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r46;

        goto label03;

     label02:
        $r52 = null;

     label03:
        return $r52;

     label04:
        $r3 = new java.util.TreeMap;

        $r4 = new org.apache.cxf.jaxrs.model.ClassResourceInfoComparator;

        specialinvoke $r4.<org.apache.cxf.jaxrs.model.ClassResourceInfoComparator: void <init>(org.apache.cxf.message.Message)>(r5);

        specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.Comparator)>($r4);

        $r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r24 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r24;

        $r25 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r25.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r26 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $z3 = virtualinvoke $r26.<org.apache.cxf.jaxrs.model.URITemplate: boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)>(r20, $r25);

        if $z3 == 0 goto label06;

        interfaceinvoke $r3.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r53, $r25);

        if $z0 == 0 goto label07;

        $r36 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r34 = new org.apache.cxf.common.i18n.Message;

        $r37 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r35 = newarray (java.lang.Object)[3];

        $r38 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        $r35[0] = $r39;

        $r35[1] = r20;

        $r40 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r41 = virtualinvoke $r40.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        $r35[2] = $r41;

        specialinvoke $r34.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("CRI_SELECTED_POSSIBLY", $r37, $r35);

        $r42 = virtualinvoke $r34.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r36.<java.util.logging.Logger: void fine(java.lang.String)>($r42);

        goto label07;

     label06:
        if $z0 == 0 goto label07;

        $r29 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r27 = new org.apache.cxf.common.i18n.Message;

        $r30 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r28 = newarray (java.lang.Object)[2];

        $r28[0] = r20;

        $r31 = virtualinvoke r53.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r28[1] = $r32;

        specialinvoke $r27.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("CRI_NO_MATCH", $r30, $r28);

        $r33 = virtualinvoke $r27.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r29.<java.util.logging.Logger: void fine(java.lang.String)>($r33);

     label07:
        goto label05;

     label08:
        $z2 = interfaceinvoke $r3.<java.util.SortedMap: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $r7 = interfaceinvoke $r3.<java.util.SortedMap: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.Map) $r11;

        interfaceinvoke r10.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r12);

        $r13 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        r55 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r13;

        if $z0 == 0 goto label09;

        $r16 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r14 = new org.apache.cxf.common.i18n.Message;

        $r17 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r15 = newarray (java.lang.Object)[3];

        $r18 = virtualinvoke r55.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r15[0] = $r19;

        $r15[1] = r20;

        $r21 = virtualinvoke r55.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r22 = virtualinvoke $r21.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        $r15[2] = $r22;

        specialinvoke $r14.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("CRI_SELECTED", $r17, $r15);

        $r23 = virtualinvoke $r14.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void fine(java.lang.String)>($r23);

     label09:
        return r55;

     label10:
        return null;
    }

    public static org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo, org.apache.cxf.message.Message, java.lang.String, javax.ws.rs.core.MultivaluedMap, java.lang.String, java.util.List, boolean)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r62;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r89, r91;
        javax.ws.rs.core.MediaType r7, r75, $r88, r92;
        java.util.Map $r33;
        java.util.Set $r14, $r29;
        java.lang.Object[] $r17, $r43, $r52, $r64, $r78;
        org.apache.cxf.jaxrs.model.URITemplate $r61;
        short $s0, s4;
        java.util.ResourceBundle $r18, $r45, $r54, $r66, $r79;
        java.lang.String r4, $r5, r6, $r21, $r22, $r23, $r24, $r28, $r35, $r41, $r47, $r49, $r50, $r56, $r58, $r59, $r68, $r69, r71, $r72, $r76, $r81, $r83, $r84, r87, $r93;
        javax.ws.rs.NotSupportedException $r86;
        java.util.Map$Entry r90;
        org.apache.cxf.message.Exchange $r39;
        java.util.TreeMap $r8;
        javax.ws.rs.ClientErrorException $r26;
        java.lang.reflect.Method $r46, $r57, $r67;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16, $z17, $z18;
        java.util.logging.Logger $r1, $r27, $r44, $r53, $r65, $r82;
        java.util.List r11, $r36, $r37;
        javax.ws.rs.core.Response $r25;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r12;
        org.apache.cxf.jaxrs.model.OperationResourceInfoComparator $r9;
        java.lang.String[] $r20, $r40;
        org.apache.cxf.common.i18n.Message $r16, $r42, $r51, $r63, $r77;
        java.util.logging.Level $r0;
        int i1, i2, i3;
        java.util.Iterator $r15, $r30, $r73;
        org.apache.cxf.message.Message r10;
        java.lang.IllegalArgumentException $r85;
        javax.ws.rs.core.MultivaluedMap r2;
        java.lang.Object $r3, $r19, $r31, $r32, $r34, $r38, $r60, $r70, $r74;
        java.lang.Class $r48, $r55, $r80;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r13;

        r12 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r10 := @parameter1: org.apache.cxf.message.Message;

        r4 := @parameter2: java.lang.String;

        r2 := @parameter3: javax.ws.rs.core.MultivaluedMap;

        r6 := @parameter4: java.lang.String;

        r11 := @parameter5: java.util.List;

        z5 := @parameter6: boolean;

        $r1 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label01;

        $r77 = new org.apache.cxf.common.i18n.Message;

        $r79 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r78 = newarray (java.lang.Object)[1];

        $r80 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r81 = virtualinvoke $r80.<java.lang.Class: java.lang.String getName()>();

        $r78[0] = $r81;

        specialinvoke $r77.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("START_OPER_MATCH", $r79, $r78);

        $r82 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r83 = virtualinvoke $r77.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r82.<java.util.logging.Logger: void fine(java.lang.String)>($r83);

     label01:
        $r3 = interfaceinvoke r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("FINAL_MATCH_GROUP");

        $r84 = (java.lang.String) $r3;

        r87 = $r84;

        if $r84 != null goto label02;

        r87 = "/";

     label02:
        $r5 = "GET";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

     label03:
        if $z1 == 0 goto label04;

        $r88 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        goto label05;

     label04:
        $r88 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r6);

     label05:
        r7 = $r88;

     label06:
        goto label08;

     label07:
        $r85 := @caughtexception;

        $r86 = new javax.ws.rs.NotSupportedException;

        specialinvoke $r86.<javax.ws.rs.NotSupportedException: void <init>(java.lang.Throwable)>($r85);

        throw $r86;

     label08:
        $r8 = new java.util.TreeMap;

        $r9 = new org.apache.cxf.jaxrs.model.OperationResourceInfoComparator;

        specialinvoke $r9.<org.apache.cxf.jaxrs.model.OperationResourceInfoComparator: void <init>(org.apache.cxf.message.Message,java.lang.String,boolean,javax.ws.rs.core.MediaType,java.util.List)>(r10, r4, $z1, $r88, r11);

        specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Comparator)>($r9);

        i1 = 0;

        i2 = 0;

        i3 = 0;

        $r13 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.util.Set getOperationResourceInfos()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r60 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r89 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r60;

        z15 = 0;

        $r61 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r62 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r62.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>(r2);

        if $r61 == null goto label15;

        $z8 = virtualinvoke $r61.<org.apache.cxf.jaxrs.model.URITemplate: boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)>(r87, $r62);

        if $z8 == 0 goto label15;

        $z9 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z9 == 0 goto label10;

        interfaceinvoke $r8.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r89, $r62);

        z15 = 1;

        goto label15;

     label10:
        $r70 = interfaceinvoke $r62.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("FINAL_MATCH_GROUP");

        r71 = (java.lang.String) $r70;

        $z10 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r71);

        if $z10 != 0 goto label11;

        $r76 = "/";

        $z14 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r71);

        if $z14 == 0 goto label15;

     label11:
        i1 = i1 + 1;

        $r72 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $z11 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean matchHttpMethod(java.lang.String,java.lang.String)>($r72, r4);

        if $z11 == 0 goto label15;

        i2 = i2 + 1;

        if $z1 != 0 goto label12;

        $z13 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean matchConsumeTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r7, r89);

        if $z13 == 0 goto label15;

     label12:
        i3 = i3 + 1;

        $r73 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z16 = interfaceinvoke $r73.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label15;

        $r74 = interfaceinvoke $r73.<java.util.Iterator: java.lang.Object next()>();

        r75 = (javax.ws.rs.core.MediaType) $r74;

        $z12 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean matchProduceTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r75, r89);

        if $z12 == 0 goto label14;

        interfaceinvoke $r8.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r89, $r62);

        z15 = 1;

        goto label15;

     label14:
        goto label13;

     label15:
        if $z0 == 0 goto label17;

        if z15 == 0 goto label16;

        $r65 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r63 = new org.apache.cxf.common.i18n.Message;

        $r66 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r64 = newarray (java.lang.Object)[1];

        $r67 = virtualinvoke r89.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r68 = virtualinvoke $r67.<java.lang.reflect.Method: java.lang.String getName()>();

        $r64[0] = $r68;

        specialinvoke $r63.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("OPER_SELECTED_POSSIBLY", $r66, $r64);

        $r69 = virtualinvoke $r63.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r65.<java.util.logging.Logger: void fine(java.lang.String)>($r69);

        goto label17;

     label16:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)>(r89, r87, r4, r7, r11);

     label17:
        goto label09;

     label18:
        $z3 = interfaceinvoke $r8.<java.util.SortedMap: boolean isEmpty()>();

        if $z3 != 0 goto label22;

        $r29 = interfaceinvoke $r8.<java.util.SortedMap: java.util.Set entrySet()>();

        $r30 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r90 = (java.util.Map$Entry) $r31;

        interfaceinvoke r2.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        $r32 = interfaceinvoke r90.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.util.Map) $r32;

        interfaceinvoke r2.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r33);

        $r34 = interfaceinvoke r90.<java.util.Map$Entry: java.lang.Object getKey()>();

        r91 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r34;

        $r35 = virtualinvoke r91.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $z6 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean headMethodPossible(java.lang.String,java.lang.String)>($r35, r4);

        if $z6 == 0 goto label19;

        $r53 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r51 = new org.apache.cxf.common.i18n.Message;

        $r54 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r52 = newarray (java.lang.Object)[2];

        $r55 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.String getName()>();

        $r52[0] = $r56;

        $r57 = virtualinvoke r91.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r58 = virtualinvoke $r57.<java.lang.reflect.Method: java.lang.String getName()>();

        $r52[1] = $r58;

        specialinvoke $r51.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("GET_INSTEAD_OF_HEAD", $r54, $r52);

        $r59 = virtualinvoke $r51.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r53.<java.util.logging.Logger: void info(java.lang.String)>($r59);

     label19:
        if $z0 == 0 goto label20;

        $r44 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r42 = new org.apache.cxf.common.i18n.Message;

        $r45 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r43 = newarray (java.lang.Object)[2];

        $r46 = virtualinvoke r91.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r47 = virtualinvoke $r46.<java.lang.reflect.Method: java.lang.String getName()>();

        $r43[0] = $r47;

        $r48 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r49 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        $r43[1] = $r49;

        specialinvoke $r42.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("OPER_SELECTED", $r45, $r43);

        $r50 = virtualinvoke $r42.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r44.<java.util.logging.Logger: void fine(java.lang.String)>($r50);

     label20:
        $z7 = virtualinvoke r91.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isSubResourceLocator()>();

        if $z7 != 0 goto label21;

        $r36 = virtualinvoke r91.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $r37 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectSortMediaTypes(java.util.List,java.util.List,boolean)>(r11, $r36, 0);

        $r38 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(0);

        r92 = (javax.ws.rs.core.MediaType) $r38;

        $r39 = interfaceinvoke r10.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r40 = newarray (java.lang.String)[2];

        $r40[0] = "q";

        $r40[1] = "qs";

        $r41 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r92, $r40);

        interfaceinvoke $r39.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r41);

     label21:
        return r91;

     label22:
        if i1 != 0 goto label23;

        s4 = 404;

        goto label26;

     label23:
        if i2 != 0 goto label24;

        s4 = 405;

        goto label26;

     label24:
        if i3 != 0 goto label25;

        s4 = 415;

        goto label26;

     label25:
        s4 = 406;

     label26:
        $z17 = virtualinvoke r12.<org.apache.cxf.jaxrs.model.ClassResourceInfo: boolean isRoot()>();

        if $z17 == 0 goto label27;

        $r93 = "NO_OP_EXC";

        goto label28;

     label27:
        $r93 = "NO_SUBRESOURCE_METHOD_FOUND";

     label28:
        $r16 = new org.apache.cxf.common.i18n.Message;

        $r18 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r17 = newarray (java.lang.Object)[5];

        $r19 = interfaceinvoke r10.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        $r17[0] = $r19;

        $r17[1] = r87;

        $r17[2] = r4;

        $r20 = newarray (java.lang.String)[0];

        $r21 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r7, $r20);

        $r17[3] = $r21;

        $r22 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String convertTypesToString(java.util.List)>(r11);

        $r17[4] = $r22;

        specialinvoke $r16.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>($r93, $r18, $r17);

        $r23 = "OPTIONS";

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z4 != 0 goto label29;

        if z5 == 0 goto label29;

        $r27 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r28 = virtualinvoke $r16.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r27.<java.util.logging.Logger: void warning(java.lang.String)>($r28);

     label29:
        $r24 = virtualinvoke $r16.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $s0 = s4;

        if i2 != 0 goto label30;

        $z18 = 1;

        goto label31;

     label30:
        $z18 = 0;

     label31:
        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)>(r12, r10, $r24, $s0, $z18);

        $r26 = new javax.ws.rs.ClientErrorException;

        specialinvoke $r26.<javax.ws.rs.ClientErrorException: void <init>(javax.ws.rs.core.Response)>($r25);

        throw $r26;

        catch java.lang.IllegalArgumentException from label03 to label06 with label07;
    }

    private static java.util.List intersectSortMediaTypes(java.util.List, java.util.List, boolean)
    {
        java.util.List r0, r1, $r2;
        int $i0;
        org.apache.cxf.jaxrs.utils.JAXRSUtils$1 $r3;
        boolean z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean,boolean)>(r0, r1, 1, z0);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r3 = new org.apache.cxf.jaxrs.utils.JAXRSUtils$1;

        specialinvoke $r3.<org.apache.cxf.jaxrs.utils.JAXRSUtils$1: void <init>(boolean)>(z0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r3);

     label1:
        return $r2;
    }

    private static int compareQualityAndDistance(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, boolean)
    {
        java.lang.Integer $r5, $r9;
        javax.ws.rs.core.MediaType r0, r1;
        java.util.Map $r2, $r6;
        int $i0, i1;
        java.lang.Object $r3, $r7;
        java.lang.String $r4, $r8;
        boolean z0;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>(r0, r1, "q");

        i1 = $i0;

        if $i0 != 0 goto label1;

        i1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>(r0, r1, "qs");

     label1:
        if i1 != 0 goto label2;

        if z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("d");

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("d");

        $r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r8);

        i1 = virtualinvoke $r5.<java.lang.Integer: int compareTo(java.lang.Integer)>($r9);

     label2:
        return i1;
    }

    public static boolean noResourceMethodForOptions(javax.ws.rs.core.Response, java.lang.String)
    {
        javax.ws.rs.core.Response r0;
        int $i0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: javax.ws.rs.core.Response;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 != 405 goto label1;

        $r2 = "OPTIONS";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.String, java.lang.String, javax.ws.rs.core.MediaType, java.util.List)
    {
        java.lang.Object[] $r1;
        org.apache.cxf.jaxrs.model.URITemplate $r7;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r2;
        org.apache.cxf.common.i18n.Message $r0;
        javax.ws.rs.core.MediaType r11;
        java.util.ResourceBundle $r3;
        java.lang.String $r5, r6, $r8, r9, $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.reflect.Method $r4;
        java.util.logging.Logger $r19;
        java.util.List $r13, r15, $r17;

        r2 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r11 := @parameter3: javax.ws.rs.core.MediaType;

        r15 := @parameter4: java.util.List;

        $r0 = new org.apache.cxf.common.i18n.Message;

        $r3 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r1 = newarray (java.lang.Object)[9];

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r1[0] = $r5;

        $r1[1] = r6;

        $r7 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        $r1[2] = $r8;

        $r1[3] = r9;

        $r10 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $r1[4] = $r10;

        $r12 = virtualinvoke r11.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r1[5] = $r12;

        $r13 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String convertTypesToString(java.util.List)>($r13);

        $r1[6] = $r14;

        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String convertTypesToString(java.util.List)>(r15);

        $r1[7] = $r16;

        $r17 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String convertTypesToString(java.util.List)>($r17);

        $r1[8] = $r18;

        specialinvoke $r0.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("OPER_NO_MATCH", $r3, $r1);

        $r19 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r20 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void fine(java.lang.String)>($r20);

        return;
    }

    public static javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo, org.apache.cxf.message.Message, java.lang.String, int, boolean)
    {
        javax.ws.rs.core.MediaType $r3;
        int i0;
        java.lang.String r5, r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r8;
        org.apache.cxf.message.Message r1;
        java.util.Set $r7;
        javax.ws.rs.core.Response $r11;
        javax.ws.rs.core.Response$ResponseBuilder $r0, $r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r6;
        java.lang.Object $r2, $r9;

        r6 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r5 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r0 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>(i0);

        if z0 == 0 goto label4;

        $r7 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Set getAllowedMethods()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>("Allow", r10);

        goto label1;

     label2:
        $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>("OPTIONS");

        if $z3 != 0 goto label3;

        virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>("Allow", "OPTIONS");

     label3:
        $z4 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>("HEAD");

        if $z4 != 0 goto label4;

        $z5 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>("GET");

        if $z5 == 0 goto label4;

        virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>("Allow", "HEAD");

     label4:
        if r1 == null goto label5;

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.jaxrs.report-fault-message");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r2);

        if $z1 == 0 goto label5;

        $r3 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType TEXT_PLAIN_TYPE>;

        $r4 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)>($r3);

        virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r5);

     label5:
        $r11 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r11;
    }

    private static boolean matchHttpMethod(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean headMethodPossible(java.lang.String,java.lang.String)>(r0, r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean headMethodPossible(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "HEAD";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r3 = "GET";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static java.lang.String convertTypesToString(java.util.List)
    {
        java.util.Iterator $r2;
        java.lang.String[] $r6;
        java.util.List r1;
        javax.ws.rs.core.MediaType r5;
        java.lang.StringBuilder $r0, $r8;
        java.lang.Object $r4;
        java.lang.String $r3, $r7;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.ws.rs.core.MediaType) $r4;

        $r6 = newarray (java.lang.String)[0];

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r5, $r6);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.util.List getConsumeTypes(javax.ws.rs.Consumes)
    {
        javax.ws.rs.core.MediaType $r2;
        java.util.List $r3;
        javax.ws.rs.Consumes r0;
        java.lang.String[] $r1;

        r0 := @parameter0: javax.ws.rs.Consumes;

        if r0 != null goto label1;

        $r2 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType ALL_TYPES>;

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<javax.ws.rs.Consumes: java.lang.String[] value()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getMediaTypes(java.lang.String[])>($r1);

     label2:
        return $r3;
    }

    public static java.util.List getProduceTypes(javax.ws.rs.Produces)
    {
        javax.ws.rs.core.MediaType $r2;
        java.util.List $r3;
        javax.ws.rs.Produces r0;
        java.lang.String[] $r1;

        r0 := @parameter0: javax.ws.rs.Produces;

        if r0 != null goto label1;

        $r2 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType ALL_TYPES>;

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r2);

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<javax.ws.rs.Produces: java.lang.String[] value()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getMediaTypes(java.lang.String[])>($r1);

     label2:
        return $r3;
    }

    public static int compareSortedConsumesMediaTypes(java.util.List, java.util.List, javax.ws.rs.core.MediaType)
    {
        java.util.List r0, $r2, r3, $r4;
        javax.ws.rs.core.MediaType r1;
        int $i0;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r1 := @parameter2: javax.ws.rs.core.MediaType;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getCompatibleMediaTypes(java.util.List,javax.ws.rs.core.MediaType)>(r0, r1);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getCompatibleMediaTypes(java.util.List,javax.ws.rs.core.MediaType)>(r3, r1);

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareSortedMediaTypes(java.util.List,java.util.List,java.lang.String)>($r2, $r4, null);

        return $i0;
    }

    public static int compareSortedAcceptMediaTypes(java.util.List, java.util.List, java.util.List)
    {
        javax.ws.rs.core.MediaType $r6, $r8, $r10, $r12;
        byte $b5;
        int $i0, $i1, $i2, i3, i4;
        java.util.List r0, r1, $r2, r3, $r4;
        java.lang.Object $r5, $r7, $r9, $r11;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r1 := @parameter2: java.util.List;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectSortMediaTypes(java.util.List,java.util.List,boolean)>(r0, r1, 1);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectSortMediaTypes(java.util.List,java.util.List,boolean)>(r3, r1, 1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label4;

        if i3 >= $i1 goto label4;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (javax.ws.rs.core.MediaType) $r5;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (javax.ws.rs.core.MediaType) $r7;

        $i2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>($r6, $r8, null);

        i4 = $i2;

        if $i2 != 0 goto label2;

        $r9 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r10 = (javax.ws.rs.core.MediaType) $r9;

        $r11 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r12 = (javax.ws.rs.core.MediaType) $r11;

        i4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareQualityAndDistance(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,boolean)>($r10, $r12, 1);

     label2:
        if i4 == 0 goto label3;

        return i4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        if $i0 != $i1 goto label5;

        $b5 = 0;

        goto label7;

     label5:
        if $i0 >= $i1 goto label6;

        $b5 = -1;

        goto label7;

     label6:
        $b5 = 1;

     label7:
        return $b5;
    }

    private static java.util.List getCompatibleMediaTypes(java.util.List, javax.ws.rs.core.MediaType)
    {
        java.util.Iterator $r2;
        java.util.List r0, r6;
        javax.ws.rs.core.MediaType r4, r5;
        int $i0;
        java.lang.Object $r3;
        java.util.LinkedList $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: javax.ws.rs.core.MediaType;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        r6 = r0;

        goto label4;

     label1:
        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r6 = $r1;

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.ws.rs.core.MediaType) $r3;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean isMediaTypeCompatible(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)>(r4, r5);

        if $z1 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        return r6;
    }

    public static int compareSortedMediaTypes(java.util.List, java.util.List, java.lang.String)
    {
        java.util.List r0, r1;
        javax.ws.rs.core.MediaType $r3, $r6;
        byte $b4;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r4;
        java.lang.String r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r5 := @parameter2: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        if i3 >= $i1 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (javax.ws.rs.core.MediaType) $r2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (javax.ws.rs.core.MediaType) $r4;

        $i2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>($r3, $r6, r5);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if $i0 != $i1 goto label4;

        $b4 = 0;

        goto label6;

     label4:
        if $i0 >= $i1 goto label5;

        $b4 = -1;

        goto label6;

     label5:
        $b4 = 1;

     label6:
        return $b4;
    }

    public static int compareMediaTypes(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)
    {
        int $i0;
        javax.ws.rs.core.MediaType r0, r1;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>(r0, r1, "q");

        return $i0;
    }

    public static int compareMediaTypes(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, java.lang.String)
    {
        javax.ws.rs.core.MediaType r0, r1;
        int $i0, $i2, $i4;
        java.lang.String $r2, $r3, r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        r4 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<javax.ws.rs.core.MediaType: boolean isWildcardType()>();

        $z1 = virtualinvoke r1.<javax.ws.rs.core.MediaType: boolean isWildcardType()>();

        if $z0 == 0 goto label1;

        if $z1 != 0 goto label1;

        return 1;

     label1:
        if $z0 != 0 goto label2;

        if $z1 == 0 goto label2;

        $i2 = (int) -1;

        return $i2;

     label2:
        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        $r3 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z2 == 0 goto label3;

        if $z3 != 0 goto label3;

        return 1;

     label3:
        if $z2 != 0 goto label4;

        if $z3 == 0 goto label4;

        $i4 = (int) -1;

        return $i4;

     label4:
        if r4 == null goto label5;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,java.lang.String)>(r0, r1, r4);

        goto label6;

     label5:
        $i0 = 0;

     label6:
        return $i0;
    }

    public static int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0, r4;
        java.util.Map $r1, $r5;
        int $i0, $i1, $i3;
        float $f0, $f1;
        java.lang.Object $r2, $r6;
        java.lang.String $r3, $r7;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r4 := @parameter1: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("q");

        $r3 = (java.lang.String) $r2;

        $f0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: float getMediaTypeQualityFactor(java.lang.String)>($r3);

        $r5 = virtualinvoke r4.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("q");

        $r7 = (java.lang.String) $r6;

        $f1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: float getMediaTypeQualityFactor(java.lang.String)>($r7);

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, $f1);

        $i3 = (int) -1;

        $i1 = $i0 * $i3;

        return $i1;
    }

    public static int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, java.lang.String)
    {
        javax.ws.rs.core.MediaType r0, r5;
        java.util.Map $r1, $r6;
        int $i0, $i1, $i3;
        float $f0, $f1;
        java.lang.Object $r3, $r7;
        java.lang.String r2, $r4, $r8;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r5 := @parameter1: javax.ws.rs.core.MediaType;

        r2 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        $f0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: float getMediaTypeQualityFactor(java.lang.String)>($r4);

        $r6 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (java.lang.String) $r7;

        $f1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: float getMediaTypeQualityFactor(java.lang.String)>($r8);

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, $f1);

        $i3 = (int) -1;

        $i1 = $i0 * $i3;

        return $i1;
    }

    public static float getMediaTypeQualityFactor(java.lang.String)
    {
        char $c0;
        java.lang.NumberFormatException $r3;
        int $i1;
        float $f0;
        java.lang.StringBuilder $r1, $r2, $r5;
        java.lang.String r4;

        r4 := @parameter0: java.lang.String;

        if r4 != null goto label1;

        return 1.0F;

     label1:
        $c0 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 46 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r4);

     label3:
        return $f0;

     label4:
        $r3 := @caughtexception;

        return 1.0F;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public static java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.lang.Object[] $r7;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;
        org.apache.cxf.jaxrs.model.Parameter $r18;
        java.lang.'annotation'.Annotation[] $r23;
        java.util.ArrayList $r10;
        int $i0, $i1, i2, $i3;
        java.lang.reflect.Method $r1, $r2, $r21;
        java.lang.'annotation'.Annotation[][] $r9;
        org.apache.cxf.message.Message r17;
        java.lang.Class[] $r3;
        javax.ws.rs.core.MultivaluedMap r16;
        java.util.List $r4, $r5;
        java.lang.reflect.Type $r13, $r14;
        java.lang.reflect.Type[] $r8;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r11;
        org.apache.cxf.jaxrs.model.Parameter[] $r6, $r20;
        java.lang.Class $r12, $r15, r22;
        java.lang.Object $r19;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r16 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r17 := @parameter2: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        if $r2 != null goto label1;

        $r21 = $r1;

        goto label2;

     label1:
        $r21 = $r2;

     label2:
        $r3 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = newarray (org.apache.cxf.jaxrs.model.Parameter)[$i0];

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r20 = (org.apache.cxf.jaxrs.model.Parameter[]) $r7;

        $r8 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r9 = virtualinvoke $r21.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r10 = new java.util.ArrayList;

        $i1 = lengthof $r3;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i1);

        i2 = 0;

     label3:
        $i3 = lengthof $r3;

        if i2 >= $i3 goto label6;

        r22 = $r3[i2];

        $r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r12 = virtualinvoke $r11.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r13 = $r8[i2];

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.reflect.Type processGenericTypeIfNeeded(java.lang.Class,java.lang.Class,java.lang.reflect.Type)>($r12, r22, $r13);

        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class updateParamClassToTypeIfNeeded(java.lang.Class,java.lang.reflect.Type)>(r22, $r14);

        if $r9 != null goto label4;

        $r23 = newarray (java.lang.'annotation'.Annotation)[0];

        goto label5;

     label4:
        $r23 = $r9[i2];

     label5:
        $r18 = $r20[i2];

        $r19 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r15, $r14, $r23, $r18, r16, r17, r0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r19);

        i2 = i2 + 1;

        goto label3;

     label6:
        return $r10;
    }

    private static java.lang.Object processParameter(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], org.apache.cxf.jaxrs.model.Parameter, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.OperationResourceInfo) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r14;
        org.apache.cxf.jaxrs.model.ParameterType $r4, $r5, $r6, $r7, $r8, $r9;
        javax.ws.rs.core.MediaType $r30;
        java.util.logging.Logger $r23;
        java.util.List $r31;
        java.lang.reflect.Type r11;
        java.lang.Object[] $r20;
        org.apache.cxf.jaxrs.model.Parameter r3;
        java.lang.'annotation'.Annotation[] r12;
        org.apache.cxf.common.i18n.Message $r19;
        org.apache.cxf.jaxrs.impl.AsyncResponseImpl $r27;
        java.util.ResourceBundle $r21;
        java.lang.String $r22, $r24, r26, r28, $r29;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.core.MultivaluedMap r13;
        java.lang.Object $r1, $r15, $r16, $r17, $r18, $r25, $r32;
        java.lang.Class r10;
        java.io.InputStream r2;

        r10 := @parameter0: java.lang.Class;

        r11 := @parameter1: java.lang.reflect.Type;

        r12 := @parameter2: java.lang.'annotation'.Annotation[];

        r3 := @parameter3: org.apache.cxf.jaxrs.model.Parameter;

        r13 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter5: org.apache.cxf.message.Message;

        r14 := @parameter6: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r2 = (java.io.InputStream) $r1;

        $r4 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r5 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        if $r4 != $r5 goto label5;

        if r10 != class "Ljavax/ws/rs/container/AsyncResponse;" goto label1;

        $r27 = new org.apache.cxf.jaxrs.impl.AsyncResponseImpl;

        specialinvoke $r27.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void <init>(org.apache.cxf.message.Message)>(r0);

        return $r27;

     label1:
        $r18 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        r28 = (java.lang.String) $r18;

        if r28 != null goto label4;

        $r19 = new org.apache.cxf.common.i18n.Message;

        $r21 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r20 = newarray (java.lang.Object)[1];

        $r22 = virtualinvoke r14.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $r20[0] = $r22;

        specialinvoke $r19.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_CONTENT_TYPE_SPECIFIED", $r21, $r20);

        $r23 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r24 = virtualinvoke $r19.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.logging.Logger: void fine(java.lang.String)>($r24);

        $r25 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("default.content.type");

        r26 = (java.lang.String) $r25;

        if r26 != null goto label2;

        $r29 = "application/octet-stream";

        goto label3;

     label2:
        $r29 = r26;

     label3:
        r28 = $r29;

     label4:
        $r30 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r28);

        $r31 = virtualinvoke r14.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r32 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)>(r10, r11, r12, r2, $r30, $r31, r0);

        return $r32;

     label5:
        $r6 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r7 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType CONTEXT>;

        if $r6 != $r7 goto label6;

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)>(r0, r11, r10);

        return $r17;

     label6:
        $r8 = virtualinvoke r3.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r9 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        if $r8 != $r9 goto label7;

        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createBeanParamValue(org.apache.cxf.message.Message,java.lang.Class,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r0, r10, r14);

        return $r16;

     label7:
        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)>(r3, r10, r11, r12, r0, r13, r14);

        return $r15;
    }

    public static java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], org.apache.cxf.message.Message, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r31;
        org.apache.cxf.jaxrs.model.ParameterType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r34, $r35;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.reflect.Type r14;
        org.apache.cxf.jaxrs.model.Parameter r0;
        java.lang.'annotation'.Annotation[] r15;
        java.lang.String $r12, $r16, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r30, $r32, r33;
        org.apache.cxf.message.Message r11;
        javax.ws.rs.core.MultivaluedMap r28;
        java.lang.Class r13;
        java.lang.Object $r17, $r19, $r22, $r25, $r29, r36;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.Parameter;

        r13 := @parameter1: java.lang.Class;

        r14 := @parameter2: java.lang.reflect.Type;

        r15 := @parameter3: java.lang.'annotation'.Annotation[];

        r11 := @parameter4: org.apache.cxf.message.Message;

        r28 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r31 := @parameter6: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: boolean isEncoded()>();

        if $z0 != 0 goto label01;

        if r31 == null goto label02;

        $z2 = virtualinvoke r31.<org.apache.cxf.jaxrs.model.OperationResourceInfo: boolean isEncodedEnabled()>();

        if $z2 == 0 goto label02;

     label01:
        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z1 = $z3;

        $r32 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getDefaultValue()>();

        r33 = $r32;

        if $r32 != null goto label04;

        if r31 == null goto label04;

        r33 = virtualinvoke r31.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getDefaultParameterValue()>();

     label04:
        $r34 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r35 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        if $r34 != $r35 goto label07;

        $r27 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r30 = r33;

        if z1 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        $r29 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)>(r11, $r27, r13, r14, r15, r28, $r30, $z4);

        return $r29;

     label07:
        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r2 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        if $r1 != $r2 goto label10;

        $r24 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r26 = r33;

        if z1 != 0 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)>($r24, r13, r14, r15, r11, $r26, $z5);

        return $r25;

     label10:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r4 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        if $r3 != $r4 goto label13;

        $r21 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r23 = r33;

        if z1 != 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        $r22 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)>(r11, $r21, r13, r14, r15, $r23, $z6);

        return $r22;

     label13:
        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r6 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        if $r5 != $r6 goto label16;

        $r18 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r20 = r33;

        if z1 != 0 goto label14;

        $z7 = 1;

        goto label15;

     label14:
        $z7 = 0;

     label15:
        $r19 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)>(r11, $r18, r13, r14, r15, $r20, $z7);

        return $r19;

     label16:
        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r8 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType COOKIE>;

        if $r7 != $r8 goto label17;

        $r16 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)>(r11, $r16, r13, r14, r15, r33);

        return $r17;

     label17:
        r36 = null;

        $r9 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r10 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType HEADER>;

        if $r9 != $r10 goto label18;

        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.Parameter: java.lang.String getName()>();

        r36 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)>(r11, $r12, r13, r14, r15, r33);

     label18:
        return r36;
    }

    private static java.lang.Object processMatrixParam(org.apache.cxf.message.Message, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, boolean)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r4;
        org.apache.cxf.jaxrs.model.ParameterType $r13, $r15;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Set $r20;
        java.util.List $r3, $r25, r30;
        java.lang.reflect.Type r10;
        java.lang.'annotation'.Annotation[] r11;
        int $i0;
        java.lang.String $r2, r6, $r7, r12, r28;
        java.util.Map$Entry r23;
        java.util.Iterator $r5, $r21, $r26;
        javax.ws.rs.core.PathSegment r18;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.core.MultivaluedMap $r19;
        java.lang.Object $r1, $r8, $r14, $r16, $r17, $r22, $r24, $r27, $r29;
        java.lang.Class r9;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.Class;

        r10 := @parameter3: java.lang.reflect.Type;

        r11 := @parameter4: java.lang.'annotation'.Annotation[];

        r12 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        $r2 = (java.lang.String) $r1;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean)>($r2, z0);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label8;

        $r4 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r4.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r17 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r18 = (javax.ws.rs.core.PathSegment) $r17;

        $r19 = interfaceinvoke r18.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        $r20 = interfaceinvoke $r19.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r22;

        $r24 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (java.util.List) $r24;

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r27 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r27;

        $r29 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r29, r28);

        goto label3;

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        $r7 = "";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label7;

        $r15 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)>(r9, r11, $r4, $r15, r0, 0);

        return $r16;

     label7:
        $r8 = interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r6);

        r30 = (java.util.List) $r8;

        $r13 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>(r30, r9, r10, r11, r12, 0, $r13, r0);

        return $r14;

     label8:
        return null;
    }

    private static java.lang.Object processFormParam(org.apache.cxf.message.Message, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String, boolean)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r15;
        org.apache.cxf.jaxrs.model.ParameterType $r11, $r13;
        javax.ws.rs.core.MediaType $r3, $r21, $r31;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.logging.Logger $r28;
        java.util.List r36;
        javax.ws.rs.core.HttpHeaders $r2;
        java.lang.reflect.Type r8;
        java.lang.Object[] $r25;
        java.lang.'annotation'.Annotation[] r9;
        org.apache.cxf.common.i18n.Message $r24;
        org.apache.cxf.jaxrs.ext.MessageContextImpl $r0;
        javax.servlet.http.HttpServletRequest $r33;
        java.util.ResourceBundle $r26;
        java.lang.String r5, r10, $r16, $r19, $r22, $r23, $r27, $r29, $r35;
        javax.ws.rs.NotSupportedException $r30;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.ext.multipart.MultipartBody $r32;
        javax.ws.rs.core.MultivaluedMap r34;
        java.lang.Object $r4, $r6, $r12, $r14, $r17, $r20;
        java.lang.Class r7;
        java.io.InputStream $r18;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r5 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Class;

        r8 := @parameter3: java.lang.reflect.Type;

        r9 := @parameter4: java.lang.'annotation'.Annotation[];

        r10 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r0 = new org.apache.cxf.jaxrs.ext.MessageContextImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.ext.MessageContextImpl: void <init>(org.apache.cxf.message.Message)>(r1);

        $r2 = interfaceinvoke $r0.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.HttpHeaders getHttpHeaders()>();

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.HttpHeaders: javax.ws.rs.core.MediaType getMediaType()>();

        $r4 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.form_data");

        r34 = (javax.ws.rs.core.MultivaluedMap) $r4;

        if r34 != null goto label4;

        $r15 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r15.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r34 = $r15;

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.form_data", $r15);

        if $r3 == null goto label1;

        $r21 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_FORM_URLENCODED_TYPE>;

        $z1 = virtualinvoke $r3.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r21);

        if $z1 == 0 goto label2;

     label1:
        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)>($r3, "UTF-8");

        $r17 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        $r18 = (java.io.InputStream) $r17;

        $r19 = staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: java.lang.String readBody(java.io.InputStream,java.lang.String)>($r18, $r16);

        $r20 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.REQUEST");

        $r33 = (javax.servlet.http.HttpServletRequest) $r20;

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)>($r15, r1, $r19, $r16, z0, $r33);

        goto label4;

     label2:
        $r22 = "multipart";

        $r23 = virtualinvoke $r3.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r23);

        if $z2 == 0 goto label3;

        $r31 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType MULTIPART_FORM_DATA_TYPE>;

        $z3 = virtualinvoke $r31.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>($r3);

        if $z3 == 0 goto label3;

        $r32 = staticinvoke <org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils: org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)>($r0);

        staticinvoke <org.apache.cxf.jaxrs.utils.FormUtils: void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)>($r15, $r32, r1, z0);

        goto label4;

     label3:
        $r24 = new org.apache.cxf.common.i18n.Message;

        $r26 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r25 = newarray (java.lang.Object)[1];

        $r27 = virtualinvoke $r3.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        $r25[0] = $r27;

        specialinvoke $r24.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("WRONG_FORM_MEDIA_TYPE", $r26, $r25);

        $r28 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        $r29 = virtualinvoke $r24.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r28.<java.util.logging.Logger: void warning(java.lang.String)>($r29);

        $r30 = new javax.ws.rs.NotSupportedException;

        specialinvoke $r30.<javax.ws.rs.NotSupportedException: void <init>()>();

        throw $r30;

     label4:
        $r35 = "";

        $z4 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label5;

        $r13 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)>(r7, r9, r34, $r13, r1, 0);

        return $r14;

     label5:
        $r6 = interfaceinvoke r34.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r5);

        r36 = (java.util.List) $r6;

        $r11 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>(r36, r7, r8, r9, r10, 0, $r11, r1);

        return $r12;
    }

    public static javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String, boolean)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r3;
        javax.ws.rs.core.MultivaluedMap $r2;
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(59);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r3 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r2 = $r3;

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        goto label2;

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>($r1, ";", z0, 0);

     label2:
        return $r2;
    }

    private static java.lang.Object processHeaderParam(org.apache.cxf.message.Message, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String)
    {
        org.apache.cxf.message.Message r1;
        java.lang.'annotation'.Annotation[] r6;
        org.apache.cxf.jaxrs.model.ParameterType $r9;
        java.util.List $r3, r8;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r0;
        java.lang.reflect.Type r5;
        java.lang.Class r4;
        java.lang.Object $r10;
        java.lang.String r2, r7;
        boolean $z0;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Class;

        r5 := @parameter3: java.lang.reflect.Type;

        r6 := @parameter4: java.lang.'annotation'.Annotation[];

        r7 := @parameter5: java.lang.String;

        $r0 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r1);

        $r3 = virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.List getRequestHeader(java.lang.String)>(r2);

        r8 = $r3;

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r8 = null;

     label1:
        $r9 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType HEADER>;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>(r8, r4, r5, r6, r7, 0, $r9, r1);

        return $r10;
    }

    private static java.lang.Object processCookieParam(org.apache.cxf.message.Message, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.lang.String)
    {
        java.lang.'annotation'.Annotation[] r7;
        org.apache.cxf.jaxrs.model.ParameterType $r8;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r0;
        java.util.Map $r2;
        java.lang.String r3, $r6, r10, $r15;
        boolean $z0;
        org.apache.cxf.message.Message r1;
        javax.ws.rs.core.Cookie r17;
        java.lang.reflect.Type r16;
        java.lang.Object $r4, $r9;
        java.lang.Class r5;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Class;

        r16 := @parameter3: java.lang.reflect.Type;

        r7 := @parameter4: java.lang.'annotation'.Annotation[];

        r10 := @parameter5: java.lang.String;

        $r0 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: java.util.Map getCookies()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r17 = (javax.ws.rs.core.Cookie) $r4;

        if r17 != null goto label1;

        if r10 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <javax.ws.rs.core.Cookie: javax.ws.rs.core.Cookie valueOf(java.lang.String)>($r15);

     label1:
        if r17 != null goto label2;

        return null;

     label2:
        $z0 = virtualinvoke r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljavax/ws/rs/core/Cookie;");

        if $z0 == 0 goto label3;

        return r17;

     label3:
        $r6 = virtualinvoke r17.<javax.ws.rs.core.Cookie: java.lang.String getValue()>();

        $r8 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType COOKIE>;

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>($r6, 0, r5, r7, $r8, r1);

        return $r9;
    }

    public static java.lang.Object createBeanParamValue(org.apache.cxf.message.Message, java.lang.Class, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        java.lang.Throwable $r10;
        org.apache.cxf.jaxrs.model.BeanParamInfo $r3;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.InternalServerErrorException $r9, $r11;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r7;
        java.util.logging.Logger $r8;
        java.lang.Class r2, $r5;
        java.lang.Object $r6;
        java.lang.String $r4;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: java.lang.Class;

        r7 := @parameter2: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r3 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.model.BeanParamInfo getBeanParamInfo(java.lang.Class)>(r2);

        if $r3 != null goto label1;

        $r8 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void warning(java.lang.String)>("Bean parameter info is not available");

        $r9 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r9.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r9;

     label1:
        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>($r4, class "Lorg/apache/cxf/jaxrs/utils/JAXRSUtils;");

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r11.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label4:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.BeanResourceInfo,java.lang.Object,org.apache.cxf.message.Message)>(r7, $r3, $r6, r0);

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r6, $r3, r0);

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.Object createContextValue(org.apache.cxf.message.Message, java.lang.reflect.Type, java.lang.Class)
    {
        javax.ws.rs.core.SecurityContext r38, $r39;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r27;
        org.apache.cxf.jaxrs.impl.SecurityContextImpl $r43;
        org.apache.cxf.jaxrs.impl.ResourceContextImpl $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.cxf.jaxrs.impl.ProvidersImpl $r48;
        org.apache.cxf.jaxrs.impl.ResourceInfoImpl $r45;
        org.apache.cxf.jaxrs.impl.RequestImpl $r47;
        java.lang.reflect.Type r21;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r5;
        org.apache.cxf.jaxrs.ext.MessageContextImpl $r44;
        org.apache.cxf.jaxrs.model.ProviderInfo r40;
        org.apache.cxf.jaxrs.ext.ContextProvider $r6;
        java.lang.Boolean $r31;
        java.lang.String $r19;
        org.apache.cxf.message.Message r0, $r34, r35;
        org.apache.cxf.message.Exchange $r1, $r16, $r25, $r33;
        org.apache.cxf.endpoint.Endpoint $r17;
        java.lang.Class r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r37;
        java.lang.Object $r4, $r20, $r26, $r30, $r32, r36, $r41, $r42;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r21 := @parameter1: java.lang.reflect.Type;

        r2 := @parameter2: java.lang.Class;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label01;

        $r33 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r34 = interfaceinvoke $r33.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        goto label02;

     label01:
        $r34 = r0;

     label02:
        r35 = $r34;

        if $r34 != null goto label03;

        $r31 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r32 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.message.inbound");

        $z11 = virtualinvoke $r31.<java.lang.Boolean: boolean equals(java.lang.Object)>($r32);

        if $z11 == 0 goto label03;

        r35 = r0;

     label03:
        r36 = null;

        $r37 = class "Ljavax/ws/rs/core/UriInfo;";

        $z12 = virtualinvoke $r37.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z12 == 0 goto label04;

        r36 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.UriInfo createUriInfo(org.apache.cxf.message.Message)>(r35);

        goto label18;

     label04:
        $r3 = class "Ljavax/ws/rs/core/HttpHeaders;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z0 != 0 goto label05;

        $r7 = class "Lorg/apache/cxf/jaxrs/ext/ProtocolHeaders;";

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 == 0 goto label06;

     label05:
        r36 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createHttpHeaders(org.apache.cxf.message.Message,java.lang.Class)>(r35, r2);

        goto label18;

     label06:
        $r8 = class "Ljavax/ws/rs/core/SecurityContext;";

        $z3 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z3 == 0 goto label09;

        $r30 = interfaceinvoke r35.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/SecurityContext;");

        r38 = (javax.ws.rs.core.SecurityContext) $r30;

        if r38 != null goto label07;

        $r43 = new org.apache.cxf.jaxrs.impl.SecurityContextImpl;

        $r39 = $r43;

        specialinvoke $r43.<org.apache.cxf.jaxrs.impl.SecurityContextImpl: void <init>(org.apache.cxf.message.Message)>(r35);

        goto label08;

     label07:
        $r39 = r38;

     label08:
        r36 = $r39;

        goto label18;

     label09:
        $r9 = class "Lorg/apache/cxf/jaxrs/ext/MessageContext;";

        $z4 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z4 == 0 goto label10;

        $r44 = new org.apache.cxf.jaxrs.ext.MessageContextImpl;

        specialinvoke $r44.<org.apache.cxf.jaxrs.ext.MessageContextImpl: void <init>(org.apache.cxf.message.Message)>(r0);

        r36 = $r44;

        goto label18;

     label10:
        $r10 = class "Ljavax/ws/rs/container/ResourceInfo;";

        $z5 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z5 == 0 goto label11;

        $r45 = new org.apache.cxf.jaxrs.impl.ResourceInfoImpl;

        specialinvoke $r45.<org.apache.cxf.jaxrs.impl.ResourceInfoImpl: void <init>(org.apache.cxf.message.Message)>(r35);

        r36 = $r45;

        goto label18;

     label11:
        $r11 = class "Ljavax/ws/rs/container/ResourceContext;";

        $z6 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z6 == 0 goto label12;

        $r46 = new org.apache.cxf.jaxrs.impl.ResourceContextImpl;

        $r25 = interfaceinvoke r35.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r26 = interfaceinvoke $r25.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;");

        $r27 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r26;

        specialinvoke $r46.<org.apache.cxf.jaxrs.impl.ResourceContextImpl: void <init>(org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r27);

        r36 = $r46;

        goto label18;

     label12:
        $r12 = class "Ljavax/ws/rs/core/Request;";

        $z7 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z7 == 0 goto label13;

        $r47 = new org.apache.cxf.jaxrs.impl.RequestImpl;

        specialinvoke $r47.<org.apache.cxf.jaxrs.impl.RequestImpl: void <init>(org.apache.cxf.message.Message)>(r35);

        r36 = $r47;

        goto label18;

     label13:
        $r13 = class "Ljavax/ws/rs/ext/Providers;";

        $z8 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z8 == 0 goto label14;

        $r48 = new org.apache.cxf.jaxrs.impl.ProvidersImpl;

        specialinvoke $r48.<org.apache.cxf.jaxrs.impl.ProvidersImpl: void <init>(org.apache.cxf.message.Message)>(r35);

        r36 = $r48;

        goto label18;

     label14:
        $r14 = class "Ljavax/ws/rs/ext/ContextResolver;";

        $z9 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z9 == 0 goto label15;

        r36 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)>(r21, r35);

        goto label18;

     label15:
        $r15 = class "Ljavax/ws/rs/core/Application;";

        $z10 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z10 == 0 goto label18;

        $r16 = interfaceinvoke r35.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r17 = interfaceinvoke $r16.<org.apache.cxf.message.Exchange: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r18 = class "Ljavax/ws/rs/core/Application;";

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = interfaceinvoke $r17.<org.apache.cxf.endpoint.Endpoint: java.lang.Object get(java.lang.Object)>($r19);

        r40 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r20;

        if r40 != null goto label16;

        $r41 = null;

        goto label17;

     label16:
        $r41 = virtualinvoke r40.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

     label17:
        r36 = $r41;

     label18:
        if r36 != null goto label19;

        if r35 == null goto label19;

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isRequestor(org.apache.cxf.message.Message)>(r35);

        if $z1 != 0 goto label19;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createServletResourceValue(org.apache.cxf.message.Message,java.lang.Class)>(r35, r2);

        r36 = $r4;

        if $r4 != null goto label19;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)>(r2, r35);

        if $r6 == null goto label19;

        r36 = interfaceinvoke $r6.<org.apache.cxf.jaxrs.ext.ContextProvider: java.lang.Object createContext(org.apache.cxf.message.Message)>(r35);

     label19:
        $r42 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r36);

        return $r42;
    }

    private static javax.ws.rs.core.UriInfo createUriInfo(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r2, $r3;
        org.apache.cxf.message.Exchange $r0, $r1;
        javax.ws.rs.core.MultivaluedMap $r5;
        org.apache.cxf.jaxrs.impl.UriInfoImpl $r6;
        java.lang.Object $r4;
        boolean $z0;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isRequestor(org.apache.cxf.message.Message)>(r2);

        if $z0 == 0 goto label3;

        $r0 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r0 == null goto label1;

        $r1 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        goto label2;

     label1:
        $r3 = r2;

     label2:
        r2 = $r3;

     label3:
        $r4 = interfaceinvoke r2.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        $r5 = (javax.ws.rs.core.MultivaluedMap) $r4;

        $r6 = new org.apache.cxf.jaxrs.impl.UriInfoImpl;

        specialinvoke $r6.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r2, $r5);

        return $r6;
    }

    private static java.lang.Object createHttpHeaders(org.apache.cxf.message.Message, java.lang.Class)
    {
        org.apache.cxf.message.Message r3, $r4;
        org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl $r8;
        org.apache.cxf.message.Exchange $r1, $r2;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r7;
        java.lang.Class r0, $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r3 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Class;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isRequestor(org.apache.cxf.message.Message)>(r3);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r3.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r3.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        goto label2;

     label1:
        $r4 = r3;

     label2:
        r3 = $r4;

     label3:
        $r5 = class "Ljavax/ws/rs/core/HttpHeaders;";

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label4;

        $r7 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        $r6 = $r7;

        specialinvoke $r7.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r3);

        goto label5;

     label4:
        $r8 = new org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl;

        $r6 = $r8;

        specialinvoke $r8.<org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r3);

     label5:
        return $r6;
    }

    public static javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type, org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r2, $r4;
        javax.ws.rs.ext.ContextResolver $r3, $r8;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.reflect.Type r0, $r7;
        java.lang.reflect.Type[] $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: org.apache.cxf.message.Message;

        $z0 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        $r5 = (java.lang.reflect.ParameterizedType) r0;

        $r6 = interfaceinvoke $r5.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r7 = $r6[0];

        $r8 = virtualinvoke $r4.<org.apache.cxf.jaxrs.provider.ProviderFactory: javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)>($r7, r1);

        return $r8;

     label1:
        if r1 == null goto label2;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.provider.ProviderFactory: javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)>(r0, r1);

        return $r3;

     label2:
        return null;
    }

    public static java.lang.Object createResourceValue(org.apache.cxf.message.Message, java.lang.reflect.Type, java.lang.Class)
    {
        java.lang.reflect.Type r1;
        org.apache.cxf.message.Message r0;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r1 := @parameter1: java.lang.reflect.Type;

        r2 := @parameter2: java.lang.Class;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object createServletResourceValue(org.apache.cxf.message.Message, java.lang.Class)
    {
        org.apache.cxf.message.Message r5;
        javax.servlet.http.HttpServletResponse r7;
        java.lang.Class r0, $r1, $r2, $r3, $r10;
        java.lang.Object $r4, $r6, r8;
        org.apache.cxf.jaxrs.impl.HttpServletResponseFilter $r9;
        boolean $z0, $z1, $z2, $z3;

        r5 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.Class;

        r8 = null;

        $r1 = class "Ljavax/servlet/http/HttpServletRequest;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        r8 = interfaceinvoke r5.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.REQUEST");

     label1:
        $r2 = class "Ljavax/servlet/http/HttpServletResponse;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r5.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.RESPONSE");

        r7 = (javax.servlet.http.HttpServletResponse) $r6;

        if r7 == null goto label2;

        $r9 = new org.apache.cxf.jaxrs.impl.HttpServletResponseFilter;

        specialinvoke $r9.<org.apache.cxf.jaxrs.impl.HttpServletResponseFilter: void <init>(javax.servlet.http.HttpServletResponse,org.apache.cxf.message.Message)>(r7, r5);

        goto label3;

     label2:
        $r9 = null;

     label3:
        r8 = $r9;

     label4:
        $r10 = class "Ljavax/servlet/ServletContext;";

        $z3 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z3 == 0 goto label5;

        r8 = interfaceinvoke r5.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.CONTEXT");

     label5:
        $r3 = class "Ljavax/servlet/ServletConfig;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label6;

        r8 = interfaceinvoke r5.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.CONFIG");

     label6:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r8);

        return $r4;
    }

    private static java.lang.Object readFromUriParam(org.apache.cxf.message.Message, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MultivaluedMap, java.lang.String, boolean)
    {
        java.lang.'annotation'.Annotation[] r7;
        org.apache.cxf.jaxrs.model.ParameterType $r10, $r12;
        java.lang.String r0, $r1, r8;
        boolean $z0, z1;
        org.apache.cxf.message.Message r9;
        javax.ws.rs.core.MultivaluedMap r2;
        java.util.List r4;
        java.lang.reflect.Type r6;
        java.lang.Object $r3, $r11, $r13;
        java.lang.Class r5;

        r9 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Class;

        r6 := @parameter3: java.lang.reflect.Type;

        r7 := @parameter4: java.lang.'annotation'.Annotation[];

        r2 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r8 := @parameter6: java.lang.String;

        z1 := @parameter7: boolean;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r12 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        $r13 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)>(r5, r7, r2, $r12, r9, z1);

        return $r13;

     label1:
        $r3 = interfaceinvoke r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.util.List) $r3;

        $r10 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>(r4, r5, r6, r7, r8, z1, $r10, r9);

        return $r11;
    }

    private static java.lang.Object readQueryString(java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], org.apache.cxf.message.Message, java.lang.String, boolean)
    {
        java.lang.'annotation'.Annotation[] r8;
        org.apache.cxf.jaxrs.model.ParameterType $r10, $r13;
        java.lang.String r3, $r4, r9;
        boolean z0, $z1;
        org.apache.cxf.message.Message r1;
        javax.ws.rs.core.MultivaluedMap $r2;
        java.util.List $r11;
        org.apache.cxf.jaxrs.impl.UriInfoImpl $r0;
        java.lang.reflect.Type r7;
        java.lang.Object $r5, $r12, $r14;
        java.lang.Class r6;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.reflect.Type;

        r8 := @parameter3: java.lang.'annotation'.Annotation[];

        r1 := @parameter4: org.apache.cxf.message.Message;

        r9 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        $r0 = new org.apache.cxf.jaxrs.impl.UriInfoImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r1, null);

        $r2 = virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)>(z0);

        $r4 = "";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        $r13 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)>(r6, r8, $r2, $r13, r1, 0);

        return $r14;

     label1:
        $r5 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r3);

        $r11 = (java.util.List) $r5;

        $r10 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)>($r11, r6, r7, r8, r9, 0, $r10, r1);

        return $r12;
    }

    public static javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String, java.lang.String, boolean, boolean)
    {
        java.util.LinkedHashMap $r1;
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        java.lang.String r2, r3;
        boolean z0, z1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>($r1);

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)>($r0, r2, r3, z0, z1);

        return $r0;
    }

    public static void getStructuredParams(javax.ws.rs.core.MultivaluedMap, java.lang.String, java.lang.String, boolean, boolean)
    {
        java.lang.String[] $r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, r1, r6, $r7, r9, r10, $r11, $r12, $r13;
        boolean $z0, $z1, z2, $z3, z4, $z5;
        java.util.Iterator $r4;
        javax.ws.rs.core.MultivaluedMap r8;
        java.util.List $r3;
        java.lang.Object $r5;

        r8 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        z4 := @parameter4: boolean;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label9;

        $r2 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $i0 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(61);

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        r9 = r6;

        r10 = "";

        goto label8;

     label2:
        r9 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $i2 = $i0 + 1;

        $r11 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label4;

     label3:
        $r11 = "";

     label4:
        r10 = $r11;

        if z2 != 0 goto label5;

        if z4 == 0 goto label8;

        $z5 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("+");

        if $z5 == 0 goto label8;

     label5:
        $r7 = ";";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label6;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathDecode(java.lang.String)>(r10);

        goto label7;

     label6:
        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String)>(r10);

     label7:
        r10 = $r12;

     label8:
        $r13 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String urlDecode(java.lang.String)>(r9);

        interfaceinvoke r8.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>($r13, r10);

        goto label1;

     label9:
        return;
    }

    private static java.lang.Object readFromMessageBody(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.io.InputStream, javax.ws.rs.core.MediaType, java.util.List, org.apache.cxf.message.Message) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.lang.Object[] $r7;
        java.lang.String[] $r11;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r4;
        java.lang.'annotation'.Annotation[] r20;
        org.apache.cxf.common.i18n.Message $r6;
        javax.ws.rs.core.MediaType r1, r18;
        java.util.ResourceBundle $r9;
        org.apache.cxf.interceptor.Fault $r25;
        javax.ws.rs.core.Response$Status $r16;
        java.lang.String $r10, $r12, $r13;
        boolean $z0;
        java.util.Iterator $r5;
        org.apache.cxf.message.Message r3;
        java.io.IOException $r27;
        java.util.logging.Logger $r14;
        java.lang.Exception $r24;
        java.util.List r0, $r2, $r21;
        java.lang.reflect.Type r19;
        javax.ws.rs.WebApplicationException $r15, $r26;
        java.lang.Class r8;
        java.lang.Object $r17, $r23;
        java.io.InputStream r22;

        r8 := @parameter0: java.lang.Class;

        r19 := @parameter1: java.lang.reflect.Type;

        r20 := @parameter2: java.lang.'annotation'.Annotation[];

        r22 := @parameter3: java.io.InputStream;

        r1 := @parameter4: javax.ws.rs.core.MediaType;

        r0 := @parameter5: java.util.List;

        r3 := @parameter6: org.apache.cxf.message.Message;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>(r0, r1);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r3);

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r17 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r18 = (javax.ws.rs.core.MediaType) $r17;

        $r21 = virtualinvoke $r4.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List createMessageBodyReaderInterceptor(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>(r8, r19, r20, r18, r3);

        if $r21 == null goto label7;

     label2:
        $r23 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object readFromMessageBodyReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r21, r8, r19, r20, r22, r18, r3);

     label3:
        return $r23;

     label4:
        $r27 := @caughtexception;

        throw $r27;

     label5:
        $r26 := @caughtexception;

        throw $r26;

     label6:
        $r24 := @caughtexception;

        $r25 = new org.apache.cxf.interceptor.Fault;

        specialinvoke $r25.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label7:
        goto label1;

     label8:
        $r6 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE>;

        $r7 = newarray (java.lang.Object)[2];

        $r10 = virtualinvoke r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[0] = $r10;

        $r11 = newarray (java.lang.String)[0];

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r1, $r11);

        $r7[1] = $r12;

        specialinvoke $r6.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_MSG_READER", $r9, $r7);

        $r13 = virtualinvoke $r6.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r14 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r14.<java.util.logging.Logger: void warning(java.lang.String)>($r13);

        $r15 = new javax.ws.rs.WebApplicationException;

        $r16 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status UNSUPPORTED_MEDIA_TYPE>;

        specialinvoke $r15.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>($r16);

        throw $r15;

        catch java.io.IOException from label2 to label3 with label4;
        catch javax.ws.rs.WebApplicationException from label2 to label3 with label5;
        catch java.lang.Exception from label2 to label3 with label6;
    }

    public static java.lang.Object readFromMessageBodyReader(java.util.List, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], java.io.InputStream, javax.ws.rs.core.MediaType, org.apache.cxf.message.Message) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.lang.'annotation'.Annotation[] r6;
        javax.ws.rs.core.MediaType r7;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r8;
        javax.ws.rs.ext.ReaderInterceptor r16;
        int $i0;
        org.apache.cxf.message.Message r9;
        org.apache.cxf.jaxrs.impl.ReaderInterceptorMBR $r2;
        javax.ws.rs.core.MultivaluedMap $r10;
        java.util.List r0;
        org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl $r14;
        java.lang.reflect.Type r5;
        java.lang.Object $r1, $r12, $r13, $r15;
        java.lang.Class r4;
        javax.ws.rs.ext.MessageBodyReader $r3;
        java.io.InputStream r11;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: java.lang.Class;

        r5 := @parameter2: java.lang.reflect.Type;

        r6 := @parameter3: java.lang.'annotation'.Annotation[];

        r11 := @parameter4: java.io.InputStream;

        r7 := @parameter5: javax.ws.rs.core.MediaType;

        r9 := @parameter6: org.apache.cxf.message.Message;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r13 = interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>(0);

        r16 = (javax.ws.rs.ext.ReaderInterceptor) $r13;

        $r14 = new org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl;

        specialinvoke $r14.<org.apache.cxf.jaxrs.impl.ReaderInterceptorContextImpl: void <init>(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,org.apache.cxf.message.Message,java.util.List)>(r4, r5, r6, r11, r9, r0);

        $r15 = interfaceinvoke r16.<javax.ws.rs.ext.ReaderInterceptor: java.lang.Object aroundReadFrom(javax.ws.rs.ext.ReaderInterceptorContext)>($r14);

        return $r15;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (org.apache.cxf.jaxrs.impl.ReaderInterceptorMBR) $r1;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.ReaderInterceptorMBR: javax.ws.rs.ext.MessageBodyReader getMBR()>();

        $r8 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        specialinvoke $r8.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r9);

        $r10 = virtualinvoke $r8.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $r12 = interfaceinvoke $r3.<javax.ws.rs.ext.MessageBodyReader: java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r4, r5, r6, r7, $r10, r11);

        return $r12;
    }

    public static void writeMessageBody(java.util.List, java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, org.apache.cxf.message.Message) throws javax.ws.rs.WebApplicationException, java.io.IOException
    {
        javax.ws.rs.ext.MessageBodyWriter $r6;
        long $l1;
        java.lang.'annotation'.Annotation[] r10;
        javax.ws.rs.core.MediaType r11;
        byte $b2;
        int $i0;
        java.lang.String $r13;
        javax.ws.rs.ext.WriterInterceptor r16;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW $r5;
        java.io.OutputStream r2;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.core.MultivaluedMap r12;
        java.util.List r3;
        java.lang.reflect.Type r9;
        java.lang.Object $r1, $r4, r8, $r14;
        java.lang.Class r7;
        org.apache.cxf.jaxrs.impl.WriterInterceptorContextImpl $r15;

        r3 := @parameter0: java.util.List;

        r8 := @parameter1: java.lang.Object;

        r7 := @parameter2: java.lang.Class;

        r9 := @parameter3: java.lang.reflect.Type;

        r10 := @parameter4: java.lang.'annotation'.Annotation[];

        r11 := @parameter5: javax.ws.rs.core.MediaType;

        r12 := @parameter6: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter7: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r2 = (java.io.OutputStream) $r1;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r14 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0);

        r16 = (javax.ws.rs.ext.WriterInterceptor) $r14;

        $r15 = new org.apache.cxf.jaxrs.impl.WriterInterceptorContextImpl;

        specialinvoke $r15.<org.apache.cxf.jaxrs.impl.WriterInterceptorContextImpl: void <init>(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.OutputStream,org.apache.cxf.message.Message,java.util.List)>(r8, r7, r9, r10, r2, r0, r3);

        interfaceinvoke r16.<javax.ws.rs.ext.WriterInterceptor: void aroundWriteTo(javax.ws.rs.ext.WriterInterceptorContext)>($r15);

        goto label3;

     label1:
        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.cxf.jaxrs.impl.WriterInterceptorMBW) $r4;

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter getMBW()>();

        if r7 != class "[B" goto label2;

        $l1 = interfaceinvoke $r6.<javax.ws.rs.ext.MessageBodyWriter: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r8, r7, r9, r10, r11);

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label2;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        interfaceinvoke r12.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Length", $r13);

     label2:
        interfaceinvoke $r6.<javax.ws.rs.ext.MessageBodyWriter: void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>(r8, r7, r9, r10, r11, r12, r2);

     label3:
        return;
    }

    public static boolean matchConsumeTypes(javax.ws.rs.core.MediaType, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        java.util.List $r1, $r3;
        javax.ws.rs.core.MediaType r2;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;
        boolean $z0, $z1;

        r2 := @parameter0: javax.ws.rs.core.MediaType;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r1, r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean matchProduceTypes(javax.ws.rs.core.MediaType, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        java.util.List $r1, $r3;
        javax.ws.rs.core.MediaType r2;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;
        boolean $z0, $z1;

        r2 := @parameter0: javax.ws.rs.core.MediaType;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r1, r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean matchMimeTypes(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.apache.cxf.jaxrs.model.OperationResourceInfo)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r0;
        java.util.List $r1, $r3, $r4, $r6;
        javax.ws.rs.core.MediaType r2, r5;
        int $i0, $i1;

        r2 := @parameter0: javax.ws.rs.core.MediaType;

        r5 := @parameter1: javax.ws.rs.core.MediaType;

        r0 := @parameter2: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getConsumeTypes()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r1, r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getProduceTypes()>();

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r4, r5);

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.util.List parseMediaTypes(java.lang.String)
    {
        java.util.ArrayList $r6;
        javax.ws.rs.core.MediaType $r1, $r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r3, r4, r5;

        r4 := @parameter0: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        if r4 == null goto label4;

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        r5 = r4;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(44);

        $i4 = (int) -1;

        if $i1 == $i4 goto label2;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = $i1 + 1;

        $r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        goto label3;

     label2:
        r4 = "";

     label3:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label1;

     label4:
        $r1 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType ALL_TYPES>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

     label5:
        return $r6;
    }

    public static java.util.List intersectMimeTypes(java.util.List, java.util.List, boolean)
    {
        java.util.List r0, r1, $r2;
        boolean z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean,boolean)>(r0, r1, z0, 0);

        return $r2;
    }

    public static java.util.List intersectMimeTypes(java.util.List, java.util.List, boolean, boolean)
    {
        javax.ws.rs.core.MediaType r5, r9, $r38;
        java.util.Map $r10, $r16, $r19, $r28, r37;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z6, $z7, $z8, $z9, $z10, z11;
        java.util.Set $r11, $r20;
        java.util.List r1, r6;
        java.util.ArrayList $r3;
        java.util.LinkedHashMap $r18;
        int i0;
        java.lang.String $r13, $r14, r15, $r17, r33, $r34, r35, $r36;
        java.util.LinkedHashSet $r0;
        java.util.Map$Entry r23, r32;
        java.util.Iterator $r2, $r7, $r12, $r21;
        java.lang.Object $r4, $r8, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31;

        r1 := @parameter0: java.util.List;

        r6 := @parameter1: java.util.List;

        z5 := @parameter2: boolean;

        z6 := @parameter3: boolean;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.ws.rs.core.MediaType) $r4;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z10 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label18;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (javax.ws.rs.core.MediaType) $r8;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean isMediaTypeCompatible(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)>(r5, r9);

        if $z1 == 0 goto label17;

        z11 = 1;

        $r10 = virtualinvoke r9.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r27 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r27;

        $r28 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r29 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        r33 = (java.lang.String) $r30;

        if r33 == null goto label04;

        $r31 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z9 = virtualinvoke r33.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z9 != 0 goto label04;

        z11 = 0;

        goto label05;

     label04:
        goto label03;

     label05:
        if z11 != 0 goto label06;

        goto label02;

     label06:
        $r13 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("*");

        $r14 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z3 == 0 goto label07;

        $r34 = virtualinvoke r9.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        goto label08;

     label07:
        $r34 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

     label08:
        r35 = $r34;

        if $z4 == 0 goto label09;

        $r36 = virtualinvoke r9.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        goto label10;

     label09:
        $r36 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

     label10:
        r15 = $r36;

        $r16 = virtualinvoke r9.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        r37 = $r16;

        if z5 == 0 goto label13;

        $r18 = new java.util.LinkedHashMap;

        specialinvoke $r18.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r16);

        r37 = $r18;

        $r19 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z7 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map$Entry) $r22;

        $r24 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z8 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>($r24);

        if $z8 != 0 goto label12;

        $r25 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r26);

     label12:
        goto label11;

     label13:
        if z6 == 0 goto label16;

        i0 = 0;

        if $z3 == 0 goto label14;

        i0 = 1;

     label14:
        if $z4 == 0 goto label15;

        i0 = i0 + 1;

     label15:
        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("d", $r17);

     label16:
        $r38 = new javax.ws.rs.core.MediaType;

        specialinvoke $r38.<javax.ws.rs.core.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r35, r15, r37);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r38);

     label17:
        goto label02;

     label18:
        goto label01;

     label19:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        return $r3;
    }

    private static boolean isMediaTypeCompatible(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.message.Message $r4;
        javax.ws.rs.core.MediaType r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, z2;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        z2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>(r1);

        $z0 = virtualinvoke r0.<javax.ws.rs.core.MediaType: boolean isCompatible(javax.ws.rs.core.MediaType)>(r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r3 = virtualinvoke r1.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z1 == 0 goto label1;

        $r4 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        z2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean compareCompositeSubtypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>(r0, r1, $r4);

     label1:
        return z2;
    }

    static boolean compareCompositeSubtypes(java.lang.String, java.lang.String, org.apache.cxf.message.Message)
    {
        javax.ws.rs.core.MediaType $r1, $r3;
        org.apache.cxf.message.Message r4;
        java.lang.String r0, r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r2);

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: boolean compareCompositeSubtypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r1, $r3, r4);

        return $z0;
    }

    private static boolean compareCompositeSubtypes(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.apache.cxf.message.Message)
    {
        javax.ws.rs.core.MediaType r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, z11, $z13, $z14, z15, $z17, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        int $i0, $i1, $i3, $i4, $i8, $i9, $i11, $i12, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String $r1, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        org.apache.cxf.message.Message r6;
        char $c2, $c5, $c6, $c7, $c10, $c13, $c14, $c15;
        java.lang.Object $r9;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r2 := @parameter1: javax.ws.rs.core.MediaType;

        r6 := @parameter2: org.apache.cxf.message.Message;

        z9 = 0;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r3 = virtualinvoke r2.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r1, 1);

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r3, 1);

        if r6 == null goto label24;

        $r9 = interfaceinvoke r6.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("media.subtype.partial.check");

        $z2 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r9);

        if $z2 == 0 goto label24;

        if $r4 != null goto label01;

        if $r5 == null goto label31;

     label01:
        if $r4 == null goto label02;

        if $r5 != null goto label03;

     label02:
        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z11 = $z10;

        if $r4 != null goto label05;

        $z8 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z8 != 0 goto label06;

     label05:
        if $r5 != null goto label07;

        $z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z7 == 0 goto label07;

     label06:
        $z25 = 1;

        $z24 = 1;

        goto label08;

     label07:
        $z25 = 0;

        $z24 = 0;

     label08:
        z9 = $z24;

        if $z25 != 0 goto label12;

        if z11 != 0 goto label12;

        $z6 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z6 == 0 goto label10;

        $c14 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i16 = (int) $c14;

        if $i16 == 42 goto label09;

        $c15 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c15;

        if $i17 != 42 goto label10;

     label09:
        $z13 = 1;

        goto label11;

     label10:
        $z13 = 0;

     label11:
        z9 = $z13;

     label12:
        if z9 != 0 goto label23;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r1, 0);

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r3, 0);

        if $r10 == null goto label13;

        if $r11 != null goto label14;

     label13:
        $z14 = 1;

        goto label15;

     label14:
        $z14 = 0;

     label15:
        z15 = $z14;

        if $r10 != null goto label16;

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z5 != 0 goto label17;

     label16:
        if $r11 != null goto label18;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z4 == 0 goto label18;

     label17:
        $z21 = 1;

        $z20 = 1;

        goto label19;

     label18:
        $z21 = 0;

        $z20 = 0;

     label19:
        z9 = $z20;

        if $z21 != 0 goto label23;

        if z15 != 0 goto label23;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z3 == 0 goto label21;

        $i8 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i9 = $i8 - 1;

        $c10 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i9);

        $i18 = (int) $c10;

        if $i18 == 42 goto label20;

        $i11 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i12 = $i11 - 1;

        $c13 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i12);

        $i19 = (int) $c13;

        if $i19 != 42 goto label21;

     label20:
        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z9 = $z17;

     label23:
        goto label31;

     label24:
        if $r4 == null goto label31;

        if $r5 == null goto label31;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label26;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i20 = (int) $c6;

        if $i20 == 42 goto label25;

        $c7 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $i21 = (int) $c7;

        if $i21 != 42 goto label26;

     label25:
        $z23 = 1;

        $z22 = 1;

        goto label27;

     label26:
        $z23 = 0;

        $z22 = 0;

     label27:
        z9 = $z23;

        if $z22 != 0 goto label31;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r1, 0);

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String splitMediaSubType(java.lang.String,boolean)>($r3, 0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label29;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i22 = (int) $c2;

        if $i22 == 42 goto label28;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i4);

        $i23 = (int) $c5;

        if $i23 != 42 goto label29;

     label28:
        $z19 = 1;

        goto label30;

     label29:
        $z19 = 0;

     label30:
        z9 = $z19;

     label31:
        return z9;
    }

    private static java.lang.String splitMediaSubType(java.lang.String, boolean)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(43);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r1 = null;

        goto label3;

     label1:
        if z0 == 0 goto label2;

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        return $r1;
    }

    public static java.util.List intersectMimeTypes(java.util.List, javax.ws.rs.core.MediaType)
    {
        java.util.List r0, $r2, $r3;
        javax.ws.rs.core.MediaType r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)>(r0, $r2, 0);

        return $r3;
    }

    public static java.util.List intersectMimeTypes(java.lang.String, java.lang.String)
    {
        java.util.List $r1, $r3, $r4;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>(r2);

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)>($r1, $r3, 0);

        return $r4;
    }

    public static java.util.List sortMediaTypes(java.lang.String, java.lang.String)
    {
        java.util.List $r1, $r3;
        java.lang.String r0, r2;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List parseMediaTypes(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List sortMediaTypes(java.util.List,java.lang.String)>($r1, r2);

        return $r3;
    }

    public static java.util.List sortMediaTypes(java.util.List, java.lang.String)
    {
        java.util.List r0;
        int $i0;
        java.lang.String r2;
        org.apache.cxf.jaxrs.utils.JAXRSUtils$2 $r1;

        r0 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        $r1 = new org.apache.cxf.jaxrs.utils.JAXRSUtils$2;

        specialinvoke $r1.<org.apache.cxf.jaxrs.utils.JAXRSUtils$2: void <init>(java.lang.String)>(r2);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

     label1:
        return r0;
    }

    public static java.lang.Class getWebApplicationExceptionClass(javax.ws.rs.core.Response, java.lang.Class)
    {
        java.lang.Integer $r2;
        javax.ws.rs.core.Response r0;
        java.util.Map $r1;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.Class r4, r5, $r6;

        r0 := @parameter0: javax.ws.rs.core.Response;

        r4 := @parameter1: java.lang.Class;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response: int getStatus()>();

        $r1 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.Class) $r3;

        if r5 != null goto label3;

        i1 = $i0 / 100;

        if i1 != 3 goto label1;

        r5 = class "Ljavax/ws/rs/RedirectionException;";

        goto label3;

     label1:
        if i1 != 4 goto label2;

        r5 = class "Ljavax/ws/rs/ClientErrorException;";

        goto label3;

     label2:
        if i1 != 5 goto label3;

        r5 = class "Ljavax/ws/rs/ServerErrorException;";

     label3:
        if r5 != null goto label4;

        $r6 = r4;

        goto label5;

     label4:
        $r6 = r5;

     label5:
        return $r6;
    }

    public static javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable, org.apache.cxf.message.Message)
    {
        java.lang.Throwable r0, $r9;
        javax.ws.rs.ext.ExceptionMapper $r7;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r5;
        boolean $z0, $z1;
        org.apache.cxf.message.Message r1, $r3;
        org.apache.cxf.message.Exchange $r2, $r12;
        java.lang.Exception $r11;
        javax.ws.rs.core.Response $r8, $r14, r15;
        javax.ws.rs.core.Response$ResponseBuilder $r13;
        javax.ws.rs.WebApplicationException r16;
        java.lang.Class $r4, $r6;
        java.lang.Object $r10;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: org.apache.cxf.message.Message;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        r15 = null;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != class "Ljavax/ws/rs/WebApplicationException;" goto label3;

        r16 = (javax.ws.rs.WebApplicationException) r0;

        $r8 = virtualinvoke r16.<javax.ws.rs.WebApplicationException: javax.ws.rs.core.Response getResponse()>();

        $z0 = virtualinvoke $r8.<javax.ws.rs.core.Response: boolean hasEntity()>();

        if $z0 == 0 goto label3;

        $r9 = virtualinvoke r16.<javax.ws.rs.WebApplicationException: java.lang.Throwable getCause()>();

        if $r9 != null goto label3;

        $r10 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("support.wae.spec.optimization");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r10);

        if $z1 == 0 goto label3;

        r15 = virtualinvoke r16.<javax.ws.rs.WebApplicationException: javax.ws.rs.core.Response getResponse()>();

     label3:
        if r15 != null goto label7;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>($r3);

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<org.apache.cxf.jaxrs.provider.ProviderFactory: javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)>($r6, $r3);

        if $r7 == null goto label7;

     label4:
        r15 = interfaceinvoke $r7.<javax.ws.rs.ext.ExceptionMapper: javax.ws.rs.core.Response toResponse(java.lang.Throwable)>(r0);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = interfaceinvoke $r3.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r12.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("exception.from.mapper", "true");

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        $r13 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        $r14 = virtualinvoke $r13.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r14;

     label7:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void setMessageContentType(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>(r1, r15);

        return r15;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void setMessageContentType(org.apache.cxf.message.Message, javax.ws.rs.core.Response)
    {
        org.apache.cxf.message.Message r3, $r5;
        org.apache.cxf.message.Exchange $r4;
        javax.ws.rs.core.MultivaluedMap $r1;
        javax.ws.rs.core.Response r0;
        java.lang.Object $r2;
        java.lang.String $r6, $r7;

        r3 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: javax.ws.rs.core.Response;

        if r0 == null goto label2;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        if $r2 == null goto label2;

        $r4 = interfaceinvoke r3.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        if $r5 != r3 goto label1;

        $r7 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r7);

        goto label2;

     label1:
        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r6);

     label2:
        return;
    }

    public static boolean propogateException(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.propagate.exception");

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r3 = "true";

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static javax.xml.namespace.QName getClassQName(java.lang.Class)
    {
        int $i0, $i1;
        java.lang.Class r0;
        java.lang.String $r1, $r2, $r4, r5;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(r0);

        $r2 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getNamespace(java.lang.String)>($r1);

        r5 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label1:
        $r3 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, $r4, "ns1");

        return $r3;
    }

    public static javax.xml.namespace.QName convertStringToQName(java.lang.String)
    {
        java.lang.String r0;
        javax.xml.namespace.QName $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.helpers.XMLUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String,java.lang.String)>(r0, "");

        return $r1;
    }

    public static boolean runContainerRequestFilters(org.apache.cxf.jaxrs.provider.ProviderFactory, org.apache.cxf.message.Message, boolean, java.util.List)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory r0;
        javax.ws.rs.container.ContainerRequestFilter $r9;
        org.apache.cxf.jaxrs.model.ProviderInfo r6;
        boolean z0, $z1, $z2;
        java.util.Iterator $r4;
        org.apache.cxf.message.Message r3;
        java.io.IOException $r12;
        javax.ws.rs.InternalServerErrorException $r13;
        org.apache.cxf.message.Exchange $r10;
        java.util.List r1, $r14;
        javax.ws.rs.core.Response r15;
        java.lang.Object $r5, $r7, $r8, $r11;
        org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r3 := @parameter1: org.apache.cxf.message.Message;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        if z0 == 0 goto label1;

        $r14 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getPreMatchContainerRequestFilters()>();

        goto label2;

     label1:
        $r14 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getPostMatchContainerRequestFilters(java.util.List)>(r1);

     label2:
        $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        $r2 = new org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl: void <init>(org.apache.cxf.message.Message,boolean,boolean)>(r3, z0, 0);

        $r4 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r5;

     label4:
        $r7 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r7, r6, r3);

        $r8 = virtualinvoke r6.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r9 = (javax.ws.rs.container.ContainerRequestFilter) $r8;

        interfaceinvoke $r9.<javax.ws.rs.container.ContainerRequestFilter: void filter(javax.ws.rs.container.ContainerRequestContext)>($r2);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r13 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r13.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label7:
        $r10 = interfaceinvoke r3.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        r15 = (javax.ws.rs.core.Response) $r11;

        if r15 == null goto label8;

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void setMessageContentType(org.apache.cxf.message.Message,javax.ws.rs.core.Response)>(r3, r15);

        return 1;

     label8:
        goto label3;

     label9:
        return 0;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public static void runContainerResponseFilters(org.apache.cxf.jaxrs.provider.ProviderFactory, javax.ws.rs.core.Response, org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.OperationResourceInfo, java.lang.reflect.Method) throws java.io.IOException, java.lang.Throwable
    {
        org.apache.cxf.jaxrs.impl.ContainerResponseContextImpl $r7;
        org.apache.cxf.jaxrs.provider.ProviderFactory r0;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r1;
        javax.ws.rs.container.ContainerResponseFilter $r16;
        org.apache.cxf.jaxrs.model.ProviderInfo r13;
        java.lang.reflect.Method r10;
        boolean $z0, $z1;
        java.util.Iterator $r11;
        org.apache.cxf.message.Message r4, $r6;
        org.apache.cxf.message.Exchange $r5;
        java.util.List $r2, $r17;
        javax.ws.rs.core.Response r8;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r9;
        java.lang.Object $r12, $r14, $r15;
        java.lang.Class $r18;
        org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl $r3;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r8 := @parameter1: javax.ws.rs.core.Response;

        r4 := @parameter2: org.apache.cxf.message.Message;

        r1 := @parameter3: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        r10 := @parameter4: java.lang.reflect.Method;

        if r1 != null goto label1;

        $r17 = null;

        goto label2;

     label1:
        $r17 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getNameBindings()>();

     label2:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getContainerResponseFilters(java.util.List)>($r17);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r3 = new org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl;

        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.ContainerRequestContextImpl: void <init>(org.apache.cxf.message.Message,boolean,boolean)>($r6, 0, 1);

        $r7 = new org.apache.cxf.jaxrs.impl.ContainerResponseContextImpl;

        if r1 != null goto label3;

        $r18 = null;

        goto label4;

     label3:
        $r9 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r18 = virtualinvoke $r9.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

     label4:
        specialinvoke $r7.<org.apache.cxf.jaxrs.impl.ContainerResponseContextImpl: void <init>(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Method)>(r8, r4, $r18, r10);

        $r11 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r12;

        $r14 = virtualinvoke r13.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r14, r13, r4);

        $r15 = virtualinvoke r13.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r16 = (javax.ws.rs.container.ContainerResponseFilter) $r15;

        interfaceinvoke $r16.<javax.ws.rs.container.ContainerResponseFilter: void filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)>($r3, $r7);

        goto label5;

     label6:
        return;
    }

    public static transient java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType, java.lang.String[])
    {
        javax.ws.rs.core.MediaType r1;
        java.util.List $r3;
        int $i0;
        java.lang.String[] r0;
        java.lang.String $r2;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        r0 := @parameter1: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $r3 = null;

        goto label3;

     label2:
        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

     label3:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: java.lang.String typeToString(javax.ws.rs.core.MediaType,java.util.List)>(r1, $r3);

        return $r2;
    }

    public static javax.ws.rs.core.MediaType toMediaType(java.lang.String)
    {
        javax.ws.rs.core.MediaType $r1, $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType ALL_TYPES>;

        return $r2;

     label1:
        $r1 = staticinvoke <org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider: javax.ws.rs.core.MediaType valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static javax.ws.rs.core.Response toResponse(int)
    {
        int i0;
        javax.ws.rs.core.Response $r1;
        javax.ws.rs.core.Response$ResponseBuilder $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(int)>(i0);

        $r1 = virtualinvoke $r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r1;
    }

    public static javax.ws.rs.core.Response toResponse(javax.ws.rs.core.Response$Status)
    {
        int $i0;
        javax.ws.rs.core.Response$Status r0;
        javax.ws.rs.core.Response $r1;

        r0 := @parameter0: javax.ws.rs.core.Response$Status;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response$Status: int getStatusCode()>();

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response toResponse(int)>($i0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(int)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl $r0;
        int i0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        i0 := @parameter0: int;

        $r0 = new org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: void <init>()>();

        $r1 = virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder status(int)>(i0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(javax.ws.rs.core.Response$Status)
    {
        int $i0;
        javax.ws.rs.core.Response$Status r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        r0 := @parameter0: javax.ws.rs.core.Response$Status;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response$Status: int getStatusCode()>();

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(int)>($i0);

        return $r1;
    }

    public static javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)
    {
        int $i0;
        java.lang.String $r13;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5, $r10;
        java.util.Set $r4;
        javax.ws.rs.core.MultivaluedMap $r3;
        java.util.List r9;
        javax.ws.rs.core.Response r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;
        java.lang.Object $r2, $r6, $r8, $r11, $r12;

        r0 := @parameter0: javax.ws.rs.core.Response;

        $i0 = virtualinvoke r0.<javax.ws.rs.core.Response: int getStatus()>();

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder toResponseBuilder(int)>($i0);

        $r2 = virtualinvoke r0.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r2);

        $r3 = virtualinvoke r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.util.List) $r8;

        $r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>($r13, $r11);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r1;
    }

    public static javax.ws.rs.core.Response copyResponseIfNeeded(javax.ws.rs.core.Response)
    {
        java.lang.Throwable $r9;
        java.lang.'annotation'.Annotation[] r11;
        java.lang.reflect.Field r5;
        java.util.logging.Logger $r10;
        java.lang.reflect.Field[] $r4;
        javax.ws.rs.core.Response r0, $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r1;
        int i0, i1;
        java.lang.Class $r3, $r6;
        java.lang.Object $r7;
        org.apache.cxf.jaxrs.impl.ResponseImpl $r8;
        boolean $z0;

        r0 := @parameter0: javax.ws.rs.core.Response;

        $z0 = r0 instanceof org.apache.cxf.jaxrs.impl.ResponseImpl;

        if $z0 != 0 goto label7;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)>(r0);

        $r2 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Field[] getDeclaredFields(java.lang.Class)>($r3);

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r5 = $r4[i1];

        $r6 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Class getType()>();

        if $r6 != class "[Ljava/lang/annotation/Annotation;" goto label5;

     label2:
        $r7 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.Object accessDeclaredField(java.lang.reflect.Field,java.lang.Object,java.lang.Class)>(r5, r0, class "[Ljava/lang/annotation/Annotation;");

        r11 = (java.lang.'annotation'.Annotation[]) $r7;

        $r8 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r2;

        virtualinvoke $r8.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setEntityAnnotations(java.lang.'annotation'.Annotation[])>(r11);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        $r10 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r10.<java.util.logging.Logger: void warning(java.lang.String)>("Custom annotations if any can not be copied");

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return $r2;

     label7:
        return r0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    static int access$000(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, boolean)
    {
        javax.ws.rs.core.MediaType r0, r1;
        int $i0;
        boolean z0;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: int compareQualityAndDistance(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,boolean)>(r0, r1, z0);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r3;
        java.lang.Integer $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        javax.ws.rs.core.MediaType $r0;
        java.util.ResourceBundle $r2;
        java.util.Map $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        java.util.logging.Logger $r1;

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String SUPPORT_WAE_SPEC_OPTIMIZATION> = "support.wae.spec.optimization";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String REPORT_FAULT_MESSAGE_PROPERTY> = "org.apache.cxf.jaxrs.report-fault-message";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String PROPAGATE_EXCEPTION> = "org.apache.cxf.propagate.exception";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String PATH_SEGMENT_SEP> = "/";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String DEFAULT_CONTENT_TYPE> = "default.content.type";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String MEDIA_TYPE_DISTANCE_PARAM> = "d";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String MEDIA_TYPE_QS_PARAM> = "qs";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String MEDIA_TYPE_Q_PARAM> = "q";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String DEFAULT_PROVIDERS_FOR_SIMPLE_TYPES> = "defaultProviders.for.simpleTypes";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String DOC_LOCATION> = "wadl.location";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String PARTIAL_HIERARCHICAL_MEDIA_SUBTYPE_CHECK> = "media.subtype.partial.check";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String EXCEPTION_FROM_MAPPER> = "exception.from.mapper";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String ROOT_PROVIDER> = "service.root.provider";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String ROOT_INSTANCE> = "service.root.instance";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String IGNORE_MESSAGE_WRITERS> = "ignore.message.writers";

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String ROOT_RESOURCE_CLASS> = "root.resource.class";

        $r0 = new javax.ws.rs.core.MediaType;

        specialinvoke $r0.<javax.ws.rs.core.MediaType: void <init>()>();

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType ALL_TYPES> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/JAXRSUtils;");

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.logging.Logger LOG> = $r1;

        $r2 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/JAXRSUtils;");

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.ResourceBundle BUNDLE> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP> = $r3;

        $r4 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(400);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, class "Ljavax/ws/rs/BadRequestException;");

        $r6 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(401);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, class "Ljavax/ws/rs/NotAuthorizedException;");

        $r8 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(404);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, class "Ljavax/ws/rs/NotFoundException;");

        $r10 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(405);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, class "Ljavax/ws/rs/NotAllowedException;");

        $r12 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(406);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, class "Ljavax/ws/rs/NotAcceptableException;");

        $r14 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(415);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, class "Ljavax/ws/rs/NotSupportedException;");

        $r16 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(500);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, class "Ljavax/ws/rs/InternalServerErrorException;");

        $r18 = <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.Map EXCEPTIONS_MAP>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(503);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, class "Ljavax/ws/rs/ServiceUnavailableException;");

        return;
    }
}
