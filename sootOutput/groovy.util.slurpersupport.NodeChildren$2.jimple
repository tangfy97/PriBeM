class groovy.util.slurpersupport.NodeChildren$2 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator iter;
    private final groovy.util.slurpersupport.NodeChildren this$0;

    void <init>(groovy.util.slurpersupport.NodeChildren)
    {
        groovy.util.slurpersupport.NodeChildren$2 r0;
        java.util.Iterator $r3;
        groovy.util.slurpersupport.NodeChildren r1, $r2;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$2;

        r1 := @parameter0: groovy.util.slurpersupport.NodeChildren;

        r0.<groovy.util.slurpersupport.NodeChildren$2: groovy.util.slurpersupport.NodeChildren this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<groovy.util.slurpersupport.NodeChildren$2: groovy.util.slurpersupport.NodeChildren this$0>;

        $r3 = virtualinvoke $r2.<groovy.util.slurpersupport.NodeChildren: java.util.Iterator nodeIterator()>();

        r0.<groovy.util.slurpersupport.NodeChildren$2: java.util.Iterator iter> = $r3;

        return;
    }

    public boolean hasNext()
    {
        groovy.util.slurpersupport.NodeChildren$2 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$2;

        $r1 = r0.<groovy.util.slurpersupport.NodeChildren$2: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r2;
        groovy.util.slurpersupport.NodeChild $r0;
        groovy.util.slurpersupport.GPathResult $r7;
        groovy.util.slurpersupport.NodeChildren$2 r1;
        groovy.util.slurpersupport.Node $r8;
        groovy.util.slurpersupport.NodeChildren $r4, $r5;
        java.util.Map $r6;
        java.lang.Object $r3;

        r1 := @this: groovy.util.slurpersupport.NodeChildren$2;

        $r0 = new groovy.util.slurpersupport.NodeChild;

        $r2 = r1.<groovy.util.slurpersupport.NodeChildren$2: java.util.Iterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (groovy.util.slurpersupport.Node) $r3;

        $r4 = r1.<groovy.util.slurpersupport.NodeChildren$2: groovy.util.slurpersupport.NodeChildren this$0>;

        $r7 = $r4.<groovy.util.slurpersupport.NodeChildren: groovy.util.slurpersupport.GPathResult parent>;

        $r5 = r1.<groovy.util.slurpersupport.NodeChildren$2: groovy.util.slurpersupport.NodeChildren this$0>;

        $r6 = $r5.<groovy.util.slurpersupport.NodeChildren: java.util.Map namespaceTagHints>;

        specialinvoke $r0.<groovy.util.slurpersupport.NodeChild: void <init>(groovy.util.slurpersupport.Node,groovy.util.slurpersupport.GPathResult,java.util.Map)>($r8, $r7, $r6);

        return $r0;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        groovy.util.slurpersupport.NodeChildren$2 r1;

        r1 := @this: groovy.util.slurpersupport.NodeChildren$2;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
