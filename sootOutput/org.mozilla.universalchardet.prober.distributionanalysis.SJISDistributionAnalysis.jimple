public class org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis extends org.mozilla.universalchardet.prober.distributionanalysis.JISDistributionAnalysis
{
    public static final int HIGHBYTE_BEGIN_1;
    public static final int HIGHBYTE_END_1;
    public static final int HIGHBYTE_BEGIN_2;
    public static final int HIGHBYTE_END_2;
    public static final int LOWBYTE_BEGIN_1;
    public static final int LOWBYTE_BEGIN_2;

    public void <init>()
    {
        org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis r0;

        r0 := @this: org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis;

        specialinvoke r0.<org.mozilla.universalchardet.prober.distributionanalysis.JISDistributionAnalysis: void <init>()>();

        return;
    }

    protected int getOrder(byte[], int)
    {
        byte[] r0;
        short s2, $s9, $s13, $s22;
        byte $b1, $b6;
        int i0, $i3, $i4, $i5, $i7, $i8, $i10, i11, i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i23, $i24, $i26;
        org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis r1;

        r1 := @this: org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s13 = (short) $b1;

        s2 = $s13 & 255;

        $i14 = (int) s2;

        if $i14 < 129 goto label1;

        $i15 = (int) s2;

        if $i15 > 159 goto label1;

        $i16 = (int) s2;

        $i8 = $i16 - 129;

        i11 = 188 * $i8;

        goto label3;

     label1:
        $i17 = (int) s2;

        if $i17 < 224 goto label2;

        $i18 = (int) s2;

        if $i18 > 239 goto label2;

        $i19 = (int) s2;

        $i3 = $i19 - 224;

        $i4 = $i3 + 31;

        i11 = 188 * $i4;

        goto label3;

     label2:
        $i21 = (int) -1;

        return $i21;

     label3:
        $i5 = i0 + 1;

        $b6 = r0[$i5];

        $s22 = (short) $b6;

        $s9 = $s22 & 255;

        $i23 = (int) $s9;

        $i7 = $i23 - 64;

        $i10 = i11 + $i7;

        i12 = $i10;

        $i24 = (int) $s9;

        if $i24 < 128 goto label4;

        $i26 = (int) -1;

        i12 = $i10 + $i26;

     label4:
        return i12;
    }

    public static void <clinit>()
    {
        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int LOWBYTE_BEGIN_2> = 128;

        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int LOWBYTE_BEGIN_1> = 64;

        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int HIGHBYTE_END_2> = 239;

        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int HIGHBYTE_BEGIN_2> = 224;

        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int HIGHBYTE_END_1> = 159;

        <org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis: int HIGHBYTE_BEGIN_1> = 129;

        return;
    }
}
