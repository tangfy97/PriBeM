public class ucar.ma2.StructureDataA extends ucar.ma2.StructureData
{
    protected ucar.ma2.ArrayStructure sa;
    protected int recno;

    public void <init>(ucar.ma2.ArrayStructure, int)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.StructureMembers $r2;
        ucar.ma2.ArrayStructure r1;
        int i0;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.ArrayStructure;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        specialinvoke r0.<ucar.ma2.StructureData: void <init>(ucar.ma2.StructureMembers)>($r2);

        r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa> = r1;

        r0.<ucar.ma2.StructureDataA: int recno> = i0;

        return;
    }

    public ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.Array $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: ucar.ma2.Array getArray(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public int convertScalarInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0, $i1;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $i1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: int convertScalarInt(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $i1;
    }

    public long convertScalarLong(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        long $l1;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $l1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: long convertScalarLong(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $l1;
    }

    public float convertScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        float $f0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $f0 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: float convertScalarFloat(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $f0;
    }

    public double convertScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;
        double $d0;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $d0 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: double convertScalarDouble(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $d0;
    }

    public double getScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;
        double $d0;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $d0 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: double getScalarDouble(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $d0;
    }

    public double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        double[] $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: double[] getJavaArrayDouble(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public float getScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        float $f0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $f0 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: float getScalarFloat(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $f0;
    }

    public float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        float[] $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: float[] getJavaArrayFloat(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public byte getScalarByte(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        byte $b1;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $b1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: byte getScalarByte(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $b1;
    }

    public byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        byte[] $r3;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: byte[] getJavaArrayByte(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public short getScalarShort(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        short $s1;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $s1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: short getScalarShort(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $s1;
    }

    public short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        short[] $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: short[] getJavaArrayShort(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public int getScalarInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0, $i1;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $i1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: int getScalarInt(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $i1;
    }

    public int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int[] $r3;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: int[] getJavaArrayInt(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public long getScalarLong(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        long $l1;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $l1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: long getScalarLong(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $l1;
    }

    public long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        long[] $r3;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: long[] getJavaArrayLong(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public char getScalarChar(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        char $c1;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $c1 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: char getScalarChar(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $c1;
    }

    public char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        char[] $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: char[] getJavaArrayChar(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        java.lang.String $r3;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: java.lang.String getScalarString(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)
    {
        java.lang.String[] r18, r20;
        ucar.ma2.StructureMembers$Member r0;
        ucar.ma2.StructureDataA r11;
        ucar.ma2.ArrayChar r19;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r10, $r14, $r17;
        ucar.ma2.ArrayChar$StringIterator $r13;
        boolean $z0;
        ucar.ma2.DataType $r1, $r2, $r3, $r4, $r8;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.Array $r12, $r15;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Object $r16;

        r11 := @this: ucar.ma2.StructureDataA;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r1 != $r2 goto label3;

        $r15 = virtualinvoke r11.<ucar.ma2.StructureDataA: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

        $i2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        r18 = newarray (java.lang.String)[$i2];

        i4 = 0;

     label1:
        $i3 = lengthof r18;

        if i4 >= $i3 goto label2;

        $r16 = virtualinvoke $r15.<ucar.ma2.Array: java.lang.Object getObject(int)>(i4);

        $r17 = (java.lang.String) $r16;

        r18[i4] = $r17;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r18;

     label3:
        $r3 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r3 != $r4 goto label6;

        $r12 = virtualinvoke r11.<ucar.ma2.StructureDataA: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

        r19 = (ucar.ma2.ArrayChar) $r12;

        $r13 = virtualinvoke r19.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

        $i0 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: int getNumElems()>();

        r20 = newarray (java.lang.String)[$i0];

        i5 = 0;

     label4:
        $z0 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = i5;

        i5 = i5 + 1;

        $r14 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        r20[$i1] = $r14;

        goto label4;

     label5:
        return r20;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getJavaArrayString: not String DataType :");

        $r8 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureData $r3;
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getScalarStructure(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r2, $r3;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: ucar.ma2.ArrayStructure getArrayStructure(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArraySequence $r3;
        ucar.ma2.ArrayStructure $r2;
        int $i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        $i0 = r0.<ucar.ma2.StructureDataA: int recno>;

        $r3 = virtualinvoke $r2.<ucar.ma2.ArrayStructure: ucar.ma2.ArraySequence getArraySequence(int,ucar.ma2.StructureMembers$Member)>($i0, r1);

        return $r3;
    }

    public void showInternal(java.util.Formatter, java.lang.String)
    {
        ucar.ma2.StructureDataA r0;
        ucar.ma2.ArrayStructure $r3;
        java.lang.String r2;
        java.util.Formatter r1;

        r0 := @this: ucar.ma2.StructureDataA;

        r1 := @parameter0: java.util.Formatter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.ma2.StructureData: void showInternal(java.util.Formatter,java.lang.String)>(r1, r2);

        $r3 = r0.<ucar.ma2.StructureDataA: ucar.ma2.ArrayStructure sa>;

        virtualinvoke $r3.<ucar.ma2.ArrayStructure: void showInternal(java.util.Formatter,java.lang.String)>(r1, r2);

        return;
    }
}
