public class org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor extends org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: void <init>()>();

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor r0;
        org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey $r2;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r1;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor;

        r5 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        $r2 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$ConfigurationKeys: org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey LOWERCASE_EXPANDED_TERMS>;

        $r3 = virtualinvoke $r1.<org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler: java.lang.Object get(org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey)>($r2);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z0 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r5);

        return $r6;

     label1:
        return r5;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode postProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor r0;
        org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.TextableQueryNode $r7;
        java.lang.CharSequence $r8, $r9;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r1;
        java.util.Locale r6;
        java.lang.Object $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor;

        r4 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        $r2 = <org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler$ConfigurationKeys: org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey LOCALE>;

        $r3 = virtualinvoke $r1.<org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler: java.lang.Object get(org.apache.lucene.queryparser.flexible.core.config.ConfigurationKey)>($r2);

        r6 = (java.util.Locale) $r3;

        if r6 != null goto label1;

        r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $z0 = r4 instanceof org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode;

        if $z0 != 0 goto label3;

        $z1 = r4 instanceof org.apache.lucene.queryparser.flexible.core.nodes.FuzzyQueryNode;

        if $z1 != 0 goto label3;

        $z2 = r4 instanceof org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode;

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r4.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getParent()>();

        $z4 = $r5 instanceof org.apache.lucene.queryparser.flexible.core.nodes.RangeQueryNode;

        if $z4 != 0 goto label3;

     label2:
        $z3 = r4 instanceof org.apache.lucene.queryparser.flexible.standard.nodes.RegexpQueryNode;

        if $z3 == 0 goto label6;

     label3:
        $r7 = (org.apache.lucene.queryparser.flexible.core.nodes.TextableQueryNode) r4;

        $r8 = interfaceinvoke $r7.<org.apache.lucene.queryparser.flexible.core.nodes.TextableQueryNode: java.lang.CharSequence getText()>();

        if $r8 == null goto label4;

        $r9 = staticinvoke <org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence: java.lang.CharSequence toLowerCase(java.lang.CharSequence,java.util.Locale)>($r8, r6);

        goto label5;

     label4:
        $r9 = null;

     label5:
        interfaceinvoke $r7.<org.apache.lucene.queryparser.flexible.core.nodes.TextableQueryNode: void setText(java.lang.CharSequence)>($r9);

     label6:
        return r4;
    }

    protected org.apache.lucene.queryparser.flexible.core.nodes.QueryNode preProcessNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor r1;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        return r0;
    }

    protected java.util.List setChildrenOrder(java.util.List) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        java.util.List r0;
        org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor r1;

        r1 := @this: org.apache.lucene.queryparser.flexible.standard.processors.LowercaseExpandedTermsQueryNodeProcessor;

        r0 := @parameter0: java.util.List;

        return r0;
    }
}
