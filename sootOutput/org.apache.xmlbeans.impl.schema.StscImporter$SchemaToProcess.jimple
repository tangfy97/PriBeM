public class org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess extends java.lang.Object
{
    private org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema;
    private java.lang.String chameleonNamespace;
    private java.util.List includes;
    private java.util.List redefines;
    private java.util.List redefineObjects;
    private java.util.Set indirectIncludes;
    private java.util.Set indirectIncludedBy;

    public void <init>(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema, java.lang.String)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema r1;
        java.lang.String r2;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema> = r1;

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace> = r2;

        return;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r1;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema>;

        return $r1;
    }

    public java.lang.String getSourceName()
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r1;
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        return $r3;
    }

    public java.lang.String getChameleonNamespace()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        return $r1;
    }

    public java.util.List getRedefines()
    {
        java.util.List $r1;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        return $r1;
    }

    public java.util.List getRedefineObjects()
    {
        java.util.List $r1;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefineObjects>;

        return $r1;
    }

    private void addInclude(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        java.util.List $r1, $r3;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r2 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes> = $r4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    private void addRedefine(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess, org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r5;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r4;
        java.util.ArrayList $r2, $r3;
        java.util.List $r1, $r6, $r7, $r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r4 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefineObjects>;

        if $r6 != null goto label2;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefineObjects> = $r3;

     label2:
        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r8 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefineObjects>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;
    }

    private void buildIndirectReferences()
    {
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r9, r10;
        java.util.List $r1, $r2, $r3, $r4, $r6, $r7;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5, $r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes>;

        if $r1 == null goto label2;

        i2 = 0;

     label1:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List includes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r9 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) $r8;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addIndirectIncludes(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>(r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        if $r2 == null goto label4;

        i3 = 0;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List redefines>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        r10 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) $r5;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addIndirectIncludes(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>(r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private void addIndirectIncludes(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r2, r10;
        java.util.HashSet $r13, $r14;
        boolean $z0;
        java.util.Iterator $r8;
        java.util.Set $r1, $r3, $r4, $r5, $r6, $r7, $r11, $r12;
        java.lang.Object $r9;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r2 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        if $r1 != null goto label1;

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes> = $r14;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r4 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        if $r4 != null goto label2;

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy> = $r13;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r0);

        staticinvoke <org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addIndirectIncludesHelper(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>(r0, r2);

        $r6 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        if $r6 == null goto label4;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) $r9;

        $r11 = r10.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r12 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r10);

        staticinvoke <org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addIndirectIncludesHelper(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>(r10, r2);

        goto label3;

     label4:
        return;
    }

    private static void addIndirectIncludesHelper(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess, org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        java.util.Iterator $r3;
        java.util.Set $r1, $r2, $r7, $r8;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r5, r6;
        java.lang.Object $r4;
        boolean $z0;

        r6 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r0 := @parameter1: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) $r4;

        $r7 = r6.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r5);

        $r8 = r5.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludedBy>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        return;
    }

    public boolean indirectIncludes(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        java.util.Set $r1, $r3;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r2 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.Set indirectIncludes>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r5, $r6;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4, $r7, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) r1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        if $r3 == null goto label3;

        $r8 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label5;

        goto label4;

     label3:
        $r4 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        if $r4 == null goto label5;

     label4:
        return 0;

     label5:
        $r6 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema>;

        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema>;

        if $r6 == $r5 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r1;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema schema>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = 29 * $i0;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String chameleonNamespace>;

        $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i3 = 0;

     label2:
        $i2 = $i1 + $i3;

        return $i2;
    }

    static void access$200(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess, org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r1 := @parameter1: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addInclude(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>(r1);

        return;
    }

    static void access$300(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess, org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess, org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine r2;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0, r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r1 := @parameter1: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        r2 := @parameter2: org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void addRedefine(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess,org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)>(r1, r2);

        return;
    }

    static void access$400(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)
    {
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: void buildIndirectReferences()>();

        return;
    }
}
