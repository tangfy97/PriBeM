public abstract class org.apache.lucene.queries.function.valuesource.SingleFunction extends org.apache.lucene.queries.function.ValueSource
{
    protected final org.apache.lucene.queries.function.ValueSource source;

    public void <init>(org.apache.lucene.queries.function.ValueSource)
    {
        org.apache.lucene.queries.function.ValueSource r1;
        org.apache.lucene.queries.function.valuesource.SingleFunction r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SingleFunction;

        r1 := @parameter0: org.apache.lucene.queries.function.ValueSource;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSource: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source> = r1;

        return;
    }

    protected abstract java.lang.String name();

    public java.lang.String description()
    {
        org.apache.lucene.queries.function.ValueSource $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8;
        java.lang.String $r2, $r6, $r9;
        org.apache.lucene.queries.function.valuesource.SingleFunction r1;

        r1 := @this: org.apache.lucene.queries.function.valuesource.SingleFunction;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.SingleFunction: java.lang.String name()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = r1.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.queries.function.ValueSource: java.lang.String description()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.function.ValueSource $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        org.apache.lucene.queries.function.valuesource.SingleFunction r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SingleFunction;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.queries.function.ValueSource: int hashCode()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: java.lang.String name()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queries.function.ValueSource $r7, $r8;
        java.lang.Class $r1, $r3;
        java.lang.Object r2;
        java.lang.String $r5, $r6;
        org.apache.lucene.queries.function.valuesource.SingleFunction r0, r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SingleFunction;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r3 goto label1;

        return 0;

     label1:
        r4 = (org.apache.lucene.queries.function.valuesource.SingleFunction) r2;

        $r5 = virtualinvoke r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: java.lang.String name()>();

        $r6 = virtualinvoke r4.<org.apache.lucene.queries.function.valuesource.SingleFunction: java.lang.String name()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source>;

        $r7 = r4.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source>;

        $z1 = virtualinvoke $r8.<org.apache.lucene.queries.function.ValueSource: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void createWeight(java.util.Map, org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSource $r3;
        java.util.Map r1;
        org.apache.lucene.queries.function.valuesource.SingleFunction r0;
        org.apache.lucene.search.IndexSearcher r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.SingleFunction;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.lucene.search.IndexSearcher;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.SingleFunction: org.apache.lucene.queries.function.ValueSource source>;

        virtualinvoke $r3.<org.apache.lucene.queries.function.ValueSource: void createWeight(java.util.Map,org.apache.lucene.search.IndexSearcher)>(r1, r2);

        return;
    }
}
