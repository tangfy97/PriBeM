class org.apache.lucene.index.ReadOnlySegmentReader extends org.apache.lucene.index.SegmentReader
{

    void <init>()
    {
        org.apache.lucene.index.ReadOnlySegmentReader r0;

        r0 := @this: org.apache.lucene.index.ReadOnlySegmentReader;

        specialinvoke r0.<org.apache.lucene.index.SegmentReader: void <init>()>();

        return;
    }

    static void noWrite()
    {
        java.lang.UnsupportedOperationException $r0;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexReader cannot make any changes to the index (it was opened with readOnly = true)");

        throw $r0;
    }

    protected void acquireWriteLock()
    {
        org.apache.lucene.index.ReadOnlySegmentReader r0;

        r0 := @this: org.apache.lucene.index.ReadOnlySegmentReader;

        staticinvoke <org.apache.lucene.index.ReadOnlySegmentReader: void noWrite()>();

        return;
    }

    public boolean isDeleted(int)
    {
        int i0;
        org.apache.lucene.index.ReadOnlySegmentReader r0;
        org.apache.lucene.util.BitVector $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.ReadOnlySegmentReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.ReadOnlySegmentReader: org.apache.lucene.util.BitVector deletedDocs>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.index.ReadOnlySegmentReader: org.apache.lucene.util.BitVector deletedDocs>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.BitVector: boolean get(int)>(i0);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
