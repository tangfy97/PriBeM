public class org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl extends org.codehaus.jackson.map.SerializerFactory$Config
{
    protected static final org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS;
    protected static final org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS;
    protected final org.codehaus.jackson.map.Serializers[] _additionalSerializers;
    protected final org.codehaus.jackson.map.Serializers[] _additionalKeySerializers;
    protected final org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>(null, null, null);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.Serializers[], org.codehaus.jackson.map.Serializers[], org.codehaus.jackson.map.ser.BeanSerializerModifier[])
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] r1, r2, $r4, $r5;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] r3, $r6;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        r1 := @parameter0: org.codehaus.jackson.map.Serializers[];

        r2 := @parameter1: org.codehaus.jackson.map.Serializers[];

        r3 := @parameter2: org.codehaus.jackson.map.ser.BeanSerializerModifier[];

        specialinvoke r0.<org.codehaus.jackson.map.SerializerFactory$Config: void <init>()>();

        if r1 != null goto label1;

        $r4 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS>;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers> = $r4;

        if r2 != null goto label3;

        $r5 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS>;

        goto label4;

     label3:
        $r5 = r2;

     label4:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers> = $r5;

        if r3 != null goto label5;

        $r6 = <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS>;

        goto label6;

     label5:
        $r6 = r3;

     label6:
        r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers> = $r6;

        return;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r1, $r5;
        org.codehaus.jackson.map.Serializers[] $r2, r4, $r7;
        java.lang.Object[] $r3;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r6;
        org.codehaus.jackson.map.Serializers r0;

        r1 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.Serializers;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Serializers");

        throw $r8;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.Serializers[]) $r3;

        $r5 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r7 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r6 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        specialinvoke $r5.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>(r4, $r7, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r1, $r5;
        org.codehaus.jackson.map.Serializers[] $r2, r4, $r7;
        java.lang.Object[] $r3;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r6;
        org.codehaus.jackson.map.Serializers r0;

        r1 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.Serializers;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Serializers");

        throw $r8;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.Serializers[]) $r3;

        $r5 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r7 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r6 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        specialinvoke $r5.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>($r7, r4, $r6);

        return $r5;
    }

    public org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r1, $r5;
        org.codehaus.jackson.map.Serializers[] $r6, $r7;
        java.lang.Object[] $r3;
        org.codehaus.jackson.map.ser.BeanSerializerModifier r0;
        java.lang.IllegalArgumentException $r8;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r2, r4;

        r1 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        r0 := @parameter0: org.codehaus.jackson.map.ser.BeanSerializerModifier;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null modifier");

        throw $r8;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>($r2, r0);

        r4 = (org.codehaus.jackson.map.ser.BeanSerializerModifier[]) $r3;

        $r5 = new org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r7 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r6 = r1.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        specialinvoke $r5.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>($r7, $r6, r4);

        return $r5;
    }

    public boolean hasSerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasKeySerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasSerializerModifiers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Iterable serializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalSerializers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable keySerializers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.Serializers[] $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] _additionalKeySerializers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Iterable serializerModifiers()
    {
        org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl r0;
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r1;
        java.lang.Iterable $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] _modifiers>;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.ser.BeanSerializerModifier[] $r1;
        org.codehaus.jackson.map.Serializers[] $r0;

        $r0 = newarray (org.codehaus.jackson.map.Serializers)[0];

        <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.Serializers[] NO_SERIALIZERS> = $r0;

        $r1 = newarray (org.codehaus.jackson.map.ser.BeanSerializerModifier)[0];

        <org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.ser.BeanSerializerModifier[] NO_MODIFIERS> = $r1;

        return;
    }
}
