abstract class com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService extends java.lang.Object implements com.mycila.inject.internal.guava.util.concurrent.ListeningExecutorService
{

    void <init>()
    {
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.lang.Runnable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask $r1;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r2;
        java.lang.Runnable r0;

        r2 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask: com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object)>(r0, null);

        virtualinvoke r2.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r1);

        return $r1;
    }

    public com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.lang.Runnable, java.lang.Object)
    {
        com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask $r2;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r3;
        java.lang.Object r1;
        java.lang.Runnable r0;

        r3 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.lang.Runnable;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask: com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object)>(r0, r1);

        virtualinvoke r3.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r2);

        return $r2;
    }

    public com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable r0;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask $r1;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r2;

        r2 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.util.concurrent.Callable;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask: com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r0);

        virtualinvoke r2.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r1);

        return $r1;
    }

    private java.lang.Object doInvokeAny(java.util.Collection, boolean, long) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeoutException $r31;
        java.util.concurrent.Future $r7, r11, $r13, $r18, r22, $r27, r28;
        boolean z0, $z1, $z2, $z3;
        java.util.Collection r0;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r3;
        java.util.concurrent.ExecutorCompletionService $r30;
        java.lang.Throwable $r19;
        java.util.concurrent.Callable $r6, $r17;
        long $l1, $l2, l3, $l4, l5;
        java.util.ArrayList $r29;
        int $i0, i6, i7, $i9, $i11, $i13;
        java.util.Iterator $r4, $r9, $r20;
        java.lang.RuntimeException $r23;
        java.util.concurrent.TimeUnit $r12;
        java.util.concurrent.ExecutionException $r25, r26, $r32, $r33;
        java.lang.Object $r5, $r8, $r10, $r16, $r21;

        r3 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        l3 := @parameter2: long;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z3);

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>($i0);

        $r30 = new java.util.concurrent.ExecutorCompletionService;

        specialinvoke $r30.<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor)>(r3);

     label03:
        r26 = null;

        if z0 == 0 goto label04;

        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        goto label05;

     label04:
        $l4 = 0L;

     label05:
        l5 = $l4;

        $r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.concurrent.Callable) $r5;

        $r7 = virtualinvoke $r30.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r6);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i9 = (int) -1;

        i6 = $i0 + $i9;

        i7 = 1;

     label06:
        $r27 = virtualinvoke $r30.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll()>();

        r28 = $r27;

        if $r27 != null goto label11;

        if i6 <= 0 goto label07;

        $i11 = (int) -1;

        i6 = i6 + $i11;

        $r16 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.util.concurrent.Callable) $r16;

        $r18 = virtualinvoke $r30.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r17);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r18);

        i7 = i7 + 1;

        goto label11;

     label07:
        if i7 != 0 goto label08;

        goto label19;

     label08:
        if z0 == 0 goto label10;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r13 = virtualinvoke $r30.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>(l3, $r12);

        r28 = $r13;

        if $r13 != null goto label09;

        $r31 = new java.util.concurrent.TimeoutException;

        specialinvoke $r31.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r31;

     label09:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l2 = $l1 - l5;

        l3 = l3 - $l2;

        l5 = $l1;

        goto label11;

     label10:
        r28 = virtualinvoke $r30.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future take()>();

     label11:
        if r28 == null goto label18;

        $i13 = (int) -1;

        i7 = i7 + $i13;

     label12:
        $r8 = interfaceinvoke r28.<java.util.concurrent.Future: java.lang.Object get()>();

     label13:
        $r9 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.concurrent.Future) $r10;

        interfaceinvoke r11.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label14;

     label15:
        return $r8;

     label16:
        $r25 := @caughtexception;

        r26 = $r25;

        goto label18;

     label17:
        $r23 := @caughtexception;

        $r32 = new java.util.concurrent.ExecutionException;

        specialinvoke $r32.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r23);

        r26 = $r32;

     label18:
        goto label06;

     label19:
        if r26 != null goto label20;

        $r33 = new java.util.concurrent.ExecutionException;

        specialinvoke $r33.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(null);

        r26 = $r33;

     label20:
        throw r26;

     label21:
        $r19 := @caughtexception;

     label22:
        $r20 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z2 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.concurrent.Future) $r21;

        interfaceinvoke r22.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label23;

     label24:
        throw $r19;

        catch java.util.concurrent.ExecutionException from label12 to label13 with label16;
        catch java.lang.RuntimeException from label12 to label13 with label17;
        catch java.lang.Throwable from label03 to label13 with label21;
        catch java.lang.Throwable from label16 to label22 with label21;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        java.util.concurrent.TimeoutException $r3;
        java.lang.Object $r2;
        java.lang.AssertionError $r4;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

     label1:
        $r2 = specialinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 0, 0L);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        long l0, $l1;
        java.lang.Object $r3;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r3 = specialinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 1, $l1);

        return $r3;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        java.lang.Throwable $r11;
        java.util.concurrent.Callable r17;
        java.lang.NullPointerException $r10;
        java.util.ArrayList $r1;
        java.util.concurrent.Future r14, r18, r19;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask $r8;
        java.util.Iterator $r2, $r3, $r4, $r12;
        java.util.concurrent.CancellationException $r16;
        java.util.Collection r0;
        java.util.concurrent.ExecutionException $r15;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r9;
        java.lang.Object $r5, $r6, $r7, $r13;

        r9 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label01;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>()>();

        throw $r10;

     label01:
        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        z5 = 0;

     label02:
        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.concurrent.Callable) $r7;

        $r8 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask: com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r17);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

        virtualinvoke r9.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r8);

        goto label03;

     label04:
        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.concurrent.Future) $r6;

        $z3 = interfaceinvoke r18.<java.util.concurrent.Future: boolean isDone()>();

        if $z3 != 0 goto label10;

     label06:
        interfaceinvoke r18.<java.util.concurrent.Future: java.lang.Object get()>();

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        goto label05;

     label11:
        z5 = 1;

     label12:
        if 1 != 0 goto label14;

        $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.concurrent.Future) $r5;

        interfaceinvoke r19.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label13;

     label14:
        return $r1;

     label15:
        $r11 := @caughtexception;

     label16:
        if 0 != 0 goto label18;

        $r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.concurrent.Future) $r13;

        interfaceinvoke r14.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label17;

     label18:
        throw $r11;

        catch java.util.concurrent.CancellationException from label06 to label07 with label08;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label09;
        catch java.lang.Throwable from label02 to label12 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeoutException $r26;
        java.lang.Runnable $r15, $r16;
        java.lang.NullPointerException $r36;
        java.util.concurrent.Future r25, r29, r32, r33, r34, r35;
        byte $b2, $b5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask $r21;
        java.util.concurrent.CancellationException $r31;
        java.util.Collection r0;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r13;
        java.lang.Throwable $r22;
        long l0, $l3, $l4, l6, l7, $l8, $l9;
        java.util.concurrent.Callable r20;
        java.util.ArrayList $r37;
        int $i1, $i10, $i11;
        java.util.Iterator $r4, $r5, $r6, $r7, $r11, $r17, $r23, $r27;
        java.util.concurrent.TimeUnit r2, $r10;
        java.util.concurrent.ExecutionException $r30;
        java.lang.Object $r8, $r9, $r12, $r14, $r18, $r19, $r24, $r28;

        r13 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r0 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        if r0 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r36 = new java.lang.NullPointerException;

        specialinvoke $r36.<java.lang.NullPointerException: void <init>()>();

        throw $r36;

     label02:
        l6 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r37 = new java.util.ArrayList;

        $i1 = interfaceinvoke r0.<java.util.Collection: int size()>();

        specialinvoke $r37.<java.util.ArrayList: void <init>(int)>($i1);

        z9 = 0;

     label03:
        $r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r19 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.concurrent.Callable) $r19;

        $r21 = staticinvoke <com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask: com.mycila.inject.internal.guava.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r20);

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label04;

     label05:
        l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $r5 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Runnable) $r14;

        $r16 = (java.lang.Runnable) $r15;

        virtualinvoke r13.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r16);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l4 = $l3 - l7;

        l6 = l6 - $l4;

        l7 = $l3;

        $b5 = l6 cmp 0L;

        $i10 = (int) $b5;

        if $i10 > 0 goto label10;

     label07:
        if 0 != 0 goto label09;

        $r17 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z6 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label09;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.concurrent.Future) $r18;

        interfaceinvoke r32.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label08;

     label09:
        return $r37;

     label10:
        goto label06;

     label11:
        $r6 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.util.concurrent.Future) $r9;

        $z4 = interfaceinvoke r33.<java.util.concurrent.Future: boolean isDone()>();

        if $z4 != 0 goto label25;

        $b2 = l6 cmp 0L;

        $i11 = (int) $b2;

        if $i11 > 0 goto label16;

     label13:
        if 0 != 0 goto label15;

        $r11 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z5 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.util.concurrent.Future) $r12;

        interfaceinvoke r34.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label14;

     label15:
        return $r37;

     label16:
        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        interfaceinvoke r33.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10);

     label17:
        goto label24;

     label18:
        $r31 := @caughtexception;

        goto label24;

     label19:
        $r30 := @caughtexception;

        goto label24;

     label20:
        $r26 := @caughtexception;

     label21:
        if 0 != 0 goto label23;

        $r27 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z8 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label23;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.concurrent.Future) $r28;

        interfaceinvoke r29.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label22;

     label23:
        return $r37;

     label24:
        $l8 = staticinvoke <java.lang.System: long nanoTime()>();

        $l9 = $l8 - l7;

        l6 = l6 - $l9;

        l7 = $l8;

     label25:
        goto label12;

     label26:
        z9 = 1;

     label27:
        if 1 != 0 goto label29;

        $r7 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label29;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.util.concurrent.Future) $r8;

        interfaceinvoke r35.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label28;

     label29:
        return $r37;

     label30:
        $r22 := @caughtexception;

     label31:
        if 0 != 0 goto label33;

        $r23 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z7 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label33;

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.concurrent.Future) $r24;

        interfaceinvoke r25.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label32;

     label33:
        throw $r22;

        catch java.util.concurrent.CancellationException from label16 to label17 with label18;
        catch java.util.concurrent.ExecutionException from label16 to label17 with label19;
        catch java.util.concurrent.TimeoutException from label16 to label17 with label20;
        catch java.lang.Throwable from label03 to label07 with label30;
        catch java.lang.Throwable from label10 to label13 with label30;
        catch java.lang.Throwable from label16 to label21 with label30;
        catch java.lang.Throwable from label24 to label27 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r2;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.lang.Runnable)>(r1);

        return $r2;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r3;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Object r2;
        java.lang.Runnable r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ListenableFuture $r2;
        java.util.concurrent.Callable r1;
        com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.AbstractListeningExecutorService: com.mycila.inject.internal.guava.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>(r1);

        return $r2;
    }
}
