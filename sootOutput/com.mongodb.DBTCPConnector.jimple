class com.mongodb.DBTCPConnector extends java.lang.Object implements com.mongodb.DBConnector
{
    static java.util.logging.Logger _logger;
    static java.util.logging.Logger _createLogger;
    final com.mongodb.Mongo _mongo;
    private com.mongodb.ServerAddress _curAddress;
    private com.mongodb.DBPortPool _curPortPool;
    private com.mongodb.DBPortPool$Holder _portHolder;
    private final java.util.List _allHosts;
    private final java.lang.ThreadLocal _threadPort;
    private static final com.mongodb.DBObject _isMaster;

    public void <init>(com.mongodb.Mongo, com.mongodb.ServerAddress) throws com.mongodb.MongoException
    {
        com.mongodb.DBPortPool$Holder $r3;
        java.util.ArrayList $r8;
        java.lang.String $r7, $r18;
        boolean $z0;
        com.mongodb.ServerAddress r5, $r16;
        com.mongodb.MongoOptions $r4;
        com.mongodb.Mongo r2;
        com.mongodb.DBTCPConnector r0;
        java.util.logging.Logger $r6, $r11;
        java.util.List $r9, $r13;
        com.mongodb.DBTCPConnector$1 $r1;
        java.lang.StringBuilder $r10, $r12, $r14, $r15, $r17;

        r0 := @this: com.mongodb.DBTCPConnector;

        r2 := @parameter0: com.mongodb.Mongo;

        r5 := @parameter1: com.mongodb.ServerAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.mongodb.DBTCPConnector$1;

        specialinvoke $r1.<com.mongodb.DBTCPConnector$1: void <init>(com.mongodb.DBTCPConnector)>(r0);

        r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort> = $r1;

        r0.<com.mongodb.DBTCPConnector: com.mongodb.Mongo _mongo> = r2;

        $r3 = new com.mongodb.DBPortPool$Holder;

        $r4 = r2.<com.mongodb.Mongo: com.mongodb.MongoOptions _options>;

        specialinvoke $r3.<com.mongodb.DBPortPool$Holder: void <init>(com.mongodb.MongoOptions)>($r4);

        r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool$Holder _portHolder> = $r3;

        staticinvoke <com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _checkAddress(com.mongodb.ServerAddress)>(r5);

        $r6 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _createLogger>;

        $r7 = virtualinvoke r5.<com.mongodb.ServerAddress: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r7);

        $z0 = virtualinvoke r5.<com.mongodb.ServerAddress: boolean isPaired()>();

        if $z0 == 0 goto label1;

        $r8 = new java.util.ArrayList;

        $r9 = virtualinvoke r5.<com.mongodb.ServerAddress: java.util.List explode()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts> = $r8;

        $r11 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _createLogger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switch to paired mode : ");

        $r13 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r16 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void info(java.lang.String)>($r18);

        goto label2;

     label1:
        specialinvoke r0.<com.mongodb.DBTCPConnector: boolean _set(com.mongodb.ServerAddress)>(r5);

        r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts> = null;

     label2:
        return;
    }

    public transient void <init>(com.mongodb.Mongo, com.mongodb.ServerAddress[]) throws com.mongodb.MongoException
    {
        java.util.List $r3;
        com.mongodb.Mongo r1;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.ServerAddress[] r2;

        r0 := @this: com.mongodb.DBTCPConnector;

        r1 := @parameter0: com.mongodb.Mongo;

        r2 := @parameter1: com.mongodb.ServerAddress[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke r0.<com.mongodb.DBTCPConnector: void <init>(com.mongodb.Mongo,java.util.List)>(r1, $r3);

        return;
    }

    public void <init>(com.mongodb.Mongo, java.util.List) throws com.mongodb.MongoException
    {
        com.mongodb.ServerAddress $r11;
        com.mongodb.MongoOptions $r4;
        com.mongodb.Mongo r2;
        com.mongodb.DBTCPConnector r0;
        java.util.logging.Logger $r8;
        com.mongodb.DBPortPool$Holder $r3;
        java.util.ArrayList $r6;
        java.util.List r5;
        com.mongodb.DBTCPConnector$1 $r1;
        java.lang.StringBuilder $r7, $r9, $r10, $r12;
        java.lang.String $r13;

        r0 := @this: com.mongodb.DBTCPConnector;

        r2 := @parameter0: com.mongodb.Mongo;

        r5 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.mongodb.DBTCPConnector$1;

        specialinvoke $r1.<com.mongodb.DBTCPConnector$1: void <init>(com.mongodb.DBTCPConnector)>(r0);

        r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort> = $r1;

        r0.<com.mongodb.DBTCPConnector: com.mongodb.Mongo _mongo> = r2;

        $r3 = new com.mongodb.DBPortPool$Holder;

        $r4 = r2.<com.mongodb.Mongo: com.mongodb.MongoOptions _options>;

        specialinvoke $r3.<com.mongodb.DBPortPool$Holder: void <init>(com.mongodb.MongoOptions)>($r4);

        r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool$Holder _portHolder> = $r3;

        staticinvoke <com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _checkAddress(java.util.List)>(r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts> = $r6;

        $r8 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _createLogger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r11 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void info(java.lang.String)>($r13);

        return;
    }

    private static com.mongodb.ServerAddress _checkAddress(com.mongodb.ServerAddress)
    {
        com.mongodb.ServerAddress r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: com.mongodb.ServerAddress;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("address can\'t be null");

        throw $r1;

     label1:
        return r0;
    }

    private static com.mongodb.ServerAddress _checkAddress(java.util.List)
    {
        com.mongodb.ServerAddress $r2;
        java.util.List r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r3;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("addresses can\'t be null");

        throw $r4;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("need to specify at least 1 address");

        throw $r3;

     label2:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (com.mongodb.ServerAddress) $r1;

        return $r2;
    }

    public void requestStart()
    {
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DBTCPConnector$MyPort $r3;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (com.mongodb.DBTCPConnector$MyPort) $r2;

        virtualinvoke $r3.<com.mongodb.DBTCPConnector$MyPort: void requestStart()>();

        return;
    }

    public void requestDone()
    {
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DBTCPConnector$MyPort $r3;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (com.mongodb.DBTCPConnector$MyPort) $r2;

        virtualinvoke $r3.<com.mongodb.DBTCPConnector$MyPort: void requestDone()>();

        return;
    }

    public void requestEnsureConnection()
    {
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DBTCPConnector$MyPort $r3;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (com.mongodb.DBTCPConnector$MyPort) $r2;

        virtualinvoke $r3.<com.mongodb.DBTCPConnector$MyPort: void requestEnsureConnection()>();

        return;
    }

    com.mongodb.WriteResult _checkWriteError(com.mongodb.DBTCPConnector$MyPort, com.mongodb.DBPort, com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.DBPort r7;
        com.mongodb.MongoException$DuplicateKey $r17;
        com.mongodb.CommandResult $r5;
        com.mongodb.WriteResult $r16;
        int i0, $i2;
        java.lang.String $r10;
        java.lang.Number $r13;
        com.mongodb.DBTCPConnector$MyPort r6;
        boolean $z0, $z1, $z2;
        com.mongodb.MongoException $r18;
        com.mongodb.Mongo $r1;
        com.mongodb.BasicDBObject $r4;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DB $r2;
        java.lang.Object $r8, $r9, $r12;
        com.mongodb.WriteConcern r3;

        r0 := @this: com.mongodb.DBTCPConnector;

        r6 := @parameter0: com.mongodb.DBTCPConnector$MyPort;

        r7 := @parameter1: com.mongodb.DBPort;

        r3 := @parameter2: com.mongodb.WriteConcern;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.Mongo _mongo>;

        $r2 = virtualinvoke $r1.<com.mongodb.Mongo: com.mongodb.DB getDB(java.lang.String)>("admin");

        $r4 = virtualinvoke r3.<com.mongodb.WriteConcern: com.mongodb.BasicDBObject getCommand()>();

        $r5 = virtualinvoke $r2.<com.mongodb.DB: com.mongodb.CommandResult command(com.mongodb.DBObject)>($r4);

        virtualinvoke r6.<com.mongodb.DBTCPConnector$MyPort: void done(com.mongodb.DBPort)>(r7);

        $r8 = virtualinvoke $r5.<com.mongodb.CommandResult: java.lang.Object get(java.lang.String)>("err");

        if $r8 != null goto label1;

        $r16 = new com.mongodb.WriteResult;

        specialinvoke $r16.<com.mongodb.WriteResult: void <init>(com.mongodb.CommandResult,com.mongodb.WriteConcern)>($r5, r3);

        return $r16;

     label1:
        $i2 = (int) -1;

        i0 = $i2;

        $r9 = virtualinvoke $r5.<com.mongodb.CommandResult: java.lang.Object get(java.lang.String)>("code");

        $z0 = $r9 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke $r5.<com.mongodb.CommandResult: java.lang.Object get(java.lang.String)>("code");

        $r13 = (java.lang.Number) $r12;

        i0 = virtualinvoke $r13.<java.lang.Number: int intValue()>();

     label2:
        $r10 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        if i0 == 11000 goto label3;

        if i0 == 11001 goto label3;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("E11000");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("E11001");

        if $z2 == 0 goto label4;

     label3:
        $r17 = new com.mongodb.MongoException$DuplicateKey;

        specialinvoke $r17.<com.mongodb.MongoException$DuplicateKey: void <init>(int,java.lang.String)>(i0, $r10);

        throw $r17;

     label4:
        $r18 = new com.mongodb.MongoException;

        specialinvoke $r18.<com.mongodb.MongoException: void <init>(int,java.lang.String)>(i0, $r10);

        throw $r18;
    }

    public com.mongodb.WriteResult say(com.mongodb.DB, com.mongodb.OutMessage, com.mongodb.WriteConcern) throws com.mongodb.MongoException
    {
        com.mongodb.DBPort $r4;
        com.mongodb.CommandResult $r13;
        com.mongodb.WriteResult $r8, $r9, $r15;
        java.lang.Boolean $r14;
        com.mongodb.OutMessage r6;
        com.mongodb.DBTCPConnector$MyPort r3;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r1;
        com.mongodb.MongoException $r11;
        java.io.IOException $r12;
        java.lang.RuntimeException $r10;
        com.mongodb.DBTCPConnector r0;
        java.lang.Object $r2;
        com.mongodb.DB r5;
        com.mongodb.WriteConcern r7;
        com.mongodb.MongoException$Network $r16;

        r0 := @this: com.mongodb.DBTCPConnector;

        r5 := @parameter0: com.mongodb.DB;

        r6 := @parameter1: com.mongodb.OutMessage;

        r7 := @parameter2: com.mongodb.WriteConcern;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (com.mongodb.DBTCPConnector$MyPort) $r2;

        $r4 = virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: com.mongodb.DBPort get(boolean)>(1);

        virtualinvoke $r4.<com.mongodb.DBPort: void checkAuth(com.mongodb.DB)>(r5);

     label1:
        virtualinvoke $r4.<com.mongodb.DBPort: void say(com.mongodb.OutMessage)>(r6);

        $z0 = virtualinvoke r7.<com.mongodb.WriteConcern: boolean callGetLastError()>();

        if $z0 == 0 goto label3;

        $r9 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.WriteResult _checkWriteError(com.mongodb.DBTCPConnector$MyPort,com.mongodb.DBPort,com.mongodb.WriteConcern)>(r3, $r4, r7);

     label2:
        return $r9;

     label3:
        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void done(com.mongodb.DBPort)>($r4);

        $r8 = new com.mongodb.WriteResult;

        specialinvoke $r8.<com.mongodb.WriteResult: void <init>(com.mongodb.DB,com.mongodb.DBPort,com.mongodb.WriteConcern)>(r5, $r4, r7);

     label4:
        return $r8;

     label5:
        $r12 := @caughtexception;

        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void error(java.lang.Exception)>($r12);

        virtualinvoke r0.<com.mongodb.DBTCPConnector: boolean _error(java.lang.Throwable)>($r12);

        $z1 = virtualinvoke r7.<com.mongodb.WriteConcern: boolean raiseNetworkErrors()>();

        if $z1 == 0 goto label6;

        $r16 = new com.mongodb.MongoException$Network;

        specialinvoke $r16.<com.mongodb.MongoException$Network: void <init>(java.lang.String,java.io.IOException)>("can\'t say something", $r12);

        throw $r16;

     label6:
        $r13 = new com.mongodb.CommandResult;

        specialinvoke $r13.<com.mongodb.CommandResult: void <init>()>();

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r13.<com.mongodb.CommandResult: java.lang.Object put(java.lang.String,java.lang.Object)>("ok", $r14);

        virtualinvoke $r13.<com.mongodb.CommandResult: java.lang.Object put(java.lang.String,java.lang.Object)>("$err", "NETWORK ERROR");

        $r15 = new com.mongodb.WriteResult;

        specialinvoke $r15.<com.mongodb.WriteResult: void <init>(com.mongodb.CommandResult,com.mongodb.WriteConcern)>($r13, r7);

        return $r15;

     label7:
        $r11 := @caughtexception;

        throw $r11;

     label8:
        $r10 := @caughtexception;

        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void error(java.lang.Exception)>($r10);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch com.mongodb.MongoException from label1 to label2 with label7;
        catch com.mongodb.MongoException from label3 to label4 with label7;
        catch java.lang.RuntimeException from label1 to label2 with label8;
        catch java.lang.RuntimeException from label3 to label4 with label8;
    }

    public com.mongodb.Response call(com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage) throws com.mongodb.MongoException
    {
        com.mongodb.DBCollection r2;
        com.mongodb.Response $r4;
        com.mongodb.DB r1;
        com.mongodb.OutMessage r3;
        com.mongodb.DBTCPConnector r0;

        r0 := @this: com.mongodb.DBTCPConnector;

        r1 := @parameter0: com.mongodb.DB;

        r2 := @parameter1: com.mongodb.DBCollection;

        r3 := @parameter2: com.mongodb.OutMessage;

        $r4 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,int)>(r1, r2, r3, 2);

        return $r4;
    }

    public com.mongodb.Response call(com.mongodb.DB, com.mongodb.DBCollection, com.mongodb.OutMessage, int) throws com.mongodb.MongoException
    {
        com.mongodb.DBPort $r4;
        com.mongodb.ServerError $r9;
        int i0, $i1, $i2;
        com.mongodb.Response $r8, $r10, $r15;
        com.mongodb.OutMessage r6;
        com.mongodb.DBTCPConnector$MyPort r3;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r1;
        com.mongodb.MongoException $r11;
        com.mongodb.DBCollection r7;
        java.io.IOException $r13;
        java.lang.RuntimeException $r12;
        com.mongodb.DBTCPConnector r0;
        java.lang.Object $r2;
        com.mongodb.DB r5;
        com.mongodb.MongoException$Network $r14;

        r0 := @this: com.mongodb.DBTCPConnector;

        r5 := @parameter0: com.mongodb.DB;

        r7 := @parameter1: com.mongodb.DBCollection;

        r6 := @parameter2: com.mongodb.OutMessage;

        i0 := @parameter3: int;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.lang.ThreadLocal _threadPort>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (com.mongodb.DBTCPConnector$MyPort) $r2;

        $r4 = virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: com.mongodb.DBPort get(boolean)>(0);

        virtualinvoke $r4.<com.mongodb.DBPort: void checkAuth(com.mongodb.DB)>(r5);

     label1:
        $r8 = virtualinvoke $r4.<com.mongodb.DBPort: com.mongodb.Response call(com.mongodb.OutMessage,com.mongodb.DBCollection)>(r6, r7);

        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void done(com.mongodb.DBPort)>($r4);

     label2:
        goto label6;

     label3:
        $r13 := @caughtexception;

        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void error(java.lang.Exception)>($r13);

        $z1 = virtualinvoke r0.<com.mongodb.DBTCPConnector: boolean _error(java.lang.Throwable)>($r13);

        if $z1 == 0 goto label4;

        if i0 <= 0 goto label4;

        $i2 = i0 - 1;

        $r15 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,int)>(r5, r7, r6, $i2);

        return $r15;

     label4:
        $r14 = new com.mongodb.MongoException$Network;

        specialinvoke $r14.<com.mongodb.MongoException$Network: void <init>(java.lang.String,java.io.IOException)>("can\'t call something", $r13);

        throw $r14;

     label5:
        $r12 := @caughtexception;

        virtualinvoke r3.<com.mongodb.DBTCPConnector$MyPort: void error(java.lang.Exception)>($r12);

        throw $r12;

     label6:
        $r9 = virtualinvoke $r8.<com.mongodb.Response: com.mongodb.ServerError getError()>();

        if $r9 == null goto label8;

        $z0 = virtualinvoke $r9.<com.mongodb.ServerError: boolean isNotMasterError()>();

        if $z0 == 0 goto label8;

        specialinvoke r0.<com.mongodb.DBTCPConnector: void _pickCurrent()>();

        if i0 > 0 goto label7;

        $r11 = new com.mongodb.MongoException;

        specialinvoke $r11.<com.mongodb.MongoException: void <init>(java.lang.String)>("not talking to master and retries used up");

        throw $r11;

     label7:
        $i1 = i0 - 1;

        $r10 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.Response call(com.mongodb.DB,com.mongodb.DBCollection,com.mongodb.OutMessage,int)>(r5, r7, r6, $i1);

        return $r10;

     label8:
        return $r8;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public com.mongodb.ServerAddress getAddress()
    {
        com.mongodb.ServerAddress $r1;
        com.mongodb.DBTCPConnector r0;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        return $r1;
    }

    public java.util.List getAllAddress()
    {
        java.util.List $r1;
        com.mongodb.DBTCPConnector r0;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        return $r1;
    }

    public java.lang.String getConnectPoint()
    {
        com.mongodb.ServerAddress $r1;
        java.lang.String $r2;
        com.mongodb.DBTCPConnector r0;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r2 = virtualinvoke $r1.<com.mongodb.ServerAddress: java.lang.String toString()>();

        return $r2;
    }

    boolean _error(java.lang.Throwable) throws com.mongodb.MongoException
    {
        java.io.PrintStream $r3;
        java.lang.Throwable r5;
        com.mongodb.DBTCPConnector r0;
        java.util.List $r1;
        java.lang.StringBuilder $r2, $r4, $r6;
        java.lang.String $r7;

        r0 := @this: com.mongodb.DBTCPConnector;

        r5 := @parameter0: java.lang.Throwable;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        if $r1 == null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paired mode, switching master b/c of: ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke r5.<java.lang.Throwable: void printStackTrace()>();

        specialinvoke r0.<com.mongodb.DBTCPConnector: void _pickCurrent()>();

     label1:
        return 1;
    }

    com.mongodb.ServerAddress _addAllFromSet(com.mongodb.DBObject)
    {
        java.lang.Throwable $r16;
        com.mongodb.DBObject r0;
        int $i0;
        java.lang.String r3, $r9, $r23;
        boolean $z0, $z1, $z2, $z3;
        com.mongodb.ServerAddress $r10, r24;
        java.util.Iterator $r7;
        com.mongodb.DBTCPConnector r4;
        java.util.logging.Logger $r19;
        java.net.UnknownHostException $r17;
        java.util.List $r5, $r6, $r11, $r12, $r13, $r15;
        java.lang.Object $r1, $r2, $r8, $r14;
        java.lang.StringBuilder $r18, $r20, $r21, $r22;

        r4 := @this: com.mongodb.DBTCPConnector;

        r0 := @parameter0: com.mongodb.DBObject;

        $r1 = interfaceinvoke r0.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("hosts");

        $z0 = $r1 instanceof java.util.List;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = interfaceinvoke r0.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("primary");

        r3 = (java.lang.String) $r2;

        r24 = null;

        $r5 = r4.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        entermonitor $r5;

     label02:
        $r6 = (java.util.List) $r1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label04:
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = new com.mongodb.ServerAddress;

        specialinvoke $r10.<com.mongodb.ServerAddress: void <init>(java.lang.String)>($r9);

        $r11 = r4.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $z2 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r10);

        if $z2 != 0 goto label05;

        $r15 = r4.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r10);

     label05:
        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label06;

        $r12 = r4.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $i0 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>($r10);

        $r13 = r4.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i0);

        r24 = (com.mongodb.ServerAddress) $r14;

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        $r19 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown host [");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void severe(java.lang.String)>($r23);

     label08:
        goto label03;

     label09:
        exitmonitor $r5;

     label10:
        goto label13;

     label11:
        $r16 := @caughtexception;

        exitmonitor $r5;

     label12:
        throw $r16;

     label13:
        return r24;

        catch java.net.UnknownHostException from label04 to label06 with label07;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    void _pickInitial() throws com.mongodb.MongoException
    {
        com.mongodb.DBObject $r8, $r27, $r35;
        boolean $z0, $z1, $z2, $z3;
        com.mongodb.MongoException $r14;
        java.util.logging.Logger $r3, $r19, $r30, $r37, $r44;
        java.lang.Exception $r42;
        java.util.List $r10, $r11, $r12, $r28;
        java.lang.StringBuilder $r2, $r4, $r6, $r18, $r20, $r22, $r23, $r24, $r25, $r29, $r31, $r32, $r33, $r36, $r38, $r39, $r40;
        java.lang.Throwable $r45;
        java.util.logging.Level $r43;
        int $i0;
        java.lang.String $r7, $r26, $r34, $r41;
        com.mongodb.ServerAddress $r1, $r5, $r9, r16, $r17, $r21;
        java.util.Iterator $r13;
        com.mongodb.DBTCPConnector r0;
        java.lang.Object $r15;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        if $r1 == null goto label01;

        return;

     label01:
        specialinvoke r0.<com.mongodb.DBTCPConnector: void _pickCurrent()>();

     label02:
        $r3 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("current address beginning of _pickInitial: ");

        $r5 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void info(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.DBObject isMasterCmd()>();

        $r9 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _addAllFromSet(com.mongodb.DBObject)>($r8);

        $z0 = virtualinvoke r0.<com.mongodb.DBTCPConnector: boolean _isMaster(com.mongodb.DBObject)>($r8);

        if $z0 == 0 goto label04;

     label03:
        return;

     label04:
        if $r9 == null goto label07;

        specialinvoke r0.<com.mongodb.DBTCPConnector: boolean _set(com.mongodb.ServerAddress)>($r9);

        $r35 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.DBObject isMasterCmd()>();

        virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _addAllFromSet(com.mongodb.DBObject)>($r35);

        $z2 = virtualinvoke r0.<com.mongodb.DBTCPConnector: boolean _isMaster(com.mongodb.DBObject)>($r35);

        if $z2 == 0 goto label06;

     label05:
        return;

     label06:
        $r37 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("primary given was wrong: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" going to scan");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.util.logging.Logger: void severe(java.lang.String)>($r41);

     label07:
        $r10 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        entermonitor $r10;

     label08:
        $r11 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r11);

        $r12 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r15 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.mongodb.ServerAddress) $r15;

        $r17 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        if $r17 != r16 goto label10;

        goto label09;

     label10:
        $r19 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote [");

        $r21 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] -> [");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void info(java.lang.String)>($r26);

        specialinvoke r0.<com.mongodb.DBTCPConnector: boolean _set(com.mongodb.ServerAddress)>(r16);

        $r27 = virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.DBObject isMasterCmd()>();

        virtualinvoke r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _addAllFromSet(com.mongodb.DBObject)>($r27);

        $z1 = virtualinvoke r0.<com.mongodb.DBTCPConnector: boolean _isMaster(com.mongodb.DBObject)>($r27);

        if $z1 == 0 goto label12;

        exitmonitor $r10;

     label11:
        return;

     label12:
        $r28 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $i0 = interfaceinvoke $r28.<java.util.List: int size()>();

        if $i0 != 2 goto label13;

        $r30 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switched to: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but isn\'t master");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void severe(java.lang.String)>($r34);

     label13:
        goto label09;

     label14:
        $r14 = new com.mongodb.MongoException;

        specialinvoke $r14.<com.mongodb.MongoException: void <init>(java.lang.String)>("can\'t find master");

        throw $r14;

     label15:
        $r45 := @caughtexception;

        exitmonitor $r10;

     label16:
        throw $r45;

     label17:
        $r42 := @caughtexception;

        $r44 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r43 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        virtualinvoke $r44.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r43, "can\'t pick initial master, using random one", $r42);

        return;

        catch java.lang.Throwable from label08 to label11 with label15;
        catch java.lang.Throwable from label12 to label16 with label15;
        catch java.lang.Exception from label02 to label03 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label11 with label17;
        catch java.lang.Exception from label12 to label17 with label17;
    }

    private void _pickCurrent() throws com.mongodb.MongoException
    {
        java.lang.Throwable $r21;
        int $i0, i1;
        java.lang.String $r19;
        com.mongodb.ServerAddress r8, $r9, $r10, $r14;
        com.mongodb.MongoException $r5, $r20;
        com.mongodb.DBTCPConnector r0;
        java.util.logging.Logger $r12;
        java.util.List $r1, $r2, $r3, $r4, $r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r18;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        if $r1 != null goto label01;

        $r20 = new com.mongodb.MongoException;

        specialinvoke $r20.<com.mongodb.MongoException: void <init>(java.lang.String)>("got master/slave issue but not in master/slave mode on the client side");

        throw $r20;

     label01:
        $r2 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        entermonitor $r2;

     label02:
        $r3 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r3);

        i1 = 0;

     label03:
        $r4 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label08;

        $r6 = r0.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (com.mongodb.ServerAddress) $r7;

        $r9 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        if r8 != $r9 goto label04;

        goto label07;

     label04:
        $r10 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        if $r10 == null goto label05;

        $r12 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switching from [");

        $r14 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to [");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>($r19);

     label05:
        specialinvoke r0.<com.mongodb.DBTCPConnector: boolean _set(com.mongodb.ServerAddress)>(r8);

        exitmonitor $r2;

     label06:
        return;

     label07:
        i1 = i1 + 1;

        goto label03;

     label08:
        exitmonitor $r2;

     label09:
        goto label12;

     label10:
        $r21 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw $r21;

     label12:
        $r5 = new com.mongodb.MongoException;

        specialinvoke $r5.<com.mongodb.MongoException: void <init>(java.lang.String)>("couldn\'t find a new host to swtich too");

        throw $r5;

        catch java.lang.Throwable from label02 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private boolean _set(com.mongodb.ServerAddress)
    {
        com.mongodb.ServerAddress r1, $r2;
        com.mongodb.DBPortPool $r5;
        com.mongodb.DBTCPConnector r0;
        java.net.InetSocketAddress $r4;
        com.mongodb.DBPortPool$Holder $r3;

        r0 := @this: com.mongodb.DBTCPConnector;

        r1 := @parameter0: com.mongodb.ServerAddress;

        $r2 = r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        if $r2 != r1 goto label1;

        return 0;

     label1:
        r0.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress> = r1;

        $r3 = r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool$Holder _portHolder>;

        $r4 = virtualinvoke r1.<com.mongodb.ServerAddress: java.net.InetSocketAddress getSocketAddress()>();

        $r5 = virtualinvoke $r3.<com.mongodb.DBPortPool$Holder: com.mongodb.DBPortPool get(java.net.InetSocketAddress)>($r4);

        r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool _curPortPool> = $r5;

        return 1;
    }

    public java.lang.String debugString()
    {
        com.mongodb.ServerAddress $r3, $r6;
        com.mongodb.DBTCPConnector r1;
        java.net.InetSocketAddress $r7;
        java.util.List $r2, $r10;
        java.lang.StringBuilder $r0, $r4, $r5, $r9;
        java.lang.String $r8;

        r1 := @this: com.mongodb.DBTCPConnector;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("DBTCPConnector: ");

        $r2 = r1.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        if $r2 == null goto label1;

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paired : ");

        $r10 = r1.<com.mongodb.DBTCPConnector: java.util.List _allHosts>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        goto label2;

     label1:
        $r3 = r1.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r1.<com.mongodb.DBTCPConnector: com.mongodb.ServerAddress _curAddress>;

        $r7 = $r6.<com.mongodb.ServerAddress: java.net.InetSocketAddress _addr>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

     label2:
        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    com.mongodb.DBObject isMasterCmd()
    {
        java.util.Iterator $r5;
        com.mongodb.MongoException $r6, $r9;
        com.mongodb.Mongo $r1;
        com.mongodb.DBCollection $r3;
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DBObject $r4, r8;
        com.mongodb.DB $r2;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.Mongo _mongo>;

        $r2 = virtualinvoke $r1.<com.mongodb.Mongo: com.mongodb.DB getDB(java.lang.String)>("admin");

        $r3 = virtualinvoke $r2.<com.mongodb.DB: com.mongodb.DBCollection getCollection(java.lang.String)>("$cmd");

        $r4 = <com.mongodb.DBTCPConnector: com.mongodb.DBObject _isMaster>;

        $r5 = virtualinvoke $r3.<com.mongodb.DBCollection: java.util.Iterator __find(com.mongodb.DBObject,com.mongodb.DBObject,int,int,int)>($r4, null, 0, 1, 0);

        if $r5 == null goto label1;

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

     label1:
        $r6 = new com.mongodb.MongoException;

        specialinvoke $r6.<com.mongodb.MongoException: void <init>(java.lang.String)>("no result for ismaster query?");

        throw $r6;

     label2:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.mongodb.DBObject) $r7;

        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = new com.mongodb.MongoException;

        specialinvoke $r9.<com.mongodb.MongoException: void <init>(java.lang.String)>("what\'s going on");

        throw $r9;

     label3:
        return r8;
    }

    boolean _isMaster(com.mongodb.DBObject)
    {
        java.lang.IllegalStateException $r13;
        com.mongodb.DBObject r0;
        int $i0;
        java.lang.Boolean $r12;
        java.lang.String $r8, $r10, $r17;
        java.lang.Number $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r2;
        com.mongodb.DBTCPConnector r18;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r14, $r15, $r16;
        java.lang.Class $r7;

        r18 := @this: com.mongodb.DBTCPConnector;

        r0 := @parameter0: com.mongodb.DBObject;

        $r1 = interfaceinvoke r0.<com.mongodb.DBObject: java.lang.Object get(java.lang.String)>("ismaster");

        if $r1 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ismaster shouldn\'t be null: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label1:
        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r12 = (java.lang.Boolean) $r1;

        $z2 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label2:
        $z1 = $r1 instanceof java.lang.Number;

        if $z1 == 0 goto label5;

        $r11 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r11.<java.lang.Number: int intValue()>();

        if $i0 != 1 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid ismaster [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] : ");

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r2;
    }

    public void close()
    {
        com.mongodb.DBTCPConnector r0;
        com.mongodb.DBPortPool$Holder $r1;

        r0 := @this: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool$Holder _portHolder>;

        virtualinvoke $r1.<com.mongodb.DBPortPool$Holder: void close()>();

        return;
    }

    static com.mongodb.DBPortPool access$000(com.mongodb.DBTCPConnector)
    {
        com.mongodb.DBPortPool $r1;
        com.mongodb.DBTCPConnector r0;

        r0 := @parameter0: com.mongodb.DBTCPConnector;

        $r1 = r0.<com.mongodb.DBTCPConnector: com.mongodb.DBPortPool _curPortPool>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Integer $r15;
        com.mongodb.DBObject $r17;
        java.lang.String $r2, $r5, $r9, $r12;
        com.mongodb.BasicDBObjectBuilder $r14, $r16;
        java.util.logging.Logger $r1, $r6, $r8, $r13;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r10, $r11;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <com.mongodb.Bytes: java.util.logging.Logger LOGGER>;

        $r2 = virtualinvoke $r1.<java.util.logging.Logger: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tcp");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r5);

        <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = <com.mongodb.DBTCPConnector: java.util.logging.Logger _logger>;

        $r9 = virtualinvoke $r8.<java.util.logging.Logger: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".connect");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r12);

        <com.mongodb.DBTCPConnector: java.util.logging.Logger _createLogger> = $r13;

        $r14 = staticinvoke <com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder start()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r16 = virtualinvoke $r14.<com.mongodb.BasicDBObjectBuilder: com.mongodb.BasicDBObjectBuilder add(java.lang.String,java.lang.Object)>("ismaster", $r15);

        $r17 = virtualinvoke $r16.<com.mongodb.BasicDBObjectBuilder: com.mongodb.DBObject get()>();

        <com.mongodb.DBTCPConnector: com.mongodb.DBObject _isMaster> = $r17;

        return;
    }
}
