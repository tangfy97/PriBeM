public class org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap extends org.apache.batik.dom.AbstractElement$NamedNodeHashMap
{
    private final org.apache.batik.dom.svg.AbstractElement this$0;

    public void <init>(org.apache.batik.dom.svg.AbstractElement)
    {
        org.apache.batik.dom.svg.AbstractElement r1;
        org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        specialinvoke r0.<org.apache.batik.dom.AbstractElement$NamedNodeHashMap: void <init>(org.apache.batik.dom.AbstractElement)>(r1);

        r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0> = r1;

        return;
    }

    public void setUnspecifiedAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.AbstractAttr $r7;
        org.w3c.dom.Attr $r5;
        org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap r0;
        org.w3c.dom.Document $r2;
        java.lang.String r3, r4, r6;
        org.apache.batik.dom.svg.AbstractElement $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>(r3, r4);

        interfaceinvoke $r5.<org.w3c.dom.Attr: void setValue(java.lang.String)>(r6);

        $r7 = (org.apache.batik.dom.AbstractAttr) $r5;

        virtualinvoke $r7.<org.apache.batik.dom.AbstractAttr: void setSpecified(boolean)>(0);

        virtualinvoke r0.<org.apache.batik.dom.AbstractElement$NamedNodeHashMap: org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)>($r5);

        return;
    }

    public org.w3c.dom.Node removeNamedItemNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.Object[] $r11, $r14, $r17;
        org.apache.batik.dom.AbstractAttr r5;
        org.w3c.dom.Node $r4;
        org.w3c.dom.DOMException $r13, $r16, $r19;
        java.lang.String r2, r3, $r6, $r9, $r10;
        org.apache.batik.dom.svg.AbstractElement $r1, $r7, $r8, $r12, $r15, $r18;
        boolean $z0, $z1;
        org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $z0 = virtualinvoke $r1.<org.apache.batik.dom.AbstractNode: boolean isReadonly()>();

        if $z0 == 0 goto label1;

        $r18 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $r17 = newarray (java.lang.Object)[0];

        $r19 = virtualinvoke $r18.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.node.map", $r17);

        throw $r19;

     label1:
        if r2 != null goto label2;

        $r15 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = "";

        $r16 = virtualinvoke $r15.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(8, "attribute.missing", $r14);

        throw $r16;

     label2:
        $r4 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement$NamedNodeHashMap: org.w3c.dom.Node remove(java.lang.String,java.lang.String)>(r3, r2);

        r5 = (org.apache.batik.dom.AbstractAttr) $r4;

        if r5 != null goto label3;

        $r12 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r2;

        $r13 = virtualinvoke $r12.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(8, "attribute.missing", $r11);

        throw $r13;

     label3:
        virtualinvoke r5.<org.apache.batik.dom.AbstractAttr: void setOwnerElement(org.apache.batik.dom.AbstractElement)>(null);

        $r6 = virtualinvoke r5.<org.apache.batik.dom.AbstractNode: java.lang.String getPrefix()>();

        $r7 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $z1 = virtualinvoke $r7.<org.apache.batik.dom.svg.AbstractElement: boolean resetAttribute(java.lang.String,java.lang.String,java.lang.String)>(r3, $r6, r2);

        if $z1 != 0 goto label4;

        $r8 = r0.<org.apache.batik.dom.svg.AbstractElement$ExtendedNamedNodeHashMap: org.apache.batik.dom.svg.AbstractElement this$0>;

        $r9 = virtualinvoke r5.<org.apache.batik.dom.AbstractAttr: java.lang.String getNodeName()>();

        $r10 = virtualinvoke r5.<org.apache.batik.dom.AbstractAttr: java.lang.String getNodeValue()>();

        virtualinvoke $r8.<org.apache.batik.dom.svg.AbstractElement: void fireDOMAttrModifiedEvent(java.lang.String,org.w3c.dom.Attr,java.lang.String,java.lang.String,short)>($r9, r5, $r10, "", 3);

     label4:
        return r5;
    }
}
