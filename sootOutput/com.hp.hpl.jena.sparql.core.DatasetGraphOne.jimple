public class com.hp.hpl.jena.sparql.core.DatasetGraphOne extends com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind
{
    private final com.hp.hpl.jena.graph.Graph graph;

    protected void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph> = r1;

        return;
    }

    public boolean containsGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.hp.hpl.jena.graph.Graph getDefaultGraph()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.graph.Graph $r2;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        return $r2;

     label1:
        return null;
    }

    public java.util.Iterator listGraphNodes()
    {
        org.apache.jena.atlas.iterator.NullIterator $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        $r0 = new org.apache.jena.atlas.iterator.NullIterator;

        specialinvoke $r0.<org.apache.jena.atlas.iterator.NullIterator: void <init>()>();

        return $r0;
    }

    public long size()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        return 0L;
    }

    public void add(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r1;
        com.hp.hpl.jena.graph.Node r0, r4, r5, r6;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r2;
        com.hp.hpl.jena.graph.Graph $r7;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        r6 := @parameter3: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        $r7 = r2.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r3.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        interfaceinvoke $r7.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r3);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.add/named graph");

        throw $r1;

     label2:
        return;
    }

    public void add(com.hp.hpl.jena.sparql.core.Quad)
    {
        java.lang.UnsupportedOperationException $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r2;
        com.hp.hpl.jena.graph.Graph $r3;
        com.hp.hpl.jena.sparql.core.Quad r0;
        boolean $z0;
        com.hp.hpl.jena.graph.Triple $r4;

        r2 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.sparql.core.Quad)>(r0);

        if $z0 == 0 goto label1;

        $r3 = r2.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r4);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.add/named graph");

        throw $r1;

     label2:
        return;
    }

    public void delete(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r1;
        com.hp.hpl.jena.graph.Node r0, r4, r5, r6;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r2;
        com.hp.hpl.jena.graph.Graph $r7;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        r6 := @parameter3: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        $r7 = r2.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        $r3 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r3.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r4, r5, r6);

        interfaceinvoke $r7.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r3);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.delete/named graph");

        throw $r1;

     label2:
        return;
    }

    public void delete(com.hp.hpl.jena.sparql.core.Quad)
    {
        java.lang.UnsupportedOperationException $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r2;
        com.hp.hpl.jena.graph.Graph $r3;
        com.hp.hpl.jena.sparql.core.Quad r0;
        boolean $z0;
        com.hp.hpl.jena.graph.Triple $r4;

        r2 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.sparql.core.Quad)>(r0);

        if $z0 == 0 goto label1;

        $r3 = r2.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.graph.Graph: void delete(com.hp.hpl.jena.graph.Triple)>($r4);

        goto label2;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.delete/named graph");

        throw $r1;

     label2:
        return;
    }

    public void setDefaultGraph(com.hp.hpl.jena.graph.Graph)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Graph r2;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.setDefaultGraph");

        throw $r0;
    }

    public void addGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.graph.Graph r3;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.addGraph");

        throw $r0;
    }

    public void removeGraph(com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("DatasetGraphOne.removeGraph");

        throw $r0;
    }

    protected java.util.Iterator findInDftGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Node r2, r3, r4;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected java.util.Iterator findInSpecificNamedGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected java.util.Iterator findInAnyNamedGraphs(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Node r2, r3, r4;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected static boolean isDefaultGraph(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.core.Quad r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>($r1);

        return $z0;
    }

    protected static boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        if r0 == null goto label1;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r7;
        com.hp.hpl.jena.graph.Node r0, r2, r3, r4;
        org.apache.jena.atlas.iterator.NullIterator $r8;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r1;
        com.hp.hpl.jena.graph.Graph $r5;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isWildcard(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $r5 = r1.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4);

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetGraphOne: java.util.Iterator triples2quadsDftGraph(java.util.Iterator)>($r6);

        return $r7;

     label2:
        $r8 = new org.apache.jena.atlas.iterator.NullIterator;

        specialinvoke $r8.<org.apache.jena.atlas.iterator.NullIterator: void <init>()>();

        return $r8;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphOne r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphOne;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphOne: com.hp.hpl.jena.graph.Graph graph>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void close()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphBaseFind: void close()>();

        return;
    }
}
