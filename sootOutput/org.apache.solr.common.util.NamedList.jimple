public class org.apache.solr.common.util.NamedList extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable, java.lang.Iterable
{
    protected final java.util.List nvPairs;

    public void <init>()
    {
        org.apache.solr.common.util.NamedList r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.solr.common.util.NamedList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs> = $r1;

        return;
    }

    public void <init>(java.util.Map$Entry[])
    {
        java.util.List $r2;
        java.util.Map$Entry[] r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.util.Map$Entry[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.solr.common.util.NamedList: java.util.List nameValueMapToList(java.util.Map$Entry[])>(r1);

        r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs> = $r2;

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs> = r1;

        return;
    }

    private java.util.List nameValueMapToList(java.util.Map$Entry[])
    {
        java.util.Map$Entry r2;
        org.apache.solr.common.util.NamedList r5;
        java.util.ArrayList $r0;
        int i0, i1;
        java.lang.Object $r3, $r4;
        java.util.Map$Entry[] r1;

        r5 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.util.Map$Entry[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public int size()
    {
        java.util.List $r1;
        int $i0, $i1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 >> 1;

        return $i1;
    }

    public java.lang.String getName(int)
    {
        java.util.List $r1;
        int i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i1 = i0 << 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.Object getVal(int)
    {
        java.util.List $r1;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i1 = i0 << 1;

        $i2 = $i1 + 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        return $r2;
    }

    public void add(java.lang.String, java.lang.Object)
    {
        java.util.List $r2, $r4;
        java.lang.Object r3;
        java.lang.String r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void setName(int, java.lang.String)
    {
        java.util.List $r2;
        int i0, $i1;
        java.lang.String r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i1 = i0 << 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, r1);

        return;
    }

    public java.lang.Object setVal(int, java.lang.Object)
    {
        org.apache.solr.common.util.NamedList r0;
        java.util.List $r1, $r4;
        int i0, $i1, i2;
        java.lang.Object $r2, r3;

        r0 := @this: org.apache.solr.common.util.NamedList;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.Object;

        $i1 = i0 << 1;

        i2 = $i1 + 1;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r4 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, r3);

        return $r2;
    }

    public java.lang.Object remove(int)
    {
        java.util.List $r1, $r2;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        i0 := @parameter0: int;

        i1 = i0 << 1;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i1);

        $r2 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i1);

        return $r3;
    }

    public int indexOf(java.lang.String, int)
    {
        org.apache.solr.common.util.NamedList r0;
        int $i0, i1, i2, $i4;
        java.lang.String $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: int size()>();

        i2 = i1;

     label1:
        if i2 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i2);

        if r2 != null goto label2;

        if $r1 != null goto label3;

        return i2;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        return i2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i4 = (int) -1;

        return $i4;
    }

    public java.lang.Object get(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String,int)>(r1, 0);

        return $r2;
    }

    public java.lang.Object get(java.lang.String, int)
    {
        org.apache.solr.common.util.NamedList r0;
        int $i0, i1, i2;
        java.lang.Object $r3, $r4;
        java.lang.String $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r2 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: int size()>();

        i2 = i1;

     label1:
        if i2 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i2);

        if r2 != null goto label2;

        if $r1 != null goto label3;

        $r4 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i2);

        return $r4;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i2);

        return $r3;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return null;
    }

    public java.util.List getAll(java.lang.String)
    {
        org.apache.solr.common.util.NamedList r1;
        java.util.ArrayList $r0;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        boolean $z0;

        r1 := @this: org.apache.solr.common.util.NamedList;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i1);

        if r3 == $r2 goto label2;

        if r3 == null goto label3;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        $r4 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r0;
    }

    public java.lang.String toString()
    {
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4;
        java.lang.String $r2, $r3;
        org.apache.solr.common.util.NamedList r1;

        r1 := @this: org.apache.solr.common.util.NamedList;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i0 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r3 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.String getName(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object getVal(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public boolean addAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.apache.solr.common.util.NamedList r5;
        java.util.Map r0;
        int $i0;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String $r7;
        boolean $z0, $z1;

        r5 := @this: org.apache.solr.common.util.NamedList;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.apache.solr.common.util.NamedList: void add(java.lang.String,java.lang.Object)>($r7, $r8);

        goto label1;

     label2:
        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public boolean addAll(org.apache.solr.common.util.NamedList)
    {
        java.util.List $r2, $r3;
        int $i0;
        org.apache.solr.common.util.NamedList r0, r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: org.apache.solr.common.util.NamedList;

        $r3 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $r2 = r1.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $i0 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.solr.common.util.NamedList clone()
    {
        java.util.List $r2, $r3;
        int $i0;
        org.apache.solr.common.util.NamedList r1, $r4;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.solr.common.util.NamedList;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        virtualinvoke $r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r3);

        $r4 = new org.apache.solr.common.util.NamedList;

        specialinvoke $r4.<org.apache.solr.common.util.NamedList: void <init>(java.util.List)>($r0);

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        org.apache.solr.common.util.NamedList$1 $r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        $r1 = new org.apache.solr.common.util.NamedList$1;

        specialinvoke $r1.<org.apache.solr.common.util.NamedList$1: void <init>(org.apache.solr.common.util.NamedList,org.apache.solr.common.util.NamedList)>(r0, r0);

        return $r1;
    }

    public java.lang.Object remove(java.lang.String)
    {
        int $i0, $i2;
        java.lang.Object $r2;
        java.lang.String r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: int indexOf(java.lang.String,int)>(r1, 0);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $r2 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object remove(int)>($i0);

        return $r2;

     label1:
        return null;
    }

    public void clear()
    {
        java.util.List $r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        org.apache.solr.common.util.NamedList r0;

        r0 := @this: org.apache.solr.common.util.NamedList;

        $r1 = r0.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        java.lang.Object r0;
        org.apache.solr.common.util.NamedList r1, r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.solr.common.util.NamedList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.solr.common.util.NamedList;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.solr.common.util.NamedList) r0;

        $r4 = r2.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $r3 = r1.<org.apache.solr.common.util.NamedList: java.util.List nvPairs>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.solr.common.util.NamedList r0, $r1;

        r0 := @this: org.apache.solr.common.util.NamedList;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: org.apache.solr.common.util.NamedList clone()>();

        return $r1;
    }
}
