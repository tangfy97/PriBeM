public class ucar.nc2.dt.image.ImageFactoryRandom extends java.lang.Object
{
    private java.util.List holdList;
    private java.util.List fileList;
    private java.util.Random random;
    java.io.File nextFile;

    public void <init>(java.io.File)
    {
        ucar.nc2.dt.image.ImageFactoryRandom r0;
        java.util.Random $r1;
        long $l0;
        java.util.ArrayList $r3, $r11;
        int $i1;
        java.lang.String $r10;
        boolean $z0;
        java.io.PrintStream $r6;
        java.io.File r2;
        java.util.List $r4, $r8, $r12;
        java.lang.StringBuilder $r5, $r7, $r9;

        r0 := @this: ucar.nc2.dt.image.ImageFactoryRandom;

        r2 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Random;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<java.util.Random: void <init>(long)>($l0);

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.Random random> = $r1;

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile> = null;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1000);

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList> = $r3;

        $r4 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        specialinvoke r0.<ucar.nc2.dt.image.ImageFactoryRandom: void addToList(java.io.File,java.util.List)>(r2, $r4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nfiles= ");

        $r8 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = new java.util.ArrayList;

        $r12 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>($r12);

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList> = $r11;

        return;
    }

    private void addToList(java.io.File, java.util.List)
    {
        ucar.nc2.dt.image.ImageFactoryRandom r6;
        java.io.File r0, r2;
        java.util.List r4;
        int i0, i1;
        java.lang.String $r3, $r5;
        java.io.File[] $r1;
        boolean $z0, $z1, $z2;

        r6 := @this: ucar.nc2.dt.image.ImageFactoryRandom;

        r0 := @parameter0: java.io.File;

        r4 := @parameter1: java.util.List;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        specialinvoke r6.<ucar.nc2.dt.image.ImageFactoryRandom: void addToList(java.io.File,java.util.List)>(r2, r4);

        goto label4;

     label2:
        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>(".JPG");

        if $z2 == 0 goto label4;

     label3:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    public java.awt.image.BufferedImage getNextImage()
    {
        java.util.Random $r2;
        java.lang.Integer $r11;
        java.awt.image.BufferedImage $r14, $r26;
        java.util.List $r1, $r3, $r4, $r8, $r16, $r25;
        java.lang.StringBuilder $r18, $r20, $r22;
        java.lang.Object[] $r9;
        ucar.nc2.dt.image.ImageFactoryRandom r0;
        java.util.ArrayList $r15;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r23;
        java.io.PrintStream $r10, $r19;
        java.io.IOException $r17;
        java.io.File $r6, $r7, $r12, $r13, $r21, $r24;
        java.lang.Object $r5;

        r0 := @this: ucar.nc2.dt.image.ImageFactoryRandom;

        $r1 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r15 = new java.util.ArrayList;

        $r16 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList> = $r15;

     label1:
        $r2 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.Random random>;

        $i1 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r3 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i4 = $i2 % $i3;

        $r4 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i4);

        $r6 = (java.io.File) $r5;

        r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile> = $r6;

        $r8 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List holdList>;

        $r7 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        interfaceinvoke $r8.<java.util.List: boolean remove(java.lang.Object)>($r7);

     label2:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r9[0] = $r11;

        $r12 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        $r9[1] = $r12;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("next %d %s %n", $r9);

        $r13 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        $r14 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>($r13);

     label3:
        return $r14;

     label4:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open image ");

        $r21 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r25 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        $r24 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        interfaceinvoke $r25.<java.util.List: boolean remove(java.lang.Object)>($r24);

        $r26 = virtualinvoke r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.awt.image.BufferedImage getNextImage()>();

        return $r26;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void delete()
    {
        ucar.nc2.dt.image.ImageFactoryRandom r0;
        java.io.File $r1, $r2, $r4, $r7, $r11;
        java.util.List $r3;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: ucar.nc2.dt.image.ImageFactoryRandom;

        $r1 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.util.List fileList>;

        $r2 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r2);

        $r4 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/tmp/deleted/");

        $r7 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r10);

        $r11 = r0.<ucar.nc2.dt.image.ImageFactoryRandom: java.io.File nextFile>;

        virtualinvoke $r11.<java.io.File: boolean renameTo(java.io.File)>($r4);

        return;
    }
}
