public class org.codehaus.groovy.reflection.CachedField extends groovy.lang.MetaProperty
{
    public final java.lang.reflect.Field field;
    org.codehaus.groovy.reflection.CachedClass cachedClass;
    boolean alreadySetAccessible;

    public void <init>(org.codehaus.groovy.reflection.CachedClass, java.lang.reflect.Field)
    {
        java.lang.reflect.Field r1;
        org.codehaus.groovy.reflection.CachedClass r4;
        int $i0, $i1;
        org.codehaus.groovy.reflection.CachedField r0;
        java.lang.Class $r3, $r5;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.groovy.reflection.CachedField;

        r4 := @parameter0: org.codehaus.groovy.reflection.CachedClass;

        r1 := @parameter1: java.lang.reflect.Field;

        $r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        specialinvoke r0.<groovy.lang.MetaProperty: void <init>(java.lang.String,java.lang.Class)>($r2, $r3);

        r0.<org.codehaus.groovy.reflection.CachedField: java.lang.reflect.Field field> = r1;

        r0.<org.codehaus.groovy.reflection.CachedField: org.codehaus.groovy.reflection.CachedClass cachedClass> = r4;

        $i0 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $i1 = virtualinvoke $r5.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<org.codehaus.groovy.reflection.CachedField: boolean alreadySetAccessible> = $z2;

        return;
    }

    public boolean isStatic()
    {
        int $i0;
        org.codehaus.groovy.reflection.CachedField r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedField;

        $i0 = virtualinvoke r0.<org.codehaus.groovy.reflection.CachedField: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public int getModifiers()
    {
        int $i0;
        org.codehaus.groovy.reflection.CachedField r0;
        java.lang.reflect.Field $r1;

        r0 := @this: org.codehaus.groovy.reflection.CachedField;

        $r1 = r0.<org.codehaus.groovy.reflection.CachedField: java.lang.reflect.Field field>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        return $i0;
    }

    public java.lang.Object getProperty(java.lang.Object)
    {
        java.lang.IllegalAccessException $r5;
        groovy.lang.GroovyRuntimeException $r6;
        java.lang.reflect.Field $r2;
        org.codehaus.groovy.reflection.CachedField$1 $r4;
        java.lang.StringBuffer $r7, $r8, $r10, $r11;
        org.codehaus.groovy.reflection.CachedField r0;
        java.lang.Object r1, $r3;
        java.lang.String $r9, $r12;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.CachedField;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.codehaus.groovy.reflection.CachedField: boolean alreadySetAccessible>;

        if $z0 != 0 goto label1;

        $r4 = new org.codehaus.groovy.reflection.CachedField$1;

        specialinvoke $r4.<org.codehaus.groovy.reflection.CachedField$1: void <init>(org.codehaus.groovy.reflection.CachedField)>(r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r4);

        r0.<org.codehaus.groovy.reflection.CachedField: boolean alreadySetAccessible> = 1;

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.CachedField: java.lang.reflect.Field field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new groovy.lang.GroovyRuntimeException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot get the property \'");

        $r9 = r0.<org.codehaus.groovy.reflection.CachedField: java.lang.String name>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r5);

        throw $r6;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public void setProperty(java.lang.Object, java.lang.Object)
    {
        java.lang.StringBuffer $r10, $r11, $r13, $r14;
        org.codehaus.groovy.reflection.CachedField r1;
        java.lang.String $r12, $r15;
        boolean $z0;
        java.lang.IllegalAccessException $r8;
        groovy.lang.GroovyRuntimeException $r9;
        java.lang.reflect.Field $r2, $r6;
        org.codehaus.groovy.reflection.CachedField$2 $r7;
        java.lang.Object r0, $r4, r5;
        java.lang.Class $r3;

        r1 := @this: org.codehaus.groovy.reflection.CachedField;

        r5 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $r2 = r1.<org.codehaus.groovy.reflection.CachedField: java.lang.reflect.Field field>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r0, $r3);

        $z0 = r1.<org.codehaus.groovy.reflection.CachedField: boolean alreadySetAccessible>;

        if $z0 != 0 goto label1;

        $r7 = new org.codehaus.groovy.reflection.CachedField$2;

        specialinvoke $r7.<org.codehaus.groovy.reflection.CachedField$2: void <init>(org.codehaus.groovy.reflection.CachedField)>(r1);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r7);

        r1.<org.codehaus.groovy.reflection.CachedField: boolean alreadySetAccessible> = 1;

     label1:
        $r6 = r1.<org.codehaus.groovy.reflection.CachedField: java.lang.reflect.Field field>;

        virtualinvoke $r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r5, $r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new groovy.lang.GroovyRuntimeException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot set the property \'");

        $r12 = r1.<org.codehaus.groovy.reflection.CachedField: java.lang.String name>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r8);

        throw $r9;

     label4:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }
}
