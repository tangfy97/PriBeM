public class org.apache.http.client.utils.JdkIdn extends java.lang.Object implements org.apache.http.client.utils.Idn
{
    private final java.lang.reflect.Method toUnicode;

    public void <init>() throws java.lang.ClassNotFoundException
    {
        java.lang.IllegalStateException $r5, $r8;
        java.lang.NoSuchMethodException $r4;
        java.lang.Class[] $r2;
        org.apache.http.client.utils.JdkIdn r0;
        java.lang.Class $r1;
        java.lang.SecurityException $r7;
        java.lang.String $r6, $r9;
        java.lang.reflect.Method $r3;

        r0 := @this: org.apache.http.client.utils.JdkIdn;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.IDN");

     label1:
        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/String;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("toUnicode", $r2);

        r0.<org.apache.http.client.utils.JdkIdn: java.lang.reflect.Method toUnicode> = $r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r7.<java.lang.SecurityException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r7);

        throw $r8;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r4.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r4);

        throw $r5;

     label5:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
    }

    public java.lang.String toUnicode(java.lang.String)
    {
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r11;
        java.lang.IllegalAccessException $r10;
        java.lang.Object[] $r1;
        java.lang.RuntimeException $r8;
        java.lang.reflect.InvocationTargetException $r6;
        org.apache.http.client.utils.JdkIdn r0;
        java.lang.Object $r4;
        java.lang.String r2, $r5, $r9, $r12;
        java.lang.reflect.Method $r3;

        r0 := @this: org.apache.http.client.utils.JdkIdn;

        r2 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<org.apache.http.client.utils.JdkIdn: java.lang.reflect.Method toUnicode>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

        $r5 = (java.lang.String) $r4;

     label2:
        return $r5;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r10.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r10);

        throw $r11;

     label4:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $r8 = new java.lang.RuntimeException;

        $r9 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r7);

        throw $r8;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }
}
