public class com.jhlabs.image.DilateFilter extends com.jhlabs.image.BinaryFilter
{
    public int threshold;

    public void <init>()
    {
        com.jhlabs.image.DilateFilter r0;

        r0 := @this: com.jhlabs.image.DilateFilter;

        specialinvoke r0.<com.jhlabs.image.BinaryFilter: void <init>()>();

        r0.<com.jhlabs.image.DilateFilter: int threshold> = 2;

        return;
    }

    public void setThreshold(int)
    {
        int i0;
        com.jhlabs.image.DilateFilter r0;

        r0 := @this: com.jhlabs.image.DilateFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.DilateFilter: int threshold> = i0;

        return;
    }

    public int getThreshold()
    {
        int $i0;
        com.jhlabs.image.DilateFilter r0;

        r0 := @this: com.jhlabs.image.DilateFilter;

        $i0 = r0.<com.jhlabs.image.DilateFilter: int threshold>;

        return $i0;
    }

    protected int[] filterPixels(int, int, int[], java.awt.Rectangle)
    {
        com.jhlabs.math.BinaryFunction $r1, $r4;
        int[] r6, r7, r8;
        boolean $z0, $z1;
        com.jhlabs.image.DilateFilter r0;
        float $f0, $f1, $f2;
        java.awt.Rectangle r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, $i23, $i25;
        com.jhlabs.image.Colormap $r2, $r3;

        r0 := @this: com.jhlabs.image.DilateFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: int[];

        r5 := @parameter3: java.awt.Rectangle;

        $i2 = i0 * i1;

        r7 = newarray (int)[$i2];

        i13 = 0;

     label01:
        $i3 = r0.<com.jhlabs.image.BinaryFilter: int iterations>;

        if i13 >= $i3 goto label15;

        i14 = 0;

        if i13 <= 0 goto label02;

        r8 = r6;

        r6 = r7;

        r7 = r8;

     label02:
        i15 = 0;

     label03:
        if i15 >= i1 goto label14;

        i16 = 0;

     label04:
        if i16 >= i0 goto label13;

        $i4 = i15 * i0;

        $i5 = $i4 + i16;

        i17 = r6[$i5];

        $r1 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.math.BinaryFunction blackFunction>;

        $z0 = interfaceinvoke $r1.<com.jhlabs.math.BinaryFunction: boolean isBlack(int)>(i17);

        if $z0 != 0 goto label12;

        i18 = 0;

        $i23 = (int) -1;

        i19 = $i23;

     label05:
        if i19 > 1 goto label10;

        i8 = i15 + i19;

        if 0 > i8 goto label09;

        if i8 >= i1 goto label09;

        i9 = i8 * i0;

        $i25 = (int) -1;

        i20 = $i25;

     label06:
        if i20 > 1 goto label09;

        i10 = i16 + i20;

        if i19 != 0 goto label07;

        if i20 == 0 goto label08;

     label07:
        if 0 > i10 goto label08;

        if i10 >= i0 goto label08;

        $i11 = i9 + i10;

        i12 = r6[$i11];

        $r4 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.math.BinaryFunction blackFunction>;

        $z1 = interfaceinvoke $r4.<com.jhlabs.math.BinaryFunction: boolean isBlack(int)>(i12);

        if $z1 == 0 goto label08;

        i18 = i18 + 1;

     label08:
        i20 = i20 + 1;

        goto label06;

     label09:
        i19 = i19 + 1;

        goto label05;

     label10:
        $i6 = r0.<com.jhlabs.image.DilateFilter: int threshold>;

        if i18 < $i6 goto label12;

        $r2 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.image.Colormap colormap>;

        if $r2 == null goto label11;

        $r3 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.image.Colormap colormap>;

        $f1 = (float) i13;

        $i7 = r0.<com.jhlabs.image.BinaryFilter: int iterations>;

        $f0 = (float) $i7;

        $f2 = $f1 / $f0;

        i17 = interfaceinvoke $r3.<com.jhlabs.image.Colormap: int getColor(float)>($f2);

        goto label12;

     label11:
        i17 = r0.<com.jhlabs.image.BinaryFilter: int newColor>;

     label12:
        $i21 = i14;

        i14 = i14 + 1;

        r7[$i21] = i17;

        i16 = i16 + 1;

        goto label04;

     label13:
        i15 = i15 + 1;

        goto label03;

     label14:
        i13 = i13 + 1;

        goto label01;

     label15:
        return r7;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.DilateFilter r0;

        r0 := @this: com.jhlabs.image.DilateFilter;

        return "Binary/Dilate...";
    }
}
