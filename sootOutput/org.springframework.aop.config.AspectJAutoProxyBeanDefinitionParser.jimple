class org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser extends java.lang.Object implements org.springframework.beans.factory.xml.BeanDefinitionParser
{

    void <init>()
    {
        org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser r0;

        r0 := @this: org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.w3c.dom.Element r1;
        org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser r2;
        org.springframework.beans.factory.xml.ParserContext r0;

        r2 := @this: org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)>(r0, r1);

        specialinvoke r2.<org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser: void extendBeanDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r0);

        return null;
    }

    private void extendBeanDefinition(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.w3c.dom.Element r3;
        org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser r4;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.config.BeanDefinition $r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;
        boolean $z0;

        r4 := @this: org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r2 = interfaceinvoke $r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>("org.springframework.aop.config.internalAutoProxyCreator");

        $z0 = interfaceinvoke r3.<org.w3c.dom.Element: boolean hasChildNodes()>();

        if $z0 == 0 goto label1;

        specialinvoke r4.<org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser: void addIncludePatterns(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.config.BeanDefinition)>(r3, r0, $r2);

     label1:
        return;
    }

    private void addIncludePatterns(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser r12;
        org.springframework.beans.factory.support.ManagedList $r0;
        org.w3c.dom.Node $r3;
        org.springframework.beans.factory.xml.ParserContext r7;
        int i0, $i1;
        org.springframework.beans.factory.config.BeanDefinition r10;
        java.lang.String $r6;
        boolean $z0, $z1;
        org.w3c.dom.NodeList $r2;
        org.springframework.beans.MutablePropertyValues $r11;
        org.w3c.dom.Element r1, r4;
        org.springframework.beans.factory.config.TypedStringValue $r5;
        java.lang.Object $r8, $r9;

        r12 := @this: org.springframework.aop.config.AspectJAutoProxyBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r10 := @parameter2: org.springframework.beans.factory.config.BeanDefinition;

        $r0 = new org.springframework.beans.factory.support.ManagedList;

        specialinvoke $r0.<org.springframework.beans.factory.support.ManagedList: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = 0;

        goto label3;

     label1:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $z0 = $r3 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        r4 = (org.w3c.dom.Element) $r3;

        $r5 = new org.springframework.beans.factory.config.TypedStringValue;

        $r6 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        specialinvoke $r5.<org.springframework.beans.factory.config.TypedStringValue: void <init>(java.lang.String)>($r6);

        $r8 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r4);

        virtualinvoke $r5.<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)>($r8);

        virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedList: boolean add(java.lang.Object)>($r5);

     label2:
        i0 = i0 + 1;

     label3:
        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i0 < $i1 goto label1;

        $z1 = virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedList: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r9 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        virtualinvoke $r0.<org.springframework.beans.factory.support.ManagedList: void setSource(java.lang.Object)>($r9);

        $r11 = interfaceinvoke r10.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r11.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("includePatterns", $r0);

     label4:
        return;
    }
}
