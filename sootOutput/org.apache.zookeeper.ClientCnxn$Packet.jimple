class org.apache.zookeeper.ClientCnxn$Packet extends java.lang.Object
{
    org.apache.zookeeper.proto.RequestHeader requestHeader;
    org.apache.zookeeper.proto.ReplyHeader replyHeader;
    org.apache.jute.Record request;
    org.apache.jute.Record response;
    java.nio.ByteBuffer bb;
    java.lang.String clientPath;
    java.lang.String serverPath;
    boolean finished;
    org.apache.zookeeper.AsyncCallback cb;
    java.lang.Object ctx;
    org.apache.zookeeper.ZooKeeper$WatchRegistration watchRegistration;
    public boolean readOnly;

    void <init>(org.apache.zookeeper.proto.RequestHeader, org.apache.zookeeper.proto.ReplyHeader, org.apache.jute.Record, org.apache.jute.Record, org.apache.zookeeper.ZooKeeper$WatchRegistration)
    {
        org.apache.zookeeper.proto.RequestHeader r1;
        org.apache.zookeeper.ClientCnxn$Packet r0;
        org.apache.zookeeper.ZooKeeper$WatchRegistration r5;
        org.apache.jute.Record r3, r4;
        org.apache.zookeeper.proto.ReplyHeader r2;

        r0 := @this: org.apache.zookeeper.ClientCnxn$Packet;

        r1 := @parameter0: org.apache.zookeeper.proto.RequestHeader;

        r2 := @parameter1: org.apache.zookeeper.proto.ReplyHeader;

        r3 := @parameter2: org.apache.jute.Record;

        r4 := @parameter3: org.apache.jute.Record;

        r5 := @parameter4: org.apache.zookeeper.ZooKeeper$WatchRegistration;

        specialinvoke r0.<org.apache.zookeeper.ClientCnxn$Packet: void <init>(org.apache.zookeeper.proto.RequestHeader,org.apache.zookeeper.proto.ReplyHeader,org.apache.jute.Record,org.apache.jute.Record,org.apache.zookeeper.ZooKeeper$WatchRegistration,boolean)>(r1, r2, r3, r4, r5, 0);

        return;
    }

    void <init>(org.apache.zookeeper.proto.RequestHeader, org.apache.zookeeper.proto.ReplyHeader, org.apache.jute.Record, org.apache.jute.Record, org.apache.zookeeper.ZooKeeper$WatchRegistration, boolean)
    {
        org.apache.zookeeper.proto.RequestHeader r1;
        org.apache.zookeeper.ClientCnxn$Packet r0;
        org.apache.zookeeper.ZooKeeper$WatchRegistration r5;
        org.apache.jute.Record r3, r4;
        org.apache.zookeeper.proto.ReplyHeader r2;
        boolean z0;

        r0 := @this: org.apache.zookeeper.ClientCnxn$Packet;

        r1 := @parameter0: org.apache.zookeeper.proto.RequestHeader;

        r2 := @parameter1: org.apache.zookeeper.proto.ReplyHeader;

        r3 := @parameter2: org.apache.jute.Record;

        r4 := @parameter3: org.apache.jute.Record;

        r5 := @parameter4: org.apache.zookeeper.ZooKeeper$WatchRegistration;

        z0 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader> = r1;

        r0.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.ReplyHeader replyHeader> = r2;

        r0.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request> = r3;

        r0.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record response> = r4;

        r0.<org.apache.zookeeper.ClientCnxn$Packet: boolean readOnly> = z0;

        r0.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.ZooKeeper$WatchRegistration watchRegistration> = r5;

        return;
    }

    public void createBB()
    {
        org.apache.jute.BinaryOutputArchive $r1;
        byte[] $r11;
        java.io.ByteArrayOutputStream $r16;
        java.nio.ByteBuffer $r12, $r13, $r14, $r15;
        org.apache.zookeeper.ClientCnxn$Packet r2;
        int $i0, $i1, $i3;
        boolean $z0, $z1;
        org.slf4j.Logger $r10;
        org.apache.jute.Record $r4, $r5, $r6, $r7;
        java.io.IOException $r9;
        org.apache.zookeeper.proto.RequestHeader $r3, $r8;

        r2 := @this: org.apache.zookeeper.ClientCnxn$Packet;

     label1:
        $r16 = new java.io.ByteArrayOutputStream;

        specialinvoke $r16.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r16);

        $i3 = (int) -1;

        virtualinvoke $r1.<org.apache.jute.BinaryOutputArchive: void writeInt(int,java.lang.String)>($i3, "len");

        $r3 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        if $r3 == null goto label2;

        $r8 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        virtualinvoke $r8.<org.apache.zookeeper.proto.RequestHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r1, "header");

     label2:
        $r4 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request>;

        $z0 = $r4 instanceof org.apache.zookeeper.proto.ConnectRequest;

        if $z0 == 0 goto label3;

        $r7 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request>;

        interfaceinvoke $r7.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r1, "connect");

        $z1 = r2.<org.apache.zookeeper.ClientCnxn$Packet: boolean readOnly>;

        virtualinvoke $r1.<org.apache.jute.BinaryOutputArchive: void writeBool(boolean,java.lang.String)>($z1, "readOnly");

        goto label4;

     label3:
        $r5 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request>;

        if $r5 == null goto label4;

        $r6 = r2.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request>;

        interfaceinvoke $r6.<org.apache.jute.Record: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r1, "request");

     label4:
        virtualinvoke $r16.<java.io.ByteArrayOutputStream: void close()>();

        $r11 = virtualinvoke $r16.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r11);

        r2.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb> = $r12;

        $r13 = r2.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        $r14 = r2.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        $i0 = virtualinvoke $r14.<java.nio.ByteBuffer: int capacity()>();

        $i1 = $i0 - 4;

        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        $r15 = r2.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        virtualinvoke $r15.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        $r10 = staticinvoke <org.apache.zookeeper.ClientCnxn: org.slf4j.Logger access$100()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring unexpected exception", $r9);

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public java.lang.String toString()
    {
        boolean $z0;
        org.apache.jute.Record $r28, $r33;
        org.apache.zookeeper.proto.RequestHeader $r18;
        java.lang.StringBuilder $r0, $r1, $r2, $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r26, $r27, $r29, $r31, $r32, $r34;
        org.apache.zookeeper.proto.ReplyHeader $r23;
        org.apache.zookeeper.ClientCnxn$Packet r3;
        java.lang.String $r4, $r6, $r9, $r11, $r15, $r20, $r25, $r30, $r35, $r36, $r37;

        r3 := @this: org.apache.zookeeper.ClientCnxn$Packet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clientPath:");

        $r4 = r3.<org.apache.zookeeper.ClientCnxn$Packet: java.lang.String clientPath>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" serverPath:");

        $r9 = r3.<org.apache.zookeeper.ClientCnxn$Packet: java.lang.String serverPath>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" finished:");

        $z0 = r3.<org.apache.zookeeper.ClientCnxn$Packet: boolean finished>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" header:: ");

        $r18 = r3.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" replyHeader:: ");

        $r23 = r3.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.ReplyHeader replyHeader>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request:: ");

        $r28 = r3.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record request>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" response:: ");

        $r33 = r3.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.jute.Record response>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r36 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r*\n+", " ");

        return $r37;
    }
}
