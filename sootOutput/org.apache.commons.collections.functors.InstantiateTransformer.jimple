public class org.apache.commons.collections.functors.InstantiateTransformer extends java.lang.Object implements org.apache.commons.collections.Transformer, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.apache.commons.collections.Transformer NO_ARG_INSTANCE;
    private final java.lang.Class[] iParamTypes;
    private final java.lang.Object[] iArgs;

    public static org.apache.commons.collections.Transformer getInstance(java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] $r4, r7, r10;
        org.apache.commons.collections.Transformer $r0;
        java.lang.Class[] $r2, r6, r9;
        java.lang.IllegalArgumentException $r8;
        org.apache.commons.collections.functors.InstantiateTransformer $r5;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r3;

        r6 := @parameter0: java.lang.Class[];

        r7 := @parameter1: java.lang.Object[];

        if r6 != null goto label1;

        if r7 != null goto label3;

     label1:
        if r6 == null goto label2;

        if r7 == null goto label3;

     label2:
        if r6 == null goto label4;

        if r7 == null goto label4;

        $i2 = lengthof r6;

        $i1 = lengthof r7;

        if $i2 == $i1 goto label4;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter types must match the arguments");

        throw $r8;

     label4:
        if r6 == null goto label5;

        $i0 = lengthof r6;

        if $i0 != 0 goto label6;

     label5:
        $r0 = <org.apache.commons.collections.functors.InstantiateTransformer: org.apache.commons.collections.Transformer NO_ARG_INSTANCE>;

        return $r0;

     label6:
        $r1 = virtualinvoke r6.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.Class[]) $r1;

        r9 = (java.lang.Class[]) $r2;

        $r3 = virtualinvoke r7.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.Object[]) $r3;

        r10 = (java.lang.Object[]) $r4;

        $r5 = new org.apache.commons.collections.functors.InstantiateTransformer;

        specialinvoke $r5.<org.apache.commons.collections.functors.InstantiateTransformer: void <init>(java.lang.Class[],java.lang.Object[])>(r9, r10);

        return $r5;
    }

    private void <init>()
    {
        org.apache.commons.collections.functors.InstantiateTransformer r0;

        r0 := @this: org.apache.commons.collections.functors.InstantiateTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Class[] iParamTypes> = null;

        r0.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Object[] iArgs> = null;

        return;
    }

    public void <init>(java.lang.Class[], java.lang.Object[])
    {
        java.lang.Class[] r1;
        org.apache.commons.collections.functors.InstantiateTransformer r0;
        java.lang.Object[] r2;

        r0 := @this: org.apache.commons.collections.functors.InstantiateTransformer;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Class[] iParamTypes> = r1;

        r0.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Object[] iArgs> = r2;

        return;
    }

    public java.lang.Object transform(java.lang.Object)
    {
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r19;
        java.lang.reflect.Constructor $r4;
        org.apache.commons.collections.FunctorException $r7, $r14, $r16, $r18, $r20;
        java.lang.StringBuffer $r8, $r9, $r11;
        java.lang.InstantiationException $r17;
        java.lang.String $r12, $r21;
        boolean $z0;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r2;
        java.lang.reflect.InvocationTargetException $r13;
        org.apache.commons.collections.functors.InstantiateTransformer r1;
        java.lang.Object r0, $r6;
        java.lang.Class $r3, $r10;

        r1 := @this: org.apache.commons.collections.functors.InstantiateTransformer;

        r0 := @parameter0: java.lang.Object;

     label1:
        $z0 = r0 instanceof java.lang.Class;

        if $z0 != 0 goto label4;

        $r7 = new org.apache.commons.collections.FunctorException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InstantiateTransformer: Input object was not an instanceof Class, it was a ");

        if r0 != null goto label2;

        $r21 = "null object";

        goto label3;

     label2:
        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

     label3:
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label4:
        $r3 = (java.lang.Class) r0;

        $r2 = r1.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Class[] iParamTypes>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r5 = r1.<org.apache.commons.collections.functors.InstantiateTransformer: java.lang.Object[] iArgs>;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label5:
        return $r6;

     label6:
        $r19 := @caughtexception;

        $r20 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r20.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String)>("InstantiateTransformer: The constructor must exist and be public ");

        throw $r20;

     label7:
        $r17 := @caughtexception;

        $r18 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r18.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: InstantiationException", $r17);

        throw $r18;

     label8:
        $r15 := @caughtexception;

        $r16 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r16.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: Constructor must be public", $r15);

        throw $r16;

     label9:
        $r13 := @caughtexception;

        $r14 = new org.apache.commons.collections.FunctorException;

        specialinvoke $r14.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>("InstantiateTransformer: Constructor threw an exception", $r13);

        throw $r14;

        catch java.lang.NoSuchMethodException from label1 to label5 with label6;
        catch java.lang.InstantiationException from label1 to label5 with label7;
        catch java.lang.IllegalAccessException from label1 to label5 with label8;
        catch java.lang.reflect.InvocationTargetException from label1 to label5 with label9;
    }

    static void <clinit>()
    {
        org.apache.commons.collections.functors.InstantiateTransformer $r0;

        <org.apache.commons.collections.functors.InstantiateTransformer: long serialVersionUID> = 3786388740793356347L;

        $r0 = new org.apache.commons.collections.functors.InstantiateTransformer;

        specialinvoke $r0.<org.apache.commons.collections.functors.InstantiateTransformer: void <init>()>();

        <org.apache.commons.collections.functors.InstantiateTransformer: org.apache.commons.collections.Transformer NO_ARG_INSTANCE> = $r0;

        return;
    }
}
