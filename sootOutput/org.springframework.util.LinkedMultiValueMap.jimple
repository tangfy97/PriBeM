public class org.springframework.util.LinkedMultiValueMap extends java.lang.Object implements org.springframework.util.MultiValueMap, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.util.Map targetMap;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap> = $r1;

        return;
    }

    public void <init>(int)
    {
        java.util.LinkedHashMap $r1;
        int i0;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.LinkedHashMap $r1;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map r2;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r2 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r2);

        r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap> = $r1;

        return;
    }

    public void add(java.lang.Object, java.lang.Object)
    {
        java.util.List r7;
        java.util.Map $r2, $r6;
        java.lang.Object r1, $r3, r4;
        java.util.LinkedList $r5;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.List) $r3;

        if r7 != null goto label1;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r7 = $r5;

        $r6 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        return;
    }

    public java.lang.Object getFirst(java.lang.Object)
    {
        java.util.List r4;
        java.util.Map $r2;
        java.lang.Object r1, $r3, $r5;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public void set(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r4;
        java.lang.Object r1, r3;
        java.util.LinkedList $r0;
        org.springframework.util.LinkedMultiValueMap r2;

        r2 := @this: org.springframework.util.LinkedMultiValueMap;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r2.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r0);

        return;
    }

    public void setAll(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r6, $r7;
        org.springframework.util.LinkedMultiValueMap r5;
        boolean $z0;

        r5 := @this: org.springframework.util.LinkedMultiValueMap;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r5.<org.springframework.util.LinkedMultiValueMap: void set(java.lang.Object,java.lang.Object)>($r6, $r7);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.util.Map toSingleValueMap()
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.LinkedHashMap $r0;
        java.util.List $r10;
        java.util.Map $r2, $r3;
        int $i0;
        java.lang.Object $r6, $r8, $r9, $r11;
        org.springframework.util.LinkedMultiValueMap r1;
        boolean $z0;

        r1 := @this: org.springframework.util.LinkedMultiValueMap;

        $r0 = new java.util.LinkedHashMap;

        $r2 = r1.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r3 = r1.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r9;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r0.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r0;
    }

    public int size()
    {
        int $i0;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.springframework.util.LinkedMultiValueMap r0;
        boolean $z0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.springframework.util.LinkedMultiValueMap r0;
        boolean $z0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.List get(java.lang.Object)
    {
        java.util.List $r4;
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public java.util.List put(java.lang.Object, java.util.List)
    {
        java.util.List r2, $r5;
        java.util.Map $r3;
        java.lang.Object r1, $r4;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (java.util.List) $r4;

        return $r5;
    }

    public java.util.List remove(java.lang.Object)
    {
        java.util.List $r4;
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map r1, $r2;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public void clear()
    {
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Collection values()
    {
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.springframework.util.LinkedMultiValueMap r0;
        boolean $z0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.springframework.util.LinkedMultiValueMap r0;
        java.util.Map $r1;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        $r1 = r0.<org.springframework.util.LinkedMultiValueMap: java.util.Map targetMap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r1;
        java.util.List $r2;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.util.LinkedMultiValueMap: java.util.List get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object r1;
        java.util.List $r2;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.util.LinkedMultiValueMap: java.util.List remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.List $r3, $r5;
        java.lang.Object r1, r2, $r4;
        org.springframework.util.LinkedMultiValueMap r0;

        r0 := @this: org.springframework.util.LinkedMultiValueMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Object) r1;

        $r3 = (java.util.List) r2;

        $r5 = virtualinvoke r0.<org.springframework.util.LinkedMultiValueMap: java.util.List put(java.lang.Object,java.util.List)>($r4, $r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <org.springframework.util.LinkedMultiValueMap: long serialVersionUID> = 3801124242820219131L;

        return;
    }
}
