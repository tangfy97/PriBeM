class ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry extends java.lang.Object
{
    long nameOffset;
    long objectHeaderAddress;
    long btreeAddress;
    long nameHeapAddress;
    int cacheType;
    int linkOffset;
    long posData;
    boolean isSymbolicLink;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, long) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r8, $r9, $r11, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r32, $r33, $r34, $r37, $r38, $r39, $r42, $r43, $r45;
        long l0, $l1, $l2, $l4, $l6, $l7, $l8, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l19;
        java.lang.String $r12, $r18, $r25, $r30, $r35, $r40, $r46;
        ucar.unidata.io.RandomAccessFile $r2, $r3, $r4, $r5, $r10, $r13, $r44;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r0;
        int $i3, $i5, $i9, $i10, $i18, $i20;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r6;
        java.io.PrintStream $r7, $r14, $r19, $r26, $r31, $r36, $r41;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        l0 := @parameter1: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: boolean isSymbolicLink> = 0;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l0);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z0 == 0 goto label1;

        $r41 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--> readSymbolTableEntry position=");

        $r44 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l19 = virtualinvoke $r44.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l19);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46);

     label1:
        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameOffset> = $l1;

        $l2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long objectHeaderAddress> = $l2;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i3 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType> = $i3;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z1 == 0 goto label2;

        $r26 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nameOffset=");

        $l16 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameOffset>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void print(java.lang.String)>($r30);

        $r31 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" objectHeaderAddress=");

        $l17 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long objectHeaderAddress>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void print(java.lang.String)>($r35);

        $r36 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cacheType=");

        $i18 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label2:
        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l4 = virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long posData> = $l4;

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z2 == 0 goto label3;

        $l15 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long posData>;

        virtualinvoke r1.<ucar.nc2.iosp.hdf5.H5header: void dump(java.lang.String,long,int,boolean)>("Group Entry scratch pad", $l15, 16, 0);

     label3:
        $i5 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType>;

        if $i5 != 1 goto label4;

        $l11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long btreeAddress> = $l11;

        $l12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameHeapAddress> = $l12;

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z4 == 0 goto label4;

        $r19 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("btreeAddress=");

        $l13 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long btreeAddress>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nameHeadAddress=");

        $l14 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameHeapAddress>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r25);

     label4:
        $i20 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType>;

        if $i20 != 2 goto label6;

        $r13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i9 = virtualinvoke $r13.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int linkOffset> = $i9;

        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z3 == 0 goto label5;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING Symbolic Link linkOffset=");

        $i10 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int linkOffset>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label5:
        r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: boolean isSymbolicLink> = 1;

     label6:
        $z5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5400()>();

        if $z5 == 0 goto label7;

        $r7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<-- end readSymbolTableEntry position=");

        $r10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l8 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label7:
        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l6 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long posData>;

        $l7 = $l6 + 16L;

        virtualinvoke $r6.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void add(java.lang.String,long,long)>("SymbolTableEntry", l0, $l7);

        return;
    }

    public int getSize()
    {
        byte $b0;
        ucar.nc2.iosp.hdf5.H5header $r1;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: ucar.nc2.iosp.hdf5.H5header this$0>;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5500(ucar.nc2.iosp.hdf5.H5header)>($r1);

        if $z0 == 0 goto label1;

        $b0 = 40;

        goto label2;

     label1:
        $b0 = 32;

     label2:
        return $b0;
    }

    public long getObjectAddress()
    {
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r0;
        long $l0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $l0 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long objectHeaderAddress>;

        return $l0;
    }

    public long getNameOffset()
    {
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r0;
        long $l0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $l0 = r0.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameOffset>;

        return $l0;
    }

    public java.lang.String toString()
    {
        long $l0, $l1, $l2, $l3, $l6;
        int $i4, $i5;
        java.lang.String $r19;
        boolean $z0;
        ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SymbolTableEntry{nameOffset=");

        $l0 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameOffset>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", objectHeaderAddress=");

        $l1 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long objectHeaderAddress>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", btreeAddress=");

        $l2 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long btreeAddress>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nameHeapAddress=");

        $l3 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long nameHeapAddress>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cacheType=");

        $i4 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int cacheType>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", linkOffset=");

        $i5 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: int linkOffset>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", posData=");

        $l6 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: long posData>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isSymbolicLink=");

        $z0 = r2.<ucar.nc2.iosp.hdf5.H5header$SymbolTableEntry: boolean isSymbolicLink>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }
}
