public class org.codehaus.groovy.runtime.ScriptTestAdapter extends java.lang.Object implements junit.framework.Test
{
    private java.lang.Class scriptClass;
    private java.lang.String[] arguments;

    public void <init>(java.lang.Class, java.lang.String[])
    {
        java.lang.Class r1;
        java.lang.String[] r2;
        org.codehaus.groovy.runtime.ScriptTestAdapter r0;

        r0 := @this: org.codehaus.groovy.runtime.ScriptTestAdapter;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.runtime.ScriptTestAdapter: java.lang.Class scriptClass> = r1;

        r0.<org.codehaus.groovy.runtime.ScriptTestAdapter: java.lang.String[] arguments> = r2;

        return;
    }

    public int countTestCases()
    {
        org.codehaus.groovy.runtime.ScriptTestAdapter r0;

        r0 := @this: org.codehaus.groovy.runtime.ScriptTestAdapter;

        return 1;
    }

    public void run(junit.framework.TestResult)
    {
        org.codehaus.groovy.runtime.ScriptTestAdapter r1;
        junit.framework.TestResult r0;
        java.lang.String[] $r2;
        java.lang.Class $r3;
        java.lang.Exception $r4;

        r1 := @this: org.codehaus.groovy.runtime.ScriptTestAdapter;

        r0 := @parameter0: junit.framework.TestResult;

     label1:
        virtualinvoke r0.<junit.framework.TestResult: void startTest(junit.framework.Test)>(r1);

        $r3 = r1.<org.codehaus.groovy.runtime.ScriptTestAdapter: java.lang.Class scriptClass>;

        $r2 = r1.<org.codehaus.groovy.runtime.ScriptTestAdapter: java.lang.String[] arguments>;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object runScript(java.lang.Class,java.lang.String[])>($r3, $r2);

        virtualinvoke r0.<junit.framework.TestResult: void endTest(junit.framework.Test)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>(r1, $r4);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.runtime.ScriptTestAdapter r2;
        java.lang.StringBuffer $r0, $r1, $r5;
        java.lang.Class $r3;
        java.lang.String $r4, $r6;

        r2 := @this: org.codehaus.groovy.runtime.ScriptTestAdapter;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TestCase for script: ");

        $r3 = r2.<org.codehaus.groovy.runtime.ScriptTestAdapter: java.lang.Class scriptClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
