public final class minsolver.ucore.MinNCEStrategy extends java.lang.Object implements kodkod.engine.satlab.ReductionStrategy
{
    private final kodkod.util.ints.IntCollection varsToTry;
    private final kodkod.util.ints.IntSet coreVars;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lminsolver/ucore/MinNCEStrategy;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <minsolver.ucore.MinNCEStrategy: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>(minsolver.fol2sat.MinTranslationLog)
    {
        kodkod.util.ints.IntTreeSet $r3;
        kodkod.util.ints.IntSet $r2, $r5;
        minsolver.ucore.MinNCEStrategy r0;
        minsolver.fol2sat.MinTranslationLog r1;
        kodkod.util.ints.IntCollection $r4;

        r0 := @this: minsolver.ucore.MinNCEStrategy;

        r1 := @parameter0: minsolver.fol2sat.MinTranslationLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <minsolver.ucore.MinStrategyUtils: kodkod.util.ints.IntSet rootVars(minsolver.fol2sat.MinTranslationLog)>(r1);

        r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntCollection varsToTry> = $r2;

        $r3 = new kodkod.util.ints.IntTreeSet;

        specialinvoke $r3.<kodkod.util.ints.IntTreeSet: void <init>()>();

        r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntSet coreVars> = $r3;

        $r5 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntSet coreVars>;

        $r4 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntCollection varsToTry>;

        interfaceinvoke $r5.<kodkod.util.ints.IntSet: boolean addAll(kodkod.util.ints.IntCollection)>($r4);

        return;
    }

    public kodkod.util.ints.IntSet next(kodkod.engine.satlab.ResolutionTrace)
    {
        java.lang.AssertionError $r11;
        kodkod.util.ints.IntIterator $r6;
        kodkod.util.ints.IntCollection $r1, $r5, $r7;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        kodkod.engine.satlab.ResolutionTrace r2;
        kodkod.util.ints.IntSet $r3, $r4, $r8, $r9, $r10, $r12;
        minsolver.ucore.MinNCEStrategy r0;

        r0 := @this: minsolver.ucore.MinNCEStrategy;

        r2 := @parameter0: kodkod.engine.satlab.ResolutionTrace;

        $r1 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntCollection varsToTry>;

        $z0 = interfaceinvoke $r1.<kodkod.util.ints.IntCollection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r12 = <kodkod.util.ints.Ints: kodkod.util.ints.IntSet EMPTY_SET>;

        return $r12;

     label1:
        $r3 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntSet coreVars>;

        $r4 = staticinvoke <minsolver.ucore.MinStrategyUtils: kodkod.util.ints.IntSet coreTailUnits(kodkod.engine.satlab.ResolutionTrace)>(r2);

        interfaceinvoke $r3.<kodkod.util.ints.IntSet: boolean addAll(kodkod.util.ints.IntCollection)>($r4);

        $r5 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntCollection varsToTry>;

        $r6 = interfaceinvoke $r5.<kodkod.util.ints.IntCollection: kodkod.util.ints.IntIterator iterator()>();

        $i0 = interfaceinvoke $r6.<kodkod.util.ints.IntIterator: int next()>();

        $r7 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntCollection varsToTry>;

        interfaceinvoke $r7.<kodkod.util.ints.IntCollection: boolean remove(int)>($i0);

        $r8 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntSet coreVars>;

        interfaceinvoke $r8.<kodkod.util.ints.IntSet: boolean remove(int)>($i0);

        $r9 = r0.<minsolver.ucore.MinNCEStrategy: kodkod.util.ints.IntSet coreVars>;

        $r10 = staticinvoke <minsolver.ucore.MinStrategyUtils: kodkod.util.ints.IntSet clausesFor(kodkod.engine.satlab.ResolutionTrace,kodkod.util.ints.IntSet)>(r2, $r9);

        $z1 = <minsolver.ucore.MinNCEStrategy: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $z2 = interfaceinvoke $r10.<kodkod.util.ints.IntSet: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $i1 = interfaceinvoke r2.<kodkod.engine.satlab.ResolutionTrace: int size()>();

        $i2 = $i1 - 1;

        $z3 = interfaceinvoke $r10.<kodkod.util.ints.IntSet: boolean contains(int)>($i2);

        if $z3 == 0 goto label3;

     label2:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label3:
        return $r10;
    }
}
