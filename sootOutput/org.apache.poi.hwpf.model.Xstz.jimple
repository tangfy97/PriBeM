public class org.apache.poi.hwpf.model.Xstz extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger log;
    private final short _chTerm;
    private org.apache.poi.hwpf.model.Xst _xst;

    public void <init>()
    {
        org.apache.poi.hwpf.model.Xstz r0;
        org.apache.poi.hwpf.model.Xst $r1;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.Xstz: short _chTerm> = 0;

        r0.<org.apache.poi.hwpf.model.Xstz: short _chTerm> = 0;

        $r1 = new org.apache.poi.hwpf.model.Xst;

        specialinvoke $r1.<org.apache.poi.hwpf.model.Xst: void <init>()>();

        r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst> = $r1;

        return;
    }

    public void <init>(byte[], int)
    {
        int i0;
        byte[] r1;
        org.apache.poi.hwpf.model.Xstz r0;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.model.Xstz: short _chTerm> = 0;

        r0.<org.apache.poi.hwpf.model.Xstz: short _chTerm> = 0;

        virtualinvoke r0.<org.apache.poi.hwpf.model.Xstz: void fillFields(byte[],int)>(r1, i0);

        return;
    }

    public void fillFields(byte[], int)
    {
        byte[] r2;
        org.apache.poi.hwpf.model.Xstz r0;
        org.apache.poi.util.POILogger $r4, $r5;
        java.lang.Integer $r6;
        short $s2;
        int i0, $i1, i3;
        org.apache.poi.hwpf.model.Xst $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = new org.apache.poi.hwpf.model.Xst;

        specialinvoke $r1.<org.apache.poi.hwpf.model.Xst: void <init>(byte[],int)>(r2, i0);

        r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst> = $r1;

        $r3 = r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        $i1 = virtualinvoke $r3.<org.apache.poi.hwpf.model.Xst: int getSize()>();

        i3 = i0 + $i1;

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r2, i3);

        if $s2 == 0 goto label1;

        $r4 = <org.apache.poi.hwpf.model.Xstz: org.apache.poi.util.POILogger log>;

        $z0 = virtualinvoke $r4.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.poi.hwpf.model.Xstz: org.apache.poi.util.POILogger log>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "chTerm at the end of Xstz at offset ", $r6, " is not 0");

     label1:
        return;
    }

    public java.lang.String getAsJavaString()
    {
        java.lang.String $r2;
        org.apache.poi.hwpf.model.Xstz r0;
        org.apache.poi.hwpf.model.Xst $r1;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        $r1 = r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hwpf.model.Xst: java.lang.String getAsJavaString()>();

        return $r2;
    }

    public int getSize()
    {
        org.apache.poi.hwpf.model.Xstz r0;
        int $i0, $i1;
        org.apache.poi.hwpf.model.Xst $r1;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        $r1 = r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hwpf.model.Xst: int getSize()>();

        $i1 = $i0 + 2;

        return $i1;
    }

    public int serialize(byte[], int)
    {
        byte[] r1;
        org.apache.poi.hwpf.model.Xstz r0;
        int i0, $i1, $i2, i3, i4;
        org.apache.poi.hwpf.model.Xst $r2, $r3;

        r0 := @this: org.apache.poi.hwpf.model.Xstz;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        virtualinvoke $r2.<org.apache.poi.hwpf.model.Xst: void serialize(byte[],int)>(r1, i0);

        $r3 = r0.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        $i1 = virtualinvoke $r3.<org.apache.poi.hwpf.model.Xst: int getSize()>();

        i3 = i0 + $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>(r1, i3, 0);

        i4 = i3 + 2;

        $i2 = i4 - i0;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hwpf.model.Xstz r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;
        org.apache.poi.hwpf.model.Xst $r3;

        r2 := @this: org.apache.poi.hwpf.model.Xstz;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Xstz]");

        $r3 = r2.<org.apache.poi.hwpf.model.Xstz: org.apache.poi.hwpf.model.Xst _xst>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.model.Xst: java.lang.String getAsJavaString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/Xstz]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/Xstz;");

        <org.apache.poi.hwpf.model.Xstz: org.apache.poi.util.POILogger log> = $r0;

        return;
    }
}
