public final class org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData extends java.lang.Object implements org.apache.commons.compress.archivers.zip.ZipExtraField
{
    private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;
    private byte[] localFileData;
    private byte[] centralDirectoryData;

    public void <init>()
    {
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r0;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r1;

        r1 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        $r0 = <org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID>;

        return $r0;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()
    {
        byte[] $r2, $r3;
        org.apache.commons.compress.archivers.zip.ZipShort $r0;
        int $i0;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r1;

        r1 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        $r0 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $r2 = r1.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData>;

        if $r2 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r3 = r1.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData>;

        $i0 = lengthof $r3;

     label2:
        specialinvoke $r0.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

        return $r0;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.archivers.zip.ZipShort $r3;
        int $i0;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()>();

        goto label2;

     label1:
        $r3 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData>;

        $i0 = lengthof $r2;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

     label2:
        return $r3;
    }

    public byte[] getLocalFileDataData()
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>($r1);

        return $r2;
    }

    public byte[] getCentralDirectoryData()
    {
        byte[] $r1, $r2, $r3;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] getLocalFileDataData()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData>;

        $r3 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>($r2);

     label2:
        return $r3;
    }

    public void parseFromLocalFileData(byte[], int, int)
    {
        byte[] $r1, r2, $r3;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = newarray (byte)[i0];

        r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData> = $r1;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i1, $r3, 0, i0);

        return;
    }

    public void parseFromCentralDirectoryData(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = newarray (byte)[i0];

        r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData> = $r1;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] centralDirectoryData>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i1, $r3, 0, i0);

        $r4 = r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: byte[] localFileData>;

        if $r4 != null goto label1;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: void parseFromLocalFileData(byte[],int,int)>(r2, i1, i0);

     label1:
        return;
    }

    static void <clinit>()
    {
        int $i1;
        org.apache.commons.compress.archivers.zip.ZipShort $r1;

        $r1 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $i1 = (int) 44225;

        specialinvoke $r1.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i1);

        <org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData: org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID> = $r1;

        return;
    }
}
