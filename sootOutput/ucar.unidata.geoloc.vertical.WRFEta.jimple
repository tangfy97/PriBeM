public class ucar.unidata.geoloc.vertical.WRFEta extends ucar.unidata.geoloc.vertical.VerticalTransformImpl
{
    public static final java.lang.String BasePressureVariable;
    public static final java.lang.String PerturbationPressureVariable;
    public static final java.lang.String BaseGeopotentialVariable;
    public static final java.lang.String PerturbationGeopotentialVariable;
    public static final java.lang.String IsStaggeredX;
    public static final java.lang.String IsStaggeredY;
    public static final java.lang.String IsStaggeredZ;
    private ucar.nc2.Variable pertVar;
    private ucar.nc2.Variable baseVar;
    private boolean isXStag;
    private boolean isYStag;
    private boolean isZStag;

    public void <init>(ucar.nc2.NetcdfFile, ucar.nc2.Dimension, java.util.List)
    {
        ucar.nc2.Variable $r4, $r5, $r6, $r7;
        java.lang.String $r13, $r19, r20, r21;
        boolean $z0, $z1, $z2, $z3;
        java.lang.RuntimeException $r8, $r14;
        java.util.List r2;
        ucar.unidata.geoloc.vertical.WRFEta r0;
        ucar.nc2.Dimension r1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18;
        ucar.nc2.NetcdfFile r3;

        r0 := @this: ucar.unidata.geoloc.vertical.WRFEta;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Dimension;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: void <init>(ucar.nc2.Dimension)>(r1);

        $z0 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean getParameterBooleanValue(java.util.List,java.lang.String)>(r2, "staggered_x");

        r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isXStag> = $z0;

        $z1 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean getParameterBooleanValue(java.util.List,java.lang.String)>(r2, "staggered_y");

        r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isYStag> = $z1;

        $z2 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean getParameterBooleanValue(java.util.List,java.lang.String)>(r2, "staggered_z");

        r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isZStag> = $z2;

        $z3 = r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isZStag>;

        if $z3 == 0 goto label1;

        r20 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "perturbation_geopotential");

        r21 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "base_geopotential");

        r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String units> = "m";

        goto label2;

     label1:
        r20 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "perturbation_presure");

        r21 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "base_presure");

        r0.<ucar.unidata.geoloc.vertical.WRFEta: java.lang.String units> = "Pa";

     label2:
        $r4 = virtualinvoke r3.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r20);

        r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable pertVar> = $r4;

        $r5 = virtualinvoke r3.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>(r21);

        r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable baseVar> = $r5;

        $r6 = r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable pertVar>;

        if $r6 != null goto label3;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant find perturbation pressure variable= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in WRF file");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label3:
        $r7 = r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable baseVar>;

        if $r7 != null goto label4;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant find base state pressure variable=  ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in WRF file");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        return;
    }

    public ucar.ma2.ArrayDouble$D3 getCoordinateArray(int) throws java.io.IOException
    {
        int[] $r5;
        int i0, i1, i2, i3, i4, i5, i6;
        ucar.nc2.Variable $r1, $r3;
        boolean $z0, $z1, $z2;
        double $d0, $d1, d2;
        ucar.ma2.Array $r2, $r4;
        ucar.ma2.Index $r7;
        ucar.unidata.geoloc.vertical.WRFEta r0;
        ucar.ma2.ArrayDouble$D3 $r6, r8;

        r0 := @this: ucar.unidata.geoloc.vertical.WRFEta;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable pertVar>;

        $r2 = specialinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.ma2.Array getTimeSlice(ucar.nc2.Variable,int)>($r1, i0);

        $r3 = r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Variable baseVar>;

        $r4 = specialinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.ma2.Array getTimeSlice(ucar.nc2.Variable,int)>($r3, i0);

        $r5 = virtualinvoke $r2.<ucar.ma2.Array: int[] getShape()>();

        i1 = $r5[0];

        i2 = $r5[1];

        i3 = $r5[2];

        $r6 = new ucar.ma2.ArrayDouble$D3;

        specialinvoke $r6.<ucar.ma2.ArrayDouble$D3: void <init>(int,int,int)>(i1, i2, i3);

        r8 = $r6;

        $r7 = virtualinvoke $r6.<ucar.ma2.ArrayDouble$D3: ucar.ma2.Index getIndex()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label7;

        i5 = 0;

     label2:
        if i5 >= i2 goto label6;

        i6 = 0;

     label3:
        if i6 >= i3 goto label5;

        virtualinvoke $r7.<ucar.ma2.Index: ucar.ma2.Index set(int,int,int)>(i4, i5, i6);

        $d0 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r7);

        $d1 = virtualinvoke $r4.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r7);

        d2 = $d0 + $d1;

        $z2 = r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isZStag>;

        if $z2 == 0 goto label4;

        d2 = d2 / 9.81;

     label4:
        virtualinvoke $r6.<ucar.ma2.ArrayDouble$D3: void setDouble(ucar.ma2.Index,double)>($r7, d2);

        i6 = i6 + 1;

        goto label3;

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        $z0 = r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isXStag>;

        if $z0 == 0 goto label8;

        r8 = specialinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.ma2.ArrayDouble$D3 addStagger(ucar.ma2.ArrayDouble$D3,int)>($r6, 2);

     label8:
        $z1 = r0.<ucar.unidata.geoloc.vertical.WRFEta: boolean isYStag>;

        if $z1 == 0 goto label9;

        r8 = specialinvoke r0.<ucar.unidata.geoloc.vertical.WRFEta: ucar.ma2.ArrayDouble$D3 addStagger(ucar.ma2.ArrayDouble$D3,int)>(r8, 1);

     label9:
        return r8;
    }

    private ucar.ma2.ArrayDouble$D3 addStagger(ucar.ma2.ArrayDouble$D3, int)
    {
        int[] $r1, r2, r5, r6, r14;
        ucar.ma2.ArrayDouble$D3 r0, $r3;
        ucar.unidata.geoloc.vertical.WRFEta r9;
        double[] r4, $r10;
        int i0, $i1, $i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, $i17, i18, $i19, i20, $i21, i22, $i23, i24, i25;
        double $d0, $d1;
        ucar.ma2.IndexIterator $r8, $r12;
        ucar.ma2.Array $r7, $r11;
        ucar.ma2.InvalidRangeException $r13;

        r9 := @this: ucar.unidata.geoloc.vertical.WRFEta;

        r0 := @parameter0: ucar.ma2.ArrayDouble$D3;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.ma2.ArrayDouble$D3: int[] getShape()>();

        r2 = newarray (int)[3];

        i13 = 0;

     label01:
        if i13 >= 3 goto label02;

        $i12 = $r1[i13];

        r2[i13] = $i12;

        i13 = i13 + 1;

        goto label01;

     label02:
        $i1 = r2[i0];

        $i2 = $i1 + 1;

        r2[i0] = $i2;

        i14 = r2[0];

        i3 = r2[1];

        i4 = r2[2];

        $r3 = new ucar.ma2.ArrayDouble$D3;

        specialinvoke $r3.<ucar.ma2.ArrayDouble$D3: void <init>(int,int,int)>(i14, i3, i4);

        i5 = $r1[i0];

        r4 = newarray (double)[i5];

        r5 = newarray (int)[3];

        r6 = newarray (int)[3];

        i15 = 0;

     label03:
        if i15 >= 3 goto label08;

        $i11 = i15;

        if i15 != i0 goto label04;

        $i16 = i5;

        goto label05;

     label04:
        $i16 = 1;

     label05:
        r5[$i11] = $i16;

        $i10 = i15;

        if i15 != i0 goto label06;

        $i17 = i5 + 1;

        goto label07;

     label06:
        $i17 = 1;

     label07:
        r6[$i10] = $i17;

        i15 = i15 + 1;

        goto label03;

     label08:
        r14 = newarray (int)[3];

     label09:
        i18 = 0;

     label10:
        $i9 = i18;

        if i0 != 0 goto label11;

        $i19 = 1;

        goto label12;

     label11:
        $i19 = i14;

     label12:
        if $i9 >= $i19 goto label25;

        i20 = 0;

     label13:
        $i8 = i20;

        if i0 != 1 goto label14;

        $i21 = 1;

        goto label15;

     label14:
        $i21 = i3;

     label15:
        if $i8 >= $i21 goto label24;

        i22 = 0;

     label16:
        $i7 = i22;

        if i0 != 2 goto label17;

        $i23 = 1;

        goto label18;

     label17:
        $i23 = i4;

     label18:
        if $i7 >= $i23 goto label23;

        r14[0] = i18;

        r14[1] = i20;

        r14[2] = i22;

        $r7 = virtualinvoke r0.<ucar.ma2.ArrayDouble$D3: ucar.ma2.Array section(int[],int[])>(r14, r5);

        $r8 = virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i24 = 0;

     label19:
        if i24 >= i5 goto label20;

        $d1 = interfaceinvoke $r8.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        r4[i24] = $d1;

        i24 = i24 + 1;

        goto label19;

     label20:
        $r10 = specialinvoke r9.<ucar.unidata.geoloc.vertical.WRFEta: double[] extrapinterpolate(double[])>(r4);

        $r11 = virtualinvoke $r3.<ucar.ma2.ArrayDouble$D3: ucar.ma2.Array section(int[],int[])>(r14, r6);

        $r12 = virtualinvoke $r11.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i25 = 0;

     label21:
        $i6 = i5 + 1;

        if i25 >= $i6 goto label22;

        $d0 = $r10[i25];

        interfaceinvoke $r12.<ucar.ma2.IndexIterator: void setDoubleNext(double)>($d0);

        i25 = i25 + 1;

        goto label21;

     label22:
        i22 = i22 + 1;

        goto label16;

     label23:
        i20 = i20 + 1;

        goto label13;

     label24:
        i18 = i18 + 1;

        goto label10;

     label25:
        goto label27;

     label26:
        $r13 := @caughtexception;

        return null;

     label27:
        return $r3;

        catch ucar.ma2.InvalidRangeException from label09 to label25 with label26;
    }

    private double[] extrapinterpolate(double[])
    {
        double[] r0, r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        ucar.unidata.geoloc.vertical.WRFEta r2;

        r2 := @this: ucar.unidata.geoloc.vertical.WRFEta;

        r0 := @parameter0: double[];

        i0 = lengthof r0;

        $i1 = i0 + 1;

        r1 = newarray (double)[$i1];

        $d0 = r0[0];

        $d3 = 1.5 * $d0;

        $d1 = r0[1];

        $d2 = 0.5 * $d1;

        $d4 = $d3 - $d2;

        r1[0] = $d4;

        $i2 = i0 - 1;

        $d5 = r0[$i2];

        $d8 = 1.5 * $d5;

        $i3 = i0 - 2;

        $d6 = r0[$i3];

        $d7 = 0.5 * $d6;

        $d9 = $d8 - $d7;

        r1[i0] = $d9;

        i5 = 1;

     label1:
        if i5 >= i0 goto label2;

        $i4 = i5 - 1;

        $d11 = r0[$i4];

        $d10 = r0[i5];

        $d12 = $d11 + $d10;

        $d13 = 0.5 * $d12;

        r1[i5] = $d13;

        i5 = i5 + 1;

        goto label1;

     label2:
        return r1;
    }

    private ucar.ma2.Array getTimeSlice(ucar.nc2.Variable, int) throws java.io.IOException
    {
        ucar.ma2.Array $r8, $r9;
        ucar.ma2.InvalidRangeException $r7;
        int[] $r1, r2;
        int $i0, $i1, i2;
        ucar.nc2.Variable r0;
        ucar.unidata.geoloc.vertical.WRFEta r3;
        ucar.nc2.Dimension $r4, $r5;
        java.lang.String $r6;

        r3 := @this: ucar.unidata.geoloc.vertical.WRFEta;

        r0 := @parameter0: ucar.nc2.Variable;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        r2 = newarray (int)[$i0];

        $r4 = virtualinvoke r3.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Dimension getTimeDimension()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r3.<ucar.unidata.geoloc.vertical.WRFEta: ucar.nc2.Dimension getTimeDimension()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i1 = virtualinvoke r0.<ucar.nc2.Variable: int findDimensionIndex(java.lang.String)>($r6);

        if $i1 < 0 goto label1;

        $r1[$i1] = 1;

        r2[$i1] = i2;

     label1:
        $r8 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r2, $r1);

        $r9 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.Array reduce()>();

     label2:
        return $r9;

     label3:
        $r7 := @caughtexception;

        return null;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String IsStaggeredZ> = "staggered_z";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String IsStaggeredY> = "staggered_y";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String IsStaggeredX> = "staggered_x";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String PerturbationGeopotentialVariable> = "perturbation_geopotential";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String BaseGeopotentialVariable> = "base_geopotential";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String PerturbationPressureVariable> = "perturbation_presure";

        <ucar.unidata.geoloc.vertical.WRFEta: java.lang.String BasePressureVariable> = "base_presure";

        return;
    }
}
