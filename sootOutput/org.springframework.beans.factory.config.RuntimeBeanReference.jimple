public class org.springframework.beans.factory.config.RuntimeBeanReference extends java.lang.Object implements org.springframework.beans.factory.config.BeanReference
{
    private final java.lang.String beanName;
    private final boolean toParent;
    private java.lang.Object source;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.config.RuntimeBeanReference r0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        java.lang.String r1;
        org.springframework.beans.factory.config.RuntimeBeanReference r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>(r1, "\'beanName\' must not be empty");

        r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String beanName> = r1;

        r0.<org.springframework.beans.factory.config.RuntimeBeanReference: boolean toParent> = z0;

        return;
    }

    public java.lang.String getBeanName()
    {
        java.lang.String $r1;
        org.springframework.beans.factory.config.RuntimeBeanReference r0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        $r1 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String beanName>;

        return $r1;
    }

    public boolean isToParent()
    {
        org.springframework.beans.factory.config.RuntimeBeanReference r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        $z0 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: boolean toParent>;

        return $z0;
    }

    public void setSource(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.factory.config.RuntimeBeanReference r0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.Object source> = r1;

        return;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object $r1;
        org.springframework.beans.factory.config.RuntimeBeanReference r0;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        $r1 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.Object source>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.config.RuntimeBeanReference r0, r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.factory.config.RuntimeBeanReference;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.factory.config.RuntimeBeanReference) r1;

        $r4 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String beanName>;

        $r3 = r2.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String beanName>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $z3 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: boolean toParent>;

        $z2 = r2.<org.springframework.beans.factory.config.RuntimeBeanReference: boolean toParent>;

        if $z3 != $z2 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.factory.config.RuntimeBeanReference r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        $r1 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String beanName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 29 * $i0;

        $z0 = r0.<org.springframework.beans.factory.config.RuntimeBeanReference: boolean toParent>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i2 = $i1 + $z1;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.factory.config.RuntimeBeanReference r2;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r1, $r3, $r6;

        r2 := @this: org.springframework.beans.factory.config.RuntimeBeanReference;

        $r0 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(60);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String getBeanName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
