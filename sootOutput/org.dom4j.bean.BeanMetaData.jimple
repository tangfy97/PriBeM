public class org.dom4j.bean.BeanMetaData extends java.lang.Object
{
    protected static final java.lang.Object[] NULL_ARGS;
    private static java.util.Map singletonCache;
    private static final org.dom4j.DocumentFactory DOCUMENT_FACTORY;
    private java.lang.Class beanClass;
    private java.beans.PropertyDescriptor[] propertyDescriptors;
    private org.dom4j.QName[] qNames;
    private java.lang.reflect.Method[] readMethods;
    private java.lang.reflect.Method[] writeMethods;
    private java.util.Map nameMap;

    public void <init>(java.lang.Class)
    {
        java.beans.PropertyDescriptor[] $r3, $r7, $r20, $r22, $r24;
        org.dom4j.QName[] $r4, $r12;
        java.util.HashMap $r1;
        java.lang.Integer $r17;
        java.lang.reflect.Method[] $r5, $r6, $r13, $r15;
        org.dom4j.DocumentFactory $r10;
        java.util.Map $r18, $r19;
        java.beans.BeanInfo $r21;
        int $i0, i1;
        java.lang.String $r9;
        java.lang.reflect.Method $r14, $r16;
        java.beans.IntrospectionException $r23;
        org.dom4j.bean.BeanMetaData r0;
        java.beans.PropertyDescriptor r8;
        java.lang.Class r2;
        org.dom4j.QName $r11;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap> = $r1;

        r0.<org.dom4j.bean.BeanMetaData: java.lang.Class beanClass> = r2;

        if r2 == null goto label4;

     label1:
        $r21 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>(r2);

        $r22 = interfaceinvoke $r21.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r22;

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r23);

     label4:
        $r24 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        if $r24 != null goto label5;

        $r20 = newarray (java.beans.PropertyDescriptor)[0];

        r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors> = $r20;

     label5:
        $r3 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i0 = lengthof $r3;

        $r4 = newarray (org.dom4j.QName)[$i0];

        r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames> = $r4;

        $r5 = newarray (java.lang.reflect.Method)[$i0];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods> = $r5;

        $r6 = newarray (java.lang.reflect.Method)[$i0];

        r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods> = $r6;

        i1 = 0;

     label6:
        if i1 >= $i0 goto label7;

        $r7 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        r8 = $r7[i1];

        $r9 = virtualinvoke r8.<java.beans.PropertyDescriptor: java.lang.String getName()>();

        $r10 = <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY>;

        $r11 = virtualinvoke $r10.<org.dom4j.DocumentFactory: org.dom4j.QName createQName(java.lang.String)>($r9);

        $r12 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r12[i1] = $r11;

        $r13 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        $r14 = virtualinvoke r8.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>();

        $r13[i1] = $r14;

        $r15 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        $r16 = virtualinvoke r8.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        $r15[i1] = $r16;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(i1);

        $r18 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r17);

        $r19 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r17);

        i1 = i1 + 1;

        goto label6;

     label7:
        return;

        catch java.beans.IntrospectionException from label1 to label2 with label3;
    }

    public static org.dom4j.bean.BeanMetaData get(java.lang.Class)
    {
        org.dom4j.bean.BeanMetaData $r3, r5;
        java.util.Map $r1, $r4;
        java.lang.Class r0;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (org.dom4j.bean.BeanMetaData) $r2;

        if r5 != null goto label1;

        $r3 = new org.dom4j.bean.BeanMetaData;

        specialinvoke $r3.<org.dom4j.bean.BeanMetaData: void <init>(java.lang.Class)>(r0);

        r5 = $r3;

        $r4 = <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label1:
        return r5;
    }

    public int attributeCount()
    {
        org.dom4j.bean.BeanMetaData r0;
        int $i0;
        java.beans.PropertyDescriptor[] $r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.beans.PropertyDescriptor[] propertyDescriptors>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement)
    {
        org.dom4j.bean.BeanMetaData r2;
        org.dom4j.bean.BeanElement r1;
        org.dom4j.bean.BeanAttributeList $r0;

        r2 := @this: org.dom4j.bean.BeanMetaData;

        r1 := @parameter0: org.dom4j.bean.BeanElement;

        $r0 = new org.dom4j.bean.BeanAttributeList;

        specialinvoke $r0.<org.dom4j.bean.BeanAttributeList: void <init>(org.dom4j.bean.BeanElement,org.dom4j.bean.BeanMetaData)>(r1, r2);

        return $r0;
    }

    public org.dom4j.QName getQName(int)
    {
        org.dom4j.bean.BeanMetaData r0;
        int i0;
        org.dom4j.QName[] $r1;
        org.dom4j.QName $r2;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        i0 := @parameter0: int;

        $r1 = r0.<org.dom4j.bean.BeanMetaData: org.dom4j.QName[] qNames>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getIndex(java.lang.String)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r2;
        int $i0, $i2;
        java.lang.Object $r3;
        java.lang.String r1;
        java.lang.Integer r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public int getIndex(org.dom4j.QName)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.util.Map $r2;
        int $i0, $i2;
        org.dom4j.QName r1;
        java.lang.Object $r3;
        java.lang.Integer r4;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        r1 := @parameter0: org.dom4j.QName;

        $r2 = r0.<org.dom4j.bean.BeanMetaData: java.util.Map nameMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public java.lang.Object getData(int, java.lang.Object)
    {
        java.lang.Object[] $r3;
        java.lang.reflect.Method[] $r1;
        java.lang.Exception $r5;
        org.dom4j.bean.BeanMetaData r0;
        int i0;
        java.lang.Object r2, $r4;
        java.lang.reflect.Method r6;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

     label1:
        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] readMethods>;

        r6 = $r1[i0];

        $r3 = <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS>;

        $r4 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setData(int, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r2;
        java.lang.reflect.Method[] $r1;
        java.lang.Exception $r5;
        org.dom4j.bean.BeanMetaData r0;
        int i0;
        java.lang.Object r3, r4;
        java.lang.reflect.Method r6;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

     label1:
        $r1 = r0.<org.dom4j.bean.BeanMetaData: java.lang.reflect.Method[] writeMethods>;

        r6 = $r1[i0];

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<org.dom4j.bean.BeanMetaData: void handleException(java.lang.Exception)>($r5);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void handleException(java.lang.Exception)
    {
        org.dom4j.bean.BeanMetaData r0;
        java.lang.Exception r1;

        r0 := @this: org.dom4j.bean.BeanMetaData;

        r1 := @parameter0: java.lang.Exception;

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r1;
        java.lang.Object[] $r0;
        org.dom4j.DocumentFactory $r2;

        $r0 = newarray (java.lang.Object)[0];

        <org.dom4j.bean.BeanMetaData: java.lang.Object[] NULL_ARGS> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.dom4j.bean.BeanMetaData: java.util.Map singletonCache> = $r1;

        $r2 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: org.dom4j.DocumentFactory getInstance()>();

        <org.dom4j.bean.BeanMetaData: org.dom4j.DocumentFactory DOCUMENT_FACTORY> = $r2;

        return;
    }
}
