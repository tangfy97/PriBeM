class groovy.util.ObjectGraphBuilder$ObjectRefFactory extends groovy.util.ObjectGraphBuilder$ObjectFactory
{

    private void <init>()
    {
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r0;

        r0 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        specialinvoke r0.<groovy.util.ObjectGraphBuilder$ObjectFactory: void <init>(groovy.util.ObjectGraphBuilder$1)>(null);

        return;
    }

    public boolean isLeaf()
    {
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r0;

        r0 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        return 1;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.util.Map r6, $r8, $r10;
        groovy.lang.MissingPropertyException $r28;
        boolean $z0, $z1, $z2, $z3;
        groovy.util.FactoryBuilderSupport r0;
        java.util.List $r12;
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r29;
        groovy.util.ObjectGraphBuilder$IdentifierResolver $r21;
        groovy.util.ObjectGraphBuilder$ReferenceResolver $r2;
        java.lang.StringBuffer $r19, $r20, $r24, $r25, $r26;
        java.lang.Boolean r32;
        groovy.util.ObjectGraphBuilder$NodeReference $r13;
        java.lang.String $r4, $r5, r11, $r14, $r17, $r22, $r23, $r27, r34;
        java.lang.IllegalArgumentException $r16, $r18;
        groovy.util.ObjectGraphBuilder r1;
        java.lang.Object r3, $r7, $r15, r30, r31, r33;
        java.lang.Class $r9;

        r29 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r3 := @parameter1: java.lang.Object;

        r30 := @parameter2: java.lang.Object;

        r6 := @parameter3: java.util.Map;

        r1 = (groovy.util.ObjectGraphBuilder) r0;

        $r2 = staticinvoke <groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$ReferenceResolver access$1300(groovy.util.ObjectGraphBuilder)>(r1);

        $r4 = (java.lang.String) r3;

        $r5 = interfaceinvoke $r2.<groovy.util.ObjectGraphBuilder$ReferenceResolver: java.lang.String getReferenceFor(java.lang.String)>($r4);

        $r7 = interfaceinvoke r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        r31 = null;

        r32 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = $r7 instanceof java.lang.String;

        if $z0 == 0 goto label06;

     label01:
        $r17 = (java.lang.String) $r7;

        r31 = virtualinvoke r1.<groovy.util.ObjectGraphBuilder: java.lang.Object getProperty(java.lang.String)>($r17);

     label02:
        goto label04;

     label03:
        $r28 := @caughtexception;

     label04:
        if r31 != null goto label07;

        $z2 = virtualinvoke r1.<groovy.util.ObjectGraphBuilder: boolean isLazyReferencesAllowed()>();

        if $z2 == 0 goto label05;

        r32 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label07;

     label05:
        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("There is no previous node with ");

        $r21 = staticinvoke <groovy.util.ObjectGraphBuilder: groovy.util.ObjectGraphBuilder$IdentifierResolver access$1400(groovy.util.ObjectGraphBuilder)>(r1);

        $r22 = (java.lang.String) r3;

        $r23 = interfaceinvoke $r21.<groovy.util.ObjectGraphBuilder$IdentifierResolver: java.lang.String getIdentifierFor(java.lang.String)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r18;

     label06:
        r31 = $r7;

     label07:
        $z3 = interfaceinvoke r6.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label08;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You can not modify the properties of a referenced object.");

        throw $r16;

     label08:
        $r8 = virtualinvoke r1.<groovy.util.ObjectGraphBuilder: java.util.Map getContext()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_NODE_NAME_", r3);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_LAZY_REF_", r32);

        $z1 = virtualinvoke r32.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label10;

        $r10 = virtualinvoke r1.<groovy.util.ObjectGraphBuilder: java.util.Map getParentContext()>();

        r33 = null;

        r34 = null;

        r11 = (java.lang.String) r3;

        if $r10 == null goto label09;

        r33 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("_CURRENT_NODE_");

        $r15 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("_NODE_NAME_");

        r34 = (java.lang.String) $r15;

     label09:
        $r12 = staticinvoke <groovy.util.ObjectGraphBuilder: java.util.List access$1600(groovy.util.ObjectGraphBuilder)>(r1);

        $r13 = new groovy.util.ObjectGraphBuilder$NodeReference;

        $r14 = (java.lang.String) $r7;

        specialinvoke $r13.<groovy.util.ObjectGraphBuilder$NodeReference: void <init>(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,groovy.util.ObjectGraphBuilder$1)>(r33, r34, r11, $r14, null);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label11;

     label10:
        $r9 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("_NODE_CLASS_", $r9);

     label11:
        return r31;

        catch groovy.lang.MissingPropertyException from label01 to label02 with label03;
    }

    public void setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r0;
        java.util.Map $r1;
        java.lang.Boolean r3;
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r4;
        java.lang.Object $r2, r5, r6;
        boolean $z0;

        r4 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map getContext()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("_LAZY_REF_");

        r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        specialinvoke r4.<groovy.util.ObjectGraphBuilder$ObjectFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r0, r5, r6);

     label1:
        return;
    }

    public void setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r0;
        java.util.Map $r1;
        java.lang.Boolean r3;
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r4;
        java.lang.Object $r2, r5, r6;
        boolean $z0;

        r4 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        r0 := @parameter0: groovy.util.FactoryBuilderSupport;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<groovy.util.FactoryBuilderSupport: java.util.Map getContext()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("_LAZY_REF_");

        r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        specialinvoke r4.<groovy.util.ObjectGraphBuilder$ObjectFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r0, r5, r6);

     label1:
        return;
    }

    void <init>(groovy.util.ObjectGraphBuilder$1)
    {
        groovy.util.ObjectGraphBuilder$ObjectRefFactory r0;
        groovy.util.ObjectGraphBuilder$1 r1;

        r0 := @this: groovy.util.ObjectGraphBuilder$ObjectRefFactory;

        r1 := @parameter0: groovy.util.ObjectGraphBuilder$1;

        specialinvoke r0.<groovy.util.ObjectGraphBuilder$ObjectRefFactory: void <init>()>();

        return;
    }
}
