public class com.hp.hpl.jena.tdb.sys.SetupTDB extends java.lang.Object
{
    static final org.slf4j.Logger log;
    private static com.hp.hpl.jena.tdb.setup.SystemParams params;

    public void <init>()
    {
        com.hp.hpl.jena.tdb.sys.SetupTDB r0;

        r0 := @this: com.hp.hpl.jena.tdb.sys.SetupTDB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void error(org.slf4j.Logger, java.lang.String)
    {
        org.slf4j.Logger r0;
        com.hp.hpl.jena.tdb.TDBException $r1;
        java.lang.String r2;

        r0 := @parameter0: org.slf4j.Logger;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.slf4j.Logger: void error(java.lang.String)>(r2);

     label1:
        $r1 = new com.hp.hpl.jena.tdb.TDBException;

        specialinvoke $r1.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>(r2);

        throw $r1;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetGraphTDB buildDataset(com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1;
        com.hp.hpl.jena.tdb.base.file.Location r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.setup.DatasetBuilderStd: com.hp.hpl.jena.tdb.store.DatasetGraphTDB build(com.hp.hpl.jena.tdb.base.file.Location)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.store.TripleTable makeTripleTable(com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.nodetable.NodeTable, java.lang.String, java.lang.String[], com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r10;
        java.lang.String[] r0, r26;
        com.hp.hpl.jena.tdb.base.file.Location r9;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r12;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r8, $r18, $r22, $r24, r25;
        org.slf4j.Logger $r2, $r15, $r20;
        com.hp.hpl.jena.tdb.sys.DatasetControl r13;
        com.hp.hpl.jena.tdb.store.TripleTable $r11;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r7, $r14, $r16, $r17, $r19, $r21, $r23;

        r9 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r12 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r25 := @parameter2: java.lang.String;

        r26 := @parameter3: java.lang.String[];

        r13 := @parameter4: com.hp.hpl.jena.tdb.sys.DatasetControl;

        r0 = <com.hp.hpl.jena.tdb.sys.Names: java.lang.String[] tripleIndexes>;

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        $r20 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of triple table indexes: ");

        $r22 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(",", r0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r20, $r24);

     label1:
        $r2 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Triple table: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPO");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r6 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(",", r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

        $r10 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.TupleIndex[] makeTupleIndexes(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,java.lang.String[],java.lang.String[])>(r9, "SPO", r0, r0);

        $i2 = lengthof $r10;

        $i1 = lengthof r0;

        if $i2 == $i1 goto label2;

        $r15 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of triple table tuples indexes: ");

        $i3 = lengthof $r10;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r15, $r18);

     label2:
        $r11 = new com.hp.hpl.jena.tdb.store.TripleTable;

        specialinvoke $r11.<com.hp.hpl.jena.tdb.store.TripleTable: void <init>(com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r10, r12, r13);

        return $r11;
    }

    public static com.hp.hpl.jena.tdb.store.QuadTable makeQuadTable(com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.nodetable.NodeTable, java.lang.String, java.lang.String[], com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r10;
        com.hp.hpl.jena.tdb.store.QuadTable $r11;
        java.lang.String[] r0, r26;
        com.hp.hpl.jena.tdb.base.file.Location r9;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r12;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r8, $r18, $r22, $r24, r25;
        org.slf4j.Logger $r2, $r15, $r20;
        com.hp.hpl.jena.tdb.sys.DatasetControl r13;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r7, $r14, $r16, $r17, $r19, $r21, $r23;

        r9 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r12 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        r25 := @parameter2: java.lang.String;

        r26 := @parameter3: java.lang.String[];

        r13 := @parameter4: com.hp.hpl.jena.tdb.sys.DatasetControl;

        r0 = <com.hp.hpl.jena.tdb.sys.Names: java.lang.String[] quadIndexes>;

        $i0 = lengthof r0;

        if $i0 == 6 goto label1;

        $r20 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of quad table indexes: ");

        $r22 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(",", r0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r20, $r24);

     label1:
        $r2 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Quad table: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSPO");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r6 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(",", r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

        $r10 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.TupleIndex[] makeTupleIndexes(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,java.lang.String[],java.lang.String[])>(r9, "GSPO", r0, r0);

        $i2 = lengthof $r10;

        $i1 = lengthof r0;

        if $i2 == $i1 goto label2;

        $r15 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of quad table tuples indexes: ");

        $i3 = lengthof $r10;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r15, $r18);

     label2:
        $r11 = new com.hp.hpl.jena.tdb.store.QuadTable;

        specialinvoke $r11.<com.hp.hpl.jena.tdb.store.QuadTable: void <init>(com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r10, r12, r13);

        return $r11;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB makePrefixes(com.hp.hpl.jena.tdb.base.file.Location, com.hp.hpl.jena.tdb.sys.DatasetControl)
    {
        com.hp.hpl.jena.tdb.base.file.Location r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r11;
        com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB $r28;
        com.hp.hpl.jena.tdb.sys.DatasetControl r13;
        java.lang.StringBuilder $r16, $r18, $r22, $r23, $r27, $r29;
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r8;
        java.lang.String[] r5, $r7;
        int $i0, $i1, $i2, $i4, $i6, $i8;
        com.hp.hpl.jena.tdb.setup.SystemParams $r0, $r2, $r4, $r9, $r10;
        java.lang.String r1, r3, $r17, $r19, $r24, $r25, $r26;
        org.slf4j.Logger $r15, $r21;

        r6 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r13 := @parameter1: com.hp.hpl.jena.tdb.sys.DatasetControl;

        $r0 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        r1 = $r0.<com.hp.hpl.jena.tdb.setup.SystemParams: java.lang.String indexPrefix>;

        $r2 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        r3 = $r2.<com.hp.hpl.jena.tdb.setup.SystemParams: java.lang.String primaryIndexPrefix>;

        $r4 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        r5 = $r4.<com.hp.hpl.jena.tdb.setup.SystemParams: java.lang.String[] prefixIndexes>;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r1;

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.TupleIndex[] makeTupleIndexes(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,java.lang.String[],java.lang.String[])>(r6, r3, r5, $r7);

        $i1 = lengthof $r8;

        $i0 = lengthof r5;

        if $i1 == $i0 goto label1;

        $r21 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong number of triple table tuples indexes: ");

        $i2 = lengthof $r8;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r21, $r24);

     label1:
        $r9 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        $r25 = $r9.<com.hp.hpl.jena.tdb.setup.SystemParams: java.lang.String prefixNode2Id>;

        $r10 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        $r26 = $r10.<com.hp.hpl.jena.tdb.setup.SystemParams: java.lang.String prefixId2Node>;

        $i4 = (int) -1;

        $i6 = (int) -1;

        $i8 = (int) -1;

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTable(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,java.lang.String,int,int)>(r6, $r25, $i4, $r26, $i6, $i8);

        $r28 = new com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB;

        specialinvoke $r28.<com.hp.hpl.jena.tdb.store.DatasetPrefixesTDB: void <init>(com.hp.hpl.jena.tdb.index.TupleIndex[],com.hp.hpl.jena.tdb.nodetable.NodeTable,com.hp.hpl.jena.tdb.sys.DatasetControl)>($r8, $r11, r13);

        $r15 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefixes: ");

        $r17 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: java.lang.String strjoin(java.lang.String,java.lang.String[])>(", ", r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r19);

        return $r28;
    }

    public static com.hp.hpl.jena.tdb.index.TupleIndex[] makeTupleIndexes(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, java.lang.String[], java.lang.String[])
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r12;
        java.lang.String[] r1, r3;
        com.hp.hpl.jena.tdb.base.file.Location r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        java.lang.String r0, $r4, $r5, $r11;
        org.slf4j.Logger $r8;
        com.hp.hpl.jena.tdb.index.TupleIndex $r6;
        java.lang.StringBuilder $r7, $r9, $r10;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 3 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 == 4 goto label1;

        $r8 = <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad primary key length: ");

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: void error(org.slf4j.Logger,java.lang.String)>($r8, $r11);

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 * 8;

        $i5 = lengthof r1;

        $r12 = newarray (com.hp.hpl.jena.tdb.index.TupleIndex)[$i5];

        i6 = 0;

     label2:
        $i7 = lengthof $r12;

        if i6 >= $i7 goto label3;

        $r5 = r1[i6];

        $r4 = r3[i6];

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.TupleIndex makeTupleIndex(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,java.lang.String,java.lang.String,int)>(r2, r0, $r5, $r4, $i4);

        $r12[i6] = $r6;

        i6 = i6 + 1;

        goto label2;

     label3:
        return $r12;
    }

    public static com.hp.hpl.jena.tdb.index.TupleIndex makeTupleIndex(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexRecord $r6;
        com.hp.hpl.jena.tdb.base.file.Location r1;
        com.hp.hpl.jena.tdb.index.RangeIndex $r5;
        com.hp.hpl.jena.tdb.base.file.FileSet $r0;
        int i0, i1, i2, $i3;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r10;
        java.lang.String r2, r7, r9;
        com.hp.hpl.jena.tdb.setup.SystemParams $r3, $r4;
        org.apache.jena.atlas.lib.ColumnMap $r8;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r1, r2);

        $r3 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        i0 = $r3.<com.hp.hpl.jena.tdb.setup.SystemParams: int readCacheSize>;

        $r4 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        i1 = $r4.<com.hp.hpl.jena.tdb.setup.SystemParams: int writeCacheSize>;

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.RangeIndex makeRangeIndex(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,int,int,int)>(r1, r2, i2, 0, i0, i1);

        $r6 = new com.hp.hpl.jena.tdb.index.TupleIndexRecord;

        $i3 = virtualinvoke r7.<java.lang.String: int length()>();

        $r8 = new org.apache.jena.atlas.lib.ColumnMap;

        specialinvoke $r8.<org.apache.jena.atlas.lib.ColumnMap: void <init>(java.lang.String,java.lang.String)>(r7, r9);

        $r10 = interfaceinvoke $r5.<com.hp.hpl.jena.tdb.index.RangeIndex: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        specialinvoke $r6.<com.hp.hpl.jena.tdb.index.TupleIndexRecord: void <init>(int,org.apache.jena.atlas.lib.ColumnMap,java.lang.String,com.hp.hpl.jena.tdb.base.record.RecordFactory,com.hp.hpl.jena.tdb.index.RangeIndex)>($i3, $r8, r9, $r10, $r5);

        return $r6;
    }

    public static com.hp.hpl.jena.tdb.index.Index makeIndex(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, int, int, int, int)
    {
        int i0, i1, i2, i3;
        com.hp.hpl.jena.tdb.base.file.Location r0;
        java.lang.String r1;
        com.hp.hpl.jena.tdb.index.RangeIndex $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.RangeIndex makeRangeIndex(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,int,int,int)>(r0, r1, i0, i1, i2, i3);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.index.RangeIndex makeRangeIndex(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, int, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.file.Location r1;
        com.hp.hpl.jena.tdb.index.RangeIndex $r3;
        com.hp.hpl.jena.tdb.base.file.FileSet $r0;
        int i0, i1, i2, i3;
        java.lang.String r2;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r2 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r0 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r1, r2);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.RangeIndex makeBPlusTree(com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int,int)>($r0, i0, i1, i2, i3);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.index.RangeIndex makeBPlusTree(com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int, int)
    {
        com.hp.hpl.jena.tdb.base.file.FileSet r2;
        int i0, i1, i2, $i3, $i4, i5, i6;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r0;
        com.hp.hpl.jena.tdb.setup.SystemParams $r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r3;

        r2 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r0 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.base.record.RecordFactory makeRecordFactory(int,int)>(i0, i1);

        $r1 = <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params>;

        i2 = $r1.<com.hp.hpl.jena.tdb.setup.SystemParams: int blockSize>;

        $i3 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int recordLength()>();

        $i4 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int calcOrder(int,int)>(i2, $i3);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree createBPTree(com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int,int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r2, $i4, i2, i5, i6, $r0);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.base.record.RecordFactory makeRecordFactory(int, int)
    {
        int i0, i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new com.hp.hpl.jena.tdb.base.record.RecordFactory;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: void <init>(int,int)>(i0, i1);

        return $r0;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTableBase(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r3;
        com.hp.hpl.jena.tdb.index.Index $r5;
        com.hp.hpl.jena.tdb.base.file.Location r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTableNative $r10;
        com.hp.hpl.jena.tdb.index.IndexBuilder $r7;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r8;
        com.hp.hpl.jena.tdb.base.file.FileSet $r9;
        int $i1, $i3;
        java.lang.String r2, r4;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.Location: boolean isMem()>();

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <com.hp.hpl.jena.tdb.index.IndexBuilder: com.hp.hpl.jena.tdb.index.IndexBuilder mem()>();

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableFactory: com.hp.hpl.jena.tdb.nodetable.NodeTable createMem(com.hp.hpl.jena.tdb.index.IndexBuilder)>($r7);

        return $r8;

     label1:
        $r9 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r9.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>(r0, r2);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile makeObjectFile(com.hp.hpl.jena.tdb.base.file.FileSet)>($r9);

        $i1 = (int) -1;

        $i3 = (int) -1;

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.Index makeIndex(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,int,int,int)>(r0, r4, 16, 8, $i1, $i3);

        $r10 = new com.hp.hpl.jena.tdb.nodetable.NodeTableNative;

        specialinvoke $r10.<com.hp.hpl.jena.tdb.nodetable.NodeTableNative: void <init>(com.hp.hpl.jena.tdb.index.Index,com.hp.hpl.jena.tdb.base.objectfile.ObjectFile)>($r5, $r3);

        return $r10;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTable(com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r1;
        int $i0, $i1;
        com.hp.hpl.jena.tdb.base.file.Location r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        $i1 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int Node2NodeIdCacheSize>;

        $i0 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int NodeId2NodeCacheSize>;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTable(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,java.lang.String,int,int)>(r0, "node2id", $i1, "nodes", $i0, 100);

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTable(com.hp.hpl.jena.tdb.base.file.Location, java.lang.String, int, java.lang.String, int, int)
    {
        com.hp.hpl.jena.tdb.base.file.Location r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3, $r4, $r5;
        int i0, i1, i2;
        java.lang.String r1, r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.nodetable.NodeTable makeNodeTableBase(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,java.lang.String)>(r0, r1, r2);

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableCache: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable,int,int,int)>($r3, i0, i1, i2);

        $r5 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTableInline: com.hp.hpl.jena.tdb.nodetable.NodeTable create(com.hp.hpl.jena.tdb.nodetable.NodeTable)>($r4);

        return $r5;
    }

    public static com.hp.hpl.jena.tdb.base.objectfile.ObjectFile makeObjectFile(com.hp.hpl.jena.tdb.base.file.FileSet)
    {
        java.lang.String $r1;
        com.hp.hpl.jena.tdb.base.objectfile.ObjectFile $r2;
        com.hp.hpl.jena.tdb.base.file.FileSet r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>("dat");

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.base.file.FileFactory: com.hp.hpl.jena.tdb.base.objectfile.ObjectFile createObjectFileDisk(java.lang.String)>($r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.index.RangeIndex createBPTree(com.hp.hpl.jena.tdb.base.file.FileSet, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        short s2;
        com.hp.hpl.jena.tdb.base.file.FileSet r0;
        int i0, i1;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r1;
        com.hp.hpl.jena.tdb.index.RangeIndex $r2;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r1 := @parameter1: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        i0 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockReadCacheSize>;

        i1 = <com.hp.hpl.jena.tdb.sys.SystemTDB: int BlockWriteCacheSize>;

        s2 = 8192;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.FileSet: boolean isMem()>();

        if $z0 == 0 goto label1;

        i0 = 0;

        i1 = 0;

        s2 = 1024;

     label1:
        $r2 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.RangeIndex createBPTreeByBlockSize(com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r0, s2, i0, i1, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.index.RangeIndex createBPTreeByBlockSize(com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.base.file.FileSet r0;
        int i0, i1, i2, $i4;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $i4 = (int) -1;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree createBPTree(com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int,int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r0, $i4, i0, i1, i2, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.index.RangeIndex createBPTreeByOrder(com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.base.file.FileSet r0;
        int i0, i1, i2, $i4;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        $i4 = (int) -1;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree createBPTree(com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int,int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(r0, i0, $i4, i1, i2, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.index.bplustree.BPlusTree createBPTree(com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int, int, com.hp.hpl.jena.tdb.base.record.RecordFactory)
    {
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r11, $r12;
        com.hp.hpl.jena.tdb.base.file.FileSet r1;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r8;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r13;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r10;
        java.lang.IllegalArgumentException $r2, $r9;
        com.hp.hpl.jena.tdb.base.record.RecordFactory r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r0 := @parameter5: com.hp.hpl.jena.tdb.base.record.RecordFactory;

        if i6 >= 0 goto label1;

        if i5 >= 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Neither blocksize nor order specified");

        throw $r9;

     label1:
        if i6 < 0 goto label2;

        if i5 >= 0 goto label2;

        $i4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int recordLength()>();

        i5 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int calcOrder(int,int)>(i6, $i4);

     label2:
        if i6 < 0 goto label3;

        if i5 < 0 goto label3;

        $i2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.record.RecordFactory: int recordLength()>();

        $i3 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int calcOrder(int,int)>(i6, $i2);

        if i5 == $i3 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong order (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), calculated = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        if i6 >= 0 goto label4;

        if i5 < 0 goto label4;

        i6 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: int calcBlockSize(int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(i5, r0);

     label4:
        $r10 = new com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams;

        specialinvoke $r10.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams: void <init>(int,com.hp.hpl.jena.tdb.base.record.RecordFactory)>(i5, r0);

        $r11 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr create(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int,int,int)>(r1, "idn", i6, i0, i1);

        $r12 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr create(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int,int,int)>(r1, "dat", i6, i0, i1);

        $r13 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree create(com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r10, $r11, $r12);

        return $r13;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        com.hp.hpl.jena.tdb.setup.SystemParams $r1;

        $r0 = <com.hp.hpl.jena.tdb.TDB: org.slf4j.Logger logInfo>;

        <com.hp.hpl.jena.tdb.sys.SetupTDB: org.slf4j.Logger log> = $r0;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.setup.SystemParams: com.hp.hpl.jena.tdb.setup.SystemParams getStdSystemParams()>();

        <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.setup.SystemParams params> = $r1;

        return;
    }
}
