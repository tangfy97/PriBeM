public class org.apache.batik.css.parser.Scanner extends java.lang.Object
{
    protected org.apache.batik.util.io.NormalizingReader reader;
    protected int current;
    protected char[] buffer;
    protected int position;
    protected int type;
    protected int start;
    protected int end;
    protected int blankCharacters;

    public void <init>(java.io.Reader) throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.StreamNormalizingReader $r2;
        int $i0;
        char[] $r1;
        org.apache.batik.css.parser.ParseException $r5;
        java.io.IOException $r4;
        java.io.Reader r3;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        r3 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[128];

        r0.<org.apache.batik.css.parser.Scanner: char[] buffer> = $r1;

     label1:
        $r2 = new org.apache.batik.util.io.StreamNormalizingReader;

        specialinvoke $r2.<org.apache.batik.util.io.StreamNormalizingReader: void <init>(java.io.Reader)>(r3);

        r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader> = $r2;

        $i0 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int current> = $i0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.css.parser.ParseException;

        specialinvoke $r5.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>(java.io.InputStream, java.lang.String) throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.StreamNormalizingReader $r2;
        java.io.IOException $r5;
        int $i0;
        char[] $r1;
        org.apache.batik.css.parser.ParseException $r6;
        java.lang.String r4;
        java.io.InputStream r3;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        r3 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[128];

        r0.<org.apache.batik.css.parser.Scanner: char[] buffer> = $r1;

     label1:
        $r2 = new org.apache.batik.util.io.StreamNormalizingReader;

        specialinvoke $r2.<org.apache.batik.util.io.StreamNormalizingReader: void <init>(java.io.InputStream,java.lang.String)>(r3, r4);

        r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader> = $r2;

        $i0 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int current> = $i0;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.batik.css.parser.ParseException;

        specialinvoke $r6.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void <init>(java.lang.String) throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.StringNormalizingReader $r2;
        int $i0;
        char[] $r1;
        org.apache.batik.css.parser.ParseException $r5;
        java.io.IOException $r4;
        java.lang.String r3;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[128];

        r0.<org.apache.batik.css.parser.Scanner: char[] buffer> = $r1;

     label1:
        $r2 = new org.apache.batik.util.io.StringNormalizingReader;

        specialinvoke $r2.<org.apache.batik.util.io.StringNormalizingReader: void <init>(java.lang.String)>(r3);

        r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader> = $r2;

        $i0 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int current> = $i0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.css.parser.ParseException;

        specialinvoke $r5.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getLine()
    {
        int $i0;
        org.apache.batik.util.io.NormalizingReader $r1;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $r1 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        return $i0;
    }

    public int getColumn()
    {
        int $i0;
        org.apache.batik.util.io.NormalizingReader $r1;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $r1 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        return $i0;
    }

    public char[] getBuffer()
    {
        char[] $r1;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $r1 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        return $r1;
    }

    public int getStart()
    {
        int $i0;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int start>;

        return $i0;
    }

    public int getEnd()
    {
        int $i0;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int end>;

        return $i0;
    }

    public void clearBuffer()
    {
        org.apache.batik.css.parser.Scanner r0;
        int $i0, $i1, $i2;
        char[] $r1, $r2;
        char $c3;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        if $i0 > 0 goto label1;

        r0.<org.apache.batik.css.parser.Scanner: int position> = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $r1 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $i1 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i2 = $i1 - 1;

        $c3 = $r1[$i2];

        $r2[0] = $c3;

        r0.<org.apache.batik.css.parser.Scanner: int position> = 1;

     label2:
        return;
    }

    public int getType()
    {
        int $i0;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int type>;

        return $i0;
    }

    public java.lang.String getStringValue()
    {
        org.apache.batik.css.parser.Scanner r1;
        int $i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r0;

        r1 := @this: org.apache.batik.css.parser.Scanner;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $i3 = r1.<org.apache.batik.css.parser.Scanner: int start>;

        $i1 = r1.<org.apache.batik.css.parser.Scanner: int end>;

        $i0 = r1.<org.apache.batik.css.parser.Scanner: int start>;

        $i2 = $i1 - $i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, $i2);

        return $r0;
    }

    public void scanAtRule() throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        java.io.IOException $r1;
        int $i0, $i1, $i2, i3, $i5;
        org.apache.batik.css.parser.ParseException $r3;

        r0 := @this: org.apache.batik.css.parser.Scanner;

     label01:
        goto label02;

     label02:
        $i0 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i0)
        {
            case -1: goto label09;
            case 59: goto label09;
            case 123: goto label03;
            default: goto label10;
        };

     label03:
        i3 = 1;

        goto label04;

     label04:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i1 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i1)
        {
            case -1: goto label06;
            case 123: goto label07;
            case 125: goto label05;
            default: goto label08;
        };

     label05:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 <= 0 goto label06;

        goto label08;

     label06:
        goto label11;

     label07:
        i3 = i3 + 1;

     label08:
        goto label04;

     label09:
        goto label11;

     label10:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        goto label02;

     label11:
        $i2 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        r0.<org.apache.batik.css.parser.Scanner: int end> = $i2;

     label12:
        goto label14;

     label13:
        $r1 := @caughtexception;

        $r3 = new org.apache.batik.css.parser.ParseException;

        specialinvoke $r3.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.Exception)>($r1);

        throw $r3;

     label14:
        return;

        catch java.io.IOException from label01 to label12 with label13;
    }

    public int next() throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = 0;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i1 = $i0 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i1;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void nextToken()>();

        $i2 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i3 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int endGap()>();

        $i4 = $i2 - $i3;

        r0.<org.apache.batik.css.parser.Scanner: int end> = $i4;

        $i5 = r0.<org.apache.batik.css.parser.Scanner: int type>;

        return $i5;
    }

    protected int endGap()
    {
        org.apache.batik.css.parser.Scanner r0;
        byte $b5;
        int $i0, $i1, i2, $i3, $i4, $i7;
        boolean $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $z4 = 0;

        $b5 = 0;

        $z3 = 0;

        $z2 = 0;

        $z1 = 0;

        goto label2;

     label1:
        $z4 = 1;

        $b5 = 1;

        $z3 = 1;

        $z2 = 1;

        $z1 = 1;

     label2:
        i2 = $b5;

        $i1 = r0.<org.apache.batik.css.parser.Scanner: int type>;

        tableswitch($i1)
        {
            case 18: goto label4;
            case 19: goto label3;
            case 20: goto label7;
            case 21: goto label7;
            case 22: goto label7;
            case 23: goto label7;
            case 24: goto label7;
            case 25: goto label7;
            case 26: goto label7;
            case 27: goto label7;
            case 28: goto label7;
            case 29: goto label7;
            case 30: goto label7;
            case 31: goto label7;
            case 32: goto label7;
            case 33: goto label7;
            case 34: goto label7;
            case 35: goto label4;
            case 36: goto label4;
            case 37: goto label4;
            case 38: goto label4;
            case 39: goto label4;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label3;
            case 43: goto label3;
            case 44: goto label4;
            case 45: goto label4;
            case 46: goto label4;
            case 47: goto label5;
            case 48: goto label5;
            case 49: goto label6;
            case 50: goto label5;
            case 51: goto label7;
            case 52: goto label3;
            default: goto label7;
        };

     label3:
        i2 = $z1 + 1;

        goto label7;

     label4:
        i2 = $z3 + 2;

        goto label7;

     label5:
        i2 = $z4 + 3;

        goto label7;

     label6:
        i2 = $z2 + 4;

     label7:
        $i3 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i4 = i2 + $i3;

        return $i4;
    }

    protected void nextToken() throws org.apache.batik.css.parser.ParseException
    {
        org.apache.batik.css.parser.Scanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i57, $i58, $i60, $i61, $i62, $i64, $i65, $i66, $i68, $i69, $i71, $i72, $i73, $i74, $i76, $i78, $i80, $i82, $i84, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i187, $i189, $i190, $i192, $i193, $i195, $i196, $i197, $i198, $i199, $i200, $i201, i202, $i203, $i205, $i207, $i209, $i211, $i213, $i215, $i217, $i219, $i221, $i223, $i225, $i227, $i229, $i231, $i233, $i235, $i237, $i239;
        org.apache.batik.css.parser.ParseException $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, z57, z58, z59;
        java.io.IOException $r64;
        org.apache.batik.util.io.NormalizingReader $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r47, $r48, $r50, $r51, $r53, $r54, $r56, $r57, $r59, $r60, $r62, $r63;
        char $c24, $c37, $c41, $c55, $c59, $c63, $c67, $c70, $c75, $c77, $c79, $c81, $c83, $c85, $c95, $c130, $c161, $c169, $c186, $c188, $c191, $c194;

        r0 := @this: org.apache.batik.css.parser.Scanner;

     label001:
        $i0 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        tableswitch($i0)
        {
            case -1: goto label002;
            case 0: goto label108;
            case 1: goto label108;
            case 2: goto label108;
            case 3: goto label108;
            case 4: goto label108;
            case 5: goto label108;
            case 6: goto label108;
            case 7: goto label108;
            case 8: goto label108;
            case 9: goto label016;
            case 10: goto label016;
            case 11: goto label108;
            case 12: goto label016;
            case 13: goto label016;
            case 14: goto label108;
            case 15: goto label108;
            case 16: goto label108;
            case 17: goto label108;
            case 18: goto label108;
            case 19: goto label108;
            case 20: goto label108;
            case 21: goto label108;
            case 22: goto label108;
            case 23: goto label108;
            case 24: goto label108;
            case 25: goto label108;
            case 26: goto label108;
            case 27: goto label108;
            case 28: goto label108;
            case 29: goto label108;
            case 30: goto label108;
            case 31: goto label108;
            case 32: goto label016;
            case 33: goto label055;
            case 34: goto label026;
            case 35: goto label037;
            case 36: goto label108;
            case 37: goto label108;
            case 38: goto label108;
            case 39: goto label025;
            case 40: goto label013;
            case 41: goto label014;
            case 42: goto label012;
            case 43: goto label006;
            case 44: goto label007;
            case 45: goto label030;
            case 46: goto label060;
            case 47: goto label017;
            case 48: goto label059;
            case 49: goto label059;
            case 50: goto label059;
            case 51: goto label059;
            case 52: goto label059;
            case 53: goto label059;
            case 54: goto label059;
            case 55: goto label059;
            case 56: goto label059;
            case 57: goto label059;
            case 58: goto label015;
            case 59: goto label008;
            case 60: goto label027;
            case 61: goto label005;
            case 62: goto label009;
            case 63: goto label108;
            case 64: goto label043;
            case 65: goto label108;
            case 66: goto label108;
            case 67: goto label108;
            case 68: goto label108;
            case 69: goto label108;
            case 70: goto label108;
            case 71: goto label108;
            case 72: goto label108;
            case 73: goto label108;
            case 74: goto label108;
            case 75: goto label108;
            case 76: goto label108;
            case 77: goto label108;
            case 78: goto label108;
            case 79: goto label108;
            case 80: goto label108;
            case 81: goto label108;
            case 82: goto label108;
            case 83: goto label108;
            case 84: goto label108;
            case 85: goto label063;
            case 86: goto label108;
            case 87: goto label108;
            case 88: goto label108;
            case 89: goto label108;
            case 90: goto label108;
            case 91: goto label010;
            case 92: goto label108;
            case 93: goto label011;
            case 94: goto label108;
            case 95: goto label108;
            case 96: goto label108;
            case 97: goto label108;
            case 98: goto label108;
            case 99: goto label108;
            case 100: goto label108;
            case 101: goto label108;
            case 102: goto label108;
            case 103: goto label108;
            case 104: goto label108;
            case 105: goto label108;
            case 106: goto label108;
            case 107: goto label108;
            case 108: goto label108;
            case 109: goto label108;
            case 110: goto label108;
            case 111: goto label108;
            case 112: goto label108;
            case 113: goto label108;
            case 114: goto label108;
            case 115: goto label108;
            case 116: goto label108;
            case 117: goto label063;
            case 118: goto label108;
            case 119: goto label108;
            case 120: goto label108;
            case 121: goto label108;
            case 122: goto label108;
            case 123: goto label003;
            case 124: goto label033;
            case 125: goto label004;
            case 126: goto label035;
            default: goto label108;
        };

     label002:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 0;

        return;

     label003:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 1;

        return;

     label004:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 2;

        return;

     label005:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 3;

        return;

     label006:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 4;

        return;

     label007:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 6;

        return;

     label008:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 8;

        return;

     label009:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 9;

        return;

     label010:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 11;

        return;

     label011:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 12;

        return;

     label012:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 13;

        return;

     label013:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 14;

        return;

     label014:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 15;

        return;

     label015:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 16;

        return;

     label016:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i187 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c188 = (char) $i187;

        $z54 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c188);

        if $z54 != 0 goto label016;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 17;

        return;

     label017:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i143 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i143 == 42 goto label018;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 10;

        return;

     label018:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i144 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i145 = $i144 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i145;

        goto label020;

     label019:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label020:
        $i199 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i205 = (int) -1;

        if $i199 == $i205 goto label021;

        $i152 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i152 != 42 goto label019;

     label021:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i200 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i207 = (int) -1;

        if $i200 == $i207 goto label022;

        $i151 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i151 == 42 goto label021;

     label022:
        $i146 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i209 = (int) -1;

        if $i146 == $i209 goto label023;

        $i150 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i150 != 47 goto label020;

     label023:
        $i147 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i211 = (int) -1;

        if $i147 != $i211 goto label024;

        $r66 = new org.apache.batik.css.parser.ParseException;

        $r47 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i148 = virtualinvoke $r47.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r48 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i149 = virtualinvoke $r48.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r66.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i148, $i149);

        throw $r66;

     label024:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 18;

        return;

     label025:
        $i159 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int string1()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = $i159;

        return;

     label026:
        $i170 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int string2()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = $i170;

        return;

     label027:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i135 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i135 == 33 goto label028;

        $r67 = new org.apache.batik.css.parser.ParseException;

        $r44 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i140 = virtualinvoke $r44.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r45 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i141 = virtualinvoke $r45.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r67.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i140, $i141);

        throw $r67;

     label028:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i136 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i136 != 45 goto label029;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i139 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i139 != 45 goto label029;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 21;

        return;

     label029:
        $r68 = new org.apache.batik.css.parser.ParseException;

        $r41 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i137 = virtualinvoke $r41.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r42 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i138 = virtualinvoke $r42.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r68.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i137, $i138);

        throw $r68;

     label030:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i155 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i155 == 45 goto label031;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 5;

        return;

     label031:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i156 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i156 != 62 goto label032;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 22;

        return;

     label032:
        $r69 = new org.apache.batik.css.parser.ParseException;

        $r50 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i157 = virtualinvoke $r50.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r51 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i158 = virtualinvoke $r51.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r69.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i157, $i158);

        throw $r69;

     label033:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i4 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i4 != 61 goto label034;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 25;

        return;

     label034:
        $r70 = new org.apache.batik.css.parser.ParseException;

        $r5 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i5 = virtualinvoke $r5.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r6 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r6.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r70.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i5, $i6);

        throw $r70;

     label035:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i1 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i1 != 61 goto label036;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 26;

        return;

     label036:
        $r71 = new org.apache.batik.css.parser.ParseException;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r3 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r3.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r71.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i2, $i3);

        throw $r71;

     label037:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i160 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c161 = (char) $i160;

        $z42 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c161);

        if $z42 == 0 goto label042;

        $i164 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i165 = $i164 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i165;

     label038:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        goto label040;

     label039:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

     label040:
        $i166 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i166 == 92 goto label039;

        $i167 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i213 = (int) -1;

        if $i167 == $i213 goto label041;

        $i168 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c169 = (char) $i168;

        $z43 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c169);

        if $z43 != 0 goto label038;

     label041:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 27;

        return;

     label042:
        $r72 = new org.apache.batik.css.parser.ParseException;

        $r53 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i162 = virtualinvoke $r53.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r54 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i163 = virtualinvoke $r54.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r72.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i162, $i163);

        throw $r72;

     label043:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i88 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i88)
        {
            case 67: goto label044;
            case 70: goto label045;
            case 73: goto label046;
            case 77: goto label047;
            case 80: goto label048;
            case 99: goto label044;
            case 102: goto label045;
            case 105: goto label046;
            case 109: goto label047;
            case 112: goto label048;
            default: goto label049;
        };

     label044:
        $i121 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i122 = $i121 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i122;

        $i123 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z35 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i123, 104);

        if $z35 == 0 goto label051;

        $i124 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z36 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i124, 97);

        if $z36 == 0 goto label051;

        $i125 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z37 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i125, 114);

        if $z37 == 0 goto label051;

        $i126 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z38 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i126, 115);

        if $z38 == 0 goto label051;

        $i127 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z39 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i127, 101);

        if $z39 == 0 goto label051;

        $i128 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z40 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i128, 116);

        if $z40 == 0 goto label051;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 30;

        return;

     label045:
        $i111 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i112 = $i111 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i112;

        $i113 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z27 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i113, 111);

        if $z27 == 0 goto label051;

        $i114 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z28 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i114, 110);

        if $z28 == 0 goto label051;

        $i115 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z29 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i115, 116);

        if $z29 == 0 goto label051;

        $i116 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z30 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i116, 45);

        if $z30 == 0 goto label051;

        $i117 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z31 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i117, 102);

        if $z31 == 0 goto label051;

        $i118 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z32 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i118, 97);

        if $z32 == 0 goto label051;

        $i119 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z33 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i119, 99);

        if $z33 == 0 goto label051;

        $i120 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z34 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i120, 101);

        if $z34 == 0 goto label051;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 31;

        return;

     label046:
        $i104 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i105 = $i104 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i105;

        $i106 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z22 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i106, 109);

        if $z22 == 0 goto label051;

        $i107 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z23 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i107, 112);

        if $z23 == 0 goto label051;

        $i108 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z24 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i108, 111);

        if $z24 == 0 goto label051;

        $i109 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z25 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i109, 114);

        if $z25 == 0 goto label051;

        $i110 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z26 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i110, 116);

        if $z26 == 0 goto label051;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 28;

        return;

     label047:
        $i98 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i99 = $i98 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i99;

        $i100 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z18 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i100, 101);

        if $z18 == 0 goto label051;

        $i101 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z19 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i101, 100);

        if $z19 == 0 goto label051;

        $i102 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z20 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i102, 105);

        if $z20 == 0 goto label051;

        $i103 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z21 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i103, 97);

        if $z21 == 0 goto label051;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 32;

        return;

     label048:
        $i89 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i90 = $i89 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i90;

        $i91 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z14 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i91, 97);

        if $z14 == 0 goto label051;

        $i96 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z16 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i96, 103);

        if $z16 == 0 goto label051;

        $i97 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z17 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i97, 101);

        if $z17 == 0 goto label051;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 33;

        return;

     label049:
        $i129 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c130 = (char) $i129;

        $z41 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSIdentifierStartCharacter(char)>($c130);

        if $z41 != 0 goto label050;

        $r73 = new org.apache.batik.css.parser.ParseException;

        $r38 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i133 = virtualinvoke $r38.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r39 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i134 = virtualinvoke $r39.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r73.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("identifier.character", $i133, $i134);

        throw $r73;

     label050:
        $i131 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i132 = $i131 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i132;

     label051:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        goto label053;

     label052:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

     label053:
        $i92 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i92 == 92 goto label052;

        $i93 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i215 = (int) -1;

        if $i93 == $i215 goto label054;

        $i94 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c95 = (char) $i94;

        $z15 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c95);

        if $z15 != 0 goto label051;

     label054:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 29;

        return;

     label055:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i171 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i217 = (int) -1;

        if $i171 == $i217 goto label056;

        $i185 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c186 = (char) $i185;

        $z53 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c186);

        if $z53 != 0 goto label055;

     label056:
        $i172 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $z44 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i172, 105);

        if $z44 == 0 goto label057;

        $i177 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z45 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i177, 109);

        if $z45 == 0 goto label057;

        $i178 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z46 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i178, 112);

        if $z46 == 0 goto label057;

        $i179 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z47 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i179, 111);

        if $z47 == 0 goto label057;

        $i180 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z48 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i180, 114);

        if $z48 == 0 goto label057;

        $i181 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z49 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i181, 116);

        if $z49 == 0 goto label057;

        $i182 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z50 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i182, 97);

        if $z50 == 0 goto label057;

        $i183 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z51 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i183, 110);

        if $z51 == 0 goto label057;

        $i184 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $z52 = staticinvoke <org.apache.batik.css.parser.Scanner: boolean isEqualIgnoreCase(int,char)>($i184, 116);

        if $z52 == 0 goto label057;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 23;

        return;

     label057:
        $i201 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i219 = (int) -1;

        if $i201 != $i219 goto label058;

        $r74 = new org.apache.batik.css.parser.ParseException;

        $r59 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i175 = virtualinvoke $r59.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r60 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i176 = virtualinvoke $r60.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r74.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i175, $i176);

        throw $r74;

     label058:
        $r75 = new org.apache.batik.css.parser.ParseException;

        $r56 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i173 = virtualinvoke $r56.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r57 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i174 = virtualinvoke $r57.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r75.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i173, $i174);

        throw $r75;

     label059:
        $i142 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int number()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = $i142;

        return;

     label060:
        $i153 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        tableswitch($i153)
        {
            case 48: goto label061;
            case 49: goto label061;
            case 50: goto label061;
            case 51: goto label061;
            case 52: goto label061;
            case 53: goto label061;
            case 54: goto label061;
            case 55: goto label061;
            case 56: goto label061;
            case 57: goto label061;
            default: goto label062;
        };

     label061:
        $i154 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int dotNumber()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = $i154;

        return;

     label062:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 7;

        return;

     label063:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i7 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i7)
        {
            case 43: goto label064;
            case 82: goto label077;
            case 114: goto label077;
            default: goto label103;
        };

     label064:
        z57 = 0;

        z59 = 0;

        z58 = 0;

        i202 = 0;

        goto label069;

     label065:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i68 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i68)
        {
            case 63: goto label066;
            default: goto label067;
        };

     label066:
        z57 = 1;

        z59 = 1;

        z58 = 1;

        goto label068;

     label067:
        if z59 == 0 goto label068;

        $i69 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c70 = (char) $i69;

        $z7 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c70);

        if $z7 != 0 goto label068;

        $r76 = new org.apache.batik.css.parser.ParseException;

        $r32 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i71 = virtualinvoke $r32.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r33 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i72 = virtualinvoke $r33.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r76.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i71, $i72);

        throw $r76;

     label068:
        i202 = i202 + 1;

     label069:
        if i202 < 6 goto label065;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        if z58 == 0 goto label070;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label070:
        $i73 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i73 != 45 goto label077;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i74 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c75 = (char) $i74;

        $z8 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c75);

        if $z8 != 0 goto label071;

        $r77 = new org.apache.batik.css.parser.ParseException;

        $r35 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i86 = virtualinvoke $r35.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r36 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i87 = virtualinvoke $r36.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r77.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i86, $i87);

        throw $r77;

     label071:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i76 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c77 = (char) $i76;

        $z9 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c77);

        if $z9 != 0 goto label072;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label072:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i78 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c79 = (char) $i78;

        $z10 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c79);

        if $z10 != 0 goto label073;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label073:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i80 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c81 = (char) $i80;

        $z11 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c81);

        if $z11 != 0 goto label074;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label074:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i82 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c83 = (char) $i82;

        $z12 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c83);

        if $z12 != 0 goto label075;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label075:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i84 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c85 = (char) $i84;

        $z13 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c85);

        if $z13 != 0 goto label076;

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label076:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 53;

        return;

     label077:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i8 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i8)
        {
            case 76: goto label078;
            case 108: goto label078;
            default: goto label103;
        };

     label078:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i9 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i9)
        {
            case 40: goto label079;
            default: goto label103;
        };

     label079:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i10 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i221 = (int) -1;

        if $i10 == $i221 goto label080;

        $i62 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c63 = (char) $i62;

        $z5 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c63);

        if $z5 != 0 goto label079;

     label080:
        $i11 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i11)
        {
            case 34: goto label087;
            case 39: goto label081;
            case 41: goto label093;
            default: goto label094;
        };

     label081:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int string1()>();

        $i14 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i15 = $i14 + 2;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i15;

        goto label083;

     label082:
        $i25 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i26 = $i25 + 1;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i26;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label083:
        $i16 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i223 = (int) -1;

        if $i16 == $i223 goto label084;

        $i23 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c24 = (char) $i23;

        $z0 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c24);

        if $z0 != 0 goto label082;

     label084:
        $i17 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i225 = (int) -1;

        if $i17 != $i225 goto label085;

        $r78 = new org.apache.batik.css.parser.ParseException;

        $r14 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i21 = virtualinvoke $r14.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r15 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i22 = virtualinvoke $r15.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r78.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i21, $i22);

        throw $r78;

     label085:
        $i18 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i18 == 41 goto label086;

        $r79 = new org.apache.batik.css.parser.ParseException;

        $r11 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i19 = virtualinvoke $r11.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r12 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i20 = virtualinvoke $r12.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r79.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i19, $i20);

        throw $r79;

     label086:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 51;

        return;

     label087:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int string2()>();

        $i27 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i28 = $i27 + 2;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i28;

        goto label089;

     label088:
        $i38 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i39 = $i38 + 1;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i39;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label089:
        $i29 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i227 = (int) -1;

        if $i29 == $i227 goto label090;

        $i36 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c37 = (char) $i36;

        $z1 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c37);

        if $z1 != 0 goto label088;

     label090:
        $i30 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i229 = (int) -1;

        if $i30 != $i229 goto label091;

        $r80 = new org.apache.batik.css.parser.ParseException;

        $r20 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i34 = virtualinvoke $r20.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r21 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i35 = virtualinvoke $r21.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r80.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i34, $i35);

        throw $r80;

     label091:
        $i31 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i31 == 41 goto label092;

        $r81 = new org.apache.batik.css.parser.ParseException;

        $r17 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i32 = virtualinvoke $r17.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r18 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i33 = virtualinvoke $r18.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r81.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i32, $i33);

        throw $r81;

     label092:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 51;

        return;

     label093:
        $r82 = new org.apache.batik.css.parser.ParseException;

        $r8 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r8.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r9 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i13 = virtualinvoke $r9.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r82.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i12, $i13);

        throw $r82;

     label094:
        $i40 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c41 = (char) $i40;

        $z2 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSURICharacter(char)>($c41);

        if $z2 != 0 goto label095;

        $r83 = new org.apache.batik.css.parser.ParseException;

        $r29 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i60 = virtualinvoke $r29.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r30 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i61 = virtualinvoke $r30.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r83.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i60, $i61);

        throw $r83;

     label095:
        $i42 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i43 = $i42 - 1;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i43;

     label096:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i44 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i231 = (int) -1;

        if $i44 == $i231 goto label097;

        $i58 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c59 = (char) $i58;

        $z4 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSURICharacter(char)>($c59);

        if $z4 != 0 goto label096;

     label097:
        $i45 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i46 = $i45 + 1;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i46;

        goto label099;

     label098:
        $i56 = r0.<org.apache.batik.css.parser.Scanner: int blankCharacters>;

        $i57 = $i56 + 1;

        r0.<org.apache.batik.css.parser.Scanner: int blankCharacters> = $i57;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label099:
        $i47 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i233 = (int) -1;

        if $i47 == $i233 goto label100;

        $i54 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c55 = (char) $i54;

        $z3 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c55);

        if $z3 != 0 goto label098;

     label100:
        $i48 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i235 = (int) -1;

        if $i48 != $i235 goto label101;

        $r84 = new org.apache.batik.css.parser.ParseException;

        $r26 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i52 = virtualinvoke $r26.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r27 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i53 = virtualinvoke $r27.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r84.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i52, $i53);

        throw $r84;

     label101:
        $i49 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i49 == 41 goto label102;

        $r85 = new org.apache.batik.css.parser.ParseException;

        $r23 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i50 = virtualinvoke $r23.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r24 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i51 = virtualinvoke $r24.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r85.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i50, $i51);

        throw $r85;

     label102:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 51;

        return;

     label103:
        goto label105;

     label104:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label105:
        $i64 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i237 = (int) -1;

        if $i64 == $i237 goto label106;

        $i66 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c67 = (char) $i66;

        $z6 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c67);

        if $z6 != 0 goto label104;

     label106:
        $i65 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i65 != 40 goto label107;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 52;

        return;

     label107:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 20;

        return;

     label108:
        $i189 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i189 != 92 goto label110;

     label109:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

        $i198 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i198 == 92 goto label109;

        goto label114;

     label110:
        $i190 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c191 = (char) $i190;

        $z55 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSIdentifierStartCharacter(char)>($c191);

        if $z55 != 0 goto label114;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $r86 = new org.apache.batik.css.parser.ParseException;

        $r62 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i196 = virtualinvoke $r62.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r63 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i197 = virtualinvoke $r63.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r86.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("identifier.character", $i196, $i197);

        throw $r86;

     label111:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        goto label113;

     label112:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

     label113:
        $i195 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i195 == 92 goto label112;

     label114:
        $i203 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i239 = (int) -1;

        if $i203 == $i239 goto label115;

        $i193 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c194 = (char) $i193;

        $z56 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c194);

        if $z56 != 0 goto label111;

     label115:
        $i192 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i192 != 40 goto label116;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        r0.<org.apache.batik.css.parser.Scanner: int type> = 52;

        return;

     label116:
        r0.<org.apache.batik.css.parser.Scanner: int type> = 20;

        return;

     label117:
        $r64 := @caughtexception;

        $r87 = new org.apache.batik.css.parser.ParseException;

        specialinvoke $r87.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.Exception)>($r64);

        throw $r87;

        catch java.io.IOException from label001 to label117 with label117;
    }

    protected int string1() throws java.io.IOException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.NormalizingReader $r2, $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean $z0;
        char $c5;
        org.apache.batik.css.parser.ParseException $r1, $r4;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i0;

        goto label1;

     label1:
        $i8 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i8)
        {
            case -1: goto label2;
            case 34: goto label4;
            case 39: goto label3;
            case 92: goto label5;
            default: goto label8;
        };

     label2:
        $r1 = new org.apache.batik.css.parser.ParseException;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r3 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r3.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r1.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i2, $i3);

        throw $r1;

     label3:
        goto label9;

     label4:
        goto label1;

     label5:
        $i1 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i1)
        {
            case 10: goto label6;
            case 12: goto label6;
            default: goto label7;
        };

     label6:
        goto label1;

     label7:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

        goto label1;

     label8:
        $i4 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c5 = (char) $i4;

        $z0 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSStringCharacter(char)>($c5);

        if $z0 != 0 goto label1;

        $r4 = new org.apache.batik.css.parser.ParseException;

        $r5 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r5.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r6 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r6.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r4.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i6, $i7);

        throw $r4;

     label9:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        return 19;
    }

    protected int string2() throws java.io.IOException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.NormalizingReader $r2, $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean $z0;
        char $c5;
        org.apache.batik.css.parser.ParseException $r1, $r4;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        r0.<org.apache.batik.css.parser.Scanner: int start> = $i0;

        goto label1;

     label1:
        $i8 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i8)
        {
            case -1: goto label2;
            case 34: goto label4;
            case 39: goto label3;
            case 92: goto label5;
            default: goto label8;
        };

     label2:
        $r1 = new org.apache.batik.css.parser.ParseException;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r2.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r3 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r3.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r1.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("eof", $i2, $i3);

        throw $r1;

     label3:
        goto label1;

     label4:
        goto label9;

     label5:
        $i1 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i1)
        {
            case 10: goto label6;
            case 12: goto label6;
            default: goto label7;
        };

     label6:
        goto label1;

     label7:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: void escape()>();

        goto label1;

     label8:
        $i4 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c5 = (char) $i4;

        $z0 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSStringCharacter(char)>($c5);

        if $z0 != 0 goto label1;

        $r4 = new org.apache.batik.css.parser.ParseException;

        $r5 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r5.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r6 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r6.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r4.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i6, $i7);

        throw $r4;

     label9:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        return 19;
    }

    protected int number() throws java.io.IOException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.NormalizingReader $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.batik.css.parser.ParseException $r1;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        goto label1;

     label1:
        $i0 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        tableswitch($i0)
        {
            case 46: goto label2;
            case 47: goto label5;
            case 48: goto label6;
            case 49: goto label6;
            case 50: goto label6;
            case 51: goto label6;
            case 52: goto label6;
            case 53: goto label6;
            case 54: goto label6;
            case 55: goto label6;
            case 56: goto label6;
            case 57: goto label6;
            default: goto label5;
        };

     label2:
        $i1 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        tableswitch($i1)
        {
            case 48: goto label3;
            case 49: goto label3;
            case 50: goto label3;
            case 51: goto label3;
            case 52: goto label3;
            case 53: goto label3;
            case 54: goto label3;
            case 55: goto label3;
            case 56: goto label3;
            case 57: goto label3;
            default: goto label4;
        };

     label3:
        $i2 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int dotNumber()>();

        return $i2;

     label4:
        $r1 = new org.apache.batik.css.parser.ParseException;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r2.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r3 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r3.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r1.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i3, $i4);

        throw $r1;

     label5:
        goto label7;

     label6:
        goto label1;

     label7:
        $i5 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int numberUnit(boolean)>(1);

        return $i5;
    }

    protected int dotNumber() throws java.io.IOException
    {
        int $i0, $i1;
        org.apache.batik.css.parser.Scanner r0;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        goto label1;

     label1:
        $i0 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        tableswitch($i0)
        {
            case 48: goto label3;
            case 49: goto label3;
            case 50: goto label3;
            case 51: goto label3;
            case 52: goto label3;
            case 53: goto label3;
            case 54: goto label3;
            case 55: goto label3;
            case 56: goto label3;
            case 57: goto label3;
            default: goto label2;
        };

     label2:
        goto label4;

     label3:
        goto label1;

     label4:
        $i1 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int numberUnit(boolean)>(0);

        return $i1;
    }

    protected int numberUnit(boolean) throws java.io.IOException
    {
        byte $b136;
        org.apache.batik.css.parser.Scanner r0;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23, $i25, $i26, $i28, $i29, $i31, $i32, $i34, $i35, $i36, $i38, $i39, $i41, $i42, $i44, $i45, $i47, $i48, $i50, $i51, $i52, $i53, $i55, $i56, $i58, $i59, $i61, $i62, $i63, $i65, $i66, $i68, $i69, $i71, $i72, $i73, $i75, $i76, $i78, $i79, $i81, $i82, $i83, $i84, $i85, $i87, $i88, $i90, $i91, $i93, $i94, $i95, $i97, $i98, $i100, $i101, $i103, $i104, $i106, $i107, $i109, $i110, $i111, $i112, $i114, $i115, $i117, $i118, $i120, $i121, $i122, $i124, $i125, $i127, $i128, $i130, $i131, $i133, $i134, $i138, $i140, $i142, $i144, $i146, $i148, $i150, $i152, $i154, $i156, $i158, $i160, $i162, $i164, $i166, $i168, $i170, $i172, $i174, $i176, $i178, $i180, $i182, $i184, $i186, $i188, $i190, $i192, $i194, $i196, $i198, $i200, $i202, $i204, $i206, $i208, $i210, $i212, $i214, $i216;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, z38, $z39, $z40;
        char $c5, $c8, $c11, $c15, $c18, $c21, $c24, $c27, $c30, $c33, $c37, $c40, $c43, $c46, $c49, $c54, $c57, $c60, $c64, $c67, $c70, $c74, $c77, $c80, $c86, $c89, $c92, $c96, $c99, $c102, $c105, $c108, $c113, $c116, $c119, $c123, $c126, $c129, $c132, $c135;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        z38 := @parameter0: boolean;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        tableswitch($i0)
        {
            case 37: goto label001;
            case 38: goto label114;
            case 39: goto label114;
            case 40: goto label114;
            case 41: goto label114;
            case 42: goto label114;
            case 43: goto label114;
            case 44: goto label114;
            case 45: goto label114;
            case 46: goto label114;
            case 47: goto label114;
            case 48: goto label114;
            case 49: goto label114;
            case 50: goto label114;
            case 51: goto label114;
            case 52: goto label114;
            case 53: goto label114;
            case 54: goto label114;
            case 55: goto label114;
            case 56: goto label114;
            case 57: goto label114;
            case 58: goto label114;
            case 59: goto label114;
            case 60: goto label114;
            case 61: goto label114;
            case 62: goto label114;
            case 63: goto label114;
            case 64: goto label114;
            case 65: goto label114;
            case 66: goto label114;
            case 67: goto label002;
            case 68: goto label011;
            case 69: goto label021;
            case 70: goto label114;
            case 71: goto label034;
            case 72: goto label045;
            case 73: goto label054;
            case 74: goto label114;
            case 75: goto label063;
            case 76: goto label114;
            case 77: goto label073;
            case 78: goto label114;
            case 79: goto label114;
            case 80: goto label086;
            case 81: goto label114;
            case 82: goto label103;
            case 83: goto label113;
            case 84: goto label114;
            case 85: goto label114;
            case 86: goto label114;
            case 87: goto label114;
            case 88: goto label114;
            case 89: goto label114;
            case 90: goto label114;
            case 91: goto label114;
            case 92: goto label114;
            case 93: goto label114;
            case 94: goto label114;
            case 95: goto label114;
            case 96: goto label114;
            case 97: goto label114;
            case 98: goto label114;
            case 99: goto label002;
            case 100: goto label011;
            case 101: goto label021;
            case 102: goto label114;
            case 103: goto label034;
            case 104: goto label045;
            case 105: goto label054;
            case 106: goto label114;
            case 107: goto label063;
            case 108: goto label114;
            case 109: goto label073;
            case 110: goto label114;
            case 111: goto label114;
            case 112: goto label086;
            case 113: goto label114;
            case 114: goto label103;
            case 115: goto label113;
            default: goto label114;
        };

     label001:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        return 42;

     label002:
        $i120 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i120)
        {
            case 77: goto label003;
            case 109: goto label003;
            default: goto label007;
        };

     label003:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i121 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i138 = (int) -1;

        if $i121 == $i138 goto label006;

        $i122 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c123 = (char) $i122;

        $z35 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c123);

        if $z35 == 0 goto label006;

     label004:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i124 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i140 = (int) -1;

        if $i124 == $i140 goto label005;

        $i125 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c126 = (char) $i125;

        $z36 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c126);

        if $z36 != 0 goto label004;

     label005:
        return 34;

     label006:
        return 37;

     label007:
        goto label009;

     label008:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label009:
        $i127 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i142 = (int) -1;

        if $i127 == $i142 goto label010;

        $i128 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c129 = (char) $i128;

        $z37 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c129);

        if $z37 != 0 goto label008;

     label010:
        return 34;

     label011:
        $i109 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i109)
        {
            case 69: goto label012;
            case 101: goto label012;
            default: goto label017;
        };

     label012:
        $i110 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i110)
        {
            case 71: goto label013;
            case 103: goto label013;
            default: goto label017;
        };

     label013:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i111 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i144 = (int) -1;

        if $i111 == $i144 goto label016;

        $i112 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c113 = (char) $i112;

        $z32 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c113);

        if $z32 == 0 goto label016;

     label014:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i114 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i146 = (int) -1;

        if $i114 == $i146 goto label015;

        $i115 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c116 = (char) $i115;

        $z33 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c116);

        if $z33 != 0 goto label014;

     label015:
        return 34;

     label016:
        return 47;

     label017:
        goto label019;

     label018:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label019:
        $i117 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i148 = (int) -1;

        if $i117 == $i148 goto label020;

        $i118 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c119 = (char) $i118;

        $z34 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c119);

        if $z34 != 0 goto label018;

     label020:
        return 34;

     label021:
        $i93 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i93)
        {
            case 77: goto label022;
            case 88: goto label026;
            case 109: goto label022;
            case 120: goto label026;
            default: goto label030;
        };

     label022:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i100 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i150 = (int) -1;

        if $i100 == $i150 goto label025;

        $i101 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c102 = (char) $i101;

        $z29 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c102);

        if $z29 == 0 goto label025;

     label023:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i103 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i152 = (int) -1;

        if $i103 == $i152 goto label024;

        $i104 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c105 = (char) $i104;

        $z30 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c105);

        if $z30 != 0 goto label023;

     label024:
        return 34;

     label025:
        return 36;

     label026:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i94 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i154 = (int) -1;

        if $i94 == $i154 goto label029;

        $i95 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c96 = (char) $i95;

        $z27 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c96);

        if $z27 == 0 goto label029;

     label027:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i97 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i156 = (int) -1;

        if $i97 == $i156 goto label028;

        $i98 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c99 = (char) $i98;

        $z28 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c99);

        if $z28 != 0 goto label027;

     label028:
        return 34;

     label029:
        return 35;

     label030:
        goto label032;

     label031:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label032:
        $i106 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i158 = (int) -1;

        if $i106 == $i158 goto label033;

        $i107 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c108 = (char) $i107;

        $z31 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c108);

        if $z31 != 0 goto label031;

     label033:
        return 34;

     label034:
        $i81 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i81)
        {
            case 82: goto label035;
            case 114: goto label035;
            default: goto label041;
        };

     label035:
        $i82 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i82)
        {
            case 65: goto label036;
            case 97: goto label036;
            default: goto label041;
        };

     label036:
        $i83 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i83)
        {
            case 68: goto label037;
            case 100: goto label037;
            default: goto label041;
        };

     label037:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i84 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i160 = (int) -1;

        if $i84 == $i160 goto label040;

        $i85 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c86 = (char) $i85;

        $z24 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c86);

        if $z24 == 0 goto label040;

     label038:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i87 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i162 = (int) -1;

        if $i87 == $i162 goto label039;

        $i88 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c89 = (char) $i88;

        $z25 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c89);

        if $z25 != 0 goto label038;

     label039:
        return 34;

     label040:
        return 49;

     label041:
        goto label043;

     label042:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label043:
        $i90 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i164 = (int) -1;

        if $i90 == $i164 goto label044;

        $i91 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c92 = (char) $i91;

        $z26 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c92);

        if $z26 != 0 goto label042;

     label044:
        return 34;

     label045:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i71 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        lookupswitch($i71)
        {
            case 90: goto label046;
            case 122: goto label046;
            default: goto label050;
        };

     label046:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i72 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i166 = (int) -1;

        if $i72 == $i166 goto label049;

        $i73 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c74 = (char) $i73;

        $z21 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c74);

        if $z21 == 0 goto label049;

     label047:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i75 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i168 = (int) -1;

        if $i75 == $i168 goto label048;

        $i76 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c77 = (char) $i76;

        $z22 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c77);

        if $z22 != 0 goto label047;

     label048:
        return 34;

     label049:
        return 41;

     label050:
        goto label052;

     label051:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label052:
        $i78 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i170 = (int) -1;

        if $i78 == $i170 goto label053;

        $i79 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c80 = (char) $i79;

        $z23 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c80);

        if $z23 != 0 goto label051;

     label053:
        return 34;

     label054:
        $i61 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i61)
        {
            case 78: goto label055;
            case 110: goto label055;
            default: goto label059;
        };

     label055:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i62 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i172 = (int) -1;

        if $i62 == $i172 goto label058;

        $i63 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c64 = (char) $i63;

        $z18 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c64);

        if $z18 == 0 goto label058;

     label056:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i65 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i174 = (int) -1;

        if $i65 == $i174 goto label057;

        $i66 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c67 = (char) $i66;

        $z19 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c67);

        if $z19 != 0 goto label056;

     label057:
        return 34;

     label058:
        return 39;

     label059:
        goto label061;

     label060:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label061:
        $i68 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i176 = (int) -1;

        if $i68 == $i176 goto label062;

        $i69 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c70 = (char) $i69;

        $z20 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c70);

        if $z20 != 0 goto label060;

     label062:
        return 34;

     label063:
        $i50 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i50)
        {
            case 72: goto label064;
            case 104: goto label064;
            default: goto label069;
        };

     label064:
        $i51 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i51)
        {
            case 90: goto label065;
            case 122: goto label065;
            default: goto label069;
        };

     label065:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i52 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i178 = (int) -1;

        if $i52 == $i178 goto label068;

        $i53 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c54 = (char) $i53;

        $z15 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c54);

        if $z15 == 0 goto label068;

     label066:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i55 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i180 = (int) -1;

        if $i55 == $i180 goto label067;

        $i56 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c57 = (char) $i56;

        $z16 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c57);

        if $z16 != 0 goto label066;

     label067:
        return 34;

     label068:
        return 50;

     label069:
        goto label071;

     label070:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label071:
        $i58 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i182 = (int) -1;

        if $i58 == $i182 goto label072;

        $i59 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c60 = (char) $i59;

        $z17 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c60);

        if $z17 != 0 goto label070;

     label072:
        return 34;

     label073:
        $i34 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i34)
        {
            case 77: goto label074;
            case 83: goto label078;
            case 109: goto label074;
            case 115: goto label078;
            default: goto label082;
        };

     label074:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i41 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i184 = (int) -1;

        if $i41 == $i184 goto label077;

        $i42 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c43 = (char) $i42;

        $z12 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c43);

        if $z12 == 0 goto label077;

     label075:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i44 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i186 = (int) -1;

        if $i44 == $i186 goto label076;

        $i45 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c46 = (char) $i45;

        $z13 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c46);

        if $z13 != 0 goto label075;

     label076:
        return 34;

     label077:
        return 38;

     label078:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i35 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i188 = (int) -1;

        if $i35 == $i188 goto label081;

        $i36 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c37 = (char) $i36;

        $z10 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c37);

        if $z10 == 0 goto label081;

     label079:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i38 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i190 = (int) -1;

        if $i38 == $i190 goto label080;

        $i39 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c40 = (char) $i39;

        $z11 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c40);

        if $z11 != 0 goto label079;

     label080:
        return 34;

     label081:
        return 40;

     label082:
        goto label084;

     label083:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label084:
        $i47 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i192 = (int) -1;

        if $i47 == $i192 goto label085;

        $i48 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c49 = (char) $i48;

        $z14 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c49);

        if $z14 != 0 goto label083;

     label085:
        return 34;

     label086:
        $i12 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i12)
        {
            case 67: goto label087;
            case 84: goto label091;
            case 88: goto label095;
            case 99: goto label087;
            case 116: goto label091;
            case 120: goto label095;
            default: goto label099;
        };

     label087:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i25 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i194 = (int) -1;

        if $i25 == $i194 goto label090;

        $i26 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c27 = (char) $i26;

        $z7 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c27);

        if $z7 == 0 goto label090;

     label088:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i28 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i196 = (int) -1;

        if $i28 == $i196 goto label089;

        $i29 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c30 = (char) $i29;

        $z8 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c30);

        if $z8 != 0 goto label088;

     label089:
        return 34;

     label090:
        return 44;

     label091:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i19 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i198 = (int) -1;

        if $i19 == $i198 goto label094;

        $i20 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c21 = (char) $i20;

        $z5 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c21);

        if $z5 == 0 goto label094;

     label092:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i22 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i200 = (int) -1;

        if $i22 == $i200 goto label093;

        $i23 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c24 = (char) $i23;

        $z6 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c24);

        if $z6 != 0 goto label092;

     label093:
        return 34;

     label094:
        return 45;

     label095:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i13 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i202 = (int) -1;

        if $i13 == $i202 goto label098;

        $i14 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c15 = (char) $i14;

        $z3 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c15);

        if $z3 == 0 goto label098;

     label096:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i16 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i204 = (int) -1;

        if $i16 == $i204 goto label097;

        $i17 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c18 = (char) $i17;

        $z4 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c18);

        if $z4 != 0 goto label096;

     label097:
        return 34;

     label098:
        return 46;

     label099:
        goto label101;

     label100:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label101:
        $i31 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i206 = (int) -1;

        if $i31 == $i206 goto label102;

        $i32 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c33 = (char) $i32;

        $z9 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c33);

        if $z9 != 0 goto label100;

     label102:
        return 34;

     label103:
        $i1 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i1)
        {
            case 65: goto label104;
            case 97: goto label104;
            default: goto label109;
        };

     label104:
        $i2 = virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        lookupswitch($i2)
        {
            case 68: goto label105;
            case 100: goto label105;
            default: goto label109;
        };

     label105:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i3 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i208 = (int) -1;

        if $i3 == $i208 goto label108;

        $i4 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c5 = (char) $i4;

        $z0 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c5);

        if $z0 == 0 goto label108;

     label106:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i6 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i210 = (int) -1;

        if $i6 == $i210 goto label107;

        $i7 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c8 = (char) $i7;

        $z1 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c8);

        if $z1 != 0 goto label106;

     label107:
        return 34;

     label108:
        return 48;

     label109:
        goto label111;

     label110:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label111:
        $i9 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i212 = (int) -1;

        if $i9 == $i212 goto label112;

        $i10 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c11 = (char) $i10;

        $z2 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c11);

        if $z2 != 0 goto label110;

     label112:
        return 34;

     label113:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        return 43;

     label114:
        $i130 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i214 = (int) -1;

        if $i130 == $i214 goto label117;

        $i131 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c132 = (char) $i131;

        $z39 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSIdentifierStartCharacter(char)>($c132);

        if $z39 == 0 goto label117;

     label115:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i133 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i216 = (int) -1;

        if $i133 == $i216 goto label116;

        $i134 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c135 = (char) $i134;

        $z40 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSNameCharacter(char)>($c135);

        if $z40 != 0 goto label115;

     label116:
        return 34;

     label117:
        if z38 == 0 goto label118;

        $b136 = 24;

        goto label119;

     label118:
        $b136 = 54;

     label119:
        return $b136;
    }

    protected void escape() throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.batik.css.parser.ParseException $r1;
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.NormalizingReader $r2, $r3;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25;
        char $c1, $c8, $c10, $c12, $c14, $c16, $c18, $c20, $c22, $c24, $c26;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $i0 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c1 = (char) $i0;

        $z0 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c1);

        if $z0 == 0 goto label10;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i7 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c8 = (char) $i7;

        $z1 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c8);

        if $z1 != 0 goto label02;

        $i25 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c26 = (char) $i25;

        $z10 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c26);

        if $z10 == 0 goto label01;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label01:
        return;

     label02:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i9 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c10 = (char) $i9;

        $z2 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c10);

        if $z2 != 0 goto label04;

        $i23 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c24 = (char) $i23;

        $z9 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c24);

        if $z9 == 0 goto label03;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label03:
        return;

     label04:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i11 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c12 = (char) $i11;

        $z3 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c12);

        if $z3 != 0 goto label06;

        $i21 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c22 = (char) $i21;

        $z8 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c22);

        if $z8 == 0 goto label05;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label05:
        return;

     label06:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i13 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c14 = (char) $i13;

        $z4 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c14);

        if $z4 != 0 goto label08;

        $i19 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c20 = (char) $i19;

        $z7 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c20);

        if $z7 == 0 goto label07;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label07:
        return;

     label08:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        $i15 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c16 = (char) $i15;

        $z5 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSHexadecimalCharacter(char)>($c16);

        if $z5 != 0 goto label10;

        $i17 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c18 = (char) $i17;

        $z6 = staticinvoke <org.apache.batik.css.parser.ScannerUtilities: boolean isCSSSpace(char)>($c18);

        if $z6 == 0 goto label09;

        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

     label09:
        return;

     label10:
        $i2 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i2 < 32 goto label11;

        $i6 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i6 <= 126 goto label12;

     label11:
        $i3 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        if $i3 < 128 goto label13;

     label12:
        virtualinvoke r0.<org.apache.batik.css.parser.Scanner: int nextChar()>();

        return;

     label13:
        $r1 = new org.apache.batik.css.parser.ParseException;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r2.<org.apache.batik.util.io.NormalizingReader: int getLine()>();

        $r3 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i5 = virtualinvoke $r3.<org.apache.batik.util.io.NormalizingReader: int getColumn()>();

        specialinvoke $r1.<org.apache.batik.css.parser.ParseException: void <init>(java.lang.String,int,int)>("character", $i4, $i5);

        throw $r1;
    }

    protected static boolean isEqualIgnoreCase(int, char)
    {
        char $c1, $c2, c3;
        int i0, $i5, $i6, $i7;
        boolean $z0;

        i0 := @parameter0: int;

        c3 := @parameter1: char;

        $i5 = (int) -1;

        if i0 != $i5 goto label1;

        $z0 = 0;

        goto label3;

     label1:
        $c1 = (char) i0;

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $i6 = (int) $c2;

        $i7 = (int) c3;

        if $i6 != $i7 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected int nextChar() throws java.io.IOException
    {
        org.apache.batik.css.parser.Scanner r0;
        org.apache.batik.util.io.NormalizingReader $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17;
        char $c7;
        char[] $r2, $r3, r4, $r5;

        r0 := @this: org.apache.batik.css.parser.Scanner;

        $r1 = r0.<org.apache.batik.css.parser.Scanner: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.css.parser.Scanner: int current> = $i0;

        $i1 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $i16 = (int) -1;

        if $i1 != $i16 goto label1;

        $i14 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        return $i14;

     label1:
        $i3 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $r2 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $i2 = lengthof $r2;

        if $i3 != $i2 goto label2;

        $i8 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i11 = 1 + $i8;

        $i9 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i10 = $i9 / 2;

        $i12 = $i11 + $i10;

        r4 = newarray (char)[$i12];

        $r5 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $i13 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i13);

        r0.<org.apache.batik.css.parser.Scanner: char[] buffer> = r4;

     label2:
        $r3 = r0.<org.apache.batik.css.parser.Scanner: char[] buffer>;

        $i4 = r0.<org.apache.batik.css.parser.Scanner: int position>;

        $i5 = $i4 + 1;

        r0.<org.apache.batik.css.parser.Scanner: int position> = $i5;

        $i6 = r0.<org.apache.batik.css.parser.Scanner: int current>;

        $c7 = (char) $i6;

        $r3[$i4] = $c7;

        $i17 = (int) $c7;

        return $i17;
    }
}
