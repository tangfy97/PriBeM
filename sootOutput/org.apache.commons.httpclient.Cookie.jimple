public class org.apache.commons.httpclient.Cookie extends org.apache.commons.httpclient.NameValuePair implements java.io.Serializable, java.util.Comparator
{
    private java.lang.String cookieComment;
    private java.lang.String cookieDomain;
    private java.util.Date cookieExpiryDate;
    private java.lang.String cookiePath;
    private boolean isSecure;
    private boolean hasPathAttribute;
    private boolean hasDomainAttribute;
    private int cookieVersion;
    private static final org.apache.commons.logging.Log LOG;
    static java.lang.Class class$org$apache$commons$httpclient$Cookie;

    public void <init>()
    {
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        specialinvoke r0.<org.apache.commons.httpclient.Cookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean)>(null, "noname", null, null, null, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, r3;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.Cookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean)>(r1, r2, r3, null, null, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Date, boolean)
    {
        java.util.Date r7;
        java.lang.IllegalArgumentException $r8, $r9;
        org.apache.commons.httpclient.Cookie r0;
        org.apache.commons.logging.Log $r3;
        java.lang.String r1, r2, $r4, r5, r6;
        boolean $z0, z1;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r7 := @parameter4: java.util.Date;

        z1 := @parameter5: boolean;

        specialinvoke r0.<org.apache.commons.httpclient.NameValuePair: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<org.apache.commons.httpclient.Cookie: boolean hasPathAttribute> = 0;

        r0.<org.apache.commons.httpclient.Cookie: boolean hasDomainAttribute> = 0;

        r0.<org.apache.commons.httpclient.Cookie: int cookieVersion> = 0;

        $r3 = <org.apache.commons.httpclient.Cookie: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter Cookie(String, String, String, String, Date, boolean)");

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie name may not be null");

        throw $r9;

     label1:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie name may not be blank");

        throw $r8;

     label2:
        virtualinvoke r0.<org.apache.commons.httpclient.Cookie: void setPath(java.lang.String)>(r5);

        virtualinvoke r0.<org.apache.commons.httpclient.Cookie: void setDomain(java.lang.String)>(r6);

        virtualinvoke r0.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>(r7);

        virtualinvoke r0.<org.apache.commons.httpclient.Cookie: void setSecure(boolean)>(z1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, boolean)
    {
        java.util.Date $r14;
        long $l1, $l2, $l3, $l4;
        java.lang.StringBuffer $r8, $r10, $r12;
        int i0, $i6;
        java.lang.String r1, r2, r3, r4, $r9, $r11;
        boolean z0;
        java.lang.IllegalArgumentException $r13;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<org.apache.commons.httpclient.Cookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,boolean)>(r1, r2, r3, r4, null, z0);

        $i6 = (int) -1;

        if i0 >= $i6 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid max age:  ");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        if i0 < 0 goto label2;

        $r14 = new java.util.Date;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = (long) i0;

        $l3 = $l2 * 1000L;

        $l4 = $l1 + $l3;

        specialinvoke $r14.<java.util.Date: void <init>(long)>($l4);

        virtualinvoke r0.<org.apache.commons.httpclient.Cookie: void setExpiryDate(java.util.Date)>($r14);

     label2:
        return;
    }

    public java.lang.String getComment()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookieComment>;

        return $r1;
    }

    public void setComment(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookieComment> = r1;

        return;
    }

    public java.util.Date getExpiryDate()
    {
        org.apache.commons.httpclient.Cookie r0;
        java.util.Date $r1;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        return $r1;
    }

    public void setExpiryDate(java.util.Date)
    {
        org.apache.commons.httpclient.Cookie r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.util.Date;

        r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate> = r1;

        return;
    }

    public boolean isPersistent()
    {
        org.apache.commons.httpclient.Cookie r0;
        java.util.Date $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getDomain()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookieDomain>;

        return $r1;
    }

    public void setDomain(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String $r1, r2;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r2 := @parameter0: java.lang.String;

        if r2 == null goto label2;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookieDomain> = $r1;

     label2:
        return;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookiePath>;

        return $r1;
    }

    public void setPath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookiePath> = r1;

        return;
    }

    public boolean getSecure()
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $z0 = r0.<org.apache.commons.httpclient.Cookie: boolean isSecure>;

        return $z0;
    }

    public void setSecure(boolean)
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.Cookie: boolean isSecure> = z0;

        return;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $i0 = r0.<org.apache.commons.httpclient.Cookie: int cookieVersion>;

        return $i0;
    }

    public void setVersion(int)
    {
        int i0;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        i0 := @parameter0: int;

        r0.<org.apache.commons.httpclient.Cookie: int cookieVersion> = i0;

        return;
    }

    public boolean isExpired()
    {
        java.util.Date $r1, $r2;
        long $l0, $l1;
        org.apache.commons.httpclient.Cookie r0;
        byte $b2;
        int $i3;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isExpired(java.util.Date)
    {
        java.util.Date $r1, $r2, r3;
        long $l0, $l1;
        org.apache.commons.httpclient.Cookie r0;
        byte $b2;
        int $i3;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.Cookie: java.util.Date cookieExpiryDate>;

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r3.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setPathAttributeSpecified(boolean)
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.Cookie: boolean hasPathAttribute> = z0;

        return;
    }

    public boolean isPathAttributeSpecified()
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $z0 = r0.<org.apache.commons.httpclient.Cookie: boolean hasPathAttribute>;

        return $z0;
    }

    public void setDomainAttributeSpecified(boolean)
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.Cookie: boolean hasDomainAttribute> = z0;

        return;
    }

    public boolean isDomainAttributeSpecified()
    {
        org.apache.commons.httpclient.Cookie r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $z0 = r0.<org.apache.commons.httpclient.Cookie: boolean hasDomainAttribute>;

        return $z0;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r3;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r2 = r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookieDomain>;

        $i1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r2);

        $r3 = r0.<org.apache.commons.httpclient.Cookie: java.lang.String cookiePath>;

        $i2 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i1, $r3);

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.Cookie r1, r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.apache.commons.httpclient.Cookie;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z0 = r0 instanceof org.apache.commons.httpclient.Cookie;

        if $z0 == 0 goto label5;

        r2 = (org.apache.commons.httpclient.Cookie) r0;

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<org.apache.commons.httpclient.Cookie: java.lang.String getName()>();

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label3;

        $r6 = r1.<org.apache.commons.httpclient.Cookie: java.lang.String cookieDomain>;

        $r5 = r2.<org.apache.commons.httpclient.Cookie: java.lang.String cookieDomain>;

        $z2 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        $r8 = r1.<org.apache.commons.httpclient.Cookie: java.lang.String cookiePath>;

        $r7 = r2.<org.apache.commons.httpclient.Cookie: java.lang.String cookiePath>;

        $z3 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        return 0;
    }

    public java.lang.String toExternalForm()
    {
        org.apache.commons.httpclient.cookie.CookieSpec r2;
        int $i0;
        java.lang.String $r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.Cookie: int getVersion()>();

        if $i0 <= 0 goto label1;

        r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec()>();

        goto label2;

     label1:
        r2 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String)>("netscape");

     label2:
        $r1 = interfaceinvoke r2.<org.apache.commons.httpclient.cookie.CookieSpec: java.lang.String formatCookie(org.apache.commons.httpclient.Cookie)>(r0);

        return $r1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.ClassCastException $r20, $r21;
        int $i0, $i2;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.httpclient.Cookie r3, r4, r19;
        org.apache.commons.logging.Log $r0;
        java.lang.Object r1, r2;
        java.lang.Class $r14, $r17;

        r19 := @this: org.apache.commons.httpclient.Cookie;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r0 = <org.apache.commons.httpclient.Cookie: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter Cookie.compare(Object, Object)");

        $z0 = r1 instanceof org.apache.commons.httpclient.Cookie;

        if $z0 != 0 goto label1;

        $r20 = new java.lang.ClassCastException;

        $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r20.<java.lang.ClassCastException: void <init>(java.lang.String)>($r18);

        throw $r20;

     label1:
        $z1 = r2 instanceof org.apache.commons.httpclient.Cookie;

        if $z1 != 0 goto label2;

        $r21 = new java.lang.ClassCastException;

        $r14 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r21.<java.lang.ClassCastException: void <init>(java.lang.String)>($r15);

        throw $r21;

     label2:
        r3 = (org.apache.commons.httpclient.Cookie) r1;

        r4 = (org.apache.commons.httpclient.Cookie) r2;

        $r5 = virtualinvoke r3.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r5 != null goto label3;

        $r12 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r12 != null goto label3;

        return 0;

     label3:
        $r6 = virtualinvoke r3.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r6 != null goto label5;

        $r11 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $i2 = (int) -1;

        return $i2;

     label5:
        $r7 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        if $r7 != null goto label7;

        $r10 = virtualinvoke r3.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("/");

        if $z2 == 0 goto label6;

        return 0;

     label6:
        return 1;

     label7:
        $r8 = virtualinvoke r3.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $r9 = virtualinvoke r4.<org.apache.commons.httpclient.Cookie: java.lang.String getPath()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r9);

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.Cookie r0;

        r0 := @this: org.apache.commons.httpclient.Cookie;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.Cookie: java.lang.String toExternalForm()>();

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.commons.httpclient.Cookie: java.lang.Class class$org$apache$commons$httpclient$Cookie>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.Cookie: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.Cookie");

        <org.apache.commons.httpclient.Cookie: java.lang.Class class$org$apache$commons$httpclient$Cookie> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.Cookie: java.lang.Class class$org$apache$commons$httpclient$Cookie>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.Cookie: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
