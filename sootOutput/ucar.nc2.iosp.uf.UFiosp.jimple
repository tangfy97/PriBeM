public class ucar.nc2.iosp.uf.UFiosp extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    private static final int MISSING_INT;
    private static final float MISSING_FLOAT;
    private ucar.nc2.NetcdfFile ncfile;
    private ucar.unidata.io.RandomAccessFile myRaf;
    protected ucar.nc2.iosp.uf.UFheader headerParser;
    private ucar.nc2.units.DateFormatter formatter;
    private double radarRadius;

    public void <init>()
    {
        ucar.nc2.iosp.uf.UFiosp r0;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter> = $r1;

        r0.<ucar.nc2.iosp.uf.UFiosp: double radarRadius> = 100000.0;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.uf.UFheader $r0;
        ucar.nc2.iosp.uf.UFiosp r2;
        boolean $z0;

        r2 := @this: ucar.nc2.iosp.uf.UFiosp;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r0 = new ucar.nc2.iosp.uf.UFheader;

        specialinvoke $r0.<ucar.nc2.iosp.uf.UFheader: void <init>()>();

        $z0 = virtualinvoke $r0.<ucar.nc2.iosp.uf.UFheader: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r1);

        return $z0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.uf.UFiosp r0;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        return "UniversalRadarFormat";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.uf.UFiosp r0;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        return "Universal Radar Format";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.constants.FeatureType $r18;
        ucar.nc2.Attribute $r11, $r13, $r17, $r21, $r25, $r29, $r33, $r39, $r45, $r49, $r54, $r58, $r62, $r64, $r66, $r86, $r88, $r90;
        java.lang.StringBuilder $r67, $r69, $r72, $r73, $r78, $r79, $r84;
        short $s0;
        ucar.nc2.iosp.uf.Ray r107;
        ucar.nc2.iosp.uf.UFiosp r0;
        java.util.Date $r37, $r43, $r76, $r82;
        java.lang.Short $r91, $r94;
        ucar.nc2.units.DateFormatter $r36, $r42, $r75, $r81;
        java.lang.Object $r96, $r98, $r99, $r101;
        ucar.nc2.util.CancelTask r105;
        java.util.Set $r9;
        java.lang.Double $r22, $r26, $r30, $r46, $r50, $r55, $r59;
        java.util.ArrayList r106;
        java.lang.String $r16, $r20, $r38, $r44, $r71, $r77, $r83, $r85, r97, $r103, $r104;
        ucar.nc2.iosp.uf.UFheader $r3, $r6, $r7, $r14, $r23, $r27, $r31, $r34, $r40, $r47, $r51, $r53, $r56, $r60, $r70, $r74, $r80, $r92;
        ucar.unidata.io.RandomAccessFile r2, $r5;
        boolean $z0;
        java.util.List r100;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        ucar.nc2.NetcdfFile r1, $r4, $r12, $r15, $r19, $r24, $r28, $r32, $r35, $r41, $r48, $r52, $r57, $r61, $r63, $r65, $r68, $r87, $r89, $r93, $r95, $r102;
        java.util.HashMap r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22;
        java.util.Iterator $r10;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r1 := @parameter1: ucar.nc2.NetcdfFile;

        r105 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile> = r1;

        r0.<ucar.nc2.iosp.uf.UFiosp: ucar.unidata.io.RandomAccessFile myRaf> = r2;

        $r3 = new ucar.nc2.iosp.uf.UFheader;

        specialinvoke $r3.<ucar.nc2.iosp.uf.UFheader: void <init>()>();

        r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser> = $r3;

        $r6 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r5 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $r4 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r6.<ucar.nc2.iosp.uf.UFheader: void read(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile)>($r5, $r4);

        $r7 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        r8 = $r7.<ucar.nc2.iosp.uf.UFheader: java.util.HashMap variableGroup>;

        $r9 = virtualinvoke r8.<java.util.HashMap: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r96 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r97 = (java.lang.String) $r96;

        $r98 = virtualinvoke r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r97);

        r106 = (java.util.ArrayList) $r98;

        $r99 = virtualinvoke r106.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r100 = (java.util.List) $r99;

        $r101 = interfaceinvoke r100.<java.util.List: java.lang.Object get(int)>(0);

        r107 = (ucar.nc2.iosp.uf.Ray) $r101;

        $r102 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r103 = virtualinvoke r107.<ucar.nc2.iosp.uf.Ray: java.lang.String getDatatypeName(java.lang.String)>(r97);

        $r104 = virtualinvoke r107.<ucar.nc2.iosp.uf.Ray: java.lang.String getDatatypeName(java.lang.String)>(r97);

        virtualinvoke r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.Variable makeVariable(ucar.nc2.NetcdfFile,java.lang.String,java.lang.String,java.lang.String,java.util.List)>($r102, $r103, $r104, r97, r106);

        goto label1;

     label2:
        $r12 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "_Coordinates");

        virtualinvoke $r12.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r11);

        $r15 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r13 = new ucar.nc2.Attribute;

        $r14 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r16 = virtualinvoke $r14.<ucar.nc2.iosp.uf.UFheader: java.lang.String getDataFormat()>();

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("format", $r16);

        virtualinvoke $r15.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r13);

        $r19 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r17 = new ucar.nc2.Attribute;

        $r18 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType RADIAL>;

        $r20 = virtualinvoke $r18.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_data_type", $r20);

        virtualinvoke $r19.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r17);

        $r24 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r21 = new ucar.nc2.Attribute;

        $r22 = new java.lang.Double;

        $r23 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f0 = virtualinvoke $r23.<ucar.nc2.iosp.uf.UFheader: float getStationLatitude()>();

        $d0 = (double) $f0;

        specialinvoke $r22.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("StationLatitude", $r22);

        virtualinvoke $r24.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r21);

        $r28 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r25 = new ucar.nc2.Attribute;

        $r26 = new java.lang.Double;

        $r27 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f1 = virtualinvoke $r27.<ucar.nc2.iosp.uf.UFheader: float getStationLongitude()>();

        $d1 = (double) $f1;

        specialinvoke $r26.<java.lang.Double: void <init>(double)>($d1);

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("StationLongitude", $r26);

        virtualinvoke $r28.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r25);

        $r32 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r29 = new ucar.nc2.Attribute;

        $r30 = new java.lang.Double;

        $r31 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f2 = virtualinvoke $r31.<ucar.nc2.iosp.uf.UFheader: float getStationElevation()>();

        $d2 = (double) $f2;

        specialinvoke $r30.<java.lang.Double: void <init>(double)>($d2);

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("StationElevationInMeters", $r30);

        virtualinvoke $r32.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r29);

        $r35 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r33 = new ucar.nc2.Attribute;

        $r36 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter>;

        $r34 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r37 = virtualinvoke $r34.<ucar.nc2.iosp.uf.UFheader: java.util.Date getStartDate()>();

        $r38 = virtualinvoke $r36.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r37);

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_start", $r38);

        virtualinvoke $r35.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r33);

        $r41 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r39 = new ucar.nc2.Attribute;

        $r42 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter>;

        $r40 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r43 = virtualinvoke $r40.<ucar.nc2.iosp.uf.UFheader: java.util.Date getEndDate()>();

        $r44 = virtualinvoke $r42.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r43);

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("time_coverage_end", $r44);

        virtualinvoke $r41.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r39);

        $d3 = r0.<ucar.nc2.iosp.uf.UFiosp: double radarRadius>;

        $d4 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d5 = $d3 / $d4;

        $d6 = staticinvoke <java.lang.Math: double toDegrees(double)>($d5);

        $r48 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r45 = new ucar.nc2.Attribute;

        $r46 = new java.lang.Double;

        $r47 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f3 = virtualinvoke $r47.<ucar.nc2.iosp.uf.UFheader: float getStationLatitude()>();

        $d7 = (double) $f3;

        $d8 = $d7 - $d6;

        specialinvoke $r46.<java.lang.Double: void <init>(double)>($d8);

        specialinvoke $r45.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("geospatial_lat_min", $r46);

        virtualinvoke $r48.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r45);

        $r52 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r49 = new ucar.nc2.Attribute;

        $r50 = new java.lang.Double;

        $r51 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f4 = virtualinvoke $r51.<ucar.nc2.iosp.uf.UFheader: float getStationLatitude()>();

        $d9 = (double) $f4;

        $d10 = $d9 + $d6;

        specialinvoke $r50.<java.lang.Double: void <init>(double)>($d10);

        specialinvoke $r49.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("geospatial_lat_max", $r50);

        virtualinvoke $r52.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r49);

        $r53 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f5 = virtualinvoke $r53.<ucar.nc2.iosp.uf.UFheader: float getStationLatitude()>();

        $d11 = (double) $f5;

        $d12 = staticinvoke <java.lang.Math: double toRadians(double)>($d11);

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d12);

        $d14 = r0.<ucar.nc2.iosp.uf.UFiosp: double radarRadius>;

        $d15 = $d14 / $d13;

        $d16 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d17 = $d15 / $d16;

        $d18 = staticinvoke <java.lang.Math: double toDegrees(double)>($d17);

        $r57 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r54 = new ucar.nc2.Attribute;

        $r55 = new java.lang.Double;

        $r56 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f6 = virtualinvoke $r56.<ucar.nc2.iosp.uf.UFheader: float getStationLongitude()>();

        $d19 = (double) $f6;

        $d20 = $d19 - $d18;

        specialinvoke $r55.<java.lang.Double: void <init>(double)>($d20);

        specialinvoke $r54.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("geospatial_lon_min", $r55);

        virtualinvoke $r57.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r54);

        $r61 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r58 = new ucar.nc2.Attribute;

        $r59 = new java.lang.Double;

        $r60 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $f7 = virtualinvoke $r60.<ucar.nc2.iosp.uf.UFheader: float getStationLongitude()>();

        $d21 = (double) $f7;

        $d22 = $d21 + $d18;

        specialinvoke $r59.<java.lang.Double: void <init>(double)>($d22);

        specialinvoke $r58.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("geospatial_lon_max", $r59);

        virtualinvoke $r61.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r58);

        $r63 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r62 = new ucar.nc2.Attribute;

        specialinvoke $r62.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("history", "Direct read of Nexrad Level 2 file into NetCDF-Java 2.2 API");

        virtualinvoke $r63.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r62);

        $r65 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r64 = new ucar.nc2.Attribute;

        specialinvoke $r64.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("DataType", "Radial");

        virtualinvoke $r65.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r64);

        $r68 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r66 = new ucar.nc2.Attribute;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nexrad Level 2 Station ");

        $r70 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r71 = virtualinvoke $r70.<ucar.nc2.iosp.uf.UFheader: java.lang.String getStationId()>();

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r75 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter>;

        $r74 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r76 = virtualinvoke $r74.<ucar.nc2.iosp.uf.UFheader: java.util.Date getStartDate()>();

        $r77 = virtualinvoke $r75.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r76);

        $r78 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r81 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter>;

        $r80 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r82 = virtualinvoke $r80.<ucar.nc2.iosp.uf.UFheader: java.util.Date getEndDate()>();

        $r83 = virtualinvoke $r81.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r82);

        $r84 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Title", $r85);

        virtualinvoke $r68.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r66);

        $r87 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r86 = new ucar.nc2.Attribute;

        specialinvoke $r86.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Summary", "Weather Surveillance Radar-1988 Doppler (WSR-88D) Level II data are the three meteorological base data quantities: reflectivity, mean radial velocity, and spectrum width.");

        virtualinvoke $r87.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r86);

        $r89 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r88 = new ucar.nc2.Attribute;

        specialinvoke $r88.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("keywords", "WSR-88D; NEXRAD; Radar Level II; reflectivity; mean radial velocity; spectrum width");

        virtualinvoke $r89.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r88);

        $r93 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        $r90 = new ucar.nc2.Attribute;

        $r91 = new java.lang.Short;

        $r92 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $r94 = virtualinvoke $r92.<ucar.nc2.iosp.uf.UFheader: java.lang.Short getSweepMode()>();

        $s0 = virtualinvoke $r94.<java.lang.Short: short shortValue()>();

        specialinvoke $r91.<java.lang.Short: void <init>(short)>($s0);

        specialinvoke $r90.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("SweepMode", $r91);

        virtualinvoke $r93.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r90);

        $r95 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r95.<ucar.nc2.NetcdfFile: void finish()>();

        return;
    }

    public ucar.nc2.Variable makeVariable(ucar.nc2.NetcdfFile, java.lang.String, java.lang.String, java.lang.String, java.util.List) throws java.io.IOException
    {
        ucar.nc2.Attribute $r32, $r34, $r36, $r37, $r39, $r41, $r43, $r45, $r61, $r62, $r63, $r65, $r74, $r75, $r76, $r78, $r87, $r88, $r89, $r91, $r102, $r103, $r104, $r114, $r122, $r132;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r26, $r28, $r29, $r48, $r49, $r50, $r55, $r56, $r59, $r68, $r69, $r70, $r81, $r82, $r83, $r94, $r95, $r96, $r107, $r108, $r109, $r115, $r116, $r117, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r142, $r143, $r144;
        short $s3, $s4, $s5, $s6, $s7, $s8;
        ucar.nc2.iosp.uf.Ray r4, r140;
        ucar.ma2.Array $r101;
        ucar.nc2.iosp.uf.UFiosp r21;
        ucar.nc2.iosp.uf.Ray[][] r133;
        java.util.Date $r54;
        ucar.nc2.iosp.uf.UFiosp$Vgroup $r134;
        java.lang.Short $r38, $r40, $r46, $r64, $r77, $r90;
        ucar.ma2.DataType $r31, $r53, $r73, $r86, $r99, $r100, $r112, $r120;
        ucar.nc2.units.DateFormatter $r57;
        int $i0, $i1, $i2, $i9, $i10, $i11, $i12, i13, i14;
        ucar.nc2.Variable $r25, $r52, $r72, $r85, $r98, $r111, $r119;
        ucar.nc2.iosp.uf.Ray[] r135;
        java.lang.Object $r1, $r3, $r136, $r139;
        java.lang.Float $r42, $r44;
        ucar.nc2.constants.AxisType $r66, $r79, $r92, $r105;
        java.util.ArrayList $r24, $r47;
        java.lang.String r5, $r9, $r13, $r17, r27, $r30, $r33, r35, $r51, $r58, $r60, $r67, $r71, $r80, $r84, $r93, $r97, $r106, $r110, $r113, $r118, $r121, $r131, $r145;
        ucar.nc2.Dimension $r18, $r19, $r20;
        ucar.nc2.iosp.uf.UFheader $r22;
        java.lang.IllegalStateException $r141;
        boolean $z0;
        java.util.List r0, r2, r137;
        float $f0, $f1;
        ucar.nc2.NetcdfFile r23;
        double $d0, $d1;
        java.util.Iterator $r138;

        r21 := @this: ucar.nc2.iosp.uf.UFiosp;

        r23 := @parameter0: ucar.nc2.NetcdfFile;

        r27 := @parameter1: java.lang.String;

        r35 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r0 := @parameter4: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r141 = new java.lang.IllegalStateException;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No data for ");

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r141.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r145);

        throw $r141;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (java.util.List) $r1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (ucar.nc2.iosp.uf.Ray) $r3;

        $i1 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: int getGateCount(java.lang.String)>(r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scan");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gate");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("radial");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new ucar.nc2.Dimension;

        specialinvoke $r18.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r9, $i0);

        $r19 = new ucar.nc2.Dimension;

        specialinvoke $r19.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r13, $i1);

        $r20 = new ucar.nc2.Dimension;

        $r22 = r21.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $i2 = virtualinvoke $r22.<ucar.nc2.iosp.uf.UFheader: int getMaxRadials()>();

        specialinvoke $r20.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r17, $i2, 1);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r18);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r19);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r20);

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r18);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r20);

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r25 = new ucar.nc2.Variable;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r30);

        $r31 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        virtualinvoke $r25.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r31);

        virtualinvoke $r25.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r24);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r25);

        $r32 = new ucar.nc2.Attribute;

        $r33 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: java.lang.String getDatatypeUnits(java.lang.String)>(r5);

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r33);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        $r34 = new ucar.nc2.Attribute;

        specialinvoke $r34.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r35);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r34);

        $r36 = new ucar.nc2.Attribute;

        specialinvoke $r36.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("abbrev", r5);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r36);

        $r37 = new ucar.nc2.Attribute;

        $s3 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getMissingData()>();

        $r38 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        specialinvoke $r37.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r38);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r37);

        $r39 = new ucar.nc2.Attribute;

        $s4 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getDatatypeRangeFoldingThreshhold(java.lang.String)>(r5);

        $r40 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4);

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("signal_below_threshold", $r40);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r39);

        $r41 = new ucar.nc2.Attribute;

        $f0 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: float getDatatypeScaleFactor(java.lang.String)>(r5);

        $r42 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("scale_factor", $r42);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

        $r43 = new ucar.nc2.Attribute;

        $f1 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: float getDatatypeAddOffset(java.lang.String)>(r5);

        $r44 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        specialinvoke $r43.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("add_offset", $r44);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r43);

        $r45 = new ucar.nc2.Attribute;

        $s5 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getDatatypeRangeFoldingThreshhold(java.lang.String)>(r5);

        $r46 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s5);

        specialinvoke $r45.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("range_folding_threshold", $r46);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r45);

        $r47 = new java.util.ArrayList;

        specialinvoke $r47.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r18);

        interfaceinvoke $r47.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r52 = new ucar.nc2.Variable;

        specialinvoke $r52.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r51);

        $r53 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r52.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r53);

        virtualinvoke $r52.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r47);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r52);

        $r54 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: java.util.Date getDate()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("msecs since ");

        $r57 = r21.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.units.DateFormatter formatter>;

        $r58 = virtualinvoke $r57.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r54);

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        $r61 = new ucar.nc2.Attribute;

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time since base date");

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r61);

        $r62 = new ucar.nc2.Attribute;

        specialinvoke $r62.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r60);

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r62);

        $r63 = new ucar.nc2.Attribute;

        $s6 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getMissingData()>();

        $r64 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s6);

        specialinvoke $r63.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r64);

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r63);

        $r65 = new ucar.nc2.Attribute;

        $r66 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r67 = virtualinvoke $r66.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r65.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r67);

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r65);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("elevation");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        $r72 = new ucar.nc2.Variable;

        specialinvoke $r72.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r71);

        $r73 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r72.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r73);

        virtualinvoke $r72.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r47);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r72);

        $r74 = new ucar.nc2.Attribute;

        specialinvoke $r74.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees");

        virtualinvoke $r72.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r74);

        $r75 = new ucar.nc2.Attribute;

        specialinvoke $r75.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "elevation angle in degres: 0 = parallel to pedestal base, 90 = perpendicular");

        virtualinvoke $r72.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r75);

        $r76 = new ucar.nc2.Attribute;

        $s7 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getMissingData()>();

        $r77 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s7);

        specialinvoke $r76.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r77);

        virtualinvoke $r72.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r76);

        $r78 = new ucar.nc2.Attribute;

        $r79 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialElevation>;

        $r80 = virtualinvoke $r79.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r78.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r80);

        virtualinvoke $r72.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r78);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("azimuth");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        $r85 = new ucar.nc2.Variable;

        specialinvoke $r85.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r84);

        $r86 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r85.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r86);

        virtualinvoke $r85.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r47);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r85);

        $r87 = new ucar.nc2.Attribute;

        specialinvoke $r87.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees");

        virtualinvoke $r85.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r87);

        $r88 = new ucar.nc2.Attribute;

        specialinvoke $r88.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "azimuth angle in degrees: 0 = true north, 90 = east");

        virtualinvoke $r85.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r88);

        $r89 = new ucar.nc2.Attribute;

        $s8 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: short getMissingData()>();

        $r90 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s8);

        specialinvoke $r89.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r90);

        virtualinvoke $r85.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r89);

        $r91 = new ucar.nc2.Attribute;

        $r92 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialAzimuth>;

        $r93 = virtualinvoke $r92.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r91.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r93);

        virtualinvoke $r85.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r91);

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distance");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        $r98 = new ucar.nc2.Variable;

        specialinvoke $r98.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r97);

        $r99 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        virtualinvoke $r98.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r99);

        virtualinvoke $r98.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r13);

        $r100 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $i9 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: int getGateStart(java.lang.String)>(r5);

        $d0 = (double) $i9;

        $i10 = virtualinvoke r4.<ucar.nc2.iosp.uf.Ray: int getGateSize(java.lang.String)>(r5);

        $d1 = (double) $i10;

        $r101 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,int,double,double)>($r100, $i1, $d0, $d1);

        virtualinvoke $r98.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r101, 0);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r98);

        $r102 = new ucar.nc2.Attribute;

        specialinvoke $r102.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "m");

        virtualinvoke $r98.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r102);

        $r103 = new ucar.nc2.Attribute;

        specialinvoke $r103.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "radial distance to start of gate");

        virtualinvoke $r98.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r103);

        $r104 = new ucar.nc2.Attribute;

        $r105 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RadialDistance>;

        $r106 = virtualinvoke $r105.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r104.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r106);

        virtualinvoke $r98.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r104);

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numRadials");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        $r111 = new ucar.nc2.Variable;

        specialinvoke $r111.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r110);

        $r112 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r111.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r112);

        $r113 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r111.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r113);

        $r114 = new ucar.nc2.Attribute;

        specialinvoke $r114.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of valid radials in this scan");

        virtualinvoke $r111.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r114);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r111);

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numGates");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        $r119 = new ucar.nc2.Variable;

        specialinvoke $r119.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r23, null, null, $r118);

        $r120 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r119.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r120);

        $r121 = virtualinvoke $r18.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r119.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r121);

        $r122 = new ucar.nc2.Attribute;

        specialinvoke $r122.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "number of valid gates in this scan");

        virtualinvoke $r119.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r122);

        virtualinvoke r23.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r119);

        specialinvoke r21.<ucar.nc2.iosp.uf.UFiosp: void makeCoordinateDataWithMissing(java.lang.String,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable,ucar.nc2.Variable,java.util.List)>(r5, $r52, $r72, $r85, $r111, $r119, r0);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        $r132 = new ucar.nc2.Attribute;

        specialinvoke $r132.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", $r131);

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r132);

        $i11 = virtualinvoke $r20.<ucar.nc2.Dimension: int getLength()>();

        r133 = newmultiarray (ucar.nc2.iosp.uf.Ray)[$i0][$i11];

        i13 = 0;

     label2:
        $i12 = interfaceinvoke r0.<java.util.List: int size()>();

        if i13 >= $i12 goto label5;

        r135 = r133[i13];

        $r136 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i13);

        r137 = (java.util.List) $r136;

        i14 = 0;

        $r138 = interfaceinvoke r137.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r138.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r139 = interfaceinvoke $r138.<java.util.Iterator: java.lang.Object next()>();

        r140 = (ucar.nc2.iosp.uf.Ray) $r139;

        r135[i14] = r140;

        i14 = i14 + 1;

        goto label3;

     label4:
        i13 = i13 + 1;

        goto label2;

     label5:
        $r134 = new ucar.nc2.iosp.uf.UFiosp$Vgroup;

        specialinvoke $r134.<ucar.nc2.iosp.uf.UFiosp$Vgroup: void <init>(ucar.nc2.iosp.uf.UFiosp,java.lang.String,ucar.nc2.iosp.uf.Ray[][])>(r21, r5, r133);

        virtualinvoke $r25.<ucar.nc2.Variable: void setSPobject(java.lang.Object)>($r134);

        return $r25;
    }

    private void makeCoordinateDataWithMissing(java.lang.String, ucar.nc2.Variable, ucar.nc2.Variable, ucar.nc2.Variable, ucar.nc2.Variable, ucar.nc2.Variable, java.util.List)
    {
        int[] $r3, $r9, $r15, $r21, $r27;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r1, $r7, $r13, $r19, $r25;
        java.util.List r33, r35;
        float $f0, $f1;
        long $l3, $l4;
        ucar.nc2.iosp.uf.Ray r38, r44;
        int $i0, $i1, $i2, i5, i6, i7, $i9;
        ucar.nc2.Variable r0, r6, r12, r18, r24;
        java.lang.String r36;
        ucar.ma2.IndexIterator $r23, $r29, $r30, $r31, $r32;
        java.lang.ArrayIndexOutOfBoundsException $r42;
        ucar.ma2.Array $r4, $r10, $r16, $r22, $r28;
        ucar.ma2.Index $r5, $r11, $r17, $r39, $r40, $r41;
        java.lang.Class $r2, $r8, $r14, $r20, $r26;
        java.lang.Object $r34, $r37;
        ucar.nc2.iosp.uf.UFiosp r43;

        r43 := @this: ucar.nc2.iosp.uf.UFiosp;

        r36 := @parameter0: java.lang.String;

        r0 := @parameter1: ucar.nc2.Variable;

        r6 := @parameter2: ucar.nc2.Variable;

        r12 := @parameter3: ucar.nc2.Variable;

        r18 := @parameter4: ucar.nc2.Variable;

        r24 := @parameter5: ucar.nc2.Variable;

        r33 := @parameter6: java.util.List;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = virtualinvoke $r1.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r3 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        $r4 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r2, $r3);

        $r5 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r7 = virtualinvoke r6.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r8 = virtualinvoke $r7.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r9 = virtualinvoke r6.<ucar.nc2.Variable: int[] getShape()>();

        $r10 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r8, $r9);

        $r11 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r13 = virtualinvoke r12.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r14 = virtualinvoke $r13.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r15 = virtualinvoke r12.<ucar.nc2.Variable: int[] getShape()>();

        $r16 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r14, $r15);

        $r17 = virtualinvoke $r16.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r19 = virtualinvoke r18.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r20 = virtualinvoke $r19.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r21 = virtualinvoke r18.<ucar.nc2.Variable: int[] getShape()>();

        $r22 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r20, $r21);

        $r23 = virtualinvoke $r22.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r25 = virtualinvoke r24.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r26 = virtualinvoke $r25.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r27 = virtualinvoke r24.<ucar.nc2.Variable: int[] getShape()>();

        $r28 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r26, $r27);

        $r29 = virtualinvoke $r28.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r30 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label01:
        $z0 = interfaceinvoke $r30.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $i9 = (int) -9999;

        interfaceinvoke $r30.<ucar.ma2.IndexIterator: void setIntNext(int)>($i9);

        goto label01;

     label02:
        $r31 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label03:
        $z1 = interfaceinvoke $r31.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        interfaceinvoke $r31.<ucar.ma2.IndexIterator: void setFloatNext(float)>(#NaNF);

        goto label03;

     label04:
        $r32 = virtualinvoke $r16.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label05:
        $z2 = interfaceinvoke $r32.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        interfaceinvoke $r32.<ucar.ma2.IndexIterator: void setFloatNext(float)>(#NaNF);

        goto label05;

     label06:
        $i0 = interfaceinvoke r33.<java.util.List: int size()>();

     label07:
        i5 = 0;

     label08:
        if i5 >= $i0 goto label12;

        $r34 = interfaceinvoke r33.<java.util.List: java.lang.Object get(int)>(i5);

        r35 = (java.util.List) $r34;

        $i1 = interfaceinvoke r35.<java.util.List: int size()>();

        r44 = null;

        i6 = 0;

        i7 = 0;

     label09:
        if i7 >= $i1 goto label11;

        $r37 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i7);

        r38 = (ucar.nc2.iosp.uf.Ray) $r37;

        if r44 != null goto label10;

        r44 = r38;

     label10:
        $r39 = virtualinvoke $r5.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i5, i6);

        $l3 = r38.<ucar.nc2.iosp.uf.Ray: long data_msecs>;

        virtualinvoke $r4.<ucar.ma2.Array: void setLong(ucar.ma2.Index,long)>($r39, $l3);

        $r40 = virtualinvoke $r11.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i5, i6);

        $f0 = virtualinvoke r38.<ucar.nc2.iosp.uf.Ray: float getElevation()>();

        virtualinvoke $r10.<ucar.ma2.Array: void setFloat(ucar.ma2.Index,float)>($r40, $f0);

        $r41 = virtualinvoke $r17.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i5, i6);

        $f1 = virtualinvoke r38.<ucar.nc2.iosp.uf.Ray: float getAzimuth()>();

        virtualinvoke $r16.<ucar.ma2.Array: void setFloat(ucar.ma2.Index,float)>($r41, $f1);

        i6 = i6 + 1;

        $l4 = r38.<ucar.nc2.iosp.uf.Ray: long data_msecs>;

        i7 = i7 + 1;

        goto label09;

     label11:
        interfaceinvoke $r23.<ucar.ma2.IndexIterator: void setIntNext(int)>($i1);

        $i2 = virtualinvoke r44.<ucar.nc2.iosp.uf.Ray: int getGateCount(java.lang.String)>(r36);

        interfaceinvoke $r29.<ucar.ma2.IndexIterator: void setIntNext(int)>($i2);

        i5 = i5 + 1;

        goto label08;

     label12:
        goto label14;

     label13:
        $r42 := @caughtexception;

     label14:
        virtualinvoke r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r4, 0);

        virtualinvoke r6.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r10, 0);

        virtualinvoke r12.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r16, 0);

        virtualinvoke r18.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r22, 0);

        virtualinvoke r24.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r28, 0);

        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label12 with label13;
    }

    public void flush() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.uf.UFiosp r0;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        $r1 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.uf.UFiosp r0;

        r0 := @this: ucar.nc2.iosp.uf.UFiosp;

        $r1 = r0.<ucar.nc2.iosp.uf.UFiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r3;
        ucar.nc2.iosp.uf.UFiosp$Vgroup r2;
        int[] $r9;
        int $i0, $i1, i2;
        ucar.nc2.Variable r0;
        java.lang.String $r15;
        ucar.nc2.iosp.uf.Ray[] r13;
        ucar.ma2.Range $r4, $r5, $r6;
        ucar.ma2.IndexIterator $r11;
        ucar.ma2.DataType $r7;
        ucar.ma2.Array $r10;
        java.lang.Object $r1;
        java.lang.Class $r8;
        ucar.nc2.iosp.uf.Ray[][] $r12;
        ucar.nc2.iosp.uf.UFiosp r14;

        r14 := @this: ucar.nc2.iosp.uf.UFiosp;

        r0 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.Section;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r2 = (ucar.nc2.iosp.uf.UFiosp$Vgroup) $r1;

        $r4 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r5 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $r6 = virtualinvoke r3.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(2);

        $r7 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r8 = virtualinvoke $r7.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r9 = virtualinvoke r3.<ucar.ma2.Section: int[] getShape()>();

        $r10 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r8, $r9);

        $r11 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        i2 = virtualinvoke $r4.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke $r4.<ucar.ma2.Range: int last()>();

        if i2 > $i0 goto label2;

        $r12 = r2.<ucar.nc2.iosp.uf.UFiosp$Vgroup: ucar.nc2.iosp.uf.Ray[][] map>;

        r13 = $r12[i2];

        $r15 = r2.<ucar.nc2.iosp.uf.UFiosp$Vgroup: java.lang.String abbrev>;

        specialinvoke r14.<ucar.nc2.iosp.uf.UFiosp: void readOneScan(ucar.nc2.iosp.uf.Ray[],ucar.ma2.Range,ucar.ma2.Range,java.lang.String,ucar.ma2.IndexIterator)>(r13, $r5, $r6, $r15, $r11);

        $i1 = virtualinvoke $r4.<ucar.ma2.Range: int stride()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        return $r10;
    }

    private void readOneScan(ucar.nc2.iosp.uf.Ray[], ucar.ma2.Range, ucar.ma2.Range, java.lang.String, ucar.ma2.IndexIterator) throws java.io.IOException
    {
        ucar.nc2.iosp.uf.Ray[] r1;
        ucar.ma2.Range r0, r5;
        ucar.ma2.IndexIterator r6;
        ucar.nc2.iosp.uf.Ray r2;
        int $i0, $i1, i2;
        java.lang.String r4;
        ucar.nc2.iosp.uf.UFiosp r3;

        r3 := @this: ucar.nc2.iosp.uf.UFiosp;

        r1 := @parameter0: ucar.nc2.iosp.uf.Ray[];

        r0 := @parameter1: ucar.ma2.Range;

        r5 := @parameter2: ucar.ma2.Range;

        r4 := @parameter3: java.lang.String;

        r6 := @parameter4: ucar.ma2.IndexIterator;

        i2 = virtualinvoke r0.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.Range: int last()>();

        if i2 > $i0 goto label2;

        r2 = r1[i2];

        specialinvoke r3.<ucar.nc2.iosp.uf.UFiosp: void readOneRadial(ucar.nc2.iosp.uf.Ray,java.lang.String,ucar.ma2.Range,ucar.ma2.IndexIterator)>(r2, r4, r5, r6);

        $i1 = virtualinvoke r0.<ucar.ma2.Range: int stride()>();

        i2 = i2 + $i1;

        goto label1;

     label2:
        return;
    }

    private void readOneRadial(ucar.nc2.iosp.uf.Ray, java.lang.String, ucar.ma2.Range, ucar.ma2.IndexIterator) throws java.io.IOException
    {
        ucar.ma2.Range r3;
        ucar.unidata.io.RandomAccessFile $r5;
        ucar.ma2.IndexIterator r4;
        short $s1;
        ucar.nc2.iosp.uf.Ray r0;
        int $i0, $i2, i3;
        java.lang.String r2;
        ucar.nc2.iosp.uf.UFheader $r6;
        ucar.nc2.iosp.uf.UFiosp r1;

        r1 := @this: ucar.nc2.iosp.uf.UFiosp;

        r0 := @parameter0: ucar.nc2.iosp.uf.Ray;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.ma2.Range;

        r4 := @parameter3: ucar.ma2.IndexIterator;

        if r0 != null goto label3;

        i3 = virtualinvoke r3.<ucar.ma2.Range: int first()>();

     label1:
        $i0 = virtualinvoke r3.<ucar.ma2.Range: int last()>();

        if i3 > $i0 goto label2;

        $r6 = r1.<ucar.nc2.iosp.uf.UFiosp: ucar.nc2.iosp.uf.UFheader headerParser>;

        $s1 = virtualinvoke $r6.<ucar.nc2.iosp.uf.UFheader: short getMissingData()>();

        interfaceinvoke r4.<ucar.ma2.IndexIterator: void setShortNext(short)>($s1);

        $i2 = virtualinvoke r3.<ucar.ma2.Range: int stride()>();

        i3 = i3 + $i2;

        goto label1;

     label2:
        return;

     label3:
        $r5 = r1.<ucar.nc2.iosp.uf.UFiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke r0.<ucar.nc2.iosp.uf.Ray: void readData(ucar.unidata.io.RandomAccessFile,java.lang.String,ucar.ma2.Range,ucar.ma2.IndexIterator)>($r5, r2, r3, r4);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception, java.io.IOException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.String[] r1;
        ucar.nc2.NetcdfFile $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>("/home/yuanho/Desktop/ufData/KTLX__sur_20080624.214247.uf");

        virtualinvoke $r0.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.uf.UFiosp: float MISSING_FLOAT> = #NaNF;

        <ucar.nc2.iosp.uf.UFiosp: int MISSING_INT> = -9999;

        return;
    }
}
