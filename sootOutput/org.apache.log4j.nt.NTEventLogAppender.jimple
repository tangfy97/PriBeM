public class org.apache.log4j.nt.NTEventLogAppender extends org.apache.log4j.AppenderSkeleton
{
    private int _handle;
    private java.lang.String source;
    private java.lang.String server;

    public void <init>()
    {
        org.apache.log4j.nt.NTEventLogAppender r0;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout)>(null, null, null);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout)>(null, r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout)>(r1, r2, null);

        return;
    }

    public void <init>(org.apache.log4j.Layout)
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        org.apache.log4j.Layout r1;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout)>(null, null, r1);

        return;
    }

    public void <init>(java.lang.String, org.apache.log4j.Layout)
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        org.apache.log4j.Layout r2;
        java.lang.String r1;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.Layout;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void <init>(java.lang.String,java.lang.String,org.apache.log4j.Layout)>(null, r1, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.log4j.Layout)
    {
        org.apache.log4j.TTCCLayout $r3;
        int $i0;
        org.apache.log4j.nt.NTEventLogAppender r0;
        org.apache.log4j.Layout r1;
        java.lang.String r2, r5;
        java.lang.Exception $r4;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.log4j.Layout;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = 0;

        r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String source> = null;

        r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String server> = null;

        if r5 != null goto label1;

        r5 = "Log4j";

     label1:
        if r1 != null goto label2;

        $r3 = new org.apache.log4j.TTCCLayout;

        specialinvoke $r3.<org.apache.log4j.TTCCLayout: void <init>()>();

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = $r3;

        goto label3;

     label2:
        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = r1;

     label3:
        $i0 = specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: int registerEventSource(java.lang.String,java.lang.String)>(r2, r5);

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = $i0;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void printStackTrace()>();

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = 0;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void close()
    {
        org.apache.log4j.nt.NTEventLogAppender r0;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        return;
    }

    public void activateOptions()
    {
        int $i0;
        org.apache.log4j.nt.NTEventLogAppender r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Exception $r4;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        $r1 = r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String source>;

        if $r1 == null goto label4;

     label1:
        $r3 = r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String server>;

        $r2 = r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String source>;

        $i0 = specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: int registerEventSource(java.lang.String,java.lang.String)>($r3, $r2);

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = $i0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>("Could not register event source.", $r4);

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = 0;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.spi.LoggingEvent r2;
        java.lang.String[] $r6;
        java.lang.StringBuffer $r0;
        org.apache.log4j.Level $r8;
        int i0, i1, $i2, $i3;
        org.apache.log4j.nt.NTEventLogAppender r1;
        org.apache.log4j.Layout $r3, $r5;
        java.lang.String $r4, $r7, $r9;
        boolean $z0;

        r1 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r2 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r3 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r4 = virtualinvoke $r3.<org.apache.log4j.Layout: java.lang.String format(org.apache.log4j.spi.LoggingEvent)>(r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $z0 = virtualinvoke $r5.<org.apache.log4j.Layout: boolean ignoresThrowable()>();

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        if $r6 == null goto label2;

        i0 = lengthof $r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r7 = $r6[i1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $i2 = virtualinvoke $r8.<org.apache.log4j.Priority: int toInt()>();

        $i3 = r1.<org.apache.log4j.nt.NTEventLogAppender: int _handle>;

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r1.<org.apache.log4j.nt.NTEventLogAppender: void reportEvent(int,java.lang.String,int)>($i3, $r9, $i2);

        return;
    }

    public void finalize()
    {
        int $i0;
        org.apache.log4j.nt.NTEventLogAppender r0;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        $i0 = r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle>;

        specialinvoke r0.<org.apache.log4j.nt.NTEventLogAppender: void deregisterEventSource(int)>($i0);

        r0.<org.apache.log4j.nt.NTEventLogAppender: int _handle> = 0;

        return;
    }

    public void setSource(java.lang.String)
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String source> = $r2;

        return;
    }

    public java.lang.String getSource()
    {
        org.apache.log4j.nt.NTEventLogAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        $r1 = r0.<org.apache.log4j.nt.NTEventLogAppender: java.lang.String source>;

        return $r1;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.nt.NTEventLogAppender r0;

        r0 := @this: org.apache.log4j.nt.NTEventLogAppender;

        return 1;
    }

    private native int registerEventSource(java.lang.String, java.lang.String);

    private native void reportEvent(int, java.lang.String, int);

    private native void deregisterEventSource(int);

    static void <clinit>()
    {
        java.lang.String[] $r0, $r9, r10;
        java.lang.StringBuffer $r2, $r3, $r5;
        int i0, $i1;
        java.lang.SecurityException $r8;
        java.lang.String $r1, $r4, $r6;
        java.lang.UnsatisfiedLinkError $r7;
        boolean z0;

     label01:
        $r0 = newarray (java.lang.String)[1];

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.arch");

        $r0[0] = $r1;

        r10 = $r0;

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

        $r9 = newarray (java.lang.String)[3];

        $r9[0] = "amd64";

        $r9[1] = "ia64";

        $r9[2] = "x86";

        r10 = $r9;

     label04:
        z0 = 0;

        i0 = 0;

     label05:
        $i1 = lengthof r10;

        if i0 >= $i1 goto label09;

     label06:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("NTEventLogAppender.");

        $r4 = r10[i0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>($r6);

        z0 = 1;

     label07:
        goto label09;

     label08:
        $r7 := @caughtexception;

        z0 = 0;

        i0 = i0 + 1;

        goto label05;

     label09:
        if z0 != 0 goto label10;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("NTEventLogAppender");

     label10:
        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.UnsatisfiedLinkError from label06 to label07 with label08;
    }
}
