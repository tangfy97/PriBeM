public class com.jhlabs.image.GlintFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private float threshold;
    private int length;
    private float blur;
    private float amount;
    private boolean glintOnly;
    private com.jhlabs.image.Colormap colormap;

    public void <init>()
    {
        com.jhlabs.image.GlintFilter r0;
        int $i1;
        com.jhlabs.image.LinearColormap $r2;

        r0 := @this: com.jhlabs.image.GlintFilter;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.GlintFilter: float threshold> = 1.0F;

        r0.<com.jhlabs.image.GlintFilter: int length> = 5;

        r0.<com.jhlabs.image.GlintFilter: float blur> = 0.0F;

        r0.<com.jhlabs.image.GlintFilter: float amount> = 0.1F;

        r0.<com.jhlabs.image.GlintFilter: boolean glintOnly> = 0;

        $r2 = new com.jhlabs.image.LinearColormap;

        $i1 = (int) -1;

        specialinvoke $r2.<com.jhlabs.image.LinearColormap: void <init>(int,int)>($i1, -16777216);

        r0.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap> = $r2;

        return;
    }

    public void setThreshold(float)
    {
        com.jhlabs.image.GlintFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.GlintFilter: float threshold> = f0;

        return;
    }

    public float getThreshold()
    {
        com.jhlabs.image.GlintFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $f0 = r0.<com.jhlabs.image.GlintFilter: float threshold>;

        return $f0;
    }

    public void setAmount(float)
    {
        com.jhlabs.image.GlintFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.GlintFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        com.jhlabs.image.GlintFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $f0 = r0.<com.jhlabs.image.GlintFilter: float amount>;

        return $f0;
    }

    public void setLength(int)
    {
        com.jhlabs.image.GlintFilter r0;
        int i0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.GlintFilter: int length> = i0;

        return;
    }

    public int getLength()
    {
        com.jhlabs.image.GlintFilter r0;
        int $i0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $i0 = r0.<com.jhlabs.image.GlintFilter: int length>;

        return $i0;
    }

    public void setBlur(float)
    {
        com.jhlabs.image.GlintFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.GlintFilter: float blur> = f0;

        return;
    }

    public float getBlur()
    {
        com.jhlabs.image.GlintFilter r0;
        float $f0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $f0 = r0.<com.jhlabs.image.GlintFilter: float blur>;

        return $f0;
    }

    public void setGlintOnly(boolean)
    {
        com.jhlabs.image.GlintFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        z0 := @parameter0: boolean;

        r0.<com.jhlabs.image.GlintFilter: boolean glintOnly> = z0;

        return;
    }

    public boolean getGlintOnly()
    {
        com.jhlabs.image.GlintFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $z0 = r0.<com.jhlabs.image.GlintFilter: boolean glintOnly>;

        return $z0;
    }

    public void setColormap(com.jhlabs.image.Colormap)
    {
        com.jhlabs.image.GlintFilter r0;
        com.jhlabs.image.Colormap r1;

        r0 := @this: com.jhlabs.image.GlintFilter;

        r1 := @parameter0: com.jhlabs.image.Colormap;

        r0.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap> = r1;

        return;
    }

    public com.jhlabs.image.Colormap getColormap()
    {
        com.jhlabs.image.GlintFilter r0;
        com.jhlabs.image.Colormap $r1;

        r0 := @this: com.jhlabs.image.GlintFilter;

        $r1 = r0.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap>;

        return $r1;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        byte $b7, $b22;
        com.jhlabs.image.GlintFilter r2;
        com.jhlabs.image.GaussianFilter $r14;
        int[] r1, r3, r4, r12;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, i34, $i35, $i36, $i37, i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128, i129, i130, i131, i132, i133, i134, i135, i136, i137, i138, i139, i140, i141, i142, i143, i144, i145, i146, i147, i148, i149, i150, i151, i152, i153, i154, i155, i156, i157, i158, i159, i160, i161, i162, i163, i164, i165, $i166, $i168, $i170, $i172, $i174;
        com.jhlabs.image.Colormap $r5, $r8, $r9;
        boolean $z0;
        java.awt.image.BufferedImage r0, r10, r11, $r13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33;

        r2 := @this: com.jhlabs.image.GlintFilter;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r10 := @parameter1: java.awt.image.BufferedImage;

        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        r1 = newarray (int)[$i0];

        $i2 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $f0 = (float) $i2;

        $f1 = $f0 / 1.414F;

        i3 = (int) $f1;

        $i4 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $i5 = $i4 + 1;

        r3 = newarray (int)[$i5];

        $i6 = i3 + 1;

        r4 = newarray (int)[$i6];

        $r5 = r2.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap>;

        if $r5 == null goto label04;

        i118 = 0;

     label01:
        $i93 = r2.<com.jhlabs.image.GlintFilter: int length>;

        if i118 > $i93 goto label02;

        $r9 = r2.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap>;

        $f23 = (float) i118;

        $i106 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $f22 = (float) $i106;

        $f24 = $f23 / $f22;

        $i107 = interfaceinvoke $r9.<com.jhlabs.image.Colormap: int getColor(float)>($f24);

        $i108 = $i107 >> 16;

        i119 = $i108 & 255;

        $i109 = $i107 >> 8;

        i120 = $i109 & 255;

        i121 = $i107 & 255;

        $i112 = $i107 & -16777216;

        $f26 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f25 = (float) i119;

        $f27 = $f26 * $f25;

        $i110 = (int) $f27;

        $i111 = $i110 << 16;

        $i115 = $i112 | $i111;

        $f29 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f28 = (float) i120;

        $f30 = $f29 * $f28;

        $i113 = (int) $f30;

        $i114 = $i113 << 8;

        $i117 = $i115 | $i114;

        $f32 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f31 = (float) i121;

        $f33 = $f32 * $f31;

        $i116 = (int) $f33;

        i122 = $i117 | $i116;

        r3[i118] = i122;

        i118 = i118 + 1;

        goto label01;

     label02:
        i123 = 0;

     label03:
        if i123 > i3 goto label04;

        $r8 = r2.<com.jhlabs.image.GlintFilter: com.jhlabs.image.Colormap colormap>;

        $f11 = (float) i123;

        $f10 = (float) i3;

        $f12 = $f11 / $f10;

        $i95 = interfaceinvoke $r8.<com.jhlabs.image.Colormap: int getColor(float)>($f12);

        $i96 = $i95 >> 16;

        i124 = $i96 & 255;

        $i97 = $i95 >> 8;

        i125 = $i97 & 255;

        i126 = $i95 & 255;

        $i100 = $i95 & -16777216;

        $f14 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f13 = (float) i124;

        $f15 = $f14 * $f13;

        $i98 = (int) $f15;

        $i99 = $i98 << 16;

        $i103 = $i100 | $i99;

        $f17 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f16 = (float) i125;

        $f18 = $f17 * $f16;

        $i101 = (int) $f18;

        $i102 = $i101 << 8;

        $i105 = $i103 | $i102;

        $f20 = r2.<com.jhlabs.image.GlintFilter: float amount>;

        $f19 = (float) i126;

        $f21 = $f20 * $f19;

        $i104 = (int) $f21;

        i127 = $i105 | $i104;

        r4[i123] = i127;

        i123 = i123 + 1;

        goto label03;

     label04:
        $r13 = new java.awt.image.BufferedImage;

        specialinvoke $r13.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        r11 = $r13;

        $f2 = r2.<com.jhlabs.image.GlintFilter: float threshold>;

        $f3 = $f2 * 3.0F;

        $f4 = $f3 * 255.0F;

        $i94 = (int) $f4;

        i128 = 0;

     label05:
        if i128 >= $i1 goto label10;

        virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: int[] getRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r0, 0, i128, $i0, 1, r1);

        i129 = 0;

     label06:
        if i129 >= $i0 goto label09;

        i130 = r1[i129];

        i131 = i130 & -16777216;

        $i85 = i130 >> 16;

        i132 = $i85 & 255;

        $i86 = i130 >> 8;

        i133 = $i86 & 255;

        i134 = i130 & 255;

        $i87 = i132 + i133;

        i135 = $i87 + i134;

        if i135 >= $i94 goto label07;

        r1[i129] = -16777216;

        goto label08;

     label07:
        i136 = i135 / 3;

        $i88 = i136 << 16;

        $i90 = i131 | $i88;

        $i89 = i136 << 8;

        $i91 = $i90 | $i89;

        $i92 = $i91 | i136;

        r1[i129] = $i92;

     label08:
        i129 = i129 + 1;

        goto label06;

     label09:
        virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: void setRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>($r13, 0, i128, $i0, 1, r1);

        i128 = i128 + 1;

        goto label05;

     label10:
        $f5 = r2.<com.jhlabs.image.GlintFilter: float blur>;

        $b7 = $f5 cmpl 0.0F;

        if $b7 == 0 goto label11;

        $r14 = new com.jhlabs.image.GaussianFilter;

        $f9 = r2.<com.jhlabs.image.GlintFilter: float blur>;

        specialinvoke $r14.<com.jhlabs.image.GaussianFilter: void <init>(float)>($f9);

        r11 = virtualinvoke $r14.<com.jhlabs.image.GaussianFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>($r13, null);

     label11:
        if r10 != null goto label12;

        r10 = virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r0, null);

     label12:
        $z0 = r2.<com.jhlabs.image.GlintFilter: boolean glintOnly>;

        if $z0 == 0 goto label13;

        $i84 = $i0 * $i1;

        r12 = newarray (int)[$i84];

        goto label14;

     label13:
        r12 = virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: int[] getRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r0, 0, 0, $i0, $i1, null);

     label14:
        i137 = 0;

     label15:
        if i137 >= $i1 goto label34;

        i138 = i137 * $i0;

        virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: int[] getRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r11, 0, i137, $i0, 1, r1);

        $i8 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $i9 = i137 - $i8;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0);

        i139 = $i10 - i137;

        $i11 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $i13 = i137 + $i11;

        $i12 = $i1 - 1;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        i140 = $i14 - i137;

        $i15 = i137 - i3;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i15, 0);

        i141 = $i16 - i137;

        $i18 = i137 + i3;

        $i17 = $i1 - 1;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i17);

        i142 = $i19 - i137;

        i143 = 0;

     label16:
        if i143 >= $i0 goto label33;

        $i20 = r1[i143];

        $i21 = $i20 & 255;

        $f8 = (float) $i21;

        $f6 = r2.<com.jhlabs.image.GlintFilter: float threshold>;

        $f7 = $f6 * 255.0F;

        $b22 = $f8 cmpl $f7;

        $i166 = (int) $b22;

        if $i166 <= 0 goto label32;

        $i23 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $i24 = i143 - $i23;

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i24, 0);

        i26 = $i25 - i143;

        $i27 = r2.<com.jhlabs.image.GlintFilter: int length>;

        $i29 = i143 + $i27;

        $i28 = $i0 - 1;

        $i30 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i28);

        i31 = $i30 - i143;

        $i32 = i143 - i3;

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>($i32, 0);

        i34 = $i33 - i143;

        $i36 = i143 + i3;

        $i35 = $i0 - 1;

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>($i36, $i35);

        i38 = $i37 - i143;

        i144 = 0;

        i145 = 0;

     label17:
        if i144 > i31 goto label18;

        $i82 = i138 + i144;

        $i79 = i138 + i144;

        $i81 = r12[$i79];

        $i80 = r3[i145];

        $i83 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i81, $i80, 4);

        r12[$i82] = $i83;

        i144 = i144 + 1;

        i145 = i145 + 1;

        goto label17;

     label18:
        $i168 = (int) -1;

        i146 = $i168;

        i147 = 1;

     label19:
        if i146 < i26 goto label20;

        $i77 = i138 + i146;

        $i74 = i138 + i146;

        $i76 = r12[$i74];

        $i75 = r3[i147];

        $i78 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i76, $i75, 4);

        r12[$i77] = $i78;

        $i170 = (int) -1;

        i146 = i146 + $i170;

        i147 = i147 + 1;

        goto label19;

     label20:
        i148 = 1;

        i149 = i138 + $i0;

        i150 = 0;

     label21:
        if i148 > i140 goto label22;

        $i72 = r12[i149];

        $i71 = r3[i150];

        $i73 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i72, $i71, 4);

        r12[i149] = $i73;

        i148 = i148 + 1;

        i149 = i149 + $i0;

        i150 = i150 + 1;

        goto label21;

     label22:
        $i172 = (int) -1;

        i151 = $i172;

        i152 = i138 - $i0;

        i153 = 0;

     label23:
        if i151 < i139 goto label24;

        $i69 = r12[i152];

        $i68 = r3[i153];

        $i70 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i69, $i68, 4);

        r12[i152] = $i70;

        $i174 = (int) -1;

        i151 = i151 + $i174;

        i152 = i152 - $i0;

        i153 = i153 + 1;

        goto label23;

     label24:
        staticinvoke <java.lang.Math: int max(int,int)>(i34, i141);

        staticinvoke <java.lang.Math: int min(int,int)>(i38, i142);

        $i39 = staticinvoke <java.lang.Math: int min(int,int)>(i38, i142);

        i154 = 1;

        $i40 = i138 + $i0;

        i155 = $i40 + 1;

        i156 = 0;

     label25:
        if i154 > $i39 goto label26;

        $i65 = r12[i155];

        $i64 = r4[i156];

        $i66 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i65, $i64, 4);

        r12[i155] = $i66;

        i154 = i154 + 1;

        $i67 = $i0 + 1;

        i155 = i155 + $i67;

        i156 = i156 + 1;

        goto label25;

     label26:
        $i42 = neg i34;

        $i41 = neg i141;

        $i43 = staticinvoke <java.lang.Math: int min(int,int)>($i42, $i41);

        i157 = 1;

        $i44 = i138 - $i0;

        i158 = $i44 - 1;

        i159 = 0;

     label27:
        if i157 > $i43 goto label28;

        $i61 = r12[i158];

        $i60 = r4[i159];

        $i62 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i61, $i60, 4);

        r12[i158] = $i62;

        i157 = i157 + 1;

        $i63 = $i0 + 1;

        i158 = i158 - $i63;

        i159 = i159 + 1;

        goto label27;

     label28:
        $i45 = neg i141;

        $i46 = staticinvoke <java.lang.Math: int min(int,int)>(i38, $i45);

        i160 = 1;

        $i47 = i138 - $i0;

        i161 = $i47 + 1;

        i162 = 0;

     label29:
        if i160 > $i46 goto label30;

        $i56 = r12[i161];

        $i55 = r4[i162];

        $i57 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i56, $i55, 4);

        r12[i161] = $i57;

        i160 = i160 + 1;

        $i58 = neg $i0;

        $i59 = $i58 + 1;

        i161 = i161 + $i59;

        i162 = i162 + 1;

        goto label29;

     label30:
        $i48 = neg i34;

        $i49 = staticinvoke <java.lang.Math: int min(int,int)>($i48, i142);

        i163 = 1;

        $i50 = i138 + $i0;

        i164 = $i50 - 1;

        i165 = 0;

     label31:
        if i163 > $i49 goto label32;

        $i52 = r12[i164];

        $i51 = r4[i165];

        $i53 = staticinvoke <com.jhlabs.image.PixelUtils: int combinePixels(int,int,int)>($i52, $i51, 4);

        r12[i164] = $i53;

        i163 = i163 + 1;

        $i54 = $i0 - 1;

        i164 = i164 + $i54;

        i165 = i165 + 1;

        goto label31;

     label32:
        i138 = i138 + 1;

        i143 = i143 + 1;

        goto label16;

     label33:
        i137 = i137 + 1;

        goto label15;

     label34:
        virtualinvoke r2.<com.jhlabs.image.AbstractBufferedImageOp: void setRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r10, 0, 0, $i0, $i1, r12);

        return r10;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.GlintFilter r0;

        r0 := @this: com.jhlabs.image.GlintFilter;

        return "Effects/Glint...";
    }
}
