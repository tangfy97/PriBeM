public class org.springframework.expression.spel.ast.QualifiedIdentifier extends org.springframework.expression.spel.ast.SpelNodeImpl
{
    private org.springframework.expression.TypedValue value;

    public transient void <init>(int, org.springframework.expression.spel.ast.SpelNodeImpl[])
    {
        int i0;
        org.springframework.expression.spel.ast.QualifiedIdentifier r0;
        org.springframework.expression.spel.ast.SpelNodeImpl[] r1;

        r0 := @this: org.springframework.expression.spel.ast.QualifiedIdentifier;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.expression.spel.ast.SpelNodeImpl[];

        specialinvoke r0.<org.springframework.expression.spel.ast.SpelNodeImpl: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl[])>(i0, r1);

        return;
    }

    public org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState) throws org.springframework.expression.EvaluationException
    {
        org.springframework.expression.spel.ast.SpelNodeImpl[] $r4;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        org.springframework.expression.spel.ExpressionState r5;
        java.lang.Object $r8;
        org.springframework.expression.spel.ast.QualifiedIdentifier r0;
        java.lang.String $r9, $r11;
        org.springframework.expression.TypedValue $r1, $r2, $r7, $r10;
        org.springframework.expression.spel.ast.SpelNodeImpl $r6;
        boolean $z0;

        r0 := @this: org.springframework.expression.spel.ast.QualifiedIdentifier;

        r5 := @parameter0: org.springframework.expression.spel.ExpressionState;

        $r1 = r0.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue value>;

        if $r1 != null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

        goto label3;

     label1:
        $r4 = r0.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.spel.ast.SpelNodeImpl[] children>;

        $r6 = $r4[i0];

        $r7 = virtualinvoke $r6.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r5);

        $r8 = virtualinvoke $r7.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        if i0 <= 0 goto label2;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        i0 = i0 + 1;

     label3:
        $i1 = virtualinvoke r0.<org.springframework.expression.spel.ast.QualifiedIdentifier: int getChildCount()>();

        if i0 < $i1 goto label1;

        $r10 = new org.springframework.expression.TypedValue;

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r11);

        r0.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue value> = $r10;

     label4:
        $r2 = r0.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue value>;

        return $r2;
    }

    public java.lang.String toStringAST()
    {
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r7;
        org.springframework.expression.spel.ast.QualifiedIdentifier r1;
        java.lang.String $r4, $r5;
        org.springframework.expression.TypedValue $r2, $r6;
        org.springframework.expression.spel.SpelNode $r3;

        r1 := @this: org.springframework.expression.spel.ast.QualifiedIdentifier;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue value>;

        if $r2 == null goto label1;

        $r6 = r1.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue value>;

        $r7 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        goto label5;

     label1:
        i0 = 0;

        goto label4;

     label2:
        if i0 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label3:
        $r3 = virtualinvoke r1.<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.spel.SpelNode getChild(int)>(i0);

        $r4 = interfaceinvoke $r3.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i0 = i0 + 1;

     label4:
        $i1 = virtualinvoke r1.<org.springframework.expression.spel.ast.QualifiedIdentifier: int getChildCount()>();

        if i0 < $i1 goto label2;

     label5:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
