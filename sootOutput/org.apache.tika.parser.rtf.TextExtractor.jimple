final class org.apache.tika.parser.rtf.TextExtractor extends java.lang.Object
{
    private static final java.nio.charset.Charset ASCII;
    private static final java.nio.charset.Charset WINDOWS_1252;
    private static final java.nio.charset.Charset MAC_ROMAN;
    private static final java.nio.charset.Charset SHIFT_JIS;
    private static final java.nio.charset.Charset WINDOWS_57011;
    private static final java.nio.charset.Charset WINDOWS_57010;
    private static final java.nio.charset.Charset WINDOWS_57009;
    private static final java.nio.charset.Charset WINDOWS_57008;
    private static final java.nio.charset.Charset WINDOWS_57007;
    private static final java.nio.charset.Charset WINDOWS_57006;
    private static final java.nio.charset.Charset WINDOWS_57005;
    private static final java.nio.charset.Charset WINDOWS_57004;
    private static final java.nio.charset.Charset WINDOWS_57003;
    private static final java.nio.charset.Charset X_ISCII91;
    private static final java.nio.charset.Charset X_MAC_CENTRAL_EUROPE;
    private static final java.nio.charset.Charset MAC_CYRILLIC;
    private static final java.nio.charset.Charset X_JOHAB;
    private static final java.nio.charset.Charset CP12582;
    private static final java.nio.charset.Charset CP12572;
    private static final java.nio.charset.Charset CP12562;
    private static final java.nio.charset.Charset CP12552;
    private static final java.nio.charset.Charset CP12542;
    private static final java.nio.charset.Charset CP12532;
    private static final java.nio.charset.Charset CP1252;
    private static final java.nio.charset.Charset CP12512;
    private static final java.nio.charset.Charset CP12502;
    private static final java.nio.charset.Charset CP950;
    private static final java.nio.charset.Charset CP949;
    private static final java.nio.charset.Charset MS9362;
    private static final java.nio.charset.Charset MS8742;
    private static final java.nio.charset.Charset CP866;
    private static final java.nio.charset.Charset CP865;
    private static final java.nio.charset.Charset CP864;
    private static final java.nio.charset.Charset CP863;
    private static final java.nio.charset.Charset CP862;
    private static final java.nio.charset.Charset CP860;
    private static final java.nio.charset.Charset CP852;
    private static final java.nio.charset.Charset CP8502;
    private static final java.nio.charset.Charset CP819;
    private static final java.nio.charset.Charset WINDOWS_720;
    private static final java.nio.charset.Charset WINDOWS_711;
    private static final java.nio.charset.Charset WINDOWS_710;
    private static final java.nio.charset.Charset WINDOWS_709;
    private static final java.nio.charset.Charset ISO_8859_6;
    private static final java.nio.charset.Charset CP4372;
    private static final java.nio.charset.Charset CP850;
    private static final java.nio.charset.Charset CP437;
    private static final java.nio.charset.Charset MS874;
    private static final java.nio.charset.Charset CP1257;
    private static final java.nio.charset.Charset CP1256;
    private static final java.nio.charset.Charset CP1255;
    private static final java.nio.charset.Charset CP1258;
    private static final java.nio.charset.Charset CP1254;
    private static final java.nio.charset.Charset CP1253;
    private static final java.nio.charset.Charset MS950;
    private static final java.nio.charset.Charset MS936;
    private static final java.nio.charset.Charset MS1361;
    private static final java.nio.charset.Charset MS932;
    private static final java.nio.charset.Charset CP1251;
    private static final java.nio.charset.Charset CP1250;
    private static final java.nio.charset.Charset MAC_THAI;
    private static final java.nio.charset.Charset MAC_TURKISH;
    private static final java.nio.charset.Charset MAC_GREEK;
    private static final java.nio.charset.Charset MAC_ARABIC;
    private static final java.nio.charset.Charset MAC_HEBREW;
    private static final java.nio.charset.Charset JOHAB;
    private static final java.nio.charset.Charset BIG5;
    private static final java.nio.charset.Charset GB2312;
    private static final java.nio.charset.Charset MS949;
    private int written;
    private byte[] pendingBytes;
    private int pendingByteCount;
    private java.nio.ByteBuffer pendingByteBuffer;
    private char[] pendingChars;
    private int pendingCharCount;
    private byte[] pendingControl;
    private int pendingControlCount;
    private final char[] outputArray;
    private final java.nio.CharBuffer outputBuffer;
    private java.nio.charset.CharsetDecoder decoder;
    private java.nio.charset.Charset lastCharset;
    private java.nio.charset.Charset globalCharset;
    private int globalDefaultFont;
    private int curFontID;
    private final java.util.Map fontToCharset;
    private final java.util.LinkedList groupStates;
    private org.apache.tika.parser.rtf.GroupState groupState;
    private boolean inHeader;
    private int fontTableState;
    private int fontTableDepth;
    private org.apache.tika.metadata.Property nextMetaData;
    private boolean inParagraph;
    private int fieldState;
    private int pendingListEnd;
    private java.util.Map listTable;
    private java.util.Map listOverrideTable;
    private java.util.Map currentListTable;
    private org.apache.tika.parser.rtf.ListDescriptor currentList;
    private int listTableLevel;
    private boolean ignoreLists;
    private java.lang.String pendingURL;
    private final java.lang.StringBuilder pendingBuffer;
    private int uprState;
    private final org.apache.tika.sax.XHTMLContentHandler out;
    private final org.apache.tika.metadata.Metadata metadata;
    private final org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler;
    private int year;
    private int month;
    private int day;
    private int hour;
    private int minute;
    int ansiSkip;
    private static final java.util.Map FCHARSET_MAP;
    private static final java.util.Map ANSICPG_MAP;
    static final boolean $assertionsDisabled;

    private static java.nio.charset.Charset getCharset(java.lang.String)
    {
        java.nio.charset.Charset $r1, $r3;
        java.lang.String r0;
        java.lang.Exception $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.tika.utils.CharsetUtils: java.nio.charset.Charset forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset ASCII>;

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(org.apache.tika.sax.XHTMLContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.rtf.RTFEmbObjHandler)
    {
        byte[] $r1, $r2, $r5;
        java.util.HashMap $r19, $r22, $r23;
        org.apache.tika.parser.rtf.GroupState $r21;
        java.nio.ByteBuffer $r3;
        org.apache.tika.metadata.Metadata r16;
        java.nio.charset.Charset $r9;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i1, $i3, $i5, $i7;
        java.util.LinkedList $r20;
        java.nio.CharBuffer $r8;
        org.apache.tika.sax.XHTMLContentHandler r17;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r18;
        char[] $r4, $r6, $r7;
        java.lang.StringBuilder $r24;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r17 := @parameter0: org.apache.tika.sax.XHTMLContentHandler;

        r16 := @parameter1: org.apache.tika.metadata.Metadata;

        r18 := @parameter2: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: int written> = 0;

        $r1 = newarray (byte)[16];

        r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes> = $r1;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer> = $r3;

        $r4 = newarray (char)[10];

        r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars> = $r4;

        $r5 = newarray (byte)[10];

        r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl> = $r5;

        $r6 = newarray (char)[128];

        r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray> = $r6;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray>;

        $r8 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r7);

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer> = $r8;

        $r9 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_1252>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = $r9;

        $i1 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int globalDefaultFont> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int curFontID> = $i3;

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map fontToCharset> = $r19;

        $r20 = new java.util.LinkedList;

        specialinvoke $r20.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates> = $r20;

        $r21 = new org.apache.tika.parser.rtf.GroupState;

        specialinvoke $r21.<org.apache.tika.parser.rtf.GroupState: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState> = $r21;

        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader> = 1;

        $r22 = new java.util.HashMap;

        specialinvoke $r22.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map listTable> = $r22;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map listOverrideTable> = $r23;

        $i5 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel> = $i5;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer> = $r24;

        $i7 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState> = $i7;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = 0;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata> = r16;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out> = r17;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler> = r18;

        return;
    }

    public boolean isIgnoringLists()
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean ignoreLists>;

        return $z0;
    }

    public void setIgnoreLists(boolean)
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean ignoreLists> = z0;

        return;
    }

    protected static boolean isHexChar(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 48 goto label1;

        if i0 <= 57 goto label3;

     label1:
        if i0 < 97 goto label2;

        if i0 <= 102 goto label3;

     label2:
        if i0 < 65 goto label4;

        if i0 > 70 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private static boolean isAlpha(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 97 goto label1;

        if i0 <= 122 goto label2;

     label1:
        if i0 < 65 goto label3;

        if i0 > 90 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isDigit(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 48 goto label1;

        if i0 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected static int hexValue(int)
    {
        java.lang.AssertionError $r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 48 goto label1;

        if i0 > 57 goto label1;

        $i5 = i0 - 48;

        return $i5;

     label1:
        if i0 < 97 goto label2;

        if i0 > 122 goto label2;

        $i3 = i0 - 97;

        $i4 = 10 + $i3;

        return $i4;

     label2:
        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if i0 < 65 goto label3;

        if i0 <= 90 goto label4;

     label3:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label4:
        $i1 = i0 - 65;

        $i2 = 10 + $i1;

        return $i2;
    }

    private void pushText() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1;
        java.lang.AssertionError $r1;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        if $i0 == 0 goto label2;

        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        if $i1 == 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushBytes()>();

        goto label3;

     label2:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushChars()>();

     label3:
        return;
    }

    private void addOutputByte(int) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r2, $r3, $r4, r5, $r6, $r7, $r8;
        java.lang.AssertionError $r11;
        org.apache.tika.parser.rtf.GroupState $r1;
        java.nio.ByteBuffer $r9;
        byte $b7;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i9, $i10;
        java.lang.String $r15;
        boolean $z0;
        double $d0, $d1;
        char $c11;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r10;
        java.lang.StringBuilder $r12, $r13, $r14;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i6 := @parameter0: int;

        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i6 < 0 goto label1;

        if i6 < 256 goto label2;

     label1:
        $r11 = new java.lang.AssertionError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byte value out of range: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r11;

     label2:
        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        if $i0 == 0 goto label3;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushChars()>();

     label3:
        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i1 = $r1.<org.apache.tika.parser.rtf.GroupState: int pictDepth>;

        if $i1 <= 0 goto label4;

        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        $c11 = (char) i6;

        virtualinvoke $r10.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void writeMetadataChar(char)>($c11);

        goto label6;

     label4:
        $i3 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $i2 = lengthof $r2;

        if $i3 != $i2 goto label5;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $i8 = lengthof $r4;

        $d0 = (double) $i8;

        $d1 = $d0 * 1.25;

        $i9 = (int) $d1;

        r5 = newarray (byte)[$i9];

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $i10 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i10);

        r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes> = r5;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r8);

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer> = $r9;

     label5:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingBytes>;

        $i4 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        $i5 = $i4 + 1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount> = $i5;

        $b7 = (byte) i6;

        $r3[$i4] = $b7;

     label6:
        return;
    }

    private void addControl(int)
    {
        byte[] $r1, $r2, $r3, r4, $r5, $r6;
        java.lang.AssertionError $r7;
        byte $b5;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, $i3, i4, $i6, $i7, $i8;
        boolean $z0, $z1;
        double $d0, $d1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i4 := @parameter0: int;

        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isAlpha(int)>(i4);

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount>;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label2;

        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $i6 = lengthof $r3;

        $d0 = (double) $i6;

        $d1 = $d0 * 1.25;

        $i7 = (int) $d1;

        r4 = newarray (byte)[$i7];

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $i8 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i8);

        r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl> = r4;

     label2:
        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount> = $i3;

        $b5 = (byte) i4;

        $r2[$i2] = $b5;

        return;
    }

    private void addOutputChar(char) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.GroupState $r2, $r4;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        double $d0, $d1;
        char c1;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r3;
        char[] $r5, $r6, $r7, r8, $r9, $r10;
        java.lang.StringBuilder $r1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        c1 := @parameter0: char;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushBytes()>();

     label1:
        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z0 != 0 goto label2;

        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i2 != 1 goto label3;

     label2:
        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label7;

     label3:
        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z1 = $r2.<org.apache.tika.parser.rtf.GroupState: boolean sn>;

        if $z1 == 1 goto label4;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z2 = $r4.<org.apache.tika.parser.rtf.GroupState: boolean sv>;

        if $z2 != 1 goto label5;

     label4:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r3.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void writeMetadataChar(char)>(c1);

        goto label7;

     label5:
        $i4 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $i3 = lengthof $r5;

        if $i4 != $i3 goto label6;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $i7 = lengthof $r7;

        $d0 = (double) $i7;

        $d1 = $d0 * 1.25;

        $i8 = (int) $d1;

        r8 = newarray (char)[$i8];

        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $i9 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r8, 0, $i9);

        r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars> = r8;

     label6:
        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $i5 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        $i6 = $i5 + 1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount> = $i6;

        $r6[$i5] = c1;

     label7:
        return;
    }

    public void extract(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        java.io.PushbackInputStream $r1;
        java.io.InputStream r2;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.PushbackInputStream;

        specialinvoke $r1.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r2, 2);

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void extract(java.io.PushbackInputStream)>($r1);

        return;
    }

    private void extract(java.io.PushbackInputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.io.PushbackInputStream r2;
        org.apache.tika.parser.rtf.GroupState $r3, $r5, $r6, $r8, $r9;
        org.apache.tika.metadata.Property $r7;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.util.LinkedList $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.tika.sax.XHTMLContentHandler $r1, $r11;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r4;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r2 := @parameter0: java.io.PushbackInputStream;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r1.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

     label01:
        $i0 = virtualinvoke r2.<java.io.PushbackInputStream: int read()>();

        $i6 = (int) -1;

        if $i0 != $i6 goto label02;

        goto label11;

     label02:
        if $i0 != 92 goto label03;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void parseControlToken(java.io.PushbackInputStream)>(r2);

        goto label10;

     label03:
        if $i0 != 123 goto label04;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void processGroupStart(java.io.PushbackInputStream)>(r2);

        goto label10;

     label04:
        if $i0 != 125 goto label05;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void processGroupEnd()>();

        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $z4 = virtualinvoke $r10.<java.util.LinkedList: boolean isEmpty()>();

        if $z4 == 0 goto label10;

        goto label11;

     label05:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z0 = $r3.<org.apache.tika.parser.rtf.GroupState: boolean objdata>;

        if $z0 == 1 goto label06;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i1 = $r5.<org.apache.tika.parser.rtf.GroupState: int pictDepth>;

        if $i1 != 1 goto label07;

     label06:
        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r4.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void writeHexChar(int)>($i0);

        goto label10;

     label07:
        if $i0 == 13 goto label10;

        if $i0 == 10 goto label10;

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z1 = $r6.<org.apache.tika.parser.rtf.GroupState: boolean ignore>;

        if $z1 == 0 goto label08;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        if $r7 != null goto label08;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z2 = $r8.<org.apache.tika.parser.rtf.GroupState: boolean sn>;

        if $z2 == 1 goto label08;

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z3 = $r9.<org.apache.tika.parser.rtf.GroupState: boolean sv>;

        if $z3 != 1 goto label10;

     label08:
        $i4 = r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip>;

        if $i4 == 0 goto label09;

        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip>;

        $i3 = $i2 - 1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = $i3;

        goto label10;

     label09:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputByte(int)>($i0);

     label10:
        goto label01;

     label11:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void endParagraph(boolean)>(0);

        $r11 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r11.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;
    }

    private void parseControlToken(java.io.PushbackInputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.io.PushbackInputStream r0;
        char $c1, $c2;
        org.apache.tika.parser.rtf.TextExtractor r1;
        int $i0, $i3, $i5;
        boolean $z0;

        r1 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r0 := @parameter0: java.io.PushbackInputStream;

        $i0 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        if $i0 != 39 goto label1;

        specialinvoke r1.<org.apache.tika.parser.rtf.TextExtractor: void parseHexChar(java.io.PushbackInputStream)>(r0);

        goto label5;

     label1:
        $z0 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isAlpha(int)>($i0);

        if $z0 == 0 goto label2;

        $c2 = (char) $i0;

        $i3 = (int) $c2;

        specialinvoke r1.<org.apache.tika.parser.rtf.TextExtractor: void parseControlWord(int,java.io.PushbackInputStream)>($i3, r0);

        goto label5;

     label2:
        if $i0 == 123 goto label3;

        if $i0 == 125 goto label3;

        if $i0 == 92 goto label3;

        if $i0 == 13 goto label3;

        if $i0 != 10 goto label4;

     label3:
        specialinvoke r1.<org.apache.tika.parser.rtf.TextExtractor: void addOutputByte(int)>($i0);

        goto label5;

     label4:
        $i5 = (int) -1;

        if $i0 == $i5 goto label5;

        $c1 = (char) $i0;

        specialinvoke r1.<org.apache.tika.parser.rtf.TextExtractor: void processControlSymbol(char)>($c1);

     label5:
        return;
    }

    private void parseHexChar(java.io.PushbackInputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.io.PushbackInputStream r0;
        org.apache.tika.parser.rtf.TextExtractor r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1;

        r1 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r0 := @parameter0: java.io.PushbackInputStream;

        $i0 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        $z0 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isHexChar(int)>($i0);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<java.io.PushbackInputStream: void unread(int)>($i0);

        return;

     label1:
        $i1 = virtualinvoke r0.<java.io.PushbackInputStream: int read()>();

        $z1 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isHexChar(int)>($i1);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<java.io.PushbackInputStream: void unread(int)>($i1);

        return;

     label2:
        $i2 = r1.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip>;

        if $i2 == 0 goto label3;

        $i7 = r1.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip>;

        $i8 = $i7 - 1;

        r1.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = $i8;

        goto label4;

     label3:
        $i3 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: int hexValue(int)>($i0);

        $i4 = 16 * $i3;

        $i5 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: int hexValue(int)>($i1);

        $i6 = $i4 + $i5;

        specialinvoke r1.<org.apache.tika.parser.rtf.TextExtractor: void addOutputByte(int)>($i6);

     label4:
        return;
    }

    private void parseControlWord(int, java.io.PushbackInputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.io.PushbackInputStream r1;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int i0, $i1, i2, i3, i4;
        boolean $z0, z1, z2, $z3;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.PushbackInputStream;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addControl(int)>(i0);

        i2 = virtualinvoke r1.<java.io.PushbackInputStream: int read()>();

     label1:
        $z0 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isAlpha(int)>(i2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addControl(int)>(i2);

        i2 = virtualinvoke r1.<java.io.PushbackInputStream: int read()>();

        goto label1;

     label2:
        z1 = 0;

        z2 = 0;

        if i2 != 45 goto label3;

        z2 = 1;

        z1 = 1;

        i2 = virtualinvoke r1.<java.io.PushbackInputStream: int read()>();

     label3:
        i3 = 0;

     label4:
        $z3 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isDigit(int)>(i2);

        if $z3 == 0 goto label5;

        i4 = i3 * 10;

        $i1 = i2 - 48;

        i3 = i4 + $i1;

        z1 = 1;

        i2 = virtualinvoke r1.<java.io.PushbackInputStream: int read()>();

        goto label4;

     label5:
        if i2 == 32 goto label6;

        virtualinvoke r1.<java.io.PushbackInputStream: void unread(int)>(i2);

     label6:
        if z1 == 0 goto label8;

        if z2 == 0 goto label7;

        i3 = neg i3;

     label7:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void processControlWord(int,java.io.PushbackInputStream)>(i3, r1);

        goto label9;

     label8:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void processControlWord()>();

     label9:
        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount> = 0;

        return;
    }

    private void lazyStartParagraph() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.GroupState $r1, $r2, $r4, $r5, $r7, $r8, $r9;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.tika.sax.XHTMLContentHandler $r3, $r6;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inParagraph>;

        if $z0 != 0 goto label9;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z1 = $r1.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

     label1:
        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z2 = $r2.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z2 == 0 goto label2;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("b");

     label2:
        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        if $i0 == 0 goto label3;

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i5 = $r9.<org.apache.tika.parser.rtf.GroupState: int list>;

        $i4 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        if $i5 == $i4 goto label3;

        $i6 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void endList(int)>($i6);

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd> = 0;

     label3:
        $z5 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inList()>();

        if $z5 == 0 goto label4;

        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i1 = $r7.<org.apache.tika.parser.rtf.GroupState: int list>;

        if $i2 == $i1 goto label4;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i3 = $r8.<org.apache.tika.parser.rtf.GroupState: int list>;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void startList(int)>($i3);

     label4:
        $z6 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inList()>();

        if $z6 == 0 goto label5;

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r6.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("li");

        goto label6;

     label5:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r3.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("p");

     label6:
        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z3 = $r4.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z3 == 0 goto label7;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("b");

     label7:
        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z4 = $r5.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z4 == 0 goto label8;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

     label8:
        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inParagraph> = 1;

     label9:
        return;
    }

    private void endParagraph(boolean) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.GroupState $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.tika.sax.XHTMLContentHandler $r3, $r8;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        z1 := @parameter0: boolean;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inParagraph>;

        if $z0 == 0 goto label09;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z2 = $r1.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z2 == 0 goto label01;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r10.<org.apache.tika.parser.rtf.GroupState: boolean italic> = z1;

     label01:
        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z3 = $r2.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z3 == 0 goto label02;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("b");

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r9.<org.apache.tika.parser.rtf.GroupState: boolean bold> = z1;

     label02:
        $z4 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inList()>();

        if $z4 == 0 goto label03;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r8.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("li");

        goto label04;

     label03:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r3.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("p");

     label04:
        if z1 == 0 goto label08;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z5 = $r4.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z5 != 0 goto label05;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z8 = $r7.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z8 == 0 goto label08;

     label05:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("p");

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z6 = $r5.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z6 == 0 goto label06;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("b");

     label06:
        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z7 = $r6.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z7 == 0 goto label07;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

     label07:
        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inParagraph> = 1;

        goto label09;

     label08:
        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inParagraph> = 0;

     label09:
        if z1 != 0 goto label10;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        if $i0 == 0 goto label10;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd>;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void endList(int)>($i1);

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd> = 0;

     label10:
        return;
    }

    private void pushChars() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.sax.XHTMLContentHandler $r2;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1;
        char[] $r1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] pendingChars>;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount>;

        virtualinvoke $r2.<org.apache.tika.sax.XHTMLContentHandler: void characters(char[],int,int)>($r1, 0, $i1);

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingCharCount> = 0;

     label1:
        return;
    }

    private void pushBytes() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.nio.ByteBuffer $r3, $r7, $r20, $r23;
        org.apache.tika.metadata.Property $r22;
        org.apache.tika.parser.rtf.TextExtractor r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.nio.CharBuffer $r4, $r6, $r10, $r15, $r18, $r24, $r26;
        java.nio.charset.CharsetDecoder $r2;
        java.lang.StringBuilder $r9, $r14;
        java.lang.AssertionError $r19, $r21;
        org.apache.tika.parser.rtf.GroupState $r1;
        java.nio.charset.CoderResult $r5, $r25, $r27, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.tika.sax.XHTMLContentHandler $r12, $r17;
        char[] $r8, $r11, $r13, $r16;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        if $i0 <= 0 goto label16;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z0 = $r1.<org.apache.tika.parser.rtf.GroupState: boolean ignore>;

        if $z0 == 0 goto label01;

        $r22 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        if $r22 == null goto label16;

     label01:
        $r2 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.CharsetDecoder getDecoder()>();

        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer>;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        $z1 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r20 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer>;

        $i6 = virtualinvoke $r20.<java.nio.ByteBuffer: int position()>();

        if $i6 == 0 goto label02;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label02:
        $z2 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r18 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        $i5 = virtualinvoke $r18.<java.nio.CharBuffer: int position()>();

        if $i5 == 0 goto label03;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label03:
        $r23 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer>;

        $r24 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        $r25 = virtualinvoke $r2.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>($r23, $r24, 1);

        $r26 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        $i7 = virtualinvoke $r26.<java.nio.CharBuffer: int position()>();

        if $i7 <= 0 goto label07;

        $z4 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z4 != 0 goto label04;

        $i4 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i4 != 1 goto label05;

     label04:
        $r14 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        $r13 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r13, 0, $i7);

        goto label06;

     label05:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r17 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $r16 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray>;

        virtualinvoke $r17.<org.apache.tika.sax.XHTMLContentHandler: void characters(char[],int,int)>($r16, 0, $i7);

     label06:
        $r15 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        virtualinvoke $r15.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0);

     label07:
        $r27 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        if $r25 != $r27 goto label08;

        goto label09;

     label08:
        goto label03;

     label09:
        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        $r5 = virtualinvoke $r2.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult flush(java.nio.CharBuffer)>($r4);

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        $i2 = virtualinvoke $r6.<java.nio.CharBuffer: int position()>();

        if $i2 <= 0 goto label13;

        $z3 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z3 != 0 goto label10;

        $i3 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i3 != 1 goto label11;

     label10:
        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r8, 0, $i2);

        goto label12;

     label11:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r12 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $r11 = r0.<org.apache.tika.parser.rtf.TextExtractor: char[] outputArray>;

        virtualinvoke $r12.<org.apache.tika.sax.XHTMLContentHandler: void characters(char[],int,int)>($r11, 0, $i2);

     label12:
        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.CharBuffer outputBuffer>;

        virtualinvoke $r10.<java.nio.CharBuffer: java.nio.Buffer position(int)>(0);

     label13:
        $r28 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        if $r5 != $r28 goto label14;

        goto label15;

     label14:
        goto label09;

     label15:
        virtualinvoke $r2.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.ByteBuffer pendingByteBuffer>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

     label16:
        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingByteCount> = 0;

        return;
    }

    private boolean equals(java.lang.String)
    {
        byte[] $r2;
        java.lang.AssertionError $r4;
        byte $b4, $b5;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, i7, $i8, $i9, $i10;
        java.lang.String r1;
        boolean $z0, $z1;
        char $c3, $c6;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i7 = 0;

     label2:
        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingControlCount>;

        if i7 >= $i2 goto label5;

        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c6;

        $z1 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isAlpha(int)>($i8);

        if $z1 != 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        $b5 = (byte) $c3;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: byte[] pendingControl>;

        $b4 = $r2[i7];

        $i9 = (int) $b5;

        $i10 = (int) $b4;

        if $i9 == $i10 goto label4;

        return 0;

     label4:
        i7 = i7 + 1;

        goto label2;

     label5:
        return 1;
    }

    private void processControlSymbol(char) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        int $i1;
        char c0;
        org.apache.tika.parser.rtf.TextExtractor r0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 42: goto label2;
            case 45: goto label3;
            case 95: goto label4;
            case 126: goto label1;
            default: goto label5;
        };

     label1:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(160);

        goto label5;

     label2:
        goto label5;

     label3:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(173);

        goto label5;

     label4:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8209);

        goto label5;

     label5:
        return;
    }

    private java.nio.charset.CharsetDecoder getDecoder() throws org.apache.tika.exception.TikaException
    {
        java.nio.charset.CharsetDecoder $r3, $r5, $r7, $r9;
        java.nio.charset.Charset $r1, $r2, $r8;
        org.apache.tika.parser.rtf.TextExtractor r0;
        java.nio.charset.CodingErrorAction $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $r1 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset()>();

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset lastCharset>;

        if $r2 == null goto label1;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset lastCharset>;

        $z0 = virtualinvoke $r1.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

     label1:
        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.CharsetDecoder decoder> = $r3;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.CharsetDecoder decoder>;

        $r4 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r5.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r4);

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.CharsetDecoder decoder>;

        $r6 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r7.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r6);

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset lastCharset> = $r1;

     label2:
        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.CharsetDecoder decoder>;

        return $r9;
    }

    private java.nio.charset.Charset getCharset() throws org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.rtf.GroupState $r1, $r9;
        java.lang.Integer $r6;
        java.nio.charset.Charset $r2, $r3, r8, $r10, $r11;
        org.apache.tika.exception.TikaException $r12;
        org.apache.tika.parser.rtf.TextExtractor r0;
        java.util.Map $r5;
        int $i0, $i1, $i3;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r2 = $r1.<org.apache.tika.parser.rtf.GroupState: java.nio.charset.Charset fontCharset>;

        if $r2 == null goto label1;

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r10 = $r9.<org.apache.tika.parser.rtf.GroupState: java.nio.charset.Charset fontCharset>;

        return $r10;

     label1:
        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int globalDefaultFont>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label2;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map fontToCharset>;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int globalDefaultFont>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.nio.charset.Charset) $r7;

        if r8 == null goto label2;

        return r8;

     label2:
        $r11 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset>;

        if $r11 != null goto label3;

        $r12 = new org.apache.tika.exception.TikaException;

        specialinvoke $r12.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("unable to determine charset");

        throw $r12;

     label3:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset>;

        return $r3;
    }

    private void processControlWord(int, java.io.PushbackInputStream) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] r2;
        java.io.PushbackInputStream r3;
        java.lang.Integer $r19, $r39, $r43, $r46, $r57;
        org.apache.tika.metadata.Metadata $r47, $r50, $r53;
        org.apache.tika.metadata.Property $r48, $r51, $r54;
        java.util.Map $r18, $r38, $r42, $r45, $r56;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r68;
        java.lang.AssertionError $r66, $r67;
        org.apache.tika.parser.rtf.GroupState $r1, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r41, $r65;
        org.apache.tika.exception.TikaException $r69;
        java.lang.String $r10, $r49, $r52, $r55;
        java.io.IOException $r59;
        int[] $r32, $r34;
        org.apache.tika.parser.rtf.TextExtractor r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r11, $r60;
        org.apache.tika.parser.rtf.ListDescriptor $r31, $r33, $r35, $r36, $r37, $r40, $r63;
        java.nio.charset.Charset r61, r62, r64;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, i19, $i21, $i23;
        char $c17;
        java.lang.Object $r20, $r44, $r58;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i0 := @parameter0: int;

        r3 := @parameter1: java.io.PushbackInputStream;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z0 == 0 goto label18;

        $z17 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ansicpg");

        if $z17 == 0 goto label02;

        $r56 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r58 = interfaceinvoke $r56.<java.util.Map: java.lang.Object get(java.lang.Object)>($r57);

        r61 = (java.nio.charset.Charset) $r58;

        if r61 == null goto label01;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = r61;

     label01:
        goto label11;

     label02:
        $z18 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("deff");

        if $z18 == 0 goto label03;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int globalDefaultFont> = i0;

        goto label11;

     label03:
        $z19 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("nofpages");

        if $z19 == 0 goto label04;

        $r53 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r54 = <org.apache.tika.metadata.Office: org.apache.tika.metadata.Property PAGE_COUNT>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r53.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r54, $r55);

        goto label11;

     label04:
        $z20 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("nofwords");

        if $z20 == 0 goto label05;

        $r50 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r51 = <org.apache.tika.metadata.Office: org.apache.tika.metadata.Property WORD_COUNT>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r50.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r51, $r52);

        goto label11;

     label05:
        $z21 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("nofchars");

        if $z21 == 0 goto label06;

        $r47 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r48 = <org.apache.tika.metadata.Office: org.apache.tika.metadata.Property CHARACTER_COUNT>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r47.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r48, $r49);

        goto label11;

     label06:
        $z22 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("yr");

        if $z22 == 0 goto label07;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int year> = i0;

        goto label11;

     label07:
        $z23 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("mo");

        if $z23 == 0 goto label08;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int month> = i0;

        goto label11;

     label08:
        $z24 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("dy");

        if $z24 == 0 goto label09;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int day> = i0;

        goto label11;

     label09:
        $z25 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("hr");

        if $z25 == 0 goto label10;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int hour> = i0;

        goto label11;

     label10:
        $z26 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("min");

        if $z26 == 0 goto label11;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int minute> = i0;

     label11:
        $i15 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState>;

        if $i15 != 1 goto label14;

        $r41 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i13 = $r41.<org.apache.tika.parser.rtf.GroupState: int depth>;

        $i12 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableDepth>;

        if $i13 >= $i12 goto label12;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState> = 2;

        goto label14;

     label12:
        $z31 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("f");

        if $z31 == 0 goto label13;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int curFontID> = i0;

        goto label14;

     label13:
        $z32 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("fcharset");

        if $z32 == 0 goto label14;

        $r42 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r44 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>($r43);

        r62 = (java.nio.charset.Charset) $r44;

        if r62 == null goto label14;

        $r45 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map fontToCharset>;

        $i14 = r0.<org.apache.tika.parser.rtf.TextExtractor: int curFontID>;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, r62);

     label14:
        $r63 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        if $r63 == null goto label29;

        $z27 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listid");

        if $z27 == 0 goto label15;

        $r36 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $r36.<org.apache.tika.parser.rtf.ListDescriptor: int id> = i0;

        $r38 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map currentListTable>;

        $r37 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $i11 = $r37.<org.apache.tika.parser.rtf.ListDescriptor: int id>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r40 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r40);

        goto label29;

     label15:
        $z28 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listtemplateid");

        if $z28 == 0 goto label16;

        $r35 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $r35.<org.apache.tika.parser.rtf.ListDescriptor: int templateID> = i0;

        goto label29;

     label16:
        $z29 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("levelnfc");

        if $z29 != 0 goto label17;

        $z30 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("levelnfcn");

        if $z30 == 0 goto label29;

     label17:
        $i7 = r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel>;

        $i21 = (int) -1;

        if $i7 <= $i21 goto label29;

        $i9 = r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel>;

        $r31 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $r32 = $r31.<org.apache.tika.parser.rtf.ListDescriptor: int[] numberType>;

        $i8 = lengthof $r32;

        if $i9 >= $i8 goto label29;

        $r33 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $r34 = $r33.<org.apache.tika.parser.rtf.ListDescriptor: int[] numberType>;

        $i10 = r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel>;

        $r34[$i10] = i0;

        goto label29;

     label18:
        $z1 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("b");

        if $z1 == 0 goto label22;

        $z13 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z13 != 0 goto label19;

        if i0 == 0 goto label19;

        $r66 = new java.lang.AssertionError;

        specialinvoke $r66.<java.lang.AssertionError: void <init>()>();

        throw $r66;

     label19:
        $r26 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z14 = $r26.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z14 == 0 goto label29;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r27 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z15 = $r27.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z15 == 0 goto label20;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

     label20:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("b");

        $r28 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z16 = $r28.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z16 == 0 goto label21;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

     label21:
        $r29 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r29.<org.apache.tika.parser.rtf.GroupState: boolean bold> = 0;

        goto label29;

     label22:
        $z2 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("i");

        if $z2 == 0 goto label24;

        $z11 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z11 != 0 goto label23;

        if i0 == 0 goto label23;

        $r67 = new java.lang.AssertionError;

        specialinvoke $r67.<java.lang.AssertionError: void <init>()>();

        throw $r67;

     label23:
        $r23 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z12 = $r23.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z12 == 0 goto label29;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

        $r24 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r24.<org.apache.tika.parser.rtf.GroupState: boolean italic> = 0;

        goto label29;

     label24:
        $z3 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("f");

        if $z3 == 0 goto label27;

        $r18 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map fontToCharset>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r20 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r64 = (java.nio.charset.Charset) $r20;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        if r64 == null goto label25;

        $r22 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r22.<org.apache.tika.parser.rtf.GroupState: java.nio.charset.Charset fontCharset> = r64;

        goto label26;

     label25:
        $r21 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r21.<org.apache.tika.parser.rtf.GroupState: java.nio.charset.Charset fontCharset> = null;

     label26:
        goto label29;

     label27:
        $z4 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ls");

        if $z4 == 0 goto label28;

        $r17 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r17.<org.apache.tika.parser.rtf.GroupState: int list> = i0;

        goto label29;

     label28:
        $z5 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("lslvl");

        if $z5 == 0 goto label29;

        $r16 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r16.<org.apache.tika.parser.rtf.GroupState: int listLevel> = i0;

     label29:
        $z33 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("u");

        if $z33 == 0 goto label32;

        $r13 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z8 = $r13.<org.apache.tika.parser.rtf.GroupState: boolean ignore>;

        if $z8 == 0 goto label30;

        $r14 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z9 = $r14.<org.apache.tika.parser.rtf.GroupState: boolean sv>;

        if $z9 != 0 goto label30;

        $r15 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z10 = $r15.<org.apache.tika.parser.rtf.GroupState: boolean sn>;

        if $z10 == 0 goto label31;

     label30:
        $i23 = (int) 65535;

        $i16 = i0 & $i23;

        $c17 = (char) $i16;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>($c17);

     label31:
        $r65 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i18 = $r65.<org.apache.tika.parser.rtf.GroupState: int ucSkip>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = $i18;

        goto label40;

     label32:
        $z6 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("uc");

        if $z6 == 0 goto label33;

        $r12 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r12.<org.apache.tika.parser.rtf.GroupState: int ucSkip> = i0;

        goto label40;

     label33:
        $z7 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("bin");

        if $z7 == 0 goto label40;

        if i0 < 0 goto label40;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i1 = $r1.<org.apache.tika.parser.rtf.GroupState: int pictDepth>;

        if $i1 != 1 goto label37;

     label34:
        $r11 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r11.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void writeBytes(java.io.InputStream,int)>(r3, i0);

     label35:
        goto label40;

     label36:
        $r59 := @caughtexception;

        $r60 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r60.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void reset()>();

        goto label40;

     label37:
        i19 = i0;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(1024, i0);

        r2 = newarray (byte)[$i2];

     label38:
        if i19 <= 0 goto label40;

        $i3 = lengthof r2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i3);

        $i5 = virtualinvoke r3.<java.io.PushbackInputStream: int read(byte[],int,int)>(r2, 0, $i4);

        if $i5 >= 0 goto label39;

        $r69 = new org.apache.tika.exception.TikaException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected end of file: need ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes of binary data, found ");

        $i6 = i0 - i19;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r10);

        throw $r69;

     label39:
        i19 = i19 - $i5;

        goto label38;

     label40:
        return;

        catch java.io.IOException from label34 to label35 with label36;
    }

    private boolean inList()
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0;
        org.apache.tika.parser.rtf.GroupState $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean ignoreLists>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i0 = $r1.<org.apache.tika.parser.rtf.GroupState: int list>;

        if $i0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void pendingListEnd()
    {
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0;
        org.apache.tika.parser.rtf.GroupState $r1, $r2;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i0 = $r1.<org.apache.tika.parser.rtf.GroupState: int list>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int pendingListEnd> = $i0;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r2.<org.apache.tika.parser.rtf.GroupState: int list> = 0;

        return;
    }

    private void endList(int) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.sax.XHTMLContentHandler $r1;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int i0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean ignoreLists>;

        if $z0 != 0 goto label3;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $z1 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean isUnorderedList(int)>(i0);

        if $z1 == 0 goto label1;

        $r2 = "ul";

        goto label2;

     label1:
        $r2 = "ol";

     label2:
        virtualinvoke $r1.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>($r2);

     label3:
        return;
    }

    private void startList(int) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.sax.XHTMLContentHandler $r1;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int i0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean ignoreLists>;

        if $z0 != 0 goto label3;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $z1 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean isUnorderedList(int)>(i0);

        if $z1 == 0 goto label1;

        $r2 = "ul";

        goto label2;

     label1:
        $r2 = "ol";

     label2:
        virtualinvoke $r1.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>($r2);

     label3:
        return;
    }

    private boolean isUnorderedList(int)
    {
        org.apache.tika.parser.rtf.ListDescriptor r4;
        java.lang.Integer $r2;
        org.apache.tika.parser.rtf.GroupState $r5;
        org.apache.tika.parser.rtf.TextExtractor r0;
        java.util.Map $r1;
        int i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map listTable>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.tika.parser.rtf.ListDescriptor) $r3;

        if r4 == null goto label1;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i1 = $r5.<org.apache.tika.parser.rtf.GroupState: int listLevel>;

        $z0 = virtualinvoke r4.<org.apache.tika.parser.rtf.ListDescriptor: boolean isUnordered(int)>($i1);

        return $z0;

     label1:
        return 1;
    }

    private void end(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.String r1;
        org.apache.tika.sax.XHTMLContentHandler $r2;
        org.apache.tika.parser.rtf.TextExtractor r0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r2.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>(r1);

        return;
    }

    private void start(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.String r1;
        org.apache.tika.sax.XHTMLContentHandler $r2;
        org.apache.tika.parser.rtf.TextExtractor r0;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r2.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>(r1);

        return;
    }

    private void processControlWord() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Property $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        java.util.Map $r49, $r50, $r56;
        org.apache.tika.parser.rtf.GroupState $r3, $r6, $r7, $r8, $r10, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r37, $r38, $r55, $r57, $r58;
        org.apache.tika.sax.XHTMLContentHandler $r2;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r9, $r11, $r12, $r14, $r16;
        org.apache.tika.parser.rtf.ListDescriptor $r35, $r36, $r59;
        java.nio.charset.Charset $r51, $r52, $r53, $r54;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i15;
        java.lang.AssertionError $r60;
        java.lang.String $r1, $r4;
        org.apache.tika.parser.rtf.TextExtractor r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, $z75, $z76, $z77, $z78;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z0 == 0 goto label26;

        $z45 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ansi");

        if $z45 == 0 goto label01;

        $r54 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_1252>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = $r54;

        goto label04;

     label01:
        $z46 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("pca");

        if $z46 == 0 goto label02;

        $r53 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP850>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = $r53;

        goto label04;

     label02:
        $z47 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("pc");

        if $z47 == 0 goto label03;

        $r52 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP437>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = $r52;

        goto label04;

     label03:
        $z48 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("mac");

        if $z48 == 0 goto label04;

        $r51 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ROMAN>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset globalCharset> = $r51;

     label04:
        $z75 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("colortbl");

        if $z75 != 0 goto label05;

        $z71 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("stylesheet");

        if $z71 != 0 goto label05;

        $z72 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("fonttbl");

        if $z72 == 0 goto label06;

     label05:
        $r55 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r55.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 1;

        goto label08;

     label06:
        $z73 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listtable");

        if $z73 == 0 goto label07;

        $r50 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map listTable>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map currentListTable> = $r50;

        goto label08;

     label07:
        $z74 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listoverridetable");

        if $z74 == 0 goto label08;

        $r49 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map listOverrideTable>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map currentListTable> = $r49;

     label08:
        $i8 = r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState>;

        $i11 = (int) -1;

        if $i8 != $i11 goto label18;

        $z61 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("author");

        if $z61 == 0 goto label09;

        $r48 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATOR>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r48;

        goto label18;

     label09:
        $z62 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("title");

        if $z62 == 0 goto label10;

        $r47 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TITLE>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r47;

        goto label18;

     label10:
        $z63 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("subject");

        if $z63 == 0 goto label11;

        $r46 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TRANSITION_SUBJECT_TO_OO_SUBJECT>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r46;

        goto label18;

     label11:
        $z64 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("keywords");

        if $z64 == 0 goto label12;

        $r45 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TRANSITION_KEYWORDS_TO_DC_SUBJECT>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r45;

        goto label18;

     label12:
        $z65 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("category");

        if $z65 == 0 goto label13;

        $r44 = <org.apache.tika.metadata.OfficeOpenXMLCore: org.apache.tika.metadata.Property CATEGORY>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r44;

        goto label18;

     label13:
        $z66 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("comment");

        if $z66 == 0 goto label14;

        $r43 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property COMMENTS>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r43;

        goto label18;

     label14:
        $z67 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("company");

        if $z67 == 0 goto label15;

        $r42 = <org.apache.tika.metadata.OfficeOpenXMLExtended: org.apache.tika.metadata.Property COMPANY>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r42;

        goto label18;

     label15:
        $z68 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("manager");

        if $z68 == 0 goto label16;

        $r41 = <org.apache.tika.metadata.OfficeOpenXMLExtended: org.apache.tika.metadata.Property MANAGER>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r41;

        goto label18;

     label16:
        $z69 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("template");

        if $z69 == 0 goto label17;

        $r40 = <org.apache.tika.metadata.OfficeOpenXMLExtended: org.apache.tika.metadata.Property TEMPLATE>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r40;

        goto label18;

     label17:
        $z70 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("creatim");

        if $z70 == 0 goto label18;

        $r39 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATED>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = $r39;

     label18:
        $i9 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState>;

        if $i9 != 0 goto label19;

        $z60 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("fonttbl");

        if $z60 == 0 goto label20;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState> = 1;

        $r38 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i7 = $r38.<org.apache.tika.parser.rtf.GroupState: int depth>;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableDepth> = $i7;

        goto label20;

     label19:
        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState>;

        if $i2 != 1 goto label20;

        $r37 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i6 = $r37.<org.apache.tika.parser.rtf.GroupState: int depth>;

        $i5 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableDepth>;

        if $i6 >= $i5 goto label20;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fontTableState> = 2;

     label20:
        $r56 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.Map currentListTable>;

        if $r56 == null goto label24;

        $z56 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("list");

        if $z56 != 0 goto label21;

        $z57 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listoverride");

        if $z57 == 0 goto label22;

     label21:
        $r59 = new org.apache.tika.parser.rtf.ListDescriptor;

        specialinvoke $r59.<org.apache.tika.parser.rtf.ListDescriptor: void <init>()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList> = $r59;

        $i13 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel> = $i13;

        goto label24;

     label22:
        $r35 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        if $r35 == null goto label24;

        $z58 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("liststylename");

        if $z58 == 0 goto label23;

        $r36 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.ListDescriptor currentList>;

        $r36.<org.apache.tika.parser.rtf.ListDescriptor: boolean isStyle> = 1;

        goto label24;

     label23:
        $z59 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listlevel");

        if $z59 == 0 goto label24;

        $i3 = r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel>;

        $i4 = $i3 + 1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int listTableLevel> = $i4;

     label24:
        $r57 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z76 = $r57.<org.apache.tika.parser.rtf.GroupState: boolean ignore>;

        if $z76 != 0 goto label29;

        $z49 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("par");

        if $z49 != 0 goto label25;

        $z50 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("pard");

        if $z50 != 0 goto label25;

        $z51 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("sect");

        if $z51 != 0 goto label25;

        $z52 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("sectd");

        if $z52 != 0 goto label25;

        $z53 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("plain");

        if $z53 != 0 goto label25;

        $z54 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ltrch");

        if $z54 != 0 goto label25;

        $z55 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("rtlch");

        if $z55 == 0 goto label29;

     label25:
        r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader> = 0;

        goto label29;

     label26:
        $z1 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("b");

        if $z1 == 0 goto label28;

        $r30 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z42 = $r30.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z42 != 0 goto label29;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r31 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z43 = $r31.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z43 == 0 goto label27;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

     label27:
        $r32 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r32.<org.apache.tika.parser.rtf.GroupState: boolean bold> = 1;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("b");

        $r33 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z44 = $r33.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z44 == 0 goto label29;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

        goto label29;

     label28:
        $z2 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("i");

        if $z2 == 0 goto label29;

        $r28 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z41 = $r28.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z41 != 0 goto label29;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r29 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r29.<org.apache.tika.parser.rtf.GroupState: boolean italic> = 1;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

     label29:
        $r58 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z77 = $r58.<org.apache.tika.parser.rtf.GroupState: boolean ignore>;

        $z78 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("pard");

        if $z78 == 0 goto label32;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r24 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z38 = $r24.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z38 == 0 goto label30;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

        $r27 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r27.<org.apache.tika.parser.rtf.GroupState: boolean italic> = 0;

     label30:
        $r25 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z39 = $r25.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z39 == 0 goto label31;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("b");

        $r26 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r26.<org.apache.tika.parser.rtf.GroupState: boolean bold> = 0;

     label31:
        $z40 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inList()>();

        if $z40 == 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pendingListEnd()>();

        goto label67;

     label32:
        $z3 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("par");

        if $z3 == 0 goto label33;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void endParagraph(boolean)>(1);

        goto label67;

     label33:
        $z4 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("shptxt");

        if $z4 == 0 goto label34;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r23 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r23.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label34:
        $z5 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("atnid");

        if $z5 == 0 goto label35;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r22 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r22.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label35:
        $z6 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("atnauthor");

        if $z6 == 0 goto label36;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r21 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r21.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label36:
        $z7 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("annotation");

        if $z7 == 0 goto label37;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r20 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r20.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label37:
        $z8 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("listtext");

        if $z8 == 0 goto label38;

        $r19 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r19.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 1;

        goto label67;

     label38:
        $z9 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("cell");

        if $z9 == 0 goto label39;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void endParagraph(boolean)>(1);

        goto label67;

     label39:
        $z10 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("sp");

        if $z10 == 0 goto label40;

        $r18 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r18.<org.apache.tika.parser.rtf.GroupState: boolean sp> = 1;

        goto label67;

     label40:
        $z11 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("sn");

        if $z11 == 0 goto label41;

        $r16 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r16.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void startSN()>();

        $r17 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r17.<org.apache.tika.parser.rtf.GroupState: boolean sn> = 1;

        goto label67;

     label41:
        $z12 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("sv");

        if $z12 == 0 goto label42;

        $r14 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r14.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void startSV()>();

        $r15 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r15.<org.apache.tika.parser.rtf.GroupState: boolean sv> = 1;

        goto label67;

     label42:
        $z13 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("object");

        if $z13 == 0 goto label43;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r12 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r12.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void setInObject(boolean)>(1);

        $r13 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r13.<org.apache.tika.parser.rtf.GroupState: boolean object> = 1;

        goto label67;

     label43:
        $z14 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("objdata");

        if $z14 == 0 goto label44;

        $r10 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r10.<org.apache.tika.parser.rtf.GroupState: boolean objdata> = 1;

        $r11 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r11.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void startObjData()>();

        goto label67;

     label44:
        $z15 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("pict");

        if $z15 == 0 goto label45;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void pushText()>();

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r8.<org.apache.tika.parser.rtf.GroupState: int pictDepth> = 1;

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r9.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void startPict()>();

        goto label67;

     label45:
        $z16 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("line");

        if $z16 == 0 goto label46;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(10);

        goto label67;

     label46:
        $z17 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("column");

        if $z17 == 0 goto label47;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(32);

        goto label67;

     label47:
        $z18 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("page");

        if $z18 == 0 goto label48;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(10);

        goto label67;

     label48:
        $z19 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("softline");

        if $z19 == 0 goto label49;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(10);

        goto label67;

     label49:
        $z20 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("softcolumn");

        if $z20 == 0 goto label50;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(32);

        goto label67;

     label50:
        $z21 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("softpage");

        if $z21 == 0 goto label51;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(10);

        goto label67;

     label51:
        $z22 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("tab");

        if $z22 == 0 goto label52;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(9);

        goto label67;

     label52:
        $z23 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("upr");

        if $z23 == 0 goto label53;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState> = 0;

        goto label67;

     label53:
        $z24 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ud");

        if $z24 == 0 goto label54;

        $i1 = r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState>;

        if $i1 != 1 goto label54;

        $i15 = (int) -1;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState> = $i15;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r7.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label54:
        $z25 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("bullet");

        if $z25 == 0 goto label55;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8226);

        goto label67;

     label55:
        $z26 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("endash");

        if $z26 == 0 goto label56;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8211);

        goto label67;

     label56:
        $z27 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("emdash");

        if $z27 == 0 goto label57;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8212);

        goto label67;

     label57:
        $z28 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("enspace");

        if $z28 == 0 goto label58;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8194);

        goto label67;

     label58:
        $z29 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("qmspace");

        if $z29 == 0 goto label59;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8197);

        goto label67;

     label59:
        $z30 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("emspace");

        if $z30 == 0 goto label60;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8195);

        goto label67;

     label60:
        $z31 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("lquote");

        if $z31 == 0 goto label61;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8216);

        goto label67;

     label61:
        $z32 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("rquote");

        if $z32 == 0 goto label62;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8217);

        goto label67;

     label62:
        $z33 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("ldblquote");

        if $z33 == 0 goto label63;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8220);

        goto label67;

     label63:
        $z34 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("rdblquote");

        if $z34 == 0 goto label64;

        if $z77 != 0 goto label67;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void addOutputChar(char)>(8221);

        goto label67;

     label64:
        $z35 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("fldinst");

        if $z35 == 0 goto label65;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState> = 1;

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r6.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

        goto label67;

     label65:
        $z36 = specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: boolean equals(java.lang.String)>("fldrslt");

        if $z36 == 0 goto label67;

        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i0 != 2 goto label67;

        $z37 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z37 != 0 goto label66;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.String pendingURL>;

        if $r4 != null goto label66;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>()>();

        throw $r60;

     label66:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void lazyStartParagraph()>();

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.String pendingURL>;

        virtualinvoke $r2.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String)>("a", "href", $r1);

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.String pendingURL> = null;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState> = 3;

        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r3.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 0;

     label67:
        return;
    }

    private void processGroupStart(java.io.PushbackInputStream) throws java.io.IOException
    {
        java.io.PushbackInputStream r5;
        java.lang.AssertionError $r10;
        org.apache.tika.parser.rtf.GroupState $r1, $r3, $r4, $r6, $r7, $r9, $r16;
        org.apache.tika.parser.rtf.TextExtractor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r18;
        java.util.LinkedList $r2, $r8, $r13;
        boolean $z0;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        r5 := @parameter0: java.io.PushbackInputStream;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = 0;

        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r1);

        $r3 = new org.apache.tika.parser.rtf.GroupState;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        specialinvoke $r3.<org.apache.tika.parser.rtf.GroupState: void <init>(org.apache.tika.parser.rtf.GroupState)>($r4);

        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState> = $r3;

        $z0 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $i3 = virtualinvoke $r8.<java.util.LinkedList: int size()>();

        $r9 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i4 = $r9.<org.apache.tika.parser.rtf.GroupState: int depth>;

        if $i3 == $i4 goto label1;

        $r10 = new java.lang.AssertionError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size=");

        $r13 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $i5 = virtualinvoke $r13.<java.util.LinkedList: int size()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" depth=");

        $r16 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i6 = $r16.<org.apache.tika.parser.rtf.GroupState: int depth>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r18);

        throw $r10;

     label1:
        $i0 = r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState>;

        if $i0 != 0 goto label2;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int uprState> = 1;

        $r7 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r7.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 1;

     label2:
        $i1 = virtualinvoke r5.<java.io.PushbackInputStream: int read()>();

        if $i1 != 92 goto label4;

        $i2 = virtualinvoke r5.<java.io.PushbackInputStream: int read()>();

        if $i2 != 42 goto label3;

        $r6 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r6.<org.apache.tika.parser.rtf.GroupState: boolean ignore> = 1;

     label3:
        virtualinvoke r5.<java.io.PushbackInputStream: void unread(int)>($i2);

     label4:
        virtualinvoke r5.<java.io.PushbackInputStream: void unread(int)>($i1);

        return;
    }

    private void processGroupEnd() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata $r40, $r44, $r50;
        org.apache.tika.metadata.Property $r35, $r36, $r37, $r38, $r41, $r45, $r51;
        java.lang.StringBuilder $r5, $r8, $r11, $r12, $r39, $r43, $r53, $r64;
        java.lang.AssertionError $r62, $r63;
        org.apache.tika.parser.rtf.GroupState $r1, $r2, $r15, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r32, $r33, $r54, r55, $r56, $r57, $r58;
        java.util.Calendar $r49;
        java.lang.String $r6, $r7, $r9, $r10, $r13, $r42, $r46, r59, $r61;
        org.apache.tika.sax.XHTMLContentHandler $r4;
        java.util.Date $r52;
        org.apache.tika.parser.rtf.TextExtractor r0;
        java.util.Locale $r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.util.TimeZone $r47;
        org.apache.tika.parser.rtf.RTFEmbObjHandler $r22, $r27, $r28, $r29, $r30, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i21;
        java.util.LinkedList $r3, $r14, $r17;
        java.lang.Object $r18;

        r0 := @this: org.apache.tika.parser.rtf.TextExtractor;

        $z0 = r0.<org.apache.tika.parser.rtf.TextExtractor: boolean inHeader>;

        if $z0 == 0 goto label05;

        $r35 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        if $r35 == null goto label04;

        $r37 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        $r36 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATED>;

        if $r37 != $r36 goto label01;

        $r47 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r48 = <java.util.Locale: java.util.Locale ROOT>;

        $r49 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r47, $r48);

        $i17 = r0.<org.apache.tika.parser.rtf.TextExtractor: int year>;

        $i12 = r0.<org.apache.tika.parser.rtf.TextExtractor: int month>;

        $i16 = $i12 - 1;

        $i15 = r0.<org.apache.tika.parser.rtf.TextExtractor: int day>;

        $i14 = r0.<org.apache.tika.parser.rtf.TextExtractor: int hour>;

        $i13 = r0.<org.apache.tika.parser.rtf.TextExtractor: int minute>;

        virtualinvoke $r49.<java.util.Calendar: void set(int,int,int,int,int,int)>($i17, $i16, $i15, $i14, $i13, 0);

        $r50 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r51 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        $r52 = virtualinvoke $r49.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r50.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.util.Date)>($r51, $r52);

        goto label03;

     label01:
        $r38 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        $z14 = virtualinvoke $r38.<org.apache.tika.metadata.Property: boolean isMultiValuePermitted()>();

        if $z14 == 0 goto label02;

        $r44 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r45 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        $r43 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r45, $r46);

        goto label03;

     label02:
        $r40 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Metadata metadata>;

        $r41 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData>;

        $r39 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r41, $r42);

     label03:
        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.metadata.Property nextMetaData> = null;

     label04:
        $r53 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        virtualinvoke $r53.<java.lang.StringBuilder: void setLength(int)>(0);

     label05:
        $z15 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z15 != 0 goto label06;

        $r33 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i11 = $r33.<org.apache.tika.parser.rtf.GroupState: int depth>;

        if $i11 > 0 goto label06;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>()>();

        throw $r62;

     label06:
        r0.<org.apache.tika.parser.rtf.TextExtractor: int ansiSkip> = 0;

        $r1 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z1 = $r1.<org.apache.tika.parser.rtf.GroupState: boolean objdata>;

        if $z1 != 1 goto label07;

        $r31 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r31.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void handleCompletedObject()>();

        $r32 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r32.<org.apache.tika.parser.rtf.GroupState: boolean objdata> = 0;

        goto label11;

     label07:
        $r2 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i0 = $r2.<org.apache.tika.parser.rtf.GroupState: int pictDepth>;

        if $i0 <= 0 goto label11;

        $r23 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z11 = $r23.<org.apache.tika.parser.rtf.GroupState: boolean sn>;

        if $z11 != 1 goto label08;

        $r30 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r30.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void endSN()>();

        goto label11;

     label08:
        $r24 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z12 = $r24.<org.apache.tika.parser.rtf.GroupState: boolean sv>;

        if $z12 != 1 goto label09;

        $r29 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r29.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void endSV()>();

        goto label11;

     label09:
        $r25 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z13 = $r25.<org.apache.tika.parser.rtf.GroupState: boolean sp>;

        if $z13 != 1 goto label10;

        $r28 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r28.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void endSP()>();

        goto label11;

     label10:
        $r26 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i10 = $r26.<org.apache.tika.parser.rtf.GroupState: int pictDepth>;

        if $i10 != 1 goto label11;

        $r27 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r27.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void handleCompletedObject()>();

     label11:
        $r54 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z16 = $r54.<org.apache.tika.parser.rtf.GroupState: boolean object>;

        if $z16 != 1 goto label12;

        $r22 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.RTFEmbObjHandler embObjHandler>;

        virtualinvoke $r22.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void setInObject(boolean)>(0);

     label12:
        $r3 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $i1 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i1 <= 0 goto label18;

        $r17 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $r18 = virtualinvoke $r17.<java.util.LinkedList: java.lang.Object removeLast()>();

        r55 = (org.apache.tika.parser.rtf.GroupState) $r18;

        $r19 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z4 = $r19.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z4 == 0 goto label14;

        $z8 = r55.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z8 == 0 goto label13;

        $r21 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z10 = $r21.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        $z9 = r55.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z10 == $z9 goto label14;

     label13:
        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("i");

        $r20 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $r20.<org.apache.tika.parser.rtf.GroupState: boolean italic> = 0;

     label14:
        $r56 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z17 = $r56.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z17 == 0 goto label15;

        $z7 = r55.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z7 != 0 goto label15;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void end(java.lang.String)>("b");

     label15:
        $r57 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z18 = $r57.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z18 != 0 goto label16;

        $z6 = r55.<org.apache.tika.parser.rtf.GroupState: boolean bold>;

        if $z6 == 0 goto label16;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("b");

     label16:
        $r58 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $z19 = $r58.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z19 != 0 goto label17;

        $z5 = r55.<org.apache.tika.parser.rtf.GroupState: boolean italic>;

        if $z5 == 0 goto label17;

        specialinvoke r0.<org.apache.tika.parser.rtf.TextExtractor: void start(java.lang.String)>("i");

     label17:
        r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState> = r55;

     label18:
        $z20 = <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled>;

        if $z20 != 0 goto label19;

        $r14 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.util.LinkedList groupStates>;

        $i8 = virtualinvoke $r14.<java.util.LinkedList: int size()>();

        $r15 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.parser.rtf.GroupState groupState>;

        $i9 = $r15.<org.apache.tika.parser.rtf.GroupState: int depth>;

        if $i8 == $i9 goto label19;

        $r63 = new java.lang.AssertionError;

        specialinvoke $r63.<java.lang.AssertionError: void <init>()>();

        throw $r63;

     label19:
        $i2 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i2 != 1 goto label25;

        $r5 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.StringBuilder pendingBuffer>;

        virtualinvoke $r8.<java.lang.StringBuilder: void setLength(int)>(0);

        $z2 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("HYPERLINK");

        if $z2 == 0 goto label23;

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(9);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        r59 = $r10;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("\\l ");

        $i4 = virtualinvoke $r10.<java.lang.String: int indexOf(int)>(34);

        $i19 = (int) -1;

        if $i4 == $i19 goto label20;

        $i5 = 1 + $i4;

        $i6 = virtualinvoke $r10.<java.lang.String: int indexOf(int,int)>(34, $i5);

        $i21 = (int) -1;

        if $i6 == $i21 goto label20;

        $i7 = 1 + $i4;

        r59 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>($i7, $i6);

     label20:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        if $z3 == 0 goto label21;

        $r61 = "#";

        goto label22;

     label21:
        $r61 = "";

     label22:
        $r11 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.parser.rtf.TextExtractor: java.lang.String pendingURL> = $r13;

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState> = 2;

        goto label24;

     label23:
        r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState> = 0;

     label24:
        goto label26;

     label25:
        $i3 = r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState>;

        if $i3 != 3 goto label26;

        $r4 = r0.<org.apache.tika.parser.rtf.TextExtractor: org.apache.tika.sax.XHTMLContentHandler out>;

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("a");

        r0.<org.apache.tika.parser.rtf.TextExtractor: int fieldState> = 0;

     label26:
        return;
    }

    static void <clinit>()
    {
        java.lang.Integer $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r135, $r138, $r141, $r144, $r147, $r150, $r153, $r156, $r159, $r163, $r166, $r169, $r172, $r175, $r178, $r181, $r184, $r187, $r190, $r193, $r196, $r199, $r202, $r205, $r208, $r211, $r214, $r217, $r220, $r223, $r226, $r229, $r232, $r235, $r238, $r241, $r244, $r247, $r250, $r253, $r256, $r259, $r262, $r265, $r268, $r271, $r274, $r277, $r280, $r283, $r286, $r289, $r292, $r295, $r298, $r301, $r304, $r307, $r310;
        java.nio.charset.Charset $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r124, $r127, $r130, $r133, $r136, $r139, $r142, $r145, $r148, $r151, $r154, $r157, $r160, $r164, $r167, $r170, $r173, $r176, $r179, $r182, $r185, $r188, $r191, $r194, $r197, $r200, $r203, $r206, $r209, $r212, $r215, $r218, $r221, $r224, $r227, $r230, $r233, $r236, $r239, $r242, $r245, $r248, $r251, $r254, $r257, $r260, $r263, $r266, $r269, $r272, $r275, $r278, $r281, $r284, $r287, $r290, $r293, $r296, $r299, $r302, $r305, $r308, $r311;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19;
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.Map $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r122, $r125, $r128, $r131, $r134, $r137, $r140, $r143, $r146, $r149, $r152, $r155, $r158, $r162, $r165, $r168, $r171, $r174, $r177, $r180, $r183, $r186, $r189, $r192, $r195, $r198, $r201, $r204, $r207, $r210, $r213, $r216, $r219, $r222, $r225, $r228, $r231, $r234, $r237, $r240, $r243, $r246, $r249, $r252, $r255, $r258, $r261, $r264, $r267, $r270, $r273, $r276, $r279, $r282, $r285, $r288, $r291, $r294, $r297, $r300, $r303, $r306, $r309;
        java.util.HashMap $r312, $r313;

        $r0 = class "Lorg/apache/tika/parser/rtf/TextExtractor;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.tika.parser.rtf.TextExtractor: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset ASCII> = $r1;

        $r2 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("WINDOWS-1252");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_1252> = $r2;

        $r3 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacRoman");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ROMAN> = $r3;

        $r4 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("Shift_JIS");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset SHIFT_JIS> = $r4;

        $r5 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57011");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57011> = $r5;

        $r6 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57010");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57010> = $r6;

        $r7 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57009");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57009> = $r7;

        $r8 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57008");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57008> = $r8;

        $r9 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57007");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57007> = $r9;

        $r10 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57006");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57006> = $r10;

        $r11 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57005");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57005> = $r11;

        $r12 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57004");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57004> = $r12;

        $r13 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-57003");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57003> = $r13;

        $r14 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("x-ISCII91");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_ISCII91> = $r14;

        $r15 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("x-MacCentralEurope");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_MAC_CENTRAL_EUROPE> = $r15;

        $r16 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacCyrillic");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_CYRILLIC> = $r16;

        $r17 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("x-Johab");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_JOHAB> = $r17;

        $r18 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1258");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12582> = $r18;

        $r19 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1257");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12572> = $r19;

        $r20 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1256");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12562> = $r20;

        $r21 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1255");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12552> = $r21;

        $r22 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1254");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12542> = $r22;

        $r23 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1253");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12532> = $r23;

        $r24 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1252");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1252> = $r24;

        $r25 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1251");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12512> = $r25;

        $r26 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP1250");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12502> = $r26;

        $r27 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP950");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP950> = $r27;

        $r28 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP949");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP949> = $r28;

        $r29 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MS936");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS9362> = $r29;

        $r30 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MS874");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS8742> = $r30;

        $r31 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP866");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP866> = $r31;

        $r32 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP865");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP865> = $r32;

        $r33 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP864");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP864> = $r33;

        $r34 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP863");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP863> = $r34;

        $r35 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP862");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP862> = $r35;

        $r36 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP860");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP860> = $r36;

        $r37 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP852");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP852> = $r37;

        $r38 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP850");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP8502> = $r38;

        $r39 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP819");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP819> = $r39;

        $r40 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-720");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_720> = $r40;

        $r41 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-711");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_711> = $r41;

        $r42 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-710");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_710> = $r42;

        $r43 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("windows-709");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_709> = $r43;

        $r44 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ISO-8859-6");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset ISO_8859_6> = $r44;

        $r45 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("CP437");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP4372> = $r45;

        $r46 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp850");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP850> = $r46;

        $r47 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp437");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP437> = $r47;

        $r48 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ms874");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS874> = $r48;

        $r49 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1257");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1257> = $r49;

        $r50 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1256");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1256> = $r50;

        $r51 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1255");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1255> = $r51;

        $r52 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1258");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1258> = $r52;

        $r53 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1254");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1254> = $r53;

        $r54 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1253");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1253> = $r54;

        $r55 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ms950");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS950> = $r55;

        $r56 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ms936");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS936> = $r56;

        $r57 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ms1361");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS1361> = $r57;

        $r58 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MS932");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS932> = $r58;

        $r59 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1251");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1251> = $r59;

        $r60 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("cp1250");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1250> = $r60;

        $r61 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacThai");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_THAI> = $r61;

        $r62 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacTurkish");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_TURKISH> = $r62;

        $r63 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacGreek");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_GREEK> = $r63;

        $r64 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacArabic");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ARABIC> = $r64;

        $r65 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("MacHebrew");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_HEBREW> = $r65;

        $r66 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("johab");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset JOHAB> = $r66;

        $r67 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("Big5");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset BIG5> = $r67;

        $r68 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("GB2312");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset GB2312> = $r68;

        $r69 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset getCharset(java.lang.String)>("ms949");

        <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS949> = $r69;

        $r312 = new java.util.HashMap;

        specialinvoke $r312.<java.util.HashMap: void <init>()>();

        <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP> = $r312;

        $r71 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r73 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_1252>;

        interfaceinvoke $r71.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r72, $r73);

        $r74 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(77);

        $r76 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ROMAN>;

        interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, $r76);

        $r77 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(78);

        $r79 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset SHIFT_JIS>;

        interfaceinvoke $r77.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r78, $r79);

        $r80 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(79);

        $r82 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS949>;

        interfaceinvoke $r80.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r81, $r82);

        $r83 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(80);

        $r85 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset GB2312>;

        interfaceinvoke $r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r84, $r85);

        $r86 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(81);

        $r88 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset BIG5>;

        interfaceinvoke $r86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r87, $r88);

        $r89 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(82);

        $r91 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset JOHAB>;

        interfaceinvoke $r89.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r90, $r91);

        $r92 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(83);

        $r94 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_HEBREW>;

        interfaceinvoke $r92.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r93, $r94);

        $r95 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(84);

        $r97 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ARABIC>;

        interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r96, $r97);

        $r98 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(85);

        $r100 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_GREEK>;

        interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r99, $r100);

        $r101 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(86);

        $r103 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_TURKISH>;

        interfaceinvoke $r101.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r102, $r103);

        $r104 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(87);

        $r106 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_THAI>;

        interfaceinvoke $r104.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r105, $r106);

        $r107 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(88);

        $r109 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1250>;

        interfaceinvoke $r107.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r108, $r109);

        $r110 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(89);

        $r112 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1251>;

        interfaceinvoke $r110.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r111, $r112);

        $r113 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(128);

        $r115 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS932>;

        interfaceinvoke $r113.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r114, $r115);

        $r116 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(129);

        $r118 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS949>;

        interfaceinvoke $r116.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r117, $r118);

        $r119 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r120 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(130);

        $r121 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS1361>;

        interfaceinvoke $r119.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);

        $r122 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r123 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(134);

        $r124 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS936>;

        interfaceinvoke $r122.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r123, $r124);

        $r125 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r126 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(136);

        $r127 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS950>;

        interfaceinvoke $r125.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r126, $r127);

        $r128 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r129 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(161);

        $r130 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1253>;

        interfaceinvoke $r128.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r129, $r130);

        $r131 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r132 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(162);

        $r133 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1254>;

        interfaceinvoke $r131.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r132, $r133);

        $r134 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r135 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(163);

        $r136 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1258>;

        interfaceinvoke $r134.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r135, $r136);

        $r137 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r138 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(177);

        $r139 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1255>;

        interfaceinvoke $r137.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r138, $r139);

        $r140 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r141 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(178);

        $r142 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1256>;

        interfaceinvoke $r140.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r141, $r142);

        $r143 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r144 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(186);

        $r145 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1257>;

        interfaceinvoke $r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r144, $r145);

        $r146 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r147 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(204);

        $r148 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1251>;

        interfaceinvoke $r146.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r147, $r148);

        $r149 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r150 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(222);

        $r151 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS874>;

        interfaceinvoke $r149.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r150, $r151);

        $r152 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r153 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(238);

        $r154 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1250>;

        interfaceinvoke $r152.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r153, $r154);

        $r155 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r156 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(254);

        $r157 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP437>;

        interfaceinvoke $r155.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r156, $r157);

        $r158 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map FCHARSET_MAP>;

        $r159 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255);

        $r160 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP850>;

        interfaceinvoke $r158.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r159, $r160);

        $r313 = new java.util.HashMap;

        specialinvoke $r313.<java.util.HashMap: void <init>()>();

        <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP> = $r313;

        $r162 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r163 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(437);

        $r164 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP4372>;

        interfaceinvoke $r162.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r163, $r164);

        $r165 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r166 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(708);

        $r167 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset ISO_8859_6>;

        interfaceinvoke $r165.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r166, $r167);

        $r168 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r169 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(709);

        $r170 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_709>;

        interfaceinvoke $r168.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r169, $r170);

        $r171 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r172 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(710);

        $r173 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_710>;

        interfaceinvoke $r171.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r172, $r173);

        $r174 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r175 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(710);

        $r176 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_711>;

        interfaceinvoke $r174.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r175, $r176);

        $r177 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r178 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(710);

        $r179 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_720>;

        interfaceinvoke $r177.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r178, $r179);

        $r180 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r181 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(819);

        $r182 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP819>;

        interfaceinvoke $r180.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r181, $r182);

        $r183 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r184 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(819);

        $r185 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP819>;

        interfaceinvoke $r183.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r184, $r185);

        $r186 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(819);

        $r188 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP819>;

        interfaceinvoke $r186.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r187, $r188);

        $r189 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r190 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(850);

        $r191 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP8502>;

        interfaceinvoke $r189.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r190, $r191);

        $r192 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r193 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(852);

        $r194 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP852>;

        interfaceinvoke $r192.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r193, $r194);

        $r195 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r196 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(860);

        $r197 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP860>;

        interfaceinvoke $r195.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r196, $r197);

        $r198 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r199 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(862);

        $r200 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP862>;

        interfaceinvoke $r198.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r199, $r200);

        $r201 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r202 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(863);

        $r203 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP863>;

        interfaceinvoke $r201.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r202, $r203);

        $r204 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r205 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(864);

        $r206 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP864>;

        interfaceinvoke $r204.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r205, $r206);

        $r207 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r208 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(865);

        $r209 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP865>;

        interfaceinvoke $r207.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r208, $r209);

        $r210 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r211 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(866);

        $r212 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP866>;

        interfaceinvoke $r210.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r211, $r212);

        $r213 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r214 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(874);

        $r215 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS8742>;

        interfaceinvoke $r213.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r214, $r215);

        $r216 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r217 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(932);

        $r218 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS932>;

        interfaceinvoke $r216.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r217, $r218);

        $r219 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r220 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(936);

        $r221 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MS9362>;

        interfaceinvoke $r219.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r220, $r221);

        $r222 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r223 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(949);

        $r224 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP949>;

        interfaceinvoke $r222.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r223, $r224);

        $r225 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r226 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(950);

        $r227 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP950>;

        interfaceinvoke $r225.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r226, $r227);

        $r228 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r229 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1250);

        $r230 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12502>;

        interfaceinvoke $r228.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r229, $r230);

        $r231 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r232 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1251);

        $r233 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12512>;

        interfaceinvoke $r231.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r232, $r233);

        $r234 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r235 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1252);

        $r236 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP1252>;

        interfaceinvoke $r234.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r235, $r236);

        $r237 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r238 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1253);

        $r239 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12532>;

        interfaceinvoke $r237.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r238, $r239);

        $r240 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r241 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1254);

        $r242 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12542>;

        interfaceinvoke $r240.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r241, $r242);

        $r243 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r244 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1255);

        $r245 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12552>;

        interfaceinvoke $r243.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r244, $r245);

        $r246 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r247 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1256);

        $r248 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12562>;

        interfaceinvoke $r246.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r247, $r248);

        $r249 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r250 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1257);

        $r251 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12572>;

        interfaceinvoke $r249.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r250, $r251);

        $r252 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r253 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1258);

        $r254 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset CP12582>;

        interfaceinvoke $r252.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r253, $r254);

        $r255 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r256 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1361);

        $r257 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_JOHAB>;

        interfaceinvoke $r255.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r256, $r257);

        $r258 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r259 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        $r260 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ROMAN>;

        interfaceinvoke $r258.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r259, $r260);

        $r261 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r262 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10001);

        $r263 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset SHIFT_JIS>;

        interfaceinvoke $r261.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r262, $r263);

        $r264 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r265 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10004);

        $r266 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_ARABIC>;

        interfaceinvoke $r264.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r265, $r266);

        $r267 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r268 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10005);

        $r269 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_HEBREW>;

        interfaceinvoke $r267.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r268, $r269);

        $r270 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r271 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10006);

        $r272 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_GREEK>;

        interfaceinvoke $r270.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r271, $r272);

        $r273 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r274 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10007);

        $r275 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_CYRILLIC>;

        interfaceinvoke $r273.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r274, $r275);

        $r276 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r277 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10029);

        $r278 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_MAC_CENTRAL_EUROPE>;

        interfaceinvoke $r276.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r277, $r278);

        $r279 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $r280 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10081);

        $r281 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset MAC_TURKISH>;

        interfaceinvoke $r279.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r280, $r281);

        $r282 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i1 = (int) 57002;

        $r283 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r284 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset X_ISCII91>;

        interfaceinvoke $r282.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r283, $r284);

        $r285 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i3 = (int) 57003;

        $r286 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r287 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57003>;

        interfaceinvoke $r285.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r286, $r287);

        $r288 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i5 = (int) 57004;

        $r289 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r290 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57004>;

        interfaceinvoke $r288.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r289, $r290);

        $r291 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i7 = (int) 57005;

        $r292 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r293 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57005>;

        interfaceinvoke $r291.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r292, $r293);

        $r294 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i9 = (int) 57006;

        $r295 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r296 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57006>;

        interfaceinvoke $r294.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r295, $r296);

        $r297 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i11 = (int) 57007;

        $r298 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r299 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57007>;

        interfaceinvoke $r297.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r298, $r299);

        $r300 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i13 = (int) 57008;

        $r301 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r302 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57008>;

        interfaceinvoke $r300.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r301, $r302);

        $r303 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i15 = (int) 57009;

        $r304 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r305 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57009>;

        interfaceinvoke $r303.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r304, $r305);

        $r306 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i17 = (int) 57010;

        $r307 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r308 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57010>;

        interfaceinvoke $r306.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r307, $r308);

        $r309 = <org.apache.tika.parser.rtf.TextExtractor: java.util.Map ANSICPG_MAP>;

        $i19 = (int) 57011;

        $r310 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r311 = <org.apache.tika.parser.rtf.TextExtractor: java.nio.charset.Charset WINDOWS_57011>;

        interfaceinvoke $r309.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r310, $r311);

        return;
    }
}
