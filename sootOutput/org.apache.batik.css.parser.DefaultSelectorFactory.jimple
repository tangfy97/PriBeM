public class org.apache.batik.css.parser.DefaultSelectorFactory extends java.lang.Object implements org.w3c.css.sac.SelectorFactory
{
    public static final org.w3c.css.sac.SelectorFactory INSTANCE;

    protected void <init>()
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r0;

        r0 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.w3c.css.sac.ConditionalSelector createConditionalSelector(org.w3c.css.sac.SimpleSelector, org.w3c.css.sac.Condition) throws org.w3c.css.sac.CSSException
    {
        org.w3c.css.sac.SimpleSelector r1;
        org.w3c.css.sac.Condition r2;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        org.apache.batik.css.parser.DefaultConditionalSelector $r0;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r1 := @parameter0: org.w3c.css.sac.SimpleSelector;

        r2 := @parameter1: org.w3c.css.sac.Condition;

        $r0 = new org.apache.batik.css.parser.DefaultConditionalSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultConditionalSelector: void <init>(org.w3c.css.sac.SimpleSelector,org.w3c.css.sac.Condition)>(r1, r2);

        return $r0;
    }

    public org.w3c.css.sac.SimpleSelector createAnyNodeSelector() throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.SimpleSelector createRootNodeSelector() throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.NegativeSelector createNegativeSelector(org.w3c.css.sac.SimpleSelector) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        org.w3c.css.sac.SimpleSelector r2;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r2 := @parameter0: org.w3c.css.sac.SimpleSelector;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.ElementSelector createElementSelector(java.lang.String, java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultElementSelector $r0;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        java.lang.String r1, r2;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.css.parser.DefaultElementSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultElementSelector: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.w3c.css.sac.CharacterDataSelector createTextNodeSelector(java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        java.lang.String r2;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.CharacterDataSelector createCDataSectionSelector(java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        java.lang.String r2;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.ProcessingInstructionSelector createProcessingInstructionSelector(java.lang.String, java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.w3c.css.sac.CSSException $r0;
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        java.lang.String r2, r3;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.CharacterDataSelector createCommentSelector(java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultSelectorFactory r1;
        java.lang.String r2;
        org.w3c.css.sac.CSSException $r0;

        r1 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.w3c.css.sac.CSSException;

        specialinvoke $r0.<org.w3c.css.sac.CSSException: void <init>(java.lang.String)>("Not implemented in CSS2");

        throw $r0;
    }

    public org.w3c.css.sac.ElementSelector createPseudoElementSelector(java.lang.String, java.lang.String) throws org.w3c.css.sac.CSSException
    {
        org.apache.batik.css.parser.DefaultPseudoElementSelector $r0;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        java.lang.String r1, r2;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.css.parser.DefaultPseudoElementSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultPseudoElementSelector: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.w3c.css.sac.DescendantSelector createDescendantSelector(org.w3c.css.sac.Selector, org.w3c.css.sac.SimpleSelector) throws org.w3c.css.sac.CSSException
    {
        org.w3c.css.sac.SimpleSelector r2;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        org.w3c.css.sac.Selector r1;
        org.apache.batik.css.parser.DefaultDescendantSelector $r0;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r1 := @parameter0: org.w3c.css.sac.Selector;

        r2 := @parameter1: org.w3c.css.sac.SimpleSelector;

        $r0 = new org.apache.batik.css.parser.DefaultDescendantSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultDescendantSelector: void <init>(org.w3c.css.sac.Selector,org.w3c.css.sac.SimpleSelector)>(r1, r2);

        return $r0;
    }

    public org.w3c.css.sac.DescendantSelector createChildSelector(org.w3c.css.sac.Selector, org.w3c.css.sac.SimpleSelector) throws org.w3c.css.sac.CSSException
    {
        org.w3c.css.sac.SimpleSelector r2;
        org.apache.batik.css.parser.DefaultChildSelector $r0;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        org.w3c.css.sac.Selector r1;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        r1 := @parameter0: org.w3c.css.sac.Selector;

        r2 := @parameter1: org.w3c.css.sac.SimpleSelector;

        $r0 = new org.apache.batik.css.parser.DefaultChildSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultChildSelector: void <init>(org.w3c.css.sac.Selector,org.w3c.css.sac.SimpleSelector)>(r1, r2);

        return $r0;
    }

    public org.w3c.css.sac.SiblingSelector createDirectAdjacentSelector(short, org.w3c.css.sac.Selector, org.w3c.css.sac.SimpleSelector) throws org.w3c.css.sac.CSSException
    {
        short s0;
        org.apache.batik.css.parser.DefaultDirectAdjacentSelector $r0;
        org.w3c.css.sac.SimpleSelector r2;
        org.apache.batik.css.parser.DefaultSelectorFactory r3;
        org.w3c.css.sac.Selector r1;

        r3 := @this: org.apache.batik.css.parser.DefaultSelectorFactory;

        s0 := @parameter0: short;

        r1 := @parameter1: org.w3c.css.sac.Selector;

        r2 := @parameter2: org.w3c.css.sac.SimpleSelector;

        $r0 = new org.apache.batik.css.parser.DefaultDirectAdjacentSelector;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultDirectAdjacentSelector: void <init>(short,org.w3c.css.sac.Selector,org.w3c.css.sac.SimpleSelector)>(s0, r1, r2);

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.css.parser.DefaultSelectorFactory $r0;

        $r0 = new org.apache.batik.css.parser.DefaultSelectorFactory;

        specialinvoke $r0.<org.apache.batik.css.parser.DefaultSelectorFactory: void <init>()>();

        <org.apache.batik.css.parser.DefaultSelectorFactory: org.w3c.css.sac.SelectorFactory INSTANCE> = $r0;

        return;
    }
}
