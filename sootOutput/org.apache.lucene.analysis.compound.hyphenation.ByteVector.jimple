public class org.apache.lucene.analysis.compound.hyphenation.ByteVector extends java.lang.Object
{
    private static final int DEFAULT_BLOCK_SIZE;
    private int blockSize;
    private byte[] array;
    private int n;

    public void <init>()
    {
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        specialinvoke r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: void <init>(int)>(2048);

        return;
    }

    public void <init>(int)
    {
        byte[] $r1;
        int i0, $i1;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize> = i0;

        goto label2;

     label1:
        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize> = 2048;

     label2:
        $i1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize>;

        $r1 = newarray (byte)[$i1];

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array> = $r1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n> = 0;

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize> = 2048;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array> = r1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n> = 0;

        return;
    }

    public void <init>(byte[], int)
    {
        int i0;
        byte[] r1;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize> = i0;

        goto label2;

     label1:
        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize> = 2048;

     label2:
        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array> = r1;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n> = 0;

        return;
    }

    public byte[] getArray()
    {
        byte[] $r1;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        return $r1;
    }

    public int length()
    {
        int $i0;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        $i0 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        return $i0;
    }

    public int capacity()
    {
        int $i0;
        byte[] $r1;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void put(int, byte)
    {
        byte[] $r1;
        byte b1;
        int i0;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        $r1[i0] = b1;

        return;
    }

    public byte get(int)
    {
        byte[] $r1;
        byte $b1;
        int i0;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        $b1 = $r1[i0];

        return $b1;
    }

    public int alloc(int)
    {
        byte[] $r1, r2, $r3;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        i2 := @parameter0: int;

        i0 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        i1 = lengthof $r1;

        $i3 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        $i4 = $i3 + i2;

        if $i4 < i1 goto label1;

        $i7 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int blockSize>;

        $i8 = i1 + $i7;

        r2 = newarray (byte)[$i8];

        $r3 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, i1);

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array> = r2;

     label1:
        $i5 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        $i6 = $i5 + i2;

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n> = $i6;

        return i0;
    }

    public void trimToSize()
    {
        byte[] $r1, r2, $r3;
        org.apache.lucene.analysis.compound.hyphenation.ByteVector r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.analysis.compound.hyphenation.ByteVector;

        $i1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        $r1 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $i2 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        r2 = newarray (byte)[$i2];

        $r3 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array>;

        $i3 = r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: int n>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i3);

        r0.<org.apache.lucene.analysis.compound.hyphenation.ByteVector: byte[] array> = r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.compound.hyphenation.ByteVector: int DEFAULT_BLOCK_SIZE> = 2048;

        return;
    }
}
