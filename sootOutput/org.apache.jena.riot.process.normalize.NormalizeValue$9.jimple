final class org.apache.jena.riot.process.normalize.NormalizeValue$9 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue$9 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$9;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node $r3, $r4, r5;
        org.apache.jena.riot.process.normalize.NormalizeValue$9 r6;
        com.hp.hpl.jena.datatypes.RDFDatatype r7;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r0, $r1, $r2;

        r6 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$9;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(64);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        return r5;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label2;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>($r1);

        return $r4;

     label2:
        $i3 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>($r1, $r2, null);

        return $r3;
    }
}
