final class com.jidesoft.spinner.SpinnerWheelSupport$1 extends java.lang.Object implements java.awt.event.MouseWheelListener
{
    final javax.swing.JSpinner val$spinner;

    void <init>(javax.swing.JSpinner)
    {
        javax.swing.JSpinner r1;
        com.jidesoft.spinner.SpinnerWheelSupport$1 r0;

        r0 := @this: com.jidesoft.spinner.SpinnerWheelSupport$1;

        r1 := @parameter0: javax.swing.JSpinner;

        r0.<com.jidesoft.spinner.SpinnerWheelSupport$1: javax.swing.JSpinner val$spinner> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void mouseWheelMoved(java.awt.event.MouseWheelEvent)
    {
        javax.swing.Action $r6, $r11;
        java.awt.event.MouseWheelEvent r3;
        int $i0;
        javax.swing.ActionMap $r5, $r10;
        boolean $z0;
        javax.swing.JSpinner $r1, $r2, $r4, $r9;
        com.jidesoft.spinner.SpinnerWheelSupport$1 r0;
        java.awt.event.ActionEvent $r7, $r12;
        java.lang.Object $r8, $r13;

        r0 := @this: com.jidesoft.spinner.SpinnerWheelSupport$1;

        r3 := @parameter0: java.awt.event.MouseWheelEvent;

        $r1 = r0.<com.jidesoft.spinner.SpinnerWheelSupport$1: javax.swing.JSpinner val$spinner>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.spinner.SpinnerWheelSupport$1: javax.swing.JSpinner val$spinner>;

        $z0 = virtualinvoke $r2.<javax.swing.JSpinner: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i0 = virtualinvoke r3.<java.awt.event.MouseWheelEvent: int getWheelRotation()>();

        if $i0 >= 0 goto label4;

        $r9 = r0.<com.jidesoft.spinner.SpinnerWheelSupport$1: javax.swing.JSpinner val$spinner>;

        $r10 = virtualinvoke $r9.<javax.swing.JSpinner: javax.swing.ActionMap getActionMap()>();

        $r11 = virtualinvoke $r10.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("increment");

        if $r11 == null goto label3;

        $r12 = new java.awt.event.ActionEvent;

        $r13 = virtualinvoke r3.<java.awt.event.MouseWheelEvent: java.lang.Object getSource()>();

        specialinvoke $r12.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>($r13, 0, "increment");

        interfaceinvoke $r11.<javax.swing.Action: void actionPerformed(java.awt.event.ActionEvent)>($r12);

     label3:
        goto label5;

     label4:
        if $i0 <= 0 goto label5;

        $r4 = r0.<com.jidesoft.spinner.SpinnerWheelSupport$1: javax.swing.JSpinner val$spinner>;

        $r5 = virtualinvoke $r4.<javax.swing.JSpinner: javax.swing.ActionMap getActionMap()>();

        $r6 = virtualinvoke $r5.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("decrement");

        if $r6 == null goto label5;

        $r7 = new java.awt.event.ActionEvent;

        $r8 = virtualinvoke r3.<java.awt.event.MouseWheelEvent: java.lang.Object getSource()>();

        specialinvoke $r7.<java.awt.event.ActionEvent: void <init>(java.lang.Object,int,java.lang.String)>($r8, 0, "decrement");

        interfaceinvoke $r6.<javax.swing.Action: void actionPerformed(java.awt.event.ActionEvent)>($r7);

     label5:
        return;
    }
}
