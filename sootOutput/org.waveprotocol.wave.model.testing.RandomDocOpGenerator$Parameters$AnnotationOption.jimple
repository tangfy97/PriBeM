public final class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption extends java.lang.Object
{
    final java.lang.String key;
    final java.util.List valueAlternatives;

    public void <init>(java.lang.String, java.util.List)
    {
        java.util.List r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "key must not be null");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "valueAlternatives must not be null");

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.lang.String key> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.util.List valueAlternatives> = r2;

        return;
    }

    public java.lang.String getKey()
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.lang.String key>;

        return $r1;
    }

    public java.lang.String randomValue(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider)
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r0;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption r1;
        java.lang.String $r4;

        r1 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption;

        r0 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider;

        $r2 = r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters$AnnotationOption: java.util.List valueAlternatives>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.testing.RandomDocOpGenerator: java.lang.Object access$000(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,java.util.List)>(r0, $r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }
}
