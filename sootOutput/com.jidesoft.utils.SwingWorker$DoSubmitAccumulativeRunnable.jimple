class com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable extends com.jidesoft.utils.AccumulativeRunnable implements java.awt.event.ActionListener
{
    private static final int DELAY;

    private void <init>()
    {
        com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable r0;

        r0 := @this: com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable;

        specialinvoke r0.<com.jidesoft.utils.AccumulativeRunnable: void <init>()>();

        return;
    }

    protected void run(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.Runnable r3;
        com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable r4;
        boolean $z0;

        r4 := @this: com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Runnable) $r2;

        interfaceinvoke r3.<java.lang.Runnable: void run()>();

        goto label1;

     label2:
        return;
    }

    protected void submit()
    {
        com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable r1;
        javax.swing.Timer $r0;

        r1 := @this: com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable;

        $r0 = new javax.swing.Timer;

        specialinvoke $r0.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(33, r1);

        virtualinvoke $r0.<javax.swing.Timer: void setRepeats(boolean)>(0);

        virtualinvoke $r0.<javax.swing.Timer: void start()>();

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable;

        r1 := @parameter0: java.awt.event.ActionEvent;

        virtualinvoke r0.<com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable: void run()>();

        return;
    }

    void <init>(com.jidesoft.utils.SwingWorker$1)
    {
        com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable r0;
        com.jidesoft.utils.SwingWorker$1 r1;

        r0 := @this: com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable;

        r1 := @parameter0: com.jidesoft.utils.SwingWorker$1;

        specialinvoke r0.<com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.utils.SwingWorker$DoSubmitAccumulativeRunnable: int DELAY> = 33;

        return;
    }
}
