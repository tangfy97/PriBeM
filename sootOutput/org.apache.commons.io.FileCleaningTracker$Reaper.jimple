final class org.apache.commons.io.FileCleaningTracker$Reaper extends java.lang.Thread
{
    final org.apache.commons.io.FileCleaningTracker this$0;

    void <init>(org.apache.commons.io.FileCleaningTracker)
    {
        org.apache.commons.io.FileCleaningTracker r1;
        org.apache.commons.io.FileCleaningTracker$Reaper r0;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

        r1 := @parameter0: org.apache.commons.io.FileCleaningTracker;

        r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("File Reaper");

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setPriority(int)>(10);

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setDaemon(boolean)>(1);

        return;
    }

    public void run()
    {
        org.apache.commons.io.FileCleaningTracker $r1, $r4, $r6, $r9, $r13;
        java.lang.ref.ReferenceQueue $r2;
        org.apache.commons.io.FileCleaningTracker$Tracker $r11;
        int $i0;
        java.lang.String $r8;
        boolean $z0, $z1;
        java.util.Collection $r5, $r10;
        java.lang.ref.Reference $r3;
        java.util.List $r7;
        org.apache.commons.io.FileCleaningTracker$Reaper r0;
        java.lang.InterruptedException $r12;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

     label1:
        $r13 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $z1 = $r13.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished>;

        if $z1 == 0 goto label2;

        $r9 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r10 = $r9.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

        $i0 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label6;

     label2:
        $r1 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r2 = $r1.<org.apache.commons.io.FileCleaningTracker: java.lang.ref.ReferenceQueue q>;

        $r3 = virtualinvoke $r2.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

        $r11 = (org.apache.commons.io.FileCleaningTracker$Tracker) $r3;

        $r4 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r5 = $r4.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

        interfaceinvoke $r5.<java.util.Collection: boolean remove(java.lang.Object)>($r11);

        $z0 = virtualinvoke $r11.<org.apache.commons.io.FileCleaningTracker$Tracker: boolean delete()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r7 = $r6.<org.apache.commons.io.FileCleaningTracker: java.util.List deleteFailures>;

        $r8 = virtualinvoke $r11.<org.apache.commons.io.FileCleaningTracker$Tracker: java.lang.String getPath()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        virtualinvoke $r11.<org.apache.commons.io.FileCleaningTracker$Tracker: void clear()>();

     label4:
        goto label1;

     label5:
        $r12 := @caughtexception;

        goto label1;

     label6:
        return;

        catch java.lang.InterruptedException from label2 to label4 with label5;
    }
}
