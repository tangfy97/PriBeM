public class org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        org.xmlpull.v1.builder.xpath.jaxen.Context r5;
        java.util.List r0;
        org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction r12;
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3, $r4, $r8, $r9;
        java.lang.String $r7, $r11;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r6, $r10;

        r12 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction;

        r5 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 2 goto label1;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r10 = virtualinvoke r5.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r11 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction: java.lang.String evaluate(java.lang.Object,java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r8, $r9, $r10);

        return $r11;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 3 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(2);

        $r6 = virtualinvoke r5.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r7 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.SubstringFunction: java.lang.String evaluate(java.lang.Object,java.lang.Object,java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r2, $r3, $r4, $r6);

        return $r7;

     label2:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>("substring() requires two or three arguments.");

        throw $r1;
    }

    public static java.lang.String evaluate(java.lang.Object, java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.lang.Double $r4;
        int $i0, i1, $i3;
        java.lang.Object r0, r3;
        java.lang.String $r2, $r6;
        java.lang.Number $r5;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r1 := @parameter2: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $r4 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r3, r1);

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.RoundFunction: java.lang.Number evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r4, r1);

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $i3 = (int) -1;

        i1 = $i0 + $i3;

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i1);

        return $r6;
    }

    public static java.lang.String evaluate(java.lang.Object, java.lang.Object, java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.lang.Double $r4, $r7;
        int $i0, $i1, i2, i3, $i5;
        java.lang.Object r0, r3, r6;
        java.lang.String $r2, $r9;
        java.lang.Number $r5, $r8;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        $r4 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r3, r1);

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.RoundFunction: java.lang.Number evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r4, r1);

        $i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $r7 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r6, r1);

        $r8 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.RoundFunction: java.lang.Number evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r7, r1);

        $i1 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        $i5 = (int) -1;

        i3 = $i0 + $i5;

        i2 = i3 + $i1;

        $r9 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i3, i2);

        return $r9;
    }
}
