final class org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeResolver
{
    private final java.lang.String characters;

    void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver: java.lang.String characters> = r1;

        return;
    }

    public void resolve(int, org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache r0;
        java.lang.String $r2, $r3;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$DeleteCharactersResolver: java.lang.String characters>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.NoninsertionTransformer$RangeCache: void resolveDeleteCharacters(java.lang.String)>($r3);

        return;
    }
}
