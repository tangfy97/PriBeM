public final class kodkod.engine.Evaluator extends java.lang.Object
{
    private final kodkod.instance.Instance instance;
    private final kodkod.engine.config.Options options;

    public void <init>(kodkod.instance.Instance)
    {
        kodkod.instance.Instance r1;
        kodkod.engine.config.Options $r2;
        kodkod.engine.Evaluator r0;

        r0 := @this: kodkod.engine.Evaluator;

        r1 := @parameter0: kodkod.instance.Instance;

        $r2 = new kodkod.engine.config.Options;

        specialinvoke $r2.<kodkod.engine.config.Options: void <init>()>();

        specialinvoke r0.<kodkod.engine.Evaluator: void <init>(kodkod.instance.Instance,kodkod.engine.config.Options)>(r1, $r2);

        return;
    }

    public void <init>(kodkod.instance.Instance, kodkod.engine.config.Options)
    {
        kodkod.instance.Instance r1;
        kodkod.engine.config.Options r3;
        kodkod.engine.Evaluator r0;
        java.lang.NullPointerException $r2;

        r0 := @this: kodkod.engine.Evaluator;

        r1 := @parameter0: kodkod.instance.Instance;

        r3 := @parameter1: kodkod.engine.config.Options;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label2:
        r0.<kodkod.engine.Evaluator: kodkod.instance.Instance instance> = r1;

        r0.<kodkod.engine.Evaluator: kodkod.engine.config.Options options> = r3;

        return;
    }

    public kodkod.engine.config.Options options()
    {
        kodkod.engine.config.Options $r1;
        kodkod.engine.Evaluator r0;

        r0 := @this: kodkod.engine.Evaluator;

        $r1 = r0.<kodkod.engine.Evaluator: kodkod.engine.config.Options options>;

        return $r1;
    }

    public kodkod.instance.Instance instance()
    {
        kodkod.instance.Instance $r1;
        kodkod.engine.Evaluator r0;

        r0 := @this: kodkod.engine.Evaluator;

        $r1 = r0.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        return $r1;
    }

    public boolean evaluate(kodkod.ast.Formula)
    {
        kodkod.engine.config.Options $r2;
        kodkod.instance.Instance $r3;
        kodkod.engine.Evaluator r1;
        kodkod.engine.bool.BooleanConstant $r4;
        kodkod.ast.Formula r0;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r1 := @this: kodkod.engine.Evaluator;

        r0 := @parameter0: kodkod.ast.Formula;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("formula");

        throw $r5;

     label1:
        $r3 = r1.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        $r2 = r1.<kodkod.engine.Evaluator: kodkod.engine.config.Options options>;

        $r4 = staticinvoke <kodkod.engine.fol2sat.Translator: kodkod.engine.bool.BooleanConstant evaluate(kodkod.ast.Formula,kodkod.instance.Instance,kodkod.engine.config.Options)>(r0, $r3, $r2);

        $z0 = virtualinvoke $r4.<kodkod.engine.bool.BooleanConstant: boolean booleanValue()>();

        return $z0;
    }

    public kodkod.instance.TupleSet evaluate(kodkod.ast.Expression)
    {
        kodkod.engine.config.Options $r2;
        kodkod.engine.Evaluator r1;
        kodkod.util.ints.IntSet $r8;
        kodkod.ast.Expression r0;
        java.lang.NullPointerException $r10;
        kodkod.instance.Instance $r3, $r5;
        kodkod.engine.bool.BooleanMatrix $r4;
        int $i0;
        kodkod.instance.Universe $r6;
        kodkod.instance.TupleFactory $r7;
        kodkod.instance.TupleSet $r9;

        r1 := @this: kodkod.engine.Evaluator;

        r0 := @parameter0: kodkod.ast.Expression;

        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("expression");

        throw $r10;

     label1:
        $r3 = r1.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        $r2 = r1.<kodkod.engine.Evaluator: kodkod.engine.config.Options options>;

        $r4 = staticinvoke <kodkod.engine.fol2sat.Translator: kodkod.engine.bool.BooleanMatrix evaluate(kodkod.ast.Expression,kodkod.instance.Instance,kodkod.engine.config.Options)>(r0, $r3, $r2);

        $r5 = r1.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        $r6 = virtualinvoke $r5.<kodkod.instance.Instance: kodkod.instance.Universe universe()>();

        $r7 = virtualinvoke $r6.<kodkod.instance.Universe: kodkod.instance.TupleFactory factory()>();

        $i0 = virtualinvoke r0.<kodkod.ast.Expression: int arity()>();

        $r8 = virtualinvoke $r4.<kodkod.engine.bool.BooleanMatrix: kodkod.util.ints.IntSet denseIndices()>();

        $r9 = virtualinvoke $r7.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet setOf(int,kodkod.util.ints.IntSet)>($i0, $r8);

        return $r9;
    }

    public int evaluate(kodkod.ast.IntExpression)
    {
        kodkod.engine.config.Options $r2;
        kodkod.instance.Instance $r3;
        kodkod.engine.Evaluator r1;
        kodkod.ast.IntExpression r0;
        kodkod.engine.bool.Int $r4;
        int $i0;
        java.lang.NullPointerException $r5;

        r1 := @this: kodkod.engine.Evaluator;

        r0 := @parameter0: kodkod.ast.IntExpression;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("intexpression");

        throw $r5;

     label1:
        $r3 = r1.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        $r2 = r1.<kodkod.engine.Evaluator: kodkod.engine.config.Options options>;

        $r4 = staticinvoke <kodkod.engine.fol2sat.Translator: kodkod.engine.bool.Int evaluate(kodkod.ast.IntExpression,kodkod.instance.Instance,kodkod.engine.config.Options)>(r0, $r3, $r2);

        $i0 = virtualinvoke $r4.<kodkod.engine.bool.Int: int value()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kodkod.engine.config.Options $r2;
        kodkod.engine.Evaluator r1;
        kodkod.instance.Instance $r5;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r7;

        r1 := @this: kodkod.engine.Evaluator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<kodkod.engine.Evaluator: kodkod.engine.config.Options options>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r5 = r1.<kodkod.engine.Evaluator: kodkod.instance.Instance instance>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
