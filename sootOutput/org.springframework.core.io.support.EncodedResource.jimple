public class org.springframework.core.io.support.EncodedResource extends java.lang.Object
{
    private final org.springframework.core.io.Resource resource;
    private final java.lang.String encoding;

    public void <init>(org.springframework.core.io.Resource)
    {
        org.springframework.core.io.support.EncodedResource r0;
        org.springframework.core.io.Resource r1;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        r1 := @parameter0: org.springframework.core.io.Resource;

        specialinvoke r0.<org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(org.springframework.core.io.Resource, java.lang.String)
    {
        java.lang.String r2;
        org.springframework.core.io.support.EncodedResource r0;
        org.springframework.core.io.Resource r1;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        r1 := @parameter0: org.springframework.core.io.Resource;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Resource must not be null");

        r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource> = r1;

        r0.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding> = r2;

        return;
    }

    public final org.springframework.core.io.Resource getResource()
    {
        org.springframework.core.io.support.EncodedResource r0;
        org.springframework.core.io.Resource $r1;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        $r1 = r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        return $r1;
    }

    public final java.lang.String getEncoding()
    {
        java.lang.String $r1;
        org.springframework.core.io.support.EncodedResource r0;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        $r1 = r0.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding>;

        return $r1;
    }

    public java.io.Reader getReader() throws java.io.IOException
    {
        java.io.InputStreamReader $r2, $r5;
        org.springframework.core.io.support.EncodedResource r0;
        java.lang.String $r1, $r8;
        org.springframework.core.io.Resource $r3, $r6;
        java.io.InputStream $r4, $r7;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        $r1 = r0.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding>;

        if $r1 == null goto label1;

        $r5 = new java.io.InputStreamReader;

        $r6 = r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $r7 = interfaceinvoke $r6.<org.springframework.core.io.Resource: java.io.InputStream getInputStream()>();

        $r8 = r0.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding>;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, $r8);

        return $r5;

     label1:
        $r2 = new java.io.InputStreamReader;

        $r3 = r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $r4 = interfaceinvoke $r3.<org.springframework.core.io.Resource: java.io.InputStream getInputStream()>();

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r4);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.core.io.support.EncodedResource r1, r2;
        java.lang.Object r0;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2;
        org.springframework.core.io.Resource $r3, $r4;

        r1 := @this: org.springframework.core.io.support.EncodedResource;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.springframework.core.io.support.EncodedResource;

        if $z0 == 0 goto label3;

        r2 = (org.springframework.core.io.support.EncodedResource) r0;

        $r4 = r1.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $r3 = r2.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r1.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding>;

        $r5 = r2.<org.springframework.core.io.support.EncodedResource: java.lang.String encoding>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.core.io.support.EncodedResource r0;
        org.springframework.core.io.Resource $r1;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        $r1 = r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.springframework.core.io.support.EncodedResource r0;
        org.springframework.core.io.Resource $r1;

        r0 := @this: org.springframework.core.io.support.EncodedResource;

        $r1 = r0.<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource resource>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
