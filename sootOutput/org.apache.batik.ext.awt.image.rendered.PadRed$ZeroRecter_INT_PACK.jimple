public class org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK extends org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter
{
    final int base;
    final int scanStride;
    final int[] pixels;
    final int[] zeros;
    final int x0;
    final int y0;

    public void <init>(java.awt.image.WritableRaster)
    {
        int[][] $r6;
        java.awt.image.SampleModel $r2;
        java.awt.image.DataBufferInt r5;
        int[] $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.awt.image.SinglePixelPackedSampleModel r3;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK r0;
        java.awt.image.WritableRaster r1;
        java.awt.image.DataBuffer $r4;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK;

        r1 := @parameter0: java.awt.image.WritableRaster;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter: void <init>(java.awt.image.WritableRaster)>(r1);

        $r2 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();

        r3 = (java.awt.image.SinglePixelPackedSampleModel) $r2;

        $i0 = virtualinvoke r3.<java.awt.image.SinglePixelPackedSampleModel: int getScanlineStride()>();

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int scanStride> = $i0;

        $r4 = virtualinvoke r1.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        r5 = (java.awt.image.DataBufferInt) $r4;

        $i1 = virtualinvoke r1.<java.awt.image.Raster: int getMinY()>();

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int x0> = $i1;

        $i2 = virtualinvoke r1.<java.awt.image.Raster: int getMinX()>();

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int y0> = $i2;

        $i3 = virtualinvoke r5.<java.awt.image.DataBuffer: int getOffset()>();

        $i4 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int x0>;

        $i5 = virtualinvoke r1.<java.awt.image.Raster: int getSampleModelTranslateX()>();

        $i6 = $i4 - $i5;

        $i7 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int y0>;

        $i8 = virtualinvoke r1.<java.awt.image.Raster: int getSampleModelTranslateY()>();

        $i9 = $i7 - $i8;

        $i10 = virtualinvoke r3.<java.awt.image.SinglePixelPackedSampleModel: int getOffset(int,int)>($i6, $i9);

        $i11 = $i3 + $i10;

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int base> = $i11;

        $r6 = virtualinvoke r5.<java.awt.image.DataBufferInt: int[][] getBankData()>();

        $r7 = $r6[0];

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] pixels> = $r7;

        $i12 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();

        if $i12 <= 10 goto label1;

        $i13 = virtualinvoke r1.<java.awt.image.Raster: int getWidth()>();

        $r8 = newarray (int)[$i13];

        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] zeros> = $r8;

        goto label2;

     label1:
        r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] zeros> = null;

     label2:
        return;
    }

    public void zeroRect(java.awt.Rectangle)
    {
        int[] $r2, $r3, $r4;
        org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK r0;
        java.awt.Rectangle r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK;

        r1 := @parameter0: java.awt.Rectangle;

        $i3 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int base>;

        $i1 = r1.<java.awt.Rectangle: int x>;

        $i0 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int x0>;

        $i2 = $i1 - $i0;

        $i9 = $i3 + $i2;

        $i5 = r1.<java.awt.Rectangle: int y>;

        $i4 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int y0>;

        $i7 = $i5 - $i4;

        $i6 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int scanStride>;

        $i8 = $i7 * $i6;

        i10 = $i9 + $i8;

        $i11 = r1.<java.awt.Rectangle: int width>;

        if $i11 <= 10 goto label3;

        i23 = 0;

        goto label2;

     label1:
        $i20 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int scanStride>;

        $i21 = i23 * $i20;

        i24 = i10 + $i21;

        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] zeros>;

        $r3 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] pixels>;

        $i22 = r1.<java.awt.Rectangle: int width>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, i24, $i22);

        i23 = i23 + 1;

     label2:
        $i19 = r1.<java.awt.Rectangle: int height>;

        if i23 < $i19 goto label1;

        goto label7;

     label3:
        i25 = i10;

        $i12 = r1.<java.awt.Rectangle: int width>;

        i26 = i10 + $i12;

        $i14 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int scanStride>;

        $i13 = r1.<java.awt.Rectangle: int width>;

        i15 = $i14 - $i13;

        i27 = 0;

        goto label6;

     label4:
        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int[] pixels>;

        $i17 = i25;

        i25 = i25 + 1;

        $r2[$i17] = 0;

     label5:
        if i25 < i26 goto label4;

        i25 = i25 + i15;

        $i18 = r0.<org.apache.batik.ext.awt.image.rendered.PadRed$ZeroRecter_INT_PACK: int scanStride>;

        i26 = i26 + $i18;

        i27 = i27 + 1;

     label6:
        $i16 = r1.<java.awt.Rectangle: int height>;

        if i27 < $i16 goto label5;

     label7:
        return;
    }
}
