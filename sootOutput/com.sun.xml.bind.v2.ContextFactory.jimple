public class com.sun.xml.bind.v2.ContextFactory extends java.lang.Object
{
    public static final java.lang.String USE_JAXB_PROPERTIES;

    public void <init>()
    {
        com.sun.xml.bind.v2.ContextFactory r0;

        r0 := @this: com.sun.xml.bind.v2.ContextFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.bind.JAXBContext createContext(java.lang.Class[], java.util.Map) throws javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.Messages $r19, $r39;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader $r26;
        java.util.Map $r12, $r13, r41, r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Collection $r27, r52;
        java.util.Set $r20;
        java.util.logging.Logger $r24;
        javax.xml.bind.JAXBException $r17, $r37;
        java.lang.Object[] $r18, $r38;
        java.util.HashMap $r0;
        java.lang.ClassCastException $r36;
        java.util.logging.Level $r25;
        java.lang.Boolean $r29, $r30, $r31, $r32, $r33, $r35, r43, r44, r45, r46, r47, r48, $r50, r51;
        java.lang.String $r8, $r23, $r28, $r34, $r40;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r16;
        java.util.Iterator $r21;
        java.lang.Class[] r15;
        java.lang.Object $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r22, $r49;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder $r14;

        r15 := @parameter0: java.lang.Class[];

        r41 := @parameter1: java.util.Map;

        if r41 != null goto label01;

        r42 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label02;

     label01:
        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(java.util.Map)>(r41);

        r42 = $r0;

     label02:
        $r1 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.defaultNamespaceRemap", class "Ljava/lang/String;");

        $r34 = (java.lang.String) $r1;

        $r2 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.c14n", class "Ljava/lang/Boolean;");

        $r35 = (java.lang.Boolean) $r2;

        r43 = $r35;

        if $r35 != null goto label03;

        r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label03:
        $r3 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.disableXmlSecurity", class "Ljava/lang/Boolean;");

        $r33 = (java.lang.Boolean) $r3;

        r44 = $r33;

        if $r33 != null goto label04;

        r44 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label04:
        $r4 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.treatEverythingNillable", class "Ljava/lang/Boolean;");

        $r32 = (java.lang.Boolean) $r4;

        r45 = $r32;

        if $r32 != null goto label05;

        r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label05:
        $r5 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "retainReferenceToInfo", class "Ljava/lang/Boolean;");

        $r31 = (java.lang.Boolean) $r5;

        r46 = $r31;

        if $r31 != null goto label06;

        r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label06:
        $r6 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "supressAccessorWarnings", class "Ljava/lang/Boolean;");

        $r30 = (java.lang.Boolean) $r6;

        r47 = $r30;

        if $r30 != null goto label07;

        r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

     label07:
        $r7 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.improvedXsiTypeHandling", class "Ljava/lang/Boolean;");

        $r29 = (java.lang.Boolean) $r7;

        r48 = $r29;

        if $r29 != null goto label09;

        $r28 = staticinvoke <com.sun.xml.bind.Util: java.lang.String getSystemProperty(java.lang.String)>("com.sun.xml.bind.improvedXsiTypeHandling");

        if $r28 != null goto label08;

        r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        goto label09;

     label08:
        r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r28);

     label09:
        $r49 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.XmlAccessorFactory", class "Ljava/lang/Boolean;");

        $r50 = (java.lang.Boolean) $r49;

        r51 = $r50;

        if $r50 != null goto label10;

        r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r24 = staticinvoke <com.sun.xml.bind.Util: java.util.logging.Logger getClassLogger()>();

        $r25 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r24.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r25, "Property com.sun.xml.bind.XmlAccessorFactoryis not active.  Using JAXB\'s implementation");

     label10:
        $r8 = <com.sun.xml.bind.api.JAXBRIContext: java.lang.String ANNOTATION_READER>;

        $r9 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, $r8, class "Lcom/sun/xml/bind/v2/model/annotation/RuntimeAnnotationReader;");

        $r26 = (com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader) $r9;

        $r10 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.typeReferences", class "Ljava/util/Collection;");

        $r27 = (java.util.Collection) $r10;

        r52 = $r27;

        if $r27 != null goto label11;

        r52 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label11:
        $r11 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.lang.Object getPropertyValue(java.util.Map,java.lang.String,java.lang.Class)>(r42, "com.sun.xml.bind.subclassReplacements", class "Ljava/util/Map;");

        $r12 = (java.util.Map) $r11;

        $r13 = staticinvoke <com.sun.xml.bind.v2.util.TypeCast: java.util.Map checkedCast(java.util.Map,java.lang.Class,java.lang.Class)>($r12, class "Ljava/lang/Class;", class "Ljava/lang/Class;");

     label12:
        goto label14;

     label13:
        $r36 := @caughtexception;

        $r37 = new javax.xml.bind.JAXBException;

        $r39 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages INVALID_TYPE_IN_MAP>;

        $r38 = newarray (java.lang.Object)[0];

        $r40 = virtualinvoke $r39.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r38);

        specialinvoke $r37.<javax.xml.bind.JAXBException: void <init>(java.lang.String,java.lang.Throwable)>($r40, $r36);

        throw $r37;

     label14:
        $z0 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label15;

        $r17 = new javax.xml.bind.JAXBException;

        $r19 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages UNSUPPORTED_PROPERTY>;

        $r18 = newarray (java.lang.Object)[1];

        $r20 = interfaceinvoke r42.<java.util.Map: java.util.Set keySet()>();

        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r18[0] = $r22;

        $r23 = virtualinvoke $r19.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r18);

        specialinvoke $r17.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label15:
        $r14 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder;

        specialinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: void <init>()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setClasses(java.lang.Class[])>(r15);

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setTypeRefs(java.util.Collection)>(r52);

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setSubclassReplacements(java.util.Map)>($r13);

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setDefaultNsUri(java.lang.String)>($r34);

        $z1 = virtualinvoke r43.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setC14NSupport(boolean)>($z1);

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setAnnotationReader(com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader)>($r26);

        $z2 = virtualinvoke r51.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setXmlAccessorFactorySupport(boolean)>($z2);

        $z3 = virtualinvoke r45.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setAllNillable(boolean)>($z3);

        $z4 = virtualinvoke r46.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setRetainPropertyInfo(boolean)>($z4);

        $z5 = virtualinvoke r47.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setSupressAccessorWarnings(boolean)>($z5);

        $z6 = virtualinvoke r48.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setImprovedXsiTypeHandling(boolean)>($z6);

        $z7 = virtualinvoke r44.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setDisableSecurityProcessing(boolean)>($z7);

        $r16 = virtualinvoke $r14.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl build()>();

        return $r16;

        catch java.lang.ClassCastException from label11 to label12 with label13;
    }

    private static java.lang.Object getPropertyValue(java.util.Map, java.lang.String, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.lang.Object[] $r6;
        com.sun.xml.bind.v2.Messages $r7;
        javax.xml.bind.JAXBException $r5;
        java.util.Map r0;
        java.lang.Object $r2, $r4;
        java.lang.Class r3;
        java.lang.String r1, $r8;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r5 = new javax.xml.bind.JAXBException;

        $r7 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages INVALID_PROPERTY_VALUE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = $r2;

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r6);

        specialinvoke $r5.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label2:
        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r2);

        return $r4;
    }

    public static com.sun.xml.bind.api.JAXBRIContext createContext(java.lang.Class[], java.util.Collection, java.util.Map, java.lang.String, boolean, com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader, boolean, boolean, boolean) throws javax.xml.bind.JAXBException
    {
        java.util.Collection r1;
        java.lang.Class[] r0;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader r4;
        java.util.Map r2;
        java.lang.String r3;
        boolean z0, z1, z2, z3;
        com.sun.xml.bind.api.JAXBRIContext $r5;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r4 := @parameter5: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        $r5 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: com.sun.xml.bind.api.JAXBRIContext createContext(java.lang.Class[],java.util.Collection,java.util.Map,java.lang.String,boolean,com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader,boolean,boolean,boolean,boolean)>(r0, r1, r2, r3, z0, r4, z1, z2, z3, 0);

        return $r5;
    }

    public static com.sun.xml.bind.api.JAXBRIContext createContext(java.lang.Class[], java.util.Collection, java.util.Map, java.lang.String, boolean, com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader, boolean, boolean, boolean, boolean) throws javax.xml.bind.JAXBException
    {
        java.util.Collection r2;
        java.lang.Class[] r1;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader r5;
        java.util.Map r3;
        java.lang.String r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder $r0;
        boolean z0, z1, z2, z3, z4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r6;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.util.Collection;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r5 := @parameter5: com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        z4 := @parameter9: boolean;

        $r0 = new com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: void <init>()>();

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setClasses(java.lang.Class[])>(r1);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setTypeRefs(java.util.Collection)>(r2);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setSubclassReplacements(java.util.Map)>(r3);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setDefaultNsUri(java.lang.String)>(r4);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setC14NSupport(boolean)>(z0);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setAnnotationReader(com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader)>(r5);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setXmlAccessorFactorySupport(boolean)>(z1);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setAllNillable(boolean)>(z2);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setRetainPropertyInfo(boolean)>(z3);

        virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder setImprovedXsiTypeHandling(boolean)>(z4);

        $r6 = virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder: com.sun.xml.bind.v2.runtime.JAXBContextImpl build()>();

        return $r6;
    }

    public static javax.xml.bind.JAXBContext createContext(java.lang.String, java.lang.ClassLoader, java.util.Map) throws javax.xml.bind.JAXBException
    {
        java.lang.Object[] $r4, $r17;
        com.sun.xml.bind.v2.Messages $r18;
        com.sun.istack.FinalArrayList $r0;
        java.util.StringTokenizer $r1;
        java.util.Map r5;
        int $i0;
        java.lang.String r2, $r8, $r13, $r19;
        javax.xml.bind.JAXBContext $r7;
        boolean $z0, z1, z2;
        java.lang.Class[] $r3, $r6;
        java.io.IOException $r20;
        javax.xml.bind.JAXBException $r16, $r21;
        java.util.List $r15;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.Class $r14;
        java.lang.ClassNotFoundException $r22;
        java.lang.ClassLoader r9;

        r2 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.ClassLoader;

        r5 := @parameter2: java.util.Map;

        $r0 = new com.sun.istack.FinalArrayList;

        specialinvoke $r0.<com.sun.istack.FinalArrayList: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ":");

     label01:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label11;

        z1 = 0;

        z2 = 0;

        $r8 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label02:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ObjectFactory");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r9.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r13);

        virtualinvoke $r0.<com.sun.istack.FinalArrayList: boolean add(java.lang.Object)>($r14);

        z2 = 1;

     label03:
        goto label05;

     label04:
        $r22 := @caughtexception;

     label05:
        $r15 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: java.util.List loadIndexedClasses(java.lang.String,java.lang.ClassLoader)>($r8, r9);

     label06:
        goto label08;

     label07:
        $r20 := @caughtexception;

        $r21 = new javax.xml.bind.JAXBException;

        specialinvoke $r21.<javax.xml.bind.JAXBException: void <init>(java.lang.Throwable)>($r20);

        throw $r21;

     label08:
        if $r15 == null goto label09;

        virtualinvoke $r0.<com.sun.istack.FinalArrayList: boolean addAll(java.util.Collection)>($r15);

        z1 = 1;

     label09:
        if z2 != 0 goto label10;

        if z1 != 0 goto label10;

        $r16 = new javax.xml.bind.JAXBException;

        $r18 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages BROKEN_CONTEXTPATH>;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r8;

        $r19 = virtualinvoke $r18.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r17);

        specialinvoke $r16.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label10:
        goto label01;

     label11:
        $i0 = virtualinvoke $r0.<com.sun.istack.FinalArrayList: int size()>();

        $r3 = newarray (java.lang.Class)[$i0];

        $r4 = virtualinvoke $r0.<com.sun.istack.FinalArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r6 = (java.lang.Class[]) $r4;

        $r7 = staticinvoke <com.sun.xml.bind.v2.ContextFactory: javax.xml.bind.JAXBContext createContext(java.lang.Class[],java.util.Map)>($r6, r5);

        return $r7;

        catch java.lang.ClassNotFoundException from label02 to label03 with label04;
        catch java.io.IOException from label05 to label06 with label07;
    }

    private static java.util.List loadIndexedClasses(java.lang.String, java.lang.ClassLoader) throws java.io.IOException, javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.Messages $r20, $r26;
        com.sun.istack.FinalArrayList $r10;
        boolean $z0, $z1;
        javax.xml.bind.JAXBException $r18, $r24;
        java.lang.StringBuilder $r0, $r3, $r4, $r12, $r13, $r14, $r15;
        java.lang.ClassLoader r6;
        java.lang.Throwable $r22;
        java.lang.Object[] $r19, $r25;
        int $i0;
        java.lang.String r1, $r2, $r5, $r11, $r16, $r21, $r27, r28;
        java.io.InputStreamReader $r9;
        java.lang.Class $r17;
        java.lang.ClassNotFoundException $r23;
        java.io.BufferedReader $r8;
        java.io.InputStream $r7;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.ClassLoader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/jaxb.index");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r5);

        if $r7 != null goto label01;

        return null;

     label01:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, "UTF-8");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label02:
        $r10 = new com.sun.istack.FinalArrayList;

        specialinvoke $r10.<com.sun.istack.FinalArrayList: void <init>()>();

        r28 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r28 == null goto label10;

        $r11 = virtualinvoke r28.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label04;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 != 0 goto label05;

     label04:
        r28 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label03;

     label05:
        $z1 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z1 == 0 goto label06;

        $r18 = new javax.xml.bind.JAXBException;

        $r20 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages ILLEGAL_ENTRY>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = $r11;

        $r21 = virtualinvoke $r20.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r19);

        specialinvoke $r18.<javax.xml.bind.JAXBException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = virtualinvoke r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r16);

        virtualinvoke $r10.<com.sun.istack.FinalArrayList: boolean add(java.lang.Object)>($r17);

     label07:
        goto label09;

     label08:
        $r23 := @caughtexception;

        $r24 = new javax.xml.bind.JAXBException;

        $r26 = <com.sun.xml.bind.v2.Messages: com.sun.xml.bind.v2.Messages ERROR_LOADING_CLASS>;

        $r25 = newarray (java.lang.Object)[2];

        $r25[0] = $r11;

        $r25[1] = $r5;

        $r27 = virtualinvoke $r26.<com.sun.xml.bind.v2.Messages: java.lang.String format(java.lang.Object[])>($r25);

        specialinvoke $r24.<javax.xml.bind.JAXBException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r23);

        throw $r24;

     label09:
        r28 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label03;

     label10:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        return $r10;

     label11:
        $r22 := @caughtexception;

     label12:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        throw $r22;

        catch java.lang.ClassNotFoundException from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void <clinit>()
    {
        <com.sun.xml.bind.v2.ContextFactory: java.lang.String USE_JAXB_PROPERTIES> = "_useJAXBProperties";

        return;
    }
}
