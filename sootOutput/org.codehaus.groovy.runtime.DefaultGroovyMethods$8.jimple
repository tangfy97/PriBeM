final class org.codehaus.groovy.runtime.DefaultGroovyMethods$8 extends java.lang.Object implements java.lang.Runnable
{
    private final java.lang.Process val$left;
    private final java.lang.Process val$right;

    void <init>(java.lang.Process, java.lang.Process)
    {
        org.codehaus.groovy.runtime.DefaultGroovyMethods$8 r0;
        java.lang.Process r1, r2;

        r0 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$8;

        r1 := @parameter0: java.lang.Process;

        r2 := @parameter1: java.lang.Process;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$8: java.lang.Process val$left> = r1;

        r0.<org.codehaus.groovy.runtime.DefaultGroovyMethods$8: java.lang.Process val$right> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.codehaus.groovy.runtime.DefaultGroovyMethods$8 r1;
        java.io.OutputStream $r6;
        java.lang.Throwable $r8;
        byte[] r7;
        java.io.BufferedInputStream $r11;
        java.lang.Process $r2, $r5;
        groovy.lang.GroovyRuntimeException $r13;
        java.io.IOException $r9;
        java.io.BufferedOutputStream $r12;
        int $i0, $i2;
        java.io.InputStream $r3;

        r1 := @this: org.codehaus.groovy.runtime.DefaultGroovyMethods$8;

        $r11 = new java.io.BufferedInputStream;

        $r2 = r1.<org.codehaus.groovy.runtime.DefaultGroovyMethods$8: java.lang.Process val$left>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.io.InputStream getIn(java.lang.Process)>($r2);

        specialinvoke $r11.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        $r12 = new java.io.BufferedOutputStream;

        $r5 = r1.<org.codehaus.groovy.runtime.DefaultGroovyMethods$8: java.lang.Process val$right>;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.io.OutputStream getOut(java.lang.Process)>($r5);

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);

        r7 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>(r7);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>(r7, 0, $i0);

        goto label1;

     label2:
        staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: void access$300(java.io.OutputStream)>($r12);

        goto label6;

     label3:
        $r9 := @caughtexception;

        $r13 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r13.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("exception while reading process stream", $r9);

        throw $r13;

     label4:
        $r8 := @caughtexception;

     label5:
        staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: void access$300(java.io.OutputStream)>($r12);

        throw $r8;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }
}
