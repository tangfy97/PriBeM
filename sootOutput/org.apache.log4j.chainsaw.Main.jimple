public class org.apache.log4j.chainsaw.Main extends javax.swing.JFrame
{
    private static final int DEFAULT_PORT;
    public static final java.lang.String PORT_PROP_NAME;
    private static final org.apache.log4j.Logger LOG;
    static java.lang.Class class$org$apache$log4j$chainsaw$Main;

    private void <init>()
    {
        javax.swing.JSplitPane $r20;
        org.apache.log4j.chainsaw.ControlPanel $r12;
        org.apache.log4j.Logger $r7, $r9;
        javax.swing.JMenuItem $r5, $r10;
        javax.swing.border.TitledBorder $r16;
        java.awt.Container $r13, $r21;
        java.lang.NoClassDefFoundError $r8;
        org.apache.log4j.chainsaw.ExitAction $r11;
        javax.swing.JMenuBar $r2;
        org.apache.log4j.chainsaw.Main$1 $r22;
        org.apache.log4j.chainsaw.Main r0;
        org.apache.log4j.chainsaw.MyTableModel $r1;
        javax.swing.JMenu $r3;
        java.lang.Exception $r6;
        javax.swing.JScrollPane $r15;
        java.awt.Dimension $r17, $r19;
        org.apache.log4j.chainsaw.DetailPanel $r18;
        org.apache.log4j.chainsaw.LoadXMLAction $r4;
        javax.swing.JTable $r14;

        r0 := @this: org.apache.log4j.chainsaw.Main;

        specialinvoke r0.<javax.swing.JFrame: void <init>(java.lang.String)>("CHAINSAW - Log4J Log Viewer");

        $r1 = new org.apache.log4j.chainsaw.MyTableModel;

        specialinvoke $r1.<org.apache.log4j.chainsaw.MyTableModel: void <init>()>();

        $r2 = new javax.swing.JMenuBar;

        specialinvoke $r2.<javax.swing.JMenuBar: void <init>()>();

        virtualinvoke r0.<javax.swing.JFrame: void setJMenuBar(javax.swing.JMenuBar)>($r2);

        $r3 = new javax.swing.JMenu;

        specialinvoke $r3.<javax.swing.JMenu: void <init>(java.lang.String)>("File");

        virtualinvoke $r2.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r3);

     label1:
        $r4 = new org.apache.log4j.chainsaw.LoadXMLAction;

        specialinvoke $r4.<org.apache.log4j.chainsaw.LoadXMLAction: void <init>(javax.swing.JFrame,org.apache.log4j.chainsaw.MyTableModel)>(r0, $r1);

        $r5 = new javax.swing.JMenuItem;

        specialinvoke $r5.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Load file...");

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r5);

        virtualinvoke $r5.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r4);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = <org.apache.log4j.chainsaw.Main: org.apache.log4j.Logger LOG>;

        virtualinvoke $r9.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Missing classes for XML parser", $r8);

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, "XML parser not in classpath - unable to load XML events.", "CHAINSAW", 0);

        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = <org.apache.log4j.chainsaw.Main: org.apache.log4j.Logger LOG>;

        virtualinvoke $r7.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Unable to create the action to load XML files", $r6);

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r0, "Unable to create a XML parser - unable to load XML events.", "CHAINSAW", 0);

     label5:
        $r10 = new javax.swing.JMenuItem;

        specialinvoke $r10.<javax.swing.JMenuItem: void <init>(java.lang.String)>("Exit");

        virtualinvoke $r3.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r10);

        $r11 = <org.apache.log4j.chainsaw.ExitAction: org.apache.log4j.chainsaw.ExitAction INSTANCE>;

        virtualinvoke $r10.<javax.swing.AbstractButton: void addActionListener(java.awt.event.ActionListener)>($r11);

        $r12 = new org.apache.log4j.chainsaw.ControlPanel;

        specialinvoke $r12.<org.apache.log4j.chainsaw.ControlPanel: void <init>(org.apache.log4j.chainsaw.MyTableModel)>($r1);

        $r13 = virtualinvoke r0.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        virtualinvoke $r13.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r12, "North");

        $r14 = new javax.swing.JTable;

        specialinvoke $r14.<javax.swing.JTable: void <init>(javax.swing.table.TableModel)>($r1);

        virtualinvoke $r14.<javax.swing.JTable: void setSelectionMode(int)>(0);

        $r15 = new javax.swing.JScrollPane;

        specialinvoke $r15.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r14);

        $r16 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>("Events: ");

        virtualinvoke $r15.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r16);

        $r17 = new java.awt.Dimension;

        specialinvoke $r17.<java.awt.Dimension: void <init>(int,int)>(900, 300);

        virtualinvoke $r15.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r17);

        $r18 = new org.apache.log4j.chainsaw.DetailPanel;

        specialinvoke $r18.<org.apache.log4j.chainsaw.DetailPanel: void <init>(javax.swing.JTable,org.apache.log4j.chainsaw.MyTableModel)>($r14, $r1);

        $r19 = new java.awt.Dimension;

        specialinvoke $r19.<java.awt.Dimension: void <init>(int,int)>(900, 300);

        virtualinvoke $r18.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r19);

        $r20 = new javax.swing.JSplitPane;

        specialinvoke $r20.<javax.swing.JSplitPane: void <init>(int,java.awt.Component,java.awt.Component)>(0, $r15, $r18);

        $r21 = virtualinvoke r0.<javax.swing.JFrame: java.awt.Container getContentPane()>();

        virtualinvoke $r21.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r20, "Center");

        $r22 = new org.apache.log4j.chainsaw.Main$1;

        specialinvoke $r22.<org.apache.log4j.chainsaw.Main$1: void <init>(org.apache.log4j.chainsaw.Main)>(r0);

        virtualinvoke r0.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r22);

        virtualinvoke r0.<java.awt.Window: void pack()>();

        virtualinvoke r0.<java.awt.Window: void setVisible(boolean)>(1);

        specialinvoke r0.<org.apache.log4j.chainsaw.Main: void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)>($r1);

        return;

        catch java.lang.NoClassDefFoundError from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void setupReceiver(org.apache.log4j.chainsaw.MyTableModel)
    {
        org.apache.log4j.Logger $r3, $r12;
        org.apache.log4j.chainsaw.LoggingReceiver $r22;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r20;
        int i0;
        java.lang.String $r0, $r9, $r16, $r21;
        org.apache.log4j.chainsaw.Main r4;
        org.apache.log4j.chainsaw.MyTableModel r1;
        java.io.IOException $r2;
        java.lang.NumberFormatException $r10;

        r4 := @this: org.apache.log4j.chainsaw.Main;

        r1 := @parameter0: org.apache.log4j.chainsaw.MyTableModel;

        i0 = 4445;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("chainsaw.port");

        if $r0 == null goto label4;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r12 = <org.apache.log4j.chainsaw.Main: org.apache.log4j.Logger LOG>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse chainsaw.port property with value ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.log4j.Category: void fatal(java.lang.Object)>($r16);

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse port number from \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', quitting.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r4, $r21, "CHAINSAW", 0);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        $r22 = new org.apache.log4j.chainsaw.LoggingReceiver;

        specialinvoke $r22.<org.apache.log4j.chainsaw.LoggingReceiver: void <init>(org.apache.log4j.chainsaw.MyTableModel,int)>(r1, i0);

        virtualinvoke $r22.<java.lang.Thread: void start()>();

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

        $r3 = <org.apache.log4j.chainsaw.Main: org.apache.log4j.Logger LOG>;

        virtualinvoke $r3.<org.apache.log4j.Category: void fatal(java.lang.Object,java.lang.Throwable)>("Unable to connect to socket server, quiting", $r2);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to create socket on port ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", quitting.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>(r4, $r9, "CHAINSAW", 0);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label7:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private static void initLog4J()
    {
        java.util.Properties $r0;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("log4j.rootLogger", "DEBUG, A1");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("log4j.appender.A1", "org.apache.log4j.ConsoleAppender");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("log4j.appender.A1.layout", "org.apache.log4j.TTCCLayout");

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.util.Properties)>($r0);

        return;
    }

    public static void main(java.lang.String[])
    {
        org.apache.log4j.chainsaw.Main $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <org.apache.log4j.chainsaw.Main: void initLog4J()>();

        $r0 = new org.apache.log4j.chainsaw.Main;

        specialinvoke $r0.<org.apache.log4j.chainsaw.Main: void <init>()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.log4j.Logger $r1;
        java.lang.Class $r0, $r2;

        <org.apache.log4j.chainsaw.Main: java.lang.String PORT_PROP_NAME> = "chainsaw.port";

        <org.apache.log4j.chainsaw.Main: int DEFAULT_PORT> = 4445;

        $r0 = <org.apache.log4j.chainsaw.Main: java.lang.Class class$org$apache$log4j$chainsaw$Main>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.log4j.chainsaw.Main: java.lang.Class class$(java.lang.String)>("org.apache.log4j.chainsaw.Main");

        <org.apache.log4j.chainsaw.Main: java.lang.Class class$org$apache$log4j$chainsaw$Main> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.log4j.chainsaw.Main: java.lang.Class class$org$apache$log4j$chainsaw$Main>;

     label2:
        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r2);

        <org.apache.log4j.chainsaw.Main: org.apache.log4j.Logger LOG> = $r1;

        return;
    }
}
