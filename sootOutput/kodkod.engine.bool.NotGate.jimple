public final class kodkod.engine.bool.NotGate extends kodkod.engine.bool.BooleanFormula
{
    private final int hashcode;

    void <init>(kodkod.engine.bool.BooleanFormula)
    {
        kodkod.engine.bool.BooleanFormula r1;
        int $i0, $i1, $i2;
        kodkod.engine.bool.NotGate r0;

        r0 := @this: kodkod.engine.bool.NotGate;

        r1 := @parameter0: kodkod.engine.bool.BooleanFormula;

        specialinvoke r0.<kodkod.engine.bool.BooleanFormula: void <init>(kodkod.engine.bool.BooleanFormula)>(r1);

        $i0 = virtualinvoke r1.<kodkod.engine.bool.BooleanFormula: int label()>();

        $i1 = neg $i0;

        $i2 = staticinvoke <kodkod.util.ints.Ints: int superFastHash(int)>($i1);

        r0.<kodkod.engine.bool.NotGate: int hashcode> = $i2;

        return;
    }

    int hash(kodkod.engine.bool.Operator)
    {
        int $i0;
        kodkod.engine.bool.NotGate r0;
        kodkod.engine.bool.Operator r1;

        r0 := @this: kodkod.engine.bool.NotGate;

        r1 := @parameter0: kodkod.engine.bool.Operator;

        $i0 = r0.<kodkod.engine.bool.NotGate: int hashcode>;

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        kodkod.engine.bool.NotGate r1;
        kodkod.engine.bool.NotGate$1 $r0;

        r1 := @this: kodkod.engine.bool.NotGate;

        $r0 = new kodkod.engine.bool.NotGate$1;

        specialinvoke $r0.<kodkod.engine.bool.NotGate$1: void <init>(kodkod.engine.bool.NotGate)>(r1);

        return $r0;
    }

    public final int label()
    {
        kodkod.engine.bool.BooleanFormula $r1;
        int $i0, $i1;
        kodkod.engine.bool.NotGate r0;

        r0 := @this: kodkod.engine.bool.NotGate;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.NotGate: kodkod.engine.bool.BooleanFormula negation()>();

        $i0 = virtualinvoke $r1.<kodkod.engine.bool.BooleanFormula: int label()>();

        $i1 = neg $i0;

        return $i1;
    }

    public int size()
    {
        kodkod.engine.bool.NotGate r0;

        r0 := @this: kodkod.engine.bool.NotGate;

        return 1;
    }

    public java.lang.Object accept(kodkod.engine.bool.BooleanVisitor, java.lang.Object)
    {
        kodkod.engine.bool.BooleanVisitor r0;
        kodkod.engine.bool.NotGate r1;
        java.lang.Object r2, $r3;

        r1 := @this: kodkod.engine.bool.NotGate;

        r0 := @parameter0: kodkod.engine.bool.BooleanVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<kodkod.engine.bool.BooleanVisitor: java.lang.Object visit(kodkod.engine.bool.NotGate,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        kodkod.engine.bool.BooleanFormula $r2;
        kodkod.engine.bool.NotGate r1;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3, $r5;

        r1 := @this: kodkod.engine.bool.NotGate;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("!");

        $r2 = virtualinvoke r1.<kodkod.engine.bool.NotGate: kodkod.engine.bool.BooleanFormula negation()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public kodkod.engine.bool.Operator op()
    {
        kodkod.engine.bool.NotGate r1;
        kodkod.engine.bool.Operator $r0;

        r1 := @this: kodkod.engine.bool.NotGate;

        $r0 = <kodkod.engine.bool.Operator: kodkod.engine.bool.Operator NOT>;

        return $r0;
    }

    public kodkod.engine.bool.BooleanFormula input(int)
    {
        java.lang.IndexOutOfBoundsException $r2;
        kodkod.engine.bool.BooleanFormula $r1;
        int i0;
        kodkod.engine.bool.NotGate r0;

        r0 := @this: kodkod.engine.bool.NotGate;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<kodkod.engine.bool.NotGate: kodkod.engine.bool.BooleanFormula negation()>();

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        kodkod.engine.bool.NotGate r0;

        r0 := @this: kodkod.engine.bool.NotGate;

        $i0 = r0.<kodkod.engine.bool.NotGate: int hashcode>;

        return $i0;
    }
}
