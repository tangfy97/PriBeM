public abstract class com.glines.socketio.server.transport.AbstractHttpTransport extends com.glines.socketio.server.AbstractTransport
{
    private static final java.util.logging.Logger LOGGER;
    public static final java.lang.String SESSION_KEY;

    static void <clinit>()
    {
        java.util.logging.Logger $r2;
        java.lang.Class $r0, $r4;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r1, $r5, $r6, $r8;

        $r0 = class "Lcom/glines/socketio/server/transport/AbstractHttpTransport;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.transport.AbstractHttpTransport: java.util.logging.Logger LOGGER> = $r2;

        $r3 = new java.lang.StringBuilder;

        $r4 = class "Lcom/glines/socketio/server/transport/AbstractHttpTransport;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Session");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.glines.socketio.server.transport.AbstractHttpTransport: java.lang.String SESSION_KEY> = $r8;

        return;
    }

    public void <init>()
    {
        com.glines.socketio.server.transport.AbstractHttpTransport r0;

        r0 := @this: com.glines.socketio.server.transport.AbstractHttpTransport;

        specialinvoke r0.<com.glines.socketio.server.AbstractTransport: void <init>()>();

        return;
    }

    public final void handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, com.glines.socketio.server.Transport$InboundFactory, com.glines.socketio.server.SessionManager) throws java.io.IOException
    {
        com.glines.socketio.server.SocketIOSession $r12, r30;
        com.glines.socketio.server.SessionManager r11;
        boolean $z0, $z1, $z2;
        com.glines.socketio.server.Transport$InboundFactory r10;
        java.util.logging.Logger $r1, $r14, $r16, $r22;
        java.lang.StringBuilder $r15, $r17, $r18, $r21, $r24, $r25, $r28;
        com.glines.socketio.server.transport.AbstractHttpTransport r9;
        java.util.logging.Level $r0, $r13;
        javax.servlet.http.HttpServletRequest r2;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6, $r7, $r19, $r23, $r27, $r29, r31;
        javax.servlet.http.HttpServletResponse r8;
        java.lang.Object $r4;
        com.glines.socketio.server.TransportHandler $r20;
        java.lang.Class $r26;

        r9 := @this: com.glines.socketio.server.transport.AbstractHttpTransport;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

        r10 := @parameter2: com.glines.socketio.server.Transport$InboundFactory;

        r11 := @parameter3: com.glines.socketio.server.SessionManager;

        $r1 = <com.glines.socketio.server.transport.AbstractHttpTransport: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r22 = <com.glines.socketio.server.transport.AbstractHttpTransport: java.util.logging.Logger LOGGER>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Handling request ");

        $r23 = interfaceinvoke r2.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ");

        $r26 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.logging.Logger: void fine(java.lang.String)>($r29);

     label1:
        $r3 = <com.glines.socketio.server.transport.AbstractHttpTransport: java.lang.String SESSION_KEY>;

        $r4 = interfaceinvoke r2.<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>($r3);

        r30 = null;

        r31 = null;

        if $r4 == null goto label2;

        r30 = (com.glines.socketio.server.SocketIOSession) $r4;

        goto label3;

     label2:
        $r5 = staticinvoke <com.glines.socketio.util.Web: java.lang.String extractSessionId(javax.servlet.http.HttpServletRequest)>(r2);

        r31 = $r5;

        if $r5 == null goto label3;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        r30 = interfaceinvoke r11.<com.glines.socketio.server.SessionManager: com.glines.socketio.server.SocketIOSession getSession(java.lang.String)>($r5);

     label3:
        if r30 == null goto label5;

        $r20 = interfaceinvoke r30.<com.glines.socketio.server.SocketIOSession: com.glines.socketio.server.TransportHandler getTransportHandler()>();

        if $r20 == null goto label4;

        interfaceinvoke $r20.<com.glines.socketio.server.TransportHandler: void handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.glines.socketio.server.SocketIOSession)>(r2, r8, r30);

        goto label9;

     label4:
        interfaceinvoke r30.<com.glines.socketio.server.SocketIOSession: void onShutdown()>();

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(500);

        goto label9;

     label5:
        if r31 == null goto label7;

        $i0 = virtualinvoke r31.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r14 = <com.glines.socketio.server.transport.AbstractHttpTransport: java.util.logging.Logger LOGGER>;

        $r13 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r14.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r13);

        if $z2 == 0 goto label6;

        $r16 = <com.glines.socketio.server.transport.AbstractHttpTransport: java.util.logging.Logger LOGGER>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("got session id ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but no session found");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void fine(java.lang.String)>($r19);

     label6:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(400);

        goto label9;

     label7:
        $r6 = "GET";

        $r7 = interfaceinvoke r2.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label8;

        $r12 = specialinvoke r9.<com.glines.socketio.server.transport.AbstractHttpTransport: com.glines.socketio.server.SocketIOSession connect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.glines.socketio.server.Transport$InboundFactory,com.glines.socketio.server.SessionManager)>(r2, r8, r10, r11);

        if $r12 != null goto label9;

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(503);

        goto label9;

     label8:
        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void sendError(int)>(400);

     label9:
        return;
    }

    private com.glines.socketio.server.SocketIOSession connect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, com.glines.socketio.server.Transport$InboundFactory, com.glines.socketio.server.SessionManager) throws java.io.IOException
    {
        com.glines.socketio.server.transport.AbstractHttpTransport r5;
        com.glines.socketio.server.SocketIOSession $r4;
        com.glines.socketio.server.Transport$InboundFactory r0;
        com.glines.socketio.server.transport.DataHandler $r6;
        com.glines.socketio.server.SocketIOConfig $r7, $r12;
        com.glines.socketio.server.SocketIOInbound $r2;
        javax.servlet.http.HttpServletResponse r13;
        javax.servlet.http.HttpServletRequest r1;
        com.glines.socketio.server.ConnectableTransportHandler r11;
        com.glines.socketio.server.TransportHandler $r8;
        java.lang.Class $r9;
        java.lang.Object $r10;
        com.glines.socketio.server.SessionManager r3;

        r5 := @this: com.glines.socketio.server.transport.AbstractHttpTransport;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r13 := @parameter1: javax.servlet.http.HttpServletResponse;

        r0 := @parameter2: com.glines.socketio.server.Transport$InboundFactory;

        r3 := @parameter3: com.glines.socketio.server.SessionManager;

        $r2 = interfaceinvoke r0.<com.glines.socketio.server.Transport$InboundFactory: com.glines.socketio.server.SocketIOInbound getInbound(javax.servlet.http.HttpServletRequest)>(r1);

        if $r2 == null goto label1;

        $r4 = interfaceinvoke r3.<com.glines.socketio.server.SessionManager: com.glines.socketio.server.SocketIOSession createSession(com.glines.socketio.server.SocketIOInbound)>($r2);

        $r6 = virtualinvoke r5.<com.glines.socketio.server.transport.AbstractHttpTransport: com.glines.socketio.server.transport.DataHandler newDataHandler(com.glines.socketio.server.SocketIOSession)>($r4);

        $r7 = virtualinvoke r5.<com.glines.socketio.server.transport.AbstractHttpTransport: com.glines.socketio.server.SocketIOConfig getConfig()>();

        interfaceinvoke $r6.<com.glines.socketio.server.transport.DataHandler: void init(com.glines.socketio.server.SocketIOConfig)>($r7);

        $r8 = virtualinvoke r5.<com.glines.socketio.server.transport.AbstractHttpTransport: com.glines.socketio.server.TransportHandler newHandler(java.lang.Class,com.glines.socketio.server.SocketIOSession)>(class "Lcom/glines/socketio/server/ConnectableTransportHandler;", $r4);

        $r9 = class "Lcom/glines/socketio/server/ConnectableTransportHandler;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r8);

        r11 = (com.glines.socketio.server.ConnectableTransportHandler) $r10;

        interfaceinvoke r11.<com.glines.socketio.server.ConnectableTransportHandler: void setDataHandler(com.glines.socketio.server.transport.DataHandler)>($r6);

        $r12 = virtualinvoke r5.<com.glines.socketio.server.transport.AbstractHttpTransport: com.glines.socketio.server.SocketIOConfig getConfig()>();

        interfaceinvoke $r8.<com.glines.socketio.server.TransportHandler: void init(com.glines.socketio.server.SocketIOConfig)>($r12);

        interfaceinvoke r11.<com.glines.socketio.server.ConnectableTransportHandler: void connect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r13);

        return $r4;

     label1:
        return null;
    }

    protected abstract com.glines.socketio.server.transport.DataHandler newDataHandler(com.glines.socketio.server.SocketIOSession);
}
