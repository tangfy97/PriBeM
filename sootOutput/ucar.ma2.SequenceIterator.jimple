public class ucar.ma2.SequenceIterator extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private int start;
    private int size;
    private int count;
    private ucar.ma2.ArrayStructure abb;

    public void <init>(int, int, ucar.ma2.ArrayStructure)
    {
        ucar.ma2.ArrayStructure r1;
        ucar.ma2.SequenceIterator r0;
        int i0, i1;

        r0 := @this: ucar.ma2.SequenceIterator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: ucar.ma2.ArrayStructure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.ma2.SequenceIterator: int start> = i0;

        r0.<ucar.ma2.SequenceIterator: int size> = i1;

        r0.<ucar.ma2.SequenceIterator: ucar.ma2.ArrayStructure abb> = r1;

        r0.<ucar.ma2.SequenceIterator: int count> = 0;

        return;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.ma2.SequenceIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: ucar.ma2.SequenceIterator;

        $i1 = r0.<ucar.ma2.SequenceIterator: int count>;

        $i0 = r0.<ucar.ma2.SequenceIterator: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.ma2.ArrayStructure $r1;
        ucar.ma2.StructureData $r2;
        ucar.ma2.SequenceIterator r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: ucar.ma2.SequenceIterator;

        $r1 = r0.<ucar.ma2.SequenceIterator: ucar.ma2.ArrayStructure abb>;

        $i1 = r0.<ucar.ma2.SequenceIterator: int start>;

        $i0 = r0.<ucar.ma2.SequenceIterator: int count>;

        $i2 = $i1 + $i0;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>($i2);

        $i3 = r0.<ucar.ma2.SequenceIterator: int count>;

        $i4 = $i3 + 1;

        r0.<ucar.ma2.SequenceIterator: int count> = $i4;

        return $r2;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.ma2.SequenceIterator r0;

        r0 := @this: ucar.ma2.SequenceIterator;

        i0 := @parameter0: int;

        return;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        ucar.ma2.SequenceIterator r0;

        r0 := @this: ucar.ma2.SequenceIterator;

        r0.<ucar.ma2.SequenceIterator: int count> = 0;

        return r0;
    }

    public int getCurrentRecno()
    {
        int $i0;
        ucar.ma2.SequenceIterator r0;

        r0 := @this: ucar.ma2.SequenceIterator;

        $i0 = r0.<ucar.ma2.SequenceIterator: int count>;

        return $i0;
    }
}
