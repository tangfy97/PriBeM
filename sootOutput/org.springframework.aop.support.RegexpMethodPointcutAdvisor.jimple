public class org.springframework.aop.support.RegexpMethodPointcutAdvisor extends org.springframework.aop.support.AbstractGenericPointcutAdvisor
{
    private java.lang.String[] patterns;
    private org.springframework.aop.support.AbstractRegexpMethodPointcut pointcut;
    private final java.lang.Object pointcutMonitor;

    public void <init>()
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor $r1;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        specialinvoke r0.<org.springframework.aop.support.AbstractGenericPointcutAdvisor: void <init>()>();

        $r1 = new org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor;

        specialinvoke $r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor: void <init>(org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor)>(null);

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.Object pointcutMonitor> = $r1;

        return;
    }

    public void <init>(org.aopalliance.aop.Advice)
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor $r1;
        org.aopalliance.aop.Advice r2;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        r2 := @parameter0: org.aopalliance.aop.Advice;

        specialinvoke r0.<org.springframework.aop.support.AbstractGenericPointcutAdvisor: void <init>()>();

        $r1 = new org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor;

        specialinvoke $r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor: void <init>(org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor)>(null);

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.Object pointcutMonitor> = $r1;

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setAdvice(org.aopalliance.aop.Advice)>(r2);

        return;
    }

    public void <init>(java.lang.String, org.aopalliance.aop.Advice)
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor $r1;
        org.aopalliance.aop.Advice r3;
        java.lang.String r2;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.aopalliance.aop.Advice;

        specialinvoke r0.<org.springframework.aop.support.AbstractGenericPointcutAdvisor: void <init>()>();

        $r1 = new org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor;

        specialinvoke $r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor: void <init>(org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor)>(null);

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.Object pointcutMonitor> = $r1;

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setPattern(java.lang.String)>(r2);

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setAdvice(org.aopalliance.aop.Advice)>(r3);

        return;
    }

    public void <init>(java.lang.String[], org.aopalliance.aop.Advice)
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor $r1;
        org.aopalliance.aop.Advice r3;
        java.lang.String[] r2;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        r2 := @parameter0: java.lang.String[];

        r3 := @parameter1: org.aopalliance.aop.Advice;

        specialinvoke r0.<org.springframework.aop.support.AbstractGenericPointcutAdvisor: void <init>()>();

        $r1 = new org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor;

        specialinvoke $r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor: void <init>(org.springframework.aop.support.RegexpMethodPointcutAdvisor$SerializableMonitor)>(null);

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.Object pointcutMonitor> = $r1;

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setPatterns(java.lang.String[])>(r2);

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setAdvice(org.aopalliance.aop.Advice)>(r3);

        return;
    }

    public void setPattern(java.lang.String)
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        r2 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = r2;

        virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setPatterns(java.lang.String[])>($r1);

        return;
    }

    public void setPatterns(java.lang.String[])
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        java.lang.String[] r1;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        r1 := @parameter0: java.lang.String[];

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.String[] patterns> = r1;

        return;
    }

    public org.springframework.aop.Pointcut getPointcut()
    {
        java.lang.Throwable $r7;
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r0;
        java.lang.String[] $r5;
        java.lang.Object $r1;
        org.springframework.aop.support.AbstractRegexpMethodPointcut $r2, $r3, $r4, $r6;

        r0 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        $r1 = r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.Object pointcutMonitor>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.support.AbstractRegexpMethodPointcut pointcut>;

        if $r2 != null goto label2;

        $r4 = virtualinvoke r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.support.AbstractRegexpMethodPointcut createPointcut()>();

        r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.support.AbstractRegexpMethodPointcut pointcut> = $r4;

        $r6 = r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.support.AbstractRegexpMethodPointcut pointcut>;

        $r5 = r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.String[] patterns>;

        virtualinvoke $r6.<org.springframework.aop.support.AbstractRegexpMethodPointcut: void setPatterns(java.lang.String[])>($r5);

     label2:
        $r3 = r0.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.support.AbstractRegexpMethodPointcut pointcut>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected org.springframework.aop.support.AbstractRegexpMethodPointcut createPointcut()
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r1;
        org.springframework.aop.support.JdkRegexpMethodPointcut $r0;

        r1 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        $r0 = new org.springframework.aop.support.JdkRegexpMethodPointcut;

        specialinvoke $r0.<org.springframework.aop.support.JdkRegexpMethodPointcut: void <init>()>();

        return $r0;
    }

    public java.lang.String toString()
    {
        org.springframework.aop.support.RegexpMethodPointcutAdvisor r1;
        java.lang.String[] $r9;
        org.aopalliance.aop.Advice $r6;
        java.lang.StringBuilder $r0, $r5, $r7, $r8, $r11;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r10, $r12;

        r1 := @this: org.springframework.aop.support.RegexpMethodPointcutAdvisor;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": advice [");

        $r6 = virtualinvoke r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.aopalliance.aop.Advice getAdvice()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], pointcut patterns ");

        $r9 = r1.<org.springframework.aop.support.RegexpMethodPointcutAdvisor: java.lang.String[] patterns>;

        $r10 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object[])>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
