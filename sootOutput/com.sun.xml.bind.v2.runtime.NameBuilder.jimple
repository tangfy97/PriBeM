public final class com.sun.xml.bind.v2.runtime.NameBuilder extends java.lang.Object
{
    private java.util.Map uriIndexMap;
    private java.util.Set nonDefaultableNsUris;
    private java.util.Map localNameIndexMap;
    private com.sun.xml.bind.v2.util.QNameMap elementQNameIndexMap;
    private com.sun.xml.bind.v2.util.QNameMap attributeQNameIndexMap;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        java.util.HashSet $r2;
        com.sun.xml.bind.v2.util.QNameMap $r4, $r5;
        com.sun.xml.bind.v2.runtime.NameBuilder r0;
        java.util.HashMap $r1, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Set nonDefaultableNsUris> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map localNameIndexMap> = $r3;

        $r4 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r4.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap elementQNameIndexMap> = $r4;

        $r5 = new com.sun.xml.bind.v2.util.QNameMap;

        specialinvoke $r5.<com.sun.xml.bind.v2.util.QNameMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap attributeQNameIndexMap> = $r5;

        return;
    }

    public com.sun.xml.bind.v2.runtime.Name createElementName(javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.runtime.Name $r4;
        com.sun.xml.bind.v2.runtime.NameBuilder r0;
        javax.xml.namespace.QName r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createElementName(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public com.sun.xml.bind.v2.runtime.Name createElementName(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.util.QNameMap $r3;
        com.sun.xml.bind.v2.runtime.Name $r4;
        com.sun.xml.bind.v2.runtime.NameBuilder r0;
        java.lang.String r1, r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap elementQNameIndexMap>;

        $r4 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createName(java.lang.String,java.lang.String,boolean,com.sun.xml.bind.v2.util.QNameMap)>(r1, r2, 0, $r3);

        return $r4;
    }

    public com.sun.xml.bind.v2.runtime.Name createAttributeName(javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.runtime.Name $r4;
        com.sun.xml.bind.v2.runtime.NameBuilder r0;
        javax.xml.namespace.QName r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createAttributeName(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public com.sun.xml.bind.v2.runtime.Name createAttributeName(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.Name $r5, $r15;
        com.sun.xml.bind.v2.runtime.NameBuilder r1;
        java.lang.AssertionError $r13, $r14;
        com.sun.xml.bind.v2.util.QNameMap $r4, $r7;
        java.util.Map $r8;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, r3, $r9, $r11;
        boolean $z0, $z1;
        java.util.Set $r2;

        r1 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $z0 = <com.sun.xml.bind.v2.runtime.NameBuilder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String intern()>();

        if $r11 == r0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $z1 = <com.sun.xml.bind.v2.runtime.NameBuilder: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

        if $r9 == r3 goto label2;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r15 = new com.sun.xml.bind.v2.runtime.Name;

        $r7 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap attributeQNameIndexMap>;

        $i1 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: int allocIndex(com.sun.xml.bind.v2.util.QNameMap,java.lang.String,java.lang.String)>($r7, "", r3);

        $r8 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map localNameIndexMap>;

        $i2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: int allocIndex(java.util.Map,java.lang.String)>($r8, r3);

        $i4 = (int) -1;

        specialinvoke $r15.<com.sun.xml.bind.v2.runtime.Name: void <init>(int,int,java.lang.String,int,java.lang.String,boolean)>($i1, $i4, r0, $i2, r3, 1);

        return $r15;

     label3:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Set nonDefaultableNsUris>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r0);

        $r4 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap attributeQNameIndexMap>;

        $r5 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.runtime.Name createName(java.lang.String,java.lang.String,boolean,com.sun.xml.bind.v2.util.QNameMap)>(r0, r3, 1, $r4);

        return $r5;
    }

    private com.sun.xml.bind.v2.runtime.Name createName(java.lang.String, java.lang.String, boolean, com.sun.xml.bind.v2.util.QNameMap)
    {
        com.sun.xml.bind.v2.runtime.Name $r0;
        com.sun.xml.bind.v2.runtime.NameBuilder r1;
        java.lang.AssertionError $r8, $r10;
        com.sun.xml.bind.v2.util.QNameMap r2;
        java.util.Map $r5, $r6;
        int $i0, $i1, $i2;
        java.lang.String r3, r4, $r7, $r9;
        boolean $z0, $z1, z2;

        r1 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        r2 := @parameter3: com.sun.xml.bind.v2.util.QNameMap;

        $z0 = <com.sun.xml.bind.v2.runtime.NameBuilder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String intern()>();

        if $r9 == r3 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $z1 = <com.sun.xml.bind.v2.runtime.NameBuilder: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r4.<java.lang.String: java.lang.String intern()>();

        if $r7 == r4 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $r0 = new com.sun.xml.bind.v2.runtime.Name;

        $i0 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: int allocIndex(com.sun.xml.bind.v2.util.QNameMap,java.lang.String,java.lang.String)>(r2, r3, r4);

        $r5 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap>;

        $i1 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: int allocIndex(java.util.Map,java.lang.String)>($r5, r3);

        $r6 = r1.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map localNameIndexMap>;

        $i2 = specialinvoke r1.<com.sun.xml.bind.v2.runtime.NameBuilder: int allocIndex(java.util.Map,java.lang.String)>($r6, r4);

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.Name: void <init>(int,int,java.lang.String,int,java.lang.String,boolean)>($i0, $i1, r3, $i2, r4, z2);

        return $r0;
    }

    private int allocIndex(java.util.Map, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.NameBuilder r4;
        java.lang.Integer $r3, r5;
        java.util.Map r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String r1;

        r4 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.lang.Integer) $r2;

        if r5 != null goto label1;

        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r5 = $r3;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

     label1:
        $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    private int allocIndex(com.sun.xml.bind.v2.util.QNameMap, java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.NameBuilder r5;
        java.lang.Integer $r4, r6;
        com.sun.xml.bind.v2.util.QNameMap r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String r1, r2;

        r5 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r0 := @parameter0: com.sun.xml.bind.v2.util.QNameMap;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.util.QNameMap: java.lang.Object get(java.lang.String,java.lang.String)>(r1, r2);

        r6 = (java.lang.Integer) $r3;

        if r6 != null goto label1;

        $i1 = virtualinvoke r0.<com.sun.xml.bind.v2.util.QNameMap: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r6 = $r4;

        virtualinvoke r0.<com.sun.xml.bind.v2.util.QNameMap: void put(java.lang.String,java.lang.String,java.lang.Object)>(r1, r2, $r4);

     label1:
        $i0 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public com.sun.xml.bind.v2.runtime.NameList conclude()
    {
        com.sun.xml.bind.v2.runtime.NameBuilder r0;
        java.lang.String[] $r8, $r10;
        java.lang.Integer $r16;
        com.sun.xml.bind.v2.util.QNameMap $r11, $r12;
        com.sun.xml.bind.v2.runtime.NameList $r6;
        java.util.Map $r1, $r3, $r7, $r9;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.util.Map$Entry r14;
        java.util.Iterator $r5;
        boolean[] r2;
        java.util.Set $r4, $r17;
        java.lang.Object $r13, $r15, $r18;

        r0 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        r2 = newarray (boolean)[$i0];

        $r3 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.Integer) $r15;

        $i3 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Set nonDefaultableNsUris>;

        $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = interfaceinvoke $r17.<java.util.Set: boolean contains(java.lang.Object)>($r18);

        r2[$i3] = $z1;

        goto label1;

     label2:
        $r6 = new com.sun.xml.bind.v2.runtime.NameList;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap>;

        $r8 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.lang.String[] list(java.util.Map)>($r7);

        $r9 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map localNameIndexMap>;

        $r10 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.lang.String[] list(java.util.Map)>($r9);

        $r11 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap elementQNameIndexMap>;

        $i1 = virtualinvoke $r11.<com.sun.xml.bind.v2.util.QNameMap: int size()>();

        $r12 = r0.<com.sun.xml.bind.v2.runtime.NameBuilder: com.sun.xml.bind.v2.util.QNameMap attributeQNameIndexMap>;

        $i2 = virtualinvoke $r12.<com.sun.xml.bind.v2.util.QNameMap: int size()>();

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.NameList: void <init>(java.lang.String[],boolean[],java.lang.String[],int,int)>($r8, r2, $r10, $i1, $i2);

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map uriIndexMap> = null;

        r0.<com.sun.xml.bind.v2.runtime.NameBuilder: java.util.Map localNameIndexMap> = null;

        return $r6;
    }

    private java.lang.String[] list(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.sun.xml.bind.v2.runtime.NameBuilder r10;
        java.lang.String[] r1;
        java.lang.Integer $r7;
        java.util.Map r0;
        int $i0, $i1;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String $r9;
        boolean $z0;

        r10 := @this: com.sun.xml.bind.v2.runtime.NameBuilder;

        r0 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        r1[$i1] = $r9;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/runtime/NameBuilder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.runtime.NameBuilder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
