public abstract class org.apache.batik.dom.events.AbstractEvent extends java.lang.Object implements org.w3c.dom.events.Event, org.apache.batik.dom.xbl.OriginalEvent, java.lang.Cloneable
{
    protected java.lang.String type;
    protected boolean isBubbling;
    protected boolean cancelable;
    protected org.w3c.dom.events.EventTarget currentTarget;
    protected org.w3c.dom.events.EventTarget target;
    protected short eventPhase;
    protected long timeStamp;
    protected boolean stopPropagation;
    protected boolean stopImmediatePropagation;
    protected boolean preventDefault;
    protected java.lang.String namespaceURI;
    protected org.w3c.dom.events.Event originalEvent;
    protected java.util.List defaultActions;
    protected int bubbleLimit;

    public void <init>()
    {
        long $l0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.batik.dom.events.AbstractEvent: long timeStamp> = $l0;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopPropagation> = 0;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopImmediatePropagation> = 0;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean preventDefault> = 0;

        r0.<org.apache.batik.dom.events.AbstractEvent: int bubbleLimit> = 0;

        return;
    }

    public java.lang.String getType()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String type>;

        return $r1;
    }

    public org.w3c.dom.events.EventTarget getCurrentTarget()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        org.w3c.dom.events.EventTarget $r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.EventTarget currentTarget>;

        return $r1;
    }

    public org.w3c.dom.events.EventTarget getTarget()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        org.w3c.dom.events.EventTarget $r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.EventTarget target>;

        return $r1;
    }

    public short getEventPhase()
    {
        short $s0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $s0 = r0.<org.apache.batik.dom.events.AbstractEvent: short eventPhase>;

        return $s0;
    }

    public boolean getBubbles()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $z0 = r0.<org.apache.batik.dom.events.AbstractEvent: boolean isBubbling>;

        return $z0;
    }

    public boolean getCancelable()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $z0 = r0.<org.apache.batik.dom.events.AbstractEvent: boolean cancelable>;

        return $z0;
    }

    public long getTimeStamp()
    {
        long $l0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $l0 = r0.<org.apache.batik.dom.events.AbstractEvent: long timeStamp>;

        return $l0;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String namespaceURI>;

        return $r1;
    }

    public org.w3c.dom.events.Event getOriginalEvent()
    {
        org.w3c.dom.events.Event $r1;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.Event originalEvent>;

        return $r1;
    }

    public void stopPropagation()
    {
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopPropagation> = 1;

        return;
    }

    public void preventDefault()
    {
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean preventDefault> = 1;

        return;
    }

    public boolean getDefaultPrevented()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $z0 = r0.<org.apache.batik.dom.events.AbstractEvent: boolean preventDefault>;

        return $z0;
    }

    public java.util.List getDefaultActions()
    {
        java.util.List $r1;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: java.util.List defaultActions>;

        return $r1;
    }

    public void addDefaultAction(java.lang.Runnable)
    {
        java.util.List $r1, $r3;
        org.apache.batik.dom.events.AbstractEvent r0;
        java.lang.Runnable r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r2 := @parameter0: java.lang.Runnable;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: java.util.List defaultActions>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.dom.events.AbstractEvent: java.util.List defaultActions> = $r4;

     label1:
        $r3 = r0.<org.apache.batik.dom.events.AbstractEvent: java.util.List defaultActions>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void stopImmediatePropagation()
    {
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopImmediatePropagation> = 1;

        return;
    }

    public void initEvent(java.lang.String, boolean, boolean)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        java.lang.String r1;
        boolean z0, z1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String type> = r1;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean isBubbling> = z0;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean cancelable> = z1;

        return;
    }

    public void initEventNS(java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        int $i0;
        java.lang.String $r1, r2, r3, $r4;
        boolean z0, z1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String namespaceURI>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String namespaceURI>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String namespaceURI> = null;

     label1:
        r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String namespaceURI> = r2;

        r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.String type> = r3;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean isBubbling> = z0;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean cancelable> = z1;

        return;
    }

    boolean getStopPropagation()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $z0 = r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopPropagation>;

        return $z0;
    }

    boolean getStopImmediatePropagation()
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $z0 = r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopImmediatePropagation>;

        return $z0;
    }

    void setEventPhase(short)
    {
        short s0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        s0 := @parameter0: short;

        r0.<org.apache.batik.dom.events.AbstractEvent: short eventPhase> = s0;

        return;
    }

    void stopPropagation(boolean)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopPropagation> = z0;

        return;
    }

    void stopImmediatePropagation(boolean)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean stopImmediatePropagation> = z0;

        return;
    }

    void preventDefault(boolean)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.events.AbstractEvent: boolean preventDefault> = z0;

        return;
    }

    void setCurrentTarget(org.w3c.dom.events.EventTarget)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        org.w3c.dom.events.EventTarget r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r1 := @parameter0: org.w3c.dom.events.EventTarget;

        r0.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.EventTarget currentTarget> = r1;

        return;
    }

    void setTarget(org.w3c.dom.events.EventTarget)
    {
        org.apache.batik.dom.events.AbstractEvent r0;
        org.w3c.dom.events.EventTarget r1;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        r1 := @parameter0: org.w3c.dom.events.EventTarget;

        r0.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.EventTarget target> = r1;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        long $l0;
        org.apache.batik.dom.events.AbstractEvent r0, r2;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.batik.dom.events.AbstractEvent) $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r2.<org.apache.batik.dom.events.AbstractEvent: long timeStamp> = $l0;

        return r2;
    }

    public org.apache.batik.dom.events.AbstractEvent cloneEvent()
    {
        java.lang.Object $r1;
        org.apache.batik.dom.events.AbstractEvent r0, r3;
        java.lang.CloneNotSupportedException $r2;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.dom.events.AbstractEvent: java.lang.Object clone()>();

        r3 = (org.apache.batik.dom.events.AbstractEvent) $r1;

        r3.<org.apache.batik.dom.events.AbstractEvent: org.w3c.dom.events.Event originalEvent> = r0;

        return r3;

     label2:
        $r2 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label2;
    }

    public int getBubbleLimit()
    {
        int $i0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        $i0 = r0.<org.apache.batik.dom.events.AbstractEvent: int bubbleLimit>;

        return $i0;
    }

    public void setBubbleLimit(int)
    {
        int i0;
        org.apache.batik.dom.events.AbstractEvent r0;

        r0 := @this: org.apache.batik.dom.events.AbstractEvent;

        i0 := @parameter0: int;

        r0.<org.apache.batik.dom.events.AbstractEvent: int bubbleLimit> = i0;

        return;
    }
}
