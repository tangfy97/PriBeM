public class com.google.wave.api.oauth.impl.OAuthServiceImpl extends java.lang.Object implements com.google.wave.api.oauth.OAuthService
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String TOKEN_KEY;
    private static final java.lang.String CALLBACK_KEY;
    private static final java.lang.String FORCE_LOGIN_KEY;
    private static final java.lang.String GET;
    private static final java.lang.String POST;
    private final java.lang.String userRecordKey;
    private final net.oauth.client.OAuthClient oauthClient;
    private final net.oauth.OAuthAccessor accessor;
    private final javax.jdo.PersistenceManagerFactory pmf;

    public static com.google.wave.api.oauth.OAuthService newInstance(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        javax.jdo.PersistenceManagerFactory $r11;
        net.oauth.OAuthServiceProvider $r0;
        com.google.wave.api.oauth.impl.OpenSocialHttpClient $r10;
        net.oauth.client.OAuthClient $r9;
        net.oauth.OAuthAccessor $r8;
        net.oauth.OAuthConsumer $r4;
        java.lang.String r1, r2, r3, r5, r6, r7, r13;
        com.google.wave.api.oauth.impl.OAuthServiceImpl $r12;

        r13 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        $r0 = new net.oauth.OAuthServiceProvider;

        specialinvoke $r0.<net.oauth.OAuthServiceProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r4 = new net.oauth.OAuthConsumer;

        specialinvoke $r4.<net.oauth.OAuthConsumer: void <init>(java.lang.String,java.lang.String,java.lang.String,net.oauth.OAuthServiceProvider)>(r5, r6, r7, $r0);

        $r8 = new net.oauth.OAuthAccessor;

        specialinvoke $r8.<net.oauth.OAuthAccessor: void <init>(net.oauth.OAuthConsumer)>($r4);

        $r9 = new net.oauth.client.OAuthClient;

        $r10 = new com.google.wave.api.oauth.impl.OpenSocialHttpClient;

        specialinvoke $r10.<com.google.wave.api.oauth.impl.OpenSocialHttpClient: void <init>()>();

        specialinvoke $r9.<net.oauth.client.OAuthClient: void <init>(net.oauth.http.HttpClient)>($r10);

        $r11 = staticinvoke <com.google.wave.api.oauth.impl.SingletonPersistenceManagerFactory: javax.jdo.PersistenceManagerFactory get()>();

        $r12 = new com.google.wave.api.oauth.impl.OAuthServiceImpl;

        specialinvoke $r12.<com.google.wave.api.oauth.impl.OAuthServiceImpl: void <init>(net.oauth.OAuthAccessor,net.oauth.client.OAuthClient,javax.jdo.PersistenceManagerFactory,java.lang.String)>($r8, $r9, $r11, r13);

        return $r12;
    }

    void <init>(net.oauth.OAuthAccessor, net.oauth.client.OAuthClient, javax.jdo.PersistenceManagerFactory, java.lang.String)
    {
        javax.jdo.PersistenceManagerFactory r2;
        net.oauth.OAuthAccessor r3;
        net.oauth.client.OAuthClient r4;
        java.lang.String r1;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r3 := @parameter0: net.oauth.OAuthAccessor;

        r4 := @parameter1: net.oauth.client.OAuthClient;

        r2 := @parameter2: javax.jdo.PersistenceManagerFactory;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String userRecordKey> = r1;

        r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: javax.jdo.PersistenceManagerFactory pmf> = r2;

        r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor> = r3;

        r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.client.OAuthClient oauthClient> = r4;

        return;
    }

    public boolean checkAuthorization(com.google.wave.api.Wavelet, com.google.wave.api.oauth.LoginFormHandler)
    {
        java.util.logging.Logger $r8;
        com.google.wave.api.oauth.LoginFormHandler r2;
        com.google.wave.api.Wavelet r3;
        com.google.wave.api.oauth.impl.OAuthUser $r1;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r4, $r5, $r6, $r7, $r12, $r13;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r3 := @parameter0: com.google.wave.api.Wavelet;

        r2 := @parameter1: com.google.wave.api.oauth.LoginFormHandler;

        $r1 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: com.google.wave.api.oauth.impl.OAuthUser retrieveUserProfile()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getAccessToken()>();

        if $r6 == null goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r4 = virtualinvoke $r1.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getRequestToken()>();

        if $r4 == null goto label2;

        $r5 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String exchangeTokens(com.google.wave.api.oauth.impl.OAuthUser)>($r1);

        if $r5 == null goto label2;

        return 1;

     label2:
        $r7 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String getAndStoreRequestToken()>();

        $r8 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request token: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void info(java.lang.String)>($r12);

        specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: void buildAuthUrl()>();

        $r13 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String userRecordKey>;

        interfaceinvoke r2.<com.google.wave.api.oauth.LoginFormHandler: void renderLogin(java.lang.String,com.google.wave.api.Wavelet)>($r13, r3);

        return 0;
    }

    public boolean hasAuthorization()
    {
        com.google.wave.api.oauth.impl.OAuthUser $r1;
        java.lang.String $r2;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;
        boolean $z0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        $r1 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: com.google.wave.api.oauth.impl.OAuthUser retrieveUserProfile()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getAccessToken()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.String getAndStoreRequestToken()
    {
        java.net.URISyntaxException $r3;
        net.oauth.client.OAuthClient $r2;
        java.lang.String $r8, $r14, $r20, $r22, $r24, $r26;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;
        net.oauth.OAuthException $r9;
        java.io.IOException $r15;
        java.util.logging.Logger $r5, $r11, $r17;
        net.oauth.OAuthAccessor $r1, $r21, $r25;
        com.google.wave.api.oauth.impl.OAuthUser $r23;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r12, $r13, $r16, $r18, $r19;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

     label1:
        $r2 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.client.OAuthClient oauthClient>;

        $r1 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        virtualinvoke $r2.<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor)>($r1);

     label2:
        goto label6;

     label3:
        $r15 := @caughtexception;

        $r17 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not reach service provider to get request token: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void severe(java.lang.String)>($r20);

        goto label6;

     label4:
        $r9 := @caughtexception;

        $r11 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to fetch request token. Authentication error: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void severe(java.lang.String)>($r14);

        goto label6;

     label5:
        $r3 := @caughtexception;

        $r5 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to fetch request token. Invalid url: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void severe(java.lang.String)>($r8);

     label6:
        $r21 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r22 = $r21.<net.oauth.OAuthAccessor: java.lang.String requestToken>;

        $r23 = new com.google.wave.api.oauth.impl.OAuthUser;

        $r24 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String userRecordKey>;

        specialinvoke $r23.<com.google.wave.api.oauth.impl.OAuthUser: void <init>(java.lang.String,java.lang.String)>($r24, $r22);

        specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: void storeUserProfile(com.google.wave.api.oauth.impl.OAuthUser)>($r23);

        $r25 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r26 = $r25.<net.oauth.OAuthAccessor: java.lang.String requestToken>;

        return $r26;

        catch java.io.IOException from label1 to label2 with label3;
        catch net.oauth.OAuthException from label1 to label2 with label4;
        catch java.net.URISyntaxException from label1 to label2 with label5;
    }

    private void buildAuthUrl()
    {
        net.oauth.OAuthServiceProvider $r5;
        net.oauth.OAuthAccessor $r3, $r8;
        com.google.wave.api.oauth.impl.OAuthUser $r1;
        net.oauth.OAuthConsumer $r4, $r9;
        java.lang.String $r6, $r7, $r10, $r11;
        com.google.wave.api.oauth.impl.OpenSocialUrl $r2;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        $r1 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: com.google.wave.api.oauth.impl.OAuthUser retrieveUserProfile()>();

        $r2 = new com.google.wave.api.oauth.impl.OpenSocialUrl;

        $r3 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r4 = $r3.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r5 = $r4.<net.oauth.OAuthConsumer: net.oauth.OAuthServiceProvider serviceProvider>;

        $r6 = $r5.<net.oauth.OAuthServiceProvider: java.lang.String userAuthorizationURL>;

        specialinvoke $r2.<com.google.wave.api.oauth.impl.OpenSocialUrl: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getRequestToken()>();

        virtualinvoke $r2.<com.google.wave.api.oauth.impl.OpenSocialUrl: void addQueryStringParameter(java.lang.String,java.lang.String)>("oauth_token", $r7);

        $r8 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r9 = $r8.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r10 = $r9.<net.oauth.OAuthConsumer: java.lang.String callbackURL>;

        virtualinvoke $r2.<com.google.wave.api.oauth.impl.OpenSocialUrl: void addQueryStringParameter(java.lang.String,java.lang.String)>("oauth_callback", $r10);

        virtualinvoke $r2.<com.google.wave.api.oauth.impl.OpenSocialUrl: void addQueryStringParameter(java.lang.String,java.lang.String)>("force_login", "true");

        $r11 = virtualinvoke $r2.<com.google.wave.api.oauth.impl.OpenSocialUrl: java.lang.String toString()>();

        virtualinvoke $r1.<com.google.wave.api.oauth.impl.OAuthUser: void setAuthUrl(java.lang.String)>($r11);

        specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: void storeUserProfile(com.google.wave.api.oauth.impl.OAuthUser)>($r1);

        return;
    }

    private java.lang.String exchangeTokens(com.google.wave.api.oauth.impl.OAuthUser)
    {
        java.net.URISyntaxException $r15;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;
        net.oauth.OAuthServiceProvider $r10;
        java.util.logging.Logger $r19, $r26;
        com.google.wave.api.oauth.impl.OAuthUser r1;
        net.oauth.OAuthConsumer $r5, $r9;
        java.lang.StringBuilder $r18, $r20, $r22, $r25, $r27, $r29;
        net.oauth.client.OAuthClient $r13;
        java.lang.String $r3, $r6, $r11, $r21, $r23, $r28, $r30, r31, r32;
        net.oauth.OAuthException $r17;
        java.io.IOException $r24;
        java.lang.RuntimeException $r16;
        net.oauth.OAuthAccessor $r2, $r4, $r7, $r8, $r12;
        net.oauth.OAuthMessage $r14;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r1 := @parameter0: com.google.wave.api.oauth.impl.OAuthUser;

        $r2 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r3 = virtualinvoke r1.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getRequestToken()>();

        $r2.<net.oauth.OAuthAccessor: java.lang.String accessToken> = $r3;

        $r7 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r4 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r5 = $r4.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r6 = $r5.<net.oauth.OAuthConsumer: java.lang.String consumerSecret>;

        $r7.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = $r6;

        r31 = null;

        r32 = null;

     label1:
        $r13 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.client.OAuthClient oauthClient>;

        $r12 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r8 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r9 = $r8.<net.oauth.OAuthAccessor: net.oauth.OAuthConsumer consumer>;

        $r10 = $r9.<net.oauth.OAuthConsumer: net.oauth.OAuthServiceProvider serviceProvider>;

        $r11 = $r10.<net.oauth.OAuthServiceProvider: java.lang.String accessTokenURL>;

        $r14 = virtualinvoke $r13.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor,java.lang.String,java.lang.String,java.util.Collection)>($r12, "GET", $r11, null);

        r31 = virtualinvoke $r14.<net.oauth.OAuthMessage: java.lang.String getToken()>();

        r32 = virtualinvoke $r14.<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)>("oauth_token_secret");

     label2:
        goto label6;

     label3:
        $r24 := @caughtexception;

        $r26 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve access token: ");

        $r28 = virtualinvoke $r24.<java.io.IOException: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void warning(java.lang.String)>($r30);

        goto label6;

     label4:
        $r17 := @caughtexception;

        $r19 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve access token: ");

        $r21 = virtualinvoke $r17.<net.oauth.OAuthException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.util.logging.Logger: void warning(java.lang.String)>($r23);

        goto label6;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label6:
        if r31 == null goto label7;

        virtualinvoke r1.<com.google.wave.api.oauth.impl.OAuthUser: void setAccessToken(java.lang.String)>(r31);

        virtualinvoke r1.<com.google.wave.api.oauth.impl.OAuthUser: void setTokenSecret(java.lang.String)>(r32);

        specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: void storeUserProfile(com.google.wave.api.oauth.impl.OAuthUser)>(r1);

     label7:
        return r31;

        catch java.io.IOException from label1 to label2 with label3;
        catch net.oauth.OAuthException from label1 to label2 with label4;
        catch java.net.URISyntaxException from label1 to label2 with label5;
    }

    public java.lang.String post(java.lang.String, java.util.Map) throws com.google.wave.api.oauth.impl.OAuthServiceException
    {
        java.util.Map r2;
        java.lang.String r1, $r3;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String requestResources(java.lang.String,java.lang.String,java.util.Map)>(r1, "POST", r2);

        return $r3;
    }

    public java.lang.String get(java.lang.String, java.util.Map) throws com.google.wave.api.oauth.impl.OAuthServiceException
    {
        java.util.Map r2;
        java.lang.String r1, $r3;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = specialinvoke r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String requestResources(java.lang.String,java.lang.String,java.util.Map)>(r1, "GET", r2);

        return $r3;
    }

    private java.lang.String requestResources(java.lang.String, java.lang.String, java.util.Map) throws com.google.wave.api.oauth.impl.OAuthServiceException
    {
        java.net.URISyntaxException $r24;
        java.util.Map r1;
        net.oauth.OAuth$Parameter $r17;
        boolean $z0;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r4;
        java.util.Set $r2;
        java.util.logging.Logger $r26, $r33;
        com.google.wave.api.oauth.impl.OAuthUser $r5;
        java.lang.StringBuilder $r25, $r27, $r28, $r32, $r34, $r35;
        net.oauth.client.OAuthClient $r13;
        java.util.ArrayList $r0;
        java.lang.String $r7, $r9, r10, r11, $r15, $r19, $r21, $r29, $r36;
        net.oauth.OAuthException $r22;
        java.util.Map$Entry r38;
        java.util.Iterator $r3;
        java.io.IOException $r31;
        net.oauth.OAuthAccessor $r6, $r8, $r12;
        net.oauth.OAuthMessage $r14;
        java.lang.Object $r16, $r18, $r20;
        com.google.wave.api.oauth.impl.OAuthServiceException $r23, $r30, $r37;

        r4 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r11 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Map;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r16;

        $r17 = new net.oauth.OAuth$Parameter;

        $r18 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r18;

        $r20 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (java.lang.String) $r20;

        specialinvoke $r17.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>($r19, $r21);

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        goto label1;

     label2:
        $r5 = specialinvoke r4.<com.google.wave.api.oauth.impl.OAuthServiceImpl: com.google.wave.api.oauth.impl.OAuthUser retrieveUserProfile()>();

        $r6 = r4.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r7 = virtualinvoke $r5.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getAccessToken()>();

        $r6.<net.oauth.OAuthAccessor: java.lang.String accessToken> = $r7;

        $r8 = r4.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r9 = virtualinvoke $r5.<com.google.wave.api.oauth.impl.OAuthUser: java.lang.String getTokenSecret()>();

        $r8.<net.oauth.OAuthAccessor: java.lang.String tokenSecret> = $r9;

     label3:
        $r13 = r4.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.client.OAuthClient oauthClient>;

        $r12 = r4.<com.google.wave.api.oauth.impl.OAuthServiceImpl: net.oauth.OAuthAccessor accessor>;

        $r14 = virtualinvoke $r13.<net.oauth.client.OAuthClient: net.oauth.OAuthMessage invoke(net.oauth.OAuthAccessor,java.lang.String,java.lang.String,java.util.Collection)>($r12, r10, r11, $r0);

        $r15 = virtualinvoke $r14.<net.oauth.OAuthMessage: java.lang.String readBodyAsString()>();

     label4:
        goto label8;

     label5:
        $r31 := @caughtexception;

        $r33 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response message has no body: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.util.logging.Logger: void severe(java.lang.String)>($r36);

        $r37 = new com.google.wave.api.oauth.impl.OAuthServiceException;

        specialinvoke $r37.<com.google.wave.api.oauth.impl.OAuthServiceException: void <init>(java.lang.Throwable)>($r31);

        throw $r37;

     label6:
        $r24 := @caughtexception;

        $r26 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to fetch resources. Invalid url: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void severe(java.lang.String)>($r29);

        $r30 = new com.google.wave.api.oauth.impl.OAuthServiceException;

        specialinvoke $r30.<com.google.wave.api.oauth.impl.OAuthServiceException: void <init>(java.lang.Throwable)>($r24);

        throw $r30;

     label7:
        $r22 := @caughtexception;

        $r23 = new com.google.wave.api.oauth.impl.OAuthServiceException;

        specialinvoke $r23.<com.google.wave.api.oauth.impl.OAuthServiceException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label8:
        return $r15;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.net.URISyntaxException from label3 to label4 with label6;
        catch net.oauth.OAuthException from label3 to label4 with label7;
    }

    private void storeUserProfile(com.google.wave.api.oauth.impl.OAuthUser)
    {
        javax.jdo.PersistenceManagerFactory $r1;
        java.lang.Throwable $r4;
        com.google.wave.api.oauth.impl.OAuthUser r3;
        javax.jdo.PersistenceManager $r2;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        r3 := @parameter0: com.google.wave.api.oauth.impl.OAuthUser;

        $r1 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: javax.jdo.PersistenceManagerFactory pmf>;

        $r2 = interfaceinvoke $r1.<javax.jdo.PersistenceManagerFactory: javax.jdo.PersistenceManager getPersistenceManager()>();

     label1:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: java.lang.Object makePersistent(java.lang.Object)>(r3);

     label2:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: void close()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: void close()>();

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private com.google.wave.api.oauth.impl.OAuthUser retrieveUserProfile()
    {
        javax.jdo.PersistenceManagerFactory $r1;
        java.lang.Throwable $r5, $r6;
        javax.jdo.PersistenceManager $r2;
        java.util.logging.Logger $r8;
        com.google.wave.api.oauth.impl.OAuthUser r13;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.lang.String $r3, $r10, $r12;
        com.google.wave.api.oauth.impl.OAuthServiceImpl r0;

        r0 := @this: com.google.wave.api.oauth.impl.OAuthServiceImpl;

        $r1 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: javax.jdo.PersistenceManagerFactory pmf>;

        $r2 = interfaceinvoke $r1.<javax.jdo.PersistenceManagerFactory: javax.jdo.PersistenceManager getPersistenceManager()>();

        r13 = null;

     label1:
        $r3 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String userRecordKey>;

        $r4 = interfaceinvoke $r2.<javax.jdo.PersistenceManager: java.lang.Object getObjectById(java.lang.Class,java.lang.Object)>(class "Lcom/google/wave/api/oauth/impl/OAuthUser;", $r3);

        r13 = (com.google.wave.api.oauth.impl.OAuthUser) $r4;

     label2:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: void close()>();

        goto label7;

     label3:
        $r6 := @caughtexception;

        $r8 = <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datastore object not yet initialized with key: ");

        $r10 = r0.<com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String userRecordKey>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void info(java.lang.String)>($r12);

     label4:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: void close()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

     label6:
        interfaceinvoke $r2.<javax.jdo.PersistenceManager: void close()>();

        throw $r5;

     label7:
        return r13;

        catch javax.jdo.JDOObjectNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String POST> = "POST";

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String GET> = "GET";

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String FORCE_LOGIN_KEY> = "force_login";

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String CALLBACK_KEY> = "oauth_callback";

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.lang.String TOKEN_KEY> = "oauth_token";

        $r0 = class "Lcom/google/wave/api/oauth/impl/OAuthServiceImpl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.wave.api.oauth.impl.OAuthServiceImpl: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
