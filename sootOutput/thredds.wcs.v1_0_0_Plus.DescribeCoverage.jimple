public class thredds.wcs.v1_0_0_Plus.DescribeCoverage extends thredds.wcs.v1_0_0_Plus.WcsRequest
{
    private java.util.List coverages;
    private org.jdom.Document describeCoverageDoc;

    public void <init>(thredds.wcs.v1_0_0_Plus.WcsRequest$Operation, java.lang.String, thredds.wcs.v1_0_0_Plus.WcsDataset, java.util.List)
    {
        thredds.wcs.v1_0_0_Plus.WcsRequest$Operation r1;
        boolean $z0, $z1;
        java.util.List r4, $r5, $r6, $r24;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20, $r22, $r23, $r25, $r26;
        int $i0, $i1, $i2, $i3;
        java.lang.String r2, $r13, r15, $r27, r29, $r30;
        java.util.Iterator $r7;
        java.lang.IllegalArgumentException $r8, $r21, $r28;
        java.lang.Object $r14;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r0;
        thredds.wcs.v1_0_0_Plus.WcsDataset r3, $r16;

        r0 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r1 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsRequest$Operation;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: thredds.wcs.v1_0_0_Plus.WcsDataset;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<thredds.wcs.v1_0_0_Plus.WcsRequest: void <init>(thredds.wcs.v1_0_0_Plus.WcsRequest$Operation,java.lang.String,thredds.wcs.v1_0_0_Plus.WcsDataset)>(r1, r2, r3);

        r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.util.List coverages> = r4;

        $r5 = r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.util.List coverages>;

        if $r5 != null goto label1;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Non-null coverage list required.");

        throw $r28;

     label1:
        $r6 = r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.util.List coverages>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 >= 1 goto label2;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Coverage list must contain at least one ID <");

        $r24 = r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.util.List coverages>;

        $i3 = interfaceinvoke $r24.<java.util.List: int size()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label2:
        r29 = "";

        $r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r14 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset getDataset()>();

        $z1 = virtualinvoke $r16.<thredds.wcs.v1_0_0_Plus.WcsDataset: boolean isAvailableCoverageName(java.lang.String)>(r15);

        if $z1 != 0 goto label6;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $i2 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        $r30 = ", ";

        goto label5;

     label4:
        $r30 = "";

     label5:
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        r29 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        goto label3;

     label7:
        $i1 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i1 <= 0 goto label8;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Coverage ID list contains one or more unknown IDs <");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label8:
        return;
    }

    public org.jdom.Document getDescribeCoverageDoc()
    {
        org.jdom.Document $r1, $r2, $r3;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Document describeCoverageDoc>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Document generateDescribeCoverageDoc()>();

        r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Document describeCoverageDoc> = $r3;

     label1:
        $r2 = r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Document describeCoverageDoc>;

        return $r2;
    }

    public void writeDescribeCoverageDoc(java.io.PrintWriter) throws java.io.IOException
    {
        java.io.PrintWriter r4;
        org.jdom.Document $r3;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r2;

        r2 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r4 := @parameter0: java.io.PrintWriter;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        $r3 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Document getDescribeCoverageDoc()>();

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.Writer)>($r3, r4);

        return;
    }

    public org.jdom.Document generateDescribeCoverageDoc()
    {
        java.util.Iterator $r7;
        java.util.List $r6;
        org.jdom.Document $r8;
        org.jdom.Namespace $r1, $r2, $r3;
        java.lang.Object $r9;
        java.lang.String $r5, r10;
        org.jdom.Element $r0, $r11;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r4;
        boolean $z0;

        r4 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("CoverageDescription", $r1);

        $r2 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r2);

        $r3 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace xlinkNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r3);

        $r5 = virtualinvoke r4.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String getVersion()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("version", $r5);

        $r6 = r4.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.util.List coverages>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r4.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genCoverageOfferingElem(java.lang.String)>(r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        goto label1;

     label2:
        $r8 = new org.jdom.Document;

        specialinvoke $r8.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        return $r8;
    }

    public org.jdom.Element genCoverageOfferingElem(java.lang.String)
    {
        thredds.wcs.v1_0_0_Plus.WcsCoverage $r3;
        ucar.nc2.dt.GridCoordSystem $r4;
        java.lang.String r2, $r5, $r6;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r0;
        thredds.wcs.v1_0_0_Plus.WcsDataset $r1;
        org.jdom.Element $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset getDataset()>();

        $r3 = virtualinvoke $r1.<thredds.wcs.v1_0_0_Plus.WcsDataset: thredds.wcs.v1_0_0_Plus.WcsCoverage getAvailableCoverage(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r5 = virtualinvoke $r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getLabel()>();

        $r6 = virtualinvoke $r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getDescription()>();

        $r7 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genCoverageOfferingBriefElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.dt.GridCoordSystem)>("CoverageOffering", r2, $r5, $r6, $r4);

        $r8 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genDomainSetElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>($r3);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        $r9 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genRangeSetElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>($r3);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

        $r10 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genSupportedCRSsElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>($r3);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        $r11 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genSupportedFormatsElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>($r3);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        $r12 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genSupportedInterpolationsElem()>();

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        return $r7;
    }

    private org.jdom.Element genDomainSetElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime $r7;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r3;
        ucar.nc2.dt.GridCoordSystem $r5, $r6;
        org.jdom.Namespace $r1;
        org.jdom.Element $r0, $r4, $r8;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r2;
        boolean $z0;

        r2 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r3 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("domainSet", $r1);

        $r4 = specialinvoke r2.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genSpatialDomainElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>(r3);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        $r5 = virtualinvoke r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $z0 = interfaceinvoke $r5.<ucar.nc2.dt.GridCoordSystem: boolean hasTimeAxis()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r7 = interfaceinvoke $r6.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxis1D()>();

        $r8 = specialinvoke r2.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genTemporalDomainElem(ucar.nc2.dataset.CoordinateAxis1DTime)>($r7);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

     label1:
        return $r0;
    }

    private org.jdom.Element genSpatialDomainElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        ucar.nc2.dt.GridCoordSystem $r4;
        org.jdom.Namespace $r1;
        org.jdom.Element $r0, $r5, $r6;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r2;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r3;

        r2 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r3 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("spatialDomain", $r1);

        $r4 = virtualinvoke r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r5 = specialinvoke r2.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genEnvelopeElem(ucar.nc2.dt.GridCoordSystem)>($r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r5);

        $r6 = specialinvoke r2.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Element genRectifiedGridElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)>(r3);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        return $r0;
    }

    private org.jdom.Element genRectifiedGridElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        thredds.wcs.v1_0_0_Plus.WcsCoverage r2;
        ucar.nc2.dataset.CoordinateAxis $r4, $r7;
        byte b0, $b11, $b12, $b13, $b14;
        org.jdom.Namespace $r1, $r14, $r16, $r18, $r24, $r29, $r32, $r35, $r37, $r42, $r46, $r51, $r57;
        ucar.nc2.dt.GridCoordSystem $r3, $r6, $r9;
        double[] r49, $r54, $r55, $r59;
        long $l1, $l2, $l4, $l5, $l7, $l8;
        java.lang.String $r11, $r12, $r20, $r25, $r38, $r43, $r47, $r52;
        org.jdom.Element $r0, $r13, $r15, $r17, $r21, $r22, $r23, $r26, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r39, $r40, $r41, $r44, $r45, $r48, $r50, $r53, $r56, $r58;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r19;
        ucar.nc2.dataset.CoordinateAxis1D r5, r8, $r10;
        int[] $r60, $r61;
        int $i3, $i6, $i9;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r19 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r2 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("RectifiedGrid", $r1);

        $r3 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        r5 = (ucar.nc2.dataset.CoordinateAxis1D) $r4;

        $r6 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r7 = interfaceinvoke $r6.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        r8 = (ucar.nc2.dataset.CoordinateAxis1D) $r7;

        $r9 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r10 = interfaceinvoke $r9.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        $r11 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getNativeCrs()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("srsName", $r11);

        if $r10 == null goto label1;

        $b14 = 3;

        $b13 = 3;

        $b12 = 3;

        $b11 = 3;

        goto label2;

     label1:
        $b14 = 2;

        $b13 = 2;

        $b12 = 2;

        $b11 = 2;

     label2:
        b0 = $b12;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b14);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dimension", $r12);

        $r60 = newarray (int)[$b11];

        $r61 = newarray (int)[$b13];

        $l1 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $l2 = $l1 - 1L;

        $i3 = (int) $l2;

        $r61[0] = $i3;

        $l4 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $l5 = $l4 - 1L;

        $i6 = (int) $l5;

        $r61[1] = $i6;

        if $r10 == null goto label3;

        $l7 = virtualinvoke $r10.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $l8 = $l7 - 1L;

        $i9 = (int) $l8;

        $r61[2] = $i9;

     label3:
        $r13 = new org.jdom.Element;

        $r14 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r13.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("limits", $r14);

        $r15 = new org.jdom.Element;

        $r16 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r15.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("GridEnvelope", $r16);

        $r17 = new org.jdom.Element;

        $r18 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r17.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("low", $r18);

        $r20 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genIntegerListString(int[])>($r60);

        $r21 = virtualinvoke $r17.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r20);

        $r22 = virtualinvoke $r15.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

        $r23 = new org.jdom.Element;

        $r24 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r23.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("high", $r24);

        $r25 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genIntegerListString(int[])>($r61);

        $r26 = virtualinvoke $r23.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r25);

        $r27 = virtualinvoke $r22.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r26);

        virtualinvoke $r13.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r27);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r13);

        $r28 = new org.jdom.Element;

        $r29 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r28.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("axisName", $r29);

        $r30 = virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("x");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r30);

        $r31 = new org.jdom.Element;

        $r32 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r31.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("axisName", $r32);

        $r33 = virtualinvoke $r31.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("y");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r33);

        if $r10 == null goto label4;

        $r56 = new org.jdom.Element;

        $r57 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r56.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("axisName", $r57);

        $r58 = virtualinvoke $r56.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("z");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r58);

     label4:
        $r59 = newarray (double)[b0];

        $d0 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getStart()>();

        $r59[0] = $d0;

        $d1 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: double getStart()>();

        $r59[1] = $d1;

        if $r10 == null goto label5;

        $d5 = virtualinvoke $r10.<ucar.nc2.dataset.CoordinateAxis1D: double getStart()>();

        $r59[2] = $d5;

     label5:
        $r34 = new org.jdom.Element;

        $r35 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r34.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("origin", $r35);

        $r36 = new org.jdom.Element;

        $r37 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r36.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("pos", $r37);

        $r38 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genDoubleListString(double[])>($r59);

        $r39 = virtualinvoke $r36.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r38);

        $r40 = virtualinvoke $r34.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r39);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r40);

        $r54 = newarray (double)[b0];

        $d2 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $r54[0] = $d2;

        $r41 = new org.jdom.Element;

        $r42 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r41.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("offsetVector", $r42);

        $r43 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genDoubleListString(double[])>($r54);

        $r44 = virtualinvoke $r41.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r43);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r44);

        $r55 = newarray (double)[b0];

        $d3 = virtualinvoke r8.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        $r55[1] = $d3;

        $r45 = new org.jdom.Element;

        $r46 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r45.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("offsetVector", $r46);

        $r47 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genDoubleListString(double[])>($r55);

        $r48 = virtualinvoke $r45.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r47);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r48);

        if $r10 == null goto label6;

        r49 = newarray (double)[b0];

        $d4 = virtualinvoke $r10.<ucar.nc2.dataset.CoordinateAxis1D: double getIncrement()>();

        r49[2] = $d4;

        $r50 = new org.jdom.Element;

        $r51 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r50.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("offsetVector", $r51);

        $r52 = specialinvoke r19.<thredds.wcs.v1_0_0_Plus.DescribeCoverage: java.lang.String genDoubleListString(double[])>(r49);

        $r53 = virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r52);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r53);

     label6:
        return $r0;
    }

    private java.lang.String genIntegerListString(int[])
    {
        int[] r1;
        int i0, i1, $i2, i3;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r3;

        r3 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        i1 = r1[i3];

        $i2 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private java.lang.String genDoubleListString(double[])
    {
        double[] r1;
        java.lang.StringBuffer $r0;
        int i0, $i1, i2;
        java.lang.String $r2;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r3;
        double d0;

        r3 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r1 := @parameter0: double[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        d0 = r1[i2];

        $i1 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private org.jdom.Element genEnvelopeElem(ucar.nc2.dt.GridCoordSystem)
    {
        byte b3;
        org.jdom.Namespace $r2, $r18, $r24, $r47, $r54, $r59;
        org.jdom.Attribute $r56, $r61;
        ucar.nc2.units.DateRange $r19, $r25;
        ucar.nc2.dt.GridCoordSystem r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        long $l0;
        java.lang.String $r10, $r15, $r21, $r27, $r29, r50, r51, $r52;
        ucar.unidata.geoloc.LatLonRect $r3;
        ucar.unidata.geoloc.LatLonPointImpl $r4, $r5;
        org.jdom.Element $r1, $r17, $r22, $r23, $r28, $r46, r49, $r53, $r55, $r57, $r58, $r60, $r62;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r48;
        ucar.nc2.dataset.CoordinateAxis1D $r16;
        boolean $z0, $z1, $z2;
        ucar.nc2.units.DateType $r20, $r26;
        int $i1, $i2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r48 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r0 := @parameter0: ucar.nc2.dt.GridCoordSystem;

        $z0 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: boolean hasTimeAxis()>();

        if $z0 == 0 goto label1;

        $r46 = new org.jdom.Element;

        $r47 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r46.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("EnvelopeWithTimePeriod", $r47);

        r49 = $r46;

        goto label2;

     label1:
        $r1 = new org.jdom.Element;

        $r2 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r1.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Envelope", $r2);

        r49 = $r1;

     label2:
        virtualinvoke r49.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("srsName", "urn:ogc:def:crs:OGC:1.3:CRS84");

        $r3 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonRect getLatLonBoundingBox()>();

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $r5 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d0 = interfaceinvoke $r4.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d1 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: double getWidth()>();

        $d7 = $d0 + $d1;

        b3 = 2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $d2 = interfaceinvoke $r4.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d3 = interfaceinvoke $r4.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d4 = interfaceinvoke $r5.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r51 = $r15;

        $r16 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r16 == null goto label4;

        b3 = 3;

        $d5 = virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>(0);

        $l0 = virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: long getSize()>();

        $i1 = (int) $l0;

        $i2 = $i1 - 1;

        $d6 = virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: double getCoordValue(int)>($i2);

        $r29 = virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getPositive()>();

        $z1 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("up");

        if $z1 == 0 goto label3;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        r50 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        r51 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b3);

        $r53 = new org.jdom.Element;

        $r54 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r53.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("pos", $r54);

        $r55 = virtualinvoke $r53.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r50);

        $r56 = new org.jdom.Attribute;

        specialinvoke $r56.<org.jdom.Attribute: void <init>(java.lang.String,java.lang.String)>("dimension", $r52);

        $r57 = virtualinvoke $r55.<org.jdom.Element: org.jdom.Element setAttribute(org.jdom.Attribute)>($r56);

        virtualinvoke r49.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r57);

        $r58 = new org.jdom.Element;

        $r59 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r58.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("pos", $r59);

        $r60 = virtualinvoke $r58.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r51);

        $r61 = new org.jdom.Attribute;

        specialinvoke $r61.<org.jdom.Attribute: void <init>(java.lang.String,java.lang.String)>("dimension", $r52);

        $r62 = virtualinvoke $r60.<org.jdom.Element: org.jdom.Element setAttribute(org.jdom.Attribute)>($r61);

        virtualinvoke r49.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r62);

        $z2 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: boolean hasTimeAxis()>();

        if $z2 == 0 goto label5;

        $r17 = new org.jdom.Element;

        $r18 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r17.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timePosition", $r18);

        $r19 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.units.DateRange getDateRange()>();

        $r20 = virtualinvoke $r19.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r21 = virtualinvoke $r20.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r22 = virtualinvoke $r17.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r21);

        virtualinvoke r49.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r22);

        $r23 = new org.jdom.Element;

        $r24 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r23.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timePosition", $r24);

        $r25 = interfaceinvoke r0.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.units.DateRange getDateRange()>();

        $r26 = virtualinvoke $r25.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r27 = virtualinvoke $r26.<ucar.nc2.units.DateType: java.lang.String toDateTimeStringISO()>();

        $r28 = virtualinvoke $r23.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r27);

        virtualinvoke r49.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r28);

     label5:
        return r49;
    }

    private org.jdom.Element genTemporalDomainElem(ucar.nc2.dataset.CoordinateAxis1DTime)
    {
        ucar.nc2.dataset.CoordinateAxis1DTime r2;
        java.util.Date r5;
        int i0, i1;
        java.util.Date[] $r3;
        org.jdom.Namespace $r1, $r7;
        java.lang.String $r8;
        org.jdom.Element $r0, $r6, $r9;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r10;
        ucar.nc2.units.DateFormatter $r4;

        r10 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r2 := @parameter0: ucar.nc2.dataset.CoordinateAxis1DTime;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("temporalDomain", $r1);

        $r3 = virtualinvoke r2.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        $r4 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r4.<ucar.nc2.units.DateFormatter: void <init>()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = $r3[i1];

        $r6 = new org.jdom.Element;

        $r7 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace gmlNS>;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timePosition", $r7);

        $r8 = virtualinvoke $r4.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r5);

        $r9 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r8);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private org.jdom.Element genRangeSetElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        thredds.wcs.v1_0_0_Plus.WcsCoverage r2;
        thredds.wcs.v1_0_0_Plus.WcsRangeField r6;
        org.jdom.Namespace $r1, $r8, $r11, $r15, $r19, $r23, $r27, $r29, $r33, $r37, $r43, $r45, $r51, $r53, $r57, $r61, $r67;
        thredds.wcs.v1_0_0_Plus.WcsRangeField$Axis r49;
        java.lang.String $r9, $r12, $r16, $r20, $r24, $r30, $r34, $r54, $r58, r65, $r70;
        org.jdom.Element $r0, $r7, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r25, $r26, $r28, $r31, $r32, $r35, $r36, $r38, $r39, $r42, $r44, $r46, $r47, $r50, $r52, $r55, $r56, $r59, $r60, $r66, $r68, $r69, $r71;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r72;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r3;
        java.util.List $r40, $r62;
        double $d0, $d1;
        java.util.Iterator $r4, $r41, $r63;
        java.lang.Object $r5, $r48, $r64;

        r72 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r2 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("rangeSet", $r1);

        $r3 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.Collection getRange()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.wcs.v1_0_0_Plus.WcsRangeField) $r5;

        $r7 = new org.jdom.Element;

        $r8 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Field", $r8);

        $r9 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getDescription()>();

        if $r9 == null goto label2;

        $r69 = new org.jdom.Element;

        specialinvoke $r69.<org.jdom.Element: void <init>(java.lang.String)>("description");

        $r70 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getDescription()>();

        $r71 = virtualinvoke $r69.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r70);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r71);

     label2:
        $r10 = new org.jdom.Element;

        $r11 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r10.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("name", $r11);

        $r12 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r12);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r13);

        $r14 = new org.jdom.Element;

        $r15 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r14.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("label", $r15);

        $r16 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getLabel()>();

        $r17 = virtualinvoke $r14.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r16);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r17);

        $r18 = new org.jdom.Element;

        $r19 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r18.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("dataType", $r19);

        $r20 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getDatatypeString()>();

        $r21 = virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r20);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

        $r22 = new org.jdom.Element;

        $r23 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r22.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("units", $r23);

        $r24 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.lang.String getUnitsString()>();

        $r25 = virtualinvoke $r22.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r24);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        $r26 = new org.jdom.Element;

        $r27 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r26.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("AllowedValues", $r27);

        $r28 = new org.jdom.Element;

        $r29 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r28.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("MinimumValue", $r29);

        $d0 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: double getValidMin()>();

        $r30 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        $r31 = virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r30);

        $r32 = new org.jdom.Element;

        $r33 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r32.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("MaximumValue", $r33);

        $d1 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: double getValidMin()>();

        $r34 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        $r35 = virtualinvoke $r32.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r34);

        $r36 = new org.jdom.Element;

        $r37 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r36.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Range", $r37);

        $r38 = virtualinvoke $r36.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r31);

        $r39 = virtualinvoke $r38.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r35);

        virtualinvoke $r26.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r39);

        $r40 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: java.util.List getAxes()>();

        $r41 = interfaceinvoke $r40.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r48 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r49 = (thredds.wcs.v1_0_0_Plus.WcsRangeField$Axis) $r48;

        if r49 == null goto label6;

        $r50 = new org.jdom.Element;

        $r51 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r50.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("Axis", $r51);

        $r52 = new org.jdom.Element;

        $r53 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r52.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("name", $r53);

        $r54 = virtualinvoke r49.<thredds.wcs.v1_0_0_Plus.WcsRangeField$Axis: java.lang.String getName()>();

        $r55 = virtualinvoke $r52.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r54);

        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r55);

        $r56 = new org.jdom.Element;

        $r57 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r56.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("label", $r57);

        $r58 = virtualinvoke r49.<thredds.wcs.v1_0_0_Plus.WcsRangeField$Axis: java.lang.String getLabel()>();

        $r59 = virtualinvoke $r56.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r58);

        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r59);

        $r60 = new org.jdom.Element;

        $r61 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r60.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("values", $r61);

        $r62 = virtualinvoke r49.<thredds.wcs.v1_0_0_Plus.WcsRangeField$Axis: java.util.List getValues()>();

        $r63 = interfaceinvoke $r62.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r64 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.lang.String) $r64;

        $r66 = new org.jdom.Element;

        $r67 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r66.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("singleValue", $r67);

        $r68 = virtualinvoke $r66.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r65);

        virtualinvoke $r60.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r68);

        goto label4;

     label5:
        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r60);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r50);

     label6:
        goto label3;

     label7:
        $z1 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRangeField: boolean hasMissingData()>();

        if $z1 == 0 goto label8;

        $r42 = new org.jdom.Element;

        $r43 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r42.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("nullValues", $r43);

        $r44 = new org.jdom.Element;

        $r45 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r44.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("singleValue", $r45);

        $r46 = virtualinvoke $r44.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("NaN");

        $r47 = virtualinvoke $r42.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r46);

        virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r47);

     label8:
        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        goto label1;

     label9:
        return $r0;
    }

    private org.jdom.Element genSupportedCRSsElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        thredds.wcs.v1_0_0_Plus.WcsCoverage r4;
        org.jdom.Namespace $r1, $r3, $r8;
        java.lang.String $r5, $r9;
        org.jdom.Element $r0, $r2, $r6, $r7, $r10;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r11;

        r11 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r4 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("supportedCRSs", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("requestCRSs", $r3);

        $r5 = virtualinvoke r4.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getDefaultRequestCrs()>();

        $r6 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r5);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        $r7 = new org.jdom.Element;

        $r8 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("responseCRSs", $r8);

        $r9 = virtualinvoke r4.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getNativeCrs()>();

        $r10 = virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r9);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        return $r0;
    }

    private org.jdom.Element genSupportedFormatsElem(thredds.wcs.v1_0_0_Plus.WcsCoverage)
    {
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format r6;
        java.util.Iterator $r4;
        thredds.wcs.v1_0_0_Plus.WcsCoverage r2;
        java.util.List $r3;
        org.jdom.Namespace $r1, $r8;
        java.lang.Object $r5;
        java.lang.String $r9;
        org.jdom.Element $r0, $r7, $r10;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r11;
        boolean $z0;

        r11 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        r2 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("supportedFormats", $r1);

        $r3 = virtualinvoke r2.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.List getSupportedCoverageFormatList()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (thredds.wcs.v1_0_0_Plus.WcsRequest$Format) $r5;

        $r7 = new org.jdom.Element;

        $r8 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r7.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("formats", $r8);

        $r9 = virtualinvoke r6.<thredds.wcs.v1_0_0_Plus.WcsRequest$Format: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r9);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        goto label1;

     label2:
        return $r0;
    }

    private org.jdom.Element genSupportedInterpolationsElem()
    {
        org.jdom.Namespace $r1, $r3;
        org.jdom.Element $r0, $r2, $r4;
        thredds.wcs.v1_0_0_Plus.DescribeCoverage r5;

        r5 := @this: thredds.wcs.v1_0_0_Plus.DescribeCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("supportedInterpolations", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.wcs.v1_0_0_Plus.DescribeCoverage: org.jdom.Namespace wcsNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("interpolationMethod", $r3);

        $r4 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("none");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        return $r0;
    }
}
