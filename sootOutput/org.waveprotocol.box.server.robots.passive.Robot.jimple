public class org.waveprotocol.box.server.robots.passive.Robot extends java.lang.Object implements java.lang.Runnable
{
    private static final org.waveprotocol.wave.util.logging.Log LOG;
    public static final java.lang.String RPC_URL;
    public static final java.lang.String CAPABILITIES_URL;
    private final com.google.wave.api.robot.RobotName robotName;
    private org.waveprotocol.box.server.account.RobotAccountData account;
    private final org.waveprotocol.box.server.robots.passive.RobotsGateway gateway;
    private final org.waveprotocol.box.server.robots.passive.RobotConnector connector;
    private final com.google.wave.api.data.converter.EventDataConverterManager converterManager;
    private final com.google.common.collect.ListMultimap waveletAndDeltasMap;
    private final org.waveprotocol.box.server.robots.passive.EventGenerator eventGenerator;
    private final org.waveprotocol.box.server.robots.passive.RobotOperationApplicator operationApplicator;

    void <init>(com.google.wave.api.robot.RobotName, org.waveprotocol.box.server.account.RobotAccountData, org.waveprotocol.box.server.robots.passive.RobotsGateway, org.waveprotocol.box.server.robots.passive.RobotConnector, com.google.wave.api.data.converter.EventDataConverterManager, org.waveprotocol.box.server.waveserver.WaveletProvider, org.waveprotocol.box.server.robots.passive.EventGenerator, org.waveprotocol.box.server.robots.passive.RobotOperationApplicator)
    {
        com.google.common.collect.LinkedListMultimap $r1;
        org.waveprotocol.box.server.robots.passive.RobotOperationApplicator r8;
        com.google.wave.api.data.converter.EventDataConverterManager r6;
        org.waveprotocol.box.server.robots.passive.EventGenerator r7;
        org.waveprotocol.box.server.waveserver.WaveletProvider r9;
        org.waveprotocol.box.server.account.RobotAccountData r2;
        org.waveprotocol.box.server.robots.passive.RobotsGateway r4;
        org.waveprotocol.box.server.robots.passive.RobotConnector r5;
        com.google.wave.api.robot.RobotName r3;
        org.waveprotocol.box.server.robots.passive.Robot r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        r3 := @parameter0: com.google.wave.api.robot.RobotName;

        r2 := @parameter1: org.waveprotocol.box.server.account.RobotAccountData;

        r4 := @parameter2: org.waveprotocol.box.server.robots.passive.RobotsGateway;

        r5 := @parameter3: org.waveprotocol.box.server.robots.passive.RobotConnector;

        r6 := @parameter4: com.google.wave.api.data.converter.EventDataConverterManager;

        r9 := @parameter5: org.waveprotocol.box.server.waveserver.WaveletProvider;

        r7 := @parameter6: org.waveprotocol.box.server.robots.passive.EventGenerator;

        r8 := @parameter7: org.waveprotocol.box.server.robots.passive.RobotOperationApplicator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap create()>();

        r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.common.collect.ListMultimap waveletAndDeltasMap> = $r1;

        $z0 = interfaceinvoke r2.<org.waveprotocol.box.server.account.RobotAccountData: boolean isVerified()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Account must be verified");

        r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName> = r3;

        r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotsGateway gateway> = r4;

        r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotConnector connector> = r5;

        r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.data.converter.EventDataConverterManager converterManager> = r6;

        r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.EventGenerator eventGenerator> = r7;

        r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotOperationApplicator operationApplicator> = r8;

        virtualinvoke r0.<org.waveprotocol.box.server.robots.passive.Robot: void setAccount(org.waveprotocol.box.server.account.RobotAccountData)>(r2);

        return;
    }

    void setAccount(org.waveprotocol.box.server.account.RobotAccountData)
    {
        java.lang.Object[] $r6;
        org.waveprotocol.box.server.account.RobotAccountData r3;
        org.waveprotocol.wave.model.wave.ParticipantId $r4, $r7;
        com.google.wave.api.robot.RobotName $r1, $r8;
        java.lang.String $r2, $r5, $r9, $r10;
        org.waveprotocol.box.server.robots.passive.Robot r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        r3 := @parameter0: org.waveprotocol.box.server.account.RobotAccountData;

        $r1 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.robot.RobotName: java.lang.String toEmailAddress()>();

        $r4 = interfaceinvoke r3.<org.waveprotocol.box.server.account.RobotAccountData: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        $r6 = newarray (java.lang.Object)[2];

        $r7 = interfaceinvoke r3.<org.waveprotocol.box.server.account.RobotAccountData: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        $r6[0] = $r7;

        $r8 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r9 = virtualinvoke $r8.<com.google.wave.api.robot.RobotName: java.lang.String toEmailAddress()>();

        $r6[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The given RobotAccountData doesn\'t match the RobotName. %s != %s", $r6);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r10);

        r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData account> = r3;

        return;
    }

    com.google.wave.api.robot.RobotName getRobotName()
    {
        com.google.wave.api.robot.RobotName $r1;
        org.waveprotocol.box.server.robots.passive.Robot r0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        $r1 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        return $r1;
    }

    org.waveprotocol.box.server.account.RobotAccountData getAccount()
    {
        org.waveprotocol.box.server.robots.passive.Robot r0;
        org.waveprotocol.box.server.account.RobotAccountData $r1;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        $r1 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData account>;

        return $r1;
    }

    void waveletUpdate(org.waveprotocol.wave.model.wave.data.ReadableWaveletData, org.waveprotocol.box.common.DeltaSequence) throws org.waveprotocol.wave.model.operation.OperationException
    {
        java.lang.Throwable $r10;
        com.google.common.collect.ListMultimap $r3, $r4;
        org.waveprotocol.box.server.robots.passive.WaveletAndDeltas $r8, $r9, r11;
        org.waveprotocol.box.common.DeltaSequence r7;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r0;
        int $i0, $i1;
        boolean $z0, $z1;
        org.waveprotocol.wave.model.id.WaveletName $r1;
        java.util.List $r5;
        java.lang.Object $r6;
        org.waveprotocol.box.server.robots.passive.Robot r2;

        r2 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        r7 := @parameter1: org.waveprotocol.box.common.DeltaSequence;

        $r1 = staticinvoke <org.waveprotocol.box.server.util.WaveletDataUtil: org.waveprotocol.wave.model.id.WaveletName waveletNameOf(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>(r0);

        $r3 = r2.<org.waveprotocol.box.server.robots.passive.Robot: com.google.common.collect.ListMultimap waveletAndDeltasMap>;

        entermonitor $r3;

     label1:
        $r4 = r2.<org.waveprotocol.box.server.robots.passive.Robot: com.google.common.collect.ListMultimap waveletAndDeltasMap>;

        $r5 = interfaceinvoke $r4.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r9 = staticinvoke <org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.box.server.robots.passive.WaveletAndDeltas create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.box.common.DeltaSequence)>(r0, r7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label4;

     label2:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        r11 = (org.waveprotocol.box.server.robots.passive.WaveletAndDeltas) $r6;

        $z1 = virtualinvoke r11.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: boolean areContiguousToCurrentVersion(org.waveprotocol.box.common.DeltaSequence)>(r7);

        if $z1 == 0 goto label3;

        virtualinvoke r11.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: void appendDeltas(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.box.common.DeltaSequence)>(r0, r7);

        goto label4;

     label3:
        $r8 = staticinvoke <org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.box.server.robots.passive.WaveletAndDeltas create(org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.box.common.DeltaSequence)>(r0, r7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label4:
        exitmonitor $r3;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r10;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    org.waveprotocol.box.server.robots.passive.WaveletAndDeltas dequeueWavelet()
    {
        java.lang.Throwable $r9;
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.google.common.collect.ListMultimap $r1, $r2;
        java.util.Collection $r3;
        org.waveprotocol.box.server.robots.passive.WaveletAndDeltas r8;
        java.lang.Object $r5, $r7;
        org.waveprotocol.box.server.robots.passive.Robot r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        $r1 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.common.collect.ListMultimap waveletAndDeltasMap>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.common.collect.ListMultimap waveletAndDeltasMap>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.ListMultimap: java.util.Collection entries()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (org.waveprotocol.box.server.robots.passive.WaveletAndDeltas) $r7;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        exitmonitor $r1;

     label4:
        return r8;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void run()
    {
        org.waveprotocol.box.server.robots.passive.RobotsGateway $r8, $r9, $r10;
        org.waveprotocol.box.server.robots.passive.WaveletAndDeltas $r7;
        org.waveprotocol.wave.util.logging.Log $r1, $r13;
        java.lang.String $r6, $r18;
        java.lang.RuntimeException $r11;
        com.google.wave.api.robot.RobotName $r3, $r15;
        java.lang.StringBuilder $r0, $r4, $r5, $r12, $r14, $r16, $r17;
        org.waveprotocol.box.server.robots.passive.Robot r2;

        r2 := @this: org.waveprotocol.box.server.robots.passive.Robot;

     label1:
        $r1 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" called for processing");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.waveprotocol.wave.util.logging.Log: void fine(java.lang.String)>($r6);

        $r7 = virtualinvoke r2.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.WaveletAndDeltas dequeueWavelet()>();

        if $r7 != null goto label3;

        $r10 = r2.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotsGateway gateway>;

        virtualinvoke $r10.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void doneRunning(org.waveprotocol.box.server.robots.passive.Robot)>(r2);

     label2:
        return;

     label3:
        specialinvoke r2.<org.waveprotocol.box.server.robots.passive.Robot: void process(org.waveprotocol.box.server.robots.passive.WaveletAndDeltas)>($r7);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r13 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error occurred when robot ");

        $r15 = r2.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was called");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r18, $r11);

     label6:
        $r8 = r2.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotsGateway gateway>;

        virtualinvoke $r8.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void doneRunning(org.waveprotocol.box.server.robots.passive.Robot)>(r2);

        $r9 = r2.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotsGateway gateway>;

        virtualinvoke $r9.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void ensureScheduled(org.waveprotocol.box.server.robots.passive.Robot)>(r2);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    private void process(org.waveprotocol.box.server.robots.passive.WaveletAndDeltas)
    {
        com.google.wave.api.impl.EventMessageBundle $r11;
        org.waveprotocol.box.server.account.RobotAccountData $r1, $r3, $r31;
        java.util.Map $r7;
        org.waveprotocol.wave.util.logging.Log $r14, $r23, $r33, $r39, $r48, $r62;
        org.waveprotocol.box.server.robots.RobotCapabilities $r2, $r4;
        org.waveprotocol.wave.model.id.WaveletName $r53, $r67;
        org.waveprotocol.box.server.robots.passive.EventGenerator $r6;
        org.waveprotocol.box.server.robots.passive.RobotConnector $r19;
        java.lang.StringBuilder $r13, $r16, $r17, $r22, $r25, $r26, $r32, $r35, $r36, $r38, $r41, $r42, $r47, $r49, $r51, $r52, $r54, $r55, $r57, $r61, $r63, $r65, $r66, $r68, $r69, $r71;
        org.waveprotocol.box.server.robots.passive.RobotOperationApplicator $r28;
        org.waveprotocol.box.server.robots.passive.WaveletAndDeltas r5;
        org.waveprotocol.box.server.persistence.PersistenceException $r45;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r29, $r46, $r60;
        org.waveprotocol.wave.model.version.HashedVersion $r30, $r56, $r70;
        java.lang.String $r18, $r27, $r37, $r43, $r58, $r72;
        org.waveprotocol.box.server.robots.passive.Robot r0;
        com.google.wave.api.robot.CapabilityFetchException $r59;
        com.google.wave.api.data.converter.EventDataConverterManager $r8;
        boolean $z0;
        com.google.wave.api.robot.RobotName $r15, $r24, $r34, $r40, $r50, $r64;
        java.util.List $r12, $r21;
        com.google.wave.api.ProtocolVersion $r9, $r20;
        org.waveprotocol.box.server.robots.passive.RobotsGateway $r44;
        com.google.wave.api.data.converter.EventDataConverter $r10;

        r0 := @this: org.waveprotocol.box.server.robots.passive.Robot;

        r5 := @parameter0: org.waveprotocol.box.server.robots.passive.WaveletAndDeltas;

        $r1 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData account>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.box.server.account.RobotAccountData: org.waveprotocol.box.server.robots.RobotCapabilities getCapabilities()>();

        if $r2 != null goto label5;

     label1:
        $r39 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Initializing capabilities");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r43);

        $r44 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotsGateway gateway>;

        virtualinvoke $r44.<org.waveprotocol.box.server.robots.passive.RobotsGateway: void updateRobotAccount(org.waveprotocol.box.server.robots.passive.Robot)>(r0);

     label2:
        goto label5;

     label3:
        $r59 := @caughtexception;

        $r60 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getSnapshotAfterDeltas()>();

        $r62 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t initialize the capabilities of robot(");

        $r64 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), dropping its wavelet(");

        $r67 = staticinvoke <org.waveprotocol.box.server.util.WaveletDataUtil: org.waveprotocol.wave.model.id.WaveletName waveletNameOf(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>($r60);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") at version ");

        $r70 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.version.HashedVersion getVersionAfterDeltas()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r62.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String,java.lang.Throwable)>($r72, $r59);

        return;

     label4:
        $r45 := @caughtexception;

        $r46 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getSnapshotAfterDeltas()>();

        $r48 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t initialize the capabilities of robot(");

        $r50 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), dropping its wavelet(");

        $r53 = staticinvoke <org.waveprotocol.box.server.util.WaveletDataUtil: org.waveprotocol.wave.model.id.WaveletName waveletNameOf(org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>($r46);

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") at version ");

        $r56 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.version.HashedVersion getVersionAfterDeltas()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String,java.lang.Throwable)>($r58, $r45);

        return;

     label5:
        $r3 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData account>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.box.server.account.RobotAccountData: org.waveprotocol.box.server.robots.RobotCapabilities getCapabilities()>();

        $r6 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.EventGenerator eventGenerator>;

        $r7 = virtualinvoke $r4.<org.waveprotocol.box.server.robots.RobotCapabilities: java.util.Map getCapabilitiesMap()>();

        $r8 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.data.converter.EventDataConverterManager converterManager>;

        $r9 = virtualinvoke $r4.<org.waveprotocol.box.server.robots.RobotCapabilities: com.google.wave.api.ProtocolVersion getProtocolVersion()>();

        $r10 = virtualinvoke $r8.<com.google.wave.api.data.converter.EventDataConverterManager: com.google.wave.api.data.converter.EventDataConverter getEventDataConverter(com.google.wave.api.ProtocolVersion)>($r9);

        $r11 = virtualinvoke $r6.<org.waveprotocol.box.server.robots.passive.EventGenerator: com.google.wave.api.impl.EventMessageBundle generateEvents(org.waveprotocol.box.server.robots.passive.WaveletAndDeltas,java.util.Map,com.google.wave.api.data.converter.EventDataConverter)>(r5, $r7, $r10);

        $r12 = virtualinvoke $r11.<com.google.wave.api.impl.EventMessageBundle: java.util.List getEvents()>();

        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r33 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": no events were generated");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r37);

        return;

     label6:
        $r14 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": sending events");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r18);

        $r19 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotConnector connector>;

        $r20 = virtualinvoke $r4.<org.waveprotocol.box.server.robots.RobotCapabilities: com.google.wave.api.ProtocolVersion getProtocolVersion()>();

        $r21 = virtualinvoke $r19.<org.waveprotocol.box.server.robots.passive.RobotConnector: java.util.List sendMessageBundle(com.google.wave.api.impl.EventMessageBundle,org.waveprotocol.box.server.robots.passive.Robot,com.google.wave.api.ProtocolVersion)>($r11, r0, $r20);

        $r23 = <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = r0.<org.waveprotocol.box.server.robots.passive.Robot: com.google.wave.api.robot.RobotName robotName>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": received operations");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r27);

        $r28 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.robots.passive.RobotOperationApplicator operationApplicator>;

        $r29 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getSnapshotAfterDeltas()>();

        $r30 = virtualinvoke r5.<org.waveprotocol.box.server.robots.passive.WaveletAndDeltas: org.waveprotocol.wave.model.version.HashedVersion getVersionAfterDeltas()>();

        $r31 = r0.<org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.box.server.account.RobotAccountData account>;

        virtualinvoke $r28.<org.waveprotocol.box.server.robots.passive.RobotOperationApplicator: void applyOperations(java.util.List,org.waveprotocol.wave.model.wave.data.ReadableWaveletData,org.waveprotocol.wave.model.version.HashedVersion,org.waveprotocol.box.server.account.RobotAccountData)>($r21, $r29, $r30, $r31);

        return;

        catch com.google.wave.api.robot.CapabilityFetchException from label1 to label2 with label3;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        <org.waveprotocol.box.server.robots.passive.Robot: java.lang.String CAPABILITIES_URL> = "/_wave/capabilities.xml";

        <org.waveprotocol.box.server.robots.passive.Robot: java.lang.String RPC_URL> = "/_wave/robot/jsonrpc";

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/passive/Robot;");

        <org.waveprotocol.box.server.robots.passive.Robot: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
