public class org.apache.zookeeper.server.DatadirCleanupManager extends java.lang.Object
{
    private static final org.slf4j.Logger LOG;
    private org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus;
    private final java.lang.String snapDir;
    private final java.lang.String dataLogDir;
    private final int snapRetainCount;
    private final int purgeInterval;
    private java.util.Timer timer;

    public void <init>(java.lang.String, java.lang.String, int, int)
    {
        org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus $r1;
        int i0, i1;
        java.lang.String r2, r3, $r8, $r13;
        org.slf4j.Logger $r5, $r10;
        org.apache.zookeeper.server.DatadirCleanupManager r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus NOT_STARTED>;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus> = $r1;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String snapDir> = r2;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String dataLogDir> = r3;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: int snapRetainCount> = i0;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: int purgeInterval> = i1;

        $r5 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autopurge.snapRetainCount set to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>($r8);

        $r10 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autopurge.purgeInterval set to ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r13);

        return;
    }

    public void start()
    {
        org.apache.zookeeper.server.DatadirCleanupManager$PurgeTask $r4;
        java.util.Timer $r3, $r8;
        long $l3, $l4;
        org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus $r1, $r2, $r9;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r6;
        org.slf4j.Logger $r10, $r11;
        org.apache.zookeeper.server.DatadirCleanupManager r0;
        java.util.concurrent.TimeUnit $r7;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $r2 = <org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus STARTED>;

        $r1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus>;

        if $r2 != $r1 goto label1;

        $r11 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>("Purge task is already running.");

        return;

     label1:
        $i0 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: int purgeInterval>;

        if $i0 > 0 goto label2;

        $r10 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Purge task is not scheduled.");

        return;

     label2:
        $r3 = new java.util.Timer;

        specialinvoke $r3.<java.util.Timer: void <init>(java.lang.String,boolean)>("PurgeTask", 1);

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.util.Timer timer> = $r3;

        $r4 = new org.apache.zookeeper.server.DatadirCleanupManager$PurgeTask;

        $r6 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String dataLogDir>;

        $r5 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String snapDir>;

        $i1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: int snapRetainCount>;

        specialinvoke $r4.<org.apache.zookeeper.server.DatadirCleanupManager$PurgeTask: void <init>(java.lang.String,java.lang.String,int)>($r6, $r5, $i1);

        $r8 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.util.Timer timer>;

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $i2 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: int purgeInterval>;

        $l3 = (long) $i2;

        $l4 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3);

        virtualinvoke $r8.<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>($r4, 0L, $l4);

        $r9 = <org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus STARTED>;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus> = $r9;

        return;
    }

    public void shutdown()
    {
        org.slf4j.Logger $r3, $r4;
        org.apache.zookeeper.server.DatadirCleanupManager r0;
        java.util.Timer $r5;
        org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus $r1, $r2, $r6;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $r2 = <org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus STARTED>;

        $r1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus>;

        if $r2 != $r1 goto label1;

        $r4 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Shutting down purge task.");

        $r5 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.util.Timer timer>;

        virtualinvoke $r5.<java.util.Timer: void cancel()>();

        $r6 = <org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus COMPLETED>;

        r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus> = $r6;

        goto label2;

     label1:
        $r3 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Purge task not started. Ignoring shutdown!");

     label2:
        return;
    }

    public org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus getPurgeTaskStatus()
    {
        org.apache.zookeeper.server.DatadirCleanupManager r0;
        org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus $r1;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $r1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: org.apache.zookeeper.server.DatadirCleanupManager$PurgeTaskStatus purgeTaskStatus>;

        return $r1;
    }

    public java.lang.String getSnapDir()
    {
        java.lang.String $r1;
        org.apache.zookeeper.server.DatadirCleanupManager r0;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $r1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String snapDir>;

        return $r1;
    }

    public java.lang.String getDataLogDir()
    {
        java.lang.String $r1;
        org.apache.zookeeper.server.DatadirCleanupManager r0;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $r1 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: java.lang.String dataLogDir>;

        return $r1;
    }

    public int getPurgeInterval()
    {
        int $i0;
        org.apache.zookeeper.server.DatadirCleanupManager r0;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $i0 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: int purgeInterval>;

        return $i0;
    }

    public int getSnapRetainCount()
    {
        int $i0;
        org.apache.zookeeper.server.DatadirCleanupManager r0;

        r0 := @this: org.apache.zookeeper.server.DatadirCleanupManager;

        $i0 = r0.<org.apache.zookeeper.server.DatadirCleanupManager: int snapRetainCount>;

        return $i0;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/DatadirCleanupManager;");

        <org.apache.zookeeper.server.DatadirCleanupManager: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
