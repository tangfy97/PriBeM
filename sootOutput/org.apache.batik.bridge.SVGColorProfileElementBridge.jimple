public class org.apache.batik.bridge.SVGColorProfileElementBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.bridge.ErrorConstants
{
    public org.apache.batik.ext.awt.color.NamedProfileCache cache;

    public void <init>()
    {
        org.apache.batik.bridge.SVGColorProfileElementBridge r0;
        org.apache.batik.ext.awt.color.NamedProfileCache $r1;

        r0 := @this: org.apache.batik.bridge.SVGColorProfileElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        $r1 = new org.apache.batik.ext.awt.color.NamedProfileCache;

        specialinvoke $r1.<org.apache.batik.ext.awt.color.NamedProfileCache: void <init>()>();

        r0.<org.apache.batik.bridge.SVGColorProfileElementBridge: org.apache.batik.ext.awt.color.NamedProfileCache cache> = $r1;

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGColorProfileElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGColorProfileElementBridge;

        return "color-profile";
    }

    public org.apache.batik.ext.awt.color.ICCColorSpaceExt createICCColorSpaceExt(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Document $r6;
        java.lang.SecurityException $r23;
        boolean $z0, $z1;
        org.apache.batik.ext.awt.color.NamedProfileCache $r2, $r13;
        org.apache.batik.bridge.BridgeException $r20, $r24, $r27;
        org.apache.batik.bridge.BridgeContext r11;
        org.apache.batik.bridge.UserAgent $r18;
        org.apache.batik.util.ParsedURL $r17, $r22, r32;
        java.lang.Object[] $r21, $r25, $r28;
        short $s1;
        org.apache.batik.dom.AbstractNode $r15;
        org.w3c.dom.Node $r8;
        int $i0, $i2, i3;
        java.lang.String r1, $r3, $r9, $r10, $r14, $r16;
        org.apache.batik.ext.awt.color.ICCColorSpaceExt $r4, $r12;
        java.awt.color.ICC_Profile r31;
        org.w3c.dom.NodeList $r7;
        org.apache.batik.bridge.SVGColorProfileElementBridge r0;
        java.io.IOException $r26;
        org.w3c.dom.Element r5, r29, r30;
        java.io.InputStream $r19;

        r0 := @this: org.apache.batik.bridge.SVGColorProfileElementBridge;

        r11 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r5 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<org.apache.batik.bridge.SVGColorProfileElementBridge: org.apache.batik.ext.awt.color.NamedProfileCache cache>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r2.<org.apache.batik.ext.awt.color.NamedProfileCache: org.apache.batik.ext.awt.color.ICCColorSpaceExt request(java.lang.String)>($r3);

        if $r4 == null goto label01;

        return $r4;

     label01:
        $r6 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "color-profile");

        $i0 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

        r29 = null;

        i3 = 0;

        goto label04;

     label02:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i3);

        $s1 = interfaceinvoke $r8.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label03;

        r30 = (org.w3c.dom.Element) $r8;

        $r9 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "name");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label03;

        r29 = r30;

     label03:
        i3 = i3 + 1;

     label04:
        if i3 < $i0 goto label02;

        if r29 != null goto label05;

        return null;

     label05:
        $r10 = staticinvoke <org.apache.batik.dom.util.XLinkSupport: java.lang.String getXLinkHref(org.w3c.dom.Element)>(r29);

        r31 = null;

        if $r10 == null goto label11;

        $r15 = (org.apache.batik.dom.AbstractNode) r29;

        $r16 = virtualinvoke $r15.<org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI()>();

        r32 = null;

        if $r16 == null goto label06;

        $r22 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r22.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r16);

        r32 = $r22;

     label06:
        $r17 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r17.<org.apache.batik.util.ParsedURL: void <init>(org.apache.batik.util.ParsedURL,java.lang.String)>(r32, $r10);

        $z1 = virtualinvoke $r17.<org.apache.batik.util.ParsedURL: boolean complete()>();

        if $z1 != 0 goto label07;

        $r20 = new org.apache.batik.bridge.BridgeException;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r10;

        specialinvoke $r20.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r11, r5, "uri.malformed", $r21);

        throw $r20;

     label07:
        $r18 = virtualinvoke r11.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r18.<org.apache.batik.bridge.UserAgent: void checkLoadExternalResource(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>($r17, r32);

        $r19 = virtualinvoke $r17.<org.apache.batik.util.ParsedURL: java.io.InputStream openStream()>();

        r31 = staticinvoke <java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.io.InputStream)>($r19);

     label08:
        goto label11;

     label09:
        $r26 := @caughtexception;

        $r27 = new org.apache.batik.bridge.BridgeException;

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = $r10;

        specialinvoke $r27.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r11, r5, $r26, "uri.io", $r28);

        throw $r27;

     label10:
        $r23 := @caughtexception;

        $r24 = new org.apache.batik.bridge.BridgeException;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = $r10;

        specialinvoke $r24.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r11, r5, $r23, "uri.unsecure", $r25);

        throw $r24;

     label11:
        if r31 != null goto label12;

        return null;

     label12:
        $i2 = staticinvoke <org.apache.batik.bridge.SVGColorProfileElementBridge: int convertIntent(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r29, r11);

        $r12 = new org.apache.batik.ext.awt.color.ICCColorSpaceExt;

        specialinvoke $r12.<org.apache.batik.ext.awt.color.ICCColorSpaceExt: void <init>(java.awt.color.ICC_Profile,int)>(r31, $i2);

        $r13 = r0.<org.apache.batik.bridge.SVGColorProfileElementBridge: org.apache.batik.ext.awt.color.NamedProfileCache cache>;

        $r14 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r13.<org.apache.batik.ext.awt.color.NamedProfileCache: void put(java.lang.String,org.apache.batik.ext.awt.color.ICCColorSpaceExt)>($r14, $r12);

        return $r12;

        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.SecurityException from label07 to label08 with label10;
    }

    private static int convertIntent(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r9;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.bridge.BridgeException $r7;
        org.apache.batik.bridge.BridgeContext r8;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r8 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "rendering-intent");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 4;

     label1:
        $r2 = "perceptual";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r3 = "auto";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        return 4;

     label3:
        $r4 = "relative-colorimetric";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        $r5 = "absolute-colorimetric";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label5;

        return 2;

     label5:
        $r6 = "saturation";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 == 0 goto label6;

        return 3;

     label6:
        $r7 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "rendering-intent";

        $r9[1] = $r1;

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r8, r0, "attribute.malformed", $r9);

        throw $r7;
    }
}
