public class org.apache.tika.parser.mp3.ID3v1Handler extends java.lang.Object implements org.apache.tika.parser.mp3.ID3Tags
{
    private java.lang.String title;
    private java.lang.String artist;
    private java.lang.String album;
    private java.lang.String year;
    private org.apache.tika.parser.mp3.ID3Tags$ID3Comment comment;
    private java.lang.String genre;
    private java.lang.String trackNumber;
    boolean found;

    public void <init>(java.io.InputStream, org.xml.sax.ContentHandler) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r2;
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        org.xml.sax.ContentHandler r3;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        r1 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.xml.sax.ContentHandler;

        $r2 = staticinvoke <org.apache.tika.parser.mp3.LyricsHandler: byte[] getSuffix(java.io.InputStream,int)>(r1, 128);

        specialinvoke r0.<org.apache.tika.parser.mp3.ID3v1Handler: void <init>(byte[])>($r2);

        return;
    }

    protected void <init>(byte[]) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] r1;
        byte $b1, $b2, $b3, $b4, $b9, $b10, $b11;
        java.lang.String[] $r8, $r9;
        short s5, s12, $s16, $s18;
        int $i0, $i6, $i7, $i8, $i13, $i14, $i15, $i17, $i19;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r10, $r11;
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        org.apache.tika.parser.mp3.ID3Tags$ID3Comment $r12;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: boolean found> = 0;

        $i0 = lengthof r1;

        if $i0 != 128 goto label1;

        $b1 = r1[0];

        $i13 = (int) $b1;

        if $i13 != 84 goto label1;

        $b2 = r1[1];

        $i14 = (int) $b2;

        if $i14 != 65 goto label1;

        $b3 = r1[2];

        $i15 = (int) $b3;

        if $i15 != 71 goto label1;

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: boolean found> = 1;

        $r2 = staticinvoke <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String getString(byte[],int,int)>(r1, 3, 33);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String title> = $r2;

        $r3 = staticinvoke <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String getString(byte[],int,int)>(r1, 33, 63);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String artist> = $r3;

        $r4 = staticinvoke <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String getString(byte[],int,int)>(r1, 63, 93);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String album> = $r4;

        $r5 = staticinvoke <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String getString(byte[],int,int)>(r1, 93, 97);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String year> = $r5;

        $r6 = staticinvoke <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String getString(byte[],int,int)>(r1, 97, 127);

        $r12 = new org.apache.tika.parser.mp3.ID3Tags$ID3Comment;

        specialinvoke $r12.<org.apache.tika.parser.mp3.ID3Tags$ID3Comment: void <init>(java.lang.String)>($r6);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: org.apache.tika.parser.mp3.ID3Tags$ID3Comment comment> = $r12;

        $b4 = r1[127];

        $s16 = (short) $b4;

        s5 = $s16 & 255;

        $r9 = <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String[] GENRES>;

        $r8 = <org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String[] GENRES>;

        $i6 = lengthof $r8;

        $i7 = $i6 - 1;

        $i17 = (int) s5;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i7);

        $r10 = $r9[$i8];

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String genre> = $r10;

        $b9 = r1[125];

        if $b9 != 0 goto label1;

        $b10 = r1[126];

        if $b10 == 0 goto label1;

        $b11 = r1[126];

        $s18 = (short) $b11;

        s12 = $s18 & 255;

        $i19 = (int) s12;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i19);

        r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String trackNumber> = $r11;

     label1:
        return;
    }

    public boolean getTagsPresent()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $z0 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: boolean found>;

        return $z0;
    }

    public java.lang.String getTitle()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String title>;

        return $r1;
    }

    public java.lang.String getArtist()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String artist>;

        return $r1;
    }

    public java.lang.String getAlbum()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String album>;

        return $r1;
    }

    public java.lang.String getYear()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String year>;

        return $r1;
    }

    public java.util.List getComments()
    {
        java.util.List $r3;
        org.apache.tika.parser.mp3.ID3Tags$ID3Comment $r2;
        org.apache.tika.parser.mp3.ID3v1Handler r1;
        org.apache.tika.parser.mp3.ID3Tags$ID3Comment[] $r0;

        r1 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r0 = newarray (org.apache.tika.parser.mp3.ID3Tags$ID3Comment)[1];

        $r2 = r1.<org.apache.tika.parser.mp3.ID3v1Handler: org.apache.tika.parser.mp3.ID3Tags$ID3Comment comment>;

        $r0[0] = $r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r3;
    }

    public java.lang.String getGenre()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String genre>;

        return $r1;
    }

    public java.lang.String getTrackNumber()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        $r1 = r0.<org.apache.tika.parser.mp3.ID3v1Handler: java.lang.String trackNumber>;

        return $r1;
    }

    public java.lang.String getComposer()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        return null;
    }

    public java.lang.String getAlbumArtist()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        return null;
    }

    public java.lang.String getDisc()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        return null;
    }

    public java.lang.String getCompilation()
    {
        org.apache.tika.parser.mp3.ID3v1Handler r0;

        r0 := @this: org.apache.tika.parser.mp3.ID3v1Handler;

        return null;
    }

    private static java.lang.String getString(byte[], int, int) throws org.apache.tika.exception.TikaException
    {
        byte[] r1;
        byte $b1, $b3, $b4;
        org.apache.tika.exception.TikaException $r5;
        int $i0, $i2, i5, i6, i7, i8, $i9, $i11, $i12;
        java.lang.String $r4;
        java.io.UnsupportedEncodingException $r2;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i7 = i5;

     label1:
        if i7 >= i6 goto label2;

        $b4 = r1[i7];

        if $b4 == 0 goto label2;

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = i7;

     label3:
        if i5 >= i8 goto label4;

        $i2 = i8 - 1;

        $b3 = r1[$i2];

        $i9 = (int) $b3;

        if $i9 > 32 goto label4;

        $i11 = (int) -1;

        i8 = i8 + $i11;

        goto label3;

     label4:
        if i5 >= i8 goto label5;

        $b1 = r1[i5];

        $i12 = (int) $b1;

        if $i12 > 32 goto label5;

        i5 = i5 + 1;

        goto label4;

     label5:
        $r4 = new java.lang.String;

        $i0 = i8 - i5;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i5, $i0, "ISO-8859-1");

     label6:
        return $r4;

     label7:
        $r2 := @caughtexception;

        $r5 = new org.apache.tika.exception.TikaException;

        specialinvoke $r5.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("ISO-8859-1 encoding is not available", $r2);

        throw $r5;

        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }
}
