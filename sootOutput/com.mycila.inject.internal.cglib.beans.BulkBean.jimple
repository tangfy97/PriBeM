public abstract class com.mycila.inject.internal.cglib.beans.BulkBean extends java.lang.Object
{
    private static final com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey KEY_FACTORY;
    protected java.lang.Class target;
    protected java.lang.String[] getters;
    protected java.lang.String[] setters;
    protected java.lang.Class[] types;
    static java.lang.Class class$net$sf$cglib$beans$BulkBean$BulkBeanKey;
    static java.lang.Class class$net$sf$cglib$beans$BulkBean;

    protected void <init>()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean r0;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void getPropertyValues(java.lang.Object, java.lang.Object[]);

    public abstract void setPropertyValues(java.lang.Object, java.lang.Object[]);

    public java.lang.Object[] getPropertyValues(java.lang.Object)
    {
        java.lang.Object[] r2;
        int $i0;
        com.mycila.inject.internal.cglib.beans.BulkBean r0;
        java.lang.String[] $r1;
        java.lang.Object r3;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] getters>;

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.Object)[$i0];

        virtualinvoke r0.<com.mycila.inject.internal.cglib.beans.BulkBean: void getPropertyValues(java.lang.Object,java.lang.Object[])>(r3, r2);

        return r2;
    }

    public java.lang.Class[] getPropertyTypes()
    {
        java.lang.Class[] $r1, $r3, $r4;
        com.mycila.inject.internal.cglib.beans.BulkBean r0;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class[] types>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.Class[]) $r2;

        $r4 = (java.lang.Class[]) $r3;

        return $r4;
    }

    public java.lang.String[] getGetters()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean r0;
        java.lang.String[] $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] getters>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public java.lang.String[] getSetters()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean r0;
        java.lang.String[] $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.cglib.beans.BulkBean;

        $r1 = r0.<com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.String[] setters>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public static com.mycila.inject.internal.cglib.beans.BulkBean create(java.lang.Class, java.lang.String[], java.lang.String[], java.lang.Class[])
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$Generator $r0;
        java.lang.Class[] r4;
        java.lang.Class r1;
        java.lang.String[] r2, r3;
        com.mycila.inject.internal.cglib.beans.BulkBean $r5;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.Class[];

        $r0 = new com.mycila.inject.internal.cglib.beans.BulkBean$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void setTarget(java.lang.Class)>(r1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void setGetters(java.lang.String[])>(r2);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void setSetters(java.lang.String[])>(r3);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: void setTypes(java.lang.Class[])>(r4);

        $r5 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.beans.BulkBean$Generator: com.mycila.inject.internal.cglib.beans.BulkBean create()>();

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey access$000()
    {
        com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey $r0;

        $r0 = <com.mycila.inject.internal.cglib.beans.BulkBean: com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey KEY_FACTORY>;

        return $r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r1;
        com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey $r2;
        java.lang.Class $r0, $r3;

        $r0 = <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean$BulkBeanKey>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey");

        <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean$BulkBeanKey> = $r3;

        goto label2;

     label1:
        $r3 = <com.mycila.inject.internal.cglib.beans.BulkBean: java.lang.Class class$net$sf$cglib$beans$BulkBean$BulkBeanKey>;

     label2:
        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class)>($r3);

        $r2 = (com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey) $r1;

        <com.mycila.inject.internal.cglib.beans.BulkBean: com.mycila.inject.internal.cglib.beans.BulkBean$BulkBeanKey KEY_FACTORY> = $r2;

        return;
    }
}
