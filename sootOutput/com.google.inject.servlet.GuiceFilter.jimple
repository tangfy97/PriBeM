public class com.google.inject.servlet.GuiceFilter extends java.lang.Object implements javax.servlet.Filter
{
    static final java.lang.ThreadLocal localContext;
    static volatile com.google.inject.servlet.FilterPipeline pipeline;
    private final com.google.inject.servlet.FilterPipeline injectedPipeline;
    static volatile java.lang.ref.WeakReference servletContext;
    private static final java.lang.String MULTIPLE_INJECTORS_WARNING;

    public void <init>()
    {
        com.google.inject.servlet.GuiceFilter r0;

        r0 := @this: com.google.inject.servlet.GuiceFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline> = null;

        return;
    }

    static void setPipeline(com.google.inject.servlet.FilterPipeline)
    {
        com.google.inject.servlet.FilterPipeline $r0, r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        java.util.logging.Logger $r4;
        boolean $z0;

        r1 := @parameter0: com.google.inject.servlet.FilterPipeline;

        $r0 = <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline>;

        $z0 = $r0 instanceof com.google.inject.servlet.ManagedFilterPipeline;

        if $z0 == 0 goto label1;

        $r2 = class "Lcom/google/inject/servlet/GuiceFilter;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r3);

        $r5 = <com.google.inject.servlet.GuiceFilter: java.lang.String MULTIPLE_INJECTORS_WARNING>;

        virtualinvoke $r4.<java.util.logging.Logger: void warning(java.lang.String)>($r5);

     label1:
        <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline> = r1;

        return;
    }

    static void reset()
    {
        com.google.inject.servlet.DefaultFilterPipeline $r0;

        $r0 = new com.google.inject.servlet.DefaultFilterPipeline;

        specialinvoke $r0.<com.google.inject.servlet.DefaultFilterPipeline: void <init>()>();

        <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline> = $r0;

        return;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        java.lang.Throwable $r13;
        javax.servlet.FilterChain r11;
        javax.servlet.http.HttpServletRequest $r9;
        com.google.inject.servlet.FilterPipeline $r4, $r15;
        java.lang.ThreadLocal $r0, $r10, $r12, $r14;
        javax.servlet.ServletRequest r6;
        javax.servlet.http.HttpServletResponse $r8;
        com.google.inject.servlet.GuiceFilter r3;
        javax.servlet.ServletResponse r7;
        java.lang.Object $r1;
        com.google.inject.servlet.GuiceFilter$Context r2, $r5;

        r3 := @this: com.google.inject.servlet.GuiceFilter;

        r6 := @parameter0: javax.servlet.ServletRequest;

        r7 := @parameter1: javax.servlet.ServletResponse;

        r11 := @parameter2: javax.servlet.FilterChain;

        $r0 = <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.google.inject.servlet.GuiceFilter$Context) $r1;

        $r4 = r3.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        if null == $r4 goto label1;

        $r15 = r3.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        goto label2;

     label1:
        $r15 = <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline>;

     label2:
        $r10 = <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext>;

        $r5 = new com.google.inject.servlet.GuiceFilter$Context;

        $r9 = (javax.servlet.http.HttpServletRequest) r6;

        $r8 = (javax.servlet.http.HttpServletResponse) r7;

        specialinvoke $r5.<com.google.inject.servlet.GuiceFilter$Context: void <init>(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r9, $r8);

        virtualinvoke $r10.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5);

        interfaceinvoke $r15.<com.google.inject.servlet.FilterPipeline: void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>(r6, r7, r11);

     label3:
        $r12 = <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext>;

        virtualinvoke $r12.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        goto label6;

     label4:
        $r13 := @caughtexception;

     label5:
        $r14 = <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext>;

        virtualinvoke $r14.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        throw $r13;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static javax.servlet.http.HttpServletRequest getRequest()
    {
        javax.servlet.http.HttpServletRequest $r1;
        com.google.inject.servlet.GuiceFilter$Context $r0;

        $r0 = staticinvoke <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.GuiceFilter$Context getContext()>();

        $r1 = virtualinvoke $r0.<com.google.inject.servlet.GuiceFilter$Context: javax.servlet.http.HttpServletRequest getRequest()>();

        return $r1;
    }

    static javax.servlet.http.HttpServletResponse getResponse()
    {
        javax.servlet.http.HttpServletResponse $r1;
        com.google.inject.servlet.GuiceFilter$Context $r0;

        $r0 = staticinvoke <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.GuiceFilter$Context getContext()>();

        $r1 = virtualinvoke $r0.<com.google.inject.servlet.GuiceFilter$Context: javax.servlet.http.HttpServletResponse getResponse()>();

        return $r1;
    }

    static javax.servlet.ServletContext getServletContext()
    {
        java.lang.Object $r1;
        javax.servlet.ServletContext $r2;
        java.lang.ref.WeakReference $r0;

        $r0 = <com.google.inject.servlet.GuiceFilter: java.lang.ref.WeakReference servletContext>;

        $r1 = virtualinvoke $r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r2 = (javax.servlet.ServletContext) $r1;

        return $r2;
    }

    static com.google.inject.servlet.GuiceFilter$Context getContext()
    {
        java.lang.ThreadLocal $r0;
        com.google.inject.OutOfScopeException $r3;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        java.lang.Class $r6;
        java.lang.String $r7, $r10;
        com.google.inject.servlet.GuiceFilter$Context r2;

        $r0 = <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.google.inject.servlet.GuiceFilter$Context) $r1;

        if r2 != null goto label1;

        $r3 = new com.google.inject.OutOfScopeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access scoped object. Either we are not currently inside an HTTP Servlet request, or you may have forgotten to apply ");

        $r6 = class "Lcom/google/inject/servlet/GuiceFilter;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a servlet filter for this request.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.google.inject.OutOfScopeException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        return r2;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        com.google.inject.servlet.FilterPipeline $r4, $r5;
        javax.servlet.FilterConfig r0;
        com.google.inject.servlet.GuiceFilter r3;
        javax.servlet.ServletContext $r1;
        java.lang.ref.WeakReference $r2;

        r3 := @this: com.google.inject.servlet.GuiceFilter;

        r0 := @parameter0: javax.servlet.FilterConfig;

        $r1 = interfaceinvoke r0.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        <com.google.inject.servlet.GuiceFilter: java.lang.ref.WeakReference servletContext> = $r2;

        $r4 = r3.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        if null == $r4 goto label1;

        $r5 = r3.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        goto label2;

     label1:
        $r5 = <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline>;

     label2:
        interfaceinvoke $r5.<com.google.inject.servlet.FilterPipeline: void initPipeline(javax.servlet.ServletContext)>($r1);

        return;
    }

    public void destroy()
    {
        java.lang.Throwable $r3;
        com.google.inject.servlet.FilterPipeline $r1, $r5;
        com.google.inject.servlet.GuiceFilter r0;
        java.lang.ref.WeakReference $r2, $r4;

        r0 := @this: com.google.inject.servlet.GuiceFilter;

     label1:
        $r1 = r0.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        if null == $r1 goto label2;

        $r5 = r0.<com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline injectedPipeline>;

        goto label3;

     label2:
        $r5 = <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline>;

     label3:
        interfaceinvoke $r5.<com.google.inject.servlet.FilterPipeline: void destroyPipeline()>();

     label4:
        staticinvoke <com.google.inject.servlet.GuiceFilter: void reset()>();

        $r2 = <com.google.inject.servlet.GuiceFilter: java.lang.ref.WeakReference servletContext>;

        virtualinvoke $r2.<java.lang.ref.WeakReference: void clear()>();

        goto label7;

     label5:
        $r3 := @caughtexception;

     label6:
        staticinvoke <com.google.inject.servlet.GuiceFilter: void reset()>();

        $r4 = <com.google.inject.servlet.GuiceFilter: java.lang.ref.WeakReference servletContext>;

        virtualinvoke $r4.<java.lang.ref.WeakReference: void clear()>();

        throw $r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        com.google.inject.servlet.DefaultFilterPipeline $r1;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r9, $r10, $r11;
        java.lang.Class $r5;
        java.lang.String $r6, $r12;
        java.lang.ref.WeakReference $r2;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <com.google.inject.servlet.GuiceFilter: java.lang.ThreadLocal localContext> = $r0;

        $r1 = new com.google.inject.servlet.DefaultFilterPipeline;

        specialinvoke $r1.<com.google.inject.servlet.DefaultFilterPipeline: void <init>()>();

        <com.google.inject.servlet.GuiceFilter: com.google.inject.servlet.FilterPipeline pipeline> = $r1;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(null);

        <com.google.inject.servlet.GuiceFilter: java.lang.ref.WeakReference servletContext> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple Servlet injectors detected. This is a warning indicating that you have more than one ");

        $r5 = class "Lcom/google/inject/servlet/GuiceFilter;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in your web application. If this is deliberate, you may safely ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignore this message. If this is NOT deliberate however, ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("your application may not work as expected.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.google.inject.servlet.GuiceFilter: java.lang.String MULTIPLE_INJECTORS_WARNING> = $r12;

        return;
    }
}
