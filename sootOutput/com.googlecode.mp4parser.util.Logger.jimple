public abstract class com.googlecode.mp4parser.util.Logger extends java.lang.Object
{

    public void <init>()
    {
        com.googlecode.mp4parser.util.Logger r0;

        r0 := @this: com.googlecode.mp4parser.util.Logger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.googlecode.mp4parser.util.Logger getLogger(java.lang.Class)
    {
        com.googlecode.mp4parser.util.AndroidLogger $r4;
        java.lang.Class r2;
        java.lang.String $r0, $r3, $r5;
        boolean $z0;
        com.googlecode.mp4parser.util.JuliLogger $r1;

        r2 := @parameter0: java.lang.Class;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.name");

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Dalvik");

        if $z0 == 0 goto label1;

        $r4 = new com.googlecode.mp4parser.util.AndroidLogger;

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r4.<com.googlecode.mp4parser.util.AndroidLogger: void <init>(java.lang.String)>($r5);

        return $r4;

     label1:
        $r1 = new com.googlecode.mp4parser.util.JuliLogger;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r1.<com.googlecode.mp4parser.util.JuliLogger: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public abstract void logDebug(java.lang.String);

    public abstract void logWarn(java.lang.String);

    public abstract void logError(java.lang.String);
}
