class thredds.cataloggen.CatalogBuilderHelper extends java.lang.Object
{

    void <init>()
    {
        thredds.cataloggen.CatalogBuilderHelper r0;

        r0 := @this: thredds.cataloggen.CatalogBuilderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static thredds.crawlabledataset.CrawlableDataset verifyDescendantDataset(thredds.crawlabledataset.CrawlableDataset, java.lang.String, thredds.crawlabledataset.CrawlableDatasetFilter)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        thredds.crawlabledataset.CrawlableDataset r0, $r8, r27;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24;
        java.lang.String[] $r6;
        thredds.crawlabledataset.CrawlableDatasetFilter r9;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r7, $r15, $r18, $r22, $r25, r26;
        java.lang.IllegalArgumentException $r10, $r19;

        r0 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        r1 := @parameter1: java.lang.String;

        r9 := @parameter2: thredds.crawlabledataset.CrawlableDatasetFilter;

        $z0 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z0 != 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ancestor dataset <");

        $r22 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not a collection.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label1:
        $r2 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z1 != 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset path <");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not descendant of given dataset <");

        $r15 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != $i1 goto label3;

        return r0;

     label3:
        $r4 = interfaceinvoke r0.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);

        r26 = $r5;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z2 == 0 goto label4;

        r26 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        $r6 = virtualinvoke r26.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        r27 = r0;

        i3 = 0;

     label5:
        $i4 = lengthof $r6;

        if i3 >= $i4 goto label7;

        $r7 = $r6[i3];

        $r8 = interfaceinvoke r27.<thredds.crawlabledataset.CrawlableDataset: thredds.crawlabledataset.CrawlableDataset getDescendant(java.lang.String)>($r7);

        r27 = $r8;

        if r9 == null goto label6;

        $z4 = interfaceinvoke r9.<thredds.crawlabledataset.CrawlableDatasetFilter: boolean accept(thredds.crawlabledataset.CrawlableDataset)>($r8);

        if $z4 != 0 goto label6;

        return null;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        $z3 = interfaceinvoke r27.<thredds.crawlabledataset.CrawlableDataset: boolean exists()>();

        if $z3 != 0 goto label8;

        return null;

     label8:
        return r27;
    }

    static org.jdom.Document convertCatalogToDocument(thredds.catalog.InvCatalog)
    {
        org.jdom.Document $r5;
        thredds.catalog.InvCatalogImpl $r4;
        thredds.catalog.InvCatalog r3;
        thredds.catalog.InvCatalogConvertIF $r1;
        thredds.catalog.parser.jdom.InvCatalogFactory10 r2;
        thredds.catalog.InvCatalogFactory $r0;

        r3 := @parameter0: thredds.catalog.InvCatalog;

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(0);

        $r1 = virtualinvoke $r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF getCatalogConverter(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0");

        r2 = (thredds.catalog.parser.jdom.InvCatalogFactory10) $r1;

        $r4 = (thredds.catalog.InvCatalogImpl) r3;

        $r5 = virtualinvoke r2.<thredds.catalog.parser.jdom.InvCatalogFactory10: org.jdom.Document writeCatalog(thredds.catalog.InvCatalogImpl)>($r4);

        return $r5;
    }

    static java.lang.String convertCatalogToString(thredds.catalog.InvCatalog)
    {
        thredds.catalog.InvCatalogImpl $r2;
        thredds.catalog.InvCatalog r1;
        java.io.IOException $r4;
        java.lang.String $r3;
        thredds.catalog.InvCatalogFactory $r0;

        r1 := @parameter0: thredds.catalog.InvCatalog;

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(0);

     label1:
        $r2 = (thredds.catalog.InvCatalogImpl) r1;

        $r3 = virtualinvoke $r0.<thredds.catalog.InvCatalogFactory: java.lang.String writeXML(thredds.catalog.InvCatalogImpl)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
