class com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap extends com.mycila.inject.internal.guava.collect.StandardTable$RowMap implements java.util.SortedMap
{
    final com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r0;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.StandardRowSortedTable;

        r0.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.StandardTable$RowMap: void <init>(com.mycila.inject.internal.guava.collect.StandardTable)>(r1);

        return;
    }

    public java.util.Comparator comparator()
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r0;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r1;
        java.util.Comparator $r3;
        java.util.SortedMap $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Comparator comparator()>();

        return $r3;
    }

    public java.lang.Object firstKey()
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r0;
        java.lang.Object $r3;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r1;
        java.util.SortedMap $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object firstKey()>();

        return $r3;
    }

    public java.lang.Object lastKey()
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r0;
        java.lang.Object $r3;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r1;
        java.util.SortedMap $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object lastKey()>();

        return $r3;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r2;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r1, $r3, $r6;
        com.mycila.inject.internal.guava.base.Supplier $r7;
        java.lang.Object r0;
        java.util.SortedMap $r4, $r5, $r8;

        r2 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.mycila.inject.internal.guava.collect.StandardRowSortedTable;

        $r3 = r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r0);

        $r6 = r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r7 = $r6.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: com.mycila.inject.internal.guava.base.Supplier factory>;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Supplier)>($r5, $r7);

        $r8 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap rowMap()>();

        return $r8;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r3;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r2, $r4, $r7;
        com.mycila.inject.internal.guava.base.Supplier $r8;
        java.lang.Object r0, r1;
        java.util.SortedMap $r5, $r6, $r9;

        r3 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r2 = new com.mycila.inject.internal.guava.collect.StandardRowSortedTable;

        $r4 = r3.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r5 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r0, r1);

        $r7 = r3.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r8 = $r7.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: com.mycila.inject.internal.guava.base.Supplier factory>;

        specialinvoke $r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Supplier)>($r6, $r8);

        $r9 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap rowMap()>();

        return $r9;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r2;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable $r1, $r3, $r6;
        com.mycila.inject.internal.guava.base.Supplier $r7;
        java.lang.Object r0;
        java.util.SortedMap $r4, $r5, $r8;

        r2 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.mycila.inject.internal.guava.collect.StandardRowSortedTable;

        $r3 = r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap access$100(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r0);

        $r6 = r2.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: com.mycila.inject.internal.guava.collect.StandardRowSortedTable this$0>;

        $r7 = $r6.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: com.mycila.inject.internal.guava.base.Supplier factory>;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: void <init>(java.util.SortedMap,com.mycila.inject.internal.guava.base.Supplier)>($r5, $r7);

        $r8 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable: java.util.SortedMap rowMap()>();

        return $r8;
    }

    void <init>(com.mycila.inject.internal.guava.collect.StandardRowSortedTable, com.mycila.inject.internal.guava.collect.StandardRowSortedTable$1)
    {
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap r0;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable r1;
        com.mycila.inject.internal.guava.collect.StandardRowSortedTable$1 r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.StandardRowSortedTable;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.StandardRowSortedTable$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.StandardRowSortedTable$RowSortedMap: void <init>(com.mycila.inject.internal.guava.collect.StandardRowSortedTable)>(r1);

        return;
    }
}
