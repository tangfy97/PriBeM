public interface  org.waveprotocol.wave.client.editor.event.EditorInteractor extends java.lang.Object
{

    public abstract boolean notifyListeners(org.waveprotocol.wave.client.common.util.SignalEvent);

    public abstract boolean isEditing();

    public abstract boolean isTyping();

    public abstract boolean isExpectingMutationEvents();

    public abstract boolean shouldIgnoreMutations();

    public abstract boolean notifyTypingExtractor(org.waveprotocol.wave.model.document.util.Point, boolean, boolean);

    public abstract void forceFlush();

    public abstract org.waveprotocol.wave.model.document.util.Point deleteRange(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.Point, boolean);

    public abstract org.waveprotocol.wave.model.document.util.Point insertText(org.waveprotocol.wave.model.document.util.Point, java.lang.String, boolean);

    public abstract org.waveprotocol.wave.client.editor.content.ContentElement findElementWrapper(com.google.gwt.dom.client.Element);

    public abstract org.waveprotocol.wave.model.document.util.Point normalizePoint(org.waveprotocol.wave.model.document.util.Point);

    public abstract org.waveprotocol.wave.client.editor.content.FocusedContentRange getSelectionPoints();

    public abstract boolean hasContentSelection();

    public abstract boolean selectionIsOrdered();

    public abstract void setCaret(org.waveprotocol.wave.model.document.util.Point);

    public abstract void noteWebkitEndOfLinkHackOccurred(com.google.gwt.dom.client.Text);

    public abstract org.waveprotocol.wave.model.document.util.FocusedPointRange getHtmlSelection();

    public abstract void clearCaretAnnotations();

    public abstract void deleteWordStartingAt(org.waveprotocol.wave.model.document.util.Point);

    public abstract void deleteWordEndingAt(org.waveprotocol.wave.model.document.util.Point);

    public abstract void compositionStart(org.waveprotocol.wave.model.document.util.Point);

    public abstract void compositionUpdate();

    public abstract org.waveprotocol.wave.client.editor.content.FocusedContentRange compositionEnd();

    public abstract void checkpoint(org.waveprotocol.wave.client.editor.content.FocusedContentRange);

    public abstract void rebiasSelection(org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection);
}
