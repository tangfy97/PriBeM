class org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector extends org.apache.lucene.search.TopFieldCollector
{
    final org.apache.lucene.search.FieldComparator[] comparators;
    final int[] reverseMul;
    final org.apache.lucene.search.FieldValueHitQueue queue;

    public void <init>(org.apache.lucene.search.FieldValueHitQueue, int, boolean)
    {
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector r0;
        int[] $r3;
        int i0;
        org.apache.lucene.search.FieldComparator[] $r2;
        org.apache.lucene.search.FieldValueHitQueue r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        r1 := @parameter0: org.apache.lucene.search.FieldValueHitQueue;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.search.TopFieldCollector: void <init>(org.apache.lucene.util.PriorityQueue,int,boolean,org.apache.lucene.search.TopFieldCollector$1)>(r1, i0, z0, null);

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue queue> = r1;

        $r2 = virtualinvoke r1.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] getComparators()>();

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators> = $r2;

        $r3 = virtualinvoke r1.<org.apache.lucene.search.FieldValueHitQueue: int[] getReverseMul()>();

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int[] reverseMul> = $r3;

        return;
    }

    final void updateBottom(int)
    {
        org.apache.lucene.search.FieldValueHitQueue$Entry $r1, $r4;
        org.apache.lucene.util.PriorityQueue $r2;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector r0;
        int i0, $i1, $i2;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom>;

        $i1 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int docBase>;

        $i2 = $i1 + i0;

        $r1.<org.apache.lucene.search.FieldValueHitQueue$Entry: int doc> = $i2;

        $r2 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.util.PriorityQueue pq>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PriorityQueue: java.lang.Object updateTop()>();

        $r4 = (org.apache.lucene.search.FieldValueHitQueue$Entry) $r3;

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom> = $r4;

        return;
    }

    public void collect(int) throws java.io.IOException
    {
        int[] $r8;
        boolean $z0, $z1;
        org.apache.lucene.search.FieldComparator[] $r1, $r2, $r3, $r6, $r9, $r11, $r12, $r13, $r14, $r17;
        org.apache.lucene.search.FieldValueHitQueue$Entry $r4, $r15, $r18;
        org.apache.lucene.search.FieldComparator $r5, $r7, $r10, $r16, $r19;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector r0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        i4 := @parameter0: int;

        $i0 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int totalHits>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int totalHits> = $i1;

        $z0 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: boolean queueFull>;

        if $z0 == 0 goto label10;

        i16 = 0;

     label01:
        $r8 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int[] reverseMul>;

        $i7 = $r8[i16];

        $r9 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r10 = $r9[i16];

        $i8 = virtualinvoke $r10.<org.apache.lucene.search.FieldComparator: int compareBottom(int)>(i4);

        $i11 = $i7 * $i8;

        if $i11 >= 0 goto label02;

        return;

     label02:
        if $i11 <= 0 goto label03;

        goto label05;

     label03:
        $r11 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i9 = lengthof $r11;

        $i10 = $i9 - 1;

        if i16 != $i10 goto label04;

        return;

     label04:
        i16 = i16 + 1;

        goto label01;

     label05:
        i17 = 0;

     label06:
        $r12 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i12 = lengthof $r12;

        if i17 >= $i12 goto label07;

        $r17 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r19 = $r17[i17];

        $r18 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom>;

        $i15 = $r18.<org.apache.lucene.search.FieldValueHitQueue$Entry: int slot>;

        virtualinvoke $r19.<org.apache.lucene.search.FieldComparator: void copy(int,int)>($i15, i4);

        i17 = i17 + 1;

        goto label06;

     label07:
        virtualinvoke r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: void updateBottom(int)>(i4);

        i18 = 0;

     label08:
        $r13 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i13 = lengthof $r13;

        if i18 >= $i13 goto label09;

        $r14 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r16 = $r14[i18];

        $r15 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom>;

        $i14 = $r15.<org.apache.lucene.search.FieldValueHitQueue$Entry: int slot>;

        virtualinvoke $r16.<org.apache.lucene.search.FieldComparator: void setBottom(int)>($i14);

        i18 = i18 + 1;

        goto label08;

     label09:
        goto label14;

     label10:
        $i2 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int totalHits>;

        i19 = $i2 - 1;

        i20 = 0;

     label11:
        $r1 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i3 = lengthof $r1;

        if i20 >= $i3 goto label12;

        $r6 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r7 = $r6[i20];

        virtualinvoke $r7.<org.apache.lucene.search.FieldComparator: void copy(int,int)>(i19, i4);

        i20 = i20 + 1;

        goto label11;

     label12:
        virtualinvoke r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: void add(int,int,float)>(i19, i4, #NaNF);

        $z1 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: boolean queueFull>;

        if $z1 == 0 goto label14;

        i21 = 0;

     label13:
        $r2 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i5 = lengthof $r2;

        if i21 >= $i5 goto label14;

        $r3 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r5 = $r3[i21];

        $r4 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom>;

        $i6 = $r4.<org.apache.lucene.search.FieldValueHitQueue$Entry: int slot>;

        virtualinvoke $r5.<org.apache.lucene.search.FieldComparator: void setBottom(int)>($i6);

        i21 = i21 + 1;

        goto label13;

     label14:
        return;
    }

    public void setNextReader(org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.search.FieldComparator $r4, $r6;
        org.apache.lucene.search.FieldValueHitQueue $r5;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector r0;
        int $i0, $i1, i2;
        org.apache.lucene.search.FieldComparator[] $r2, $r3;
        org.apache.lucene.index.AtomicReaderContext r1;

        r0 := @this: org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        $i0 = r1.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: int docBase> = $i0;

        i2 = 0;

     label1:
        $r2 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i1 = lengthof $r2;

        if i2 >= $i1 goto label2;

        $r5 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldValueHitQueue queue>;

        $r3 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r4 = $r3[i2];

        $r6 = virtualinvoke $r4.<org.apache.lucene.search.FieldComparator: org.apache.lucene.search.FieldComparator setNextReader(org.apache.lucene.index.AtomicReaderContext)>(r1);

        virtualinvoke $r5.<org.apache.lucene.search.FieldValueHitQueue: void setComparator(int,org.apache.lucene.search.FieldComparator)>(i2, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void setScorer(org.apache.lucene.search.Scorer) throws java.io.IOException
    {
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector r0;
        org.apache.lucene.search.Scorer r3;
        int $i0, i1;
        org.apache.lucene.search.FieldComparator[] $r1, $r2;
        org.apache.lucene.search.FieldComparator $r4;

        r0 := @this: org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        r3 := @parameter0: org.apache.lucene.search.Scorer;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: org.apache.lucene.search.FieldComparator[] comparators>;

        $r4 = $r2[i1];

        virtualinvoke $r4.<org.apache.lucene.search.FieldComparator: void setScorer(org.apache.lucene.search.Scorer)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
