public final class com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    private final java.util.List movedKeys;
    protected int index;
    final int initialChanges;
    final com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container;
    final com.hp.hpl.jena.mem.HashCommon this$0;

    protected void <init>(com.hp.hpl.jena.mem.HashCommon, int, com.hp.hpl.jena.mem.HashCommon$NotifyEmpty, java.util.List)
    {
        java.util.List r2;
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty r3;
        int i0;
        com.hp.hpl.jena.mem.HashCommon r1;
        com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator r0;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator;

        r1 := @parameter0: com.hp.hpl.jena.mem.HashCommon;

        i0 := @parameter1: int;

        r3 := @parameter2: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty;

        r2 := @parameter3: java.util.List;

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int index> = 0;

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: java.util.List movedKeys> = r2;

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int initialChanges> = i0;

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container> = r3;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.mem.HashCommon $r1, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r10;
        boolean $z0;
        java.util.List $r2;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        java.util.ConcurrentModificationException $r3;
        com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator r0;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r3 = new java.util.ConcurrentModificationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("changes ");

        $r6 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i4 = $r6.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > initialChanges ");

        $i5 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int initialChanges>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        $i2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int index>;

        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: java.util.List movedKeys>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 >= $i3 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.mem.HashCommon $r1;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        java.util.ConcurrentModificationException $r4;
        com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: java.lang.Object noElements(java.lang.String)>("");

     label2:
        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: java.util.List movedKeys>;

        $i2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int index>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int index> = $i3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        return $r3;
    }

    public void remove()
    {
        com.hp.hpl.jena.mem.HashCommon$NotifyEmpty $r6;
        com.hp.hpl.jena.mem.HashCommon $r1, $r3, $r5;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r4;
        java.util.ConcurrentModificationException $r7;
        com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator r0;

        r0 := @this: com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator;

        $r1 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i1 = $r1.<com.hp.hpl.jena.mem.HashCommon: int changes>;

        $i0 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int initialChanges>;

        if $i1 <= $i0 goto label1;

        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label1:
        $r3 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $r2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: java.util.List movedKeys>;

        $i2 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: int index>;

        $i3 = $i2 - 1;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        staticinvoke <com.hp.hpl.jena.mem.HashCommon: void access$000(com.hp.hpl.jena.mem.HashCommon,java.lang.Object)>($r3, $r4);

        $r5 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon this$0>;

        $i4 = $r5.<com.hp.hpl.jena.mem.HashCommon: int size>;

        if $i4 != 0 goto label2;

        $r6 = r0.<com.hp.hpl.jena.mem.HashCommon$MovedKeysIterator: com.hp.hpl.jena.mem.HashCommon$NotifyEmpty container>;

        interfaceinvoke $r6.<com.hp.hpl.jena.mem.HashCommon$NotifyEmpty: void emptied()>();

     label2:
        return;
    }
}
