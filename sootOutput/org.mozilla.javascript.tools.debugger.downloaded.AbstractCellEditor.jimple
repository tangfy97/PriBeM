public class org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor extends java.lang.Object implements javax.swing.CellEditor
{
    protected javax.swing.event.EventListenerList listenerList;
    static java.lang.Class class$javax$swing$event$CellEditorListener;

    public void <init>()
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;
        javax.swing.event.EventListenerList $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.swing.event.EventListenerList;

        specialinvoke $r1.<javax.swing.event.EventListenerList: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: javax.swing.event.EventListenerList listenerList> = $r1;

        return;
    }

    public java.lang.Object getCellEditorValue()
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        return null;
    }

    public boolean isCellEditable(java.util.EventObject)
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;
        java.util.EventObject r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        r1 := @parameter0: java.util.EventObject;

        return 1;
    }

    public boolean shouldSelectCell(java.util.EventObject)
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;
        java.util.EventObject r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        r1 := @parameter0: java.util.EventObject;

        return 0;
    }

    public boolean stopCellEditing()
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        return 1;
    }

    public void cancelCellEditing()
    {
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        return;
    }

    public void addCellEditorListener(javax.swing.event.CellEditorListener)
    {
        javax.swing.event.EventListenerList $r3;
        javax.swing.event.CellEditorListener r2;
        java.lang.Class $r1, $r4;
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        r2 := @parameter0: javax.swing.event.CellEditorListener;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: javax.swing.event.EventListenerList listenerList>;

        $r1 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$(java.lang.String)>("javax.swing.event.CellEditorListener");

        <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener> = $r4;

        goto label2;

     label1:
        $r4 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

     label2:
        virtualinvoke $r3.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>($r4, r2);

        return;
    }

    public void removeCellEditorListener(javax.swing.event.CellEditorListener)
    {
        javax.swing.event.EventListenerList $r3;
        javax.swing.event.CellEditorListener r2;
        java.lang.Class $r1, $r4;
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        r2 := @parameter0: javax.swing.event.CellEditorListener;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: javax.swing.event.EventListenerList listenerList>;

        $r1 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$(java.lang.String)>("javax.swing.event.CellEditorListener");

        <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener> = $r4;

        goto label2;

     label1:
        $r4 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

     label2:
        virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r4, r2);

        return;
    }

    protected void fireEditingStopped()
    {
        javax.swing.event.ChangeEvent $r9;
        java.lang.Object[] $r2;
        javax.swing.event.CellEditorListener $r7;
        javax.swing.event.EventListenerList $r1;
        int $i0, $i1, i2, $i4;
        java.lang.Class $r3, $r8;
        java.lang.Object $r4, $r5;
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: javax.swing.event.EventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>();

        $i0 = lengthof $r2;

        i2 = $i0 - 2;

     label1:
        if i2 < 0 goto label5;

        $r4 = $r2[i2];

        $r3 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

        if $r3 != null goto label2;

        $r8 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$(java.lang.String)>("javax.swing.event.CellEditorListener");

        <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener> = $r8;

        goto label3;

     label2:
        $r8 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

     label3:
        if $r4 != $r8 goto label4;

        $i1 = i2 + 1;

        $r5 = $r2[$i1];

        $r7 = (javax.swing.event.CellEditorListener) $r5;

        $r9 = new javax.swing.event.ChangeEvent;

        specialinvoke $r9.<javax.swing.event.ChangeEvent: void <init>(java.lang.Object)>(r0);

        interfaceinvoke $r7.<javax.swing.event.CellEditorListener: void editingStopped(javax.swing.event.ChangeEvent)>($r9);

     label4:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label1;

     label5:
        return;
    }

    protected void fireEditingCanceled()
    {
        javax.swing.event.ChangeEvent $r9;
        java.lang.Object[] $r2;
        javax.swing.event.CellEditorListener $r7;
        javax.swing.event.EventListenerList $r1;
        int $i0, $i1, i2, $i4;
        java.lang.Class $r3, $r8;
        java.lang.Object $r4, $r5;
        org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: javax.swing.event.EventListenerList listenerList>;

        $r2 = virtualinvoke $r1.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>();

        $i0 = lengthof $r2;

        i2 = $i0 - 2;

     label1:
        if i2 < 0 goto label5;

        $r4 = $r2[i2];

        $r3 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

        if $r3 != null goto label2;

        $r8 = staticinvoke <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$(java.lang.String)>("javax.swing.event.CellEditorListener");

        <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener> = $r8;

        goto label3;

     label2:
        $r8 = <org.mozilla.javascript.tools.debugger.downloaded.AbstractCellEditor: java.lang.Class class$javax$swing$event$CellEditorListener>;

     label3:
        if $r4 != $r8 goto label4;

        $i1 = i2 + 1;

        $r5 = $r2[$i1];

        $r7 = (javax.swing.event.CellEditorListener) $r5;

        $r9 = new javax.swing.event.ChangeEvent;

        specialinvoke $r9.<javax.swing.event.ChangeEvent: void <init>(java.lang.Object)>(r0);

        interfaceinvoke $r7.<javax.swing.event.CellEditorListener: void editingCanceled(javax.swing.event.ChangeEvent)>($r9);

     label4:
        $i4 = (int) -2;

        i2 = i2 + $i4;

        goto label1;

     label5:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
