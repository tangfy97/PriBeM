public class org.eclipse.jetty.util.MultiPartInputStream extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final javax.servlet.MultipartConfigElement __DEFAULT_MULTIPART_CONFIG;
    protected java.io.InputStream _in;
    protected javax.servlet.MultipartConfigElement _config;
    protected java.lang.String _contentType;
    protected org.eclipse.jetty.util.MultiMap _parts;
    protected java.io.File _tmpDir;
    protected java.io.File _contextTmpDir;
    protected boolean _deleteOnExit;

    public void <init>(java.io.InputStream, java.lang.String, javax.servlet.MultipartConfigElement, java.io.File)
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        org.eclipse.jetty.util.ReadLineInputStream $r1;
        javax.servlet.MultipartConfigElement r4, $r7, $r8;
        java.io.File r5, $r6, $r9, $r11;
        java.lang.String r3, $r10, $r12;
        java.io.InputStream r2;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: javax.servlet.MultipartConfigElement;

        r5 := @parameter3: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.eclipse.jetty.util.ReadLineInputStream;

        specialinvoke $r1.<org.eclipse.jetty.util.ReadLineInputStream: void <init>(java.io.InputStream)>(r2);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in> = $r1;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType> = r3;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config> = r4;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir> = r5;

        $r6 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir>;

        if $r6 != null goto label1;

        $r11 = new java.io.File;

        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r12);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir> = $r11;

     label1:
        $r7 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        if $r7 != null goto label2;

        $r8 = new javax.servlet.MultipartConfigElement;

        $r9 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir>;

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r8.<javax.servlet.MultipartConfigElement: void <init>(java.lang.String)>($r10);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config> = $r8;

     label2:
        return;
    }

    public java.util.Collection getParsedParts()
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        java.util.Iterator $r5;
        org.eclipse.jetty.util.MultiMap $r1, $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r4;
        java.util.List $r7, $r8;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        if $r1 != null goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r8;

     label1:
        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.MultiMap: java.util.Collection values()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object,boolean)>($r6, 0);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        goto label2;

     label3:
        return $r4;
    }

    public void deleteParts() throws org.eclipse.jetty.util.MultiException
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart $r7;
        java.util.Iterator $r3;
        java.util.Collection $r1;
        org.eclipse.jetty.util.MultiMap $r4;
        java.lang.Exception $r8;
        javax.servlet.http.Part r6;
        java.lang.Object $r5;
        org.eclipse.jetty.util.MultiException $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: java.util.Collection getParsedParts()>();

        $r2 = new org.eclipse.jetty.util.MultiException;

        specialinvoke $r2.<org.eclipse.jetty.util.MultiException: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.servlet.http.Part) $r5;

     label2:
        $r7 = (org.eclipse.jetty.util.MultiPartInputStream$MultiPart) r6;

        virtualinvoke $r7.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void cleanUp()>();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r2.<org.eclipse.jetty.util.MultiException: void add(java.lang.Throwable)>($r8);

     label5:
        goto label1;

     label6:
        $r4 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        virtualinvoke $r4.<org.eclipse.jetty.util.MultiMap: void clear()>();

        virtualinvoke $r2.<org.eclipse.jetty.util.MultiException: void ifExceptionThrowMulti()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.util.Collection getParts() throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.util.MultiMap $r1;
        java.util.Collection $r2;
        java.util.ArrayList $r3;
        java.util.List $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: void parse()>();

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.util.MultiMap: java.util.Collection values()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object,boolean)>($r5, 0);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label1;

     label2:
        return $r3;
    }

    public javax.servlet.http.Part getPart(java.lang.String) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        javax.servlet.http.Part $r4;
        org.eclipse.jetty.util.MultiMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: void parse()>();

        $r2 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.MultiMap: java.lang.Object getValue(java.lang.Object,int)>(r1, 0);

        $r4 = (javax.servlet.http.Part) $r3;

        return $r4;
    }

    protected void parse() throws java.io.IOException, javax.servlet.ServletException
    {
        byte[] $r91;
        byte $b4, $b9, $b18, $b21, $b23;
        java.lang.StringBuilder $r34, $r36, $r37, $r50, $r52, $r53, $r84, $r85, $r88, $r89, $r107, $r108, $r112, $r119;
        org.eclipse.jetty.util.MultiPartInputStream$1 $r117;
        java.lang.Object[] $r68;
        long $l2, $l3, $l8, $l10, $l17, $l22, $l24, l26;
        org.eclipse.jetty.util.MultiMap $r1, $r103, $r104, $r111;
        java.io.IOException $r109, $r110, $r114, $r121;
        java.util.Locale $r27, $r61;
        org.eclipse.jetty.util.QuotedStringTokenizer $r115;
        javax.servlet.MultipartConfigElement $r5, $r7, $r11, $r14, $r24, $r31, $r35, $r43, $r47, $r51;
        org.eclipse.jetty.util.MultiPartInputStream$Base64InputStream $r116;
        org.eclipse.jetty.util.MultiPartInputStream r0;
        int $i0, $i1, $i5, $i6, $i7, i11, $i12, $i13, $i14, $i15, $i16, $i19, $i20, $i25, $i27, i28, i29, $i30, $i31, $i32, $i34, $i36, $i38, $i39, $i40, $i42, $i43, $i45, $i47, $i49, $i51;
        org.eclipse.jetty.util.log.Logger $r69;
        java.lang.Throwable $r80;
        java.lang.String $r3, $r4, $r6, $r8, $r9, $r12, $r16, $r17, $r22, $r23, $r25, $r26, $r28, $r29, $r30, $r38, $r40, $r41, $r54, $r59, $r60, $r62, $r67, $r71, $r72, $r73, $r74, $r75, $r76, r82, $r86, $r90, $r94, r95, $r96, r97, r98, r99, r100, r101;
        org.eclipse.jetty.util.ReadLineInputStream $r21, $r66, $r93;
        java.io.File $r15, $r77, $r78, $r79, $r81, $r105, $r106;
        java.lang.IllegalStateException $r113, $r120;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z16, z17, z18, z19, $z20, $z21, z22, z23;
        org.eclipse.jetty.util.MultiPartInputStream$MultiPart $r118;
        java.io.InputStream $r20, $r42, $r44, $r45, $r46, $r56, $r58, $r65, $r92;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        $r1 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        if $r1 == null goto label01;

        return;

     label01:
        l26 = 0L;

        $r104 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r104.<org.eclipse.jetty.util.MultiMap: void <init>()>();

        r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts> = $r104;

        $r3 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        if $r3 == null goto label02;

        $r4 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/form-data");

        if $z0 != 0 goto label03;

     label02:
        return;

     label03:
        $r5 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $r6 = virtualinvoke $r5.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        if $r6 != null goto label04;

        $r79 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir>;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir> = $r79;

        goto label07;

     label04:
        $r8 = "";

        $r7 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $r9 = virtualinvoke $r7.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label05;

        $r78 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir>;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir> = $r78;

        goto label07;

     label05:
        $r105 = new java.io.File;

        $r11 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $r12 = virtualinvoke $r11.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        specialinvoke $r105.<java.io.File: void <init>(java.lang.String)>($r12);

        $z2 = virtualinvoke $r105.<java.io.File: boolean isAbsolute()>();

        if $z2 == 0 goto label06;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir> = $r105;

        goto label07;

     label06:
        $r106 = new java.io.File;

        $r15 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _contextTmpDir>;

        $r14 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $r16 = virtualinvoke $r14.<javax.servlet.MultipartConfigElement: java.lang.String getLocation()>();

        specialinvoke $r106.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, $r16);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir> = $r106;

     label07:
        $r81 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir>;

        $z14 = virtualinvoke $r81.<java.io.File: boolean exists()>();

        if $z14 != 0 goto label08;

        $r77 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.File _tmpDir>;

        virtualinvoke $r77.<java.io.File: boolean mkdirs()>();

     label08:
        r82 = "";

        $r17 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        $i0 = virtualinvoke $r17.<java.lang.String: int indexOf(java.lang.String)>("boundary=");

        if $i0 < 0 goto label11;

        $r71 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        $i25 = virtualinvoke $r71.<java.lang.String: int indexOf(java.lang.String,int)>(";", $i0);

        if $i25 >= 0 goto label09;

        $r76 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        $i27 = virtualinvoke $r76.<java.lang.String: int length()>();

        goto label10;

     label09:
        $i27 = $i25;

     label10:
        $r72 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String _contentType>;

        $r73 = virtualinvoke $r72.<java.lang.String: java.lang.String substring(int,int)>($i0, $i27);

        $r74 = specialinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String value(java.lang.String,boolean)>($r73, 1);

        $r75 = virtualinvoke $r74.<java.lang.String: java.lang.String trim()>();

        r82 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String unquote(java.lang.String)>($r75);

     label11:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        $r91 = virtualinvoke $r90.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        $r92 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        $r93 = (org.eclipse.jetty.util.ReadLineInputStream) $r92;

        $r94 = virtualinvoke $r93.<org.eclipse.jetty.util.ReadLineInputStream: java.lang.String readLine()>();

        if $r94 != null goto label12;

        $r109 = new java.io.IOException;

        specialinvoke $r109.<java.io.IOException: void <init>(java.lang.String)>("Missing content for multipart request");

        throw $r109;

     label12:
        z15 = 0;

        r95 = virtualinvoke $r94.<java.lang.String: java.lang.String trim()>();

     label13:
        if r95 == null goto label17;

        $z13 = virtualinvoke r95.<java.lang.String: boolean equals(java.lang.Object)>($r86);

        if $z13 != 0 goto label17;

        if z15 != 0 goto label14;

        $r69 = <org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.log.Logger LOG>;

        $r68 = newarray (java.lang.Object)[0];

        interfaceinvoke $r69.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("Badly formatted multipart request", $r68);

        z15 = 1;

     label14:
        $r65 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        $r66 = (org.eclipse.jetty.util.ReadLineInputStream) $r65;

        $r67 = virtualinvoke $r66.<org.eclipse.jetty.util.ReadLineInputStream: java.lang.String readLine()>();

        if $r67 != null goto label15;

        $r96 = $r67;

        goto label16;

     label15:
        $r96 = virtualinvoke $r67.<java.lang.String: java.lang.String trim()>();

     label16:
        r95 = $r96;

        goto label13;

     label17:
        if r95 != null goto label18;

        $r110 = new java.io.IOException;

        specialinvoke $r110.<java.io.IOException: void <init>(java.lang.String)>("Missing initial multi part boundary");

        throw $r110;

     label18:
        z16 = 0;

        z23 = 0;

        z22 = 0;

        r97 = null;

        r98 = null;

        r99 = null;

     label19:
        if z22 != 0 goto label73;

        $r111 = new org.eclipse.jetty.util.MultiMap;

        specialinvoke $r111.<org.eclipse.jetty.util.MultiMap: void <init>()>();

     label20:
        $r20 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        $r21 = (org.eclipse.jetty.util.ReadLineInputStream) $r20;

        $r22 = virtualinvoke $r21.<org.eclipse.jetty.util.ReadLineInputStream: java.lang.String readLine()>();

        if $r22 != null goto label21;

        goto label73;

     label21:
        $r23 = "";

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z3 == 0 goto label22;

        goto label27;

     label22:
        $i1 = virtualinvoke $r22.<java.lang.String: int length()>();

        $l2 = (long) $i1;

        l26 = l26 + $l2;

        $r24 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l3 = virtualinvoke $r24.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $b4 = $l3 cmp 0L;

        $i31 = (int) $b4;

        if $i31 <= 0 goto label23;

        $r31 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l8 = virtualinvoke $r31.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $b9 = l26 cmp $l8;

        $i32 = (int) $b9;

        if $i32 <= 0 goto label23;

        $r113 = new java.lang.IllegalStateException;

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request exceeds maxRequestSize (");

        $r35 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l10 = virtualinvoke $r35.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r113.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r38);

        throw $r113;

     label23:
        $i5 = virtualinvoke $r22.<java.lang.String: int indexOf(int,int)>(58, 0);

        if $i5 <= 0 goto label26;

        $r25 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();

        $r27 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r28 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r27);

        $i6 = $i5 + 1;

        $i7 = virtualinvoke $r22.<java.lang.String: int length()>();

        $r29 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7);

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r111.<org.eclipse.jetty.util.MultiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r30);

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("content-disposition");

        if $z4 == 0 goto label24;

        r97 = $r30;

     label24:
        $z5 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("content-type");

        if $z5 == 0 goto label25;

        r98 = $r30;

     label25:
        $z6 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("content-transfer-encoding");

        if $z6 == 0 goto label26;

        r99 = $r30;

     label26:
        goto label20;

     label27:
        z17 = 0;

        if r97 != null goto label28;

        $r114 = new java.io.IOException;

        specialinvoke $r114.<java.io.IOException: void <init>(java.lang.String)>("Missing content-disposition");

        throw $r114;

     label28:
        $r115 = new org.eclipse.jetty.util.QuotedStringTokenizer;

        specialinvoke $r115.<org.eclipse.jetty.util.QuotedStringTokenizer: void <init>(java.lang.String,java.lang.String,boolean,boolean)>(r97, ";", 0, 1);

        r100 = null;

        r101 = null;

     label29:
        $z7 = virtualinvoke $r115.<org.eclipse.jetty.util.QuotedStringTokenizer: boolean hasMoreTokens()>();

        if $z7 == 0 goto label33;

        $r59 = virtualinvoke $r115.<org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String nextToken()>();

        $r60 = virtualinvoke $r59.<java.lang.String: java.lang.String trim()>();

        $r61 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r62 = virtualinvoke $r60.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r61);

        $z10 = virtualinvoke $r60.<java.lang.String: boolean startsWith(java.lang.String)>("form-data");

        if $z10 == 0 goto label30;

        z17 = 1;

        goto label32;

     label30:
        $z11 = virtualinvoke $r62.<java.lang.String: boolean startsWith(java.lang.String)>("name=");

        if $z11 == 0 goto label31;

        r100 = specialinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String value(java.lang.String,boolean)>($r60, 1);

        goto label32;

     label31:
        $z12 = virtualinvoke $r62.<java.lang.String: boolean startsWith(java.lang.String)>("filename=");

        if $z12 == 0 goto label32;

        r101 = specialinvoke r0.<org.eclipse.jetty.util.MultiPartInputStream: java.lang.String filenameValue(java.lang.String)>($r60);

     label32:
        goto label29;

     label33:
        if z17 != 0 goto label34;

        goto label19;

     label34:
        if r100 != null goto label35;

        goto label19;

     label35:
        $r40 = "base64";

        $z8 = virtualinvoke $r40.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r99);

        if $z8 == 0 goto label36;

        $r116 = new org.eclipse.jetty.util.MultiPartInputStream$Base64InputStream;

        $r58 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        specialinvoke $r116.<org.eclipse.jetty.util.MultiPartInputStream$Base64InputStream: void <init>(java.io.InputStream)>($r58);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in> = $r116;

        goto label37;

     label36:
        $r41 = "quoted-printable";

        $z9 = virtualinvoke $r41.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r99);

        if $z9 == 0 goto label37;

        $r117 = new org.eclipse.jetty.util.MultiPartInputStream$1;

        $r56 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        specialinvoke $r117.<org.eclipse.jetty.util.MultiPartInputStream$1: void <init>(org.eclipse.jetty.util.MultiPartInputStream,java.io.InputStream)>(r0, $r56);

        r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in> = $r117;

     label37:
        $r118 = new org.eclipse.jetty.util.MultiPartInputStream$MultiPart;

        specialinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void <init>(org.eclipse.jetty.util.MultiPartInputStream,java.lang.String,java.lang.String)>(r0, r100, r101);

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void setHeaders(org.eclipse.jetty.util.MultiMap)>($r111);

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void setContentType(java.lang.String)>(r98);

        $r103 = r0.<org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.MultiMap _parts>;

        virtualinvoke $r103.<org.eclipse.jetty.util.MultiMap: void add(java.lang.Object,java.lang.Object)>(r100, $r118);

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void open()>();

     label38:
        $i34 = (int) -2;

        i28 = $i34;

        z18 = 0;

        z19 = 0;

     label39:
        i29 = 0;

     label40:
        $i36 = (int) -2;

        if i28 == $i36 goto label41;

        $i30 = i28;

        goto label42;

     label41:
        $r42 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        $i30 = virtualinvoke $r42.<java.io.InputStream: int read()>();

     label42:
        i11 = $i30;

        $i38 = (int) -1;

        if $i30 == $i38 goto label52;

        l26 = l26 + 1L;

        $r43 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l17 = virtualinvoke $r43.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $b18 = $l17 cmp 0L;

        $i39 = (int) $b18;

        if $i39 <= 0 goto label43;

        $r47 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l22 = virtualinvoke $r47.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $b23 = l26 cmp $l22;

        $i40 = (int) $b23;

        if $i40 <= 0 goto label43;

        $r120 = new java.lang.IllegalStateException;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request exceeds maxRequestSize (");

        $r51 = r0.<org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement _config>;

        $l24 = virtualinvoke $r51.<javax.servlet.MultipartConfigElement: long getMaxRequestSize()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l24);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r54);

        throw $r120;

     label43:
        $i42 = (int) -2;

        i28 = $i42;

        if i11 == 13 goto label44;

        if i11 != 10 goto label47;

     label44:
        if i11 != 13 goto label52;

        $r44 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        virtualinvoke $r44.<java.io.InputStream: void mark(int)>(1);

        $r45 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        $i19 = virtualinvoke $r45.<java.io.InputStream: int read()>();

        if $i19 == 10 goto label45;

        $r46 = r0.<org.eclipse.jetty.util.MultiPartInputStream: java.io.InputStream _in>;

        virtualinvoke $r46.<java.io.InputStream: void reset()>();

        goto label46;

     label45:
        i28 = $i19;

     label46:
        goto label52;

     label47:
        if i29 < 0 goto label48;

        $i20 = lengthof $r91;

        if i29 >= $i20 goto label48;

        $b21 = $r91[i29];

        $i43 = (int) $b21;

        if i11 != $i43 goto label48;

        i29 = i29 + 1;

        goto label40;

     label48:
        if z18 == 0 goto label49;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(13);

     label49:
        if z19 == 0 goto label50;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(10);

     label50:
        z19 = 0;

        z18 = 0;

        if i29 <= 0 goto label51;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(byte[],int,int)>($r91, 0, i29);

     label51:
        $i45 = (int) -1;

        i29 = $i45;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(i11);

        goto label40;

     label52:
        if i29 <= 0 goto label53;

        $i15 = lengthof $r91;

        $i16 = $i15 - 2;

        if i29 < $i16 goto label54;

     label53:
        $i12 = lengthof $r91;

        $i13 = $i12 - 1;

        if i29 != $i13 goto label57;

     label54:
        if z18 == 0 goto label55;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(13);

     label55:
        if z19 == 0 goto label56;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(10);

     label56:
        z19 = 0;

        z18 = 0;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(byte[],int,int)>($r91, 0, i29);

        $i47 = (int) -1;

        i29 = $i47;

     label57:
        if i29 > 0 goto label58;

        $i49 = (int) -1;

        if i11 != $i49 goto label60;

     label58:
        $i14 = lengthof $r91;

        if i29 != $i14 goto label59;

        z16 = 1;

        z23 = 1;

        z22 = 1;

     label59:
        if i28 != 10 goto label69;

        goto label69;

     label60:
        if z18 == 0 goto label61;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(13);

     label61:
        if z19 == 0 goto label62;

        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void write(int)>(10);

     label62:
        if i11 != 13 goto label63;

        $z20 = 1;

        goto label64;

     label63:
        $z20 = 0;

     label64:
        z18 = $z20;

        if i11 == 10 goto label65;

        if i28 != 10 goto label66;

     label65:
        $z21 = 1;

        goto label67;

     label66:
        $z21 = 0;

     label67:
        z19 = $z21;

        if i28 != 10 goto label68;

        $i51 = (int) -2;

        i28 = $i51;

     label68:
        goto label39;

     label69:
        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void close()>();

        goto label72;

     label70:
        $r80 := @caughtexception;

     label71:
        virtualinvoke $r118.<org.eclipse.jetty.util.MultiPartInputStream$MultiPart: void close()>();

        throw $r80;

     label72:
        goto label19;

     label73:
        if z23 != 0 goto label74;

        $r121 = new java.io.IOException;

        specialinvoke $r121.<java.io.IOException: void <init>(java.lang.String)>("Incomplete parts");

        throw $r121;

     label74:
        return;

        catch java.lang.Throwable from label38 to label69 with label70;
        catch java.lang.Throwable from label70 to label71 with label70;
    }

    public void setDeleteOnExit(boolean)
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.util.MultiPartInputStream: boolean _deleteOnExit> = z0;

        return;
    }

    public boolean isDeleteOnExit()
    {
        org.eclipse.jetty.util.MultiPartInputStream r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        $z0 = r0.<org.eclipse.jetty.util.MultiPartInputStream: boolean _deleteOnExit>;

        return $z0;
    }

    private java.lang.String value(java.lang.String, boolean)
    {
        org.eclipse.jetty.util.MultiPartInputStream r4;
        int $i0, $i1;
        java.lang.String r0, $r1, $r2, $r3;
        boolean z0;

        r4 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(61);

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String unquoteOnly(java.lang.String)>($r2);

        return $r3;
    }

    private java.lang.String filenameValue(java.lang.String)
    {
        org.eclipse.jetty.util.MultiPartInputStream r4;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        java.lang.String r0, $r1, $r2, $r3, r5;
        boolean $z0;
        char $c2, $c7;

        r4 := @this: org.eclipse.jetty.util.MultiPartInputStream;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(61);

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r5 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>(".??[a-z,A-Z]\\:\\\\[^\\\\].*");

        if $z0 == 0 goto label5;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i8 = (int) $c2;

        if $i8 == 34 goto label1;

        $i9 = (int) $c2;

        if $i9 != 39 goto label2;

     label1:
        r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $i5 = virtualinvoke r5.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $c7 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i6);

        $i10 = (int) $c7;

        if $i10 == 34 goto label3;

        $i11 = (int) $c7;

        if $i11 != 39 goto label4;

     label3:
        $i3 = virtualinvoke r5.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label4:
        return r5;

     label5:
        $r3 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String unquoteOnly(java.lang.String,boolean)>($r2, 1);

        return $r3;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;
        java.lang.String $r2;
        javax.servlet.MultipartConfigElement $r1;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/MultiPartInputStream;");

        <org.eclipse.jetty.util.MultiPartInputStream: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = new javax.servlet.MultipartConfigElement;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $r1.<javax.servlet.MultipartConfigElement: void <init>(java.lang.String)>($r2);

        <org.eclipse.jetty.util.MultiPartInputStream: javax.servlet.MultipartConfigElement __DEFAULT_MULTIPART_CONFIG> = $r1;

        return;
    }
}
