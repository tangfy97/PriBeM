final class org.mozilla.javascript.NativeDate extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object DATE_TAG;
    private static final java.lang.String js_NaN_date_str;
    private static final double HalfTimeDomain;
    private static final double HoursPerDay;
    private static final double MinutesPerHour;
    private static final double SecondsPerMinute;
    private static final double msPerSecond;
    private static final double MinutesPerDay;
    private static final double SecondsPerDay;
    private static final double SecondsPerHour;
    private static final double msPerDay;
    private static final double msPerHour;
    private static final double msPerMinute;
    private static final boolean TZO_WORKAROUND;
    private static final int MAXARGS;
    private static final int ConstructorId_now;
    private static final int ConstructorId_parse;
    private static final int ConstructorId_UTC;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_toTimeString;
    private static final int Id_toDateString;
    private static final int Id_toLocaleString;
    private static final int Id_toLocaleTimeString;
    private static final int Id_toLocaleDateString;
    private static final int Id_toUTCString;
    private static final int Id_toSource;
    private static final int Id_valueOf;
    private static final int Id_getTime;
    private static final int Id_getYear;
    private static final int Id_getFullYear;
    private static final int Id_getUTCFullYear;
    private static final int Id_getMonth;
    private static final int Id_getUTCMonth;
    private static final int Id_getDate;
    private static final int Id_getUTCDate;
    private static final int Id_getDay;
    private static final int Id_getUTCDay;
    private static final int Id_getHours;
    private static final int Id_getUTCHours;
    private static final int Id_getMinutes;
    private static final int Id_getUTCMinutes;
    private static final int Id_getSeconds;
    private static final int Id_getUTCSeconds;
    private static final int Id_getMilliseconds;
    private static final int Id_getUTCMilliseconds;
    private static final int Id_getTimezoneOffset;
    private static final int Id_setTime;
    private static final int Id_setMilliseconds;
    private static final int Id_setUTCMilliseconds;
    private static final int Id_setSeconds;
    private static final int Id_setUTCSeconds;
    private static final int Id_setMinutes;
    private static final int Id_setUTCMinutes;
    private static final int Id_setHours;
    private static final int Id_setUTCHours;
    private static final int Id_setDate;
    private static final int Id_setUTCDate;
    private static final int Id_setMonth;
    private static final int Id_setUTCMonth;
    private static final int Id_setFullYear;
    private static final int Id_setUTCFullYear;
    private static final int Id_setYear;
    private static final int MAX_PROTOTYPE_ID;
    private static final int Id_toGMTString;
    private static java.util.TimeZone thisTimeZone;
    private static double LocalTZA;
    private static java.text.DateFormat timeZoneFormatter;
    private static java.text.DateFormat localeDateTimeFormatter;
    private static java.text.DateFormat localeDateFormatter;
    private static java.text.DateFormat localeTimeFormatter;
    private double date;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.NativeDate $r0;
        double $d0;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeDate;

        specialinvoke $r0.<org.mozilla.javascript.NativeDate: void <init>()>();

        $d0 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        $r0.<org.mozilla.javascript.NativeDate: double date> = $d0;

        virtualinvoke $r0.<org.mozilla.javascript.NativeDate: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(45, r1, z0);

        return;
    }

    private void <init>()
    {
        java.util.TimeZone $r1, $r2, $r3;
        int $i0;
        org.mozilla.javascript.NativeDate r0;
        double $d0;

        r0 := @this: org.mozilla.javascript.NativeDate;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        $r1 = <org.mozilla.javascript.NativeDate: java.util.TimeZone thisTimeZone>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        <org.mozilla.javascript.NativeDate: java.util.TimeZone thisTimeZone> = $r2;

        $r3 = <org.mozilla.javascript.NativeDate: java.util.TimeZone thisTimeZone>;

        $i0 = virtualinvoke $r3.<java.util.TimeZone: int getRawOffset()>();

        $d0 = (double) $i0;

        <org.mozilla.javascript.NativeDate: double LocalTZA> = $d0;

     label1:
        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeDate r0;

        r0 := @this: org.mozilla.javascript.NativeDate;

        return "Date";
    }

    public java.lang.Object getDefaultValue(java.lang.Class)
    {
        org.mozilla.javascript.NativeDate r0;
        java.lang.Object $r1;
        java.lang.Class r2;

        r0 := @this: org.mozilla.javascript.NativeDate;

        r2 := @parameter0: java.lang.Class;

        if r2 != null goto label1;

        r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

     label1:
        $r1 = specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getDefaultValue(java.lang.Class)>(r2);

        return $r1;
    }

    double getJSTimeValue()
    {
        org.mozilla.javascript.NativeDate r0;
        double $d0;

        r0 := @this: org.mozilla.javascript.NativeDate;

        $d0 = r0.<org.mozilla.javascript.NativeDate: double date>;

        return $d0;
    }

    protected void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject)
    {
        org.mozilla.javascript.NativeDate r0;
        org.mozilla.javascript.IdFunctionObject r1;
        int $i1, $i3, $i5;
        java.lang.Object $r2, $r3, $r4;

        r0 := @this: org.mozilla.javascript.NativeDate;

        r1 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        $r2 = <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG>;

        $i1 = (int) -3;

        virtualinvoke r0.<org.mozilla.javascript.NativeDate: void addIdFunctionProperty(org.mozilla.javascript.Scriptable,java.lang.Object,int,java.lang.String,int)>(r1, $r2, $i1, "now", 0);

        $r3 = <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG>;

        $i3 = (int) -2;

        virtualinvoke r0.<org.mozilla.javascript.NativeDate: void addIdFunctionProperty(org.mozilla.javascript.Scriptable,java.lang.Object,int,java.lang.String,int)>(r1, $r3, $i3, "parse", 1);

        $r4 = <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG>;

        $i5 = (int) -1;

        virtualinvoke r0.<org.mozilla.javascript.NativeDate: void addIdFunctionProperty(org.mozilla.javascript.Scriptable,java.lang.Object,int,java.lang.String,int)>(r1, $r4, $i5, "UTC", 1);

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject)>(r1);

        return;
    }

    protected void initPrototypeId(int)
    {
        byte b1;
        int i0;
        org.mozilla.javascript.NativeDate r0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.NativeDate;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            case 20: goto label20;
            case 21: goto label21;
            case 22: goto label22;
            case 23: goto label23;
            case 24: goto label24;
            case 25: goto label25;
            case 26: goto label26;
            case 27: goto label27;
            case 28: goto label28;
            case 29: goto label29;
            case 30: goto label30;
            case 31: goto label31;
            case 32: goto label32;
            case 33: goto label33;
            case 34: goto label34;
            case 35: goto label35;
            case 36: goto label36;
            case 37: goto label37;
            case 38: goto label38;
            case 39: goto label39;
            case 40: goto label40;
            case 41: goto label41;
            case 42: goto label42;
            case 43: goto label43;
            case 44: goto label44;
            case 45: goto label45;
            default: goto label46;
        };

     label01:
        b1 = 1;

        r3 = "constructor";

        goto label47;

     label02:
        b1 = 0;

        r3 = "toString";

        goto label47;

     label03:
        b1 = 0;

        r3 = "toTimeString";

        goto label47;

     label04:
        b1 = 0;

        r3 = "toDateString";

        goto label47;

     label05:
        b1 = 0;

        r3 = "toLocaleString";

        goto label47;

     label06:
        b1 = 0;

        r3 = "toLocaleTimeString";

        goto label47;

     label07:
        b1 = 0;

        r3 = "toLocaleDateString";

        goto label47;

     label08:
        b1 = 0;

        r3 = "toUTCString";

        goto label47;

     label09:
        b1 = 0;

        r3 = "toSource";

        goto label47;

     label10:
        b1 = 0;

        r3 = "valueOf";

        goto label47;

     label11:
        b1 = 0;

        r3 = "getTime";

        goto label47;

     label12:
        b1 = 0;

        r3 = "getYear";

        goto label47;

     label13:
        b1 = 0;

        r3 = "getFullYear";

        goto label47;

     label14:
        b1 = 0;

        r3 = "getUTCFullYear";

        goto label47;

     label15:
        b1 = 0;

        r3 = "getMonth";

        goto label47;

     label16:
        b1 = 0;

        r3 = "getUTCMonth";

        goto label47;

     label17:
        b1 = 0;

        r3 = "getDate";

        goto label47;

     label18:
        b1 = 0;

        r3 = "getUTCDate";

        goto label47;

     label19:
        b1 = 0;

        r3 = "getDay";

        goto label47;

     label20:
        b1 = 0;

        r3 = "getUTCDay";

        goto label47;

     label21:
        b1 = 0;

        r3 = "getHours";

        goto label47;

     label22:
        b1 = 0;

        r3 = "getUTCHours";

        goto label47;

     label23:
        b1 = 0;

        r3 = "getMinutes";

        goto label47;

     label24:
        b1 = 0;

        r3 = "getUTCMinutes";

        goto label47;

     label25:
        b1 = 0;

        r3 = "getSeconds";

        goto label47;

     label26:
        b1 = 0;

        r3 = "getUTCSeconds";

        goto label47;

     label27:
        b1 = 0;

        r3 = "getMilliseconds";

        goto label47;

     label28:
        b1 = 0;

        r3 = "getUTCMilliseconds";

        goto label47;

     label29:
        b1 = 0;

        r3 = "getTimezoneOffset";

        goto label47;

     label30:
        b1 = 1;

        r3 = "setTime";

        goto label47;

     label31:
        b1 = 1;

        r3 = "setMilliseconds";

        goto label47;

     label32:
        b1 = 1;

        r3 = "setUTCMilliseconds";

        goto label47;

     label33:
        b1 = 2;

        r3 = "setSeconds";

        goto label47;

     label34:
        b1 = 2;

        r3 = "setUTCSeconds";

        goto label47;

     label35:
        b1 = 3;

        r3 = "setMinutes";

        goto label47;

     label36:
        b1 = 3;

        r3 = "setUTCMinutes";

        goto label47;

     label37:
        b1 = 4;

        r3 = "setHours";

        goto label47;

     label38:
        b1 = 4;

        r3 = "setUTCHours";

        goto label47;

     label39:
        b1 = 1;

        r3 = "setDate";

        goto label47;

     label40:
        b1 = 1;

        r3 = "setUTCDate";

        goto label47;

     label41:
        b1 = 2;

        r3 = "setMonth";

        goto label47;

     label42:
        b1 = 2;

        r3 = "setUTCMonth";

        goto label47;

     label43:
        b1 = 3;

        r3 = "setFullYear";

        goto label47;

     label44:
        b1 = 3;

        r3 = "setUTCFullYear";

        goto label47;

     label45:
        b1 = 1;

        r3 = "setYear";

        goto label47;

     label46:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label47:
        $r4 = <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeDate: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.NativeDate r28, r31;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b8, $b10, $b12, $b14, $b16, $b18, $b20, $b22, $b23, $b24, $b25, $b26;
        org.mozilla.javascript.EcmaError $r27;
        java.lang.Object[] r3;
        org.mozilla.javascript.IdFunctionObject r0;
        java.lang.StringBuffer $r17, $r19, $r20, $r41;
        java.lang.String $r5, $r7, $r18, $r21, $r22, $r23, $r24, $r26;
        java.lang.Number $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        org.mozilla.javascript.Context r14;
        boolean $z0, $z1, $z2, $z3;
        org.mozilla.javascript.Scriptable r2, r29;
        int $i0, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i27, $i28, $i29, $i30, $i31, $i32;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, d14, d15, $d16, $d17, $d18, $d19, $d20, $d21;
        java.lang.IllegalArgumentException $r42;
        java.lang.Object $r1, $r4, $r30;

        r28 := @this: org.mozilla.javascript.NativeDate;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r14 := @parameter1: org.mozilla.javascript.Context;

        r29 := @parameter2: org.mozilla.javascript.Scriptable;

        r2 := @parameter3: org.mozilla.javascript.Scriptable;

        r3 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r30 = specialinvoke r28.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r14, r29, r2, r3);

        return $r30;

     label01:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case -3: goto label02;
            case -2: goto label03;
            case -1: goto label04;
            case 0: goto label07;
            case 1: goto label05;
            default: goto label07;
        };

     label02:
        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double now()>();

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d3);

        return $r9;

     label03:
        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object[],int)>(r3, 0);

        $d2 = staticinvoke <org.mozilla.javascript.NativeDate: double date_parseString(java.lang.String)>($r7);

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d2);

        return $r8;

     label04:
        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double jsStaticFunction_UTC(java.lang.Object[])>(r3);

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d1);

        return $r6;

     label05:
        if r2 == null goto label06;

        $d0 = staticinvoke <org.mozilla.javascript.NativeDate: double now()>();

        $r5 = staticinvoke <org.mozilla.javascript.NativeDate: java.lang.String date_format(double,int)>($d0, 2);

        return $r5;

     label06:
        $r4 = staticinvoke <org.mozilla.javascript.NativeDate: java.lang.Object jsConstructor(java.lang.Object[])>(r3);

        return $r4;

     label07:
        $z1 = r2 instanceof org.mozilla.javascript.NativeDate;

        if $z1 != 0 goto label08;

        $r27 = staticinvoke <org.mozilla.javascript.NativeDate: org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject)>(r0);

        throw $r27;

     label08:
        r31 = (org.mozilla.javascript.NativeDate) r2;

        d12 = r31.<org.mozilla.javascript.NativeDate: double date>;

        tableswitch($i0)
        {
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label11;
            case 6: goto label11;
            case 7: goto label11;
            case 8: goto label13;
            case 9: goto label15;
            case 10: goto label16;
            case 11: goto label16;
            case 12: goto label17;
            case 13: goto label17;
            case 14: goto label17;
            case 15: goto label21;
            case 16: goto label21;
            case 17: goto label24;
            case 18: goto label24;
            case 19: goto label27;
            case 20: goto label27;
            case 21: goto label30;
            case 22: goto label30;
            case 23: goto label33;
            case 24: goto label33;
            case 25: goto label36;
            case 26: goto label36;
            case 27: goto label39;
            case 28: goto label39;
            case 29: goto label42;
            case 30: goto label44;
            case 31: goto label45;
            case 32: goto label45;
            case 33: goto label45;
            case 34: goto label45;
            case 35: goto label45;
            case 36: goto label45;
            case 37: goto label45;
            case 38: goto label45;
            case 39: goto label46;
            case 40: goto label46;
            case 41: goto label46;
            case 42: goto label46;
            case 43: goto label46;
            case 44: goto label46;
            case 45: goto label47;
            default: goto label54;
        };

     label09:
        $b26 = d12 cmpl d12;

        if $b26 != 0 goto label10;

        $r24 = staticinvoke <org.mozilla.javascript.NativeDate: java.lang.String date_format(double,int)>(d12, $i0);

        return $r24;

     label10:
        return "Invalid Date";

     label11:
        $b25 = d12 cmpl d12;

        if $b25 != 0 goto label12;

        $r23 = staticinvoke <org.mozilla.javascript.NativeDate: java.lang.String toLocale_helper(double,int)>(d12, $i0);

        return $r23;

     label12:
        return "Invalid Date";

     label13:
        $b24 = d12 cmpl d12;

        if $b24 != 0 goto label14;

        $r22 = staticinvoke <org.mozilla.javascript.NativeDate: java.lang.String js_toUTCString(double)>(d12);

        return $r22;

     label14:
        return "Invalid Date";

     label15:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new Date(");

        $r18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d12);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r21;

     label16:
        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r15;

     label17:
        $b20 = d12 cmpl d12;

        if $b20 != 0 goto label20;

        if $i0 == 14 goto label18;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label18:
        $i21 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d12);

        $d11 = (double) $i21;

        d12 = $d11;

        if $i0 != 12 goto label20;

        $z3 = virtualinvoke r14.<org.mozilla.javascript.Context: boolean hasFeature(int)>(1);

        if $z3 == 0 goto label19;

        $b22 = 1900.0 cmpg $d11;

        $i29 = (int) $b22;

        if $i29 > 0 goto label20;

        $b23 = $d11 cmpg 2000.0;

        $i30 = (int) $b23;

        if $i30 >= 0 goto label20;

        d12 = $d11 - 1900.0;

        goto label20;

     label19:
        d12 = $d11 - 1900.0;

     label20:
        $r32 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r32;

     label21:
        $b18 = d12 cmpl d12;

        if $b18 != 0 goto label23;

        if $i0 != 15 goto label22;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label22:
        $i19 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d12);

        d12 = (double) $i19;

     label23:
        $r33 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r33;

     label24:
        $b16 = d12 cmpl d12;

        if $b16 != 0 goto label26;

        if $i0 != 17 goto label25;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label25:
        $i17 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d12);

        d12 = (double) $i17;

     label26:
        $r34 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r34;

     label27:
        $b14 = d12 cmpl d12;

        if $b14 != 0 goto label29;

        if $i0 != 19 goto label28;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label28:
        $i15 = staticinvoke <org.mozilla.javascript.NativeDate: int WeekDay(double)>(d12);

        d12 = (double) $i15;

     label29:
        $r35 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r35;

     label30:
        $b12 = d12 cmpl d12;

        if $b12 != 0 goto label32;

        if $i0 != 21 goto label31;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label31:
        $i13 = staticinvoke <org.mozilla.javascript.NativeDate: int HourFromTime(double)>(d12);

        d12 = (double) $i13;

     label32:
        $r36 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r36;

     label33:
        $b10 = d12 cmpl d12;

        if $b10 != 0 goto label35;

        if $i0 != 23 goto label34;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label34:
        $i11 = staticinvoke <org.mozilla.javascript.NativeDate: int MinFromTime(double)>(d12);

        d12 = (double) $i11;

     label35:
        $r37 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r37;

     label36:
        $b8 = d12 cmpl d12;

        if $b8 != 0 goto label38;

        if $i0 != 25 goto label37;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label37:
        $i9 = staticinvoke <org.mozilla.javascript.NativeDate: int SecFromTime(double)>(d12);

        d12 = (double) $i9;

     label38:
        $r38 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r38;

     label39:
        $b6 = d12 cmpl d12;

        if $b6 != 0 goto label41;

        if $i0 != 27 goto label40;

        d12 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label40:
        $i7 = staticinvoke <org.mozilla.javascript.NativeDate: int msFromTime(double)>(d12);

        d12 = (double) $i7;

     label41:
        $r39 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r39;

     label42:
        $b5 = d12 cmpl d12;

        if $b5 != 0 goto label43;

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

        $d10 = d12 - $d9;

        d12 = $d10 / 60000.0;

     label43:
        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d12);

        return $r13;

     label44:
        $d7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r3, 0);

        $d8 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>($d7);

        r31.<org.mozilla.javascript.NativeDate: double date> = $d8;

        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d8);

        return $r12;

     label45:
        $d6 = staticinvoke <org.mozilla.javascript.NativeDate: double makeTime(double,java.lang.Object[],int)>(d12, r3, $i0);

        r31.<org.mozilla.javascript.NativeDate: double date> = $d6;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d6);

        return $r11;

     label46:
        $d5 = staticinvoke <org.mozilla.javascript.NativeDate: double makeDate(double,java.lang.Object[],int)>(d12, r3, $i0);

        r31.<org.mozilla.javascript.NativeDate: double date> = $d5;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d5);

        return $r10;

     label47:
        $d4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r3, 0);

        d13 = $d4;

        $b1 = $d4 cmpl $d4;

        if $b1 != 0 goto label48;

        $z2 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d4);

        if $z2 == 0 goto label49;

     label48:
        d14 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        goto label53;

     label49:
        $b2 = d12 cmpl d12;

        if $b2 == 0 goto label50;

        d15 = 0.0;

        goto label51;

     label50:
        d15 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d12);

     label51:
        $b3 = $d4 cmpl 0.0;

        $i31 = (int) $b3;

        if $i31 < 0 goto label52;

        $b4 = $d4 cmpg 99.0;

        $i32 = (int) $b4;

        if $i32 > 0 goto label52;

        d13 = $d4 + 1900.0;

     label52:
        $i27 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d15);

        $d16 = (double) $i27;

        $i28 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d15);

        $d17 = (double) $i28;

        $d18 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>(d13, $d16, $d17);

        $d19 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeWithinDay(double)>(d15);

        $d20 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d18, $d19);

        $d21 = staticinvoke <org.mozilla.javascript.NativeDate: double internalUTC(double)>($d20);

        d14 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>($d21);

     label53:
        r31.<org.mozilla.javascript.NativeDate: double date> = d14;

        $r40 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d14);

        return $r40;

     label54:
        $r42 = new java.lang.IllegalArgumentException;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r42;
    }

    private static double Day(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = d0 / 8.64E7;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        return $d2;
    }

    private static double TimeWithinDay(double)
    {
        byte $b0;
        int $i1;
        double d0, d1;

        d0 := @parameter0: double;

        d1 = d0 % 8.64E7;

        $b0 = d1 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        d1 = d1 + 8.64E7;

     label1:
        return d1;
    }

    private static boolean IsLeapYear(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 % 4;

        if $i1 != 0 goto label2;

        $i2 = i0 % 100;

        if $i2 != 0 goto label1;

        $i3 = i0 % 400;

        if $i3 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static double DayFromYear(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;

        d0 := @parameter0: double;

        $d1 = d0 - 1970.0;

        $d4 = 365.0 * $d1;

        $d2 = d0 - 1969.0;

        $d3 = $d2 / 4.0;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d3);

        $d8 = $d4 + $d5;

        $d6 = d0 - 1901.0;

        $d7 = $d6 / 100.0;

        $d9 = staticinvoke <java.lang.Math: double floor(double)>($d7);

        $d12 = $d8 - $d9;

        $d10 = d0 - 1601.0;

        $d11 = $d10 / 400.0;

        $d13 = staticinvoke <java.lang.Math: double floor(double)>($d11);

        $d14 = $d12 + $d13;

        return $d14;
    }

    private static double TimeFromYear(double)
    {
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double DayFromYear(double)>(d0);

        $d2 = $d1 * 8.64E7;

        return $d2;
    }

    private static int YearFromTime(double)
    {
        byte $b4, $b5;
        int $i0, $i1, $i2, i3, i6, i7, i8, $i9, $i10;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        d0 := @parameter0: double;

        $d1 = d0 / 8.64E7;

        $d2 = $d1 / 366.0;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i0 = (int) $d3;

        i7 = $i0 + 1970;

        $d4 = d0 / 8.64E7;

        $d5 = $d4 / 365.0;

        $d6 = staticinvoke <java.lang.Math: double floor(double)>($d5);

        $i1 = (int) $d6;

        i8 = $i1 + 1970;

        if i8 >= i7 goto label1;

        i6 = i7;

        i7 = i8;

        i8 = i6;

     label1:
        if i8 <= i7 goto label3;

        $i2 = i8 + i7;

        i3 = $i2 / 2;

        $d7 = (double) i3;

        $d8 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeFromYear(double)>($d7);

        $b4 = $d8 cmpl d0;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label2;

        i8 = i3 - 1;

        goto label1;

     label2:
        i7 = i3 + 1;

        $d9 = (double) i7;

        $d10 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeFromYear(double)>($d9);

        $b5 = $d10 cmpl d0;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label1;

        return i3;

     label3:
        return i7;
    }

    private static double DayFromMonth(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        boolean $z0;
        double $d0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i7 = i0 * 30;

        if i0 < 7 goto label1;

        $i5 = i0 / 2;

        $i6 = $i5 - 1;

        i8 = i7 + $i6;

        goto label3;

     label1:
        if i0 < 2 goto label2;

        $i2 = i0 - 1;

        $i3 = $i2 / 2;

        $i4 = $i3 - 1;

        i8 = i7 + $i4;

        goto label3;

     label2:
        i8 = i7 + i0;

     label3:
        if i0 < 2 goto label4;

        $z0 = staticinvoke <org.mozilla.javascript.NativeDate: boolean IsLeapYear(int)>(i1);

        if $z0 == 0 goto label4;

        i8 = i8 + 1;

     label4:
        $d0 = (double) i8;

        return $d0;
    }

    private static int MonthFromTime(double)
    {
        short s5;
        byte $b4;
        int $i0, $i1, i2, i3, $i6, $i8, $i10, $i12;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $i0 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d0);

        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double Day(double)>(d0);

        $d2 = (double) $i0;

        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double DayFromYear(double)>($d2);

        $d4 = $d1 - $d3;

        i2 = (int) $d4;

        $i8 = (int) -59;

        i3 = i2 + $i8;

        if i3 >= 0 goto label03;

        $i10 = (int) -28;

        if i3 >= $i10 goto label01;

        $b4 = 0;

        goto label02;

     label01:
        $b4 = 1;

     label02:
        return $b4;

     label03:
        $z0 = staticinvoke <org.mozilla.javascript.NativeDate: boolean IsLeapYear(int)>($i0);

        if $z0 == 0 goto label05;

        if i3 != 0 goto label04;

        return 1;

     label04:
        $i12 = (int) -1;

        i3 = i3 + $i12;

     label05:
        $i1 = i3 / 30;

        tableswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label15;
            case 10: goto label16;
            default: goto label17;
        };

     label06:
        return 2;

     label07:
        s5 = 31;

        goto label18;

     label08:
        s5 = 61;

        goto label18;

     label09:
        s5 = 92;

        goto label18;

     label10:
        s5 = 122;

        goto label18;

     label11:
        s5 = 153;

        goto label18;

     label12:
        s5 = 184;

        goto label18;

     label13:
        s5 = 214;

        goto label18;

     label14:
        s5 = 245;

        goto label18;

     label15:
        s5 = 275;

        goto label18;

     label16:
        return 11;

     label17:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label18:
        if i3 < s5 goto label19;

        $i6 = $i1 + 2;

        goto label20;

     label19:
        $i6 = $i1 + 1;

     label20:
        return $i6;
    }

    private static int DateFromTime(double)
    {
        short s13;
        byte b12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i14, i15, $i17, $i19, $i21;
        double d0, $d1, $d2, $d3, $d4;
        boolean $z0;
        java.lang.RuntimeException $r0;

        d0 := @parameter0: double;

        $i0 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d0);

        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double Day(double)>(d0);

        $d2 = (double) $i0;

        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double DayFromYear(double)>($d2);

        $d4 = $d1 - $d3;

        i9 = (int) $d4;

        $i17 = (int) -59;

        i10 = i9 + $i17;

        if i10 >= 0 goto label03;

        $i19 = (int) -28;

        if i10 >= $i19 goto label01;

        $i7 = i10 + 31;

        $i8 = $i7 + 28;

        $i11 = $i8 + 1;

        goto label02;

     label01:
        $i6 = i10 + 28;

        $i11 = $i6 + 1;

     label02:
        return $i11;

     label03:
        $z0 = staticinvoke <org.mozilla.javascript.NativeDate: boolean IsLeapYear(int)>($i0);

        if $z0 == 0 goto label05;

        if i10 != 0 goto label04;

        return 29;

     label04:
        $i21 = (int) -1;

        i10 = i10 + $i21;

     label05:
        $i1 = i10 / 30;

        tableswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label15;
            case 10: goto label16;
            default: goto label17;
        };

     label06:
        $i5 = i10 + 1;

        return $i5;

     label07:
        b12 = 31;

        s13 = 31;

        goto label18;

     label08:
        b12 = 30;

        s13 = 61;

        goto label18;

     label09:
        b12 = 31;

        s13 = 92;

        goto label18;

     label10:
        b12 = 30;

        s13 = 122;

        goto label18;

     label11:
        b12 = 31;

        s13 = 153;

        goto label18;

     label12:
        b12 = 31;

        s13 = 184;

        goto label18;

     label13:
        b12 = 30;

        s13 = 214;

        goto label18;

     label14:
        b12 = 31;

        s13 = 245;

        goto label18;

     label15:
        b12 = 30;

        s13 = 275;

        goto label18;

     label16:
        $i2 = i10 - 275;

        $i3 = $i2 + 1;

        return $i3;

     label17:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label18:
        $i14 = i10 - s13;

        i15 = $i14;

        if $i14 >= 0 goto label19;

        i15 = $i14 + b12;

     label19:
        $i4 = i15 + 1;

        return $i4;
    }

    private static int WeekDay(double)
    {
        byte $b0;
        int $i1, $i2;
        double d0, $d1, d2, d3;

        d0 := @parameter0: double;

        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double Day(double)>(d0);

        d2 = $d1 + 4.0;

        d3 = d2 % 7.0;

        $b0 = d3 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d3 = d3 + 7.0;

     label1:
        $i1 = (int) d3;

        return $i1;
    }

    private static double now()
    {
        long $l0;
        double $d0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d0 = (double) $l0;

        return $d0;
    }

    private static double DaylightSavingTA(double)
    {
        java.util.Date $r2;
        long $l6;
        byte $b0, $b5;
        int $i1, $i2, $i3, $i4, $i7, $i8;
        double $d0, $d1, $d2, $d3, $d4, d5;
        boolean $z0;
        java.util.TimeZone $r1;

        d5 := @parameter0: double;

        $b0 = d5 cmpg 0.0;

        $i7 = (int) $b0;

        if $i7 < 0 goto label1;

        $b5 = d5 cmpl 2.1459168E12;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label2;

     label1:
        $i1 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d5);

        $i2 = staticinvoke <org.mozilla.javascript.NativeDate: int EquivalentYear(int)>($i1);

        $d0 = (double) $i2;

        $i3 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d5);

        $d1 = (double) $i3;

        $i4 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d5);

        $d2 = (double) $i4;

        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>($d0, $d1, $d2);

        $d4 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeWithinDay(double)>(d5);

        d5 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d3, $d4);

     label2:
        $r2 = new java.util.Date;

        $l6 = (long) d5;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l6);

        $r1 = <org.mozilla.javascript.NativeDate: java.util.TimeZone thisTimeZone>;

        $z0 = virtualinvoke $r1.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r2);

        if $z0 == 0 goto label3;

        return 3600000.0;

     label3:
        return 0.0;
    }

    private static int EquivalentYear(int)
    {
        java.lang.RuntimeException $r0;
        int i0, $i1, i2, i3;
        double $d0, $d1;
        boolean $z0;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = staticinvoke <org.mozilla.javascript.NativeDate: double DayFromYear(double)>($d0);

        $i1 = (int) $d1;

        i2 = $i1 + 4;

        i3 = i2 % 7;

        if i3 >= 0 goto label01;

        i3 = i3 + 7;

     label01:
        $z0 = staticinvoke <org.mozilla.javascript.NativeDate: boolean IsLeapYear(int)>(i0);

        if $z0 == 0 goto label10;

        tableswitch(i3)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            default: goto label09;
        };

     label02:
        return 1984;

     label03:
        return 1996;

     label04:
        return 1980;

     label05:
        return 1992;

     label06:
        return 1976;

     label07:
        return 1988;

     label08:
        return 1972;

     label09:
        goto label18;

     label10:
        tableswitch(i3)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label15;
            case 5: goto label16;
            case 6: goto label17;
            default: goto label18;
        };

     label11:
        return 1978;

     label12:
        return 1973;

     label13:
        return 1974;

     label14:
        return 1975;

     label15:
        return 1981;

     label16:
        return 1971;

     label17:
        return 1977;

     label18:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;
    }

    private static double LocalTime(double)
    {
        double d0, $d1, $d2, $d3, $d4;

        d0 := @parameter0: double;

        $d1 = <org.mozilla.javascript.NativeDate: double LocalTZA>;

        $d2 = d0 + $d1;

        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double DaylightSavingTA(double)>(d0);

        $d4 = $d2 + $d3;

        return $d4;
    }

    private static double internalUTC(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        d0 := @parameter0: double;

        $d1 = <org.mozilla.javascript.NativeDate: double LocalTZA>;

        $d4 = d0 - $d1;

        $d2 = <org.mozilla.javascript.NativeDate: double LocalTZA>;

        $d3 = d0 - $d2;

        $d5 = staticinvoke <org.mozilla.javascript.NativeDate: double DaylightSavingTA(double)>($d3);

        $d6 = $d4 - $d5;

        return $d6;
    }

    private static int HourFromTime(double)
    {
        byte $b0;
        int $i1, $i2;
        double d0, $d1, $d2, d3;

        d0 := @parameter0: double;

        $d1 = d0 / 3600000.0;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        d3 = $d2 % 24.0;

        $b0 = d3 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d3 = d3 + 24.0;

     label1:
        $i1 = (int) d3;

        return $i1;
    }

    private static int MinFromTime(double)
    {
        byte $b0;
        int $i1, $i2;
        double d0, $d1, $d2, d3;

        d0 := @parameter0: double;

        $d1 = d0 / 60000.0;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        d3 = $d2 % 60.0;

        $b0 = d3 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d3 = d3 + 60.0;

     label1:
        $i1 = (int) d3;

        return $i1;
    }

    private static int SecFromTime(double)
    {
        byte $b0;
        int $i1, $i2;
        double d0, $d1, $d2, d3;

        d0 := @parameter0: double;

        $d1 = d0 / 1000.0;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        d3 = $d2 % 60.0;

        $b0 = d3 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d3 = d3 + 60.0;

     label1:
        $i1 = (int) d3;

        return $i1;
    }

    private static int msFromTime(double)
    {
        byte $b0;
        int $i1, $i2;
        double d0, d1;

        d0 := @parameter0: double;

        d1 = d0 % 1000.0;

        $b0 = d1 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d1 = d1 + 1000.0;

     label1:
        $i1 = (int) d1;

        return $i1;
    }

    private static double MakeTime(double, double, double, double)
    {
        double d0, d1, $d2, $d3, d4, $d5, $d6, d7, $d8, $d9;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d4 := @parameter2: double;

        d7 := @parameter3: double;

        $d2 = d0 * 60.0;

        $d3 = $d2 + d1;

        $d5 = $d3 * 60.0;

        $d6 = $d5 + d4;

        $d8 = $d6 * 1000.0;

        $d9 = $d8 + d7;

        return $d9;
    }

    private static double MakeDay(double, double, double)
    {
        byte $b0;
        int $i1, $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, d10, d11, d12, d13;

        d10 := @parameter0: double;

        d11 := @parameter1: double;

        d6 := @parameter2: double;

        $d0 = d11 / 12.0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        d12 = d10 + $d1;

        d13 = d11 % 12.0;

        $b0 = d13 cmpg 0.0;

        $i3 = (int) $b0;

        if $i3 >= 0 goto label1;

        d13 = d13 + 12.0;

     label1:
        $d2 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeFromYear(double)>(d12);

        $d3 = $d2 / 8.64E7;

        $d4 = staticinvoke <java.lang.Math: double floor(double)>($d3);

        $i2 = (int) d13;

        $i1 = (int) d12;

        $d5 = staticinvoke <org.mozilla.javascript.NativeDate: double DayFromMonth(int,int)>($i2, $i1);

        $d7 = $d4 + $d5;

        $d8 = $d7 + d6;

        $d9 = $d8 - 1.0;

        return $d9;
    }

    private static double MakeDate(double, double)
    {
        double d0, d1, $d2, $d3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = d0 * 8.64E7;

        $d3 = $d2 + d1;

        return $d3;
    }

    private static double TimeClip(double)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5, $i6;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        d0 := @parameter0: double;

        $b0 = d0 cmpl d0;

        if $b0 != 0 goto label1;

        $b1 = d0 cmpl #Infinity;

        if $b1 == 0 goto label1;

        $b2 = d0 cmpl #-Infinity;

        if $b2 == 0 goto label1;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b3 = $d1 cmpl 8.64E15;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label2;

     label1:
        $d6 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d6;

     label2:
        $b4 = d0 cmpl 0.0;

        $i6 = (int) $b4;

        if $i6 <= 0 goto label3;

        $d4 = d0 + 0.0;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        return $d5;

     label3:
        $d2 = d0 + 0.0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        return $d3;
    }

    private static double date_msecFromDate(double, double, double, double, double, double, double)
    {
        double d0, d1, d2, $d3, d4, d5, d6, d7, $d8, $d9;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d4 := @parameter3: double;

        d5 := @parameter4: double;

        d6 := @parameter5: double;

        d7 := @parameter6: double;

        $d3 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>(d0, d1, d2);

        $d8 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeTime(double,double,double,double)>(d4, d5, d6, d7);

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d3, $d8);

        return $d9;
    }

    private static double jsStaticFunction_UTC(java.lang.Object[])
    {
        java.lang.Object[] r1;
        double[] r0;
        byte $b0, $b1, $b3, $b5;
        int $i2, i4, $i6, $i7, $i8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        boolean $z0;
        java.lang.Object $r2, $r3;

        r1 := @parameter0: java.lang.Object[];

        r0 = newarray (double)[7];

        i4 = 0;

     label1:
        if i4 >= 7 goto label6;

        $i2 = lengthof r1;

        if i4 >= $i2 goto label4;

        $r2 = r1[i4];

        $d13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r2);

        $b3 = $d13 cmpl $d13;

        if $b3 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d13);

        if $z0 == 0 goto label3;

     label2:
        $d14 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d14;

     label3:
        $r3 = r1[i4];

        $d15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r3);

        r0[i4] = $d15;

        goto label5;

     label4:
        r0[i4] = 0.0;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        $d0 = r0[0];

        $b0 = $d0 cmpl 0.0;

        $i6 = (int) $b0;

        if $i6 < 0 goto label7;

        $d10 = r0[0];

        $b1 = $d10 cmpg 99.0;

        $i7 = (int) $b1;

        if $i7 > 0 goto label7;

        $d11 = r0[0];

        $d12 = $d11 + 1900.0;

        r0[0] = $d12;

     label7:
        $d16 = r0[2];

        $b5 = $d16 cmpg 1.0;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label8;

        r0[2] = 1.0;

     label8:
        $d7 = r0[0];

        $d6 = r0[1];

        $d5 = r0[2];

        $d4 = r0[3];

        $d3 = r0[4];

        $d2 = r0[5];

        $d1 = r0[6];

        $d8 = staticinvoke <org.mozilla.javascript.NativeDate: double date_msecFromDate(double,double,double,double,double,double,double)>($d7, $d6, $d5, $d4, $d3, $d2, $d1);

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>($d8);

        return $d9;
    }

    private static double date_parseString(java.lang.String)
    {
        byte $b1, $b9, $b10, $b11;
        java.lang.String r0, r1, $r2;
        boolean $z0, z1;
        int $i0, $i4, $i6, $i7, $i8, $i13, $i14, i16, i17, i18, i19, i20, i21, i22, i23, i25, i26, i27, $i28, i29, $i30, i31, i32, i33, i34, i35, $i37, $i39, $i41, $i43, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i83, $i85, $i87;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24;
        char $c2, $c3, $c5, $c12, $c15, c24;

        r0 := @parameter0: java.lang.String;

        $i37 = (int) -1;

        i16 = $i37;

        $i39 = (int) -1;

        i17 = $i39;

        $i41 = (int) -1;

        i18 = $i41;

        $i43 = (int) -1;

        i19 = $i43;

        $i45 = (int) -1;

        i20 = $i45;

        $i47 = (int) -1;

        i21 = $i47;

        i22 = 0;

        d23 = -1.0;

        i23 = 0;

        z1 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label01:
        if i22 >= $i0 goto label66;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        c24 = $c2;

        i22 = i22 + 1;

        $i48 = (int) $c2;

        if $i48 <= 32 goto label02;

        $i49 = (int) $c2;

        if $i49 == 44 goto label02;

        $i50 = (int) $c2;

        if $i50 != 45 goto label03;

     label02:
        if i22 >= $i0 goto label01;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i51 = (int) $c2;

        if $i51 != 45 goto label01;

        $i52 = (int) $c3;

        if 48 > $i52 goto label01;

        $i53 = (int) $c3;

        if $i53 > 57 goto label01;

        i23 = $c2;

        goto label01;

     label03:
        $i54 = (int) $c2;

        if $i54 != 40 goto label06;

        i25 = 1;

     label04:
        if i22 >= $i0 goto label01;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        i22 = i22 + 1;

        $i55 = (int) $c15;

        if $i55 != 40 goto label05;

        i25 = i25 + 1;

        goto label04;

     label05:
        $i56 = (int) $c15;

        if $i56 != 41 goto label04;

        $i58 = (int) -1;

        i25 = i25 + $i58;

        if i25 > 0 goto label04;

        goto label01;

     label06:
        $i59 = (int) $c2;

        if 48 > $i59 goto label35;

        $i60 = (int) $c2;

        if $i60 > 57 goto label35;

        $i61 = (int) $c2;

        i26 = $i61 - 48;

     label07:
        if i22 >= $i0 goto label08;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        c24 = $c12;

        $i62 = (int) $c12;

        if 48 > $i62 goto label08;

        $i63 = (int) $c12;

        if $i63 > 57 goto label08;

        $i13 = i26 * 10;

        $i64 = (int) $c12;

        $i14 = $i13 + $i64;

        i26 = $i14 - 48;

        i22 = i22 + 1;

        goto label07;

     label08:
        if i23 == 43 goto label09;

        if i23 != 45 goto label14;

     label09:
        z1 = 1;

        if i26 >= 24 goto label10;

        i27 = i26 * 60;

        goto label11;

     label10:
        $i8 = i26 % 100;

        $i6 = i26 / 100;

        $i7 = $i6 * 60;

        i27 = $i8 + $i7;

     label11:
        if i23 != 43 goto label12;

        i27 = neg i27;

     label12:
        $b9 = d23 cmpl 0.0;

        if $b9 == 0 goto label13;

        $b10 = d23 cmpl -1.0;

        if $b10 == 0 goto label13;

        $d14 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d14;

     label13:
        d23 = (double) i27;

        goto label34;

     label14:
        if i26 >= 70 goto label15;

        if i23 != 47 goto label21;

        if i17 < 0 goto label21;

        if i18 < 0 goto label21;

        if i16 >= 0 goto label21;

     label15:
        if i16 < 0 goto label16;

        $d16 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d16;

     label16:
        $i65 = (int) c24;

        if $i65 <= 32 goto label17;

        $i66 = (int) c24;

        if $i66 == 44 goto label17;

        $i67 = (int) c24;

        if $i67 == 47 goto label17;

        if i22 < $i0 goto label20;

     label17:
        if i26 >= 100 goto label18;

        $i28 = i26 + 1900;

        goto label19;

     label18:
        $i28 = i26;

     label19:
        i16 = $i28;

        goto label34;

     label20:
        $d15 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d15;

     label21:
        $i68 = (int) c24;

        if $i68 != 58 goto label24;

        if i19 >= 0 goto label22;

        i19 = i26;

        goto label34;

     label22:
        if i20 >= 0 goto label23;

        i20 = i26;

        goto label34;

     label23:
        $d22 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d22;

     label24:
        $i69 = (int) c24;

        if $i69 != 47 goto label27;

        if i17 >= 0 goto label25;

        i17 = i26 - 1;

        goto label34;

     label25:
        if i18 >= 0 goto label26;

        i18 = i26;

        goto label34;

     label26:
        $d21 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d21;

     label27:
        if i22 >= $i0 goto label28;

        $i70 = (int) c24;

        if $i70 == 44 goto label28;

        $i71 = (int) c24;

        if $i71 <= 32 goto label28;

        $i72 = (int) c24;

        if $i72 == 45 goto label28;

        $d20 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d20;

     label28:
        if z1 == 0 goto label30;

        if i26 >= 60 goto label30;

        $b11 = d23 cmpg 0.0;

        $i73 = (int) $b11;

        if $i73 >= 0 goto label29;

        $d19 = (double) i26;

        d23 = d23 - $d19;

        goto label34;

     label29:
        $d18 = (double) i26;

        d23 = d23 + $d18;

        goto label34;

     label30:
        if i19 < 0 goto label31;

        if i20 >= 0 goto label31;

        i20 = i26;

        goto label34;

     label31:
        if i20 < 0 goto label32;

        if i21 >= 0 goto label32;

        i21 = i26;

        goto label34;

     label32:
        if i18 >= 0 goto label33;

        i18 = i26;

        goto label34;

     label33:
        $d17 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d17;

     label34:
        i23 = 0;

        goto label01;

     label35:
        $i74 = (int) $c2;

        if $i74 == 47 goto label36;

        $i75 = (int) $c2;

        if $i75 == 58 goto label36;

        $i76 = (int) $c2;

        if $i76 == 43 goto label36;

        $i77 = (int) $c2;

        if $i77 != 45 goto label37;

     label36:
        i23 = $c2;

        goto label01;

     label37:
        i29 = i22 - 1;

     label38:
        if i22 >= $i0 goto label41;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i22);

        $i78 = (int) $c5;

        if 65 > $i78 goto label39;

        $i79 = (int) $c5;

        if $i79 <= 90 goto label40;

     label39:
        $i80 = (int) $c5;

        if 97 > $i80 goto label41;

        $i81 = (int) $c5;

        if $i81 <= 122 goto label40;

        goto label41;

     label40:
        i22 = i22 + 1;

        goto label38;

     label41:
        $i30 = i22 - i29;

        if $i30 >= 2 goto label42;

        $d13 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d13;

     label42:
        r1 = "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;";

        i31 = 0;

        i32 = 0;

     label43:
        $r2 = "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;";

        $i4 = virtualinvoke $r2.<java.lang.String: int indexOf(int,int)>(59, i32);

        if $i4 >= 0 goto label44;

        $d12 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d12;

     label44:
        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i32, r0, i29, $i30);

        if $z0 == 0 goto label45;

        goto label46;

     label45:
        i32 = $i4 + 1;

        i31 = i31 + 1;

        goto label43;

     label46:
        if i31 >= 2 goto label50;

        if i19 > 12 goto label47;

        if i19 >= 0 goto label48;

     label47:
        $d11 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d11;

     label48:
        if i31 != 0 goto label49;

        if i19 != 12 goto label01;

        i19 = 0;

        goto label01;

     label49:
        if i19 == 12 goto label01;

        i19 = i19 + 12;

        goto label01;

     label50:
        $i83 = (int) -2;

        i33 = i31 + $i83;

        if i33 >= 7 goto label51;

        goto label01;

     label51:
        $i85 = (int) -7;

        i34 = i33 + $i85;

        if i34 >= 12 goto label53;

        if i17 >= 0 goto label52;

        i17 = i34;

        goto label01;

     label52:
        $d10 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d10;

     label53:
        $i87 = (int) -12;

        i35 = i34 + $i87;

        tableswitch(i35)
        {
            case 0: goto label54;
            case 1: goto label55;
            case 2: goto label56;
            case 3: goto label57;
            case 4: goto label58;
            case 5: goto label59;
            case 6: goto label60;
            case 7: goto label61;
            case 8: goto label62;
            case 9: goto label63;
            case 10: goto label64;
            default: goto label65;
        };

     label54:
        d23 = 0.0;

        goto label01;

     label55:
        d23 = 0.0;

        goto label01;

     label56:
        d23 = 0.0;

        goto label01;

     label57:
        d23 = 300.0;

        goto label01;

     label58:
        d23 = 240.0;

        goto label01;

     label59:
        d23 = 360.0;

        goto label01;

     label60:
        d23 = 300.0;

        goto label01;

     label61:
        d23 = 420.0;

        goto label01;

     label62:
        d23 = 360.0;

        goto label01;

     label63:
        d23 = 480.0;

        goto label01;

     label64:
        d23 = 420.0;

        goto label01;

     label65:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label01;

     label66:
        if i16 < 0 goto label67;

        if i17 < 0 goto label67;

        if i18 >= 0 goto label68;

     label67:
        $d24 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d24;

     label68:
        if i21 >= 0 goto label69;

        i21 = 0;

     label69:
        if i20 >= 0 goto label70;

        i20 = 0;

     label70:
        if i19 >= 0 goto label71;

        i19 = 0;

     label71:
        $d5 = (double) i16;

        $d4 = (double) i17;

        $d3 = (double) i18;

        $d2 = (double) i19;

        $d1 = (double) i20;

        $d0 = (double) i21;

        $d6 = staticinvoke <org.mozilla.javascript.NativeDate: double date_msecFromDate(double,double,double,double,double,double,double)>($d5, $d4, $d3, $d2, $d1, $d0, 0.0);

        $b1 = d23 cmpl -1.0;

        if $b1 != 0 goto label72;

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double internalUTC(double)>($d6);

        return $d9;

     label72:
        $d7 = d23 * 60000.0;

        $d8 = $d6 + $d7;

        return $d8;
    }

    private static java.lang.String date_format(double, int)
    {
        java.util.Date $r9;
        byte $b7, $b12;
        java.text.DateFormat $r1, $r4;
        java.text.SimpleDateFormat $r8;
        long $l20;
        java.lang.StringBuffer $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, i17, i18, i19, $i21, $i22;
        java.lang.String $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;

        d11 := @parameter0: double;

        i0 := @parameter1: int;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>(60);

        $d0 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d11);

        if i0 == 3 goto label2;

        $i13 = staticinvoke <org.mozilla.javascript.NativeDate: int WeekDay(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void appendWeekDayName(java.lang.StringBuffer,int)>($r7, $i13);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i14 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void appendMonthName(java.lang.StringBuffer,int)>($r7, $i14);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i15 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, $i15, 2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i16 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>($d0);

        i17 = $i16;

        if $i16 >= 0 goto label1;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        i17 = neg $i16;

     label1:
        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, i17, 4);

        if i0 == 4 goto label2;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        if i0 == 4 goto label8;

        $i1 = staticinvoke <org.mozilla.javascript.NativeDate: int HourFromTime(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, $i1, 2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i2 = staticinvoke <org.mozilla.javascript.NativeDate: int MinFromTime(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, $i2, 2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i3 = staticinvoke <org.mozilla.javascript.NativeDate: int SecFromTime(double)>($d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, $i3, 2);

        $d1 = <org.mozilla.javascript.NativeDate: double LocalTZA>;

        $d2 = staticinvoke <org.mozilla.javascript.NativeDate: double DaylightSavingTA(double)>(d11);

        $d3 = $d1 + $d2;

        $d4 = $d3 / 60000.0;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        i18 = (int) $d5;

        $i4 = i18 / 60;

        $i6 = $i4 * 100;

        $i5 = i18 % 60;

        i19 = $i6 + $i5;

        if i19 <= 0 goto label3;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GMT+");

        goto label4;

     label3:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GMT-");

        i19 = neg i19;

     label4:
        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r7, i19, 4);

        $r1 = <org.mozilla.javascript.NativeDate: java.text.DateFormat timeZoneFormatter>;

        if $r1 != null goto label5;

        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("zzz");

        <org.mozilla.javascript.NativeDate: java.text.DateFormat timeZoneFormatter> = $r8;

     label5:
        $b7 = d11 cmpg 0.0;

        $i21 = (int) $b7;

        if $i21 < 0 goto label6;

        $b12 = d11 cmpl 2.1459168E12;

        $i22 = (int) $b12;

        if $i22 <= 0 goto label7;

     label6:
        $i8 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>($d0);

        $i9 = staticinvoke <org.mozilla.javascript.NativeDate: int EquivalentYear(int)>($i8);

        $d6 = (double) $i9;

        $i10 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d11);

        $d7 = (double) $i10;

        $i11 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d11);

        $d8 = (double) $i11;

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>($d6, $d7, $d8);

        $d10 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeWithinDay(double)>(d11);

        d11 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d9, $d10);

     label7:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r9 = new java.util.Date;

        $l20 = (long) d11;

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l20);

        $r4 = <org.mozilla.javascript.NativeDate: java.text.DateFormat timeZoneFormatter>;

        $r5 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r9);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label8:
        $r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.Object jsConstructor(java.lang.Object[])
    {
        org.mozilla.javascript.NativeDate $r8;
        byte $b2, $b3, $b5, $b7;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.Scriptable $r5;
        java.lang.Object[] r1;
        double[] r7;
        int $i0, $i1, $i4, i6, $i8, $i9, $i10;
        java.lang.String $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, $d22;
        java.lang.Object $r2, $r3, r6;

        r1 := @parameter0: java.lang.Object[];

        $r8 = new org.mozilla.javascript.NativeDate;

        specialinvoke $r8.<org.mozilla.javascript.NativeDate: void <init>()>();

        $i0 = lengthof r1;

        if $i0 != 0 goto label01;

        $d20 = staticinvoke <org.mozilla.javascript.NativeDate: double now()>();

        $r8.<org.mozilla.javascript.NativeDate: double date> = $d20;

        return $r8;

     label01:
        $i1 = lengthof r1;

        if $i1 != 1 goto label05;

        r6 = r1[0];

        $z1 = r6 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label02;

        $r5 = (org.mozilla.javascript.Scriptable) r6;

        r6 = interfaceinvoke $r5.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

     label02:
        $z2 = r6 instanceof java.lang.String;

        if $z2 == 0 goto label03;

        $r4 = (java.lang.String) r6;

        d21 = staticinvoke <org.mozilla.javascript.NativeDate: double date_parseString(java.lang.String)>($r4);

        goto label04;

     label03:
        d21 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r6);

     label04:
        $d19 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>(d21);

        $r8.<org.mozilla.javascript.NativeDate: double date> = $d19;

        return $r8;

     label05:
        r7 = newarray (double)[7];

        i6 = 0;

     label06:
        if i6 >= 7 goto label11;

        $i4 = lengthof r1;

        if i6 >= $i4 goto label09;

        $r2 = r1[i6];

        $d16 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r2);

        $b5 = $d16 cmpl $d16;

        if $b5 != 0 goto label07;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d16);

        if $z0 == 0 goto label08;

     label07:
        $d17 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        $r8.<org.mozilla.javascript.NativeDate: double date> = $d17;

        return $r8;

     label08:
        $r3 = r1[i6];

        $d18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r3);

        r7[i6] = $d18;

        goto label10;

     label09:
        r7[i6] = 0.0;

     label10:
        i6 = i6 + 1;

        goto label06;

     label11:
        $d0 = r7[0];

        $b2 = $d0 cmpl 0.0;

        $i8 = (int) $b2;

        if $i8 < 0 goto label12;

        $d13 = r7[0];

        $b3 = $d13 cmpg 99.0;

        $i9 = (int) $b3;

        if $i9 > 0 goto label12;

        $d14 = r7[0];

        $d15 = $d14 + 1900.0;

        r7[0] = $d15;

     label12:
        $d22 = r7[2];

        $b7 = $d22 cmpg 1.0;

        $i10 = (int) $b7;

        if $i10 >= 0 goto label13;

        r7[2] = 1.0;

     label13:
        $d3 = r7[0];

        $d2 = r7[1];

        $d1 = r7[2];

        $d4 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>($d3, $d2, $d1);

        $d8 = r7[3];

        $d7 = r7[4];

        $d6 = r7[5];

        $d5 = r7[6];

        $d9 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeTime(double,double,double,double)>($d8, $d7, $d6, $d5);

        $d10 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d4, $d9);

        $d11 = staticinvoke <org.mozilla.javascript.NativeDate: double internalUTC(double)>($d10);

        $d12 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>($d11);

        $r8.<org.mozilla.javascript.NativeDate: double date> = $d12;

        return $r8;
    }

    private static java.lang.String toLocale_helper(double, int)
    {
        java.util.Date $r7;
        long $l1;
        int i0;
        java.lang.String $r8;
        java.text.DateFormat $r0, $r1, $r2, $r3, $r4, $r5, r6;
        double d0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 5: goto label1;
            case 6: goto label3;
            case 7: goto label5;
            default: goto label7;
        };

     label1:
        $r4 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateTimeFormatter>;

        if $r4 != null goto label2;

        $r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(1, 1);

        <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateTimeFormatter> = $r5;

     label2:
        r6 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateTimeFormatter>;

        goto label8;

     label3:
        $r2 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeTimeFormatter>;

        if $r2 != null goto label4;

        $r3 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>(1);

        <org.mozilla.javascript.NativeDate: java.text.DateFormat localeTimeFormatter> = $r3;

     label4:
        r6 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeTimeFormatter>;

        goto label8;

     label5:
        $r0 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateFormatter>;

        if $r0 != null goto label6;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(1);

        <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateFormatter> = $r1;

     label6:
        r6 = <org.mozilla.javascript.NativeDate: java.text.DateFormat localeDateFormatter>;

        goto label8;

     label7:
        r6 = null;

     label8:
        $r7 = new java.util.Date;

        $l1 = (long) d0;

        specialinvoke $r7.<java.util.Date: void <init>(long)>($l1);

        $r8 = virtualinvoke r6.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r7);

        return $r8;
    }

    private static java.lang.String js_toUTCString(double)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r1;
        double d0;

        d0 := @parameter0: double;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(60);

        $i0 = staticinvoke <org.mozilla.javascript.NativeDate: int WeekDay(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void appendWeekDayName(java.lang.StringBuffer,int)>($r0, $i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $i1 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r0, $i1, 2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i2 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void appendMonthName(java.lang.StringBuffer,int)>($r0, $i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i3 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d0);

        i7 = $i3;

        if $i3 >= 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        i7 = neg $i3;

     label1:
        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r0, i7, 4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $i4 = staticinvoke <org.mozilla.javascript.NativeDate: int HourFromTime(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r0, $i4, 2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i5 = staticinvoke <org.mozilla.javascript.NativeDate: int MinFromTime(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r0, $i5, 2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i6 = staticinvoke <org.mozilla.javascript.NativeDate: int SecFromTime(double)>(d0);

        staticinvoke <org.mozilla.javascript.NativeDate: void append0PaddedUint(java.lang.StringBuffer,int,int)>($r0, $i6, 2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" GMT");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private static void append0PaddedUint(java.lang.StringBuffer, int, int)
    {
        char $c1, $c4;
        java.lang.StringBuffer r0;
        int $i0, $i2, $i3, $i5, i6, i7, i8, i9, $i11, $i13, $i15, $i17;

        r0 := @parameter0: java.lang.StringBuffer;

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        if i6 >= 0 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        i8 = 1;

        $i11 = (int) -1;

        i9 = i7 + $i11;

        if i6 < 10 goto label5;

        if i6 >= 1000000000 goto label4;

     label2:
        $i5 = i8 * 10;

        if i6 >= $i5 goto label3;

        goto label5;

     label3:
        $i13 = (int) -1;

        i9 = i9 + $i13;

        i8 = $i5;

        goto label2;

     label4:
        $i15 = (int) -9;

        i9 = i9 + $i15;

        i8 = 1000000000;

     label5:
        if i9 <= 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        $i17 = (int) -1;

        i9 = i9 + $i17;

        goto label5;

     label6:
        if i8 == 1 goto label7;

        $i2 = i6 / i8;

        $i3 = 48 + $i2;

        $c4 = (char) $i3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        i6 = i6 % i8;

        i8 = i8 / 10;

        goto label6;

     label7:
        $i0 = 48 + i6;

        $c1 = (char) $i0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        return;
    }

    private static void appendMonthName(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer r1;
        int $i0, i2, i3, i4;
        char $c1;
        java.lang.String r0;

        r1 := @parameter0: java.lang.StringBuffer;

        i2 := @parameter1: int;

        r0 = "JanFebMarAprMayJunJulAugSepOctNovDec";

        i3 = i2 * 3;

        i4 = 0;

     label1:
        if i4 == 3 goto label2;

        $i0 = i3 + i4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private static void appendWeekDayName(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer r1;
        int $i0, i2, i3, i4;
        char $c1;
        java.lang.String r0;

        r1 := @parameter0: java.lang.StringBuffer;

        i2 := @parameter1: int;

        r0 = "SunMonTueWedThuFriSat";

        i3 = i2 * 3;

        i4 = 0;

     label1:
        if i4 == 3 goto label2;

        $i0 = i3 + i4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private static double makeTime(double, java.lang.Object[], int)
    {
        byte $b8, b9, $b10, b14, b15, b16, b17, b18, b19;
        boolean $z0, z1, z2, z3, z4, z5;
        java.lang.Object[] r1;
        double[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i11, $i12, i13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, d17;
        java.lang.Object $r0;

        d8 := @parameter0: double;

        r1 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        z1 = 1;

        z5 = 1;

        z4 = 1;

        tableswitch(i0)
        {
            case 31: goto label02;
            case 32: goto label01;
            case 33: goto label04;
            case 34: goto label03;
            case 35: goto label06;
            case 36: goto label05;
            case 37: goto label08;
            case 38: goto label07;
            default: goto label09;
        };

     label01:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label02:
        b9 = 1;

        b18 = 1;

        b17 = 1;

        b16 = 1;

        b15 = 1;

        b14 = 1;

        goto label10;

     label03:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label04:
        b9 = 2;

        b18 = 2;

        b17 = 2;

        b16 = 2;

        b15 = 2;

        b14 = 2;

        goto label10;

     label05:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label06:
        b9 = 3;

        b18 = 3;

        b17 = 3;

        b16 = 3;

        b15 = 3;

        b14 = 3;

        goto label10;

     label07:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label08:
        b9 = 4;

        b18 = 4;

        b17 = 4;

        b16 = 4;

        b15 = 4;

        b14 = 4;

        goto label10;

     label09:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        b9 = 0;

        b18 = 0;

        b17 = 0;

        b16 = 0;

        b15 = 0;

        b14 = 0;

     label10:
        $r2 = newarray (double)[4];

        $b10 = d8 cmpl d8;

        if $b10 == 0 goto label11;

        return d8;

     label11:
        $i1 = lengthof r1;

        if $i1 != 0 goto label12;

        r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] padArguments(java.lang.Object[],int)>(r1, 1);

     label12:
        i11 = 0;

     label13:
        $i12 = lengthof r1;

        if i11 >= $i12 goto label16;

        if i11 >= b15 goto label16;

        $r0 = r1[i11];

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r0);

        $r2[i11] = $d1;

        $d3 = $r2[i11];

        $d2 = $r2[i11];

        $b8 = $d3 cmpl $d2;

        if $b8 != 0 goto label14;

        $d5 = $r2[i11];

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d5);

        if $z0 == 0 goto label15;

     label14:
        $d4 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d4;

     label15:
        $d6 = $r2[i11];

        $d7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(double)>($d6);

        $r2[i11] = $d7;

        i11 = i11 + 1;

        goto label13;

     label16:
        if z4 == 0 goto label17;

        d9 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d8);

        goto label18;

     label17:
        d9 = d8;

     label18:
        i13 = 0;

        b19 = 0;

        z3 = 0;

        z2 = 0;

        $i7 = lengthof r1;

        if b16 < 4 goto label19;

        if 0 >= $i7 goto label19;

        i13 = 1;

        b19 = 1;

        z3 = 1;

        z2 = 1;

        d10 = $r2[0];

        goto label20;

     label19:
        $i2 = staticinvoke <org.mozilla.javascript.NativeDate: int HourFromTime(double)>(d9);

        d10 = (double) $i2;

     label20:
        if b17 < 3 goto label21;

        if z3 >= $i7 goto label21;

        i13 = z2 + 1;

        d11 = $r2[b19];

        goto label22;

     label21:
        $i3 = staticinvoke <org.mozilla.javascript.NativeDate: int MinFromTime(double)>(d9);

        d11 = (double) $i3;

     label22:
        if b18 < 2 goto label23;

        if i13 >= $i7 goto label23;

        $i6 = i13;

        i13 = i13 + 1;

        d12 = $r2[$i6];

        goto label24;

     label23:
        $i4 = staticinvoke <org.mozilla.javascript.NativeDate: int SecFromTime(double)>(d9);

        d12 = (double) $i4;

     label24:
        if b14 < 1 goto label25;

        if i13 >= $i7 goto label25;

        d13 = $r2[i13];

        goto label26;

     label25:
        $i5 = staticinvoke <org.mozilla.javascript.NativeDate: int msFromTime(double)>(d9);

        d13 = (double) $i5;

     label26:
        $d14 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeTime(double,double,double,double)>(d10, d11, d12, d13);

        $d15 = staticinvoke <org.mozilla.javascript.NativeDate: double Day(double)>(d9);

        $d16 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d15, $d14);

        d17 = $d16;

        if z5 == 0 goto label27;

        d17 = staticinvoke <org.mozilla.javascript.NativeDate: double internalUTC(double)>($d16);

     label27:
        $d0 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>(d17);

        return $d0;
    }

    private static double makeDate(double, java.lang.Object[], int)
    {
        byte $b1, $b6, b7, b13, b14, b15, b16, b17;
        boolean $z0, z1, z2, z3, z4, z5;
        java.lang.Object[] r1;
        double[] $r2;
        int i0, $i2, $i3, $i4, $i5, $i8, i9, $i10, i11, $i12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, d10, d11, d12, d13, $d14, $d15, $d16, d17;
        java.lang.Object $r0;

        d9 := @parameter0: double;

        r1 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        z1 = 1;

        z5 = 1;

        z4 = 1;

        tableswitch(i0)
        {
            case 39: goto label02;
            case 40: goto label01;
            case 41: goto label04;
            case 42: goto label03;
            case 43: goto label06;
            case 44: goto label05;
            default: goto label07;
        };

     label01:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label02:
        b7 = 1;

        b17 = 1;

        b16 = 1;

        b15 = 1;

        b14 = 1;

        goto label08;

     label03:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label04:
        b7 = 2;

        b17 = 2;

        b16 = 2;

        b15 = 2;

        b14 = 2;

        goto label08;

     label05:
        z1 = 0;

        z5 = 0;

        z4 = 0;

     label06:
        b7 = 3;

        b17 = 3;

        b16 = 3;

        b15 = 3;

        b14 = 3;

        goto label08;

     label07:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        b7 = 0;

        b17 = 0;

        b16 = 0;

        b15 = 0;

        b14 = 0;

     label08:
        $r2 = newarray (double)[3];

        $i8 = lengthof r1;

        if $i8 != 0 goto label09;

        r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] padArguments(java.lang.Object[],int)>(r1, 1);

     label09:
        i9 = 0;

     label10:
        $i10 = lengthof r1;

        if i9 >= $i10 goto label13;

        if i9 >= b15 goto label13;

        $r0 = r1[i9];

        $d2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r0);

        $r2[i9] = $d2;

        $d4 = $r2[i9];

        $d3 = $r2[i9];

        $b6 = $d4 cmpl $d3;

        if $b6 != 0 goto label11;

        $d6 = $r2[i9];

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d6);

        if $z0 == 0 goto label12;

     label11:
        $d5 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d5;

     label12:
        $d7 = $r2[i9];

        $d8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(double)>($d7);

        $r2[i9] = $d8;

        i9 = i9 + 1;

        goto label10;

     label13:
        $b1 = d9 cmpl d9;

        if $b1 == 0 goto label15;

        $i5 = lengthof r1;

        if $i5 >= 3 goto label14;

        $d1 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d1;

     label14:
        d10 = 0.0;

        goto label17;

     label15:
        if z5 == 0 goto label16;

        d10 = staticinvoke <org.mozilla.javascript.NativeDate: double LocalTime(double)>(d9);

        goto label17;

     label16:
        d10 = d9;

     label17:
        i11 = 0;

        z3 = 0;

        b13 = 0;

        z2 = 0;

        $i12 = lengthof r1;

        if b14 < 3 goto label18;

        if 0 >= $i12 goto label18;

        i11 = 1;

        z3 = 1;

        b13 = 1;

        z2 = 1;

        d11 = $r2[0];

        goto label19;

     label18:
        $i2 = staticinvoke <org.mozilla.javascript.NativeDate: int YearFromTime(double)>(d10);

        d11 = (double) $i2;

     label19:
        if b16 < 2 goto label20;

        if z2 >= $i12 goto label20;

        i11 = z3 + 1;

        d12 = $r2[b13];

        goto label21;

     label20:
        $i3 = staticinvoke <org.mozilla.javascript.NativeDate: int MonthFromTime(double)>(d10);

        d12 = (double) $i3;

     label21:
        if b17 < 1 goto label22;

        if i11 >= $i12 goto label22;

        d13 = $r2[i11];

        goto label23;

     label22:
        $i4 = staticinvoke <org.mozilla.javascript.NativeDate: int DateFromTime(double)>(d10);

        d13 = (double) $i4;

     label23:
        $d14 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDay(double,double,double)>(d11, d12, d13);

        $d15 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeWithinDay(double)>(d10);

        $d16 = staticinvoke <org.mozilla.javascript.NativeDate: double MakeDate(double,double)>($d14, $d15);

        d17 = $d16;

        if z4 == 0 goto label24;

        d17 = staticinvoke <org.mozilla.javascript.NativeDate: double internalUTC(double)>($d16);

     label24:
        $d0 = staticinvoke <org.mozilla.javascript.NativeDate: double TimeClip(double)>(d17);

        return $d0;
    }

    protected int findPrototypeId(java.lang.String)
    {
        org.mozilla.javascript.NativeDate r1;
        byte b25;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;
        int $i0, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24;

        r1 := @this: org.mozilla.javascript.NativeDate;

        r0 := @parameter0: java.lang.String;

        b25 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 6: goto label01;
            case 7: goto label02;
            case 8: goto label11;
            case 9: goto label19;
            case 10: goto label20;
            case 11: goto label26;
            case 12: goto label37;
            case 13: goto label39;
            case 14: goto label43;
            case 15: goto label46;
            case 16: goto label53;
            case 17: goto label48;
            case 18: goto label49;
            default: goto label53;
        };

     label01:
        r2 = "getDay";

        r5 = "getDay";

        r4 = "getDay";

        r3 = "getDay";

        b25 = 19;

        goto label53;

     label02:
        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i26 = (int) $c21;

        lookupswitch($i26)
        {
            case 68: goto label03;
            case 84: goto label05;
            case 89: goto label07;
            case 117: goto label09;
            default: goto label10;
        };

     label03:
        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i27 = (int) $c24;

        if $i27 != 103 goto label04;

        r2 = "getDate";

        r5 = "getDate";

        r4 = "getDate";

        r3 = "getDate";

        b25 = 17;

        goto label53;

     label04:
        $i28 = (int) $c24;

        if $i28 != 115 goto label53;

        r2 = "setDate";

        r5 = "setDate";

        r4 = "setDate";

        r3 = "setDate";

        b25 = 39;

        goto label53;

     label05:
        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i29 = (int) $c23;

        if $i29 != 103 goto label06;

        r2 = "getTime";

        r5 = "getTime";

        r4 = "getTime";

        r3 = "getTime";

        b25 = 11;

        goto label53;

     label06:
        $i30 = (int) $c23;

        if $i30 != 115 goto label53;

        r2 = "setTime";

        r5 = "setTime";

        r4 = "setTime";

        r3 = "setTime";

        b25 = 30;

        goto label53;

     label07:
        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i31 = (int) $c22;

        if $i31 != 103 goto label08;

        r2 = "getYear";

        r5 = "getYear";

        r4 = "getYear";

        r3 = "getYear";

        b25 = 12;

        goto label53;

     label08:
        $i32 = (int) $c22;

        if $i32 != 115 goto label53;

        r2 = "setYear";

        r5 = "setYear";

        r4 = "setYear";

        r3 = "setYear";

        b25 = 45;

        goto label53;

     label09:
        r2 = "valueOf";

        r5 = "valueOf";

        r4 = "valueOf";

        r3 = "valueOf";

        b25 = 10;

        goto label53;

     label10:
        goto label53;

     label11:
        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i33 = (int) $c18;

        lookupswitch($i33)
        {
            case 72: goto label12;
            case 77: goto label14;
            case 111: goto label16;
            case 116: goto label17;
            default: goto label18;
        };

     label12:
        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i34 = (int) $c20;

        if $i34 != 103 goto label13;

        r2 = "getHours";

        r5 = "getHours";

        r4 = "getHours";

        r3 = "getHours";

        b25 = 21;

        goto label53;

     label13:
        $i35 = (int) $c20;

        if $i35 != 115 goto label53;

        r2 = "setHours";

        r5 = "setHours";

        r4 = "setHours";

        r3 = "setHours";

        b25 = 37;

        goto label53;

     label14:
        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i36 = (int) $c19;

        if $i36 != 103 goto label15;

        r2 = "getMonth";

        r5 = "getMonth";

        r4 = "getMonth";

        r3 = "getMonth";

        b25 = 15;

        goto label53;

     label15:
        $i37 = (int) $c19;

        if $i37 != 115 goto label53;

        r2 = "setMonth";

        r5 = "setMonth";

        r4 = "setMonth";

        r3 = "setMonth";

        b25 = 41;

        goto label53;

     label16:
        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b25 = 9;

        goto label53;

     label17:
        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b25 = 2;

        goto label53;

     label18:
        goto label53;

     label19:
        r2 = "getUTCDay";

        r5 = "getUTCDay";

        r4 = "getUTCDay";

        r3 = "getUTCDay";

        b25 = 20;

        goto label53;

     label20:
        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i38 = (int) $c14;

        if $i38 != 77 goto label22;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i39 = (int) $c17;

        if $i39 != 103 goto label21;

        r2 = "getMinutes";

        r5 = "getMinutes";

        r4 = "getMinutes";

        r3 = "getMinutes";

        b25 = 23;

        goto label53;

     label21:
        $i40 = (int) $c17;

        if $i40 != 115 goto label53;

        r2 = "setMinutes";

        r5 = "setMinutes";

        r4 = "setMinutes";

        r3 = "setMinutes";

        b25 = 35;

        goto label53;

     label22:
        $i41 = (int) $c14;

        if $i41 != 83 goto label24;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i42 = (int) $c16;

        if $i42 != 103 goto label23;

        r2 = "getSeconds";

        r5 = "getSeconds";

        r4 = "getSeconds";

        r3 = "getSeconds";

        b25 = 25;

        goto label53;

     label23:
        $i43 = (int) $c16;

        if $i43 != 115 goto label53;

        r2 = "setSeconds";

        r5 = "setSeconds";

        r4 = "setSeconds";

        r3 = "setSeconds";

        b25 = 33;

        goto label53;

     label24:
        $i44 = (int) $c14;

        if $i44 != 85 goto label53;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i45 = (int) $c15;

        if $i45 != 103 goto label25;

        r2 = "getUTCDate";

        r5 = "getUTCDate";

        r4 = "getUTCDate";

        r3 = "getUTCDate";

        b25 = 18;

        goto label53;

     label25:
        $i46 = (int) $c15;

        if $i46 != 115 goto label53;

        r2 = "setUTCDate";

        r5 = "setUTCDate";

        r4 = "setUTCDate";

        r3 = "setUTCDate";

        b25 = 40;

        goto label53;

     label26:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i47 = (int) $c9;

        lookupswitch($i47)
        {
            case 70: goto label27;
            case 77: goto label29;
            case 84: goto label30;
            case 85: goto label31;
            case 115: goto label35;
            default: goto label36;
        };

     label27:
        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i48 = (int) $c13;

        if $i48 != 103 goto label28;

        r2 = "getFullYear";

        r5 = "getFullYear";

        r4 = "getFullYear";

        r3 = "getFullYear";

        b25 = 13;

        goto label53;

     label28:
        $i49 = (int) $c13;

        if $i49 != 115 goto label53;

        r2 = "setFullYear";

        r5 = "setFullYear";

        r4 = "setFullYear";

        r3 = "setFullYear";

        b25 = 43;

        goto label53;

     label29:
        r2 = "toGMTString";

        r5 = "toGMTString";

        r4 = "toGMTString";

        r3 = "toGMTString";

        b25 = 8;

        goto label53;

     label30:
        r2 = "toUTCString";

        r5 = "toUTCString";

        r4 = "toUTCString";

        r3 = "toUTCString";

        b25 = 8;

        goto label53;

     label31:
        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i50 = (int) $c10;

        if $i50 != 103 goto label33;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(9);

        $i51 = (int) $c12;

        if $i51 != 114 goto label32;

        r2 = "getUTCHours";

        r5 = "getUTCHours";

        r4 = "getUTCHours";

        r3 = "getUTCHours";

        b25 = 22;

        goto label53;

     label32:
        $i52 = (int) $c12;

        if $i52 != 116 goto label53;

        r2 = "getUTCMonth";

        r5 = "getUTCMonth";

        r4 = "getUTCMonth";

        r3 = "getUTCMonth";

        b25 = 16;

        goto label53;

     label33:
        $i53 = (int) $c10;

        if $i53 != 115 goto label53;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(9);

        $i54 = (int) $c11;

        if $i54 != 114 goto label34;

        r2 = "setUTCHours";

        r5 = "setUTCHours";

        r4 = "setUTCHours";

        r3 = "setUTCHours";

        b25 = 38;

        goto label53;

     label34:
        $i55 = (int) $c11;

        if $i55 != 116 goto label53;

        r2 = "setUTCMonth";

        r5 = "setUTCMonth";

        r4 = "setUTCMonth";

        r3 = "setUTCMonth";

        b25 = 42;

        goto label53;

     label35:
        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b25 = 1;

        goto label53;

     label36:
        goto label53;

     label37:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i56 = (int) $c8;

        if $i56 != 68 goto label38;

        r2 = "toDateString";

        r5 = "toDateString";

        r4 = "toDateString";

        r3 = "toDateString";

        b25 = 4;

        goto label53;

     label38:
        $i57 = (int) $c8;

        if $i57 != 84 goto label53;

        r2 = "toTimeString";

        r5 = "toTimeString";

        r4 = "toTimeString";

        r3 = "toTimeString";

        b25 = 3;

        goto label53;

     label39:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i58 = (int) $c5;

        if $i58 != 103 goto label41;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(6);

        $i59 = (int) $c7;

        if $i59 != 77 goto label40;

        r2 = "getUTCMinutes";

        r5 = "getUTCMinutes";

        r4 = "getUTCMinutes";

        r3 = "getUTCMinutes";

        b25 = 24;

        goto label53;

     label40:
        $i60 = (int) $c7;

        if $i60 != 83 goto label53;

        r2 = "getUTCSeconds";

        r5 = "getUTCSeconds";

        r4 = "getUTCSeconds";

        r3 = "getUTCSeconds";

        b25 = 26;

        goto label53;

     label41:
        $i61 = (int) $c5;

        if $i61 != 115 goto label53;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(6);

        $i62 = (int) $c6;

        if $i62 != 77 goto label42;

        r2 = "setUTCMinutes";

        r5 = "setUTCMinutes";

        r4 = "setUTCMinutes";

        r3 = "setUTCMinutes";

        b25 = 36;

        goto label53;

     label42:
        $i63 = (int) $c6;

        if $i63 != 83 goto label53;

        r2 = "setUTCSeconds";

        r5 = "setUTCSeconds";

        r4 = "setUTCSeconds";

        r3 = "setUTCSeconds";

        b25 = 34;

        goto label53;

     label43:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i64 = (int) $c4;

        if $i64 != 103 goto label44;

        r2 = "getUTCFullYear";

        r5 = "getUTCFullYear";

        r4 = "getUTCFullYear";

        r3 = "getUTCFullYear";

        b25 = 14;

        goto label53;

     label44:
        $i65 = (int) $c4;

        if $i65 != 115 goto label45;

        r2 = "setUTCFullYear";

        r5 = "setUTCFullYear";

        r4 = "setUTCFullYear";

        r3 = "setUTCFullYear";

        b25 = 44;

        goto label53;

     label45:
        $i66 = (int) $c4;

        if $i66 != 116 goto label53;

        r2 = "toLocaleString";

        r5 = "toLocaleString";

        r4 = "toLocaleString";

        r3 = "toLocaleString";

        b25 = 5;

        goto label53;

     label46:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i67 = (int) $c3;

        if $i67 != 103 goto label47;

        r2 = "getMilliseconds";

        r5 = "getMilliseconds";

        r4 = "getMilliseconds";

        r3 = "getMilliseconds";

        b25 = 27;

        goto label53;

     label47:
        $i68 = (int) $c3;

        if $i68 != 115 goto label53;

        r2 = "setMilliseconds";

        r5 = "setMilliseconds";

        r4 = "setMilliseconds";

        r3 = "setMilliseconds";

        b25 = 31;

        goto label53;

     label48:
        r2 = "getTimezoneOffset";

        r5 = "getTimezoneOffset";

        r4 = "getTimezoneOffset";

        r3 = "getTimezoneOffset";

        b25 = 29;

        goto label53;

     label49:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i69 = (int) $c1;

        if $i69 != 103 goto label50;

        r2 = "getUTCMilliseconds";

        r5 = "getUTCMilliseconds";

        r4 = "getUTCMilliseconds";

        r3 = "getUTCMilliseconds";

        b25 = 28;

        goto label53;

     label50:
        $i70 = (int) $c1;

        if $i70 != 115 goto label51;

        r2 = "setUTCMilliseconds";

        r5 = "setUTCMilliseconds";

        r4 = "setUTCMilliseconds";

        r3 = "setUTCMilliseconds";

        b25 = 32;

        goto label53;

     label51:
        $i71 = (int) $c1;

        if $i71 != 116 goto label53;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(8);

        $i72 = (int) $c2;

        if $i72 != 68 goto label52;

        r2 = "toLocaleDateString";

        r5 = "toLocaleDateString";

        r4 = "toLocaleDateString";

        r3 = "toLocaleDateString";

        b25 = 7;

        goto label53;

     label52:
        $i73 = (int) $c2;

        if $i73 != 84 goto label53;

        r2 = "toLocaleTimeString";

        r5 = "toLocaleTimeString";

        r4 = "toLocaleTimeString";

        r3 = "toLocaleTimeString";

        b25 = 6;

        goto label53;

     label53:
        if r4 == null goto label54;

        if r3 == r0 goto label54;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label54;

        b25 = 0;

     label54:
        return b25;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeDate: int Id_toGMTString> = 8;

        <org.mozilla.javascript.NativeDate: int MAX_PROTOTYPE_ID> = 45;

        <org.mozilla.javascript.NativeDate: int Id_setYear> = 45;

        <org.mozilla.javascript.NativeDate: int Id_setUTCFullYear> = 44;

        <org.mozilla.javascript.NativeDate: int Id_setFullYear> = 43;

        <org.mozilla.javascript.NativeDate: int Id_setUTCMonth> = 42;

        <org.mozilla.javascript.NativeDate: int Id_setMonth> = 41;

        <org.mozilla.javascript.NativeDate: int Id_setUTCDate> = 40;

        <org.mozilla.javascript.NativeDate: int Id_setDate> = 39;

        <org.mozilla.javascript.NativeDate: int Id_setUTCHours> = 38;

        <org.mozilla.javascript.NativeDate: int Id_setHours> = 37;

        <org.mozilla.javascript.NativeDate: int Id_setUTCMinutes> = 36;

        <org.mozilla.javascript.NativeDate: int Id_setMinutes> = 35;

        <org.mozilla.javascript.NativeDate: int Id_setUTCSeconds> = 34;

        <org.mozilla.javascript.NativeDate: int Id_setSeconds> = 33;

        <org.mozilla.javascript.NativeDate: int Id_setUTCMilliseconds> = 32;

        <org.mozilla.javascript.NativeDate: int Id_setMilliseconds> = 31;

        <org.mozilla.javascript.NativeDate: int Id_setTime> = 30;

        <org.mozilla.javascript.NativeDate: int Id_getTimezoneOffset> = 29;

        <org.mozilla.javascript.NativeDate: int Id_getUTCMilliseconds> = 28;

        <org.mozilla.javascript.NativeDate: int Id_getMilliseconds> = 27;

        <org.mozilla.javascript.NativeDate: int Id_getUTCSeconds> = 26;

        <org.mozilla.javascript.NativeDate: int Id_getSeconds> = 25;

        <org.mozilla.javascript.NativeDate: int Id_getUTCMinutes> = 24;

        <org.mozilla.javascript.NativeDate: int Id_getMinutes> = 23;

        <org.mozilla.javascript.NativeDate: int Id_getUTCHours> = 22;

        <org.mozilla.javascript.NativeDate: int Id_getHours> = 21;

        <org.mozilla.javascript.NativeDate: int Id_getUTCDay> = 20;

        <org.mozilla.javascript.NativeDate: int Id_getDay> = 19;

        <org.mozilla.javascript.NativeDate: int Id_getUTCDate> = 18;

        <org.mozilla.javascript.NativeDate: int Id_getDate> = 17;

        <org.mozilla.javascript.NativeDate: int Id_getUTCMonth> = 16;

        <org.mozilla.javascript.NativeDate: int Id_getMonth> = 15;

        <org.mozilla.javascript.NativeDate: int Id_getUTCFullYear> = 14;

        <org.mozilla.javascript.NativeDate: int Id_getFullYear> = 13;

        <org.mozilla.javascript.NativeDate: int Id_getYear> = 12;

        <org.mozilla.javascript.NativeDate: int Id_getTime> = 11;

        <org.mozilla.javascript.NativeDate: int Id_valueOf> = 10;

        <org.mozilla.javascript.NativeDate: int Id_toSource> = 9;

        <org.mozilla.javascript.NativeDate: int Id_toUTCString> = 8;

        <org.mozilla.javascript.NativeDate: int Id_toLocaleDateString> = 7;

        <org.mozilla.javascript.NativeDate: int Id_toLocaleTimeString> = 6;

        <org.mozilla.javascript.NativeDate: int Id_toLocaleString> = 5;

        <org.mozilla.javascript.NativeDate: int Id_toDateString> = 4;

        <org.mozilla.javascript.NativeDate: int Id_toTimeString> = 3;

        <org.mozilla.javascript.NativeDate: int Id_toString> = 2;

        <org.mozilla.javascript.NativeDate: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeDate: int ConstructorId_UTC> = -1;

        <org.mozilla.javascript.NativeDate: int ConstructorId_parse> = -2;

        <org.mozilla.javascript.NativeDate: int ConstructorId_now> = -3;

        <org.mozilla.javascript.NativeDate: int MAXARGS> = 7;

        <org.mozilla.javascript.NativeDate: boolean TZO_WORKAROUND> = 0;

        <org.mozilla.javascript.NativeDate: double msPerMinute> = 60000.0;

        <org.mozilla.javascript.NativeDate: double msPerHour> = 3600000.0;

        <org.mozilla.javascript.NativeDate: double msPerDay> = 8.64E7;

        <org.mozilla.javascript.NativeDate: double SecondsPerHour> = 3600.0;

        <org.mozilla.javascript.NativeDate: double SecondsPerDay> = 86400.0;

        <org.mozilla.javascript.NativeDate: double MinutesPerDay> = 1440.0;

        <org.mozilla.javascript.NativeDate: double msPerSecond> = 1000.0;

        <org.mozilla.javascript.NativeDate: double SecondsPerMinute> = 60.0;

        <org.mozilla.javascript.NativeDate: double MinutesPerHour> = 60.0;

        <org.mozilla.javascript.NativeDate: double HoursPerDay> = 24.0;

        <org.mozilla.javascript.NativeDate: double HalfTimeDomain> = 8.64E15;

        <org.mozilla.javascript.NativeDate: java.lang.String js_NaN_date_str> = "Invalid Date";

        <org.mozilla.javascript.NativeDate: long serialVersionUID> = -8307438915861678966L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeDate: java.lang.Object DATE_TAG> = $r0;

        return;
    }
}
