public class com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet extends java.lang.Object
{
    protected static org.slf4j.Logger logger;
    protected com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext;
    protected boolean isMonotonic;
    protected java.util.ArrayList conflictSet;
    protected int nPos;
    protected int nNeg;

    public void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext, boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext r2;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet r0;
        java.util.ArrayList $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet;

        r2 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet> = $r1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg> = 0;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext> = r2;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: boolean isMonotonic> = z0;

        return;
    }

    public void add(com.hp.hpl.jena.reasoner.rulesys.Rule, com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment, boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry $r1, r8;
        boolean $z0, z1, $z2, $z3, $z4, z5, $z6;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment r3, $r10;
        com.hp.hpl.jena.reasoner.InfGraph $r13;
        java.util.ArrayList $r4, $r5;
        com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Iterator $r6;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext $r11, $r12, $r14;
        com.hp.hpl.jena.reasoner.rulesys.Rule r2, $r9;
        java.lang.Object $r7;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine $r16;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet;

        r2 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.Rule;

        r3 := @parameter1: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment;

        z1 := @parameter2: boolean;

        $z0 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: boolean isMonotonic>;

        if $z0 == 0 goto label01;

        $r11 = new com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext;

        $r12 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext>;

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.InfGraph getGraph()>();

        $r15 = (com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI) $r13;

        $r14 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext>;

        $r16 = virtualinvoke $r14.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine getEngine()>();

        specialinvoke $r11.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void <init>(com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI,com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine)>($r15, $r16);

        virtualinvoke $r11.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void setEnv(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>(r3);

        virtualinvoke $r11.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void setRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>(r2);

        staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: void execute(com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext,boolean)>($r11, z1);

        goto label11;

     label01:
        z5 = 0;

        if z1 == 0 goto label02;

        $i9 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg>;

        if $i9 > 0 goto label03;

     label02:
        if z1 != 0 goto label09;

        $i4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos>;

        if $i4 <= 0 goto label09;

     label03:
        $r5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label09;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry) $r7;

        $r9 = r8.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        if $r9 == r2 goto label05;

        goto label04;

     label05:
        $r10 = r8.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment env>;

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label08;

        $z3 = r8.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: boolean isAdd>;

        if z1 == $z3 goto label08;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        $z4 = r8.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: boolean isAdd>;

        if $z4 == 0 goto label06;

        $i7 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos>;

        $i8 = $i7 - 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos> = $i8;

        goto label07;

     label06:
        $i5 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg>;

        $i6 = $i5 - 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg> = $i6;

     label07:
        z5 = 1;

     label08:
        goto label04;

     label09:
        if z5 != 0 goto label11;

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet>;

        $r1 = new com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry;

        specialinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: void <init>(com.hp.hpl.jena.reasoner.rulesys.Rule,com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment,boolean)>(r2, r3, z1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        if z1 == 0 goto label10;

        $i2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos> = $i3;

        goto label11;

     label10:
        $i0 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg> = $i1;

     label11:
        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        return $z0;
    }

    public boolean fireOne()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry r4;
        com.hp.hpl.jena.reasoner.InfGraph $r7;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r11;
        java.util.ArrayList $r1, $r2;
        com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI $r9;
        int $i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext $r5, $r6, $r8;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r12;
        java.lang.Object $r3;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine $r10;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

        $r2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: java.util.ArrayList conflictSet>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        r4 = (com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry) $r3;

        $z1 = r4.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: boolean isAdd>;

        if $z1 == 0 goto label2;

        $i4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos>;

        $i5 = $i4 - 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nPos> = $i5;

        goto label3;

     label2:
        $i2 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg>;

        $i3 = $i2 - 1;

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: int nNeg> = $i3;

     label3:
        $r5 = new com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext;

        $r6 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext>;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.InfGraph getGraph()>();

        $r9 = (com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI) $r7;

        $r8 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext gcontext>;

        $r10 = virtualinvoke $r8.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine getEngine()>();

        specialinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void <init>(com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI,com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine)>($r9, $r10);

        $r11 = r4.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment env>;

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void setEnv(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>($r11);

        $r12 = r4.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: com.hp.hpl.jena.reasoner.rulesys.Rule rule>;

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: void setRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r12);

        $z2 = virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: boolean shouldStillFire()>();

        if $z2 == 0 goto label4;

        $z3 = r4.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet$CSEntry: boolean isAdd>;

        staticinvoke <com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: void execute(com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext,boolean)>($r5, $z3);

     label4:
        return 1;
    }

    public static void execute(com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext, boolean)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleDerivation $r27;
        com.hp.hpl.jena.reasoner.rulesys.ClauseEntry $r6, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9, $z10;
        com.hp.hpl.jena.graph.Node[] $r24;
        com.hp.hpl.jena.graph.Triple $r26, $r31;
        com.hp.hpl.jena.reasoner.TriplePattern $r25, $r30;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r17, $r19, $r20, $r22, $r32, $r34, $r36;
        com.hp.hpl.jena.reasoner.rulesys.Functor r39;
        com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment $r2;
        com.hp.hpl.jena.reasoner.InfGraph $r3;
        java.util.ArrayList $r28, r38;
        com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI r4;
        int $i0, $i1, $i2, i3, i4, $i5;
        java.lang.String $r11, $r18, $r21, $r23, $r35, $r37;
        com.hp.hpl.jena.reasoner.ReasonerException $r7, $r15;
        org.slf4j.Logger $r33;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext r0;
        com.hp.hpl.jena.reasoner.rulesys.Rule $r1, $r12, $r13, r40;
        com.hp.hpl.jena.reasoner.rulesys.Builtin $r14;
        com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine $r5;

        r0 := @parameter0: com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext;

        z6 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.rulesys.Rule getRule()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment getEnv()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.InfGraph getGraph()>();

        r4 = (com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI) $r3;

        $z0 = interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: boolean shouldTrace()>();

        if $z0 == 0 goto label01;

        $r33 = <com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: org.slf4j.Logger logger>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fired rule: ");

        $r35 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String toShortString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r37);

     label01:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine getEngine()>();

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine: void incRuleCount()>();

        r38 = null;

        $z1 = interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: boolean shouldLogDerivations()>();

        if $z1 == 0 goto label04;

        if z6 == 0 goto label04;

        $r28 = new java.util.ArrayList;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: int bodyLength()>();

        specialinvoke $r28.<java.util.ArrayList: void <init>(int)>($i1);

        r38 = $r28;

        i3 = 0;

     label02:
        $i2 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: int bodyLength()>();

        if i3 >= $i2 goto label04;

        $r29 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getBodyElement(int)>(i3);

        $z10 = $r29 instanceof com.hp.hpl.jena.reasoner.TriplePattern;

        if $z10 == 0 goto label03;

        $r30 = (com.hp.hpl.jena.reasoner.TriplePattern) $r29;

        $r31 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment: com.hp.hpl.jena.graph.Triple instantiate(com.hp.hpl.jena.reasoner.TriplePattern)>($r30);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r31);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        i4 = 0;

     label05:
        $i5 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: int headLength()>();

        if i4 >= $i5 goto label15;

        $r6 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.ClauseEntry getHeadElement(int)>(i4);

        $z2 = $r6 instanceof com.hp.hpl.jena.reasoner.TriplePattern;

        if $z2 == 0 goto label08;

        $r25 = (com.hp.hpl.jena.reasoner.TriplePattern) $r6;

        $r26 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment: com.hp.hpl.jena.graph.Triple instantiate(com.hp.hpl.jena.reasoner.TriplePattern)>($r25);

        if z6 == 0 goto label06;

        $z8 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: boolean contains(com.hp.hpl.jena.graph.Triple)>($r26);

        if $z8 != 0 goto label07;

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine: void addTriple(com.hp.hpl.jena.graph.Triple,boolean)>($r26, 1);

        $z9 = interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: boolean shouldLogDerivations()>();

        if $z9 == 0 goto label07;

        $r27 = new com.hp.hpl.jena.reasoner.rulesys.RuleDerivation;

        specialinvoke $r27.<com.hp.hpl.jena.reasoner.rulesys.RuleDerivation: void <init>(com.hp.hpl.jena.reasoner.rulesys.Rule,com.hp.hpl.jena.graph.Triple,java.util.List,com.hp.hpl.jena.reasoner.InfGraph)>($r1, $r26, r38, r4);

        interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: void logDerivation(com.hp.hpl.jena.graph.Triple,com.hp.hpl.jena.reasoner.Derivation)>($r26, $r27);

        goto label07;

     label06:
        $z7 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.RETERuleContext: boolean contains(com.hp.hpl.jena.graph.Triple)>($r26);

        if $z7 == 0 goto label07;

        virtualinvoke $r5.<com.hp.hpl.jena.reasoner.rulesys.impl.RETEEngine: void deleteTriple(com.hp.hpl.jena.graph.Triple,boolean)>($r26, 1);

     label07:
        goto label14;

     label08:
        $z3 = $r6 instanceof com.hp.hpl.jena.reasoner.rulesys.Functor;

        if $z3 == 0 goto label11;

        if z6 == 0 goto label11;

        r39 = (com.hp.hpl.jena.reasoner.rulesys.Functor) $r6;

        $r14 = virtualinvoke r39.<com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.reasoner.rulesys.Builtin getImplementor()>();

        if $r14 == null goto label09;

        $r24 = virtualinvoke r39.<com.hp.hpl.jena.reasoner.rulesys.Functor: com.hp.hpl.jena.graph.Node[] getBoundArgs(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>($r2);

        $i0 = virtualinvoke r39.<com.hp.hpl.jena.reasoner.rulesys.Functor: int getArgLength()>();

        interfaceinvoke $r14.<com.hp.hpl.jena.reasoner.rulesys.Builtin: void headAction(com.hp.hpl.jena.graph.Node[],int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>($r24, $i0, r0);

        goto label10;

     label09:
        $r15 = new com.hp.hpl.jena.reasoner.ReasonerException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invoking undefined Functor ");

        $r18 = virtualinvoke r39.<com.hp.hpl.jena.reasoner.rulesys.Functor: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r21 = virtualinvoke $r1.<com.hp.hpl.jena.reasoner.rulesys.Rule: java.lang.String toShortString()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>($r23);

        throw $r15;

     label10:
        goto label14;

     label11:
        $z4 = $r6 instanceof com.hp.hpl.jena.reasoner.rulesys.Rule;

        if $z4 == 0 goto label14;

        r40 = (com.hp.hpl.jena.reasoner.rulesys.Rule) $r6;

        $z5 = virtualinvoke r40.<com.hp.hpl.jena.reasoner.rulesys.Rule: boolean isBackward()>();

        if $z5 == 0 goto label13;

        if z6 == 0 goto label12;

        $r13 = virtualinvoke r40.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.Rule instantiate(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>($r2);

        interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: void addBRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r13);

        goto label14;

     label12:
        $r12 = virtualinvoke r40.<com.hp.hpl.jena.reasoner.rulesys.Rule: com.hp.hpl.jena.reasoner.rulesys.Rule instantiate(com.hp.hpl.jena.reasoner.rulesys.BindingEnvironment)>($r2);

        interfaceinvoke r4.<com.hp.hpl.jena.reasoner.rulesys.ForwardRuleInfGraphI: void deleteBRule(com.hp.hpl.jena.reasoner.rulesys.Rule)>($r12);

        goto label14;

     label13:
        $r7 = new com.hp.hpl.jena.reasoner.ReasonerException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non-backward subrule : ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label14:
        i4 = i4 + 1;

        goto label05;

     label15:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/reasoner/rulesys/impl/FRuleEngine;");

        <com.hp.hpl.jena.reasoner.rulesys.impl.RETEConflictSet: org.slf4j.Logger logger> = $r0;

        return;
    }
}
