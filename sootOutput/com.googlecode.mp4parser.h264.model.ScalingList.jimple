public class com.googlecode.mp4parser.h264.model.ScalingList extends java.lang.Object
{
    public int[] scalingList;
    public boolean useDefaultScalingMatrixFlag;

    public void <init>()
    {
        com.googlecode.mp4parser.h264.model.ScalingList r0;

        r0 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(com.googlecode.mp4parser.h264.write.CAVLCWriter) throws java.io.IOException
    {
        int[] $r1, $r2, $r4;
        com.googlecode.mp4parser.h264.write.CAVLCWriter r3;
        int $i0, $i1, i2, i3, i4, $i5;
        com.googlecode.mp4parser.h264.model.ScalingList r0;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        r3 := @parameter0: com.googlecode.mp4parser.h264.write.CAVLCWriter;

        $z0 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag>;

        if $z0 == 0 goto label1;

        virtualinvoke r3.<com.googlecode.mp4parser.h264.write.CAVLCWriter: void writeSE(int,java.lang.String)>(0, "SPS: ");

        return;

     label1:
        i3 = 8;

        i4 = 0;

        goto label4;

     label2:
        if 8 == 0 goto label3;

        $r2 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $i0 = $r2[i4];

        $i1 = $i0 - i3;

        i2 = $i1 - 256;

        virtualinvoke r3.<com.googlecode.mp4parser.h264.write.CAVLCWriter: void writeSE(int,java.lang.String)>(i2, "SPS: ");

     label3:
        $r1 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        i3 = $r1[i4];

        i4 = i4 + 1;

     label4:
        $r4 = r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $i5 = lengthof $r4;

        if i4 < $i5 goto label2;

        return;
    }

    public static com.googlecode.mp4parser.h264.model.ScalingList read(com.googlecode.mp4parser.h264.read.CAVLCReader, int) throws java.io.IOException
    {
        int[] $r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, $i8;
        com.googlecode.mp4parser.h264.model.ScalingList $r0;
        com.googlecode.mp4parser.h264.read.CAVLCReader r4;
        boolean $z0;

        r4 := @parameter0: com.googlecode.mp4parser.h264.read.CAVLCReader;

        i0 := @parameter1: int;

        $r0 = new com.googlecode.mp4parser.h264.model.ScalingList;

        specialinvoke $r0.<com.googlecode.mp4parser.h264.model.ScalingList: void <init>()>();

        $r1 = newarray (int)[i0];

        $r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList> = $r1;

        i5 = 8;

        i6 = 8;

        i7 = 0;

        goto label7;

     label1:
        if i6 == 0 goto label4;

        $i2 = virtualinvoke r4.<com.googlecode.mp4parser.h264.read.CAVLCReader: int readSE(java.lang.String)>("deltaScale");

        $i3 = i5 + $i2;

        $i4 = $i3 + 256;

        i6 = $i4 % 256;

        if i7 != 0 goto label2;

        if i6 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r0.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag> = $z0;

     label4:
        $r2 = $r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $i1 = i7;

        if i6 != 0 goto label5;

        $i8 = i5;

        goto label6;

     label5:
        $i8 = i6;

     label6:
        $r2[$i1] = $i8;

        $r3 = $r0.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        i5 = $r3[i7];

        i7 = i7 + 1;

     label7:
        if i7 < i0 goto label1;

        return $r0;
    }

    public java.lang.String toString()
    {
        int[] $r2;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        com.googlecode.mp4parser.h264.model.ScalingList r1;
        boolean $z0;

        r1 := @this: com.googlecode.mp4parser.h264.model.ScalingList;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ScalingList{scalingList=");

        $r2 = r1.<com.googlecode.mp4parser.h264.model.ScalingList: int[] scalingList>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", useDefaultScalingMatrixFlag=");

        $z0 = r1.<com.googlecode.mp4parser.h264.model.ScalingList: boolean useDefaultScalingMatrixFlag>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
