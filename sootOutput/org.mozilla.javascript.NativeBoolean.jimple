final class org.mozilla.javascript.NativeBoolean extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object BOOLEAN_TAG;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_toSource;
    private static final int Id_valueOf;
    private static final int MAX_PROTOTYPE_ID;
    private boolean booleanValue;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.NativeBoolean $r0;
        org.mozilla.javascript.Scriptable r1;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeBoolean;

        specialinvoke $r0.<org.mozilla.javascript.NativeBoolean: void <init>(boolean)>(0);

        virtualinvoke $r0.<org.mozilla.javascript.NativeBoolean: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(4, r1, z0);

        return;
    }

    private void <init>(boolean)
    {
        org.mozilla.javascript.NativeBoolean r0;
        boolean z0;

        r0 := @this: org.mozilla.javascript.NativeBoolean;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        r0.<org.mozilla.javascript.NativeBoolean: boolean booleanValue> = z0;

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeBoolean r0;

        r0 := @this: org.mozilla.javascript.NativeBoolean;

        return "Boolean";
    }

    public java.lang.Object getDefaultValue(java.lang.Class)
    {
        org.mozilla.javascript.NativeBoolean r2;
        java.lang.Boolean $r4;
        java.lang.Class r0, $r1;
        java.lang.Object $r3;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.NativeBoolean;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r0 != $r1 goto label1;

        $z0 = r2.<org.mozilla.javascript.NativeBoolean: boolean booleanValue>;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z0);

        return $r4;

     label1:
        $r3 = specialinvoke r2.<org.mozilla.javascript.IdScriptableObject: java.lang.Object getDefaultValue(java.lang.Class)>(r0);

        return $r3;
    }

    protected void initPrototypeId(int)
    {
        org.mozilla.javascript.NativeBoolean r0;
        byte b1;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.NativeBoolean;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        b1 = 1;

        r3 = "constructor";

        goto label6;

     label2:
        b1 = 0;

        r3 = "toString";

        goto label6;

     label3:
        b1 = 0;

        r3 = "toSource";

        goto label6;

     label4:
        b1 = 0;

        r3 = "valueOf";

        goto label6;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label6:
        $r4 = <org.mozilla.javascript.NativeBoolean: java.lang.Object BOOLEAN_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeBoolean: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.NativeBoolean $r3, $r10, r11;
        org.mozilla.javascript.EcmaError $r7;
        java.lang.Object[] r8;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0;
        java.lang.Boolean $r4, $r9;
        java.lang.String $r6, $r15, $r16;
        boolean $z0, $z1, $z2, z3;
        org.mozilla.javascript.Context r12;
        java.lang.IllegalArgumentException $r5;
        org.mozilla.javascript.Scriptable r2, r13;
        java.lang.Object $r1, $r14;

        r11 := @this: org.mozilla.javascript.NativeBoolean;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r12 := @parameter1: org.mozilla.javascript.Context;

        r13 := @parameter2: org.mozilla.javascript.Scriptable;

        r2 := @parameter3: org.mozilla.javascript.Scriptable;

        r8 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeBoolean: java.lang.Object BOOLEAN_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r14 = specialinvoke r11.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r12, r13, r2, r8);

        return $r14;

     label01:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        if $i0 != 1 goto label03;

        $z2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object[],int)>(r8, 0);

        if r2 != null goto label02;

        $r10 = new org.mozilla.javascript.NativeBoolean;

        specialinvoke $r10.<org.mozilla.javascript.NativeBoolean: void <init>(boolean)>($z2);

        return $r10;

     label02:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z2);

        return $r9;

     label03:
        $z1 = r2 instanceof org.mozilla.javascript.NativeBoolean;

        if $z1 != 0 goto label04;

        $r7 = staticinvoke <org.mozilla.javascript.NativeBoolean: org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject)>(r0);

        throw $r7;

     label04:
        $r3 = (org.mozilla.javascript.NativeBoolean) r2;

        z3 = $r3.<org.mozilla.javascript.NativeBoolean: boolean booleanValue>;

        tableswitch($i0)
        {
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label11;
            default: goto label12;
        };

     label05:
        if z3 == 0 goto label06;

        $r15 = "true";

        goto label07;

     label06:
        $r15 = "false";

     label07:
        return $r15;

     label08:
        if z3 == 0 goto label09;

        $r16 = "(new Boolean(true))";

        goto label10;

     label09:
        $r16 = "(new Boolean(false))";

     label10:
        return $r16;

     label11:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z3);

        return $r4;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    protected int findPrototypeId(java.lang.String)
    {
        org.mozilla.javascript.NativeBoolean r1;
        char $c1;
        byte b2;
        int $i0, $i3, $i4;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeBoolean;

        r0 := @parameter0: java.lang.String;

        b2 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 7 goto label1;

        r2 = "valueOf";

        r5 = "valueOf";

        r4 = "valueOf";

        r3 = "valueOf";

        b2 = 4;

        goto label4;

     label1:
        if $i0 != 8 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i3 = (int) $c1;

        if $i3 != 111 goto label2;

        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b2 = 3;

        goto label4;

     label2:
        $i4 = (int) $c1;

        if $i4 != 116 goto label4;

        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b2 = 2;

        goto label4;

     label3:
        if $i0 != 11 goto label4;

        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b2 = 1;

     label4:
        if r3 == null goto label5;

        if r4 == r0 goto label5;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label5;

        b2 = 0;

     label5:
        return b2;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeBoolean: int MAX_PROTOTYPE_ID> = 4;

        <org.mozilla.javascript.NativeBoolean: int Id_valueOf> = 4;

        <org.mozilla.javascript.NativeBoolean: int Id_toSource> = 3;

        <org.mozilla.javascript.NativeBoolean: int Id_toString> = 2;

        <org.mozilla.javascript.NativeBoolean: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeBoolean: long serialVersionUID> = -3716996899943880933L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeBoolean: java.lang.Object BOOLEAN_TAG> = $r0;

        return;
    }
}
