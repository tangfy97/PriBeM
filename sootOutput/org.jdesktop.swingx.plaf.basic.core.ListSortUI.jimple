public final class org.jdesktop.swingx.plaf.basic.core.ListSortUI extends java.lang.Object
{
    private javax.swing.RowSorter sorter;
    private org.jdesktop.swingx.JXList list;
    private javax.swing.ListSelectionModel modelSelection;
    private int modelLeadIndex;
    private boolean syncingSelection;
    private int[] lastModelSelection;
    private boolean sorterChanged;
    private boolean ignoreSortChange;
    private javax.swing.event.RowSorterListener sorterListener;

    public void <init>(org.jdesktop.swingx.JXList, javax.swing.RowSorter)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        java.lang.IllegalStateException $r10;
        javax.swing.event.RowSorterListener $r8, $r9;
        org.jdesktop.swingx.JXList r4, $r6;
        javax.swing.RowSorter r1, $r3, $r7;
        java.lang.Object $r2, $r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r4 := @parameter0: org.jdesktop.swingx.JXList;

        r1 := @parameter1: javax.swing.RowSorter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r1, "RowSorter must not be null");

        $r3 = (javax.swing.RowSorter) $r2;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter> = $r3;

        $r5 = staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r4, "list must not be null");

        $r6 = (org.jdesktop.swingx.JXList) $r5;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list> = $r6;

        $r7 = virtualinvoke r4.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        if r1 == $r7 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("sorter must be same as the one on list");

        throw $r10;

     label1:
        $r8 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.event.RowSorterListener createRowSorterListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.event.RowSorterListener sorterListener> = $r8;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.event.RowSorterListener sorterListener>;

        virtualinvoke r1.<javax.swing.RowSorter: void addRowSorterListener(javax.swing.event.RowSorterListener)>($r9);

        return;
    }

    public void dispose()
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        javax.swing.event.RowSorterListener $r2;
        javax.swing.RowSorter $r1, $r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        if $r1 == null goto label1;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.event.RowSorterListener sorterListener>;

        virtualinvoke $r3.<javax.swing.RowSorter: void removeRowSorterListener(javax.swing.event.RowSorterListener)>($r2);

     label1:
        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list> = null;

        return;
    }

    public void modelChanged(javax.swing.event.ListDataEvent)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r2;
        javax.swing.event.ListDataEvent r1;
        int $i0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange $r0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r1 := @parameter0: javax.swing.event.ListDataEvent;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: void <init>(javax.swing.event.ListDataEvent)>(r1);

        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void prepareForChange(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>($r0);

        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void notifySorter(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>($r0);

        $i0 = $r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int type>;

        if $i0 == 0 goto label1;

        r2.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean sorterChanged> = 1;

     label1:
        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void processChange(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>($r0);

        return;
    }

    public void viewSelectionChanged(javax.swing.event.ListSelectionEvent)
    {
        javax.swing.ListSelectionModel $r1;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        javax.swing.event.ListSelectionEvent r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r2 := @parameter0: javax.swing.event.ListSelectionEvent;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean syncingSelection>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        if $r1 == null goto label1;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection> = null;

     label1:
        return;
    }

    protected void sortedChanged(javax.swing.event.RowSorterEvent)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        org.jdesktop.swingx.JXList $r2;
        javax.swing.event.RowSorterEvent r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r1 := @parameter0: javax.swing.event.RowSorterEvent;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean sorterChanged> = 1;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean ignoreSortChange>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void prepareForChange(javax.swing.event.RowSorterEvent)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void processChange(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>(null);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void invalidateCellSizeCache()>();

     label1:
        return;
    }

    private void prepareForChange(javax.swing.event.RowSorterEvent)
    {
        javax.swing.ListSelectionModel $r2, $r3, $r7, $r8, $r9;
        javax.swing.DefaultListSelectionModel $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9;
        javax.swing.RowSorter $r4, $r5;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;
        javax.swing.event.RowSorterEvent r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: javax.swing.event.RowSorterEvent;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "sorter event not null");

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        if $r2 != null goto label4;

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i0 = virtualinvoke $r4.<javax.swing.RowSorter: int getViewRowCount()>();

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i1 = virtualinvoke $r5.<javax.swing.RowSorter: int getModelRowCount()>();

        if $i0 == $i1 goto label4;

        $r10 = new javax.swing.DefaultListSelectionModel;

        specialinvoke $r10.<javax.swing.DefaultListSelectionModel: void <init>()>();

        r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection> = $r10;

        $r7 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel getViewSelectionModel()>();

        $i2 = interfaceinvoke $r7.<javax.swing.ListSelectionModel: int getMinSelectionIndex()>();

        $i3 = interfaceinvoke $r7.<javax.swing.ListSelectionModel: int getMaxSelectionIndex()>();

        i7 = $i2;

     label1:
        if i7 > $i3 goto label3;

        $z0 = interfaceinvoke $r7.<javax.swing.ListSelectionModel: boolean isSelectedIndex(int)>(i7);

        if $z0 == 0 goto label2;

        $i6 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToModel(javax.swing.event.RowSorterEvent,int)>(r0, i7);

        $i9 = (int) -1;

        if $i6 == $i9 goto label2;

        $r9 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        interfaceinvoke $r9.<javax.swing.ListSelectionModel: void addSelectionInterval(int,int)>($i6, $i6);

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $i4 = interfaceinvoke $r7.<javax.swing.ListSelectionModel: int getLeadSelectionIndex()>();

        $i5 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToModel(javax.swing.event.RowSorterEvent,int)>(r0, $i4);

        $r8 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        staticinvoke <org.jdesktop.swingx.SwingXUtilities: void setLeadAnchorWithoutSelection(javax.swing.ListSelectionModel,int,int)>($r8, $i5, $i5);

        goto label5;

     label4:
        $r3 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        if $r3 != null goto label5;

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void cacheModelSelection(javax.swing.event.RowSorterEvent)>(r0);

     label5:
        return;
    }

    private void prepareForChange(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)
    {
        javax.swing.ListSelectionModel $r2, $r3, $r4;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "table event not null");

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: boolean allRowsChanged>;

        if $z0 == 0 goto label1;

        r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection> = null;

        goto label6;

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        if $r2 == null goto label5;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int type>;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label4;
        };

     label2:
        $r3 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void removeIndexInterval(int,int)>($i2, $i1);

        goto label6;

     label3:
        $r4 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        interfaceinvoke $r4.<javax.swing.ListSelectionModel: void insertIndexInterval(int,int,boolean)>($i4, $i3, 1);

        goto label6;

     label4:
        goto label6;

     label5:
        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void cacheModelSelection(javax.swing.event.RowSorterEvent)>(null);

     label6:
        return;
    }

    private void cacheModelSelection(javax.swing.event.RowSorterEvent)
    {
        javax.swing.ListSelectionModel $r3;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        int[] $r2;
        int $i0, $i1;
        javax.swing.event.RowSorterEvent r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r1 := @parameter0: javax.swing.event.RowSorterEvent;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int[] convertSelectionToModel(javax.swing.event.RowSorterEvent)>(r1);

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int[] lastModelSelection> = $r2;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel getViewSelectionModel()>();

        $i0 = interfaceinvoke $r3.<javax.swing.ListSelectionModel: int getLeadSelectionIndex()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToModel(javax.swing.event.RowSorterEvent,int)>(r1, $i0);

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int modelLeadIndex> = $i1;

        return;
    }

    private void processChange(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)
    {
        javax.swing.ListSelectionModel $r2;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        if r0 == null goto label1;

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: boolean allRowsChanged>;

        if $z1 == 0 goto label1;

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void allChanged()>();

        $r2 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel getViewSelectionModel()>();

        interfaceinvoke $r2.<javax.swing.ListSelectionModel: void clearSelection()>();

        goto label2;

     label1:
        $z0 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean sorterChanged>;

        if $z0 == 0 goto label2;

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void restoreSelection(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>(r0);

     label2:
        return;
    }

    private void restoreSelection(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)
    {
        javax.swing.ListSelectionModel $r2, $r3, $r4, $r5, $r6, $r8;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r10;
        int[] $r1, $r11;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        javax.swing.RowSorter $r7, $r9;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r10 := @parameter0: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean syncingSelection> = 1;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int[] lastModelSelection>;

        if $r1 == null goto label1;

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int[] lastModelSelection>;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int modelLeadIndex>;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void restoreSortingSelection(int[],int,org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)>($r11, $i4, r10);

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int[] lastModelSelection> = null;

        goto label6;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        if $r2 == null goto label6;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel getViewSelectionModel()>();

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setValueIsAdjusting(boolean)>(1);

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void clearSelection()>();

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $i0 = interfaceinvoke $r4.<javax.swing.ListSelectionModel: int getMinSelectionIndex()>();

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $i1 = interfaceinvoke $r5.<javax.swing.ListSelectionModel: int getMaxSelectionIndex()>();

        i5 = $i0;

     label2:
        if i5 > $i1 goto label4;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $z0 = interfaceinvoke $r8.<javax.swing.ListSelectionModel: boolean isSelectedIndex(int)>(i5);

        if $z0 == 0 goto label3;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i3 = virtualinvoke $r9.<javax.swing.RowSorter: int convertRowIndexToView(int)>(i5);

        $i8 = (int) -1;

        if $i3 == $i8 goto label3;

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void addSelectionInterval(int,int)>($i3, $i3);

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection>;

        $i2 = interfaceinvoke $r6.<javax.swing.ListSelectionModel: int getLeadSelectionIndex()>();

        i6 = $i2;

        $i10 = (int) -1;

        if $i2 == $i10 goto label5;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        i6 = virtualinvoke $r7.<javax.swing.RowSorter: int convertRowIndexToView(int)>($i2);

     label5:
        staticinvoke <org.jdesktop.swingx.SwingXUtilities: void setLeadAnchorWithoutSelection(javax.swing.ListSelectionModel,int,int)>($r3, i6, i6);

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setValueIsAdjusting(boolean)>(0);

     label6:
        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean syncingSelection> = 0;

        return;
    }

    private void restoreSortingSelection(int[], int, org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)
    {
        javax.swing.ListSelectionModel $r3;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r2;
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, $i16, $i18, $i20;
        org.jdesktop.swingx.JXList $r4;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: int[];

        i12 := @parameter1: int;

        r2 := @parameter2: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        $i0 = lengthof r0;

        i13 = $i0 - 1;

     label1:
        if i13 < 0 goto label2;

        $i10 = r0[i13];

        $i11 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToView(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange,int)>(r2, $i10);

        r0[i13] = $i11;

        $i16 = (int) -1;

        i13 = i13 + $i16;

        goto label1;

     label2:
        $i1 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToView(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange,int)>(r2, i12);

        $i2 = lengthof r0;

        if $i2 == 0 goto label3;

        $i3 = lengthof r0;

        if $i3 != 1 goto label4;

        $i8 = r0[0];

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list>;

        $i9 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: int getSelectedIndex()>();

        if $i8 != $i9 goto label4;

     label3:
        return;

     label4:
        $r3 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel getViewSelectionModel()>();

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setValueIsAdjusting(boolean)>(1);

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void clearSelection()>();

        $i4 = lengthof r0;

        i14 = $i4 - 1;

     label5:
        if i14 < 0 goto label7;

        $i5 = r0[i14];

        $i18 = (int) -1;

        if $i5 == $i18 goto label6;

        $i7 = r0[i14];

        $i6 = r0[i14];

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void addSelectionInterval(int,int)>($i7, $i6);

     label6:
        $i20 = (int) -1;

        i14 = i14 + $i20;

        goto label5;

     label7:
        staticinvoke <org.jdesktop.swingx.SwingXUtilities: void setLeadAnchorWithoutSelection(javax.swing.ListSelectionModel,int,int)>($r3, $i1, $i1);

        interfaceinvoke $r3.<javax.swing.ListSelectionModel: void setValueIsAdjusting(boolean)>(0);

        return;
    }

    private int convertRowIndexToView(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange, int)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i24, $i26, $i28;
        javax.swing.RowSorter $r2, $r3, $r4, $r5;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $i20 = (int) -1;

        return $i20;

     label1:
        if r0 == null goto label6;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        if i0 < $i2 goto label6;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int type>;

        if $i3 != 1 goto label3;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int length>;

        $i14 = i0 + $i12;

        $i13 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int modelRowCount>;

        if $i14 < $i13 goto label2;

        $i22 = (int) -1;

        return $i22;

     label2:
        $r4 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i15 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int length>;

        $i16 = i0 + $i15;

        $i17 = virtualinvoke $r4.<javax.swing.RowSorter: int convertRowIndexToView(int)>($i16);

        return $i17;

     label3:
        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int type>;

        if $i4 != 2 goto label6;

        $i5 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        if i0 > $i5 goto label4;

        $i24 = (int) -1;

        return $i24;

     label4:
        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int length>;

        $i8 = i0 - $i6;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int modelRowCount>;

        if $i8 < $i7 goto label5;

        $i26 = (int) -1;

        return $i26;

     label5:
        $r3 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int length>;

        $i10 = i0 - $i9;

        $i11 = virtualinvoke $r3.<javax.swing.RowSorter: int convertRowIndexToView(int)>($i10);

        return $i11;

     label6:
        $r5 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i18 = virtualinvoke $r5.<javax.swing.RowSorter: int getModelRowCount()>();

        if i0 < $i18 goto label7;

        $i28 = (int) -1;

        return $i28;

     label7:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i1 = virtualinvoke $r2.<javax.swing.RowSorter: int convertRowIndexToView(int)>(i0);

        return $i1;
    }

    private int convertRowIndexToModel(javax.swing.event.RowSorterEvent, int)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;
        int i0, $i1, $i2, $i3, $i4, $i6;
        javax.swing.RowSorter $r2, $r3;
        javax.swing.event.RowSorterEvent r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r0 := @parameter0: javax.swing.event.RowSorterEvent;

        i0 := @parameter1: int;

        if r0 == null goto label2;

        $i3 = virtualinvoke r0.<javax.swing.event.RowSorterEvent: int getPreviousRowCount()>();

        if $i3 != 0 goto label1;

        return i0;

     label1:
        $i4 = virtualinvoke r0.<javax.swing.event.RowSorterEvent: int convertPreviousRowIndexToModel(int)>(i0);

        return $i4;

     label2:
        if i0 < 0 goto label3;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i1 = virtualinvoke $r2.<javax.swing.RowSorter: int getViewRowCount()>();

        if i0 < $i1 goto label4;

     label3:
        $i6 = (int) -1;

        return $i6;

     label4:
        $r3 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i2 = virtualinvoke $r3.<javax.swing.RowSorter: int convertRowIndexToModel(int)>(i0);

        return $i2;
    }

    private int[] convertSelectionToModel(javax.swing.event.RowSorterEvent)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        int[] $r2;
        org.jdesktop.swingx.JXList $r1;
        int $i0, $i1, $i2, i3, $i5;
        javax.swing.event.RowSorterEvent r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r3 := @parameter0: javax.swing.event.RowSorterEvent;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int[] getSelectedIndices()>();

        $i0 = lengthof $r2;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $i1 = $r2[i3];

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int convertRowIndexToModel(javax.swing.event.RowSorterEvent,int)>(r3, $i1);

        $r2[i3] = $i2;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label2:
        return $r2;
    }

    private void notifySorter(org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange)
    {
        java.lang.Throwable $r6;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        javax.swing.RowSorter $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        r1 := @parameter0: org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange;

     label1:
        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean ignoreSortChange> = 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean sorterChanged> = 0;

        $z0 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: boolean allRowsChanged>;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        virtualinvoke $r5.<javax.swing.RowSorter: void allRowsChanged()>();

        goto label6;

     label2:
        $i0 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int type>;

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            default: goto label6;
        };

     label3:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i6 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        $i5 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        virtualinvoke $r4.<javax.swing.RowSorter: void rowsUpdated(int,int)>($i6, $i5);

        goto label6;

     label4:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i4 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        $i3 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        virtualinvoke $r3.<javax.swing.RowSorter: void rowsInserted(int,int)>($i4, $i3);

        goto label6;

     label5:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.RowSorter sorter>;

        $i2 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int startModelIndex>;

        $i1 = r1.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$ModelChange: int endModelIndex>;

        virtualinvoke $r2.<javax.swing.RowSorter: void rowsDeleted(int,int)>($i2, $i1);

     label6:
        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean ignoreSortChange> = 0;

        goto label9;

     label7:
        $r6 := @caughtexception;

     label8:
        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: boolean ignoreSortChange> = 0;

        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private javax.swing.ListSelectionModel getViewSelectionModel()
    {
        org.jdesktop.swingx.JXList $r1;
        javax.swing.ListSelectionModel $r2;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: javax.swing.ListSelectionModel getSelectionModel()>();

        return $r2;
    }

    private void allChanged()
    {
        int $i1;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: int modelLeadIndex> = $i1;

        r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: javax.swing.ListSelectionModel modelSelection> = null;

        return;
    }

    protected javax.swing.event.RowSorterListener createRowSorterListener()
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI$1 $r0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.ListSortUI$1;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.ListSortUI$1: void <init>(org.jdesktop.swingx.plaf.basic.core.ListSortUI)>(r1);

        return $r0;
    }
}
