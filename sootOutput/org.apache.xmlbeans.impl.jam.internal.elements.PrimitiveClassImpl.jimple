public final class org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl extends org.apache.xmlbeans.impl.jam.internal.elements.BuiltinClassImpl
{
    private static final java.lang.Object[][] PRIMITIVES;
    private static final java.util.Map NAME_TO_FD;
    private static final java.util.Map NAME_TO_CLASS;

    public static void mapNameToPrimitive(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, java.util.Map)
    {
        java.lang.Object[] $r4, $r9, $r12;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl $r1;
        java.lang.Object[][] $r0, $r3, $r8, $r11;
        java.util.Map r7;
        int $i0, i1;
        java.lang.String $r6;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r2;
        java.lang.Object $r5, $r10, $r13;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r7 := @parameter1: java.util.Map;

        i1 = 0;

     label1:
        $r0 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $i0 = lengthof $r0;

        if i1 >= $i0 goto label2;

        $r1 = new org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        $r3 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r4 = $r3[i1];

        $r5 = $r4[0];

        $r6 = (java.lang.String) $r5;

        specialinvoke $r1.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,java.lang.String)>(r2, $r6);

        $r8 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r9 = $r8[i1];

        $r10 = $r9[0];

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r1);

        $r11 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r12 = $r11[i1];

        $r13 = $r12[1];

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static java.lang.String getPrimitiveClassForName(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static boolean isPrimitive(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final java.lang.String getFieldDescriptor(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public static final java.lang.Class getPrimitiveClass(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Class $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_CLASS>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Class) $r2;

        return $r3;
    }

    private void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, java.lang.String)
    {
        java.lang.IllegalArgumentException $r4, $r10;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r0;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.util.Map $r3;
        java.lang.String r2, $r9;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.BuiltinClassImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        if r2 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null name");

        throw $r10;

     label1:
        $r3 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown primitive class \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: void reallySetSimpleName(java.lang.String)>(r2);

        return;
    }

    public java.lang.String getQualifiedName()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.String getSimpleName()>();

        return $r1;
    }

    public java.lang.String getFieldDescriptor()
    {
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.String $r2, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.String getSimpleName()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public boolean isAssignableFrom(org.apache.xmlbeans.impl.jam.JClass)
    {
        java.lang.String $r1, $r3;
        org.apache.xmlbeans.impl.jam.JClass r0;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: boolean isPrimitiveType()>();

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getSimpleName()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isPrimitiveType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        return 1;
    }

    public java.lang.Class getPrimitiveClass()
    {
        java.util.Map $r1;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl;

        $r1 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_CLASS>;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.String getSimpleName()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Class) $r3;

        return $r4;
    }

    static void <clinit>()
    {
        java.util.Map $r26, $r33;
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r21, $r23, $r28, $r30;
        java.util.HashMap $r17, $r18;
        java.lang.Object[][] $r0, $r19, $r20, $r22, $r27, $r29;
        int $i0, i1;
        java.lang.Class $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        java.lang.Object $r24, $r25, $r31, $r32;

        $r0 = newarray (java.lang.Object[])[8];

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = "int";

        $r1[1] = "I";

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[2] = $r2;

        $r0[0] = $r1;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "long";

        $r3[1] = "J";

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r0[1] = $r3;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = "boolean";

        $r5[1] = "Z";

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r5[2] = $r6;

        $r0[2] = $r5;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = "short";

        $r7[1] = "S";

        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        $r7[2] = $r8;

        $r0[3] = $r7;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "byte";

        $r9[1] = "B";

        $r10 = <java.lang.Byte: java.lang.Class TYPE>;

        $r9[2] = $r10;

        $r0[4] = $r9;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "char";

        $r11[1] = "C";

        $r12 = <java.lang.Character: java.lang.Class TYPE>;

        $r11[2] = $r12;

        $r0[5] = $r11;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = "float";

        $r13[1] = "F";

        $r14 = <java.lang.Float: java.lang.Class TYPE>;

        $r13[2] = $r14;

        $r0[6] = $r13;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = "double";

        $r15[1] = "D";

        $r16 = <java.lang.Double: java.lang.Class TYPE>;

        $r15[2] = $r16;

        $r0[7] = $r15;

        <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES> = $r0;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD> = $r17;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_CLASS> = $r18;

        i1 = 0;

     label1:
        $r19 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $i0 = lengthof $r19;

        if i1 >= $i0 goto label2;

        $r26 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_FD>;

        $r20 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r21 = $r20[i1];

        $r25 = $r21[0];

        $r22 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r23 = $r22[i1];

        $r24 = $r23[1];

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r24);

        $r33 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.util.Map NAME_TO_CLASS>;

        $r27 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r28 = $r27[i1];

        $r32 = $r28[0];

        $r29 = <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.Object[][] PRIMITIVES>;

        $r30 = $r29[i1];

        $r31 = $r30[2];

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r31);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
